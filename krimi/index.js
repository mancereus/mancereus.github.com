/**
 * @license
 * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */
// @version 0.7.22
(function() {
  window.WebComponents = window.WebComponents || {
    flags: {}
  };
  var file = "webcomponents-lite.js";
  var script = document.querySelector('script[src*="' + file + '"]');
  var flags = {};
  if (!flags.noOpts) {
    location.search.slice(1).split("&").forEach(function(option) {
      var parts = option.split("=");
      var match;
      if (parts[0] && (match = parts[0].match(/wc-(.+)/))) {
        flags[match[1]] = parts[1] || true;
      }
    });
    if (script) {
      for (var i = 0, a; a = script.attributes[i]; i++) {
        if (a.name !== "src") {
          flags[a.name] = a.value || true;
        }
      }
    }
    if (flags.log && flags.log.split) {
      var parts = flags.log.split(",");
      flags.log = {};
      parts.forEach(function(f) {
        flags.log[f] = true;
      });
    } else {
      flags.log = {};
    }
  }
  if (flags.register) {
    window.CustomElements = window.CustomElements || {
      flags: {}
    };
    window.CustomElements.flags.register = flags.register;
  }
  WebComponents.flags = flags;
})();

(function(scope) {
  "use strict";
  var hasWorkingUrl = false;
  if (!scope.forceJURL) {
    try {
      var u = new URL("b", "http://a");
      u.pathname = "c%20d";
      hasWorkingUrl = u.href === "http://a/c%20d";
    } catch (e) {}
  }
  if (hasWorkingUrl) return;
  var relative = Object.create(null);
  relative["ftp"] = 21;
  relative["file"] = 0;
  relative["gopher"] = 70;
  relative["http"] = 80;
  relative["https"] = 443;
  relative["ws"] = 80;
  relative["wss"] = 443;
  var relativePathDotMapping = Object.create(null);
  relativePathDotMapping["%2e"] = ".";
  relativePathDotMapping[".%2e"] = "..";
  relativePathDotMapping["%2e."] = "..";
  relativePathDotMapping["%2e%2e"] = "..";
  function isRelativeScheme(scheme) {
    return relative[scheme] !== undefined;
  }
  function invalid() {
    clear.call(this);
    this._isInvalid = true;
  }
  function IDNAToASCII(h) {
    if ("" == h) {
      invalid.call(this);
    }
    return h.toLowerCase();
  }
  function percentEscape(c) {
    var unicode = c.charCodeAt(0);
    if (unicode > 32 && unicode < 127 && [ 34, 35, 60, 62, 63, 96 ].indexOf(unicode) == -1) {
      return c;
    }
    return encodeURIComponent(c);
  }
  function percentEscapeQuery(c) {
    var unicode = c.charCodeAt(0);
    if (unicode > 32 && unicode < 127 && [ 34, 35, 60, 62, 96 ].indexOf(unicode) == -1) {
      return c;
    }
    return encodeURIComponent(c);
  }
  var EOF = undefined, ALPHA = /[a-zA-Z]/, ALPHANUMERIC = /[a-zA-Z0-9\+\-\.]/;
  function parse(input, stateOverride, base) {
    function err(message) {
      errors.push(message);
    }
    var state = stateOverride || "scheme start", cursor = 0, buffer = "", seenAt = false, seenBracket = false, errors = [];
    loop: while ((input[cursor - 1] != EOF || cursor == 0) && !this._isInvalid) {
      var c = input[cursor];
      switch (state) {
       case "scheme start":
        if (c && ALPHA.test(c)) {
          buffer += c.toLowerCase();
          state = "scheme";
        } else if (!stateOverride) {
          buffer = "";
          state = "no scheme";
          continue;
        } else {
          err("Invalid scheme.");
          break loop;
        }
        break;

       case "scheme":
        if (c && ALPHANUMERIC.test(c)) {
          buffer += c.toLowerCase();
        } else if (":" == c) {
          this._scheme = buffer;
          buffer = "";
          if (stateOverride) {
            break loop;
          }
          if (isRelativeScheme(this._scheme)) {
            this._isRelative = true;
          }
          if ("file" == this._scheme) {
            state = "relative";
          } else if (this._isRelative && base && base._scheme == this._scheme) {
            state = "relative or authority";
          } else if (this._isRelative) {
            state = "authority first slash";
          } else {
            state = "scheme data";
          }
        } else if (!stateOverride) {
          buffer = "";
          cursor = 0;
          state = "no scheme";
          continue;
        } else if (EOF == c) {
          break loop;
        } else {
          err("Code point not allowed in scheme: " + c);
          break loop;
        }
        break;

       case "scheme data":
        if ("?" == c) {
          this._query = "?";
          state = "query";
        } else if ("#" == c) {
          this._fragment = "#";
          state = "fragment";
        } else {
          if (EOF != c && "	" != c && "\n" != c && "\r" != c) {
            this._schemeData += percentEscape(c);
          }
        }
        break;

       case "no scheme":
        if (!base || !isRelativeScheme(base._scheme)) {
          err("Missing scheme.");
          invalid.call(this);
        } else {
          state = "relative";
          continue;
        }
        break;

       case "relative or authority":
        if ("/" == c && "/" == input[cursor + 1]) {
          state = "authority ignore slashes";
        } else {
          err("Expected /, got: " + c);
          state = "relative";
          continue;
        }
        break;

       case "relative":
        this._isRelative = true;
        if ("file" != this._scheme) this._scheme = base._scheme;
        if (EOF == c) {
          this._host = base._host;
          this._port = base._port;
          this._path = base._path.slice();
          this._query = base._query;
          this._username = base._username;
          this._password = base._password;
          break loop;
        } else if ("/" == c || "\\" == c) {
          if ("\\" == c) err("\\ is an invalid code point.");
          state = "relative slash";
        } else if ("?" == c) {
          this._host = base._host;
          this._port = base._port;
          this._path = base._path.slice();
          this._query = "?";
          this._username = base._username;
          this._password = base._password;
          state = "query";
        } else if ("#" == c) {
          this._host = base._host;
          this._port = base._port;
          this._path = base._path.slice();
          this._query = base._query;
          this._fragment = "#";
          this._username = base._username;
          this._password = base._password;
          state = "fragment";
        } else {
          var nextC = input[cursor + 1];
          var nextNextC = input[cursor + 2];
          if ("file" != this._scheme || !ALPHA.test(c) || nextC != ":" && nextC != "|" || EOF != nextNextC && "/" != nextNextC && "\\" != nextNextC && "?" != nextNextC && "#" != nextNextC) {
            this._host = base._host;
            this._port = base._port;
            this._username = base._username;
            this._password = base._password;
            this._path = base._path.slice();
            this._path.pop();
          }
          state = "relative path";
          continue;
        }
        break;

       case "relative slash":
        if ("/" == c || "\\" == c) {
          if ("\\" == c) {
            err("\\ is an invalid code point.");
          }
          if ("file" == this._scheme) {
            state = "file host";
          } else {
            state = "authority ignore slashes";
          }
        } else {
          if ("file" != this._scheme) {
            this._host = base._host;
            this._port = base._port;
            this._username = base._username;
            this._password = base._password;
          }
          state = "relative path";
          continue;
        }
        break;

       case "authority first slash":
        if ("/" == c) {
          state = "authority second slash";
        } else {
          err("Expected '/', got: " + c);
          state = "authority ignore slashes";
          continue;
        }
        break;

       case "authority second slash":
        state = "authority ignore slashes";
        if ("/" != c) {
          err("Expected '/', got: " + c);
          continue;
        }
        break;

       case "authority ignore slashes":
        if ("/" != c && "\\" != c) {
          state = "authority";
          continue;
        } else {
          err("Expected authority, got: " + c);
        }
        break;

       case "authority":
        if ("@" == c) {
          if (seenAt) {
            err("@ already seen.");
            buffer += "%40";
          }
          seenAt = true;
          for (var i = 0; i < buffer.length; i++) {
            var cp = buffer[i];
            if ("	" == cp || "\n" == cp || "\r" == cp) {
              err("Invalid whitespace in authority.");
              continue;
            }
            if (":" == cp && null === this._password) {
              this._password = "";
              continue;
            }
            var tempC = percentEscape(cp);
            null !== this._password ? this._password += tempC : this._username += tempC;
          }
          buffer = "";
        } else if (EOF == c || "/" == c || "\\" == c || "?" == c || "#" == c) {
          cursor -= buffer.length;
          buffer = "";
          state = "host";
          continue;
        } else {
          buffer += c;
        }
        break;

       case "file host":
        if (EOF == c || "/" == c || "\\" == c || "?" == c || "#" == c) {
          if (buffer.length == 2 && ALPHA.test(buffer[0]) && (buffer[1] == ":" || buffer[1] == "|")) {
            state = "relative path";
          } else if (buffer.length == 0) {
            state = "relative path start";
          } else {
            this._host = IDNAToASCII.call(this, buffer);
            buffer = "";
            state = "relative path start";
          }
          continue;
        } else if ("	" == c || "\n" == c || "\r" == c) {
          err("Invalid whitespace in file host.");
        } else {
          buffer += c;
        }
        break;

       case "host":
       case "hostname":
        if (":" == c && !seenBracket) {
          this._host = IDNAToASCII.call(this, buffer);
          buffer = "";
          state = "port";
          if ("hostname" == stateOverride) {
            break loop;
          }
        } else if (EOF == c || "/" == c || "\\" == c || "?" == c || "#" == c) {
          this._host = IDNAToASCII.call(this, buffer);
          buffer = "";
          state = "relative path start";
          if (stateOverride) {
            break loop;
          }
          continue;
        } else if ("	" != c && "\n" != c && "\r" != c) {
          if ("[" == c) {
            seenBracket = true;
          } else if ("]" == c) {
            seenBracket = false;
          }
          buffer += c;
        } else {
          err("Invalid code point in host/hostname: " + c);
        }
        break;

       case "port":
        if (/[0-9]/.test(c)) {
          buffer += c;
        } else if (EOF == c || "/" == c || "\\" == c || "?" == c || "#" == c || stateOverride) {
          if ("" != buffer) {
            var temp = parseInt(buffer, 10);
            if (temp != relative[this._scheme]) {
              this._port = temp + "";
            }
            buffer = "";
          }
          if (stateOverride) {
            break loop;
          }
          state = "relative path start";
          continue;
        } else if ("	" == c || "\n" == c || "\r" == c) {
          err("Invalid code point in port: " + c);
        } else {
          invalid.call(this);
        }
        break;

       case "relative path start":
        if ("\\" == c) err("'\\' not allowed in path.");
        state = "relative path";
        if ("/" != c && "\\" != c) {
          continue;
        }
        break;

       case "relative path":
        if (EOF == c || "/" == c || "\\" == c || !stateOverride && ("?" == c || "#" == c)) {
          if ("\\" == c) {
            err("\\ not allowed in relative path.");
          }
          var tmp;
          if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {
            buffer = tmp;
          }
          if (".." == buffer) {
            this._path.pop();
            if ("/" != c && "\\" != c) {
              this._path.push("");
            }
          } else if ("." == buffer && "/" != c && "\\" != c) {
            this._path.push("");
          } else if ("." != buffer) {
            if ("file" == this._scheme && this._path.length == 0 && buffer.length == 2 && ALPHA.test(buffer[0]) && buffer[1] == "|") {
              buffer = buffer[0] + ":";
            }
            this._path.push(buffer);
          }
          buffer = "";
          if ("?" == c) {
            this._query = "?";
            state = "query";
          } else if ("#" == c) {
            this._fragment = "#";
            state = "fragment";
          }
        } else if ("	" != c && "\n" != c && "\r" != c) {
          buffer += percentEscape(c);
        }
        break;

       case "query":
        if (!stateOverride && "#" == c) {
          this._fragment = "#";
          state = "fragment";
        } else if (EOF != c && "	" != c && "\n" != c && "\r" != c) {
          this._query += percentEscapeQuery(c);
        }
        break;

       case "fragment":
        if (EOF != c && "	" != c && "\n" != c && "\r" != c) {
          this._fragment += c;
        }
        break;
      }
      cursor++;
    }
  }
  function clear() {
    this._scheme = "";
    this._schemeData = "";
    this._username = "";
    this._password = null;
    this._host = "";
    this._port = "";
    this._path = [];
    this._query = "";
    this._fragment = "";
    this._isInvalid = false;
    this._isRelative = false;
  }
  function jURL(url, base) {
    if (base !== undefined && !(base instanceof jURL)) base = new jURL(String(base));
    this._url = url;
    clear.call(this);
    var input = url.replace(/^[ \t\r\n\f]+|[ \t\r\n\f]+$/g, "");
    parse.call(this, input, null, base);
  }
  jURL.prototype = {
    toString: function() {
      return this.href;
    },
    get href() {
      if (this._isInvalid) return this._url;
      var authority = "";
      if ("" != this._username || null != this._password) {
        authority = this._username + (null != this._password ? ":" + this._password : "") + "@";
      }
      return this.protocol + (this._isRelative ? "//" + authority + this.host : "") + this.pathname + this._query + this._fragment;
    },
    set href(href) {
      clear.call(this);
      parse.call(this, href);
    },
    get protocol() {
      return this._scheme + ":";
    },
    set protocol(protocol) {
      if (this._isInvalid) return;
      parse.call(this, protocol + ":", "scheme start");
    },
    get host() {
      return this._isInvalid ? "" : this._port ? this._host + ":" + this._port : this._host;
    },
    set host(host) {
      if (this._isInvalid || !this._isRelative) return;
      parse.call(this, host, "host");
    },
    get hostname() {
      return this._host;
    },
    set hostname(hostname) {
      if (this._isInvalid || !this._isRelative) return;
      parse.call(this, hostname, "hostname");
    },
    get port() {
      return this._port;
    },
    set port(port) {
      if (this._isInvalid || !this._isRelative) return;
      parse.call(this, port, "port");
    },
    get pathname() {
      return this._isInvalid ? "" : this._isRelative ? "/" + this._path.join("/") : this._schemeData;
    },
    set pathname(pathname) {
      if (this._isInvalid || !this._isRelative) return;
      this._path = [];
      parse.call(this, pathname, "relative path start");
    },
    get search() {
      return this._isInvalid || !this._query || "?" == this._query ? "" : this._query;
    },
    set search(search) {
      if (this._isInvalid || !this._isRelative) return;
      this._query = "?";
      if ("?" == search[0]) search = search.slice(1);
      parse.call(this, search, "query");
    },
    get hash() {
      return this._isInvalid || !this._fragment || "#" == this._fragment ? "" : this._fragment;
    },
    set hash(hash) {
      if (this._isInvalid) return;
      this._fragment = "#";
      if ("#" == hash[0]) hash = hash.slice(1);
      parse.call(this, hash, "fragment");
    },
    get origin() {
      var host;
      if (this._isInvalid || !this._scheme) {
        return "";
      }
      switch (this._scheme) {
       case "data":
       case "file":
       case "javascript":
       case "mailto":
        return "null";
      }
      host = this.host;
      if (!host) {
        return "";
      }
      return this._scheme + "://" + host;
    }
  };
  var OriginalURL = scope.URL;
  if (OriginalURL) {
    jURL.createObjectURL = function(blob) {
      return OriginalURL.createObjectURL.apply(OriginalURL, arguments);
    };
    jURL.revokeObjectURL = function(url) {
      OriginalURL.revokeObjectURL(url);
    };
  }
  scope.URL = jURL;
})(self);

if (typeof WeakMap === "undefined") {
  (function() {
    var defineProperty = Object.defineProperty;
    var counter = Date.now() % 1e9;
    var WeakMap = function() {
      this.name = "__st" + (Math.random() * 1e9 >>> 0) + (counter++ + "__");
    };
    WeakMap.prototype = {
      set: function(key, value) {
        var entry = key[this.name];
        if (entry && entry[0] === key) entry[1] = value; else defineProperty(key, this.name, {
          value: [ key, value ],
          writable: true
        });
        return this;
      },
      get: function(key) {
        var entry;
        return (entry = key[this.name]) && entry[0] === key ? entry[1] : undefined;
      },
      "delete": function(key) {
        var entry = key[this.name];
        if (!entry || entry[0] !== key) return false;
        entry[0] = entry[1] = undefined;
        return true;
      },
      has: function(key) {
        var entry = key[this.name];
        if (!entry) return false;
        return entry[0] === key;
      }
    };
    window.WeakMap = WeakMap;
  })();
}

(function(global) {
  if (global.JsMutationObserver) {
    return;
  }
  var registrationsTable = new WeakMap();
  var setImmediate;
  if (/Trident|Edge/.test(navigator.userAgent)) {
    setImmediate = setTimeout;
  } else if (window.setImmediate) {
    setImmediate = window.setImmediate;
  } else {
    var setImmediateQueue = [];
    var sentinel = String(Math.random());
    window.addEventListener("message", function(e) {
      if (e.data === sentinel) {
        var queue = setImmediateQueue;
        setImmediateQueue = [];
        queue.forEach(function(func) {
          func();
        });
      }
    });
    setImmediate = function(func) {
      setImmediateQueue.push(func);
      window.postMessage(sentinel, "*");
    };
  }
  var isScheduled = false;
  var scheduledObservers = [];
  function scheduleCallback(observer) {
    scheduledObservers.push(observer);
    if (!isScheduled) {
      isScheduled = true;
      setImmediate(dispatchCallbacks);
    }
  }
  function wrapIfNeeded(node) {
    return window.ShadowDOMPolyfill && window.ShadowDOMPolyfill.wrapIfNeeded(node) || node;
  }
  function dispatchCallbacks() {
    isScheduled = false;
    var observers = scheduledObservers;
    scheduledObservers = [];
    observers.sort(function(o1, o2) {
      return o1.uid_ - o2.uid_;
    });
    var anyNonEmpty = false;
    observers.forEach(function(observer) {
      var queue = observer.takeRecords();
      removeTransientObserversFor(observer);
      if (queue.length) {
        observer.callback_(queue, observer);
        anyNonEmpty = true;
      }
    });
    if (anyNonEmpty) dispatchCallbacks();
  }
  function removeTransientObserversFor(observer) {
    observer.nodes_.forEach(function(node) {
      var registrations = registrationsTable.get(node);
      if (!registrations) return;
      registrations.forEach(function(registration) {
        if (registration.observer === observer) registration.removeTransientObservers();
      });
    });
  }
  function forEachAncestorAndObserverEnqueueRecord(target, callback) {
    for (var node = target; node; node = node.parentNode) {
      var registrations = registrationsTable.get(node);
      if (registrations) {
        for (var j = 0; j < registrations.length; j++) {
          var registration = registrations[j];
          var options = registration.options;
          if (node !== target && !options.subtree) continue;
          var record = callback(options);
          if (record) registration.enqueue(record);
        }
      }
    }
  }
  var uidCounter = 0;
  function JsMutationObserver(callback) {
    this.callback_ = callback;
    this.nodes_ = [];
    this.records_ = [];
    this.uid_ = ++uidCounter;
  }
  JsMutationObserver.prototype = {
    observe: function(target, options) {
      target = wrapIfNeeded(target);
      if (!options.childList && !options.attributes && !options.characterData || options.attributeOldValue && !options.attributes || options.attributeFilter && options.attributeFilter.length && !options.attributes || options.characterDataOldValue && !options.characterData) {
        throw new SyntaxError();
      }
      var registrations = registrationsTable.get(target);
      if (!registrations) registrationsTable.set(target, registrations = []);
      var registration;
      for (var i = 0; i < registrations.length; i++) {
        if (registrations[i].observer === this) {
          registration = registrations[i];
          registration.removeListeners();
          registration.options = options;
          break;
        }
      }
      if (!registration) {
        registration = new Registration(this, target, options);
        registrations.push(registration);
        this.nodes_.push(target);
      }
      registration.addListeners();
    },
    disconnect: function() {
      this.nodes_.forEach(function(node) {
        var registrations = registrationsTable.get(node);
        for (var i = 0; i < registrations.length; i++) {
          var registration = registrations[i];
          if (registration.observer === this) {
            registration.removeListeners();
            registrations.splice(i, 1);
            break;
          }
        }
      }, this);
      this.records_ = [];
    },
    takeRecords: function() {
      var copyOfRecords = this.records_;
      this.records_ = [];
      return copyOfRecords;
    }
  };
  function MutationRecord(type, target) {
    this.type = type;
    this.target = target;
    this.addedNodes = [];
    this.removedNodes = [];
    this.previousSibling = null;
    this.nextSibling = null;
    this.attributeName = null;
    this.attributeNamespace = null;
    this.oldValue = null;
  }
  function copyMutationRecord(original) {
    var record = new MutationRecord(original.type, original.target);
    record.addedNodes = original.addedNodes.slice();
    record.removedNodes = original.removedNodes.slice();
    record.previousSibling = original.previousSibling;
    record.nextSibling = original.nextSibling;
    record.attributeName = original.attributeName;
    record.attributeNamespace = original.attributeNamespace;
    record.oldValue = original.oldValue;
    return record;
  }
  var currentRecord, recordWithOldValue;
  function getRecord(type, target) {
    return currentRecord = new MutationRecord(type, target);
  }
  function getRecordWithOldValue(oldValue) {
    if (recordWithOldValue) return recordWithOldValue;
    recordWithOldValue = copyMutationRecord(currentRecord);
    recordWithOldValue.oldValue = oldValue;
    return recordWithOldValue;
  }
  function clearRecords() {
    currentRecord = recordWithOldValue = undefined;
  }
  function recordRepresentsCurrentMutation(record) {
    return record === recordWithOldValue || record === currentRecord;
  }
  function selectRecord(lastRecord, newRecord) {
    if (lastRecord === newRecord) return lastRecord;
    if (recordWithOldValue && recordRepresentsCurrentMutation(lastRecord)) return recordWithOldValue;
    return null;
  }
  function Registration(observer, target, options) {
    this.observer = observer;
    this.target = target;
    this.options = options;
    this.transientObservedNodes = [];
  }
  Registration.prototype = {
    enqueue: function(record) {
      var records = this.observer.records_;
      var length = records.length;
      if (records.length > 0) {
        var lastRecord = records[length - 1];
        var recordToReplaceLast = selectRecord(lastRecord, record);
        if (recordToReplaceLast) {
          records[length - 1] = recordToReplaceLast;
          return;
        }
      } else {
        scheduleCallback(this.observer);
      }
      records[length] = record;
    },
    addListeners: function() {
      this.addListeners_(this.target);
    },
    addListeners_: function(node) {
      var options = this.options;
      if (options.attributes) node.addEventListener("DOMAttrModified", this, true);
      if (options.characterData) node.addEventListener("DOMCharacterDataModified", this, true);
      if (options.childList) node.addEventListener("DOMNodeInserted", this, true);
      if (options.childList || options.subtree) node.addEventListener("DOMNodeRemoved", this, true);
    },
    removeListeners: function() {
      this.removeListeners_(this.target);
    },
    removeListeners_: function(node) {
      var options = this.options;
      if (options.attributes) node.removeEventListener("DOMAttrModified", this, true);
      if (options.characterData) node.removeEventListener("DOMCharacterDataModified", this, true);
      if (options.childList) node.removeEventListener("DOMNodeInserted", this, true);
      if (options.childList || options.subtree) node.removeEventListener("DOMNodeRemoved", this, true);
    },
    addTransientObserver: function(node) {
      if (node === this.target) return;
      this.addListeners_(node);
      this.transientObservedNodes.push(node);
      var registrations = registrationsTable.get(node);
      if (!registrations) registrationsTable.set(node, registrations = []);
      registrations.push(this);
    },
    removeTransientObservers: function() {
      var transientObservedNodes = this.transientObservedNodes;
      this.transientObservedNodes = [];
      transientObservedNodes.forEach(function(node) {
        this.removeListeners_(node);
        var registrations = registrationsTable.get(node);
        for (var i = 0; i < registrations.length; i++) {
          if (registrations[i] === this) {
            registrations.splice(i, 1);
            break;
          }
        }
      }, this);
    },
    handleEvent: function(e) {
      e.stopImmediatePropagation();
      switch (e.type) {
       case "DOMAttrModified":
        var name = e.attrName;
        var namespace = e.relatedNode.namespaceURI;
        var target = e.target;
        var record = new getRecord("attributes", target);
        record.attributeName = name;
        record.attributeNamespace = namespace;
        var oldValue = e.attrChange === MutationEvent.ADDITION ? null : e.prevValue;
        forEachAncestorAndObserverEnqueueRecord(target, function(options) {
          if (!options.attributes) return;
          if (options.attributeFilter && options.attributeFilter.length && options.attributeFilter.indexOf(name) === -1 && options.attributeFilter.indexOf(namespace) === -1) {
            return;
          }
          if (options.attributeOldValue) return getRecordWithOldValue(oldValue);
          return record;
        });
        break;

       case "DOMCharacterDataModified":
        var target = e.target;
        var record = getRecord("characterData", target);
        var oldValue = e.prevValue;
        forEachAncestorAndObserverEnqueueRecord(target, function(options) {
          if (!options.characterData) return;
          if (options.characterDataOldValue) return getRecordWithOldValue(oldValue);
          return record;
        });
        break;

       case "DOMNodeRemoved":
        this.addTransientObserver(e.target);

       case "DOMNodeInserted":
        var changedNode = e.target;
        var addedNodes, removedNodes;
        if (e.type === "DOMNodeInserted") {
          addedNodes = [ changedNode ];
          removedNodes = [];
        } else {
          addedNodes = [];
          removedNodes = [ changedNode ];
        }
        var previousSibling = changedNode.previousSibling;
        var nextSibling = changedNode.nextSibling;
        var record = getRecord("childList", e.target.parentNode);
        record.addedNodes = addedNodes;
        record.removedNodes = removedNodes;
        record.previousSibling = previousSibling;
        record.nextSibling = nextSibling;
        forEachAncestorAndObserverEnqueueRecord(e.relatedNode, function(options) {
          if (!options.childList) return;
          return record;
        });
      }
      clearRecords();
    }
  };
  global.JsMutationObserver = JsMutationObserver;
  if (!global.MutationObserver) {
    global.MutationObserver = JsMutationObserver;
    JsMutationObserver._isPolyfilled = true;
  }
})(self);

(function() {
  var needsTemplate = typeof HTMLTemplateElement === "undefined";
  if (/Trident/.test(navigator.userAgent)) {
    (function() {
      var importNode = document.importNode;
      document.importNode = function() {
        var n = importNode.apply(document, arguments);
        if (n.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
          var f = document.createDocumentFragment();
          f.appendChild(n);
          return f;
        } else {
          return n;
        }
      };
    })();
  }
  var needsCloning = function() {
    if (!needsTemplate) {
      var t = document.createElement("template");
      var t2 = document.createElement("template");
      t2.content.appendChild(document.createElement("div"));
      t.content.appendChild(t2);
      var clone = t.cloneNode(true);
      return clone.content.childNodes.length === 0 || clone.content.firstChild.content.childNodes.length === 0;
    }
  }();
  var TEMPLATE_TAG = "template";
  var TemplateImpl = function() {};
  if (needsTemplate) {
    var contentDoc = document.implementation.createHTMLDocument("template");
    var canDecorate = true;
    var templateStyle = document.createElement("style");
    templateStyle.textContent = TEMPLATE_TAG + "{display:none;}";
    var head = document.head;
    head.insertBefore(templateStyle, head.firstElementChild);
    TemplateImpl.prototype = Object.create(HTMLElement.prototype);
    TemplateImpl.decorate = function(template) {
      if (template.content) {
        return;
      }
      template.content = contentDoc.createDocumentFragment();
      var child;
      while (child = template.firstChild) {
        template.content.appendChild(child);
      }
      template.cloneNode = function(deep) {
        return TemplateImpl.cloneNode(this, deep);
      };
      if (canDecorate) {
        try {
          Object.defineProperty(template, "innerHTML", {
            get: function() {
              var o = "";
              for (var e = this.content.firstChild; e; e = e.nextSibling) {
                o += e.outerHTML || escapeData(e.data);
              }
              return o;
            },
            set: function(text) {
              contentDoc.body.innerHTML = text;
              TemplateImpl.bootstrap(contentDoc);
              while (this.content.firstChild) {
                this.content.removeChild(this.content.firstChild);
              }
              while (contentDoc.body.firstChild) {
                this.content.appendChild(contentDoc.body.firstChild);
              }
            },
            configurable: true
          });
        } catch (err) {
          canDecorate = false;
        }
      }
      TemplateImpl.bootstrap(template.content);
    };
    TemplateImpl.bootstrap = function(doc) {
      var templates = doc.querySelectorAll(TEMPLATE_TAG);
      for (var i = 0, l = templates.length, t; i < l && (t = templates[i]); i++) {
        TemplateImpl.decorate(t);
      }
    };
    document.addEventListener("DOMContentLoaded", function() {
      TemplateImpl.bootstrap(document);
    });
    var createElement = document.createElement;
    document.createElement = function() {
      "use strict";
      var el = createElement.apply(document, arguments);
      if (el.localName === "template") {
        TemplateImpl.decorate(el);
      }
      return el;
    };
    var escapeDataRegExp = /[&\u00A0<>]/g;
    function escapeReplace(c) {
      switch (c) {
       case "&":
        return "&amp;";

       case "<":
        return "&lt;";

       case ">":
        return "&gt;";

       case " ":
        return "&nbsp;";
      }
    }
    function escapeData(s) {
      return s.replace(escapeDataRegExp, escapeReplace);
    }
  }
  if (needsTemplate || needsCloning) {
    var nativeCloneNode = Node.prototype.cloneNode;
    TemplateImpl.cloneNode = function(template, deep) {
      var clone = nativeCloneNode.call(template, false);
      if (this.decorate) {
        this.decorate(clone);
      }
      if (deep) {
        clone.content.appendChild(nativeCloneNode.call(template.content, true));
        this.fixClonedDom(clone.content, template.content);
      }
      return clone;
    };
    TemplateImpl.fixClonedDom = function(clone, source) {
      if (!source.querySelectorAll) return;
      var s$ = source.querySelectorAll(TEMPLATE_TAG);
      var t$ = clone.querySelectorAll(TEMPLATE_TAG);
      for (var i = 0, l = t$.length, t, s; i < l; i++) {
        s = s$[i];
        t = t$[i];
        if (this.decorate) {
          this.decorate(s);
        }
        t.parentNode.replaceChild(s.cloneNode(true), t);
      }
    };
    var originalImportNode = document.importNode;
    Node.prototype.cloneNode = function(deep) {
      var dom = nativeCloneNode.call(this, deep);
      if (deep) {
        TemplateImpl.fixClonedDom(dom, this);
      }
      return dom;
    };
    document.importNode = function(element, deep) {
      if (element.localName === TEMPLATE_TAG) {
        return TemplateImpl.cloneNode(element, deep);
      } else {
        var dom = originalImportNode.call(document, element, deep);
        if (deep) {
          TemplateImpl.fixClonedDom(dom, element);
        }
        return dom;
      }
    };
    if (needsCloning) {
      HTMLTemplateElement.prototype.cloneNode = function(deep) {
        return TemplateImpl.cloneNode(this, deep);
      };
    }
  }
  if (needsTemplate) {
    window.HTMLTemplateElement = TemplateImpl;
  }
})();

(function(scope) {
  "use strict";
  if (!window.performance) {
    var start = Date.now();
    window.performance = {
      now: function() {
        return Date.now() - start;
      }
    };
  }
  if (!window.requestAnimationFrame) {
    window.requestAnimationFrame = function() {
      var nativeRaf = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;
      return nativeRaf ? function(callback) {
        return nativeRaf(function() {
          callback(performance.now());
        });
      } : function(callback) {
        return window.setTimeout(callback, 1e3 / 60);
      };
    }();
  }
  if (!window.cancelAnimationFrame) {
    window.cancelAnimationFrame = function() {
      return window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || function(id) {
        clearTimeout(id);
      };
    }();
  }
  var workingDefaultPrevented = function() {
    var e = document.createEvent("Event");
    e.initEvent("foo", true, true);
    e.preventDefault();
    return e.defaultPrevented;
  }();
  if (!workingDefaultPrevented) {
    var origPreventDefault = Event.prototype.preventDefault;
    Event.prototype.preventDefault = function() {
      if (!this.cancelable) {
        return;
      }
      origPreventDefault.call(this);
      Object.defineProperty(this, "defaultPrevented", {
        get: function() {
          return true;
        },
        configurable: true
      });
    };
  }
  var isIE = /Trident/.test(navigator.userAgent);
  if (!window.CustomEvent || isIE && typeof window.CustomEvent !== "function") {
    window.CustomEvent = function(inType, params) {
      params = params || {};
      var e = document.createEvent("CustomEvent");
      e.initCustomEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable), params.detail);
      return e;
    };
    window.CustomEvent.prototype = window.Event.prototype;
  }
  if (!window.Event || isIE && typeof window.Event !== "function") {
    var origEvent = window.Event;
    window.Event = function(inType, params) {
      params = params || {};
      var e = document.createEvent("Event");
      e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable));
      return e;
    };
    window.Event.prototype = origEvent.prototype;
  }
})(window.WebComponents);

window.HTMLImports = window.HTMLImports || {
  flags: {}
};

(function(scope) {
  var IMPORT_LINK_TYPE = "import";
  var useNative = Boolean(IMPORT_LINK_TYPE in document.createElement("link"));
  var hasShadowDOMPolyfill = Boolean(window.ShadowDOMPolyfill);
  var wrap = function(node) {
    return hasShadowDOMPolyfill ? window.ShadowDOMPolyfill.wrapIfNeeded(node) : node;
  };
  var rootDocument = wrap(document);
  var currentScriptDescriptor = {
    get: function() {
      var script = window.HTMLImports.currentScript || document.currentScript || (document.readyState !== "complete" ? document.scripts[document.scripts.length - 1] : null);
      return wrap(script);
    },
    configurable: true
  };
  Object.defineProperty(document, "_currentScript", currentScriptDescriptor);
  Object.defineProperty(rootDocument, "_currentScript", currentScriptDescriptor);
  var isIE = /Trident/.test(navigator.userAgent);
  function whenReady(callback, doc) {
    doc = doc || rootDocument;
    whenDocumentReady(function() {
      watchImportsLoad(callback, doc);
    }, doc);
  }
  var requiredReadyState = isIE ? "complete" : "interactive";
  var READY_EVENT = "readystatechange";
  function isDocumentReady(doc) {
    return doc.readyState === "complete" || doc.readyState === requiredReadyState;
  }
  function whenDocumentReady(callback, doc) {
    if (!isDocumentReady(doc)) {
      var checkReady = function() {
        if (doc.readyState === "complete" || doc.readyState === requiredReadyState) {
          doc.removeEventListener(READY_EVENT, checkReady);
          whenDocumentReady(callback, doc);
        }
      };
      doc.addEventListener(READY_EVENT, checkReady);
    } else if (callback) {
      callback();
    }
  }
  function markTargetLoaded(event) {
    event.target.__loaded = true;
  }
  function watchImportsLoad(callback, doc) {
    var imports = doc.querySelectorAll("link[rel=import]");
    var parsedCount = 0, importCount = imports.length, newImports = [], errorImports = [];
    function checkDone() {
      if (parsedCount == importCount && callback) {
        callback({
          allImports: imports,
          loadedImports: newImports,
          errorImports: errorImports
        });
      }
    }
    function loadedImport(e) {
      markTargetLoaded(e);
      newImports.push(this);
      parsedCount++;
      checkDone();
    }
    function errorLoadingImport(e) {
      errorImports.push(this);
      parsedCount++;
      checkDone();
    }
    if (importCount) {
      for (var i = 0, imp; i < importCount && (imp = imports[i]); i++) {
        if (isImportLoaded(imp)) {
          newImports.push(this);
          parsedCount++;
          checkDone();
        } else {
          imp.addEventListener("load", loadedImport);
          imp.addEventListener("error", errorLoadingImport);
        }
      }
    } else {
      checkDone();
    }
  }
  function isImportLoaded(link) {
    return useNative ? link.__loaded || link.import && link.import.readyState !== "loading" : link.__importParsed;
  }
  if (useNative) {
    new MutationObserver(function(mxns) {
      for (var i = 0, l = mxns.length, m; i < l && (m = mxns[i]); i++) {
        if (m.addedNodes) {
          handleImports(m.addedNodes);
        }
      }
    }).observe(document.head, {
      childList: true
    });
    function handleImports(nodes) {
      for (var i = 0, l = nodes.length, n; i < l && (n = nodes[i]); i++) {
        if (isImport(n)) {
          handleImport(n);
        }
      }
    }
    function isImport(element) {
      return element.localName === "link" && element.rel === "import";
    }
    function handleImport(element) {
      var loaded = element.import;
      if (loaded) {
        markTargetLoaded({
          target: element
        });
      } else {
        element.addEventListener("load", markTargetLoaded);
        element.addEventListener("error", markTargetLoaded);
      }
    }
    (function() {
      if (document.readyState === "loading") {
        var imports = document.querySelectorAll("link[rel=import]");
        for (var i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {
          handleImport(imp);
        }
      }
    })();
  }
  whenReady(function(detail) {
    window.HTMLImports.ready = true;
    window.HTMLImports.readyTime = new Date().getTime();
    var evt = rootDocument.createEvent("CustomEvent");
    evt.initCustomEvent("HTMLImportsLoaded", true, true, detail);
    rootDocument.dispatchEvent(evt);
  });
  scope.IMPORT_LINK_TYPE = IMPORT_LINK_TYPE;
  scope.useNative = useNative;
  scope.rootDocument = rootDocument;
  scope.whenReady = whenReady;
  scope.isIE = isIE;
})(window.HTMLImports);

(function(scope) {
  var modules = [];
  var addModule = function(module) {
    modules.push(module);
  };
  var initializeModules = function() {
    modules.forEach(function(module) {
      module(scope);
    });
  };
  scope.addModule = addModule;
  scope.initializeModules = initializeModules;
})(window.HTMLImports);

window.HTMLImports.addModule(function(scope) {
  var CSS_URL_REGEXP = /(url\()([^)]*)(\))/g;
  var CSS_IMPORT_REGEXP = /(@import[\s]+(?!url\())([^;]*)(;)/g;
  var path = {
    resolveUrlsInStyle: function(style, linkUrl) {
      var doc = style.ownerDocument;
      var resolver = doc.createElement("a");
      style.textContent = this.resolveUrlsInCssText(style.textContent, linkUrl, resolver);
      return style;
    },
    resolveUrlsInCssText: function(cssText, linkUrl, urlObj) {
      var r = this.replaceUrls(cssText, urlObj, linkUrl, CSS_URL_REGEXP);
      r = this.replaceUrls(r, urlObj, linkUrl, CSS_IMPORT_REGEXP);
      return r;
    },
    replaceUrls: function(text, urlObj, linkUrl, regexp) {
      return text.replace(regexp, function(m, pre, url, post) {
        var urlPath = url.replace(/["']/g, "");
        if (linkUrl) {
          urlPath = new URL(urlPath, linkUrl).href;
        }
        urlObj.href = urlPath;
        urlPath = urlObj.href;
        return pre + "'" + urlPath + "'" + post;
      });
    }
  };
  scope.path = path;
});

window.HTMLImports.addModule(function(scope) {
  var xhr = {
    async: true,
    ok: function(request) {
      return request.status >= 200 && request.status < 300 || request.status === 304 || request.status === 0;
    },
    load: function(url, next, nextContext) {
      var request = new XMLHttpRequest();
      if (scope.flags.debug || scope.flags.bust) {
        url += "?" + Math.random();
      }
      request.open("GET", url, xhr.async);
      request.addEventListener("readystatechange", function(e) {
        if (request.readyState === 4) {
          var redirectedUrl = null;
          try {
            var locationHeader = request.getResponseHeader("Location");
            if (locationHeader) {
              redirectedUrl = locationHeader.substr(0, 1) === "/" ? location.origin + locationHeader : locationHeader;
            }
          } catch (e) {
            console.error(e.message);
          }
          next.call(nextContext, !xhr.ok(request) && request, request.response || request.responseText, redirectedUrl);
        }
      });
      request.send();
      return request;
    },
    loadDocument: function(url, next, nextContext) {
      this.load(url, next, nextContext).responseType = "document";
    }
  };
  scope.xhr = xhr;
});

window.HTMLImports.addModule(function(scope) {
  var xhr = scope.xhr;
  var flags = scope.flags;
  var Loader = function(onLoad, onComplete) {
    this.cache = {};
    this.onload = onLoad;
    this.oncomplete = onComplete;
    this.inflight = 0;
    this.pending = {};
  };
  Loader.prototype = {
    addNodes: function(nodes) {
      this.inflight += nodes.length;
      for (var i = 0, l = nodes.length, n; i < l && (n = nodes[i]); i++) {
        this.require(n);
      }
      this.checkDone();
    },
    addNode: function(node) {
      this.inflight++;
      this.require(node);
      this.checkDone();
    },
    require: function(elt) {
      var url = elt.src || elt.href;
      elt.__nodeUrl = url;
      if (!this.dedupe(url, elt)) {
        this.fetch(url, elt);
      }
    },
    dedupe: function(url, elt) {
      if (this.pending[url]) {
        this.pending[url].push(elt);
        return true;
      }
      var resource;
      if (this.cache[url]) {
        this.onload(url, elt, this.cache[url]);
        this.tail();
        return true;
      }
      this.pending[url] = [ elt ];
      return false;
    },
    fetch: function(url, elt) {
      flags.load && console.log("fetch", url, elt);
      if (!url) {
        setTimeout(function() {
          this.receive(url, elt, {
            error: "href must be specified"
          }, null);
        }.bind(this), 0);
      } else if (url.match(/^data:/)) {
        var pieces = url.split(",");
        var header = pieces[0];
        var body = pieces[1];
        if (header.indexOf(";base64") > -1) {
          body = atob(body);
        } else {
          body = decodeURIComponent(body);
        }
        setTimeout(function() {
          this.receive(url, elt, null, body);
        }.bind(this), 0);
      } else {
        var receiveXhr = function(err, resource, redirectedUrl) {
          this.receive(url, elt, err, resource, redirectedUrl);
        }.bind(this);
        xhr.load(url, receiveXhr);
      }
    },
    receive: function(url, elt, err, resource, redirectedUrl) {
      this.cache[url] = resource;
      var $p = this.pending[url];
      for (var i = 0, l = $p.length, p; i < l && (p = $p[i]); i++) {
        this.onload(url, p, resource, err, redirectedUrl);
        this.tail();
      }
      this.pending[url] = null;
    },
    tail: function() {
      --this.inflight;
      this.checkDone();
    },
    checkDone: function() {
      if (!this.inflight) {
        this.oncomplete();
      }
    }
  };
  scope.Loader = Loader;
});

window.HTMLImports.addModule(function(scope) {
  var Observer = function(addCallback) {
    this.addCallback = addCallback;
    this.mo = new MutationObserver(this.handler.bind(this));
  };
  Observer.prototype = {
    handler: function(mutations) {
      for (var i = 0, l = mutations.length, m; i < l && (m = mutations[i]); i++) {
        if (m.type === "childList" && m.addedNodes.length) {
          this.addedNodes(m.addedNodes);
        }
      }
    },
    addedNodes: function(nodes) {
      if (this.addCallback) {
        this.addCallback(nodes);
      }
      for (var i = 0, l = nodes.length, n, loading; i < l && (n = nodes[i]); i++) {
        if (n.children && n.children.length) {
          this.addedNodes(n.children);
        }
      }
    },
    observe: function(root) {
      this.mo.observe(root, {
        childList: true,
        subtree: true
      });
    }
  };
  scope.Observer = Observer;
});

window.HTMLImports.addModule(function(scope) {
  var path = scope.path;
  var rootDocument = scope.rootDocument;
  var flags = scope.flags;
  var isIE = scope.isIE;
  var IMPORT_LINK_TYPE = scope.IMPORT_LINK_TYPE;
  var IMPORT_SELECTOR = "link[rel=" + IMPORT_LINK_TYPE + "]";
  var importParser = {
    documentSelectors: IMPORT_SELECTOR,
    importsSelectors: [ IMPORT_SELECTOR, "link[rel=stylesheet]:not([type])", "style:not([type])", "script:not([type])", 'script[type="application/javascript"]', 'script[type="text/javascript"]' ].join(","),
    map: {
      link: "parseLink",
      script: "parseScript",
      style: "parseStyle"
    },
    dynamicElements: [],
    parseNext: function() {
      var next = this.nextToParse();
      if (next) {
        this.parse(next);
      }
    },
    parse: function(elt) {
      if (this.isParsed(elt)) {
        flags.parse && console.log("[%s] is already parsed", elt.localName);
        return;
      }
      var fn = this[this.map[elt.localName]];
      if (fn) {
        this.markParsing(elt);
        fn.call(this, elt);
      }
    },
    parseDynamic: function(elt, quiet) {
      this.dynamicElements.push(elt);
      if (!quiet) {
        this.parseNext();
      }
    },
    markParsing: function(elt) {
      flags.parse && console.log("parsing", elt);
      this.parsingElement = elt;
    },
    markParsingComplete: function(elt) {
      elt.__importParsed = true;
      this.markDynamicParsingComplete(elt);
      if (elt.__importElement) {
        elt.__importElement.__importParsed = true;
        this.markDynamicParsingComplete(elt.__importElement);
      }
      this.parsingElement = null;
      flags.parse && console.log("completed", elt);
    },
    markDynamicParsingComplete: function(elt) {
      var i = this.dynamicElements.indexOf(elt);
      if (i >= 0) {
        this.dynamicElements.splice(i, 1);
      }
    },
    parseImport: function(elt) {
      elt.import = elt.__doc;
      if (window.HTMLImports.__importsParsingHook) {
        window.HTMLImports.__importsParsingHook(elt);
      }
      if (elt.import) {
        elt.import.__importParsed = true;
      }
      this.markParsingComplete(elt);
      if (elt.__resource && !elt.__error) {
        elt.dispatchEvent(new CustomEvent("load", {
          bubbles: false
        }));
      } else {
        elt.dispatchEvent(new CustomEvent("error", {
          bubbles: false
        }));
      }
      if (elt.__pending) {
        var fn;
        while (elt.__pending.length) {
          fn = elt.__pending.shift();
          if (fn) {
            fn({
              target: elt
            });
          }
        }
      }
      this.parseNext();
    },
    parseLink: function(linkElt) {
      if (nodeIsImport(linkElt)) {
        this.parseImport(linkElt);
      } else {
        linkElt.href = linkElt.href;
        this.parseGeneric(linkElt);
      }
    },
    parseStyle: function(elt) {
      var src = elt;
      elt = cloneStyle(elt);
      src.__appliedElement = elt;
      elt.__importElement = src;
      this.parseGeneric(elt);
    },
    parseGeneric: function(elt) {
      this.trackElement(elt);
      this.addElementToDocument(elt);
    },
    rootImportForElement: function(elt) {
      var n = elt;
      while (n.ownerDocument.__importLink) {
        n = n.ownerDocument.__importLink;
      }
      return n;
    },
    addElementToDocument: function(elt) {
      var port = this.rootImportForElement(elt.__importElement || elt);
      port.parentNode.insertBefore(elt, port);
    },
    trackElement: function(elt, callback) {
      var self = this;
      var done = function(e) {
        elt.removeEventListener("load", done);
        elt.removeEventListener("error", done);
        if (callback) {
          callback(e);
        }
        self.markParsingComplete(elt);
        self.parseNext();
      };
      elt.addEventListener("load", done);
      elt.addEventListener("error", done);
      if (isIE && elt.localName === "style") {
        var fakeLoad = false;
        if (elt.textContent.indexOf("@import") == -1) {
          fakeLoad = true;
        } else if (elt.sheet) {
          fakeLoad = true;
          var csr = elt.sheet.cssRules;
          var len = csr ? csr.length : 0;
          for (var i = 0, r; i < len && (r = csr[i]); i++) {
            if (r.type === CSSRule.IMPORT_RULE) {
              fakeLoad = fakeLoad && Boolean(r.styleSheet);
            }
          }
        }
        if (fakeLoad) {
          setTimeout(function() {
            elt.dispatchEvent(new CustomEvent("load", {
              bubbles: false
            }));
          });
        }
      }
    },
    parseScript: function(scriptElt) {
      var script = document.createElement("script");
      script.__importElement = scriptElt;
      script.src = scriptElt.src ? scriptElt.src : generateScriptDataUrl(scriptElt);
      scope.currentScript = scriptElt;
      this.trackElement(script, function(e) {
        if (script.parentNode) {
          script.parentNode.removeChild(script);
        }
        scope.currentScript = null;
      });
      this.addElementToDocument(script);
    },
    nextToParse: function() {
      this._mayParse = [];
      return !this.parsingElement && (this.nextToParseInDoc(rootDocument) || this.nextToParseDynamic());
    },
    nextToParseInDoc: function(doc, link) {
      if (doc && this._mayParse.indexOf(doc) < 0) {
        this._mayParse.push(doc);
        var nodes = doc.querySelectorAll(this.parseSelectorsForNode(doc));
        for (var i = 0, l = nodes.length, n; i < l && (n = nodes[i]); i++) {
          if (!this.isParsed(n)) {
            if (this.hasResource(n)) {
              return nodeIsImport(n) ? this.nextToParseInDoc(n.__doc, n) : n;
            } else {
              return;
            }
          }
        }
      }
      return link;
    },
    nextToParseDynamic: function() {
      return this.dynamicElements[0];
    },
    parseSelectorsForNode: function(node) {
      var doc = node.ownerDocument || node;
      return doc === rootDocument ? this.documentSelectors : this.importsSelectors;
    },
    isParsed: function(node) {
      return node.__importParsed;
    },
    needsDynamicParsing: function(elt) {
      return this.dynamicElements.indexOf(elt) >= 0;
    },
    hasResource: function(node) {
      if (nodeIsImport(node) && node.__doc === undefined) {
        return false;
      }
      return true;
    }
  };
  function nodeIsImport(elt) {
    return elt.localName === "link" && elt.rel === IMPORT_LINK_TYPE;
  }
  function generateScriptDataUrl(script) {
    var scriptContent = generateScriptContent(script);
    return "data:text/javascript;charset=utf-8," + encodeURIComponent(scriptContent);
  }
  function generateScriptContent(script) {
    return script.textContent + generateSourceMapHint(script);
  }
  function generateSourceMapHint(script) {
    var owner = script.ownerDocument;
    owner.__importedScripts = owner.__importedScripts || 0;
    var moniker = script.ownerDocument.baseURI;
    var num = owner.__importedScripts ? "-" + owner.__importedScripts : "";
    owner.__importedScripts++;
    return "\n//# sourceURL=" + moniker + num + ".js\n";
  }
  function cloneStyle(style) {
    var clone = style.ownerDocument.createElement("style");
    clone.textContent = style.textContent;
    path.resolveUrlsInStyle(clone);
    return clone;
  }
  scope.parser = importParser;
  scope.IMPORT_SELECTOR = IMPORT_SELECTOR;
});

window.HTMLImports.addModule(function(scope) {
  var flags = scope.flags;
  var IMPORT_LINK_TYPE = scope.IMPORT_LINK_TYPE;
  var IMPORT_SELECTOR = scope.IMPORT_SELECTOR;
  var rootDocument = scope.rootDocument;
  var Loader = scope.Loader;
  var Observer = scope.Observer;
  var parser = scope.parser;
  var importer = {
    documents: {},
    documentPreloadSelectors: IMPORT_SELECTOR,
    importsPreloadSelectors: [ IMPORT_SELECTOR ].join(","),
    loadNode: function(node) {
      importLoader.addNode(node);
    },
    loadSubtree: function(parent) {
      var nodes = this.marshalNodes(parent);
      importLoader.addNodes(nodes);
    },
    marshalNodes: function(parent) {
      return parent.querySelectorAll(this.loadSelectorsForNode(parent));
    },
    loadSelectorsForNode: function(node) {
      var doc = node.ownerDocument || node;
      return doc === rootDocument ? this.documentPreloadSelectors : this.importsPreloadSelectors;
    },
    loaded: function(url, elt, resource, err, redirectedUrl) {
      flags.load && console.log("loaded", url, elt);
      elt.__resource = resource;
      elt.__error = err;
      if (isImportLink(elt)) {
        var doc = this.documents[url];
        if (doc === undefined) {
          doc = err ? null : makeDocument(resource, redirectedUrl || url);
          if (doc) {
            doc.__importLink = elt;
            this.bootDocument(doc);
          }
          this.documents[url] = doc;
        }
        elt.__doc = doc;
      }
      parser.parseNext();
    },
    bootDocument: function(doc) {
      this.loadSubtree(doc);
      this.observer.observe(doc);
      parser.parseNext();
    },
    loadedAll: function() {
      parser.parseNext();
    }
  };
  var importLoader = new Loader(importer.loaded.bind(importer), importer.loadedAll.bind(importer));
  importer.observer = new Observer();
  function isImportLink(elt) {
    return isLinkRel(elt, IMPORT_LINK_TYPE);
  }
  function isLinkRel(elt, rel) {
    return elt.localName === "link" && elt.getAttribute("rel") === rel;
  }
  function hasBaseURIAccessor(doc) {
    return !!Object.getOwnPropertyDescriptor(doc, "baseURI");
  }
  function makeDocument(resource, url) {
    var doc = document.implementation.createHTMLDocument(IMPORT_LINK_TYPE);
    doc._URL = url;
    var base = doc.createElement("base");
    base.setAttribute("href", url);
    if (!doc.baseURI && !hasBaseURIAccessor(doc)) {
      Object.defineProperty(doc, "baseURI", {
        value: url
      });
    }
    var meta = doc.createElement("meta");
    meta.setAttribute("charset", "utf-8");
    doc.head.appendChild(meta);
    doc.head.appendChild(base);
    doc.body.innerHTML = resource;
    if (window.HTMLTemplateElement && HTMLTemplateElement.bootstrap) {
      HTMLTemplateElement.bootstrap(doc);
    }
    return doc;
  }
  if (!document.baseURI) {
    var baseURIDescriptor = {
      get: function() {
        var base = document.querySelector("base");
        return base ? base.href : window.location.href;
      },
      configurable: true
    };
    Object.defineProperty(document, "baseURI", baseURIDescriptor);
    Object.defineProperty(rootDocument, "baseURI", baseURIDescriptor);
  }
  scope.importer = importer;
  scope.importLoader = importLoader;
});

window.HTMLImports.addModule(function(scope) {
  var parser = scope.parser;
  var importer = scope.importer;
  var dynamic = {
    added: function(nodes) {
      var owner, parsed, loading;
      for (var i = 0, l = nodes.length, n; i < l && (n = nodes[i]); i++) {
        if (!owner) {
          owner = n.ownerDocument;
          parsed = parser.isParsed(owner);
        }
        loading = this.shouldLoadNode(n);
        if (loading) {
          importer.loadNode(n);
        }
        if (this.shouldParseNode(n) && parsed) {
          parser.parseDynamic(n, loading);
        }
      }
    },
    shouldLoadNode: function(node) {
      return node.nodeType === 1 && matches.call(node, importer.loadSelectorsForNode(node));
    },
    shouldParseNode: function(node) {
      return node.nodeType === 1 && matches.call(node, parser.parseSelectorsForNode(node));
    }
  };
  importer.observer.addCallback = dynamic.added.bind(dynamic);
  var matches = HTMLElement.prototype.matches || HTMLElement.prototype.matchesSelector || HTMLElement.prototype.webkitMatchesSelector || HTMLElement.prototype.mozMatchesSelector || HTMLElement.prototype.msMatchesSelector;
});

(function(scope) {
  var initializeModules = scope.initializeModules;
  var isIE = scope.isIE;
  if (scope.useNative) {
    return;
  }
  initializeModules();
  var rootDocument = scope.rootDocument;
  function bootstrap() {
    window.HTMLImports.importer.bootDocument(rootDocument);
  }
  if (document.readyState === "complete" || document.readyState === "interactive" && !window.attachEvent) {
    bootstrap();
  } else {
    document.addEventListener("DOMContentLoaded", bootstrap);
  }
})(window.HTMLImports);

window.CustomElements = window.CustomElements || {
  flags: {}
};

(function(scope) {
  var flags = scope.flags;
  var modules = [];
  var addModule = function(module) {
    modules.push(module);
  };
  var initializeModules = function() {
    modules.forEach(function(module) {
      module(scope);
    });
  };
  scope.addModule = addModule;
  scope.initializeModules = initializeModules;
  scope.hasNative = Boolean(document.registerElement);
  scope.isIE = /Trident/.test(navigator.userAgent);
  scope.useNative = !flags.register && scope.hasNative && !window.ShadowDOMPolyfill && (!window.HTMLImports || window.HTMLImports.useNative);
})(window.CustomElements);

window.CustomElements.addModule(function(scope) {
  var IMPORT_LINK_TYPE = window.HTMLImports ? window.HTMLImports.IMPORT_LINK_TYPE : "none";
  function forSubtree(node, cb) {
    findAllElements(node, function(e) {
      if (cb(e)) {
        return true;
      }
      forRoots(e, cb);
    });
    forRoots(node, cb);
  }
  function findAllElements(node, find, data) {
    var e = node.firstElementChild;
    if (!e) {
      e = node.firstChild;
      while (e && e.nodeType !== Node.ELEMENT_NODE) {
        e = e.nextSibling;
      }
    }
    while (e) {
      if (find(e, data) !== true) {
        findAllElements(e, find, data);
      }
      e = e.nextElementSibling;
    }
    return null;
  }
  function forRoots(node, cb) {
    var root = node.shadowRoot;
    while (root) {
      forSubtree(root, cb);
      root = root.olderShadowRoot;
    }
  }
  function forDocumentTree(doc, cb) {
    _forDocumentTree(doc, cb, []);
  }
  function _forDocumentTree(doc, cb, processingDocuments) {
    doc = window.wrap(doc);
    if (processingDocuments.indexOf(doc) >= 0) {
      return;
    }
    processingDocuments.push(doc);
    var imports = doc.querySelectorAll("link[rel=" + IMPORT_LINK_TYPE + "]");
    for (var i = 0, l = imports.length, n; i < l && (n = imports[i]); i++) {
      if (n.import) {
        _forDocumentTree(n.import, cb, processingDocuments);
      }
    }
    cb(doc);
  }
  scope.forDocumentTree = forDocumentTree;
  scope.forSubtree = forSubtree;
});

window.CustomElements.addModule(function(scope) {
  var flags = scope.flags;
  var forSubtree = scope.forSubtree;
  var forDocumentTree = scope.forDocumentTree;
  function addedNode(node, isAttached) {
    return added(node, isAttached) || addedSubtree(node, isAttached);
  }
  function added(node, isAttached) {
    if (scope.upgrade(node, isAttached)) {
      return true;
    }
    if (isAttached) {
      attached(node);
    }
  }
  function addedSubtree(node, isAttached) {
    forSubtree(node, function(e) {
      if (added(e, isAttached)) {
        return true;
      }
    });
  }
  var hasThrottledAttached = window.MutationObserver._isPolyfilled && flags["throttle-attached"];
  scope.hasPolyfillMutations = hasThrottledAttached;
  scope.hasThrottledAttached = hasThrottledAttached;
  var isPendingMutations = false;
  var pendingMutations = [];
  function deferMutation(fn) {
    pendingMutations.push(fn);
    if (!isPendingMutations) {
      isPendingMutations = true;
      setTimeout(takeMutations);
    }
  }
  function takeMutations() {
    isPendingMutations = false;
    var $p = pendingMutations;
    for (var i = 0, l = $p.length, p; i < l && (p = $p[i]); i++) {
      p();
    }
    pendingMutations = [];
  }
  function attached(element) {
    if (hasThrottledAttached) {
      deferMutation(function() {
        _attached(element);
      });
    } else {
      _attached(element);
    }
  }
  function _attached(element) {
    if (element.__upgraded__ && !element.__attached) {
      element.__attached = true;
      if (element.attachedCallback) {
        element.attachedCallback();
      }
    }
  }
  function detachedNode(node) {
    detached(node);
    forSubtree(node, function(e) {
      detached(e);
    });
  }
  function detached(element) {
    if (hasThrottledAttached) {
      deferMutation(function() {
        _detached(element);
      });
    } else {
      _detached(element);
    }
  }
  function _detached(element) {
    if (element.__upgraded__ && element.__attached) {
      element.__attached = false;
      if (element.detachedCallback) {
        element.detachedCallback();
      }
    }
  }
  function inDocument(element) {
    var p = element;
    var doc = window.wrap(document);
    while (p) {
      if (p == doc) {
        return true;
      }
      p = p.parentNode || p.nodeType === Node.DOCUMENT_FRAGMENT_NODE && p.host;
    }
  }
  function watchShadow(node) {
    if (node.shadowRoot && !node.shadowRoot.__watched) {
      flags.dom && console.log("watching shadow-root for: ", node.localName);
      var root = node.shadowRoot;
      while (root) {
        observe(root);
        root = root.olderShadowRoot;
      }
    }
  }
  function handler(root, mutations) {
    if (flags.dom) {
      var mx = mutations[0];
      if (mx && mx.type === "childList" && mx.addedNodes) {
        if (mx.addedNodes) {
          var d = mx.addedNodes[0];
          while (d && d !== document && !d.host) {
            d = d.parentNode;
          }
          var u = d && (d.URL || d._URL || d.host && d.host.localName) || "";
          u = u.split("/?").shift().split("/").pop();
        }
      }
      console.group("mutations (%d) [%s]", mutations.length, u || "");
    }
    var isAttached = inDocument(root);
    mutations.forEach(function(mx) {
      if (mx.type === "childList") {
        forEach(mx.addedNodes, function(n) {
          if (!n.localName) {
            return;
          }
          addedNode(n, isAttached);
        });
        forEach(mx.removedNodes, function(n) {
          if (!n.localName) {
            return;
          }
          detachedNode(n);
        });
      }
    });
    flags.dom && console.groupEnd();
  }
  function takeRecords(node) {
    node = window.wrap(node);
    if (!node) {
      node = window.wrap(document);
    }
    while (node.parentNode) {
      node = node.parentNode;
    }
    var observer = node.__observer;
    if (observer) {
      handler(node, observer.takeRecords());
      takeMutations();
    }
  }
  var forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);
  function observe(inRoot) {
    if (inRoot.__observer) {
      return;
    }
    var observer = new MutationObserver(handler.bind(this, inRoot));
    observer.observe(inRoot, {
      childList: true,
      subtree: true
    });
    inRoot.__observer = observer;
  }
  function upgradeDocument(doc) {
    doc = window.wrap(doc);
    flags.dom && console.group("upgradeDocument: ", doc.baseURI.split("/").pop());
    var isMainDocument = doc === window.wrap(document);
    addedNode(doc, isMainDocument);
    observe(doc);
    flags.dom && console.groupEnd();
  }
  function upgradeDocumentTree(doc) {
    forDocumentTree(doc, upgradeDocument);
  }
  var originalCreateShadowRoot = Element.prototype.createShadowRoot;
  if (originalCreateShadowRoot) {
    Element.prototype.createShadowRoot = function() {
      var root = originalCreateShadowRoot.call(this);
      window.CustomElements.watchShadow(this);
      return root;
    };
  }
  scope.watchShadow = watchShadow;
  scope.upgradeDocumentTree = upgradeDocumentTree;
  scope.upgradeDocument = upgradeDocument;
  scope.upgradeSubtree = addedSubtree;
  scope.upgradeAll = addedNode;
  scope.attached = attached;
  scope.takeRecords = takeRecords;
});

window.CustomElements.addModule(function(scope) {
  var flags = scope.flags;
  function upgrade(node, isAttached) {
    if (node.localName === "template") {
      if (window.HTMLTemplateElement && HTMLTemplateElement.decorate) {
        HTMLTemplateElement.decorate(node);
      }
    }
    if (!node.__upgraded__ && node.nodeType === Node.ELEMENT_NODE) {
      var is = node.getAttribute("is");
      var definition = scope.getRegisteredDefinition(node.localName) || scope.getRegisteredDefinition(is);
      if (definition) {
        if (is && definition.tag == node.localName || !is && !definition.extends) {
          return upgradeWithDefinition(node, definition, isAttached);
        }
      }
    }
  }
  function upgradeWithDefinition(element, definition, isAttached) {
    flags.upgrade && console.group("upgrade:", element.localName);
    if (definition.is) {
      element.setAttribute("is", definition.is);
    }
    implementPrototype(element, definition);
    element.__upgraded__ = true;
    created(element);
    if (isAttached) {
      scope.attached(element);
    }
    scope.upgradeSubtree(element, isAttached);
    flags.upgrade && console.groupEnd();
    return element;
  }
  function implementPrototype(element, definition) {
    if (Object.__proto__) {
      element.__proto__ = definition.prototype;
    } else {
      customMixin(element, definition.prototype, definition.native);
      element.__proto__ = definition.prototype;
    }
  }
  function customMixin(inTarget, inSrc, inNative) {
    var used = {};
    var p = inSrc;
    while (p !== inNative && p !== HTMLElement.prototype) {
      var keys = Object.getOwnPropertyNames(p);
      for (var i = 0, k; k = keys[i]; i++) {
        if (!used[k]) {
          Object.defineProperty(inTarget, k, Object.getOwnPropertyDescriptor(p, k));
          used[k] = 1;
        }
      }
      p = Object.getPrototypeOf(p);
    }
  }
  function created(element) {
    if (element.createdCallback) {
      element.createdCallback();
    }
  }
  scope.upgrade = upgrade;
  scope.upgradeWithDefinition = upgradeWithDefinition;
  scope.implementPrototype = implementPrototype;
});

window.CustomElements.addModule(function(scope) {
  var isIE = scope.isIE;
  var upgradeDocumentTree = scope.upgradeDocumentTree;
  var upgradeAll = scope.upgradeAll;
  var upgradeWithDefinition = scope.upgradeWithDefinition;
  var implementPrototype = scope.implementPrototype;
  var useNative = scope.useNative;
  function register(name, options) {
    var definition = options || {};
    if (!name) {
      throw new Error("document.registerElement: first argument `name` must not be empty");
    }
    if (name.indexOf("-") < 0) {
      throw new Error("document.registerElement: first argument ('name') must contain a dash ('-'). Argument provided was '" + String(name) + "'.");
    }
    if (isReservedTag(name)) {
      throw new Error("Failed to execute 'registerElement' on 'Document': Registration failed for type '" + String(name) + "'. The type name is invalid.");
    }
    if (getRegisteredDefinition(name)) {
      throw new Error("DuplicateDefinitionError: a type with name '" + String(name) + "' is already registered");
    }
    if (!definition.prototype) {
      definition.prototype = Object.create(HTMLElement.prototype);
    }
    definition.__name = name.toLowerCase();
    if (definition.extends) {
      definition.extends = definition.extends.toLowerCase();
    }
    definition.lifecycle = definition.lifecycle || {};
    definition.ancestry = ancestry(definition.extends);
    resolveTagName(definition);
    resolvePrototypeChain(definition);
    overrideAttributeApi(definition.prototype);
    registerDefinition(definition.__name, definition);
    definition.ctor = generateConstructor(definition);
    definition.ctor.prototype = definition.prototype;
    definition.prototype.constructor = definition.ctor;
    if (scope.ready) {
      upgradeDocumentTree(document);
    }
    return definition.ctor;
  }
  function overrideAttributeApi(prototype) {
    if (prototype.setAttribute._polyfilled) {
      return;
    }
    var setAttribute = prototype.setAttribute;
    prototype.setAttribute = function(name, value) {
      changeAttribute.call(this, name, value, setAttribute);
    };
    var removeAttribute = prototype.removeAttribute;
    prototype.removeAttribute = function(name) {
      changeAttribute.call(this, name, null, removeAttribute);
    };
    prototype.setAttribute._polyfilled = true;
  }
  function changeAttribute(name, value, operation) {
    name = name.toLowerCase();
    var oldValue = this.getAttribute(name);
    operation.apply(this, arguments);
    var newValue = this.getAttribute(name);
    if (this.attributeChangedCallback && newValue !== oldValue) {
      this.attributeChangedCallback(name, oldValue, newValue);
    }
  }
  function isReservedTag(name) {
    for (var i = 0; i < reservedTagList.length; i++) {
      if (name === reservedTagList[i]) {
        return true;
      }
    }
  }
  var reservedTagList = [ "annotation-xml", "color-profile", "font-face", "font-face-src", "font-face-uri", "font-face-format", "font-face-name", "missing-glyph" ];
  function ancestry(extnds) {
    var extendee = getRegisteredDefinition(extnds);
    if (extendee) {
      return ancestry(extendee.extends).concat([ extendee ]);
    }
    return [];
  }
  function resolveTagName(definition) {
    var baseTag = definition.extends;
    for (var i = 0, a; a = definition.ancestry[i]; i++) {
      baseTag = a.is && a.tag;
    }
    definition.tag = baseTag || definition.__name;
    if (baseTag) {
      definition.is = definition.__name;
    }
  }
  function resolvePrototypeChain(definition) {
    if (!Object.__proto__) {
      var nativePrototype = HTMLElement.prototype;
      if (definition.is) {
        var inst = document.createElement(definition.tag);
        nativePrototype = Object.getPrototypeOf(inst);
      }
      var proto = definition.prototype, ancestor;
      var foundPrototype = false;
      while (proto) {
        if (proto == nativePrototype) {
          foundPrototype = true;
        }
        ancestor = Object.getPrototypeOf(proto);
        if (ancestor) {
          proto.__proto__ = ancestor;
        }
        proto = ancestor;
      }
      if (!foundPrototype) {
        console.warn(definition.tag + " prototype not found in prototype chain for " + definition.is);
      }
      definition.native = nativePrototype;
    }
  }
  function instantiate(definition) {
    return upgradeWithDefinition(domCreateElement(definition.tag), definition);
  }
  var registry = {};
  function getRegisteredDefinition(name) {
    if (name) {
      return registry[name.toLowerCase()];
    }
  }
  function registerDefinition(name, definition) {
    registry[name] = definition;
  }
  function generateConstructor(definition) {
    return function() {
      return instantiate(definition);
    };
  }
  var HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
  function createElementNS(namespace, tag, typeExtension) {
    if (namespace === HTML_NAMESPACE) {
      return createElement(tag, typeExtension);
    } else {
      return domCreateElementNS(namespace, tag);
    }
  }
  function createElement(tag, typeExtension) {
    if (tag) {
      tag = tag.toLowerCase();
    }
    if (typeExtension) {
      typeExtension = typeExtension.toLowerCase();
    }
    var definition = getRegisteredDefinition(typeExtension || tag);
    if (definition) {
      if (tag == definition.tag && typeExtension == definition.is) {
        return new definition.ctor();
      }
      if (!typeExtension && !definition.is) {
        return new definition.ctor();
      }
    }
    var element;
    if (typeExtension) {
      element = createElement(tag);
      element.setAttribute("is", typeExtension);
      return element;
    }
    element = domCreateElement(tag);
    if (tag.indexOf("-") >= 0) {
      implementPrototype(element, HTMLElement);
    }
    return element;
  }
  var domCreateElement = document.createElement.bind(document);
  var domCreateElementNS = document.createElementNS.bind(document);
  var isInstance;
  if (!Object.__proto__ && !useNative) {
    isInstance = function(obj, ctor) {
      if (obj instanceof ctor) {
        return true;
      }
      var p = obj;
      while (p) {
        if (p === ctor.prototype) {
          return true;
        }
        p = p.__proto__;
      }
      return false;
    };
  } else {
    isInstance = function(obj, base) {
      return obj instanceof base;
    };
  }
  function wrapDomMethodToForceUpgrade(obj, methodName) {
    var orig = obj[methodName];
    obj[methodName] = function() {
      var n = orig.apply(this, arguments);
      upgradeAll(n);
      return n;
    };
  }
  wrapDomMethodToForceUpgrade(Node.prototype, "cloneNode");
  wrapDomMethodToForceUpgrade(document, "importNode");
  document.registerElement = register;
  document.createElement = createElement;
  document.createElementNS = createElementNS;
  scope.registry = registry;
  scope.instanceof = isInstance;
  scope.reservedTagList = reservedTagList;
  scope.getRegisteredDefinition = getRegisteredDefinition;
  document.register = document.registerElement;
});

(function(scope) {
  var useNative = scope.useNative;
  var initializeModules = scope.initializeModules;
  var isIE = scope.isIE;
  if (useNative) {
    var nop = function() {};
    scope.watchShadow = nop;
    scope.upgrade = nop;
    scope.upgradeAll = nop;
    scope.upgradeDocumentTree = nop;
    scope.upgradeSubtree = nop;
    scope.takeRecords = nop;
    scope.instanceof = function(obj, base) {
      return obj instanceof base;
    };
  } else {
    initializeModules();
  }
  var upgradeDocumentTree = scope.upgradeDocumentTree;
  var upgradeDocument = scope.upgradeDocument;
  if (!window.wrap) {
    if (window.ShadowDOMPolyfill) {
      window.wrap = window.ShadowDOMPolyfill.wrapIfNeeded;
      window.unwrap = window.ShadowDOMPolyfill.unwrapIfNeeded;
    } else {
      window.wrap = window.unwrap = function(node) {
        return node;
      };
    }
  }
  if (window.HTMLImports) {
    window.HTMLImports.__importsParsingHook = function(elt) {
      if (elt.import) {
        upgradeDocument(wrap(elt.import));
      }
    };
  }
  function bootstrap() {
    upgradeDocumentTree(window.wrap(document));
    window.CustomElements.ready = true;
    var requestAnimationFrame = window.requestAnimationFrame || function(f) {
      setTimeout(f, 16);
    };
    requestAnimationFrame(function() {
      setTimeout(function() {
        window.CustomElements.readyTime = Date.now();
        if (window.HTMLImports) {
          window.CustomElements.elapsed = window.CustomElements.readyTime - window.HTMLImports.readyTime;
        }
        document.dispatchEvent(new CustomEvent("WebComponentsReady", {
          bubbles: true
        }));
      });
    });
  }
  if (document.readyState === "complete" || scope.flags.eager) {
    bootstrap();
  } else if (document.readyState === "interactive" && !window.attachEvent && (!window.HTMLImports || window.HTMLImports.ready)) {
    bootstrap();
  } else {
    var loadEvent = window.HTMLImports && !window.HTMLImports.ready ? "HTMLImportsLoaded" : "DOMContentLoaded";
    window.addEventListener(loadEvent, bootstrap);
  }
})(window.CustomElements);

(function(scope) {
  var style = document.createElement("style");
  style.textContent = "" + "body {" + "transition: opacity ease-in 0.2s;" + " } \n" + "body[unresolved] {" + "opacity: 0; display: block; overflow: hidden; position: relative;" + " } \n";
  var head = document.querySelector("head");
  head.insertBefore(style, head.firstChild);
})(window.WebComponents);
(function () {
function resolve() {
document.body.removeAttribute('unresolved');
}
if (window.WebComponents) {
addEventListener('WebComponentsReady', resolve);
} else {
if (document.readyState === 'interactive' || document.readyState === 'complete') {
resolve();
} else {
addEventListener('DOMContentLoaded', resolve);
}
}
}());window.Polymer = {
Settings: function () {
var settings = window.Polymer || {};
if (!settings.noUrlSettings) {
var parts = location.search.slice(1).split('&');
for (var i = 0, o; i < parts.length && (o = parts[i]); i++) {
o = o.split('=');
o[0] && (settings[o[0]] = o[1] || true);
}
}
settings.wantShadow = settings.dom === 'shadow';
settings.hasShadow = Boolean(Element.prototype.createShadowRoot);
settings.nativeShadow = settings.hasShadow && !window.ShadowDOMPolyfill;
settings.useShadow = settings.wantShadow && settings.hasShadow;
settings.hasNativeImports = Boolean('import' in document.createElement('link'));
settings.useNativeImports = settings.hasNativeImports;
settings.useNativeCustomElements = !window.CustomElements || window.CustomElements.useNative;
settings.useNativeShadow = settings.useShadow && settings.nativeShadow;
settings.usePolyfillProto = !settings.useNativeCustomElements && !Object.__proto__;
settings.hasNativeCSSProperties = !navigator.userAgent.match('AppleWebKit/601') && window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)');
settings.useNativeCSSProperties = settings.hasNativeCSSProperties && settings.lazyRegister && settings.useNativeCSSProperties;
return settings;
}()
};(function () {
var userPolymer = window.Polymer;
window.Polymer = function (prototype) {
if (typeof prototype === 'function') {
prototype = prototype.prototype;
}
if (!prototype) {
prototype = {};
}
var factory = desugar(prototype);
prototype = factory.prototype;
var options = { prototype: prototype };
if (prototype.extends) {
options.extends = prototype.extends;
}
Polymer.telemetry._registrate(prototype);
document.registerElement(prototype.is, options);
return factory;
};
var desugar = function (prototype) {
var base = Polymer.Base;
if (prototype.extends) {
base = Polymer.Base._getExtendedPrototype(prototype.extends);
}
prototype = Polymer.Base.chainObject(prototype, base);
prototype.registerCallback();
return prototype.constructor;
};
if (userPolymer) {
for (var i in userPolymer) {
Polymer[i] = userPolymer[i];
}
}
Polymer.Class = desugar;
}());
Polymer.telemetry = {
registrations: [],
_regLog: function (prototype) {
console.log('[' + prototype.is + ']: registered');
},
_registrate: function (prototype) {
this.registrations.push(prototype);
Polymer.log && this._regLog(prototype);
},
dumpRegistrations: function () {
this.registrations.forEach(this._regLog);
}
};Object.defineProperty(window, 'currentImport', {
enumerable: true,
configurable: true,
get: function () {
return (document._currentScript || document.currentScript).ownerDocument;
}
});Polymer.RenderStatus = {
_ready: false,
_callbacks: [],
whenReady: function (cb) {
if (this._ready) {
cb();
} else {
this._callbacks.push(cb);
}
},
_makeReady: function () {
this._ready = true;
for (var i = 0; i < this._callbacks.length; i++) {
this._callbacks[i]();
}
this._callbacks = [];
},
_catchFirstRender: function () {
requestAnimationFrame(function () {
Polymer.RenderStatus._makeReady();
});
},
_afterNextRenderQueue: [],
_waitingNextRender: false,
afterNextRender: function (element, fn, args) {
this._watchNextRender();
this._afterNextRenderQueue.push([
element,
fn,
args
]);
},
hasRendered: function () {
return this._ready;
},
_watchNextRender: function () {
if (!this._waitingNextRender) {
this._waitingNextRender = true;
var fn = function () {
Polymer.RenderStatus._flushNextRender();
};
if (!this._ready) {
this.whenReady(fn);
} else {
requestAnimationFrame(fn);
}
}
},
_flushNextRender: function () {
var self = this;
setTimeout(function () {
self._flushRenderCallbacks(self._afterNextRenderQueue);
self._afterNextRenderQueue = [];
self._waitingNextRender = false;
});
},
_flushRenderCallbacks: function (callbacks) {
for (var i = 0, h; i < callbacks.length; i++) {
h = callbacks[i];
h[1].apply(h[0], h[2] || Polymer.nar);
}
}
};
if (window.HTMLImports) {
HTMLImports.whenReady(function () {
Polymer.RenderStatus._catchFirstRender();
});
} else {
Polymer.RenderStatus._catchFirstRender();
}
Polymer.ImportStatus = Polymer.RenderStatus;
Polymer.ImportStatus.whenLoaded = Polymer.ImportStatus.whenReady;(function () {
'use strict';
var settings = Polymer.Settings;
Polymer.Base = {
__isPolymerInstance__: true,
_addFeature: function (feature) {
this.extend(this, feature);
},
registerCallback: function () {
if (settings.lazyRegister === 'max') {
if (this.beforeRegister) {
this.beforeRegister();
}
} else {
this._desugarBehaviors();
this._doBehavior('beforeRegister');
}
this._registerFeatures();
if (!settings.lazyRegister) {
this.ensureRegisterFinished();
}
},
createdCallback: function () {
if (!this.__hasRegisterFinished) {
this._ensureRegisterFinished(this.__proto__);
}
Polymer.telemetry.instanceCount++;
this.root = this;
this._doBehavior('created');
this._initFeatures();
},
ensureRegisterFinished: function () {
this._ensureRegisterFinished(this);
},
_ensureRegisterFinished: function (proto) {
if (proto.__hasRegisterFinished !== proto.is || !proto.is) {
if (settings.lazyRegister === 'max') {
proto._desugarBehaviors();
proto._doBehaviorOnly('beforeRegister');
}
proto.__hasRegisterFinished = proto.is;
if (proto._finishRegisterFeatures) {
proto._finishRegisterFeatures();
}
proto._doBehavior('registered');
if (settings.usePolyfillProto && proto !== this) {
proto.extend(this, proto);
}
}
},
attachedCallback: function () {
var self = this;
Polymer.RenderStatus.whenReady(function () {
self.isAttached = true;
self._doBehavior('attached');
});
},
detachedCallback: function () {
var self = this;
Polymer.RenderStatus.whenReady(function () {
self.isAttached = false;
self._doBehavior('detached');
});
},
attributeChangedCallback: function (name, oldValue, newValue) {
this._attributeChangedImpl(name);
this._doBehavior('attributeChanged', [
name,
oldValue,
newValue
]);
},
_attributeChangedImpl: function (name) {
this._setAttributeToProperty(this, name);
},
extend: function (target, source) {
if (target && source) {
var n$ = Object.getOwnPropertyNames(source);
for (var i = 0, n; i < n$.length && (n = n$[i]); i++) {
this.copyOwnProperty(n, source, target);
}
}
return target || source;
},
mixin: function (target, source) {
for (var i in source) {
target[i] = source[i];
}
return target;
},
copyOwnProperty: function (name, source, target) {
var pd = Object.getOwnPropertyDescriptor(source, name);
if (pd) {
Object.defineProperty(target, name, pd);
}
},
_logger: function (level, args) {
if (args.length === 1 && Array.isArray(args[0])) {
args = args[0];
}
switch (level) {
case 'log':
case 'warn':
case 'error':
console[level].apply(console, args);
break;
}
},
_log: function () {
var args = Array.prototype.slice.call(arguments, 0);
this._logger('log', args);
},
_warn: function () {
var args = Array.prototype.slice.call(arguments, 0);
this._logger('warn', args);
},
_error: function () {
var args = Array.prototype.slice.call(arguments, 0);
this._logger('error', args);
},
_logf: function () {
return this._logPrefix.concat(this.is).concat(Array.prototype.slice.call(arguments, 0));
}
};
Polymer.Base._logPrefix = function () {
var color = window.chrome && !/edge/i.test(navigator.userAgent) || /firefox/i.test(navigator.userAgent);
return color ? [
'%c[%s::%s]:',
'font-weight: bold; background-color:#EEEE00;'
] : ['[%s::%s]:'];
}();
Polymer.Base.chainObject = function (object, inherited) {
if (object && inherited && object !== inherited) {
if (!Object.__proto__) {
object = Polymer.Base.extend(Object.create(inherited), object);
}
object.__proto__ = inherited;
}
return object;
};
Polymer.Base = Polymer.Base.chainObject(Polymer.Base, HTMLElement.prototype);
if (window.CustomElements) {
Polymer.instanceof = CustomElements.instanceof;
} else {
Polymer.instanceof = function (obj, ctor) {
return obj instanceof ctor;
};
}
Polymer.isInstance = function (obj) {
return Boolean(obj && obj.__isPolymerInstance__);
};
Polymer.telemetry.instanceCount = 0;
}());(function () {
var modules = {};
var lcModules = {};
var findModule = function (id) {
return modules[id] || lcModules[id.toLowerCase()];
};
var DomModule = function () {
return document.createElement('dom-module');
};
DomModule.prototype = Object.create(HTMLElement.prototype);
Polymer.Base.extend(DomModule.prototype, {
constructor: DomModule,
createdCallback: function () {
this.register();
},
register: function (id) {
id = id || this.id || this.getAttribute('name') || this.getAttribute('is');
if (id) {
this.id = id;
modules[id] = this;
lcModules[id.toLowerCase()] = this;
}
},
import: function (id, selector) {
if (id) {
var m = findModule(id);
if (!m) {
forceDomModulesUpgrade();
m = findModule(id);
}
if (m && selector) {
m = m.querySelector(selector);
}
return m;
}
}
});
var cePolyfill = window.CustomElements && !CustomElements.useNative;
document.registerElement('dom-module', DomModule);
function forceDomModulesUpgrade() {
if (cePolyfill) {
var script = document._currentScript || document.currentScript;
var doc = script && script.ownerDocument || document;
var modules = doc.querySelectorAll('dom-module');
for (var i = modules.length - 1, m; i >= 0 && (m = modules[i]); i--) {
if (m.__upgraded__) {
return;
} else {
CustomElements.upgrade(m);
}
}
}
}
}());Polymer.Base._addFeature({
_prepIs: function () {
if (!this.is) {
var module = (document._currentScript || document.currentScript).parentNode;
if (module.localName === 'dom-module') {
var id = module.id || module.getAttribute('name') || module.getAttribute('is');
this.is = id;
}
}
if (this.is) {
this.is = this.is.toLowerCase();
}
}
});Polymer.Base._addFeature({
behaviors: [],
_desugarBehaviors: function () {
if (this.behaviors.length) {
this.behaviors = this._desugarSomeBehaviors(this.behaviors);
}
},
_desugarSomeBehaviors: function (behaviors) {
var behaviorSet = [];
behaviors = this._flattenBehaviorsList(behaviors);
for (var i = behaviors.length - 1; i >= 0; i--) {
var b = behaviors[i];
if (behaviorSet.indexOf(b) === -1) {
this._mixinBehavior(b);
behaviorSet.unshift(b);
}
}
return behaviorSet;
},
_flattenBehaviorsList: function (behaviors) {
var flat = [];
for (var i = 0; i < behaviors.length; i++) {
var b = behaviors[i];
if (b instanceof Array) {
flat = flat.concat(this._flattenBehaviorsList(b));
} else if (b) {
flat.push(b);
} else {
this._warn(this._logf('_flattenBehaviorsList', 'behavior is null, check for missing or 404 import'));
}
}
return flat;
},
_mixinBehavior: function (b) {
var n$ = Object.getOwnPropertyNames(b);
for (var i = 0, n; i < n$.length && (n = n$[i]); i++) {
if (!Polymer.Base._behaviorProperties[n] && !this.hasOwnProperty(n)) {
this.copyOwnProperty(n, b, this);
}
}
},
_prepBehaviors: function () {
this._prepFlattenedBehaviors(this.behaviors);
},
_prepFlattenedBehaviors: function (behaviors) {
for (var i = 0, l = behaviors.length; i < l; i++) {
this._prepBehavior(behaviors[i]);
}
this._prepBehavior(this);
},
_doBehavior: function (name, args) {
for (var i = 0; i < this.behaviors.length; i++) {
this._invokeBehavior(this.behaviors[i], name, args);
}
this._invokeBehavior(this, name, args);
},
_doBehaviorOnly: function (name, args) {
for (var i = 0; i < this.behaviors.length; i++) {
this._invokeBehavior(this.behaviors[i], name, args);
}
},
_invokeBehavior: function (b, name, args) {
var fn = b[name];
if (fn) {
fn.apply(this, args || Polymer.nar);
}
},
_marshalBehaviors: function () {
for (var i = 0; i < this.behaviors.length; i++) {
this._marshalBehavior(this.behaviors[i]);
}
this._marshalBehavior(this);
}
});
Polymer.Base._behaviorProperties = {
hostAttributes: true,
beforeRegister: true,
registered: true,
properties: true,
observers: true,
listeners: true,
created: true,
attached: true,
detached: true,
attributeChanged: true,
ready: true
};Polymer.Base._addFeature({
_getExtendedPrototype: function (tag) {
return this._getExtendedNativePrototype(tag);
},
_nativePrototypes: {},
_getExtendedNativePrototype: function (tag) {
var p = this._nativePrototypes[tag];
if (!p) {
var np = this.getNativePrototype(tag);
p = this.extend(Object.create(np), Polymer.Base);
this._nativePrototypes[tag] = p;
}
return p;
},
getNativePrototype: function (tag) {
return Object.getPrototypeOf(document.createElement(tag));
}
});Polymer.Base._addFeature({
_prepConstructor: function () {
this._factoryArgs = this.extends ? [
this.extends,
this.is
] : [this.is];
var ctor = function () {
return this._factory(arguments);
};
if (this.hasOwnProperty('extends')) {
ctor.extends = this.extends;
}
Object.defineProperty(this, 'constructor', {
value: ctor,
writable: true,
configurable: true
});
ctor.prototype = this;
},
_factory: function (args) {
var elt = document.createElement.apply(document, this._factoryArgs);
if (this.factoryImpl) {
this.factoryImpl.apply(elt, args);
}
return elt;
}
});Polymer.nob = Object.create(null);
Polymer.Base._addFeature({
properties: {},
getPropertyInfo: function (property) {
var info = this._getPropertyInfo(property, this.properties);
if (!info) {
for (var i = 0; i < this.behaviors.length; i++) {
info = this._getPropertyInfo(property, this.behaviors[i].properties);
if (info) {
return info;
}
}
}
return info || Polymer.nob;
},
_getPropertyInfo: function (property, properties) {
var p = properties && properties[property];
if (typeof p === 'function') {
p = properties[property] = { type: p };
}
if (p) {
p.defined = true;
}
return p;
},
_prepPropertyInfo: function () {
this._propertyInfo = {};
for (var i = 0; i < this.behaviors.length; i++) {
this._addPropertyInfo(this._propertyInfo, this.behaviors[i].properties);
}
this._addPropertyInfo(this._propertyInfo, this.properties);
this._addPropertyInfo(this._propertyInfo, this._propertyEffects);
},
_addPropertyInfo: function (target, source) {
if (source) {
var t, s;
for (var i in source) {
t = target[i];
s = source[i];
if (i[0] === '_' && !s.readOnly) {
continue;
}
if (!target[i]) {
target[i] = {
type: typeof s === 'function' ? s : s.type,
readOnly: s.readOnly,
attribute: Polymer.CaseMap.camelToDashCase(i)
};
} else {
if (!t.type) {
t.type = s.type;
}
if (!t.readOnly) {
t.readOnly = s.readOnly;
}
}
}
}
}
});Polymer.CaseMap = {
_caseMap: {},
_rx: {
dashToCamel: /-[a-z]/g,
camelToDash: /([A-Z])/g
},
dashToCamelCase: function (dash) {
return this._caseMap[dash] || (this._caseMap[dash] = dash.indexOf('-') < 0 ? dash : dash.replace(this._rx.dashToCamel, function (m) {
return m[1].toUpperCase();
}));
},
camelToDashCase: function (camel) {
return this._caseMap[camel] || (this._caseMap[camel] = camel.replace(this._rx.camelToDash, '-$1').toLowerCase());
}
};Polymer.Base._addFeature({
_addHostAttributes: function (attributes) {
if (!this._aggregatedAttributes) {
this._aggregatedAttributes = {};
}
if (attributes) {
this.mixin(this._aggregatedAttributes, attributes);
}
},
_marshalHostAttributes: function () {
if (this._aggregatedAttributes) {
this._applyAttributes(this, this._aggregatedAttributes);
}
},
_applyAttributes: function (node, attr$) {
for (var n in attr$) {
if (!this.hasAttribute(n) && n !== 'class') {
var v = attr$[n];
this.serializeValueToAttribute(v, n, this);
}
}
},
_marshalAttributes: function () {
this._takeAttributesToModel(this);
},
_takeAttributesToModel: function (model) {
if (this.hasAttributes()) {
for (var i in this._propertyInfo) {
var info = this._propertyInfo[i];
if (this.hasAttribute(info.attribute)) {
this._setAttributeToProperty(model, info.attribute, i, info);
}
}
}
},
_setAttributeToProperty: function (model, attribute, property, info) {
if (!this._serializing) {
property = property || Polymer.CaseMap.dashToCamelCase(attribute);
info = info || this._propertyInfo && this._propertyInfo[property];
if (info && !info.readOnly) {
var v = this.getAttribute(attribute);
model[property] = this.deserialize(v, info.type);
}
}
},
_serializing: false,
reflectPropertyToAttribute: function (property, attribute, value) {
this._serializing = true;
value = value === undefined ? this[property] : value;
this.serializeValueToAttribute(value, attribute || Polymer.CaseMap.camelToDashCase(property));
this._serializing = false;
},
serializeValueToAttribute: function (value, attribute, node) {
var str = this.serialize(value);
node = node || this;
if (str === undefined) {
node.removeAttribute(attribute);
} else {
node.setAttribute(attribute, str);
}
},
deserialize: function (value, type) {
switch (type) {
case Number:
value = Number(value);
break;
case Boolean:
value = value != null;
break;
case Object:
try {
value = JSON.parse(value);
} catch (x) {
}
break;
case Array:
try {
value = JSON.parse(value);
} catch (x) {
value = null;
console.warn('Polymer::Attributes: couldn`t decode Array as JSON');
}
break;
case Date:
value = new Date(value);
break;
case String:
default:
break;
}
return value;
},
serialize: function (value) {
switch (typeof value) {
case 'boolean':
return value ? '' : undefined;
case 'object':
if (value instanceof Date) {
return value.toString();
} else if (value) {
try {
return JSON.stringify(value);
} catch (x) {
return '';
}
}
default:
return value != null ? value : undefined;
}
}
});Polymer.version = "1.6.1";Polymer.Base._addFeature({
_registerFeatures: function () {
this._prepIs();
this._prepBehaviors();
this._prepConstructor();
this._prepPropertyInfo();
},
_prepBehavior: function (b) {
this._addHostAttributes(b.hostAttributes);
},
_marshalBehavior: function (b) {
},
_initFeatures: function () {
this._marshalHostAttributes();
this._marshalBehaviors();
}
});
Polymer.Base._addFeature({
_prepTemplate: function () {
if (this._template === undefined) {
this._template = Polymer.DomModule.import(this.is, 'template');
}
if (this._template && this._template.hasAttribute('is')) {
this._warn(this._logf('_prepTemplate', 'top-level Polymer template ' + 'must not be a type-extension, found', this._template, 'Move inside simple <template>.'));
}
if (this._template && !this._template.content && window.HTMLTemplateElement && HTMLTemplateElement.decorate) {
HTMLTemplateElement.decorate(this._template);
}
},
_stampTemplate: function () {
if (this._template) {
this.root = this.instanceTemplate(this._template);
}
},
instanceTemplate: function (template) {
var dom = document.importNode(template._content || template.content, true);
return dom;
}
});(function () {
var baseAttachedCallback = Polymer.Base.attachedCallback;
Polymer.Base._addFeature({
_hostStack: [],
ready: function () {
},
_registerHost: function (host) {
this.dataHost = host = host || Polymer.Base._hostStack[Polymer.Base._hostStack.length - 1];
if (host && host._clients) {
host._clients.push(this);
}
this._clients = null;
this._clientsReadied = false;
},
_beginHosting: function () {
Polymer.Base._hostStack.push(this);
if (!this._clients) {
this._clients = [];
}
},
_endHosting: function () {
Polymer.Base._hostStack.pop();
},
_tryReady: function () {
this._readied = false;
if (this._canReady()) {
this._ready();
}
},
_canReady: function () {
return !this.dataHost || this.dataHost._clientsReadied;
},
_ready: function () {
this._beforeClientsReady();
if (this._template) {
this._setupRoot();
this._readyClients();
}
this._clientsReadied = true;
this._clients = null;
this._afterClientsReady();
this._readySelf();
},
_readyClients: function () {
this._beginDistribute();
var c$ = this._clients;
if (c$) {
for (var i = 0, l = c$.length, c; i < l && (c = c$[i]); i++) {
c._ready();
}
}
this._finishDistribute();
},
_readySelf: function () {
this._doBehavior('ready');
this._readied = true;
if (this._attachedPending) {
this._attachedPending = false;
this.attachedCallback();
}
},
_beforeClientsReady: function () {
},
_afterClientsReady: function () {
},
_beforeAttached: function () {
},
attachedCallback: function () {
if (this._readied) {
this._beforeAttached();
baseAttachedCallback.call(this);
} else {
this._attachedPending = true;
}
}
});
}());Polymer.ArraySplice = function () {
function newSplice(index, removed, addedCount) {
return {
index: index,
removed: removed,
addedCount: addedCount
};
}
var EDIT_LEAVE = 0;
var EDIT_UPDATE = 1;
var EDIT_ADD = 2;
var EDIT_DELETE = 3;
function ArraySplice() {
}
ArraySplice.prototype = {
calcEditDistances: function (current, currentStart, currentEnd, old, oldStart, oldEnd) {
var rowCount = oldEnd - oldStart + 1;
var columnCount = currentEnd - currentStart + 1;
var distances = new Array(rowCount);
for (var i = 0; i < rowCount; i++) {
distances[i] = new Array(columnCount);
distances[i][0] = i;
}
for (var j = 0; j < columnCount; j++)
distances[0][j] = j;
for (i = 1; i < rowCount; i++) {
for (j = 1; j < columnCount; j++) {
if (this.equals(current[currentStart + j - 1], old[oldStart + i - 1]))
distances[i][j] = distances[i - 1][j - 1];
else {
var north = distances[i - 1][j] + 1;
var west = distances[i][j - 1] + 1;
distances[i][j] = north < west ? north : west;
}
}
}
return distances;
},
spliceOperationsFromEditDistances: function (distances) {
var i = distances.length - 1;
var j = distances[0].length - 1;
var current = distances[i][j];
var edits = [];
while (i > 0 || j > 0) {
if (i == 0) {
edits.push(EDIT_ADD);
j--;
continue;
}
if (j == 0) {
edits.push(EDIT_DELETE);
i--;
continue;
}
var northWest = distances[i - 1][j - 1];
var west = distances[i - 1][j];
var north = distances[i][j - 1];
var min;
if (west < north)
min = west < northWest ? west : northWest;
else
min = north < northWest ? north : northWest;
if (min == northWest) {
if (northWest == current) {
edits.push(EDIT_LEAVE);
} else {
edits.push(EDIT_UPDATE);
current = northWest;
}
i--;
j--;
} else if (min == west) {
edits.push(EDIT_DELETE);
i--;
current = west;
} else {
edits.push(EDIT_ADD);
j--;
current = north;
}
}
edits.reverse();
return edits;
},
calcSplices: function (current, currentStart, currentEnd, old, oldStart, oldEnd) {
var prefixCount = 0;
var suffixCount = 0;
var minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);
if (currentStart == 0 && oldStart == 0)
prefixCount = this.sharedPrefix(current, old, minLength);
if (currentEnd == current.length && oldEnd == old.length)
suffixCount = this.sharedSuffix(current, old, minLength - prefixCount);
currentStart += prefixCount;
oldStart += prefixCount;
currentEnd -= suffixCount;
oldEnd -= suffixCount;
if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0)
return [];
if (currentStart == currentEnd) {
var splice = newSplice(currentStart, [], 0);
while (oldStart < oldEnd)
splice.removed.push(old[oldStart++]);
return [splice];
} else if (oldStart == oldEnd)
return [newSplice(currentStart, [], currentEnd - currentStart)];
var ops = this.spliceOperationsFromEditDistances(this.calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd));
splice = undefined;
var splices = [];
var index = currentStart;
var oldIndex = oldStart;
for (var i = 0; i < ops.length; i++) {
switch (ops[i]) {
case EDIT_LEAVE:
if (splice) {
splices.push(splice);
splice = undefined;
}
index++;
oldIndex++;
break;
case EDIT_UPDATE:
if (!splice)
splice = newSplice(index, [], 0);
splice.addedCount++;
index++;
splice.removed.push(old[oldIndex]);
oldIndex++;
break;
case EDIT_ADD:
if (!splice)
splice = newSplice(index, [], 0);
splice.addedCount++;
index++;
break;
case EDIT_DELETE:
if (!splice)
splice = newSplice(index, [], 0);
splice.removed.push(old[oldIndex]);
oldIndex++;
break;
}
}
if (splice) {
splices.push(splice);
}
return splices;
},
sharedPrefix: function (current, old, searchLength) {
for (var i = 0; i < searchLength; i++)
if (!this.equals(current[i], old[i]))
return i;
return searchLength;
},
sharedSuffix: function (current, old, searchLength) {
var index1 = current.length;
var index2 = old.length;
var count = 0;
while (count < searchLength && this.equals(current[--index1], old[--index2]))
count++;
return count;
},
calculateSplices: function (current, previous) {
return this.calcSplices(current, 0, current.length, previous, 0, previous.length);
},
equals: function (currentValue, previousValue) {
return currentValue === previousValue;
}
};
return new ArraySplice();
}();Polymer.domInnerHTML = function () {
var escapeAttrRegExp = /[&\u00A0"]/g;
var escapeDataRegExp = /[&\u00A0<>]/g;
function escapeReplace(c) {
switch (c) {
case '&':
return '&amp;';
case '<':
return '&lt;';
case '>':
return '&gt;';
case '"':
return '&quot;';
case '\xA0':
return '&nbsp;';
}
}
function escapeAttr(s) {
return s.replace(escapeAttrRegExp, escapeReplace);
}
function escapeData(s) {
return s.replace(escapeDataRegExp, escapeReplace);
}
function makeSet(arr) {
var set = {};
for (var i = 0; i < arr.length; i++) {
set[arr[i]] = true;
}
return set;
}
var voidElements = makeSet([
'area',
'base',
'br',
'col',
'command',
'embed',
'hr',
'img',
'input',
'keygen',
'link',
'meta',
'param',
'source',
'track',
'wbr'
]);
var plaintextParents = makeSet([
'style',
'script',
'xmp',
'iframe',
'noembed',
'noframes',
'plaintext',
'noscript'
]);
function getOuterHTML(node, parentNode, composed) {
switch (node.nodeType) {
case Node.ELEMENT_NODE:
var tagName = node.localName;
var s = '<' + tagName;
var attrs = node.attributes;
for (var i = 0, attr; attr = attrs[i]; i++) {
s += ' ' + attr.name + '="' + escapeAttr(attr.value) + '"';
}
s += '>';
if (voidElements[tagName]) {
return s;
}
return s + getInnerHTML(node, composed) + '</' + tagName + '>';
case Node.TEXT_NODE:
var data = node.data;
if (parentNode && plaintextParents[parentNode.localName]) {
return data;
}
return escapeData(data);
case Node.COMMENT_NODE:
return '<!--' + node.data + '-->';
default:
console.error(node);
throw new Error('not implemented');
}
}
function getInnerHTML(node, composed) {
if (node instanceof HTMLTemplateElement)
node = node.content;
var s = '';
var c$ = Polymer.dom(node).childNodes;
for (var i = 0, l = c$.length, child; i < l && (child = c$[i]); i++) {
s += getOuterHTML(child, node, composed);
}
return s;
}
return { getInnerHTML: getInnerHTML };
}();(function () {
'use strict';
var nativeInsertBefore = Element.prototype.insertBefore;
var nativeAppendChild = Element.prototype.appendChild;
var nativeRemoveChild = Element.prototype.removeChild;
Polymer.TreeApi = {
arrayCopyChildNodes: function (parent) {
var copy = [], i = 0;
for (var n = parent.firstChild; n; n = n.nextSibling) {
copy[i++] = n;
}
return copy;
},
arrayCopyChildren: function (parent) {
var copy = [], i = 0;
for (var n = parent.firstElementChild; n; n = n.nextElementSibling) {
copy[i++] = n;
}
return copy;
},
arrayCopy: function (a$) {
var l = a$.length;
var copy = new Array(l);
for (var i = 0; i < l; i++) {
copy[i] = a$[i];
}
return copy;
}
};
Polymer.TreeApi.Logical = {
hasParentNode: function (node) {
return Boolean(node.__dom && node.__dom.parentNode);
},
hasChildNodes: function (node) {
return Boolean(node.__dom && node.__dom.childNodes !== undefined);
},
getChildNodes: function (node) {
return this.hasChildNodes(node) ? this._getChildNodes(node) : node.childNodes;
},
_getChildNodes: function (node) {
if (!node.__dom.childNodes) {
node.__dom.childNodes = [];
for (var n = node.__dom.firstChild; n; n = n.__dom.nextSibling) {
node.__dom.childNodes.push(n);
}
}
return node.__dom.childNodes;
},
getParentNode: function (node) {
return node.__dom && node.__dom.parentNode !== undefined ? node.__dom.parentNode : node.parentNode;
},
getFirstChild: function (node) {
return node.__dom && node.__dom.firstChild !== undefined ? node.__dom.firstChild : node.firstChild;
},
getLastChild: function (node) {
return node.__dom && node.__dom.lastChild !== undefined ? node.__dom.lastChild : node.lastChild;
},
getNextSibling: function (node) {
return node.__dom && node.__dom.nextSibling !== undefined ? node.__dom.nextSibling : node.nextSibling;
},
getPreviousSibling: function (node) {
return node.__dom && node.__dom.previousSibling !== undefined ? node.__dom.previousSibling : node.previousSibling;
},
getFirstElementChild: function (node) {
return node.__dom && node.__dom.firstChild !== undefined ? this._getFirstElementChild(node) : node.firstElementChild;
},
_getFirstElementChild: function (node) {
var n = node.__dom.firstChild;
while (n && n.nodeType !== Node.ELEMENT_NODE) {
n = n.__dom.nextSibling;
}
return n;
},
getLastElementChild: function (node) {
return node.__dom && node.__dom.lastChild !== undefined ? this._getLastElementChild(node) : node.lastElementChild;
},
_getLastElementChild: function (node) {
var n = node.__dom.lastChild;
while (n && n.nodeType !== Node.ELEMENT_NODE) {
n = n.__dom.previousSibling;
}
return n;
},
getNextElementSibling: function (node) {
return node.__dom && node.__dom.nextSibling !== undefined ? this._getNextElementSibling(node) : node.nextElementSibling;
},
_getNextElementSibling: function (node) {
var n = node.__dom.nextSibling;
while (n && n.nodeType !== Node.ELEMENT_NODE) {
n = n.__dom.nextSibling;
}
return n;
},
getPreviousElementSibling: function (node) {
return node.__dom && node.__dom.previousSibling !== undefined ? this._getPreviousElementSibling(node) : node.previousElementSibling;
},
_getPreviousElementSibling: function (node) {
var n = node.__dom.previousSibling;
while (n && n.nodeType !== Node.ELEMENT_NODE) {
n = n.__dom.previousSibling;
}
return n;
},
saveChildNodes: function (node) {
if (!this.hasChildNodes(node)) {
node.__dom = node.__dom || {};
node.__dom.firstChild = node.firstChild;
node.__dom.lastChild = node.lastChild;
node.__dom.childNodes = [];
for (var n = node.firstChild; n; n = n.nextSibling) {
n.__dom = n.__dom || {};
n.__dom.parentNode = node;
node.__dom.childNodes.push(n);
n.__dom.nextSibling = n.nextSibling;
n.__dom.previousSibling = n.previousSibling;
}
}
},
recordInsertBefore: function (node, container, ref_node) {
container.__dom.childNodes = null;
if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
for (var n = node.firstChild; n; n = n.nextSibling) {
this._linkNode(n, container, ref_node);
}
} else {
this._linkNode(node, container, ref_node);
}
},
_linkNode: function (node, container, ref_node) {
node.__dom = node.__dom || {};
container.__dom = container.__dom || {};
if (ref_node) {
ref_node.__dom = ref_node.__dom || {};
}
node.__dom.previousSibling = ref_node ? ref_node.__dom.previousSibling : container.__dom.lastChild;
if (node.__dom.previousSibling) {
node.__dom.previousSibling.__dom.nextSibling = node;
}
node.__dom.nextSibling = ref_node || null;
if (node.__dom.nextSibling) {
node.__dom.nextSibling.__dom.previousSibling = node;
}
node.__dom.parentNode = container;
if (ref_node) {
if (ref_node === container.__dom.firstChild) {
container.__dom.firstChild = node;
}
} else {
container.__dom.lastChild = node;
if (!container.__dom.firstChild) {
container.__dom.firstChild = node;
}
}
container.__dom.childNodes = null;
},
recordRemoveChild: function (node, container) {
node.__dom = node.__dom || {};
container.__dom = container.__dom || {};
if (node === container.__dom.firstChild) {
container.__dom.firstChild = node.__dom.nextSibling;
}
if (node === container.__dom.lastChild) {
container.__dom.lastChild = node.__dom.previousSibling;
}
var p = node.__dom.previousSibling;
var n = node.__dom.nextSibling;
if (p) {
p.__dom.nextSibling = n;
}
if (n) {
n.__dom.previousSibling = p;
}
node.__dom.parentNode = node.__dom.previousSibling = node.__dom.nextSibling = undefined;
container.__dom.childNodes = null;
}
};
Polymer.TreeApi.Composed = {
getChildNodes: function (node) {
return Polymer.TreeApi.arrayCopyChildNodes(node);
},
getParentNode: function (node) {
return node.parentNode;
},
clearChildNodes: function (node) {
node.textContent = '';
},
insertBefore: function (parentNode, newChild, refChild) {
return nativeInsertBefore.call(parentNode, newChild, refChild || null);
},
appendChild: function (parentNode, newChild) {
return nativeAppendChild.call(parentNode, newChild);
},
removeChild: function (parentNode, node) {
return nativeRemoveChild.call(parentNode, node);
}
};
}());Polymer.DomApi = function () {
'use strict';
var Settings = Polymer.Settings;
var TreeApi = Polymer.TreeApi;
var DomApi = function (node) {
this.node = needsToWrap ? DomApi.wrap(node) : node;
};
var needsToWrap = Settings.hasShadow && !Settings.nativeShadow;
DomApi.wrap = window.wrap ? window.wrap : function (node) {
return node;
};
DomApi.prototype = {
flush: function () {
Polymer.dom.flush();
},
deepContains: function (node) {
if (this.node.contains(node)) {
return true;
}
var n = node;
var doc = node.ownerDocument;
while (n && n !== doc && n !== this.node) {
n = Polymer.dom(n).parentNode || n.host;
}
return n === this.node;
},
queryDistributedElements: function (selector) {
var c$ = this.getEffectiveChildNodes();
var list = [];
for (var i = 0, l = c$.length, c; i < l && (c = c$[i]); i++) {
if (c.nodeType === Node.ELEMENT_NODE && DomApi.matchesSelector.call(c, selector)) {
list.push(c);
}
}
return list;
},
getEffectiveChildNodes: function () {
var list = [];
var c$ = this.childNodes;
for (var i = 0, l = c$.length, c; i < l && (c = c$[i]); i++) {
if (c.localName === CONTENT) {
var d$ = dom(c).getDistributedNodes();
for (var j = 0; j < d$.length; j++) {
list.push(d$[j]);
}
} else {
list.push(c);
}
}
return list;
},
observeNodes: function (callback) {
if (callback) {
if (!this.observer) {
this.observer = this.node.localName === CONTENT ? new DomApi.DistributedNodesObserver(this) : new DomApi.EffectiveNodesObserver(this);
}
return this.observer.addListener(callback);
}
},
unobserveNodes: function (handle) {
if (this.observer) {
this.observer.removeListener(handle);
}
},
notifyObserver: function () {
if (this.observer) {
this.observer.notify();
}
},
_query: function (matcher, node, halter) {
node = node || this.node;
var list = [];
this._queryElements(TreeApi.Logical.getChildNodes(node), matcher, halter, list);
return list;
},
_queryElements: function (elements, matcher, halter, list) {
for (var i = 0, l = elements.length, c; i < l && (c = elements[i]); i++) {
if (c.nodeType === Node.ELEMENT_NODE) {
if (this._queryElement(c, matcher, halter, list)) {
return true;
}
}
}
},
_queryElement: function (node, matcher, halter, list) {
var result = matcher(node);
if (result) {
list.push(node);
}
if (halter && halter(result)) {
return result;
}
this._queryElements(TreeApi.Logical.getChildNodes(node), matcher, halter, list);
}
};
var CONTENT = DomApi.CONTENT = 'content';
var dom = DomApi.factory = function (node) {
node = node || document;
if (!node.__domApi) {
node.__domApi = new DomApi.ctor(node);
}
return node.__domApi;
};
DomApi.hasApi = function (node) {
return Boolean(node.__domApi);
};
DomApi.ctor = DomApi;
Polymer.dom = function (obj, patch) {
if (obj instanceof Event) {
return Polymer.EventApi.factory(obj);
} else {
return DomApi.factory(obj, patch);
}
};
var p = Element.prototype;
DomApi.matchesSelector = p.matches || p.matchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector || p.webkitMatchesSelector;
return DomApi;
}();(function () {
'use strict';
var Settings = Polymer.Settings;
var DomApi = Polymer.DomApi;
var dom = DomApi.factory;
var TreeApi = Polymer.TreeApi;
var getInnerHTML = Polymer.domInnerHTML.getInnerHTML;
var CONTENT = DomApi.CONTENT;
if (Settings.useShadow) {
return;
}
var nativeCloneNode = Element.prototype.cloneNode;
var nativeImportNode = Document.prototype.importNode;
Polymer.Base.extend(DomApi.prototype, {
_lazyDistribute: function (host) {
if (host.shadyRoot && host.shadyRoot._distributionClean) {
host.shadyRoot._distributionClean = false;
Polymer.dom.addDebouncer(host.debounce('_distribute', host._distributeContent));
}
},
appendChild: function (node) {
return this.insertBefore(node);
},
insertBefore: function (node, ref_node) {
if (ref_node && TreeApi.Logical.getParentNode(ref_node) !== this.node) {
throw Error('The ref_node to be inserted before is not a child ' + 'of this node');
}
if (node.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {
var parent = TreeApi.Logical.getParentNode(node);
if (parent) {
if (DomApi.hasApi(parent)) {
dom(parent).notifyObserver();
}
this._removeNode(node);
} else {
this._removeOwnerShadyRoot(node);
}
}
if (!this._addNode(node, ref_node)) {
if (ref_node) {
ref_node = ref_node.localName === CONTENT ? this._firstComposedNode(ref_node) : ref_node;
}
var container = this.node._isShadyRoot ? this.node.host : this.node;
if (ref_node) {
TreeApi.Composed.insertBefore(container, node, ref_node);
} else {
TreeApi.Composed.appendChild(container, node);
}
}
this.notifyObserver();
return node;
},
_addNode: function (node, ref_node) {
var root = this.getOwnerRoot();
if (root) {
var ipAdded = this._maybeAddInsertionPoint(node, this.node);
if (!root._invalidInsertionPoints) {
root._invalidInsertionPoints = ipAdded;
}
this._addNodeToHost(root.host, node);
}
if (TreeApi.Logical.hasChildNodes(this.node)) {
TreeApi.Logical.recordInsertBefore(node, this.node, ref_node);
}
var handled = this._maybeDistribute(node) || this.node.shadyRoot;
if (handled) {
if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
while (node.firstChild) {
TreeApi.Composed.removeChild(node, node.firstChild);
}
} else {
var parent = TreeApi.Composed.getParentNode(node);
if (parent) {
TreeApi.Composed.removeChild(parent, node);
}
}
}
return handled;
},
removeChild: function (node) {
if (TreeApi.Logical.getParentNode(node) !== this.node) {
throw Error('The node to be removed is not a child of this node: ' + node);
}
if (!this._removeNode(node)) {
var container = this.node._isShadyRoot ? this.node.host : this.node;
var parent = TreeApi.Composed.getParentNode(node);
if (container === parent) {
TreeApi.Composed.removeChild(container, node);
}
}
this.notifyObserver();
return node;
},
_removeNode: function (node) {
var logicalParent = TreeApi.Logical.hasParentNode(node) && TreeApi.Logical.getParentNode(node);
var distributed;
var root = this._ownerShadyRootForNode(node);
if (logicalParent) {
distributed = dom(node)._maybeDistributeParent();
TreeApi.Logical.recordRemoveChild(node, logicalParent);
if (root && this._removeDistributedChildren(root, node)) {
root._invalidInsertionPoints = true;
this._lazyDistribute(root.host);
}
}
this._removeOwnerShadyRoot(node);
if (root) {
this._removeNodeFromHost(root.host, node);
}
return distributed;
},
replaceChild: function (node, ref_node) {
this.insertBefore(node, ref_node);
this.removeChild(ref_node);
return node;
},
_hasCachedOwnerRoot: function (node) {
return Boolean(node._ownerShadyRoot !== undefined);
},
getOwnerRoot: function () {
return this._ownerShadyRootForNode(this.node);
},
_ownerShadyRootForNode: function (node) {
if (!node) {
return;
}
var root = node._ownerShadyRoot;
if (root === undefined) {
if (node._isShadyRoot) {
root = node;
} else {
var parent = TreeApi.Logical.getParentNode(node);
if (parent) {
root = parent._isShadyRoot ? parent : this._ownerShadyRootForNode(parent);
} else {
root = null;
}
}
if (root || document.documentElement.contains(node)) {
node._ownerShadyRoot = root;
}
}
return root;
},
_maybeDistribute: function (node) {
var fragContent = node.nodeType === Node.DOCUMENT_FRAGMENT_NODE && !node.__noContent && dom(node).querySelector(CONTENT);
var wrappedContent = fragContent && TreeApi.Logical.getParentNode(fragContent).nodeType !== Node.DOCUMENT_FRAGMENT_NODE;
var hasContent = fragContent || node.localName === CONTENT;
if (hasContent) {
var root = this.getOwnerRoot();
if (root) {
this._lazyDistribute(root.host);
}
}
var needsDist = this._nodeNeedsDistribution(this.node);
if (needsDist) {
this._lazyDistribute(this.node);
}
return needsDist || hasContent && !wrappedContent;
},
_maybeAddInsertionPoint: function (node, parent) {
var added;
if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE && !node.__noContent) {
var c$ = dom(node).querySelectorAll(CONTENT);
for (var i = 0, n, np, na; i < c$.length && (n = c$[i]); i++) {
np = TreeApi.Logical.getParentNode(n);
if (np === node) {
np = parent;
}
na = this._maybeAddInsertionPoint(n, np);
added = added || na;
}
} else if (node.localName === CONTENT) {
TreeApi.Logical.saveChildNodes(parent);
TreeApi.Logical.saveChildNodes(node);
added = true;
}
return added;
},
_updateInsertionPoints: function (host) {
var i$ = host.shadyRoot._insertionPoints = dom(host.shadyRoot).querySelectorAll(CONTENT);
for (var i = 0, c; i < i$.length; i++) {
c = i$[i];
TreeApi.Logical.saveChildNodes(c);
TreeApi.Logical.saveChildNodes(TreeApi.Logical.getParentNode(c));
}
},
_nodeNeedsDistribution: function (node) {
return node && node.shadyRoot && DomApi.hasInsertionPoint(node.shadyRoot);
},
_addNodeToHost: function (host, node) {
if (host._elementAdd) {
host._elementAdd(node);
}
},
_removeNodeFromHost: function (host, node) {
if (host._elementRemove) {
host._elementRemove(node);
}
},
_removeDistributedChildren: function (root, container) {
var hostNeedsDist;
var ip$ = root._insertionPoints;
for (var i = 0; i < ip$.length; i++) {
var content = ip$[i];
if (this._contains(container, content)) {
var dc$ = dom(content).getDistributedNodes();
for (var j = 0; j < dc$.length; j++) {
hostNeedsDist = true;
var node = dc$[j];
var parent = TreeApi.Composed.getParentNode(node);
if (parent) {
TreeApi.Composed.removeChild(parent, node);
}
}
}
}
return hostNeedsDist;
},
_contains: function (container, node) {
while (node) {
if (node == container) {
return true;
}
node = TreeApi.Logical.getParentNode(node);
}
},
_removeOwnerShadyRoot: function (node) {
if (this._hasCachedOwnerRoot(node)) {
var c$ = TreeApi.Logical.getChildNodes(node);
for (var i = 0, l = c$.length, n; i < l && (n = c$[i]); i++) {
this._removeOwnerShadyRoot(n);
}
}
node._ownerShadyRoot = undefined;
},
_firstComposedNode: function (content) {
var n$ = dom(content).getDistributedNodes();
for (var i = 0, l = n$.length, n, p$; i < l && (n = n$[i]); i++) {
p$ = dom(n).getDestinationInsertionPoints();
if (p$[p$.length - 1] === content) {
return n;
}
}
},
querySelector: function (selector) {
var result = this._query(function (n) {
return DomApi.matchesSelector.call(n, selector);
}, this.node, function (n) {
return Boolean(n);
})[0];
return result || null;
},
querySelectorAll: function (selector) {
return this._query(function (n) {
return DomApi.matchesSelector.call(n, selector);
}, this.node);
},
getDestinationInsertionPoints: function () {
return this.node._destinationInsertionPoints || [];
},
getDistributedNodes: function () {
return this.node._distributedNodes || [];
},
_clear: function () {
while (this.childNodes.length) {
this.removeChild(this.childNodes[0]);
}
},
setAttribute: function (name, value) {
this.node.setAttribute(name, value);
this._maybeDistributeParent();
},
removeAttribute: function (name) {
this.node.removeAttribute(name);
this._maybeDistributeParent();
},
_maybeDistributeParent: function () {
if (this._nodeNeedsDistribution(this.parentNode)) {
this._lazyDistribute(this.parentNode);
return true;
}
},
cloneNode: function (deep) {
var n = nativeCloneNode.call(this.node, false);
if (deep) {
var c$ = this.childNodes;
var d = dom(n);
for (var i = 0, nc; i < c$.length; i++) {
nc = dom(c$[i]).cloneNode(true);
d.appendChild(nc);
}
}
return n;
},
importNode: function (externalNode, deep) {
var doc = this.node instanceof Document ? this.node : this.node.ownerDocument;
var n = nativeImportNode.call(doc, externalNode, false);
if (deep) {
var c$ = TreeApi.Logical.getChildNodes(externalNode);
var d = dom(n);
for (var i = 0, nc; i < c$.length; i++) {
nc = dom(doc).importNode(c$[i], true);
d.appendChild(nc);
}
}
return n;
},
_getComposedInnerHTML: function () {
return getInnerHTML(this.node, true);
}
});
Object.defineProperties(DomApi.prototype, {
activeElement: {
get: function () {
var active = document.activeElement;
if (!active) {
return null;
}
var isShadyRoot = !!this.node._isShadyRoot;
if (this.node !== document) {
if (!isShadyRoot) {
return null;
}
if (this.node.host === active || !this.node.host.contains(active)) {
return null;
}
}
var activeRoot = dom(active).getOwnerRoot();
while (activeRoot && activeRoot !== this.node) {
active = activeRoot.host;
activeRoot = dom(active).getOwnerRoot();
}
if (this.node === document) {
return activeRoot ? null : active;
} else {
return activeRoot === this.node ? active : null;
}
},
configurable: true
},
childNodes: {
get: function () {
var c$ = TreeApi.Logical.getChildNodes(this.node);
return Array.isArray(c$) ? c$ : TreeApi.arrayCopyChildNodes(this.node);
},
configurable: true
},
children: {
get: function () {
if (TreeApi.Logical.hasChildNodes(this.node)) {
return Array.prototype.filter.call(this.childNodes, function (n) {
return n.nodeType === Node.ELEMENT_NODE;
});
} else {
return TreeApi.arrayCopyChildren(this.node);
}
},
configurable: true
},
parentNode: {
get: function () {
return TreeApi.Logical.getParentNode(this.node);
},
configurable: true
},
firstChild: {
get: function () {
return TreeApi.Logical.getFirstChild(this.node);
},
configurable: true
},
lastChild: {
get: function () {
return TreeApi.Logical.getLastChild(this.node);
},
configurable: true
},
nextSibling: {
get: function () {
return TreeApi.Logical.getNextSibling(this.node);
},
configurable: true
},
previousSibling: {
get: function () {
return TreeApi.Logical.getPreviousSibling(this.node);
},
configurable: true
},
firstElementChild: {
get: function () {
return TreeApi.Logical.getFirstElementChild(this.node);
},
configurable: true
},
lastElementChild: {
get: function () {
return TreeApi.Logical.getLastElementChild(this.node);
},
configurable: true
},
nextElementSibling: {
get: function () {
return TreeApi.Logical.getNextElementSibling(this.node);
},
configurable: true
},
previousElementSibling: {
get: function () {
return TreeApi.Logical.getPreviousElementSibling(this.node);
},
configurable: true
},
textContent: {
get: function () {
var nt = this.node.nodeType;
if (nt === Node.TEXT_NODE || nt === Node.COMMENT_NODE) {
return this.node.textContent;
} else {
var tc = [];
for (var i = 0, cn = this.childNodes, c; c = cn[i]; i++) {
if (c.nodeType !== Node.COMMENT_NODE) {
tc.push(c.textContent);
}
}
return tc.join('');
}
},
set: function (text) {
var nt = this.node.nodeType;
if (nt === Node.TEXT_NODE || nt === Node.COMMENT_NODE) {
this.node.textContent = text;
} else {
this._clear();
if (text) {
this.appendChild(document.createTextNode(text));
}
}
},
configurable: true
},
innerHTML: {
get: function () {
var nt = this.node.nodeType;
if (nt === Node.TEXT_NODE || nt === Node.COMMENT_NODE) {
return null;
} else {
return getInnerHTML(this.node);
}
},
set: function (text) {
var nt = this.node.nodeType;
if (nt !== Node.TEXT_NODE || nt !== Node.COMMENT_NODE) {
this._clear();
var d = document.createElement('div');
d.innerHTML = text;
var c$ = TreeApi.arrayCopyChildNodes(d);
for (var i = 0; i < c$.length; i++) {
this.appendChild(c$[i]);
}
}
},
configurable: true
}
});
DomApi.hasInsertionPoint = function (root) {
return Boolean(root && root._insertionPoints.length);
};
}());(function () {
'use strict';
var Settings = Polymer.Settings;
var TreeApi = Polymer.TreeApi;
var DomApi = Polymer.DomApi;
if (!Settings.useShadow) {
return;
}
Polymer.Base.extend(DomApi.prototype, {
querySelectorAll: function (selector) {
return TreeApi.arrayCopy(this.node.querySelectorAll(selector));
},
getOwnerRoot: function () {
var n = this.node;
while (n) {
if (n.nodeType === Node.DOCUMENT_FRAGMENT_NODE && n.host) {
return n;
}
n = n.parentNode;
}
},
importNode: function (externalNode, deep) {
var doc = this.node instanceof Document ? this.node : this.node.ownerDocument;
return doc.importNode(externalNode, deep);
},
getDestinationInsertionPoints: function () {
var n$ = this.node.getDestinationInsertionPoints && this.node.getDestinationInsertionPoints();
return n$ ? TreeApi.arrayCopy(n$) : [];
},
getDistributedNodes: function () {
var n$ = this.node.getDistributedNodes && this.node.getDistributedNodes();
return n$ ? TreeApi.arrayCopy(n$) : [];
}
});
Object.defineProperties(DomApi.prototype, {
activeElement: {
get: function () {
var node = DomApi.wrap(this.node);
var activeElement = node.activeElement;
return node.contains(activeElement) ? activeElement : null;
},
configurable: true
},
childNodes: {
get: function () {
return TreeApi.arrayCopyChildNodes(this.node);
},
configurable: true
},
children: {
get: function () {
return TreeApi.arrayCopyChildren(this.node);
},
configurable: true
},
textContent: {
get: function () {
return this.node.textContent;
},
set: function (value) {
return this.node.textContent = value;
},
configurable: true
},
innerHTML: {
get: function () {
return this.node.innerHTML;
},
set: function (value) {
return this.node.innerHTML = value;
},
configurable: true
}
});
var forwardMethods = function (m$) {
for (var i = 0; i < m$.length; i++) {
forwardMethod(m$[i]);
}
};
var forwardMethod = function (method) {
DomApi.prototype[method] = function () {
return this.node[method].apply(this.node, arguments);
};
};
forwardMethods([
'cloneNode',
'appendChild',
'insertBefore',
'removeChild',
'replaceChild',
'setAttribute',
'removeAttribute',
'querySelector'
]);
var forwardProperties = function (f$) {
for (var i = 0; i < f$.length; i++) {
forwardProperty(f$[i]);
}
};
var forwardProperty = function (name) {
Object.defineProperty(DomApi.prototype, name, {
get: function () {
return this.node[name];
},
configurable: true
});
};
forwardProperties([
'parentNode',
'firstChild',
'lastChild',
'nextSibling',
'previousSibling',
'firstElementChild',
'lastElementChild',
'nextElementSibling',
'previousElementSibling'
]);
}());Polymer.Base.extend(Polymer.dom, {
_flushGuard: 0,
_FLUSH_MAX: 100,
_needsTakeRecords: !Polymer.Settings.useNativeCustomElements,
_debouncers: [],
_staticFlushList: [],
_finishDebouncer: null,
flush: function () {
this._flushGuard = 0;
this._prepareFlush();
while (this._debouncers.length && this._flushGuard < this._FLUSH_MAX) {
while (this._debouncers.length) {
this._debouncers.shift().complete();
}
if (this._finishDebouncer) {
this._finishDebouncer.complete();
}
this._prepareFlush();
this._flushGuard++;
}
if (this._flushGuard >= this._FLUSH_MAX) {
console.warn('Polymer.dom.flush aborted. Flush may not be complete.');
}
},
_prepareFlush: function () {
if (this._needsTakeRecords) {
CustomElements.takeRecords();
}
for (var i = 0; i < this._staticFlushList.length; i++) {
this._staticFlushList[i]();
}
},
addStaticFlush: function (fn) {
this._staticFlushList.push(fn);
},
removeStaticFlush: function (fn) {
var i = this._staticFlushList.indexOf(fn);
if (i >= 0) {
this._staticFlushList.splice(i, 1);
}
},
addDebouncer: function (debouncer) {
this._debouncers.push(debouncer);
this._finishDebouncer = Polymer.Debounce(this._finishDebouncer, this._finishFlush);
},
_finishFlush: function () {
Polymer.dom._debouncers = [];
}
});Polymer.EventApi = function () {
'use strict';
var DomApi = Polymer.DomApi.ctor;
var Settings = Polymer.Settings;
DomApi.Event = function (event) {
this.event = event;
};
if (Settings.useShadow) {
DomApi.Event.prototype = {
get rootTarget() {
return this.event.path[0];
},
get localTarget() {
return this.event.target;
},
get path() {
var path = this.event.path;
if (!Array.isArray(path)) {
path = Array.prototype.slice.call(path);
}
return path;
}
};
} else {
DomApi.Event.prototype = {
get rootTarget() {
return this.event.target;
},
get localTarget() {
var current = this.event.currentTarget;
var currentRoot = current && Polymer.dom(current).getOwnerRoot();
var p$ = this.path;
for (var i = 0; i < p$.length; i++) {
if (Polymer.dom(p$[i]).getOwnerRoot() === currentRoot) {
return p$[i];
}
}
},
get path() {
if (!this.event._path) {
var path = [];
var current = this.rootTarget;
while (current) {
path.push(current);
var insertionPoints = Polymer.dom(current).getDestinationInsertionPoints();
if (insertionPoints.length) {
for (var i = 0; i < insertionPoints.length - 1; i++) {
path.push(insertionPoints[i]);
}
current = insertionPoints[insertionPoints.length - 1];
} else {
current = Polymer.dom(current).parentNode || current.host;
}
}
path.push(window);
this.event._path = path;
}
return this.event._path;
}
};
}
var factory = function (event) {
if (!event.__eventApi) {
event.__eventApi = new DomApi.Event(event);
}
return event.__eventApi;
};
return { factory: factory };
}();(function () {
'use strict';
var DomApi = Polymer.DomApi.ctor;
var useShadow = Polymer.Settings.useShadow;
Object.defineProperty(DomApi.prototype, 'classList', {
get: function () {
if (!this._classList) {
this._classList = new DomApi.ClassList(this);
}
return this._classList;
},
configurable: true
});
DomApi.ClassList = function (host) {
this.domApi = host;
this.node = host.node;
};
DomApi.ClassList.prototype = {
add: function () {
this.node.classList.add.apply(this.node.classList, arguments);
this._distributeParent();
},
remove: function () {
this.node.classList.remove.apply(this.node.classList, arguments);
this._distributeParent();
},
toggle: function () {
this.node.classList.toggle.apply(this.node.classList, arguments);
this._distributeParent();
},
_distributeParent: function () {
if (!useShadow) {
this.domApi._maybeDistributeParent();
}
},
contains: function () {
return this.node.classList.contains.apply(this.node.classList, arguments);
}
};
}());(function () {
'use strict';
var DomApi = Polymer.DomApi.ctor;
var Settings = Polymer.Settings;
DomApi.EffectiveNodesObserver = function (domApi) {
this.domApi = domApi;
this.node = this.domApi.node;
this._listeners = [];
};
DomApi.EffectiveNodesObserver.prototype = {
addListener: function (callback) {
if (!this._isSetup) {
this._setup();
this._isSetup = true;
}
var listener = {
fn: callback,
_nodes: []
};
this._listeners.push(listener);
this._scheduleNotify();
return listener;
},
removeListener: function (handle) {
var i = this._listeners.indexOf(handle);
if (i >= 0) {
this._listeners.splice(i, 1);
handle._nodes = [];
}
if (!this._hasListeners()) {
this._cleanup();
this._isSetup = false;
}
},
_setup: function () {
this._observeContentElements(this.domApi.childNodes);
},
_cleanup: function () {
this._unobserveContentElements(this.domApi.childNodes);
},
_hasListeners: function () {
return Boolean(this._listeners.length);
},
_scheduleNotify: function () {
if (this._debouncer) {
this._debouncer.stop();
}
this._debouncer = Polymer.Debounce(this._debouncer, this._notify);
this._debouncer.context = this;
Polymer.dom.addDebouncer(this._debouncer);
},
notify: function () {
if (this._hasListeners()) {
this._scheduleNotify();
}
},
_notify: function () {
this._beforeCallListeners();
this._callListeners();
},
_beforeCallListeners: function () {
this._updateContentElements();
},
_updateContentElements: function () {
this._observeContentElements(this.domApi.childNodes);
},
_observeContentElements: function (elements) {
for (var i = 0, n; i < elements.length && (n = elements[i]); i++) {
if (this._isContent(n)) {
n.__observeNodesMap = n.__observeNodesMap || new WeakMap();
if (!n.__observeNodesMap.has(this)) {
n.__observeNodesMap.set(this, this._observeContent(n));
}
}
}
},
_observeContent: function (content) {
var self = this;
var h = Polymer.dom(content).observeNodes(function () {
self._scheduleNotify();
});
h._avoidChangeCalculation = true;
return h;
},
_unobserveContentElements: function (elements) {
for (var i = 0, n, h; i < elements.length && (n = elements[i]); i++) {
if (this._isContent(n)) {
h = n.__observeNodesMap.get(this);
if (h) {
Polymer.dom(n).unobserveNodes(h);
n.__observeNodesMap.delete(this);
}
}
}
},
_isContent: function (node) {
return node.localName === 'content';
},
_callListeners: function () {
var o$ = this._listeners;
var nodes = this._getEffectiveNodes();
for (var i = 0, o; i < o$.length && (o = o$[i]); i++) {
var info = this._generateListenerInfo(o, nodes);
if (info || o._alwaysNotify) {
this._callListener(o, info);
}
}
},
_getEffectiveNodes: function () {
return this.domApi.getEffectiveChildNodes();
},
_generateListenerInfo: function (listener, newNodes) {
if (listener._avoidChangeCalculation) {
return true;
}
var oldNodes = listener._nodes;
var info = {
target: this.node,
addedNodes: [],
removedNodes: []
};
var splices = Polymer.ArraySplice.calculateSplices(newNodes, oldNodes);
for (var i = 0, s; i < splices.length && (s = splices[i]); i++) {
for (var j = 0, n; j < s.removed.length && (n = s.removed[j]); j++) {
info.removedNodes.push(n);
}
}
for (i = 0, s; i < splices.length && (s = splices[i]); i++) {
for (j = s.index; j < s.index + s.addedCount; j++) {
info.addedNodes.push(newNodes[j]);
}
}
listener._nodes = newNodes;
if (info.addedNodes.length || info.removedNodes.length) {
return info;
}
},
_callListener: function (listener, info) {
return listener.fn.call(this.node, info);
},
enableShadowAttributeTracking: function () {
}
};
if (Settings.useShadow) {
var baseSetup = DomApi.EffectiveNodesObserver.prototype._setup;
var baseCleanup = DomApi.EffectiveNodesObserver.prototype._cleanup;
Polymer.Base.extend(DomApi.EffectiveNodesObserver.prototype, {
_setup: function () {
if (!this._observer) {
var self = this;
this._mutationHandler = function (mxns) {
if (mxns && mxns.length) {
self._scheduleNotify();
}
};
this._observer = new MutationObserver(this._mutationHandler);
this._boundFlush = function () {
self._flush();
};
Polymer.dom.addStaticFlush(this._boundFlush);
this._observer.observe(this.node, { childList: true });
}
baseSetup.call(this);
},
_cleanup: function () {
this._observer.disconnect();
this._observer = null;
this._mutationHandler = null;
Polymer.dom.removeStaticFlush(this._boundFlush);
baseCleanup.call(this);
},
_flush: function () {
if (this._observer) {
this._mutationHandler(this._observer.takeRecords());
}
},
enableShadowAttributeTracking: function () {
if (this._observer) {
this._makeContentListenersAlwaysNotify();
this._observer.disconnect();
this._observer.observe(this.node, {
childList: true,
attributes: true,
subtree: true
});
var root = this.domApi.getOwnerRoot();
var host = root && root.host;
if (host && Polymer.dom(host).observer) {
Polymer.dom(host).observer.enableShadowAttributeTracking();
}
}
},
_makeContentListenersAlwaysNotify: function () {
for (var i = 0, h; i < this._listeners.length; i++) {
h = this._listeners[i];
h._alwaysNotify = h._isContentListener;
}
}
});
}
}());(function () {
'use strict';
var DomApi = Polymer.DomApi.ctor;
var Settings = Polymer.Settings;
DomApi.DistributedNodesObserver = function (domApi) {
DomApi.EffectiveNodesObserver.call(this, domApi);
};
DomApi.DistributedNodesObserver.prototype = Object.create(DomApi.EffectiveNodesObserver.prototype);
Polymer.Base.extend(DomApi.DistributedNodesObserver.prototype, {
_setup: function () {
},
_cleanup: function () {
},
_beforeCallListeners: function () {
},
_getEffectiveNodes: function () {
return this.domApi.getDistributedNodes();
}
});
if (Settings.useShadow) {
Polymer.Base.extend(DomApi.DistributedNodesObserver.prototype, {
_setup: function () {
if (!this._observer) {
var root = this.domApi.getOwnerRoot();
var host = root && root.host;
if (host) {
var self = this;
this._observer = Polymer.dom(host).observeNodes(function () {
self._scheduleNotify();
});
this._observer._isContentListener = true;
if (this._hasAttrSelect()) {
Polymer.dom(host).observer.enableShadowAttributeTracking();
}
}
}
},
_hasAttrSelect: function () {
var select = this.node.getAttribute('select');
return select && select.match(/[[.]+/);
},
_cleanup: function () {
var root = this.domApi.getOwnerRoot();
var host = root && root.host;
if (host) {
Polymer.dom(host).unobserveNodes(this._observer);
}
this._observer = null;
}
});
}
}());(function () {
var DomApi = Polymer.DomApi;
var TreeApi = Polymer.TreeApi;
Polymer.Base._addFeature({
_prepShady: function () {
this._useContent = this._useContent || Boolean(this._template);
},
_setupShady: function () {
this.shadyRoot = null;
if (!this.__domApi) {
this.__domApi = null;
}
if (!this.__dom) {
this.__dom = null;
}
if (!this._ownerShadyRoot) {
this._ownerShadyRoot = undefined;
}
},
_poolContent: function () {
if (this._useContent) {
TreeApi.Logical.saveChildNodes(this);
}
},
_setupRoot: function () {
if (this._useContent) {
this._createLocalRoot();
if (!this.dataHost) {
upgradeLogicalChildren(TreeApi.Logical.getChildNodes(this));
}
}
},
_createLocalRoot: function () {
this.shadyRoot = this.root;
this.shadyRoot._distributionClean = false;
this.shadyRoot._hasDistributed = false;
this.shadyRoot._isShadyRoot = true;
this.shadyRoot._dirtyRoots = [];
var i$ = this.shadyRoot._insertionPoints = !this._notes || this._notes._hasContent ? this.shadyRoot.querySelectorAll('content') : [];
TreeApi.Logical.saveChildNodes(this.shadyRoot);
for (var i = 0, c; i < i$.length; i++) {
c = i$[i];
TreeApi.Logical.saveChildNodes(c);
TreeApi.Logical.saveChildNodes(c.parentNode);
}
this.shadyRoot.host = this;
},
get domHost() {
var root = Polymer.dom(this).getOwnerRoot();
return root && root.host;
},
distributeContent: function (updateInsertionPoints) {
if (this.shadyRoot) {
this.shadyRoot._invalidInsertionPoints = this.shadyRoot._invalidInsertionPoints || updateInsertionPoints;
var host = getTopDistributingHost(this);
Polymer.dom(this)._lazyDistribute(host);
}
},
_distributeContent: function () {
if (this._useContent && !this.shadyRoot._distributionClean) {
if (this.shadyRoot._invalidInsertionPoints) {
Polymer.dom(this)._updateInsertionPoints(this);
this.shadyRoot._invalidInsertionPoints = false;
}
this._beginDistribute();
this._distributeDirtyRoots();
this._finishDistribute();
}
},
_beginDistribute: function () {
if (this._useContent && DomApi.hasInsertionPoint(this.shadyRoot)) {
this._resetDistribution();
this._distributePool(this.shadyRoot, this._collectPool());
}
},
_distributeDirtyRoots: function () {
var c$ = this.shadyRoot._dirtyRoots;
for (var i = 0, l = c$.length, c; i < l && (c = c$[i]); i++) {
c._distributeContent();
}
this.shadyRoot._dirtyRoots = [];
},
_finishDistribute: function () {
if (this._useContent) {
this.shadyRoot._distributionClean = true;
if (DomApi.hasInsertionPoint(this.shadyRoot)) {
this._composeTree();
notifyContentObservers(this.shadyRoot);
} else {
if (!this.shadyRoot._hasDistributed) {
TreeApi.Composed.clearChildNodes(this);
this.appendChild(this.shadyRoot);
} else {
var children = this._composeNode(this);
this._updateChildNodes(this, children);
}
}
if (!this.shadyRoot._hasDistributed) {
notifyInitialDistribution(this);
}
this.shadyRoot._hasDistributed = true;
}
},
elementMatches: function (selector, node) {
node = node || this;
return DomApi.matchesSelector.call(node, selector);
},
_resetDistribution: function () {
var children = TreeApi.Logical.getChildNodes(this);
for (var i = 0; i < children.length; i++) {
var child = children[i];
if (child._destinationInsertionPoints) {
child._destinationInsertionPoints = undefined;
}
if (isInsertionPoint(child)) {
clearDistributedDestinationInsertionPoints(child);
}
}
var root = this.shadyRoot;
var p$ = root._insertionPoints;
for (var j = 0; j < p$.length; j++) {
p$[j]._distributedNodes = [];
}
},
_collectPool: function () {
var pool = [];
var children = TreeApi.Logical.getChildNodes(this);
for (var i = 0; i < children.length; i++) {
var child = children[i];
if (isInsertionPoint(child)) {
pool.push.apply(pool, child._distributedNodes);
} else {
pool.push(child);
}
}
return pool;
},
_distributePool: function (node, pool) {
var p$ = node._insertionPoints;
for (var i = 0, l = p$.length, p; i < l && (p = p$[i]); i++) {
this._distributeInsertionPoint(p, pool);
maybeRedistributeParent(p, this);
}
},
_distributeInsertionPoint: function (content, pool) {
var anyDistributed = false;
for (var i = 0, l = pool.length, node; i < l; i++) {
node = pool[i];
if (!node) {
continue;
}
if (this._matchesContentSelect(node, content)) {
distributeNodeInto(node, content);
pool[i] = undefined;
anyDistributed = true;
}
}
if (!anyDistributed) {
var children = TreeApi.Logical.getChildNodes(content);
for (var j = 0; j < children.length; j++) {
distributeNodeInto(children[j], content);
}
}
},
_composeTree: function () {
this._updateChildNodes(this, this._composeNode(this));
var p$ = this.shadyRoot._insertionPoints;
for (var i = 0, l = p$.length, p, parent; i < l && (p = p$[i]); i++) {
parent = TreeApi.Logical.getParentNode(p);
if (!parent._useContent && parent !== this && parent !== this.shadyRoot) {
this._updateChildNodes(parent, this._composeNode(parent));
}
}
},
_composeNode: function (node) {
var children = [];
var c$ = TreeApi.Logical.getChildNodes(node.shadyRoot || node);
for (var i = 0; i < c$.length; i++) {
var child = c$[i];
if (isInsertionPoint(child)) {
var distributedNodes = child._distributedNodes;
for (var j = 0; j < distributedNodes.length; j++) {
var distributedNode = distributedNodes[j];
if (isFinalDestination(child, distributedNode)) {
children.push(distributedNode);
}
}
} else {
children.push(child);
}
}
return children;
},
_updateChildNodes: function (container, children) {
var composed = TreeApi.Composed.getChildNodes(container);
var splices = Polymer.ArraySplice.calculateSplices(children, composed);
for (var i = 0, d = 0, s; i < splices.length && (s = splices[i]); i++) {
for (var j = 0, n; j < s.removed.length && (n = s.removed[j]); j++) {
if (TreeApi.Composed.getParentNode(n) === container) {
TreeApi.Composed.removeChild(container, n);
}
composed.splice(s.index + d, 1);
}
d -= s.addedCount;
}
for (var i = 0, s, next; i < splices.length && (s = splices[i]); i++) {
next = composed[s.index];
for (j = s.index, n; j < s.index + s.addedCount; j++) {
n = children[j];
TreeApi.Composed.insertBefore(container, n, next);
composed.splice(j, 0, n);
}
}
},
_matchesContentSelect: function (node, contentElement) {
var select = contentElement.getAttribute('select');
if (!select) {
return true;
}
select = select.trim();
if (!select) {
return true;
}
if (!(node instanceof Element)) {
return false;
}
var validSelectors = /^(:not\()?[*.#[a-zA-Z_|]/;
if (!validSelectors.test(select)) {
return false;
}
return this.elementMatches(select, node);
},
_elementAdd: function () {
},
_elementRemove: function () {
}
});
function distributeNodeInto(child, insertionPoint) {
insertionPoint._distributedNodes.push(child);
var points = child._destinationInsertionPoints;
if (!points) {
child._destinationInsertionPoints = [insertionPoint];
} else {
points.push(insertionPoint);
}
}
function clearDistributedDestinationInsertionPoints(content) {
var e$ = content._distributedNodes;
if (e$) {
for (var i = 0; i < e$.length; i++) {
var d = e$[i]._destinationInsertionPoints;
if (d) {
d.splice(d.indexOf(content) + 1, d.length);
}
}
}
}
function maybeRedistributeParent(content, host) {
var parent = TreeApi.Logical.getParentNode(content);
if (parent && parent.shadyRoot && DomApi.hasInsertionPoint(parent.shadyRoot) && parent.shadyRoot._distributionClean) {
parent.shadyRoot._distributionClean = false;
host.shadyRoot._dirtyRoots.push(parent);
}
}
function isFinalDestination(insertionPoint, node) {
var points = node._destinationInsertionPoints;
return points && points[points.length - 1] === insertionPoint;
}
function isInsertionPoint(node) {
return node.localName == 'content';
}
function getTopDistributingHost(host) {
while (host && hostNeedsRedistribution(host)) {
host = host.domHost;
}
return host;
}
function hostNeedsRedistribution(host) {
var c$ = TreeApi.Logical.getChildNodes(host);
for (var i = 0, c; i < c$.length; i++) {
c = c$[i];
if (c.localName && c.localName === 'content') {
return host.domHost;
}
}
}
function notifyContentObservers(root) {
for (var i = 0, c; i < root._insertionPoints.length; i++) {
c = root._insertionPoints[i];
if (DomApi.hasApi(c)) {
Polymer.dom(c).notifyObserver();
}
}
}
function notifyInitialDistribution(host) {
if (DomApi.hasApi(host)) {
Polymer.dom(host).notifyObserver();
}
}
var needsUpgrade = window.CustomElements && !CustomElements.useNative;
function upgradeLogicalChildren(children) {
if (needsUpgrade && children) {
for (var i = 0; i < children.length; i++) {
CustomElements.upgrade(children[i]);
}
}
}
}());if (Polymer.Settings.useShadow) {
Polymer.Base._addFeature({
_poolContent: function () {
},
_beginDistribute: function () {
},
distributeContent: function () {
},
_distributeContent: function () {
},
_finishDistribute: function () {
},
_createLocalRoot: function () {
this.createShadowRoot();
this.shadowRoot.appendChild(this.root);
this.root = this.shadowRoot;
}
});
}Polymer.Async = {
_currVal: 0,
_lastVal: 0,
_callbacks: [],
_twiddleContent: 0,
_twiddle: document.createTextNode(''),
run: function (callback, waitTime) {
if (waitTime > 0) {
return ~setTimeout(callback, waitTime);
} else {
this._twiddle.textContent = this._twiddleContent++;
this._callbacks.push(callback);
return this._currVal++;
}
},
cancel: function (handle) {
if (handle < 0) {
clearTimeout(~handle);
} else {
var idx = handle - this._lastVal;
if (idx >= 0) {
if (!this._callbacks[idx]) {
throw 'invalid async handle: ' + handle;
}
this._callbacks[idx] = null;
}
}
},
_atEndOfMicrotask: function () {
var len = this._callbacks.length;
for (var i = 0; i < len; i++) {
var cb = this._callbacks[i];
if (cb) {
try {
cb();
} catch (e) {
i++;
this._callbacks.splice(0, i);
this._lastVal += i;
this._twiddle.textContent = this._twiddleContent++;
throw e;
}
}
}
this._callbacks.splice(0, len);
this._lastVal += len;
}
};
new window.MutationObserver(function () {
Polymer.Async._atEndOfMicrotask();
}).observe(Polymer.Async._twiddle, { characterData: true });Polymer.Debounce = function () {
var Async = Polymer.Async;
var Debouncer = function (context) {
this.context = context;
var self = this;
this.boundComplete = function () {
self.complete();
};
};
Debouncer.prototype = {
go: function (callback, wait) {
var h;
this.finish = function () {
Async.cancel(h);
};
h = Async.run(this.boundComplete, wait);
this.callback = callback;
},
stop: function () {
if (this.finish) {
this.finish();
this.finish = null;
this.callback = null;
}
},
complete: function () {
if (this.finish) {
var callback = this.callback;
this.stop();
callback.call(this.context);
}
}
};
function debounce(debouncer, callback, wait) {
if (debouncer) {
debouncer.stop();
} else {
debouncer = new Debouncer(this);
}
debouncer.go(callback, wait);
return debouncer;
}
return debounce;
}();Polymer.Base._addFeature({
_setupDebouncers: function () {
this._debouncers = {};
},
debounce: function (jobName, callback, wait) {
return this._debouncers[jobName] = Polymer.Debounce.call(this, this._debouncers[jobName], callback, wait);
},
isDebouncerActive: function (jobName) {
var debouncer = this._debouncers[jobName];
return !!(debouncer && debouncer.finish);
},
flushDebouncer: function (jobName) {
var debouncer = this._debouncers[jobName];
if (debouncer) {
debouncer.complete();
}
},
cancelDebouncer: function (jobName) {
var debouncer = this._debouncers[jobName];
if (debouncer) {
debouncer.stop();
}
}
});Polymer.DomModule = document.createElement('dom-module');
Polymer.Base._addFeature({
_registerFeatures: function () {
this._prepIs();
this._prepBehaviors();
this._prepConstructor();
this._prepTemplate();
this._prepShady();
this._prepPropertyInfo();
},
_prepBehavior: function (b) {
this._addHostAttributes(b.hostAttributes);
},
_initFeatures: function () {
this._registerHost();
if (this._template) {
this._poolContent();
this._beginHosting();
this._stampTemplate();
this._endHosting();
}
this._marshalHostAttributes();
this._setupDebouncers();
this._marshalBehaviors();
this._tryReady();
},
_marshalBehavior: function (b) {
}
});
Polymer.nar = [];
Polymer.Annotations = {
parseAnnotations: function (template) {
var list = [];
var content = template._content || template.content;
this._parseNodeAnnotations(content, list, template.hasAttribute('strip-whitespace'));
return list;
},
_parseNodeAnnotations: function (node, list, stripWhiteSpace) {
return node.nodeType === Node.TEXT_NODE ? this._parseTextNodeAnnotation(node, list) : this._parseElementAnnotations(node, list, stripWhiteSpace);
},
_bindingRegex: function () {
var IDENT = '(?:' + '[a-zA-Z_$][\\w.:$\\-*]*' + ')';
var NUMBER = '(?:' + '[-+]?[0-9]*\\.?[0-9]+(?:[eE][-+]?[0-9]+)?' + ')';
var SQUOTE_STRING = '(?:' + '\'(?:[^\'\\\\]|\\\\.)*\'' + ')';
var DQUOTE_STRING = '(?:' + '"(?:[^"\\\\]|\\\\.)*"' + ')';
var STRING = '(?:' + SQUOTE_STRING + '|' + DQUOTE_STRING + ')';
var ARGUMENT = '(?:' + IDENT + '|' + NUMBER + '|' + STRING + '\\s*' + ')';
var ARGUMENTS = '(?:' + ARGUMENT + '(?:,\\s*' + ARGUMENT + ')*' + ')';
var ARGUMENT_LIST = '(?:' + '\\(\\s*' + '(?:' + ARGUMENTS + '?' + ')' + '\\)\\s*' + ')';
var BINDING = '(' + IDENT + '\\s*' + ARGUMENT_LIST + '?' + ')';
var OPEN_BRACKET = '(\\[\\[|{{)' + '\\s*';
var CLOSE_BRACKET = '(?:]]|}})';
var NEGATE = '(?:(!)\\s*)?';
var EXPRESSION = OPEN_BRACKET + NEGATE + BINDING + CLOSE_BRACKET;
return new RegExp(EXPRESSION, 'g');
}(),
_parseBindings: function (text) {
var re = this._bindingRegex;
var parts = [];
var lastIndex = 0;
var m;
while ((m = re.exec(text)) !== null) {
if (m.index > lastIndex) {
parts.push({ literal: text.slice(lastIndex, m.index) });
}
var mode = m[1][0];
var negate = Boolean(m[2]);
var value = m[3].trim();
var customEvent, notifyEvent, colon;
if (mode == '{' && (colon = value.indexOf('::')) > 0) {
notifyEvent = value.substring(colon + 2);
value = value.substring(0, colon);
customEvent = true;
}
parts.push({
compoundIndex: parts.length,
value: value,
mode: mode,
negate: negate,
event: notifyEvent,
customEvent: customEvent
});
lastIndex = re.lastIndex;
}
if (lastIndex && lastIndex < text.length) {
var literal = text.substring(lastIndex);
if (literal) {
parts.push({ literal: literal });
}
}
if (parts.length) {
return parts;
}
},
_literalFromParts: function (parts) {
var s = '';
for (var i = 0; i < parts.length; i++) {
var literal = parts[i].literal;
s += literal || '';
}
return s;
},
_parseTextNodeAnnotation: function (node, list) {
var parts = this._parseBindings(node.textContent);
if (parts) {
node.textContent = this._literalFromParts(parts) || ' ';
var annote = {
bindings: [{
kind: 'text',
name: 'textContent',
parts: parts,
isCompound: parts.length !== 1
}]
};
list.push(annote);
return annote;
}
},
_parseElementAnnotations: function (element, list, stripWhiteSpace) {
var annote = {
bindings: [],
events: []
};
if (element.localName === 'content') {
list._hasContent = true;
}
this._parseChildNodesAnnotations(element, annote, list, stripWhiteSpace);
if (element.attributes) {
this._parseNodeAttributeAnnotations(element, annote, list);
if (this.prepElement) {
this.prepElement(element);
}
}
if (annote.bindings.length || annote.events.length || annote.id) {
list.push(annote);
}
return annote;
},
_parseChildNodesAnnotations: function (root, annote, list, stripWhiteSpace) {
if (root.firstChild) {
var node = root.firstChild;
var i = 0;
while (node) {
var next = node.nextSibling;
if (node.localName === 'template' && !node.hasAttribute('preserve-content')) {
this._parseTemplate(node, i, list, annote);
}
if (node.nodeType === Node.TEXT_NODE) {
var n = next;
while (n && n.nodeType === Node.TEXT_NODE) {
node.textContent += n.textContent;
next = n.nextSibling;
root.removeChild(n);
n = next;
}
if (stripWhiteSpace && !node.textContent.trim()) {
root.removeChild(node);
i--;
}
}
if (node.parentNode) {
var childAnnotation = this._parseNodeAnnotations(node, list, stripWhiteSpace);
if (childAnnotation) {
childAnnotation.parent = annote;
childAnnotation.index = i;
}
}
node = next;
i++;
}
}
},
_parseTemplate: function (node, index, list, parent) {
var content = document.createDocumentFragment();
content._notes = this.parseAnnotations(node);
content.appendChild(node.content);
list.push({
bindings: Polymer.nar,
events: Polymer.nar,
templateContent: content,
parent: parent,
index: index
});
},
_parseNodeAttributeAnnotations: function (node, annotation) {
var attrs = Array.prototype.slice.call(node.attributes);
for (var i = attrs.length - 1, a; a = attrs[i]; i--) {
var n = a.name;
var v = a.value;
var b;
if (n.slice(0, 3) === 'on-') {
node.removeAttribute(n);
annotation.events.push({
name: n.slice(3),
value: v
});
} else if (b = this._parseNodeAttributeAnnotation(node, n, v)) {
annotation.bindings.push(b);
} else if (n === 'id') {
annotation.id = v;
}
}
},
_parseNodeAttributeAnnotation: function (node, name, value) {
var parts = this._parseBindings(value);
if (parts) {
var origName = name;
var kind = 'property';
if (name[name.length - 1] == '$') {
name = name.slice(0, -1);
kind = 'attribute';
}
var literal = this._literalFromParts(parts);
if (literal && kind == 'attribute') {
node.setAttribute(name, literal);
}
if (node.localName === 'input' && origName === 'value') {
node.setAttribute(origName, '');
}
node.removeAttribute(origName);
var propertyName = Polymer.CaseMap.dashToCamelCase(name);
if (kind === 'property') {
name = propertyName;
}
return {
kind: kind,
name: name,
propertyName: propertyName,
parts: parts,
literal: literal,
isCompound: parts.length !== 1
};
}
},
findAnnotatedNode: function (root, annote) {
var parent = annote.parent && Polymer.Annotations.findAnnotatedNode(root, annote.parent);
if (parent) {
for (var n = parent.firstChild, i = 0; n; n = n.nextSibling) {
if (annote.index === i++) {
return n;
}
}
} else {
return root;
}
}
};(function () {
function resolveCss(cssText, ownerDocument) {
return cssText.replace(CSS_URL_RX, function (m, pre, url, post) {
return pre + '\'' + resolve(url.replace(/["']/g, ''), ownerDocument) + '\'' + post;
});
}
function resolveAttrs(element, ownerDocument) {
for (var name in URL_ATTRS) {
var a$ = URL_ATTRS[name];
for (var i = 0, l = a$.length, a, at, v; i < l && (a = a$[i]); i++) {
if (name === '*' || element.localName === name) {
at = element.attributes[a];
v = at && at.value;
if (v && v.search(BINDING_RX) < 0) {
at.value = a === 'style' ? resolveCss(v, ownerDocument) : resolve(v, ownerDocument);
}
}
}
}
}
function resolve(url, ownerDocument) {
if (url && ABS_URL.test(url)) {
return url;
}
var resolver = getUrlResolver(ownerDocument);
resolver.href = url;
return resolver.href || url;
}
var tempDoc;
var tempDocBase;
function resolveUrl(url, baseUri) {
if (!tempDoc) {
tempDoc = document.implementation.createHTMLDocument('temp');
tempDocBase = tempDoc.createElement('base');
tempDoc.head.appendChild(tempDocBase);
}
tempDocBase.href = baseUri;
return resolve(url, tempDoc);
}
function getUrlResolver(ownerDocument) {
return ownerDocument.__urlResolver || (ownerDocument.__urlResolver = ownerDocument.createElement('a'));
}
var CSS_URL_RX = /(url\()([^)]*)(\))/g;
var URL_ATTRS = {
'*': [
'href',
'src',
'style',
'url'
],
form: ['action']
};
var ABS_URL = /(^\/)|(^#)|(^[\w-\d]*:)/;
var BINDING_RX = /\{\{|\[\[/;
Polymer.ResolveUrl = {
resolveCss: resolveCss,
resolveAttrs: resolveAttrs,
resolveUrl: resolveUrl
};
}());Polymer.Base._addFeature({
_prepAnnotations: function () {
if (!this._template) {
this._notes = [];
} else {
var self = this;
Polymer.Annotations.prepElement = function (element) {
self._prepElement(element);
};
if (this._template._content && this._template._content._notes) {
this._notes = this._template._content._notes;
} else {
this._notes = Polymer.Annotations.parseAnnotations(this._template);
this._processAnnotations(this._notes);
}
Polymer.Annotations.prepElement = null;
}
},
_processAnnotations: function (notes) {
for (var i = 0; i < notes.length; i++) {
var note = notes[i];
for (var j = 0; j < note.bindings.length; j++) {
var b = note.bindings[j];
for (var k = 0; k < b.parts.length; k++) {
var p = b.parts[k];
if (!p.literal) {
var signature = this._parseMethod(p.value);
if (signature) {
p.signature = signature;
} else {
p.model = this._modelForPath(p.value);
}
}
}
}
if (note.templateContent) {
this._processAnnotations(note.templateContent._notes);
var pp = note.templateContent._parentProps = this._discoverTemplateParentProps(note.templateContent._notes);
var bindings = [];
for (var prop in pp) {
var name = '_parent_' + prop;
bindings.push({
index: note.index,
kind: 'property',
name: name,
propertyName: name,
parts: [{
mode: '{',
model: prop,
value: prop
}]
});
}
note.bindings = note.bindings.concat(bindings);
}
}
},
_discoverTemplateParentProps: function (notes) {
var pp = {};
for (var i = 0, n; i < notes.length && (n = notes[i]); i++) {
for (var j = 0, b$ = n.bindings, b; j < b$.length && (b = b$[j]); j++) {
for (var k = 0, p$ = b.parts, p; k < p$.length && (p = p$[k]); k++) {
if (p.signature) {
var args = p.signature.args;
for (var kk = 0; kk < args.length; kk++) {
var model = args[kk].model;
if (model) {
pp[model] = true;
}
}
if (p.signature.dynamicFn) {
pp[p.signature.method] = true;
}
} else {
if (p.model) {
pp[p.model] = true;
}
}
}
}
if (n.templateContent) {
var tpp = n.templateContent._parentProps;
Polymer.Base.mixin(pp, tpp);
}
}
return pp;
},
_prepElement: function (element) {
Polymer.ResolveUrl.resolveAttrs(element, this._template.ownerDocument);
},
_findAnnotatedNode: Polymer.Annotations.findAnnotatedNode,
_marshalAnnotationReferences: function () {
if (this._template) {
this._marshalIdNodes();
this._marshalAnnotatedNodes();
this._marshalAnnotatedListeners();
}
},
_configureAnnotationReferences: function () {
var notes = this._notes;
var nodes = this._nodes;
for (var i = 0; i < notes.length; i++) {
var note = notes[i];
var node = nodes[i];
this._configureTemplateContent(note, node);
this._configureCompoundBindings(note, node);
}
},
_configureTemplateContent: function (note, node) {
if (note.templateContent) {
node._content = note.templateContent;
}
},
_configureCompoundBindings: function (note, node) {
var bindings = note.bindings;
for (var i = 0; i < bindings.length; i++) {
var binding = bindings[i];
if (binding.isCompound) {
var storage = node.__compoundStorage__ || (node.__compoundStorage__ = {});
var parts = binding.parts;
var literals = new Array(parts.length);
for (var j = 0; j < parts.length; j++) {
literals[j] = parts[j].literal;
}
var name = binding.name;
storage[name] = literals;
if (binding.literal && binding.kind == 'property') {
if (node._configValue) {
node._configValue(name, binding.literal);
} else {
node[name] = binding.literal;
}
}
}
}
},
_marshalIdNodes: function () {
this.$ = {};
for (var i = 0, l = this._notes.length, a; i < l && (a = this._notes[i]); i++) {
if (a.id) {
this.$[a.id] = this._findAnnotatedNode(this.root, a);
}
}
},
_marshalAnnotatedNodes: function () {
if (this._notes && this._notes.length) {
var r = new Array(this._notes.length);
for (var i = 0; i < this._notes.length; i++) {
r[i] = this._findAnnotatedNode(this.root, this._notes[i]);
}
this._nodes = r;
}
},
_marshalAnnotatedListeners: function () {
for (var i = 0, l = this._notes.length, a; i < l && (a = this._notes[i]); i++) {
if (a.events && a.events.length) {
var node = this._findAnnotatedNode(this.root, a);
for (var j = 0, e$ = a.events, e; j < e$.length && (e = e$[j]); j++) {
this.listen(node, e.name, e.value);
}
}
}
}
});Polymer.Base._addFeature({
listeners: {},
_listenListeners: function (listeners) {
var node, name, eventName;
for (eventName in listeners) {
if (eventName.indexOf('.') < 0) {
node = this;
name = eventName;
} else {
name = eventName.split('.');
node = this.$[name[0]];
name = name[1];
}
this.listen(node, name, listeners[eventName]);
}
},
listen: function (node, eventName, methodName) {
var handler = this._recallEventHandler(this, eventName, node, methodName);
if (!handler) {
handler = this._createEventHandler(node, eventName, methodName);
}
if (handler._listening) {
return;
}
this._listen(node, eventName, handler);
handler._listening = true;
},
_boundListenerKey: function (eventName, methodName) {
return eventName + ':' + methodName;
},
_recordEventHandler: function (host, eventName, target, methodName, handler) {
var hbl = host.__boundListeners;
if (!hbl) {
hbl = host.__boundListeners = new WeakMap();
}
var bl = hbl.get(target);
if (!bl) {
bl = {};
hbl.set(target, bl);
}
var key = this._boundListenerKey(eventName, methodName);
bl[key] = handler;
},
_recallEventHandler: function (host, eventName, target, methodName) {
var hbl = host.__boundListeners;
if (!hbl) {
return;
}
var bl = hbl.get(target);
if (!bl) {
return;
}
var key = this._boundListenerKey(eventName, methodName);
return bl[key];
},
_createEventHandler: function (node, eventName, methodName) {
var host = this;
var handler = function (e) {
if (host[methodName]) {
host[methodName](e, e.detail);
} else {
host._warn(host._logf('_createEventHandler', 'listener method `' + methodName + '` not defined'));
}
};
handler._listening = false;
this._recordEventHandler(host, eventName, node, methodName, handler);
return handler;
},
unlisten: function (node, eventName, methodName) {
var handler = this._recallEventHandler(this, eventName, node, methodName);
if (handler) {
this._unlisten(node, eventName, handler);
handler._listening = false;
}
},
_listen: function (node, eventName, handler) {
node.addEventListener(eventName, handler);
},
_unlisten: function (node, eventName, handler) {
node.removeEventListener(eventName, handler);
}
});(function () {
'use strict';
var wrap = Polymer.DomApi.wrap;
var HAS_NATIVE_TA = typeof document.head.style.touchAction === 'string';
var GESTURE_KEY = '__polymerGestures';
var HANDLED_OBJ = '__polymerGesturesHandled';
var TOUCH_ACTION = '__polymerGesturesTouchAction';
var TAP_DISTANCE = 25;
var TRACK_DISTANCE = 5;
var TRACK_LENGTH = 2;
var MOUSE_TIMEOUT = 2500;
var MOUSE_EVENTS = [
'mousedown',
'mousemove',
'mouseup',
'click'
];
var MOUSE_WHICH_TO_BUTTONS = [
0,
1,
4,
2
];
var MOUSE_HAS_BUTTONS = function () {
try {
return new MouseEvent('test', { buttons: 1 }).buttons === 1;
} catch (e) {
return false;
}
}();
var IS_TOUCH_ONLY = navigator.userAgent.match(/iP(?:[oa]d|hone)|Android/);
var mouseCanceller = function (mouseEvent) {
var sc = mouseEvent.sourceCapabilities;
if (sc && !sc.firesTouchEvents) {
return;
}
mouseEvent[HANDLED_OBJ] = { skip: true };
if (mouseEvent.type === 'click') {
var path = Polymer.dom(mouseEvent).path;
for (var i = 0; i < path.length; i++) {
if (path[i] === POINTERSTATE.mouse.target) {
return;
}
}
mouseEvent.preventDefault();
mouseEvent.stopPropagation();
}
};
function setupTeardownMouseCanceller(setup) {
for (var i = 0, en; i < MOUSE_EVENTS.length; i++) {
en = MOUSE_EVENTS[i];
if (setup) {
document.addEventListener(en, mouseCanceller, true);
} else {
document.removeEventListener(en, mouseCanceller, true);
}
}
}
function ignoreMouse() {
if (IS_TOUCH_ONLY) {
return;
}
if (!POINTERSTATE.mouse.mouseIgnoreJob) {
setupTeardownMouseCanceller(true);
}
var unset = function () {
setupTeardownMouseCanceller();
POINTERSTATE.mouse.target = null;
POINTERSTATE.mouse.mouseIgnoreJob = null;
};
POINTERSTATE.mouse.mouseIgnoreJob = Polymer.Debounce(POINTERSTATE.mouse.mouseIgnoreJob, unset, MOUSE_TIMEOUT);
}
function hasLeftMouseButton(ev) {
var type = ev.type;
if (MOUSE_EVENTS.indexOf(type) === -1) {
return false;
}
if (type === 'mousemove') {
var buttons = ev.buttons === undefined ? 1 : ev.buttons;
if (ev instanceof window.MouseEvent && !MOUSE_HAS_BUTTONS) {
buttons = MOUSE_WHICH_TO_BUTTONS[ev.which] || 0;
}
return Boolean(buttons & 1);
} else {
var button = ev.button === undefined ? 0 : ev.button;
return button === 0;
}
}
function isSyntheticClick(ev) {
if (ev.type === 'click') {
if (ev.detail === 0) {
return true;
}
var t = Gestures.findOriginalTarget(ev);
var bcr = t.getBoundingClientRect();
var x = ev.pageX, y = ev.pageY;
return !(x >= bcr.left && x <= bcr.right && (y >= bcr.top && y <= bcr.bottom));
}
return false;
}
var POINTERSTATE = {
mouse: {
target: null,
mouseIgnoreJob: null
},
touch: {
x: 0,
y: 0,
id: -1,
scrollDecided: false
}
};
function firstTouchAction(ev) {
var path = Polymer.dom(ev).path;
var ta = 'auto';
for (var i = 0, n; i < path.length; i++) {
n = path[i];
if (n[TOUCH_ACTION]) {
ta = n[TOUCH_ACTION];
break;
}
}
return ta;
}
function trackDocument(stateObj, movefn, upfn) {
stateObj.movefn = movefn;
stateObj.upfn = upfn;
document.addEventListener('mousemove', movefn);
document.addEventListener('mouseup', upfn);
}
function untrackDocument(stateObj) {
document.removeEventListener('mousemove', stateObj.movefn);
document.removeEventListener('mouseup', stateObj.upfn);
stateObj.movefn = null;
stateObj.upfn = null;
}
var Gestures = {
gestures: {},
recognizers: [],
deepTargetFind: function (x, y) {
var node = document.elementFromPoint(x, y);
var next = node;
while (next && next.shadowRoot) {
next = next.shadowRoot.elementFromPoint(x, y);
if (next) {
node = next;
}
}
return node;
},
findOriginalTarget: function (ev) {
if (ev.path) {
return ev.path[0];
}
return ev.target;
},
handleNative: function (ev) {
var handled;
var type = ev.type;
var node = wrap(ev.currentTarget);
var gobj = node[GESTURE_KEY];
if (!gobj) {
return;
}
var gs = gobj[type];
if (!gs) {
return;
}
if (!ev[HANDLED_OBJ]) {
ev[HANDLED_OBJ] = {};
if (type.slice(0, 5) === 'touch') {
var t = ev.changedTouches[0];
if (type === 'touchstart') {
if (ev.touches.length === 1) {
POINTERSTATE.touch.id = t.identifier;
}
}
if (POINTERSTATE.touch.id !== t.identifier) {
return;
}
if (!HAS_NATIVE_TA) {
if (type === 'touchstart' || type === 'touchmove') {
Gestures.handleTouchAction(ev);
}
}
if (type === 'touchend') {
POINTERSTATE.mouse.target = Polymer.dom(ev).rootTarget;
ignoreMouse();
}
}
}
handled = ev[HANDLED_OBJ];
if (handled.skip) {
return;
}
var recognizers = Gestures.recognizers;
for (var i = 0, r; i < recognizers.length; i++) {
r = recognizers[i];
if (gs[r.name] && !handled[r.name]) {
if (r.flow && r.flow.start.indexOf(ev.type) > -1 && r.reset) {
r.reset();
}
}
}
for (i = 0, r; i < recognizers.length; i++) {
r = recognizers[i];
if (gs[r.name] && !handled[r.name]) {
handled[r.name] = true;
r[type](ev);
}
}
},
handleTouchAction: function (ev) {
var t = ev.changedTouches[0];
var type = ev.type;
if (type === 'touchstart') {
POINTERSTATE.touch.x = t.clientX;
POINTERSTATE.touch.y = t.clientY;
POINTERSTATE.touch.scrollDecided = false;
} else if (type === 'touchmove') {
if (POINTERSTATE.touch.scrollDecided) {
return;
}
POINTERSTATE.touch.scrollDecided = true;
var ta = firstTouchAction(ev);
var prevent = false;
var dx = Math.abs(POINTERSTATE.touch.x - t.clientX);
var dy = Math.abs(POINTERSTATE.touch.y - t.clientY);
if (!ev.cancelable) {
} else if (ta === 'none') {
prevent = true;
} else if (ta === 'pan-x') {
prevent = dy > dx;
} else if (ta === 'pan-y') {
prevent = dx > dy;
}
if (prevent) {
ev.preventDefault();
} else {
Gestures.prevent('track');
}
}
},
add: function (node, evType, handler) {
node = wrap(node);
var recognizer = this.gestures[evType];
var deps = recognizer.deps;
var name = recognizer.name;
var gobj = node[GESTURE_KEY];
if (!gobj) {
node[GESTURE_KEY] = gobj = {};
}
for (var i = 0, dep, gd; i < deps.length; i++) {
dep = deps[i];
if (IS_TOUCH_ONLY && MOUSE_EVENTS.indexOf(dep) > -1) {
continue;
}
gd = gobj[dep];
if (!gd) {
gobj[dep] = gd = { _count: 0 };
}
if (gd._count === 0) {
node.addEventListener(dep, this.handleNative);
}
gd[name] = (gd[name] || 0) + 1;
gd._count = (gd._count || 0) + 1;
}
node.addEventListener(evType, handler);
if (recognizer.touchAction) {
this.setTouchAction(node, recognizer.touchAction);
}
},
remove: function (node, evType, handler) {
node = wrap(node);
var recognizer = this.gestures[evType];
var deps = recognizer.deps;
var name = recognizer.name;
var gobj = node[GESTURE_KEY];
if (gobj) {
for (var i = 0, dep, gd; i < deps.length; i++) {
dep = deps[i];
gd = gobj[dep];
if (gd && gd[name]) {
gd[name] = (gd[name] || 1) - 1;
gd._count = (gd._count || 1) - 1;
if (gd._count === 0) {
node.removeEventListener(dep, this.handleNative);
}
}
}
}
node.removeEventListener(evType, handler);
},
register: function (recog) {
this.recognizers.push(recog);
for (var i = 0; i < recog.emits.length; i++) {
this.gestures[recog.emits[i]] = recog;
}
},
findRecognizerByEvent: function (evName) {
for (var i = 0, r; i < this.recognizers.length; i++) {
r = this.recognizers[i];
for (var j = 0, n; j < r.emits.length; j++) {
n = r.emits[j];
if (n === evName) {
return r;
}
}
}
return null;
},
setTouchAction: function (node, value) {
if (HAS_NATIVE_TA) {
node.style.touchAction = value;
}
node[TOUCH_ACTION] = value;
},
fire: function (target, type, detail) {
var ev = Polymer.Base.fire(type, detail, {
node: target,
bubbles: true,
cancelable: true
});
if (ev.defaultPrevented) {
var preventer = detail.preventer || detail.sourceEvent;
if (preventer && preventer.preventDefault) {
preventer.preventDefault();
}
}
},
prevent: function (evName) {
var recognizer = this.findRecognizerByEvent(evName);
if (recognizer.info) {
recognizer.info.prevent = true;
}
},
resetMouseCanceller: function () {
if (POINTERSTATE.mouse.mouseIgnoreJob) {
POINTERSTATE.mouse.mouseIgnoreJob.complete();
}
}
};
Gestures.register({
name: 'downup',
deps: [
'mousedown',
'touchstart',
'touchend'
],
flow: {
start: [
'mousedown',
'touchstart'
],
end: [
'mouseup',
'touchend'
]
},
emits: [
'down',
'up'
],
info: {
movefn: null,
upfn: null
},
reset: function () {
untrackDocument(this.info);
},
mousedown: function (e) {
if (!hasLeftMouseButton(e)) {
return;
}
var t = Gestures.findOriginalTarget(e);
var self = this;
var movefn = function movefn(e) {
if (!hasLeftMouseButton(e)) {
self.fire('up', t, e);
untrackDocument(self.info);
}
};
var upfn = function upfn(e) {
if (hasLeftMouseButton(e)) {
self.fire('up', t, e);
}
untrackDocument(self.info);
};
trackDocument(this.info, movefn, upfn);
this.fire('down', t, e);
},
touchstart: function (e) {
this.fire('down', Gestures.findOriginalTarget(e), e.changedTouches[0], e);
},
touchend: function (e) {
this.fire('up', Gestures.findOriginalTarget(e), e.changedTouches[0], e);
},
fire: function (type, target, event, preventer) {
Gestures.fire(target, type, {
x: event.clientX,
y: event.clientY,
sourceEvent: event,
preventer: preventer,
prevent: function (e) {
return Gestures.prevent(e);
}
});
}
});
Gestures.register({
name: 'track',
touchAction: 'none',
deps: [
'mousedown',
'touchstart',
'touchmove',
'touchend'
],
flow: {
start: [
'mousedown',
'touchstart'
],
end: [
'mouseup',
'touchend'
]
},
emits: ['track'],
info: {
x: 0,
y: 0,
state: 'start',
started: false,
moves: [],
addMove: function (move) {
if (this.moves.length > TRACK_LENGTH) {
this.moves.shift();
}
this.moves.push(move);
},
movefn: null,
upfn: null,
prevent: false
},
reset: function () {
this.info.state = 'start';
this.info.started = false;
this.info.moves = [];
this.info.x = 0;
this.info.y = 0;
this.info.prevent = false;
untrackDocument(this.info);
},
hasMovedEnough: function (x, y) {
if (this.info.prevent) {
return false;
}
if (this.info.started) {
return true;
}
var dx = Math.abs(this.info.x - x);
var dy = Math.abs(this.info.y - y);
return dx >= TRACK_DISTANCE || dy >= TRACK_DISTANCE;
},
mousedown: function (e) {
if (!hasLeftMouseButton(e)) {
return;
}
var t = Gestures.findOriginalTarget(e);
var self = this;
var movefn = function movefn(e) {
var x = e.clientX, y = e.clientY;
if (self.hasMovedEnough(x, y)) {
self.info.state = self.info.started ? e.type === 'mouseup' ? 'end' : 'track' : 'start';
if (self.info.state === 'start') {
Gestures.prevent('tap');
}
self.info.addMove({
x: x,
y: y
});
if (!hasLeftMouseButton(e)) {
self.info.state = 'end';
untrackDocument(self.info);
}
self.fire(t, e);
self.info.started = true;
}
};
var upfn = function upfn(e) {
if (self.info.started) {
movefn(e);
}
untrackDocument(self.info);
};
trackDocument(this.info, movefn, upfn);
this.info.x = e.clientX;
this.info.y = e.clientY;
},
touchstart: function (e) {
var ct = e.changedTouches[0];
this.info.x = ct.clientX;
this.info.y = ct.clientY;
},
touchmove: function (e) {
var t = Gestures.findOriginalTarget(e);
var ct = e.changedTouches[0];
var x = ct.clientX, y = ct.clientY;
if (this.hasMovedEnough(x, y)) {
if (this.info.state === 'start') {
Gestures.prevent('tap');
}
this.info.addMove({
x: x,
y: y
});
this.fire(t, ct);
this.info.state = 'track';
this.info.started = true;
}
},
touchend: function (e) {
var t = Gestures.findOriginalTarget(e);
var ct = e.changedTouches[0];
if (this.info.started) {
this.info.state = 'end';
this.info.addMove({
x: ct.clientX,
y: ct.clientY
});
this.fire(t, ct, e);
}
},
fire: function (target, touch, preventer) {
var secondlast = this.info.moves[this.info.moves.length - 2];
var lastmove = this.info.moves[this.info.moves.length - 1];
var dx = lastmove.x - this.info.x;
var dy = lastmove.y - this.info.y;
var ddx, ddy = 0;
if (secondlast) {
ddx = lastmove.x - secondlast.x;
ddy = lastmove.y - secondlast.y;
}
return Gestures.fire(target, 'track', {
state: this.info.state,
x: touch.clientX,
y: touch.clientY,
dx: dx,
dy: dy,
ddx: ddx,
ddy: ddy,
sourceEvent: touch,
preventer: preventer,
hover: function () {
return Gestures.deepTargetFind(touch.clientX, touch.clientY);
}
});
}
});
Gestures.register({
name: 'tap',
deps: [
'mousedown',
'click',
'touchstart',
'touchend'
],
flow: {
start: [
'mousedown',
'touchstart'
],
end: [
'click',
'touchend'
]
},
emits: ['tap'],
info: {
x: NaN,
y: NaN,
prevent: false
},
reset: function () {
this.info.x = NaN;
this.info.y = NaN;
this.info.prevent = false;
},
save: function (e) {
this.info.x = e.clientX;
this.info.y = e.clientY;
},
mousedown: function (e) {
if (hasLeftMouseButton(e)) {
this.save(e);
}
},
click: function (e) {
if (hasLeftMouseButton(e)) {
this.forward(e);
}
},
touchstart: function (e) {
this.save(e.changedTouches[0], e);
},
touchend: function (e) {
this.forward(e.changedTouches[0], e);
},
forward: function (e, preventer) {
var dx = Math.abs(e.clientX - this.info.x);
var dy = Math.abs(e.clientY - this.info.y);
var t = Gestures.findOriginalTarget(e);
if (isNaN(dx) || isNaN(dy) || dx <= TAP_DISTANCE && dy <= TAP_DISTANCE || isSyntheticClick(e)) {
if (!this.info.prevent) {
Gestures.fire(t, 'tap', {
x: e.clientX,
y: e.clientY,
sourceEvent: e,
preventer: preventer
});
}
}
}
});
var DIRECTION_MAP = {
x: 'pan-x',
y: 'pan-y',
none: 'none',
all: 'auto'
};
Polymer.Base._addFeature({
_setupGestures: function () {
this.__polymerGestures = null;
},
_listen: function (node, eventName, handler) {
if (Gestures.gestures[eventName]) {
Gestures.add(node, eventName, handler);
} else {
node.addEventListener(eventName, handler);
}
},
_unlisten: function (node, eventName, handler) {
if (Gestures.gestures[eventName]) {
Gestures.remove(node, eventName, handler);
} else {
node.removeEventListener(eventName, handler);
}
},
setScrollDirection: function (direction, node) {
node = node || this;
Gestures.setTouchAction(node, DIRECTION_MAP[direction] || 'auto');
}
});
Polymer.Gestures = Gestures;
}());(function () {
'use strict';
Polymer.Base._addFeature({
$$: function (slctr) {
return Polymer.dom(this.root).querySelector(slctr);
},
toggleClass: function (name, bool, node) {
node = node || this;
if (arguments.length == 1) {
bool = !node.classList.contains(name);
}
if (bool) {
Polymer.dom(node).classList.add(name);
} else {
Polymer.dom(node).classList.remove(name);
}
},
toggleAttribute: function (name, bool, node) {
node = node || this;
if (arguments.length == 1) {
bool = !node.hasAttribute(name);
}
if (bool) {
Polymer.dom(node).setAttribute(name, '');
} else {
Polymer.dom(node).removeAttribute(name);
}
},
classFollows: function (name, toElement, fromElement) {
if (fromElement) {
Polymer.dom(fromElement).classList.remove(name);
}
if (toElement) {
Polymer.dom(toElement).classList.add(name);
}
},
attributeFollows: function (name, toElement, fromElement) {
if (fromElement) {
Polymer.dom(fromElement).removeAttribute(name);
}
if (toElement) {
Polymer.dom(toElement).setAttribute(name, '');
}
},
getEffectiveChildNodes: function () {
return Polymer.dom(this).getEffectiveChildNodes();
},
getEffectiveChildren: function () {
var list = Polymer.dom(this).getEffectiveChildNodes();
return list.filter(function (n) {
return n.nodeType === Node.ELEMENT_NODE;
});
},
getEffectiveTextContent: function () {
var cn = this.getEffectiveChildNodes();
var tc = [];
for (var i = 0, c; c = cn[i]; i++) {
if (c.nodeType !== Node.COMMENT_NODE) {
tc.push(Polymer.dom(c).textContent);
}
}
return tc.join('');
},
queryEffectiveChildren: function (slctr) {
var e$ = Polymer.dom(this).queryDistributedElements(slctr);
return e$ && e$[0];
},
queryAllEffectiveChildren: function (slctr) {
return Polymer.dom(this).queryDistributedElements(slctr);
},
getContentChildNodes: function (slctr) {
var content = Polymer.dom(this.root).querySelector(slctr || 'content');
return content ? Polymer.dom(content).getDistributedNodes() : [];
},
getContentChildren: function (slctr) {
return this.getContentChildNodes(slctr).filter(function (n) {
return n.nodeType === Node.ELEMENT_NODE;
});
},
fire: function (type, detail, options) {
options = options || Polymer.nob;
var node = options.node || this;
detail = detail === null || detail === undefined ? {} : detail;
var bubbles = options.bubbles === undefined ? true : options.bubbles;
var cancelable = Boolean(options.cancelable);
var useCache = options._useCache;
var event = this._getEvent(type, bubbles, cancelable, useCache);
event.detail = detail;
if (useCache) {
this.__eventCache[type] = null;
}
node.dispatchEvent(event);
if (useCache) {
this.__eventCache[type] = event;
}
return event;
},
__eventCache: {},
_getEvent: function (type, bubbles, cancelable, useCache) {
var event = useCache && this.__eventCache[type];
if (!event || (event.bubbles != bubbles || event.cancelable != cancelable)) {
event = new Event(type, {
bubbles: Boolean(bubbles),
cancelable: cancelable
});
}
return event;
},
async: function (callback, waitTime) {
var self = this;
return Polymer.Async.run(function () {
callback.call(self);
}, waitTime);
},
cancelAsync: function (handle) {
Polymer.Async.cancel(handle);
},
arrayDelete: function (path, item) {
var index;
if (Array.isArray(path)) {
index = path.indexOf(item);
if (index >= 0) {
return path.splice(index, 1);
}
} else {
var arr = this._get(path);
index = arr.indexOf(item);
if (index >= 0) {
return this.splice(path, index, 1);
}
}
},
transform: function (transform, node) {
node = node || this;
node.style.webkitTransform = transform;
node.style.transform = transform;
},
translate3d: function (x, y, z, node) {
node = node || this;
this.transform('translate3d(' + x + ',' + y + ',' + z + ')', node);
},
importHref: function (href, onload, onerror, optAsync) {
var link = document.createElement('link');
link.rel = 'import';
link.href = href;
var list = Polymer.Base.importHref.imported = Polymer.Base.importHref.imported || {};
var cached = list[link.href];
var imprt = cached || link;
var self = this;
if (onload) {
var loadListener = function (e) {
e.target.__firedLoad = true;
e.target.removeEventListener('load', loadListener);
return onload.call(self, e);
};
imprt.addEventListener('load', loadListener);
}
if (onerror) {
var errorListener = function (e) {
e.target.__firedError = true;
e.target.removeEventListener('error', errorListener);
return onerror.call(self, e);
};
imprt.addEventListener('error', errorListener);
}
if (cached) {
if (cached.__firedLoad) {
cached.dispatchEvent(new Event('load'));
}
if (cached.__firedError) {
cached.dispatchEvent(new Event('error'));
}
} else {
list[link.href] = link;
optAsync = Boolean(optAsync);
if (optAsync) {
link.setAttribute('async', '');
}
document.head.appendChild(link);
}
return imprt;
},
create: function (tag, props) {
var elt = document.createElement(tag);
if (props) {
for (var n in props) {
elt[n] = props[n];
}
}
return elt;
},
isLightDescendant: function (node) {
return this !== node && this.contains(node) && Polymer.dom(this).getOwnerRoot() === Polymer.dom(node).getOwnerRoot();
},
isLocalDescendant: function (node) {
return this.root === Polymer.dom(node).getOwnerRoot();
}
});
if (!Polymer.Settings.useNativeCustomElements) {
var importHref = Polymer.Base.importHref;
Polymer.Base.importHref = function (href, onload, onerror, optAsync) {
CustomElements.ready = false;
var loadFn = function (e) {
CustomElements.upgradeDocumentTree(document);
CustomElements.ready = true;
if (onload) {
return onload.call(this, e);
}
};
return importHref.call(this, href, loadFn, onerror, optAsync);
};
}
}());Polymer.Bind = {
prepareModel: function (model) {
Polymer.Base.mixin(model, this._modelApi);
},
_modelApi: {
_notifyChange: function (source, event, value) {
value = value === undefined ? this[source] : value;
event = event || Polymer.CaseMap.camelToDashCase(source) + '-changed';
this.fire(event, { value: value }, {
bubbles: false,
cancelable: false,
_useCache: true
});
},
_propertySetter: function (property, value, effects, fromAbove) {
var old = this.__data__[property];
if (old !== value && (old === old || value === value)) {
this.__data__[property] = value;
if (typeof value == 'object') {
this._clearPath(property);
}
if (this._propertyChanged) {
this._propertyChanged(property, value, old);
}
if (effects) {
this._effectEffects(property, value, effects, old, fromAbove);
}
}
return old;
},
__setProperty: function (property, value, quiet, node) {
node = node || this;
var effects = node._propertyEffects && node._propertyEffects[property];
if (effects) {
node._propertySetter(property, value, effects, quiet);
} else if (node[property] !== value) {
node[property] = value;
}
},
_effectEffects: function (property, value, effects, old, fromAbove) {
for (var i = 0, l = effects.length, fx; i < l && (fx = effects[i]); i++) {
fx.fn.call(this, property, this[property], fx.effect, old, fromAbove);
}
},
_clearPath: function (path) {
for (var prop in this.__data__) {
if (prop.indexOf(path + '.') === 0) {
this.__data__[prop] = undefined;
}
}
}
},
ensurePropertyEffects: function (model, property) {
if (!model._propertyEffects) {
model._propertyEffects = {};
}
var fx = model._propertyEffects[property];
if (!fx) {
fx = model._propertyEffects[property] = [];
}
return fx;
},
addPropertyEffect: function (model, property, kind, effect) {
var fx = this.ensurePropertyEffects(model, property);
var propEffect = {
kind: kind,
effect: effect,
fn: Polymer.Bind['_' + kind + 'Effect']
};
fx.push(propEffect);
return propEffect;
},
createBindings: function (model) {
var fx$ = model._propertyEffects;
if (fx$) {
for (var n in fx$) {
var fx = fx$[n];
fx.sort(this._sortPropertyEffects);
this._createAccessors(model, n, fx);
}
}
},
_sortPropertyEffects: function () {
var EFFECT_ORDER = {
'compute': 0,
'annotation': 1,
'annotatedComputation': 2,
'reflect': 3,
'notify': 4,
'observer': 5,
'complexObserver': 6,
'function': 7
};
return function (a, b) {
return EFFECT_ORDER[a.kind] - EFFECT_ORDER[b.kind];
};
}(),
_createAccessors: function (model, property, effects) {
var defun = {
get: function () {
return this.__data__[property];
}
};
var setter = function (value) {
this._propertySetter(property, value, effects);
};
var info = model.getPropertyInfo && model.getPropertyInfo(property);
if (info && info.readOnly) {
if (!info.computed) {
model['_set' + this.upper(property)] = setter;
}
} else {
defun.set = setter;
}
Object.defineProperty(model, property, defun);
},
upper: function (name) {
return name[0].toUpperCase() + name.substring(1);
},
_addAnnotatedListener: function (model, index, property, path, event, negated) {
if (!model._bindListeners) {
model._bindListeners = [];
}
var fn = this._notedListenerFactory(property, path, this._isStructured(path), negated);
var eventName = event || Polymer.CaseMap.camelToDashCase(property) + '-changed';
model._bindListeners.push({
index: index,
property: property,
path: path,
changedFn: fn,
event: eventName
});
},
_isStructured: function (path) {
return path.indexOf('.') > 0;
},
_isEventBogus: function (e, target) {
return e.path && e.path[0] !== target;
},
_notedListenerFactory: function (property, path, isStructured, negated) {
return function (target, value, targetPath) {
if (targetPath) {
this._notifyPath(this._fixPath(path, property, targetPath), value);
} else {
value = target[property];
if (negated) {
value = !value;
}
if (!isStructured) {
this[path] = value;
} else {
if (this.__data__[path] != value) {
this.set(path, value);
}
}
}
};
},
prepareInstance: function (inst) {
inst.__data__ = Object.create(null);
},
setupBindListeners: function (inst) {
var b$ = inst._bindListeners;
for (var i = 0, l = b$.length, info; i < l && (info = b$[i]); i++) {
var node = inst._nodes[info.index];
this._addNotifyListener(node, inst, info.event, info.changedFn);
}
},
_addNotifyListener: function (element, context, event, changedFn) {
element.addEventListener(event, function (e) {
return context._notifyListener(changedFn, e);
});
}
};Polymer.Base.extend(Polymer.Bind, {
_shouldAddListener: function (effect) {
return effect.name && effect.kind != 'attribute' && effect.kind != 'text' && !effect.isCompound && effect.parts[0].mode === '{';
},
_annotationEffect: function (source, value, effect) {
if (source != effect.value) {
value = this._get(effect.value);
this.__data__[effect.value] = value;
}
this._applyEffectValue(effect, value);
},
_reflectEffect: function (source, value, effect) {
this.reflectPropertyToAttribute(source, effect.attribute, value);
},
_notifyEffect: function (source, value, effect, old, fromAbove) {
if (!fromAbove) {
this._notifyChange(source, effect.event, value);
}
},
_functionEffect: function (source, value, fn, old, fromAbove) {
fn.call(this, source, value, old, fromAbove);
},
_observerEffect: function (source, value, effect, old) {
var fn = this[effect.method];
if (fn) {
fn.call(this, value, old);
} else {
this._warn(this._logf('_observerEffect', 'observer method `' + effect.method + '` not defined'));
}
},
_complexObserverEffect: function (source, value, effect) {
var fn = this[effect.method];
if (fn) {
var args = Polymer.Bind._marshalArgs(this.__data__, effect, source, value);
if (args) {
fn.apply(this, args);
}
} else if (effect.dynamicFn) {
} else {
this._warn(this._logf('_complexObserverEffect', 'observer method `' + effect.method + '` not defined'));
}
},
_computeEffect: function (source, value, effect) {
var fn = this[effect.method];
if (fn) {
var args = Polymer.Bind._marshalArgs(this.__data__, effect, source, value);
if (args) {
var computedvalue = fn.apply(this, args);
this.__setProperty(effect.name, computedvalue);
}
} else if (effect.dynamicFn) {
} else {
this._warn(this._logf('_computeEffect', 'compute method `' + effect.method + '` not defined'));
}
},
_annotatedComputationEffect: function (source, value, effect) {
var computedHost = this._rootDataHost || this;
var fn = computedHost[effect.method];
if (fn) {
var args = Polymer.Bind._marshalArgs(this.__data__, effect, source, value);
if (args) {
var computedvalue = fn.apply(computedHost, args);
this._applyEffectValue(effect, computedvalue);
}
} else if (effect.dynamicFn) {
} else {
computedHost._warn(computedHost._logf('_annotatedComputationEffect', 'compute method `' + effect.method + '` not defined'));
}
},
_marshalArgs: function (model, effect, path, value) {
var values = [];
var args = effect.args;
var bailoutEarly = args.length > 1 || effect.dynamicFn;
for (var i = 0, l = args.length; i < l; i++) {
var arg = args[i];
var name = arg.name;
var v;
if (arg.literal) {
v = arg.value;
} else if (path === name) {
v = value;
} else {
v = model[name];
if (v === undefined && arg.structured) {
v = Polymer.Base._get(name, model);
}
}
if (bailoutEarly && v === undefined) {
return;
}
if (arg.wildcard) {
var matches = path.indexOf(name + '.') === 0;
values[i] = {
path: matches ? path : name,
value: matches ? value : v,
base: v
};
} else {
values[i] = v;
}
}
return values;
}
});Polymer.Base._addFeature({
_addPropertyEffect: function (property, kind, effect) {
var prop = Polymer.Bind.addPropertyEffect(this, property, kind, effect);
prop.pathFn = this['_' + prop.kind + 'PathEffect'];
},
_prepEffects: function () {
Polymer.Bind.prepareModel(this);
this._addAnnotationEffects(this._notes);
},
_prepBindings: function () {
Polymer.Bind.createBindings(this);
},
_addPropertyEffects: function (properties) {
if (properties) {
for (var p in properties) {
var prop = properties[p];
if (prop.observer) {
this._addObserverEffect(p, prop.observer);
}
if (prop.computed) {
prop.readOnly = true;
this._addComputedEffect(p, prop.computed);
}
if (prop.notify) {
this._addPropertyEffect(p, 'notify', { event: Polymer.CaseMap.camelToDashCase(p) + '-changed' });
}
if (prop.reflectToAttribute) {
var attr = Polymer.CaseMap.camelToDashCase(p);
if (attr[0] === '-') {
this._warn(this._logf('_addPropertyEffects', 'Property ' + p + ' cannot be reflected to attribute ' + attr + ' because "-" is not a valid starting attribute name. Use a lowercase first letter for the property instead.'));
} else {
this._addPropertyEffect(p, 'reflect', { attribute: attr });
}
}
if (prop.readOnly) {
Polymer.Bind.ensurePropertyEffects(this, p);
}
}
}
},
_addComputedEffect: function (name, expression) {
var sig = this._parseMethod(expression);
var dynamicFn = sig.dynamicFn;
for (var i = 0, arg; i < sig.args.length && (arg = sig.args[i]); i++) {
this._addPropertyEffect(arg.model, 'compute', {
method: sig.method,
args: sig.args,
trigger: arg,
name: name,
dynamicFn: dynamicFn
});
}
if (dynamicFn) {
this._addPropertyEffect(sig.method, 'compute', {
method: sig.method,
args: sig.args,
trigger: null,
name: name,
dynamicFn: dynamicFn
});
}
},
_addObserverEffect: function (property, observer) {
this._addPropertyEffect(property, 'observer', {
method: observer,
property: property
});
},
_addComplexObserverEffects: function (observers) {
if (observers) {
for (var i = 0, o; i < observers.length && (o = observers[i]); i++) {
this._addComplexObserverEffect(o);
}
}
},
_addComplexObserverEffect: function (observer) {
var sig = this._parseMethod(observer);
if (!sig) {
throw new Error('Malformed observer expression \'' + observer + '\'');
}
var dynamicFn = sig.dynamicFn;
for (var i = 0, arg; i < sig.args.length && (arg = sig.args[i]); i++) {
this._addPropertyEffect(arg.model, 'complexObserver', {
method: sig.method,
args: sig.args,
trigger: arg,
dynamicFn: dynamicFn
});
}
if (dynamicFn) {
this._addPropertyEffect(sig.method, 'complexObserver', {
method: sig.method,
args: sig.args,
trigger: null,
dynamicFn: dynamicFn
});
}
},
_addAnnotationEffects: function (notes) {
for (var i = 0, note; i < notes.length && (note = notes[i]); i++) {
var b$ = note.bindings;
for (var j = 0, binding; j < b$.length && (binding = b$[j]); j++) {
this._addAnnotationEffect(binding, i);
}
}
},
_addAnnotationEffect: function (note, index) {
if (Polymer.Bind._shouldAddListener(note)) {
Polymer.Bind._addAnnotatedListener(this, index, note.name, note.parts[0].value, note.parts[0].event, note.parts[0].negate);
}
for (var i = 0; i < note.parts.length; i++) {
var part = note.parts[i];
if (part.signature) {
this._addAnnotatedComputationEffect(note, part, index);
} else if (!part.literal) {
if (note.kind === 'attribute' && note.name[0] === '-') {
this._warn(this._logf('_addAnnotationEffect', 'Cannot set attribute ' + note.name + ' because "-" is not a valid attribute starting character'));
} else {
this._addPropertyEffect(part.model, 'annotation', {
kind: note.kind,
index: index,
name: note.name,
propertyName: note.propertyName,
value: part.value,
isCompound: note.isCompound,
compoundIndex: part.compoundIndex,
event: part.event,
customEvent: part.customEvent,
negate: part.negate
});
}
}
}
},
_addAnnotatedComputationEffect: function (note, part, index) {
var sig = part.signature;
if (sig.static) {
this.__addAnnotatedComputationEffect('__static__', index, note, part, null);
} else {
for (var i = 0, arg; i < sig.args.length && (arg = sig.args[i]); i++) {
if (!arg.literal) {
this.__addAnnotatedComputationEffect(arg.model, index, note, part, arg);
}
}
if (sig.dynamicFn) {
this.__addAnnotatedComputationEffect(sig.method, index, note, part, null);
}
}
},
__addAnnotatedComputationEffect: function (property, index, note, part, trigger) {
this._addPropertyEffect(property, 'annotatedComputation', {
index: index,
isCompound: note.isCompound,
compoundIndex: part.compoundIndex,
kind: note.kind,
name: note.name,
negate: part.negate,
method: part.signature.method,
args: part.signature.args,
trigger: trigger,
dynamicFn: part.signature.dynamicFn
});
},
_parseMethod: function (expression) {
var m = expression.match(/([^\s]+?)\(([\s\S]*)\)/);
if (m) {
var sig = {
method: m[1],
static: true
};
if (this.getPropertyInfo(sig.method) !== Polymer.nob) {
sig.static = false;
sig.dynamicFn = true;
}
if (m[2].trim()) {
var args = m[2].replace(/\\,/g, '&comma;').split(',');
return this._parseArgs(args, sig);
} else {
sig.args = Polymer.nar;
return sig;
}
}
},
_parseArgs: function (argList, sig) {
sig.args = argList.map(function (rawArg) {
var arg = this._parseArg(rawArg);
if (!arg.literal) {
sig.static = false;
}
return arg;
}, this);
return sig;
},
_parseArg: function (rawArg) {
var arg = rawArg.trim().replace(/&comma;/g, ',').replace(/\\(.)/g, '$1');
var a = { name: arg };
var fc = arg[0];
if (fc === '-') {
fc = arg[1];
}
if (fc >= '0' && fc <= '9') {
fc = '#';
}
switch (fc) {
case '\'':
case '"':
a.value = arg.slice(1, -1);
a.literal = true;
break;
case '#':
a.value = Number(arg);
a.literal = true;
break;
}
if (!a.literal) {
a.model = this._modelForPath(arg);
a.structured = arg.indexOf('.') > 0;
if (a.structured) {
a.wildcard = arg.slice(-2) == '.*';
if (a.wildcard) {
a.name = arg.slice(0, -2);
}
}
}
return a;
},
_marshalInstanceEffects: function () {
Polymer.Bind.prepareInstance(this);
if (this._bindListeners) {
Polymer.Bind.setupBindListeners(this);
}
},
_applyEffectValue: function (info, value) {
var node = this._nodes[info.index];
var property = info.name;
value = this._computeFinalAnnotationValue(node, property, value, info);
if (info.kind == 'attribute') {
this.serializeValueToAttribute(value, property, node);
} else {
var pinfo = node._propertyInfo && node._propertyInfo[property];
if (pinfo && pinfo.readOnly) {
return;
}
this.__setProperty(property, value, false, node);
}
},
_computeFinalAnnotationValue: function (node, property, value, info) {
if (info.negate) {
value = !value;
}
if (info.isCompound) {
var storage = node.__compoundStorage__[property];
storage[info.compoundIndex] = value;
value = storage.join('');
}
if (info.kind !== 'attribute') {
if (property === 'className') {
value = this._scopeElementClass(node, value);
}
if (property === 'textContent' || node.localName == 'input' && property == 'value') {
value = value == undefined ? '' : value;
}
}
return value;
},
_executeStaticEffects: function () {
if (this._propertyEffects && this._propertyEffects.__static__) {
this._effectEffects('__static__', null, this._propertyEffects.__static__);
}
}
});(function () {
var usePolyfillProto = Polymer.Settings.usePolyfillProto;
Polymer.Base._addFeature({
_setupConfigure: function (initialConfig) {
this._config = {};
this._handlers = [];
this._aboveConfig = null;
if (initialConfig) {
for (var i in initialConfig) {
if (initialConfig[i] !== undefined) {
this._config[i] = initialConfig[i];
}
}
}
},
_marshalAttributes: function () {
this._takeAttributesToModel(this._config);
},
_attributeChangedImpl: function (name) {
var model = this._clientsReadied ? this : this._config;
this._setAttributeToProperty(model, name);
},
_configValue: function (name, value) {
var info = this._propertyInfo[name];
if (!info || !info.readOnly) {
this._config[name] = value;
}
},
_beforeClientsReady: function () {
this._configure();
},
_configure: function () {
this._configureAnnotationReferences();
this._configureInstanceProperties();
this._aboveConfig = this.mixin({}, this._config);
var config = {};
for (var i = 0; i < this.behaviors.length; i++) {
this._configureProperties(this.behaviors[i].properties, config);
}
this._configureProperties(this.properties, config);
this.mixin(config, this._aboveConfig);
this._config = config;
if (this._clients && this._clients.length) {
this._distributeConfig(this._config);
}
},
_configureInstanceProperties: function () {
for (var i in this._propertyEffects) {
if (!usePolyfillProto && this.hasOwnProperty(i)) {
this._configValue(i, this[i]);
delete this[i];
}
}
},
_configureProperties: function (properties, config) {
for (var i in properties) {
var c = properties[i];
if (c.value !== undefined) {
var value = c.value;
if (typeof value == 'function') {
value = value.call(this, this._config);
}
config[i] = value;
}
}
},
_distributeConfig: function (config) {
var fx$ = this._propertyEffects;
if (fx$) {
for (var p in config) {
var fx = fx$[p];
if (fx) {
for (var i = 0, l = fx.length, x; i < l && (x = fx[i]); i++) {
if (x.kind === 'annotation') {
var node = this._nodes[x.effect.index];
var name = x.effect.propertyName;
var isAttr = x.effect.kind == 'attribute';
var hasEffect = node._propertyEffects && node._propertyEffects[name];
if (node._configValue && (hasEffect || !isAttr)) {
var value = p === x.effect.value ? config[p] : this._get(x.effect.value, config);
value = this._computeFinalAnnotationValue(node, name, value, x.effect);
if (isAttr) {
value = node.deserialize(this.serialize(value), node._propertyInfo[name].type);
}
node._configValue(name, value);
}
}
}
}
}
}
},
_afterClientsReady: function () {
this._executeStaticEffects();
this._applyConfig(this._config, this._aboveConfig);
this._flushHandlers();
},
_applyConfig: function (config, aboveConfig) {
for (var n in config) {
if (this[n] === undefined) {
this.__setProperty(n, config[n], n in aboveConfig);
}
}
},
_notifyListener: function (fn, e) {
if (!Polymer.Bind._isEventBogus(e, e.target)) {
var value, path;
if (e.detail) {
value = e.detail.value;
path = e.detail.path;
}
if (!this._clientsReadied) {
this._queueHandler([
fn,
e.target,
value,
path
]);
} else {
return fn.call(this, e.target, value, path);
}
}
},
_queueHandler: function (args) {
this._handlers.push(args);
},
_flushHandlers: function () {
var h$ = this._handlers;
for (var i = 0, l = h$.length, h; i < l && (h = h$[i]); i++) {
h[0].call(this, h[1], h[2], h[3]);
}
this._handlers = [];
}
});
}());(function () {
'use strict';
Polymer.Base._addFeature({
notifyPath: function (path, value, fromAbove) {
var info = {};
var v = this._get(path, this, info);
if (arguments.length === 1) {
value = v;
}
if (info.path) {
this._notifyPath(info.path, value, fromAbove);
}
},
_notifyPath: function (path, value, fromAbove) {
var old = this._propertySetter(path, value);
if (old !== value && (old === old || value === value)) {
this._pathEffector(path, value);
if (!fromAbove) {
this._notifyPathUp(path, value);
}
return true;
}
},
_getPathParts: function (path) {
if (Array.isArray(path)) {
var parts = [];
for (var i = 0; i < path.length; i++) {
var args = path[i].toString().split('.');
for (var j = 0; j < args.length; j++) {
parts.push(args[j]);
}
}
return parts;
} else {
return path.toString().split('.');
}
},
set: function (path, value, root) {
var prop = root || this;
var parts = this._getPathParts(path);
var array;
var last = parts[parts.length - 1];
if (parts.length > 1) {
for (var i = 0; i < parts.length - 1; i++) {
var part = parts[i];
if (array && part[0] == '#') {
prop = Polymer.Collection.get(array).getItem(part);
} else {
prop = prop[part];
if (array && parseInt(part, 10) == part) {
parts[i] = Polymer.Collection.get(array).getKey(prop);
}
}
if (!prop) {
return;
}
array = Array.isArray(prop) ? prop : null;
}
if (array) {
var coll = Polymer.Collection.get(array);
var old, key;
if (last[0] == '#') {
key = last;
old = coll.getItem(key);
last = array.indexOf(old);
coll.setItem(key, value);
} else if (parseInt(last, 10) == last) {
old = prop[last];
key = coll.getKey(old);
parts[i] = key;
coll.setItem(key, value);
}
}
prop[last] = value;
if (!root) {
this._notifyPath(parts.join('.'), value);
}
} else {
prop[path] = value;
}
},
get: function (path, root) {
return this._get(path, root);
},
_get: function (path, root, info) {
var prop = root || this;
var parts = this._getPathParts(path);
var array;
for (var i = 0; i < parts.length; i++) {
if (!prop) {
return;
}
var part = parts[i];
if (array && part[0] == '#') {
prop = Polymer.Collection.get(array).getItem(part);
} else {
prop = prop[part];
if (info && array && parseInt(part, 10) == part) {
parts[i] = Polymer.Collection.get(array).getKey(prop);
}
}
array = Array.isArray(prop) ? prop : null;
}
if (info) {
info.path = parts.join('.');
}
return prop;
},
_pathEffector: function (path, value) {
var model = this._modelForPath(path);
var fx$ = this._propertyEffects && this._propertyEffects[model];
if (fx$) {
for (var i = 0, fx; i < fx$.length && (fx = fx$[i]); i++) {
var fxFn = fx.pathFn;
if (fxFn) {
fxFn.call(this, path, value, fx.effect);
}
}
}
if (this._boundPaths) {
this._notifyBoundPaths(path, value);
}
},
_annotationPathEffect: function (path, value, effect) {
if (effect.value === path || effect.value.indexOf(path + '.') === 0) {
Polymer.Bind._annotationEffect.call(this, path, value, effect);
} else if (path.indexOf(effect.value + '.') === 0 && !effect.negate) {
var node = this._nodes[effect.index];
if (node && node._notifyPath) {
var p = this._fixPath(effect.name, effect.value, path);
node._notifyPath(p, value, true);
}
}
},
_complexObserverPathEffect: function (path, value, effect) {
if (this._pathMatchesEffect(path, effect)) {
Polymer.Bind._complexObserverEffect.call(this, path, value, effect);
}
},
_computePathEffect: function (path, value, effect) {
if (this._pathMatchesEffect(path, effect)) {
Polymer.Bind._computeEffect.call(this, path, value, effect);
}
},
_annotatedComputationPathEffect: function (path, value, effect) {
if (this._pathMatchesEffect(path, effect)) {
Polymer.Bind._annotatedComputationEffect.call(this, path, value, effect);
}
},
_pathMatchesEffect: function (path, effect) {
var effectArg = effect.trigger.name;
return effectArg == path || effectArg.indexOf(path + '.') === 0 || effect.trigger.wildcard && path.indexOf(effectArg + '.') === 0;
},
linkPaths: function (to, from) {
this._boundPaths = this._boundPaths || {};
if (from) {
this._boundPaths[to] = from;
} else {
this.unlinkPaths(to);
}
},
unlinkPaths: function (path) {
if (this._boundPaths) {
delete this._boundPaths[path];
}
},
_notifyBoundPaths: function (path, value) {
for (var a in this._boundPaths) {
var b = this._boundPaths[a];
if (path.indexOf(a + '.') == 0) {
this._notifyPath(this._fixPath(b, a, path), value);
} else if (path.indexOf(b + '.') == 0) {
this._notifyPath(this._fixPath(a, b, path), value);
}
}
},
_fixPath: function (property, root, path) {
return property + path.slice(root.length);
},
_notifyPathUp: function (path, value) {
var rootName = this._modelForPath(path);
var dashCaseName = Polymer.CaseMap.camelToDashCase(rootName);
var eventName = dashCaseName + this._EVENT_CHANGED;
this.fire(eventName, {
path: path,
value: value
}, {
bubbles: false,
_useCache: true
});
},
_modelForPath: function (path) {
var dot = path.indexOf('.');
return dot < 0 ? path : path.slice(0, dot);
},
_EVENT_CHANGED: '-changed',
notifySplices: function (path, splices) {
var info = {};
var array = this._get(path, this, info);
this._notifySplices(array, info.path, splices);
},
_notifySplices: function (array, path, splices) {
var change = {
keySplices: Polymer.Collection.applySplices(array, splices),
indexSplices: splices
};
var splicesPath = path + '.splices';
this._notifyPath(splicesPath, change);
this._notifyPath(path + '.length', array.length);
this.__data__[splicesPath] = {
keySplices: null,
indexSplices: null
};
},
_notifySplice: function (array, path, index, added, removed) {
this._notifySplices(array, path, [{
index: index,
addedCount: added,
removed: removed,
object: array,
type: 'splice'
}]);
},
push: function (path) {
var info = {};
var array = this._get(path, this, info);
var args = Array.prototype.slice.call(arguments, 1);
var len = array.length;
var ret = array.push.apply(array, args);
if (args.length) {
this._notifySplice(array, info.path, len, args.length, []);
}
return ret;
},
pop: function (path) {
var info = {};
var array = this._get(path, this, info);
var hadLength = Boolean(array.length);
var args = Array.prototype.slice.call(arguments, 1);
var ret = array.pop.apply(array, args);
if (hadLength) {
this._notifySplice(array, info.path, array.length, 0, [ret]);
}
return ret;
},
splice: function (path, start) {
var info = {};
var array = this._get(path, this, info);
if (start < 0) {
start = array.length - Math.floor(-start);
} else {
start = Math.floor(start);
}
if (!start) {
start = 0;
}
var args = Array.prototype.slice.call(arguments, 1);
var ret = array.splice.apply(array, args);
var addedCount = Math.max(args.length - 2, 0);
if (addedCount || ret.length) {
this._notifySplice(array, info.path, start, addedCount, ret);
}
return ret;
},
shift: function (path) {
var info = {};
var array = this._get(path, this, info);
var hadLength = Boolean(array.length);
var args = Array.prototype.slice.call(arguments, 1);
var ret = array.shift.apply(array, args);
if (hadLength) {
this._notifySplice(array, info.path, 0, 0, [ret]);
}
return ret;
},
unshift: function (path) {
var info = {};
var array = this._get(path, this, info);
var args = Array.prototype.slice.call(arguments, 1);
var ret = array.unshift.apply(array, args);
if (args.length) {
this._notifySplice(array, info.path, 0, args.length, []);
}
return ret;
},
prepareModelNotifyPath: function (model) {
this.mixin(model, {
fire: Polymer.Base.fire,
_getEvent: Polymer.Base._getEvent,
__eventCache: Polymer.Base.__eventCache,
notifyPath: Polymer.Base.notifyPath,
_get: Polymer.Base._get,
_EVENT_CHANGED: Polymer.Base._EVENT_CHANGED,
_notifyPath: Polymer.Base._notifyPath,
_notifyPathUp: Polymer.Base._notifyPathUp,
_pathEffector: Polymer.Base._pathEffector,
_annotationPathEffect: Polymer.Base._annotationPathEffect,
_complexObserverPathEffect: Polymer.Base._complexObserverPathEffect,
_annotatedComputationPathEffect: Polymer.Base._annotatedComputationPathEffect,
_computePathEffect: Polymer.Base._computePathEffect,
_modelForPath: Polymer.Base._modelForPath,
_pathMatchesEffect: Polymer.Base._pathMatchesEffect,
_notifyBoundPaths: Polymer.Base._notifyBoundPaths,
_getPathParts: Polymer.Base._getPathParts
});
}
});
}());Polymer.Base._addFeature({
resolveUrl: function (url) {
var module = Polymer.DomModule.import(this.is);
var root = '';
if (module) {
var assetPath = module.getAttribute('assetpath') || '';
root = Polymer.ResolveUrl.resolveUrl(assetPath, module.ownerDocument.baseURI);
}
return Polymer.ResolveUrl.resolveUrl(url, root);
}
});Polymer.CssParse = function () {
return {
parse: function (text) {
text = this._clean(text);
return this._parseCss(this._lex(text), text);
},
_clean: function (cssText) {
return cssText.replace(this._rx.comments, '').replace(this._rx.port, '');
},
_lex: function (text) {
var root = {
start: 0,
end: text.length
};
var n = root;
for (var i = 0, l = text.length; i < l; i++) {
switch (text[i]) {
case this.OPEN_BRACE:
if (!n.rules) {
n.rules = [];
}
var p = n;
var previous = p.rules[p.rules.length - 1];
n = {
start: i + 1,
parent: p,
previous: previous
};
p.rules.push(n);
break;
case this.CLOSE_BRACE:
n.end = i + 1;
n = n.parent || root;
break;
}
}
return root;
},
_parseCss: function (node, text) {
var t = text.substring(node.start, node.end - 1);
node.parsedCssText = node.cssText = t.trim();
if (node.parent) {
var ss = node.previous ? node.previous.end : node.parent.start;
t = text.substring(ss, node.start - 1);
t = this._expandUnicodeEscapes(t);
t = t.replace(this._rx.multipleSpaces, ' ');
t = t.substring(t.lastIndexOf(';') + 1);
var s = node.parsedSelector = node.selector = t.trim();
node.atRule = s.indexOf(this.AT_START) === 0;
if (node.atRule) {
if (s.indexOf(this.MEDIA_START) === 0) {
node.type = this.types.MEDIA_RULE;
} else if (s.match(this._rx.keyframesRule)) {
node.type = this.types.KEYFRAMES_RULE;
node.keyframesName = node.selector.split(this._rx.multipleSpaces).pop();
}
} else {
if (s.indexOf(this.VAR_START) === 0) {
node.type = this.types.MIXIN_RULE;
} else {
node.type = this.types.STYLE_RULE;
}
}
}
var r$ = node.rules;
if (r$) {
for (var i = 0, l = r$.length, r; i < l && (r = r$[i]); i++) {
this._parseCss(r, text);
}
}
return node;
},
_expandUnicodeEscapes: function (s) {
return s.replace(/\\([0-9a-f]{1,6})\s/gi, function () {
var code = arguments[1], repeat = 6 - code.length;
while (repeat--) {
code = '0' + code;
}
return '\\' + code;
});
},
stringify: function (node, preserveProperties, text) {
text = text || '';
var cssText = '';
if (node.cssText || node.rules) {
var r$ = node.rules;
if (r$ && !this._hasMixinRules(r$)) {
for (var i = 0, l = r$.length, r; i < l && (r = r$[i]); i++) {
cssText = this.stringify(r, preserveProperties, cssText);
}
} else {
cssText = preserveProperties ? node.cssText : this.removeCustomProps(node.cssText);
cssText = cssText.trim();
if (cssText) {
cssText = '  ' + cssText + '\n';
}
}
}
if (cssText) {
if (node.selector) {
text += node.selector + ' ' + this.OPEN_BRACE + '\n';
}
text += cssText;
if (node.selector) {
text += this.CLOSE_BRACE + '\n\n';
}
}
return text;
},
_hasMixinRules: function (rules) {
return rules[0].selector.indexOf(this.VAR_START) === 0;
},
removeCustomProps: function (cssText) {
cssText = this.removeCustomPropAssignment(cssText);
return this.removeCustomPropApply(cssText);
},
removeCustomPropAssignment: function (cssText) {
return cssText.replace(this._rx.customProp, '').replace(this._rx.mixinProp, '');
},
removeCustomPropApply: function (cssText) {
return cssText.replace(this._rx.mixinApply, '').replace(this._rx.varApply, '');
},
types: {
STYLE_RULE: 1,
KEYFRAMES_RULE: 7,
MEDIA_RULE: 4,
MIXIN_RULE: 1000
},
OPEN_BRACE: '{',
CLOSE_BRACE: '}',
_rx: {
comments: /\/\*[^*]*\*+([^\/*][^*]*\*+)*\//gim,
port: /@import[^;]*;/gim,
customProp: /(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\n]|$)/gim,
mixinProp: /(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\n]|$)?/gim,
mixinApply: /@apply\s*\(?[^);]*\)?\s*(?:[;\n]|$)?/gim,
varApply: /[^;:]*?:[^;]*?var\([^;]*\)(?:[;\n]|$)?/gim,
keyframesRule: /^@[^\s]*keyframes/,
multipleSpaces: /\s+/g
},
VAR_START: '--',
MEDIA_START: '@media',
AT_START: '@'
};
}();Polymer.StyleUtil = function () {
var settings = Polymer.Settings;
return {
NATIVE_VARIABLES: Polymer.Settings.useNativeCSSProperties,
MODULE_STYLES_SELECTOR: 'style, link[rel=import][type~=css], template',
INCLUDE_ATTR: 'include',
toCssText: function (rules, callback) {
if (typeof rules === 'string') {
rules = this.parser.parse(rules);
}
if (callback) {
this.forEachRule(rules, callback);
}
return this.parser.stringify(rules, this.NATIVE_VARIABLES);
},
forRulesInStyles: function (styles, styleRuleCallback, keyframesRuleCallback) {
if (styles) {
for (var i = 0, l = styles.length, s; i < l && (s = styles[i]); i++) {
this.forEachRuleInStyle(s, styleRuleCallback, keyframesRuleCallback);
}
}
},
forActiveRulesInStyles: function (styles, styleRuleCallback, keyframesRuleCallback) {
if (styles) {
for (var i = 0, l = styles.length, s; i < l && (s = styles[i]); i++) {
this.forEachRuleInStyle(s, styleRuleCallback, keyframesRuleCallback, true);
}
}
},
rulesForStyle: function (style) {
if (!style.__cssRules && style.textContent) {
style.__cssRules = this.parser.parse(style.textContent);
}
return style.__cssRules;
},
isKeyframesSelector: function (rule) {
return rule.parent && rule.parent.type === this.ruleTypes.KEYFRAMES_RULE;
},
forEachRuleInStyle: function (style, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {
var rules = this.rulesForStyle(style);
var styleCallback, keyframeCallback;
if (styleRuleCallback) {
styleCallback = function (rule) {
styleRuleCallback(rule, style);
};
}
if (keyframesRuleCallback) {
keyframeCallback = function (rule) {
keyframesRuleCallback(rule, style);
};
}
this.forEachRule(rules, styleCallback, keyframeCallback, onlyActiveRules);
},
forEachRule: function (node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {
if (!node) {
return;
}
var skipRules = false;
if (onlyActiveRules) {
if (node.type === this.ruleTypes.MEDIA_RULE) {
var matchMedia = node.selector.match(this.rx.MEDIA_MATCH);
if (matchMedia) {
if (!window.matchMedia(matchMedia[1]).matches) {
skipRules = true;
}
}
}
}
if (node.type === this.ruleTypes.STYLE_RULE) {
styleRuleCallback(node);
} else if (keyframesRuleCallback && node.type === this.ruleTypes.KEYFRAMES_RULE) {
keyframesRuleCallback(node);
} else if (node.type === this.ruleTypes.MIXIN_RULE) {
skipRules = true;
}
var r$ = node.rules;
if (r$ && !skipRules) {
for (var i = 0, l = r$.length, r; i < l && (r = r$[i]); i++) {
this.forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);
}
}
},
applyCss: function (cssText, moniker, target, contextNode) {
var style = this.createScopeStyle(cssText, moniker);
return this.applyStyle(style, target, contextNode);
},
applyStyle: function (style, target, contextNode) {
target = target || document.head;
var after = contextNode && contextNode.nextSibling || target.firstChild;
this.__lastHeadApplyNode = style;
return target.insertBefore(style, after);
},
createScopeStyle: function (cssText, moniker) {
var style = document.createElement('style');
if (moniker) {
style.setAttribute('scope', moniker);
}
style.textContent = cssText;
return style;
},
__lastHeadApplyNode: null,
applyStylePlaceHolder: function (moniker) {
var placeHolder = document.createComment(' Shady DOM styles for ' + moniker + ' ');
var after = this.__lastHeadApplyNode ? this.__lastHeadApplyNode.nextSibling : null;
var scope = document.head;
scope.insertBefore(placeHolder, after || scope.firstChild);
this.__lastHeadApplyNode = placeHolder;
return placeHolder;
},
cssFromModules: function (moduleIds, warnIfNotFound) {
var modules = moduleIds.trim().split(' ');
var cssText = '';
for (var i = 0; i < modules.length; i++) {
cssText += this.cssFromModule(modules[i], warnIfNotFound);
}
return cssText;
},
cssFromModule: function (moduleId, warnIfNotFound) {
var m = Polymer.DomModule.import(moduleId);
if (m && !m._cssText) {
m._cssText = this.cssFromElement(m);
}
if (!m && warnIfNotFound) {
console.warn('Could not find style data in module named', moduleId);
}
return m && m._cssText || '';
},
cssFromElement: function (element) {
var cssText = '';
var content = element.content || element;
var e$ = Polymer.TreeApi.arrayCopy(content.querySelectorAll(this.MODULE_STYLES_SELECTOR));
for (var i = 0, e; i < e$.length; i++) {
e = e$[i];
if (e.localName === 'template') {
cssText += this.cssFromElement(e);
} else {
if (e.localName === 'style') {
var include = e.getAttribute(this.INCLUDE_ATTR);
if (include) {
cssText += this.cssFromModules(include, true);
}
e = e.__appliedElement || e;
e.parentNode.removeChild(e);
cssText += this.resolveCss(e.textContent, element.ownerDocument);
} else if (e.import && e.import.body) {
cssText += this.resolveCss(e.import.body.textContent, e.import);
}
}
}
return cssText;
},
isTargetedBuild: function (buildType) {
return settings.useNativeShadow ? buildType === 'shadow' : buildType === 'shady';
},
cssBuildTypeForModule: function (module) {
var dm = Polymer.DomModule.import(module);
if (dm) {
return this.getCssBuildType(dm);
}
},
getCssBuildType: function (element) {
return element.getAttribute('css-build');
},
_findMatchingParen: function (text, start) {
var level = 0;
for (var i = start, l = text.length; i < l; i++) {
switch (text[i]) {
case '(':
level++;
break;
case ')':
if (--level === 0) {
return i;
}
break;
}
}
return -1;
},
processVariableAndFallback: function (str, callback) {
var start = str.indexOf('var(');
if (start === -1) {
return callback(str, '', '', '');
}
var end = this._findMatchingParen(str, start + 3);
var inner = str.substring(start + 4, end);
var prefix = str.substring(0, start);
var suffix = this.processVariableAndFallback(str.substring(end + 1), callback);
var comma = inner.indexOf(',');
if (comma === -1) {
return callback(prefix, inner.trim(), '', suffix);
}
var value = inner.substring(0, comma).trim();
var fallback = inner.substring(comma + 1).trim();
return callback(prefix, value, fallback, suffix);
},
rx: {
VAR_ASSIGN: /(?:^|[;\s{]\s*)(--[\w-]*?)\s*:\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\s}])|$)/gi,
MIXIN_MATCH: /(?:^|\W+)@apply\s*\(?([^);\n]*)\)?/gi,
VAR_CONSUMED: /(--[\w-]+)\s*([:,;)]|$)/gi,
ANIMATION_MATCH: /(animation\s*:)|(animation-name\s*:)/,
MEDIA_MATCH: /@media[^(]*(\([^)]*\))/,
IS_VAR: /^--/,
BRACKETED: /\{[^}]*\}/g,
HOST_PREFIX: '(?:^|[^.#[:])',
HOST_SUFFIX: '($|[.:[\\s>+~])'
},
resolveCss: Polymer.ResolveUrl.resolveCss,
parser: Polymer.CssParse,
ruleTypes: Polymer.CssParse.types
};
}();Polymer.StyleTransformer = function () {
var styleUtil = Polymer.StyleUtil;
var settings = Polymer.Settings;
var api = {
dom: function (node, scope, useAttr, shouldRemoveScope) {
this._transformDom(node, scope || '', useAttr, shouldRemoveScope);
},
_transformDom: function (node, selector, useAttr, shouldRemoveScope) {
if (node.setAttribute) {
this.element(node, selector, useAttr, shouldRemoveScope);
}
var c$ = Polymer.dom(node).childNodes;
for (var i = 0; i < c$.length; i++) {
this._transformDom(c$[i], selector, useAttr, shouldRemoveScope);
}
},
element: function (element, scope, useAttr, shouldRemoveScope) {
if (useAttr) {
if (shouldRemoveScope) {
element.removeAttribute(SCOPE_NAME);
} else {
element.setAttribute(SCOPE_NAME, scope);
}
} else {
if (scope) {
if (element.classList) {
if (shouldRemoveScope) {
element.classList.remove(SCOPE_NAME);
element.classList.remove(scope);
} else {
element.classList.add(SCOPE_NAME);
element.classList.add(scope);
}
} else if (element.getAttribute) {
var c = element.getAttribute(CLASS);
if (shouldRemoveScope) {
if (c) {
element.setAttribute(CLASS, c.replace(SCOPE_NAME, '').replace(scope, ''));
}
} else {
element.setAttribute(CLASS, (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope);
}
}
}
}
},
elementStyles: function (element, callback) {
var styles = element._styles;
var cssText = '';
var cssBuildType = element.__cssBuild;
for (var i = 0, l = styles.length, s; i < l && (s = styles[i]); i++) {
var rules = styleUtil.rulesForStyle(s);
cssText += settings.useNativeShadow || cssBuildType === 'shady' ? styleUtil.toCssText(rules, callback) : this.css(rules, element.is, element.extends, callback, element._scopeCssViaAttr) + '\n\n';
}
return cssText.trim();
},
css: function (rules, scope, ext, callback, useAttr) {
var hostScope = this._calcHostScope(scope, ext);
scope = this._calcElementScope(scope, useAttr);
var self = this;
return styleUtil.toCssText(rules, function (rule) {
if (!rule.isScoped) {
self.rule(rule, scope, hostScope);
rule.isScoped = true;
}
if (callback) {
callback(rule, scope, hostScope);
}
});
},
_calcElementScope: function (scope, useAttr) {
if (scope) {
return useAttr ? CSS_ATTR_PREFIX + scope + CSS_ATTR_SUFFIX : CSS_CLASS_PREFIX + scope;
} else {
return '';
}
},
_calcHostScope: function (scope, ext) {
return ext ? '[is=' + scope + ']' : scope;
},
rule: function (rule, scope, hostScope) {
this._transformRule(rule, this._transformComplexSelector, scope, hostScope);
},
_transformRule: function (rule, transformer, scope, hostScope) {
rule.selector = rule.transformedSelector = this._transformRuleCss(rule, transformer, scope, hostScope);
},
_transformRuleCss: function (rule, transformer, scope, hostScope) {
var p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);
if (!styleUtil.isKeyframesSelector(rule)) {
for (var i = 0, l = p$.length, p; i < l && (p = p$[i]); i++) {
p$[i] = transformer.call(this, p, scope, hostScope);
}
}
return p$.join(COMPLEX_SELECTOR_SEP);
},
_transformComplexSelector: function (selector, scope, hostScope) {
var stop = false;
var hostContext = false;
var self = this;
selector = selector.trim();
selector = selector.replace(CONTENT_START, HOST + ' $1');
selector = selector.replace(SIMPLE_SELECTOR_SEP, function (m, c, s) {
if (!stop) {
var info = self._transformCompoundSelector(s, c, scope, hostScope);
stop = stop || info.stop;
hostContext = hostContext || info.hostContext;
c = info.combinator;
s = info.value;
} else {
s = s.replace(SCOPE_JUMP, ' ');
}
return c + s;
});
if (hostContext) {
selector = selector.replace(HOST_CONTEXT_PAREN, function (m, pre, paren, post) {
return pre + paren + ' ' + hostScope + post + COMPLEX_SELECTOR_SEP + ' ' + pre + hostScope + paren + post;
});
}
return selector;
},
_transformCompoundSelector: function (selector, combinator, scope, hostScope) {
var jumpIndex = selector.search(SCOPE_JUMP);
var hostContext = false;
if (selector.indexOf(HOST_CONTEXT) >= 0) {
hostContext = true;
} else if (selector.indexOf(HOST) >= 0) {
selector = this._transformHostSelector(selector, hostScope);
} else if (jumpIndex !== 0) {
selector = scope ? this._transformSimpleSelector(selector, scope) : selector;
}
if (selector.indexOf(CONTENT) >= 0) {
combinator = '';
}
var stop;
if (jumpIndex >= 0) {
selector = selector.replace(SCOPE_JUMP, ' ');
stop = true;
}
return {
value: selector,
combinator: combinator,
stop: stop,
hostContext: hostContext
};
},
_transformSimpleSelector: function (selector, scope) {
var p$ = selector.split(PSEUDO_PREFIX);
p$[0] += scope;
return p$.join(PSEUDO_PREFIX);
},
_transformHostSelector: function (selector, hostScope) {
var m = selector.match(HOST_PAREN);
var paren = m && m[2].trim() || '';
if (paren) {
if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {
var typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];
if (typeSelector === hostScope) {
return paren;
} else {
return SELECTOR_NO_MATCH;
}
} else {
return selector.replace(HOST_PAREN, function (m, host, paren) {
return hostScope + paren;
});
}
} else {
return selector.replace(HOST, hostScope);
}
},
documentRule: function (rule) {
rule.selector = rule.parsedSelector;
this.normalizeRootSelector(rule);
if (!settings.useNativeShadow) {
this._transformRule(rule, this._transformDocumentSelector);
}
},
normalizeRootSelector: function (rule) {
if (rule.selector === ROOT) {
rule.selector = 'html';
}
},
_transformDocumentSelector: function (selector) {
return selector.match(SCOPE_JUMP) ? this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) : this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);
},
SCOPE_NAME: 'style-scope'
};
var SCOPE_NAME = api.SCOPE_NAME;
var SCOPE_DOC_SELECTOR = ':not([' + SCOPE_NAME + '])' + ':not(.' + SCOPE_NAME + ')';
var COMPLEX_SELECTOR_SEP = ',';
var SIMPLE_SELECTOR_SEP = /(^|[\s>+~]+)((?:\[.+?\]|[^\s>+~=\[])+)/g;
var SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;
var HOST = ':host';
var ROOT = ':root';
var HOST_PAREN = /(:host)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))/;
var HOST_CONTEXT = ':host-context';
var HOST_CONTEXT_PAREN = /(.*)(?::host-context)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))(.*)/;
var CONTENT = '::content';
var SCOPE_JUMP = /::content|::shadow|\/deep\//;
var CSS_CLASS_PREFIX = '.';
var CSS_ATTR_PREFIX = '[' + SCOPE_NAME + '~=';
var CSS_ATTR_SUFFIX = ']';
var PSEUDO_PREFIX = ':';
var CLASS = 'class';
var CONTENT_START = new RegExp('^(' + CONTENT + ')');
var SELECTOR_NO_MATCH = 'should_not_match';
return api;
}();Polymer.StyleExtends = function () {
var styleUtil = Polymer.StyleUtil;
return {
hasExtends: function (cssText) {
return Boolean(cssText.match(this.rx.EXTEND));
},
transform: function (style) {
var rules = styleUtil.rulesForStyle(style);
var self = this;
styleUtil.forEachRule(rules, function (rule) {
self._mapRuleOntoParent(rule);
if (rule.parent) {
var m;
while (m = self.rx.EXTEND.exec(rule.cssText)) {
var extend = m[1];
var extendor = self._findExtendor(extend, rule);
if (extendor) {
self._extendRule(rule, extendor);
}
}
}
rule.cssText = rule.cssText.replace(self.rx.EXTEND, '');
});
return styleUtil.toCssText(rules, function (rule) {
if (rule.selector.match(self.rx.STRIP)) {
rule.cssText = '';
}
}, true);
},
_mapRuleOntoParent: function (rule) {
if (rule.parent) {
var map = rule.parent.map || (rule.parent.map = {});
var parts = rule.selector.split(',');
for (var i = 0, p; i < parts.length; i++) {
p = parts[i];
map[p.trim()] = rule;
}
return map;
}
},
_findExtendor: function (extend, rule) {
return rule.parent && rule.parent.map && rule.parent.map[extend] || this._findExtendor(extend, rule.parent);
},
_extendRule: function (target, source) {
if (target.parent !== source.parent) {
this._cloneAndAddRuleToParent(source, target.parent);
}
target.extends = target.extends || [];
target.extends.push(source);
source.selector = source.selector.replace(this.rx.STRIP, '');
source.selector = (source.selector && source.selector + ',\n') + target.selector;
if (source.extends) {
source.extends.forEach(function (e) {
this._extendRule(target, e);
}, this);
}
},
_cloneAndAddRuleToParent: function (rule, parent) {
rule = Object.create(rule);
rule.parent = parent;
if (rule.extends) {
rule.extends = rule.extends.slice();
}
parent.rules.push(rule);
},
rx: {
EXTEND: /@extends\(([^)]*)\)\s*?;/gim,
STRIP: /%[^,]*$/
}
};
}();Polymer.ApplyShim = function () {
'use strict';
var styleUtil = Polymer.StyleUtil;
var MIXIN_MATCH = styleUtil.rx.MIXIN_MATCH;
var VAR_ASSIGN = styleUtil.rx.VAR_ASSIGN;
var BAD_VAR = /var\(\s*(--[^,]*),\s*(--[^)]*)\)/g;
var APPLY_NAME_CLEAN = /;\s*/m;
var INITIAL_INHERIT = /^\s*(initial)|(inherit)\s*$/;
var MIXIN_VAR_SEP = '_-_';
var mixinMap = {};
function mapSet(name, props) {
name = name.trim();
mixinMap[name] = {
properties: props,
dependants: {}
};
}
function mapGet(name) {
name = name.trim();
return mixinMap[name];
}
function replaceInitialOrInherit(property, value) {
var match = INITIAL_INHERIT.exec(value);
if (match) {
if (match[1]) {
value = ApplyShim._getInitialValueForProperty(property);
} else {
value = 'apply-shim-inherit';
}
}
return value;
}
function cssTextToMap(text) {
var props = text.split(';');
var property, value;
var out = {};
for (var i = 0, p, sp; i < props.length; i++) {
p = props[i];
if (p) {
sp = p.split(':');
if (sp.length > 1) {
property = sp[0].trim();
value = replaceInitialOrInherit(property, sp.slice(1).join(':'));
out[property] = value;
}
}
}
return out;
}
function invalidateMixinEntry(mixinEntry) {
var currentProto = ApplyShim.__currentElementProto;
var currentElementName = currentProto && currentProto.is;
for (var elementName in mixinEntry.dependants) {
if (elementName !== currentElementName) {
mixinEntry.dependants[elementName].__applyShimInvalid = true;
}
}
}
function produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {
if (valueProperty) {
styleUtil.processVariableAndFallback(valueProperty, function (prefix, value) {
if (value && mapGet(value)) {
valueMixin = '@apply ' + value + ';';
}
});
}
if (!valueMixin) {
return matchText;
}
var mixinAsProperties = consumeCssProperties(valueMixin);
var prefix = matchText.slice(0, matchText.indexOf('--'));
var mixinValues = cssTextToMap(mixinAsProperties);
var combinedProps = mixinValues;
var mixinEntry = mapGet(propertyName);
var oldProps = mixinEntry && mixinEntry.properties;
if (oldProps) {
combinedProps = Object.create(oldProps);
combinedProps = Polymer.Base.mixin(combinedProps, mixinValues);
} else {
mapSet(propertyName, combinedProps);
}
var out = [];
var p, v;
var needToInvalidate = false;
for (p in combinedProps) {
v = mixinValues[p];
if (v === undefined) {
v = 'initial';
}
if (oldProps && !(p in oldProps)) {
needToInvalidate = true;
}
out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);
}
if (needToInvalidate) {
invalidateMixinEntry(mixinEntry);
}
if (mixinEntry) {
mixinEntry.properties = combinedProps;
}
if (valueProperty) {
prefix = matchText + ';' + prefix;
}
return prefix + out.join('; ') + ';';
}
function fixVars(matchText, varA, varB) {
return 'var(' + varA + ',' + 'var(' + varB + '));';
}
function atApplyToCssProperties(mixinName, fallbacks) {
mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');
var vars = [];
var mixinEntry = mapGet(mixinName);
if (!mixinEntry) {
mapSet(mixinName, {});
mixinEntry = mapGet(mixinName);
}
if (mixinEntry) {
var currentProto = ApplyShim.__currentElementProto;
if (currentProto) {
mixinEntry.dependants[currentProto.is] = currentProto;
}
var p, parts, f;
for (p in mixinEntry.properties) {
f = fallbacks && fallbacks[p];
parts = [
p,
': var(',
mixinName,
MIXIN_VAR_SEP,
p
];
if (f) {
parts.push(',', f);
}
parts.push(')');
vars.push(parts.join(''));
}
}
return vars.join('; ');
}
function consumeCssProperties(text) {
var m;
while (m = MIXIN_MATCH.exec(text)) {
var matchText = m[0];
var mixinName = m[1];
var idx = m.index;
var applyPos = idx + matchText.indexOf('@apply');
var afterApplyPos = idx + matchText.length;
var textBeforeApply = text.slice(0, applyPos);
var textAfterApply = text.slice(afterApplyPos);
var defaults = cssTextToMap(textBeforeApply);
var replacement = atApplyToCssProperties(mixinName, defaults);
text = [
textBeforeApply,
replacement,
textAfterApply
].join('');
MIXIN_MATCH.lastIndex = idx + replacement.length;
}
return text;
}
var ApplyShim = {
_measureElement: null,
_map: mixinMap,
_separator: MIXIN_VAR_SEP,
transform: function (styles, elementProto) {
this.__currentElementProto = elementProto;
styleUtil.forRulesInStyles(styles, this._boundTransformRule);
elementProto.__applyShimInvalid = false;
this.__currentElementProto = null;
},
transformRule: function (rule) {
rule.cssText = this.transformCssText(rule.parsedCssText);
if (rule.selector === ':root') {
rule.selector = ':host > *';
}
},
transformCssText: function (cssText) {
cssText = cssText.replace(BAD_VAR, fixVars);
cssText = cssText.replace(VAR_ASSIGN, produceCssProperties);
return consumeCssProperties(cssText);
},
_getInitialValueForProperty: function (property) {
if (!this._measureElement) {
this._measureElement = document.createElement('meta');
this._measureElement.style.all = 'initial';
document.head.appendChild(this._measureElement);
}
return window.getComputedStyle(this._measureElement).getPropertyValue(property);
}
};
ApplyShim._boundTransformRule = ApplyShim.transformRule.bind(ApplyShim);
return ApplyShim;
}();(function () {
var prepElement = Polymer.Base._prepElement;
var nativeShadow = Polymer.Settings.useNativeShadow;
var styleUtil = Polymer.StyleUtil;
var styleTransformer = Polymer.StyleTransformer;
var styleExtends = Polymer.StyleExtends;
var applyShim = Polymer.ApplyShim;
var settings = Polymer.Settings;
Polymer.Base._addFeature({
_prepElement: function (element) {
if (this._encapsulateStyle && this.__cssBuild !== 'shady') {
styleTransformer.element(element, this.is, this._scopeCssViaAttr);
}
prepElement.call(this, element);
},
_prepStyles: function () {
if (this._encapsulateStyle === undefined) {
this._encapsulateStyle = !nativeShadow;
}
if (!nativeShadow) {
this._scopeStyle = styleUtil.applyStylePlaceHolder(this.is);
}
this.__cssBuild = styleUtil.cssBuildTypeForModule(this.is);
},
_prepShimStyles: function () {
if (this._template) {
var hasTargetedCssBuild = styleUtil.isTargetedBuild(this.__cssBuild);
if (settings.useNativeCSSProperties && this.__cssBuild === 'shadow' && hasTargetedCssBuild) {
return;
}
this._styles = this._styles || this._collectStyles();
if (settings.useNativeCSSProperties && !this.__cssBuild) {
applyShim.transform(this._styles, this);
}
var cssText = settings.useNativeCSSProperties && hasTargetedCssBuild ? this._styles.length && this._styles[0].textContent.trim() : styleTransformer.elementStyles(this);
this._prepStyleProperties();
if (!this._needsStyleProperties() && cssText) {
styleUtil.applyCss(cssText, this.is, nativeShadow ? this._template.content : null, this._scopeStyle);
}
} else {
this._styles = [];
}
},
_collectStyles: function () {
var styles = [];
var cssText = '', m$ = this.styleModules;
if (m$) {
for (var i = 0, l = m$.length, m; i < l && (m = m$[i]); i++) {
cssText += styleUtil.cssFromModule(m);
}
}
cssText += styleUtil.cssFromModule(this.is);
var p = this._template && this._template.parentNode;
if (this._template && (!p || p.id.toLowerCase() !== this.is)) {
cssText += styleUtil.cssFromElement(this._template);
}
if (cssText) {
var style = document.createElement('style');
style.textContent = cssText;
if (styleExtends.hasExtends(style.textContent)) {
cssText = styleExtends.transform(style);
}
styles.push(style);
}
return styles;
},
_elementAdd: function (node) {
if (this._encapsulateStyle) {
if (node.__styleScoped) {
node.__styleScoped = false;
} else {
styleTransformer.dom(node, this.is, this._scopeCssViaAttr);
}
}
},
_elementRemove: function (node) {
if (this._encapsulateStyle) {
styleTransformer.dom(node, this.is, this._scopeCssViaAttr, true);
}
},
scopeSubtree: function (container, shouldObserve) {
if (nativeShadow) {
return;
}
var self = this;
var scopify = function (node) {
if (node.nodeType === Node.ELEMENT_NODE) {
var className = node.getAttribute('class');
node.setAttribute('class', self._scopeElementClass(node, className));
var n$ = node.querySelectorAll('*');
for (var i = 0, n; i < n$.length && (n = n$[i]); i++) {
className = n.getAttribute('class');
n.setAttribute('class', self._scopeElementClass(n, className));
}
}
};
scopify(container);
if (shouldObserve) {
var mo = new MutationObserver(function (mxns) {
for (var i = 0, m; i < mxns.length && (m = mxns[i]); i++) {
if (m.addedNodes) {
for (var j = 0; j < m.addedNodes.length; j++) {
scopify(m.addedNodes[j]);
}
}
}
});
mo.observe(container, {
childList: true,
subtree: true
});
return mo;
}
}
});
}());Polymer.StyleProperties = function () {
'use strict';
var matchesSelector = Polymer.DomApi.matchesSelector;
var styleUtil = Polymer.StyleUtil;
var styleTransformer = Polymer.StyleTransformer;
var IS_IE = navigator.userAgent.match('Trident');
var settings = Polymer.Settings;
return {
decorateStyles: function (styles, scope) {
var self = this, props = {}, keyframes = [], ruleIndex = 0;
var scopeSelector = styleTransformer._calcHostScope(scope.is, scope.extends);
styleUtil.forRulesInStyles(styles, function (rule, style) {
self.decorateRule(rule);
rule.index = ruleIndex++;
self.whenHostOrRootRule(scope, rule, style, function (info) {
if (rule.parent.type === styleUtil.ruleTypes.MEDIA_RULE) {
scope.__notStyleScopeCacheable = true;
}
if (info.isHost) {
var hostContextOrFunction = info.selector.split(' ').some(function (s) {
return s.indexOf(scopeSelector) === 0 && s.length !== scopeSelector.length;
});
scope.__notStyleScopeCacheable = scope.__notStyleScopeCacheable || hostContextOrFunction;
}
});
self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);
}, function onKeyframesRule(rule) {
keyframes.push(rule);
});
styles._keyframes = keyframes;
var names = [];
for (var i in props) {
names.push(i);
}
return names;
},
decorateRule: function (rule) {
if (rule.propertyInfo) {
return rule.propertyInfo;
}
var info = {}, properties = {};
var hasProperties = this.collectProperties(rule, properties);
if (hasProperties) {
info.properties = properties;
rule.rules = null;
}
info.cssText = this.collectCssText(rule);
rule.propertyInfo = info;
return info;
},
collectProperties: function (rule, properties) {
var info = rule.propertyInfo;
if (info) {
if (info.properties) {
Polymer.Base.mixin(properties, info.properties);
return true;
}
} else {
var m, rx = this.rx.VAR_ASSIGN;
var cssText = rule.parsedCssText;
var value;
var any;
while (m = rx.exec(cssText)) {
value = (m[2] || m[3]).trim();
if (value !== 'inherit') {
properties[m[1].trim()] = value;
}
any = true;
}
return any;
}
},
collectCssText: function (rule) {
return this.collectConsumingCssText(rule.parsedCssText);
},
collectConsumingCssText: function (cssText) {
return cssText.replace(this.rx.BRACKETED, '').replace(this.rx.VAR_ASSIGN, '');
},
collectPropertiesInCssText: function (cssText, props) {
var m;
while (m = this.rx.VAR_CONSUMED.exec(cssText)) {
var name = m[1];
if (m[2] !== ':') {
props[name] = true;
}
}
},
reify: function (props) {
var names = Object.getOwnPropertyNames(props);
for (var i = 0, n; i < names.length; i++) {
n = names[i];
props[n] = this.valueForProperty(props[n], props);
}
},
valueForProperty: function (property, props) {
if (property) {
if (property.indexOf(';') >= 0) {
property = this.valueForProperties(property, props);
} else {
var self = this;
var fn = function (prefix, value, fallback, suffix) {
var propertyValue = self.valueForProperty(props[value], props);
if (!propertyValue || propertyValue === 'initial') {
propertyValue = self.valueForProperty(props[fallback] || fallback, props) || fallback;
} else if (propertyValue === 'apply-shim-inherit') {
propertyValue = 'inherit';
}
return prefix + (propertyValue || '') + suffix;
};
property = styleUtil.processVariableAndFallback(property, fn);
}
}
return property && property.trim() || '';
},
valueForProperties: function (property, props) {
var parts = property.split(';');
for (var i = 0, p, m; i < parts.length; i++) {
if (p = parts[i]) {
this.rx.MIXIN_MATCH.lastIndex = 0;
m = this.rx.MIXIN_MATCH.exec(p);
if (m) {
p = this.valueForProperty(props[m[1]], props);
} else {
var colon = p.indexOf(':');
if (colon !== -1) {
var pp = p.substring(colon);
pp = pp.trim();
pp = this.valueForProperty(pp, props) || pp;
p = p.substring(0, colon) + pp;
}
}
parts[i] = p && p.lastIndexOf(';') === p.length - 1 ? p.slice(0, -1) : p || '';
}
}
return parts.join(';');
},
applyProperties: function (rule, props) {
var output = '';
if (!rule.propertyInfo) {
this.decorateRule(rule);
}
if (rule.propertyInfo.cssText) {
output = this.valueForProperties(rule.propertyInfo.cssText, props);
}
rule.cssText = output;
},
applyKeyframeTransforms: function (rule, keyframeTransforms) {
var input = rule.cssText;
var output = rule.cssText;
if (rule.hasAnimations == null) {
rule.hasAnimations = this.rx.ANIMATION_MATCH.test(input);
}
if (rule.hasAnimations) {
var transform;
if (rule.keyframeNamesToTransform == null) {
rule.keyframeNamesToTransform = [];
for (var keyframe in keyframeTransforms) {
transform = keyframeTransforms[keyframe];
output = transform(input);
if (input !== output) {
input = output;
rule.keyframeNamesToTransform.push(keyframe);
}
}
} else {
for (var i = 0; i < rule.keyframeNamesToTransform.length; ++i) {
transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];
input = transform(input);
}
output = input;
}
}
rule.cssText = output;
},
propertyDataFromStyles: function (styles, element) {
var props = {}, self = this;
var o = [];
styleUtil.forActiveRulesInStyles(styles, function (rule) {
if (!rule.propertyInfo) {
self.decorateRule(rule);
}
var selectorToMatch = rule.transformedSelector || rule.parsedSelector;
if (element && rule.propertyInfo.properties && selectorToMatch) {
if (matchesSelector.call(element, selectorToMatch)) {
self.collectProperties(rule, props);
addToBitMask(rule.index, o);
}
}
});
return {
properties: props,
key: o
};
},
whenHostOrRootRule: function (scope, rule, style, callback) {
if (!rule.propertyInfo) {
self.decorateRule(rule);
}
if (!rule.propertyInfo.properties) {
return;
}
var hostScope = scope.is ? styleTransformer._calcHostScope(scope.is, scope.extends) : 'html';
var parsedSelector = rule.parsedSelector;
var isRoot = parsedSelector === ':root';
var isHost = parsedSelector.indexOf(':host') === 0;
var cssBuild = scope.__cssBuild || style.__cssBuild;
if (cssBuild === 'shady') {
isRoot = parsedSelector === hostScope + ' > *.' + hostScope || parsedSelector.indexOf('html') !== -1;
isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;
}
if (cssBuild === 'shadow') {
isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';
isHost = isHost && !isRoot;
}
if (!isRoot && !isHost) {
return;
}
var selectorToMatch = hostScope;
if (isHost) {
if (settings.useNativeShadow && !rule.transformedSelector) {
rule.transformedSelector = styleTransformer._transformRuleCss(rule, styleTransformer._transformComplexSelector, scope.is, hostScope);
}
selectorToMatch = rule.transformedSelector || rule.parsedSelector;
}
callback({
selector: selectorToMatch,
isHost: isHost,
isRoot: isRoot
});
},
hostAndRootPropertiesForScope: function (scope) {
var hostProps = {}, rootProps = {}, self = this;
styleUtil.forActiveRulesInStyles(scope._styles, function (rule, style) {
self.whenHostOrRootRule(scope, rule, style, function (info) {
var element = scope._element || scope;
if (matchesSelector.call(element, info.selector)) {
if (info.isHost) {
self.collectProperties(rule, hostProps);
} else {
self.collectProperties(rule, rootProps);
}
}
});
});
return {
rootProps: rootProps,
hostProps: hostProps
};
},
transformStyles: function (element, properties, scopeSelector) {
var self = this;
var hostSelector = styleTransformer._calcHostScope(element.is, element.extends);
var rxHostSelector = element.extends ? '\\' + hostSelector.slice(0, -1) + '\\]' : hostSelector;
var hostRx = new RegExp(this.rx.HOST_PREFIX + rxHostSelector + this.rx.HOST_SUFFIX);
var keyframeTransforms = this._elementKeyframeTransforms(element, scopeSelector);
return styleTransformer.elementStyles(element, function (rule) {
self.applyProperties(rule, properties);
if (!settings.useNativeShadow && !Polymer.StyleUtil.isKeyframesSelector(rule) && rule.cssText) {
self.applyKeyframeTransforms(rule, keyframeTransforms);
self._scopeSelector(rule, hostRx, hostSelector, element._scopeCssViaAttr, scopeSelector);
}
});
},
_elementKeyframeTransforms: function (element, scopeSelector) {
var keyframesRules = element._styles._keyframes;
var keyframeTransforms = {};
if (!settings.useNativeShadow && keyframesRules) {
for (var i = 0, keyframesRule = keyframesRules[i]; i < keyframesRules.length; keyframesRule = keyframesRules[++i]) {
this._scopeKeyframes(keyframesRule, scopeSelector);
keyframeTransforms[keyframesRule.keyframesName] = this._keyframesRuleTransformer(keyframesRule);
}
}
return keyframeTransforms;
},
_keyframesRuleTransformer: function (keyframesRule) {
return function (cssText) {
return cssText.replace(keyframesRule.keyframesNameRx, keyframesRule.transformedKeyframesName);
};
},
_scopeKeyframes: function (rule, scopeId) {
rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');
rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;
rule.transformedSelector = rule.transformedSelector || rule.selector;
rule.selector = rule.transformedSelector.replace(rule.keyframesName, rule.transformedKeyframesName);
},
_scopeSelector: function (rule, hostRx, hostSelector, viaAttr, scopeId) {
rule.transformedSelector = rule.transformedSelector || rule.selector;
var selector = rule.transformedSelector;
var scope = viaAttr ? '[' + styleTransformer.SCOPE_NAME + '~=' + scopeId + ']' : '.' + scopeId;
var parts = selector.split(',');
for (var i = 0, l = parts.length, p; i < l && (p = parts[i]); i++) {
parts[i] = p.match(hostRx) ? p.replace(hostSelector, scope) : scope + ' ' + p;
}
rule.selector = parts.join(',');
},
applyElementScopeSelector: function (element, selector, old, viaAttr) {
var c = viaAttr ? element.getAttribute(styleTransformer.SCOPE_NAME) : element.getAttribute('class') || '';
var v = old ? c.replace(old, selector) : (c ? c + ' ' : '') + this.XSCOPE_NAME + ' ' + selector;
if (c !== v) {
if (viaAttr) {
element.setAttribute(styleTransformer.SCOPE_NAME, v);
} else {
element.setAttribute('class', v);
}
}
},
applyElementStyle: function (element, properties, selector, style) {
var cssText = style ? style.textContent || '' : this.transformStyles(element, properties, selector);
var s = element._customStyle;
if (s && !settings.useNativeShadow && s !== style) {
s._useCount--;
if (s._useCount <= 0 && s.parentNode) {
s.parentNode.removeChild(s);
}
}
if (settings.useNativeShadow) {
if (element._customStyle) {
element._customStyle.textContent = cssText;
style = element._customStyle;
} else if (cssText) {
style = styleUtil.applyCss(cssText, selector, element.root, element._scopeStyle);
}
} else {
if (!style) {
if (cssText) {
style = styleUtil.applyCss(cssText, selector, null, element._scopeStyle);
}
} else if (!style.parentNode) {
styleUtil.applyStyle(style, null, element._scopeStyle);
}
}
if (style) {
style._useCount = style._useCount || 0;
if (element._customStyle != style) {
style._useCount++;
}
element._customStyle = style;
}
if (IS_IE) {
style.textContent = style.textContent;
}
return style;
},
mixinCustomStyle: function (props, customStyle) {
var v;
for (var i in customStyle) {
v = customStyle[i];
if (v || v === 0) {
props[i] = v;
}
}
},
updateNativeStyleProperties: function (element, properties) {
var oldPropertyNames = element.__customStyleProperties;
if (oldPropertyNames) {
for (var i = 0; i < oldPropertyNames.length; i++) {
element.style.removeProperty(oldPropertyNames[i]);
}
}
var propertyNames = [];
for (var p in properties) {
if (properties[p] !== null) {
element.style.setProperty(p, properties[p]);
propertyNames.push(p);
}
}
element.__customStyleProperties = propertyNames;
},
rx: styleUtil.rx,
XSCOPE_NAME: 'x-scope'
};
function addToBitMask(n, bits) {
var o = parseInt(n / 32);
var v = 1 << n % 32;
bits[o] = (bits[o] || 0) | v;
}
}();(function () {
Polymer.StyleCache = function () {
this.cache = {};
};
Polymer.StyleCache.prototype = {
MAX: 100,
store: function (is, data, keyValues, keyStyles) {
data.keyValues = keyValues;
data.styles = keyStyles;
var s$ = this.cache[is] = this.cache[is] || [];
s$.push(data);
if (s$.length > this.MAX) {
s$.shift();
}
},
retrieve: function (is, keyValues, keyStyles) {
var cache = this.cache[is];
if (cache) {
for (var i = cache.length - 1, data; i >= 0; i--) {
data = cache[i];
if (keyStyles === data.styles && this._objectsEqual(keyValues, data.keyValues)) {
return data;
}
}
}
},
clear: function () {
this.cache = {};
},
_objectsEqual: function (target, source) {
var t, s;
for (var i in target) {
t = target[i], s = source[i];
if (!(typeof t === 'object' && t ? this._objectsStrictlyEqual(t, s) : t === s)) {
return false;
}
}
if (Array.isArray(target)) {
return target.length === source.length;
}
return true;
},
_objectsStrictlyEqual: function (target, source) {
return this._objectsEqual(target, source) && this._objectsEqual(source, target);
}
};
}());Polymer.StyleDefaults = function () {
var styleProperties = Polymer.StyleProperties;
var StyleCache = Polymer.StyleCache;
var nativeVariables = Polymer.Settings.useNativeCSSProperties;
var api = {
_styles: [],
_properties: null,
customStyle: {},
_styleCache: new StyleCache(),
_element: Polymer.DomApi.wrap(document.documentElement),
addStyle: function (style) {
this._styles.push(style);
this._properties = null;
},
get _styleProperties() {
if (!this._properties) {
styleProperties.decorateStyles(this._styles, this);
this._styles._scopeStyleProperties = null;
this._properties = styleProperties.hostAndRootPropertiesForScope(this).rootProps;
styleProperties.mixinCustomStyle(this._properties, this.customStyle);
styleProperties.reify(this._properties);
}
return this._properties;
},
hasStyleProperties: function () {
return Boolean(this._properties);
},
_needsStyleProperties: function () {
},
_computeStyleProperties: function () {
return this._styleProperties;
},
updateStyles: function (properties) {
this._properties = null;
if (properties) {
Polymer.Base.mixin(this.customStyle, properties);
}
this._styleCache.clear();
for (var i = 0, s; i < this._styles.length; i++) {
s = this._styles[i];
s = s.__importElement || s;
s._apply();
}
if (nativeVariables) {
styleProperties.updateNativeStyleProperties(document.documentElement, this.customStyle);
}
}
};
return api;
}();(function () {
'use strict';
var serializeValueToAttribute = Polymer.Base.serializeValueToAttribute;
var propertyUtils = Polymer.StyleProperties;
var styleTransformer = Polymer.StyleTransformer;
var styleDefaults = Polymer.StyleDefaults;
var nativeShadow = Polymer.Settings.useNativeShadow;
var nativeVariables = Polymer.Settings.useNativeCSSProperties;
Polymer.Base._addFeature({
_prepStyleProperties: function () {
if (!nativeVariables) {
this._ownStylePropertyNames = this._styles && this._styles.length ? propertyUtils.decorateStyles(this._styles, this) : null;
}
},
customStyle: null,
getComputedStyleValue: function (property) {
return !nativeVariables && this._styleProperties && this._styleProperties[property] || getComputedStyle(this).getPropertyValue(property);
},
_setupStyleProperties: function () {
this.customStyle = {};
this._styleCache = null;
this._styleProperties = null;
this._scopeSelector = null;
this._ownStyleProperties = null;
this._customStyle = null;
},
_needsStyleProperties: function () {
return Boolean(!nativeVariables && this._ownStylePropertyNames && this._ownStylePropertyNames.length);
},
_validateApplyShim: function () {
if (this.__applyShimInvalid) {
Polymer.ApplyShim.transform(this._styles, this.__proto__);
var cssText = styleTransformer.elementStyles(this);
if (nativeShadow) {
var templateStyle = this._template.content.querySelector('style');
if (templateStyle) {
templateStyle.textContent = cssText;
}
} else {
var shadyStyle = this._scopeStyle && this._scopeStyle.nextSibling;
if (shadyStyle) {
shadyStyle.textContent = cssText;
}
}
}
},
_beforeAttached: function () {
if ((!this._scopeSelector || this.__stylePropertiesInvalid) && this._needsStyleProperties()) {
this.__stylePropertiesInvalid = false;
this._updateStyleProperties();
}
},
_findStyleHost: function () {
var e = this, root;
while (root = Polymer.dom(e).getOwnerRoot()) {
if (Polymer.isInstance(root.host)) {
return root.host;
}
e = root.host;
}
return styleDefaults;
},
_updateStyleProperties: function () {
var info, scope = this._findStyleHost();
if (!scope._styleProperties) {
scope._computeStyleProperties();
}
if (!scope._styleCache) {
scope._styleCache = new Polymer.StyleCache();
}
var scopeData = propertyUtils.propertyDataFromStyles(scope._styles, this);
var scopeCacheable = !this.__notStyleScopeCacheable;
if (scopeCacheable) {
scopeData.key.customStyle = this.customStyle;
info = scope._styleCache.retrieve(this.is, scopeData.key, this._styles);
}
var scopeCached = Boolean(info);
if (scopeCached) {
this._styleProperties = info._styleProperties;
} else {
this._computeStyleProperties(scopeData.properties);
}
this._computeOwnStyleProperties();
if (!scopeCached) {
info = styleCache.retrieve(this.is, this._ownStyleProperties, this._styles);
}
var globalCached = Boolean(info) && !scopeCached;
var style = this._applyStyleProperties(info);
if (!scopeCached) {
style = style && nativeShadow ? style.cloneNode(true) : style;
info = {
style: style,
_scopeSelector: this._scopeSelector,
_styleProperties: this._styleProperties
};
if (scopeCacheable) {
scopeData.key.customStyle = {};
this.mixin(scopeData.key.customStyle, this.customStyle);
scope._styleCache.store(this.is, info, scopeData.key, this._styles);
}
if (!globalCached) {
styleCache.store(this.is, Object.create(info), this._ownStyleProperties, this._styles);
}
}
},
_computeStyleProperties: function (scopeProps) {
var scope = this._findStyleHost();
if (!scope._styleProperties) {
scope._computeStyleProperties();
}
var props = Object.create(scope._styleProperties);
var hostAndRootProps = propertyUtils.hostAndRootPropertiesForScope(this);
this.mixin(props, hostAndRootProps.hostProps);
scopeProps = scopeProps || propertyUtils.propertyDataFromStyles(scope._styles, this).properties;
this.mixin(props, scopeProps);
this.mixin(props, hostAndRootProps.rootProps);
propertyUtils.mixinCustomStyle(props, this.customStyle);
propertyUtils.reify(props);
this._styleProperties = props;
},
_computeOwnStyleProperties: function () {
var props = {};
for (var i = 0, n; i < this._ownStylePropertyNames.length; i++) {
n = this._ownStylePropertyNames[i];
props[n] = this._styleProperties[n];
}
this._ownStyleProperties = props;
},
_scopeCount: 0,
_applyStyleProperties: function (info) {
var oldScopeSelector = this._scopeSelector;
this._scopeSelector = info ? info._scopeSelector : this.is + '-' + this.__proto__._scopeCount++;
var style = propertyUtils.applyElementStyle(this, this._styleProperties, this._scopeSelector, info && info.style);
if (!nativeShadow) {
propertyUtils.applyElementScopeSelector(this, this._scopeSelector, oldScopeSelector, this._scopeCssViaAttr);
}
return style;
},
serializeValueToAttribute: function (value, attribute, node) {
node = node || this;
if (attribute === 'class' && !nativeShadow) {
var host = node === this ? this.domHost || this.dataHost : this;
if (host) {
value = host._scopeElementClass(node, value);
}
}
node = this.shadyRoot && this.shadyRoot._hasDistributed ? Polymer.dom(node) : node;
serializeValueToAttribute.call(this, value, attribute, node);
},
_scopeElementClass: function (element, selector) {
if (!nativeShadow && !this._scopeCssViaAttr) {
selector = (selector ? selector + ' ' : '') + SCOPE_NAME + ' ' + this.is + (element._scopeSelector ? ' ' + XSCOPE_NAME + ' ' + element._scopeSelector : '');
}
return selector;
},
updateStyles: function (properties) {
if (properties) {
this.mixin(this.customStyle, properties);
}
if (nativeVariables) {
propertyUtils.updateNativeStyleProperties(this, this.customStyle);
} else {
if (this.isAttached) {
if (this._needsStyleProperties()) {
this._updateStyleProperties();
} else {
this._styleProperties = null;
}
} else {
this.__stylePropertiesInvalid = true;
}
if (this._styleCache) {
this._styleCache.clear();
}
this._updateRootStyles();
}
},
_updateRootStyles: function (root) {
root = root || this.root;
var c$ = Polymer.dom(root)._query(function (e) {
return e.shadyRoot || e.shadowRoot;
});
for (var i = 0, l = c$.length, c; i < l && (c = c$[i]); i++) {
if (c.updateStyles) {
c.updateStyles();
}
}
}
});
Polymer.updateStyles = function (properties) {
styleDefaults.updateStyles(properties);
Polymer.Base._updateRootStyles(document);
};
var styleCache = new Polymer.StyleCache();
Polymer.customStyleCache = styleCache;
var SCOPE_NAME = styleTransformer.SCOPE_NAME;
var XSCOPE_NAME = propertyUtils.XSCOPE_NAME;
}());Polymer.Base._addFeature({
_registerFeatures: function () {
this._prepIs();
this._prepConstructor();
this._prepStyles();
},
_finishRegisterFeatures: function () {
this._prepTemplate();
this._prepShimStyles();
this._prepAnnotations();
this._prepEffects();
this._prepBehaviors();
this._prepPropertyInfo();
this._prepBindings();
this._prepShady();
},
_prepBehavior: function (b) {
this._addPropertyEffects(b.properties);
this._addComplexObserverEffects(b.observers);
this._addHostAttributes(b.hostAttributes);
},
_initFeatures: function () {
this._setupGestures();
this._setupConfigure();
this._setupStyleProperties();
this._setupDebouncers();
this._setupShady();
this._registerHost();
if (this._template) {
this._validateApplyShim();
this._poolContent();
this._beginHosting();
this._stampTemplate();
this._endHosting();
this._marshalAnnotationReferences();
}
this._marshalInstanceEffects();
this._marshalBehaviors();
this._marshalHostAttributes();
this._marshalAttributes();
this._tryReady();
},
_marshalBehavior: function (b) {
if (b.listeners) {
this._listenListeners(b.listeners);
}
}
});(function () {
var propertyUtils = Polymer.StyleProperties;
var styleUtil = Polymer.StyleUtil;
var cssParse = Polymer.CssParse;
var styleDefaults = Polymer.StyleDefaults;
var styleTransformer = Polymer.StyleTransformer;
var applyShim = Polymer.ApplyShim;
var debounce = Polymer.Debounce;
var settings = Polymer.Settings;
var updateDebouncer;
Polymer({
is: 'custom-style',
extends: 'style',
_template: null,
properties: { include: String },
ready: function () {
this.__appliedElement = this.__appliedElement || this;
this.__cssBuild = styleUtil.getCssBuildType(this);
if (this.__appliedElement !== this) {
this.__appliedElement.__cssBuild = this.__cssBuild;
}
this._tryApply();
},
attached: function () {
this._tryApply();
},
_tryApply: function () {
if (!this._appliesToDocument) {
if (this.parentNode && this.parentNode.localName !== 'dom-module') {
this._appliesToDocument = true;
var e = this.__appliedElement;
if (!settings.useNativeCSSProperties) {
this.__needsUpdateStyles = styleDefaults.hasStyleProperties();
styleDefaults.addStyle(e);
}
if (e.textContent || this.include) {
this._apply(true);
} else {
var self = this;
var observer = new MutationObserver(function () {
observer.disconnect();
self._apply(true);
});
observer.observe(e, { childList: true });
}
}
}
},
_updateStyles: function () {
Polymer.updateStyles();
},
_apply: function (initialApply) {
var e = this.__appliedElement;
if (this.include) {
e.textContent = styleUtil.cssFromModules(this.include, true) + e.textContent;
}
if (!e.textContent) {
return;
}
var buildType = this.__cssBuild;
var targetedBuild = styleUtil.isTargetedBuild(buildType);
if (settings.useNativeCSSProperties && targetedBuild) {
return;
}
var styleRules = styleUtil.rulesForStyle(e);
if (!targetedBuild) {
styleUtil.forEachRule(styleRules, function (rule) {
styleTransformer.documentRule(rule);
if (settings.useNativeCSSProperties && !buildType) {
applyShim.transformRule(rule);
}
});
}
if (settings.useNativeCSSProperties) {
e.textContent = styleUtil.toCssText(styleRules);
} else {
var self = this;
var fn = function fn() {
self._flushCustomProperties();
};
if (initialApply) {
Polymer.RenderStatus.whenReady(fn);
} else {
fn();
}
}
},
_flushCustomProperties: function () {
if (this.__needsUpdateStyles) {
this.__needsUpdateStyles = false;
updateDebouncer = debounce(updateDebouncer, this._updateStyles);
} else {
this._applyCustomProperties();
}
},
_applyCustomProperties: function () {
var element = this.__appliedElement;
this._computeStyleProperties();
var props = this._styleProperties;
var rules = styleUtil.rulesForStyle(element);
if (!rules) {
return;
}
element.textContent = styleUtil.toCssText(rules, function (rule) {
var css = rule.cssText = rule.parsedCssText;
if (rule.propertyInfo && rule.propertyInfo.cssText) {
css = cssParse.removeCustomPropAssignment(css);
rule.cssText = propertyUtils.valueForProperties(css, props);
}
});
}
});
}());Polymer.Templatizer = {
properties: { __hideTemplateChildren__: { observer: '_showHideChildren' } },
_instanceProps: Polymer.nob,
_parentPropPrefix: '_parent_',
templatize: function (template) {
this._templatized = template;
if (!template._content) {
template._content = template.content;
}
if (template._content._ctor) {
this.ctor = template._content._ctor;
this._prepParentProperties(this.ctor.prototype, template);
return;
}
var archetype = Object.create(Polymer.Base);
this._customPrepAnnotations(archetype, template);
this._prepParentProperties(archetype, template);
archetype._prepEffects();
this._customPrepEffects(archetype);
archetype._prepBehaviors();
archetype._prepPropertyInfo();
archetype._prepBindings();
archetype._notifyPathUp = this._notifyPathUpImpl;
archetype._scopeElementClass = this._scopeElementClassImpl;
archetype.listen = this._listenImpl;
archetype._showHideChildren = this._showHideChildrenImpl;
archetype.__setPropertyOrig = this.__setProperty;
archetype.__setProperty = this.__setPropertyImpl;
var _constructor = this._constructorImpl;
var ctor = function TemplateInstance(model, host) {
_constructor.call(this, model, host);
};
ctor.prototype = archetype;
archetype.constructor = ctor;
template._content._ctor = ctor;
this.ctor = ctor;
},
_getRootDataHost: function () {
return this.dataHost && this.dataHost._rootDataHost || this.dataHost;
},
_showHideChildrenImpl: function (hide) {
var c = this._children;
for (var i = 0; i < c.length; i++) {
var n = c[i];
if (Boolean(hide) != Boolean(n.__hideTemplateChildren__)) {
if (n.nodeType === Node.TEXT_NODE) {
if (hide) {
n.__polymerTextContent__ = n.textContent;
n.textContent = '';
} else {
n.textContent = n.__polymerTextContent__;
}
} else if (n.style) {
if (hide) {
n.__polymerDisplay__ = n.style.display;
n.style.display = 'none';
} else {
n.style.display = n.__polymerDisplay__;
}
}
}
n.__hideTemplateChildren__ = hide;
}
},
__setPropertyImpl: function (property, value, fromAbove, node) {
if (node && node.__hideTemplateChildren__ && property == 'textContent') {
property = '__polymerTextContent__';
}
this.__setPropertyOrig(property, value, fromAbove, node);
},
_debounceTemplate: function (fn) {
Polymer.dom.addDebouncer(this.debounce('_debounceTemplate', fn));
},
_flushTemplates: function () {
Polymer.dom.flush();
},
_customPrepEffects: function (archetype) {
var parentProps = archetype._parentProps;
for (var prop in parentProps) {
archetype._addPropertyEffect(prop, 'function', this._createHostPropEffector(prop));
}
for (prop in this._instanceProps) {
archetype._addPropertyEffect(prop, 'function', this._createInstancePropEffector(prop));
}
},
_customPrepAnnotations: function (archetype, template) {
archetype._template = template;
var c = template._content;
if (!c._notes) {
var rootDataHost = archetype._rootDataHost;
if (rootDataHost) {
Polymer.Annotations.prepElement = function () {
rootDataHost._prepElement();
};
}
c._notes = Polymer.Annotations.parseAnnotations(template);
Polymer.Annotations.prepElement = null;
this._processAnnotations(c._notes);
}
archetype._notes = c._notes;
archetype._parentProps = c._parentProps;
},
_prepParentProperties: function (archetype, template) {
var parentProps = this._parentProps = archetype._parentProps;
if (this._forwardParentProp && parentProps) {
var proto = archetype._parentPropProto;
var prop;
if (!proto) {
for (prop in this._instanceProps) {
delete parentProps[prop];
}
proto = archetype._parentPropProto = Object.create(null);
if (template != this) {
Polymer.Bind.prepareModel(proto);
Polymer.Base.prepareModelNotifyPath(proto);
}
for (prop in parentProps) {
var parentProp = this._parentPropPrefix + prop;
var effects = [
{
kind: 'function',
effect: this._createForwardPropEffector(prop),
fn: Polymer.Bind._functionEffect
},
{
kind: 'notify',
fn: Polymer.Bind._notifyEffect,
effect: { event: Polymer.CaseMap.camelToDashCase(parentProp) + '-changed' }
}
];
Polymer.Bind._createAccessors(proto, parentProp, effects);
}
}
var self = this;
if (template != this) {
Polymer.Bind.prepareInstance(template);
template._forwardParentProp = function (source, value) {
self._forwardParentProp(source, value);
};
}
this._extendTemplate(template, proto);
template._pathEffector = function (path, value, fromAbove) {
return self._pathEffectorImpl(path, value, fromAbove);
};
}
},
_createForwardPropEffector: function (prop) {
return function (source, value) {
this._forwardParentProp(prop, value);
};
},
_createHostPropEffector: function (prop) {
var prefix = this._parentPropPrefix;
return function (source, value) {
this.dataHost._templatized[prefix + prop] = value;
};
},
_createInstancePropEffector: function (prop) {
return function (source, value, old, fromAbove) {
if (!fromAbove) {
this.dataHost._forwardInstanceProp(this, prop, value);
}
};
},
_extendTemplate: function (template, proto) {
var n$ = Object.getOwnPropertyNames(proto);
if (proto._propertySetter) {
template._propertySetter = proto._propertySetter;
}
for (var i = 0, n; i < n$.length && (n = n$[i]); i++) {
var val = template[n];
var pd = Object.getOwnPropertyDescriptor(proto, n);
Object.defineProperty(template, n, pd);
if (val !== undefined) {
template._propertySetter(n, val);
}
}
},
_showHideChildren: function (hidden) {
},
_forwardInstancePath: function (inst, path, value) {
},
_forwardInstanceProp: function (inst, prop, value) {
},
_notifyPathUpImpl: function (path, value) {
var dataHost = this.dataHost;
var dot = path.indexOf('.');
var root = dot < 0 ? path : path.slice(0, dot);
dataHost._forwardInstancePath.call(dataHost, this, path, value);
if (root in dataHost._parentProps) {
dataHost._templatized._notifyPath(dataHost._parentPropPrefix + path, value);
}
},
_pathEffectorImpl: function (path, value, fromAbove) {
if (this._forwardParentPath) {
if (path.indexOf(this._parentPropPrefix) === 0) {
var subPath = path.substring(this._parentPropPrefix.length);
var model = this._modelForPath(subPath);
if (model in this._parentProps) {
this._forwardParentPath(subPath, value);
}
}
}
Polymer.Base._pathEffector.call(this._templatized, path, value, fromAbove);
},
_constructorImpl: function (model, host) {
this._rootDataHost = host._getRootDataHost();
this._setupConfigure(model);
this._registerHost(host);
this._beginHosting();
this.root = this.instanceTemplate(this._template);
this.root.__noContent = !this._notes._hasContent;
this.root.__styleScoped = true;
this._endHosting();
this._marshalAnnotatedNodes();
this._marshalInstanceEffects();
this._marshalAnnotatedListeners();
var children = [];
for (var n = this.root.firstChild; n; n = n.nextSibling) {
children.push(n);
n._templateInstance = this;
}
this._children = children;
if (host.__hideTemplateChildren__) {
this._showHideChildren(true);
}
this._tryReady();
},
_listenImpl: function (node, eventName, methodName) {
var model = this;
var host = this._rootDataHost;
var handler = host._createEventHandler(node, eventName, methodName);
var decorated = function (e) {
e.model = model;
handler(e);
};
host._listen(node, eventName, decorated);
},
_scopeElementClassImpl: function (node, value) {
var host = this._rootDataHost;
if (host) {
return host._scopeElementClass(node, value);
}
return value;
},
stamp: function (model) {
model = model || {};
if (this._parentProps) {
var templatized = this._templatized;
for (var prop in this._parentProps) {
if (model[prop] === undefined) {
model[prop] = templatized[this._parentPropPrefix + prop];
}
}
}
return new this.ctor(model, this);
},
modelForElement: function (el) {
var model;
while (el) {
if (model = el._templateInstance) {
if (model.dataHost != this) {
el = model.dataHost;
} else {
return model;
}
} else {
el = el.parentNode;
}
}
}
};Polymer({
is: 'dom-template',
extends: 'template',
_template: null,
behaviors: [Polymer.Templatizer],
ready: function () {
this.templatize(this);
}
});Polymer._collections = new WeakMap();
Polymer.Collection = function (userArray) {
Polymer._collections.set(userArray, this);
this.userArray = userArray;
this.store = userArray.slice();
this.initMap();
};
Polymer.Collection.prototype = {
constructor: Polymer.Collection,
initMap: function () {
var omap = this.omap = new WeakMap();
var pmap = this.pmap = {};
var s = this.store;
for (var i = 0; i < s.length; i++) {
var item = s[i];
if (item && typeof item == 'object') {
omap.set(item, i);
} else {
pmap[item] = i;
}
}
},
add: function (item) {
var key = this.store.push(item) - 1;
if (item && typeof item == 'object') {
this.omap.set(item, key);
} else {
this.pmap[item] = key;
}
return '#' + key;
},
removeKey: function (key) {
if (key = this._parseKey(key)) {
this._removeFromMap(this.store[key]);
delete this.store[key];
}
},
_removeFromMap: function (item) {
if (item && typeof item == 'object') {
this.omap.delete(item);
} else {
delete this.pmap[item];
}
},
remove: function (item) {
var key = this.getKey(item);
this.removeKey(key);
return key;
},
getKey: function (item) {
var key;
if (item && typeof item == 'object') {
key = this.omap.get(item);
} else {
key = this.pmap[item];
}
if (key != undefined) {
return '#' + key;
}
},
getKeys: function () {
return Object.keys(this.store).map(function (key) {
return '#' + key;
});
},
_parseKey: function (key) {
if (key && key[0] == '#') {
return key.slice(1);
}
},
setItem: function (key, item) {
if (key = this._parseKey(key)) {
var old = this.store[key];
if (old) {
this._removeFromMap(old);
}
if (item && typeof item == 'object') {
this.omap.set(item, key);
} else {
this.pmap[item] = key;
}
this.store[key] = item;
}
},
getItem: function (key) {
if (key = this._parseKey(key)) {
return this.store[key];
}
},
getItems: function () {
var items = [], store = this.store;
for (var key in store) {
items.push(store[key]);
}
return items;
},
_applySplices: function (splices) {
var keyMap = {}, key;
for (var i = 0, s; i < splices.length && (s = splices[i]); i++) {
s.addedKeys = [];
for (var j = 0; j < s.removed.length; j++) {
key = this.getKey(s.removed[j]);
keyMap[key] = keyMap[key] ? null : -1;
}
for (j = 0; j < s.addedCount; j++) {
var item = this.userArray[s.index + j];
key = this.getKey(item);
key = key === undefined ? this.add(item) : key;
keyMap[key] = keyMap[key] ? null : 1;
s.addedKeys.push(key);
}
}
var removed = [];
var added = [];
for (key in keyMap) {
if (keyMap[key] < 0) {
this.removeKey(key);
removed.push(key);
}
if (keyMap[key] > 0) {
added.push(key);
}
}
return [{
removed: removed,
added: added
}];
}
};
Polymer.Collection.get = function (userArray) {
return Polymer._collections.get(userArray) || new Polymer.Collection(userArray);
};
Polymer.Collection.applySplices = function (userArray, splices) {
var coll = Polymer._collections.get(userArray);
return coll ? coll._applySplices(splices) : null;
};Polymer({
is: 'dom-repeat',
extends: 'template',
_template: null,
properties: {
items: { type: Array },
as: {
type: String,
value: 'item'
},
indexAs: {
type: String,
value: 'index'
},
sort: {
type: Function,
observer: '_sortChanged'
},
filter: {
type: Function,
observer: '_filterChanged'
},
observe: {
type: String,
observer: '_observeChanged'
},
delay: Number,
renderedItemCount: {
type: Number,
notify: true,
readOnly: true
},
initialCount: {
type: Number,
observer: '_initializeChunking'
},
targetFramerate: {
type: Number,
value: 20
},
_targetFrameTime: {
type: Number,
computed: '_computeFrameTime(targetFramerate)'
}
},
behaviors: [Polymer.Templatizer],
observers: ['_itemsChanged(items.*)'],
created: function () {
this._instances = [];
this._pool = [];
this._limit = Infinity;
var self = this;
this._boundRenderChunk = function () {
self._renderChunk();
};
},
detached: function () {
this.__isDetached = true;
for (var i = 0; i < this._instances.length; i++) {
this._detachInstance(i);
}
},
attached: function () {
if (this.__isDetached) {
this.__isDetached = false;
var parent = Polymer.dom(Polymer.dom(this).parentNode);
for (var i = 0; i < this._instances.length; i++) {
this._attachInstance(i, parent);
}
}
},
ready: function () {
this._instanceProps = { __key__: true };
this._instanceProps[this.as] = true;
this._instanceProps[this.indexAs] = true;
if (!this.ctor) {
this.templatize(this);
}
},
_sortChanged: function (sort) {
var dataHost = this._getRootDataHost();
this._sortFn = sort && (typeof sort == 'function' ? sort : function () {
return dataHost[sort].apply(dataHost, arguments);
});
this._needFullRefresh = true;
if (this.items) {
this._debounceTemplate(this._render);
}
},
_filterChanged: function (filter) {
var dataHost = this._getRootDataHost();
this._filterFn = filter && (typeof filter == 'function' ? filter : function () {
return dataHost[filter].apply(dataHost, arguments);
});
this._needFullRefresh = true;
if (this.items) {
this._debounceTemplate(this._render);
}
},
_computeFrameTime: function (rate) {
return Math.ceil(1000 / rate);
},
_initializeChunking: function () {
if (this.initialCount) {
this._limit = this.initialCount;
this._chunkCount = this.initialCount;
this._lastChunkTime = performance.now();
}
},
_tryRenderChunk: function () {
if (this.items && this._limit < this.items.length) {
this.debounce('renderChunk', this._requestRenderChunk);
}
},
_requestRenderChunk: function () {
requestAnimationFrame(this._boundRenderChunk);
},
_renderChunk: function () {
var currChunkTime = performance.now();
var ratio = this._targetFrameTime / (currChunkTime - this._lastChunkTime);
this._chunkCount = Math.round(this._chunkCount * ratio) || 1;
this._limit += this._chunkCount;
this._lastChunkTime = currChunkTime;
this._debounceTemplate(this._render);
},
_observeChanged: function () {
this._observePaths = this.observe && this.observe.replace('.*', '.').split(' ');
},
_itemsChanged: function (change) {
if (change.path == 'items') {
if (Array.isArray(this.items)) {
this.collection = Polymer.Collection.get(this.items);
} else if (!this.items) {
this.collection = null;
} else {
this._error(this._logf('dom-repeat', 'expected array for `items`,' + ' found', this.items));
}
this._keySplices = [];
this._indexSplices = [];
this._needFullRefresh = true;
this._initializeChunking();
this._debounceTemplate(this._render);
} else if (change.path == 'items.splices') {
this._keySplices = this._keySplices.concat(change.value.keySplices);
this._indexSplices = this._indexSplices.concat(change.value.indexSplices);
this._debounceTemplate(this._render);
} else {
var subpath = change.path.slice(6);
this._forwardItemPath(subpath, change.value);
this._checkObservedPaths(subpath);
}
},
_checkObservedPaths: function (path) {
if (this._observePaths) {
path = path.substring(path.indexOf('.') + 1);
var paths = this._observePaths;
for (var i = 0; i < paths.length; i++) {
if (path.indexOf(paths[i]) === 0) {
this._needFullRefresh = true;
if (this.delay) {
this.debounce('render', this._render, this.delay);
} else {
this._debounceTemplate(this._render);
}
return;
}
}
}
},
render: function () {
this._needFullRefresh = true;
this._debounceTemplate(this._render);
this._flushTemplates();
},
_render: function () {
if (this._needFullRefresh) {
this._applyFullRefresh();
this._needFullRefresh = false;
} else if (this._keySplices.length) {
if (this._sortFn) {
this._applySplicesUserSort(this._keySplices);
} else {
if (this._filterFn) {
this._applyFullRefresh();
} else {
this._applySplicesArrayOrder(this._indexSplices);
}
}
} else {
}
this._keySplices = [];
this._indexSplices = [];
var keyToIdx = this._keyToInstIdx = {};
for (var i = this._instances.length - 1; i >= 0; i--) {
var inst = this._instances[i];
if (inst.isPlaceholder && i < this._limit) {
inst = this._insertInstance(i, inst.__key__);
} else if (!inst.isPlaceholder && i >= this._limit) {
inst = this._downgradeInstance(i, inst.__key__);
}
keyToIdx[inst.__key__] = i;
if (!inst.isPlaceholder) {
inst.__setProperty(this.indexAs, i, true);
}
}
this._pool.length = 0;
this._setRenderedItemCount(this._instances.length);
this.fire('dom-change');
this._tryRenderChunk();
},
_applyFullRefresh: function () {
var c = this.collection;
var keys;
if (this._sortFn) {
keys = c ? c.getKeys() : [];
} else {
keys = [];
var items = this.items;
if (items) {
for (var i = 0; i < items.length; i++) {
keys.push(c.getKey(items[i]));
}
}
}
var self = this;
if (this._filterFn) {
keys = keys.filter(function (a) {
return self._filterFn(c.getItem(a));
});
}
if (this._sortFn) {
keys.sort(function (a, b) {
return self._sortFn(c.getItem(a), c.getItem(b));
});
}
for (i = 0; i < keys.length; i++) {
var key = keys[i];
var inst = this._instances[i];
if (inst) {
inst.__key__ = key;
if (!inst.isPlaceholder && i < this._limit) {
inst.__setProperty(this.as, c.getItem(key), true);
}
} else if (i < this._limit) {
this._insertInstance(i, key);
} else {
this._insertPlaceholder(i, key);
}
}
for (var j = this._instances.length - 1; j >= i; j--) {
this._detachAndRemoveInstance(j);
}
},
_numericSort: function (a, b) {
return a - b;
},
_applySplicesUserSort: function (splices) {
var c = this.collection;
var keyMap = {};
var key;
for (var i = 0, s; i < splices.length && (s = splices[i]); i++) {
for (var j = 0; j < s.removed.length; j++) {
key = s.removed[j];
keyMap[key] = keyMap[key] ? null : -1;
}
for (j = 0; j < s.added.length; j++) {
key = s.added[j];
keyMap[key] = keyMap[key] ? null : 1;
}
}
var removedIdxs = [];
var addedKeys = [];
for (key in keyMap) {
if (keyMap[key] === -1) {
removedIdxs.push(this._keyToInstIdx[key]);
}
if (keyMap[key] === 1) {
addedKeys.push(key);
}
}
if (removedIdxs.length) {
removedIdxs.sort(this._numericSort);
for (i = removedIdxs.length - 1; i >= 0; i--) {
var idx = removedIdxs[i];
if (idx !== undefined) {
this._detachAndRemoveInstance(idx);
}
}
}
var self = this;
if (addedKeys.length) {
if (this._filterFn) {
addedKeys = addedKeys.filter(function (a) {
return self._filterFn(c.getItem(a));
});
}
addedKeys.sort(function (a, b) {
return self._sortFn(c.getItem(a), c.getItem(b));
});
var start = 0;
for (i = 0; i < addedKeys.length; i++) {
start = this._insertRowUserSort(start, addedKeys[i]);
}
}
},
_insertRowUserSort: function (start, key) {
var c = this.collection;
var item = c.getItem(key);
var end = this._instances.length - 1;
var idx = -1;
while (start <= end) {
var mid = start + end >> 1;
var midKey = this._instances[mid].__key__;
var cmp = this._sortFn(c.getItem(midKey), item);
if (cmp < 0) {
start = mid + 1;
} else if (cmp > 0) {
end = mid - 1;
} else {
idx = mid;
break;
}
}
if (idx < 0) {
idx = end + 1;
}
this._insertPlaceholder(idx, key);
return idx;
},
_applySplicesArrayOrder: function (splices) {
for (var i = 0, s; i < splices.length && (s = splices[i]); i++) {
for (var j = 0; j < s.removed.length; j++) {
this._detachAndRemoveInstance(s.index);
}
for (j = 0; j < s.addedKeys.length; j++) {
this._insertPlaceholder(s.index + j, s.addedKeys[j]);
}
}
},
_detachInstance: function (idx) {
var inst = this._instances[idx];
if (!inst.isPlaceholder) {
for (var i = 0; i < inst._children.length; i++) {
var el = inst._children[i];
Polymer.dom(inst.root).appendChild(el);
}
return inst;
}
},
_attachInstance: function (idx, parent) {
var inst = this._instances[idx];
if (!inst.isPlaceholder) {
parent.insertBefore(inst.root, this);
}
},
_detachAndRemoveInstance: function (idx) {
var inst = this._detachInstance(idx);
if (inst) {
this._pool.push(inst);
}
this._instances.splice(idx, 1);
},
_insertPlaceholder: function (idx, key) {
this._instances.splice(idx, 0, {
isPlaceholder: true,
__key__: key
});
},
_stampInstance: function (idx, key) {
var model = { __key__: key };
model[this.as] = this.collection.getItem(key);
model[this.indexAs] = idx;
return this.stamp(model);
},
_insertInstance: function (idx, key) {
var inst = this._pool.pop();
if (inst) {
inst.__setProperty(this.as, this.collection.getItem(key), true);
inst.__setProperty('__key__', key, true);
} else {
inst = this._stampInstance(idx, key);
}
var beforeRow = this._instances[idx + 1];
var beforeNode = beforeRow && !beforeRow.isPlaceholder ? beforeRow._children[0] : this;
var parentNode = Polymer.dom(this).parentNode;
Polymer.dom(parentNode).insertBefore(inst.root, beforeNode);
this._instances[idx] = inst;
return inst;
},
_downgradeInstance: function (idx, key) {
var inst = this._detachInstance(idx);
if (inst) {
this._pool.push(inst);
}
inst = {
isPlaceholder: true,
__key__: key
};
this._instances[idx] = inst;
return inst;
},
_showHideChildren: function (hidden) {
for (var i = 0; i < this._instances.length; i++) {
this._instances[i]._showHideChildren(hidden);
}
},
_forwardInstanceProp: function (inst, prop, value) {
if (prop == this.as) {
var idx;
if (this._sortFn || this._filterFn) {
idx = this.items.indexOf(this.collection.getItem(inst.__key__));
} else {
idx = inst[this.indexAs];
}
this.set('items.' + idx, value);
}
},
_forwardInstancePath: function (inst, path, value) {
if (path.indexOf(this.as + '.') === 0) {
this._notifyPath('items.' + inst.__key__ + '.' + path.slice(this.as.length + 1), value);
}
},
_forwardParentProp: function (prop, value) {
var i$ = this._instances;
for (var i = 0, inst; i < i$.length && (inst = i$[i]); i++) {
if (!inst.isPlaceholder) {
inst.__setProperty(prop, value, true);
}
}
},
_forwardParentPath: function (path, value) {
var i$ = this._instances;
for (var i = 0, inst; i < i$.length && (inst = i$[i]); i++) {
if (!inst.isPlaceholder) {
inst._notifyPath(path, value, true);
}
}
},
_forwardItemPath: function (path, value) {
if (this._keyToInstIdx) {
var dot = path.indexOf('.');
var key = path.substring(0, dot < 0 ? path.length : dot);
var idx = this._keyToInstIdx[key];
var inst = this._instances[idx];
if (inst && !inst.isPlaceholder) {
if (dot >= 0) {
path = this.as + '.' + path.substring(dot + 1);
inst._notifyPath(path, value, true);
} else {
inst.__setProperty(this.as, value, true);
}
}
}
},
itemForElement: function (el) {
var instance = this.modelForElement(el);
return instance && instance[this.as];
},
keyForElement: function (el) {
var instance = this.modelForElement(el);
return instance && instance.__key__;
},
indexForElement: function (el) {
var instance = this.modelForElement(el);
return instance && instance[this.indexAs];
}
});Polymer({
is: 'array-selector',
_template: null,
properties: {
items: {
type: Array,
observer: 'clearSelection'
},
multi: {
type: Boolean,
value: false,
observer: 'clearSelection'
},
selected: {
type: Object,
notify: true
},
selectedItem: {
type: Object,
notify: true
},
toggle: {
type: Boolean,
value: false
}
},
clearSelection: function () {
if (Array.isArray(this.selected)) {
for (var i = 0; i < this.selected.length; i++) {
this.unlinkPaths('selected.' + i);
}
} else {
this.unlinkPaths('selected');
this.unlinkPaths('selectedItem');
}
if (this.multi) {
if (!this.selected || this.selected.length) {
this.selected = [];
this._selectedColl = Polymer.Collection.get(this.selected);
}
} else {
this.selected = null;
this._selectedColl = null;
}
this.selectedItem = null;
},
isSelected: function (item) {
if (this.multi) {
return this._selectedColl.getKey(item) !== undefined;
} else {
return this.selected == item;
}
},
deselect: function (item) {
if (this.multi) {
if (this.isSelected(item)) {
var skey = this._selectedColl.getKey(item);
this.arrayDelete('selected', item);
this.unlinkPaths('selected.' + skey);
}
} else {
this.selected = null;
this.selectedItem = null;
this.unlinkPaths('selected');
this.unlinkPaths('selectedItem');
}
},
select: function (item) {
var icol = Polymer.Collection.get(this.items);
var key = icol.getKey(item);
if (this.multi) {
if (this.isSelected(item)) {
if (this.toggle) {
this.deselect(item);
}
} else {
this.push('selected', item);
var skey = this._selectedColl.getKey(item);
this.linkPaths('selected.' + skey, 'items.' + key);
}
} else {
if (this.toggle && item == this.selected) {
this.deselect();
} else {
this.selected = item;
this.selectedItem = item;
this.linkPaths('selected', 'items.' + key);
this.linkPaths('selectedItem', 'items.' + key);
}
}
}
});Polymer({
is: 'dom-if',
extends: 'template',
_template: null,
properties: {
'if': {
type: Boolean,
value: false,
observer: '_queueRender'
},
restamp: {
type: Boolean,
value: false,
observer: '_queueRender'
}
},
behaviors: [Polymer.Templatizer],
_queueRender: function () {
this._debounceTemplate(this._render);
},
detached: function () {
if (!this.parentNode || this.parentNode.nodeType == Node.DOCUMENT_FRAGMENT_NODE && (!Polymer.Settings.hasShadow || !(this.parentNode instanceof ShadowRoot))) {
this._teardownInstance();
}
},
attached: function () {
if (this.if && this.ctor) {
this.async(this._ensureInstance);
}
},
render: function () {
this._flushTemplates();
},
_render: function () {
if (this.if) {
if (!this.ctor) {
this.templatize(this);
}
this._ensureInstance();
this._showHideChildren();
} else if (this.restamp) {
this._teardownInstance();
}
if (!this.restamp && this._instance) {
this._showHideChildren();
}
if (this.if != this._lastIf) {
this.fire('dom-change');
this._lastIf = this.if;
}
},
_ensureInstance: function () {
var parentNode = Polymer.dom(this).parentNode;
if (parentNode) {
var parent = Polymer.dom(parentNode);
if (!this._instance) {
this._instance = this.stamp();
var root = this._instance.root;
parent.insertBefore(root, this);
} else {
var c$ = this._instance._children;
if (c$ && c$.length) {
var lastChild = Polymer.dom(this).previousSibling;
if (lastChild !== c$[c$.length - 1]) {
for (var i = 0, n; i < c$.length && (n = c$[i]); i++) {
parent.insertBefore(n, this);
}
}
}
}
}
},
_teardownInstance: function () {
if (this._instance) {
var c$ = this._instance._children;
if (c$ && c$.length) {
var parent = Polymer.dom(Polymer.dom(c$[0]).parentNode);
for (var i = 0, n; i < c$.length && (n = c$[i]); i++) {
parent.removeChild(n);
}
}
this._instance = null;
}
},
_showHideChildren: function () {
var hidden = this.__hideTemplateChildren__ || !this.if;
if (this._instance) {
this._instance._showHideChildren(hidden);
}
},
_forwardParentProp: function (prop, value) {
if (this._instance) {
this._instance.__setProperty(prop, value, true);
}
},
_forwardParentPath: function (path, value) {
if (this._instance) {
this._instance._notifyPath(path, value, true);
}
}
});Polymer({
is: 'dom-bind',
extends: 'template',
_template: null,
created: function () {
var self = this;
Polymer.RenderStatus.whenReady(function () {
if (document.readyState == 'loading') {
document.addEventListener('DOMContentLoaded', function () {
self._markImportsReady();
});
} else {
self._markImportsReady();
}
});
},
_ensureReady: function () {
if (!this._readied) {
this._readySelf();
}
},
_markImportsReady: function () {
this._importsReady = true;
this._ensureReady();
},
_registerFeatures: function () {
this._prepConstructor();
},
_insertChildren: function () {
var parentDom = Polymer.dom(Polymer.dom(this).parentNode);
parentDom.insertBefore(this.root, this);
},
_removeChildren: function () {
if (this._children) {
for (var i = 0; i < this._children.length; i++) {
this.root.appendChild(this._children[i]);
}
}
},
_initFeatures: function () {
},
_scopeElementClass: function (element, selector) {
if (this.dataHost) {
return this.dataHost._scopeElementClass(element, selector);
} else {
return selector;
}
},
_configureInstanceProperties: function () {
},
_prepConfigure: function () {
var config = {};
for (var prop in this._propertyEffects) {
config[prop] = this[prop];
}
var setupConfigure = this._setupConfigure;
this._setupConfigure = function () {
setupConfigure.call(this, config);
};
},
attached: function () {
if (this._importsReady) {
this.render();
}
},
detached: function () {
this._removeChildren();
},
render: function () {
this._ensureReady();
if (!this._children) {
this._template = this;
this._prepAnnotations();
this._prepEffects();
this._prepBehaviors();
this._prepConfigure();
this._prepBindings();
this._prepPropertyInfo();
Polymer.Base._initFeatures.call(this);
this._children = Polymer.TreeApi.arrayCopyChildNodes(this.root);
}
this._insertChildren();
this.fire('dom-change');
}
});
/**
@license
Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
function MakePromise (asap) {
  function Promise(fn) {
		if (typeof this !== 'object' || typeof fn !== 'function') throw new TypeError();
		this._state = null;
		this._value = null;
		this._deferreds = []

		doResolve(fn, resolve.bind(this), reject.bind(this));
	}

	function handle(deferred) {
		var me = this;
		if (this._state === null) {
			this._deferreds.push(deferred);
			return
		}
		asap(function() {
			var cb = me._state ? deferred.onFulfilled : deferred.onRejected
			if (typeof cb !== 'function') {
				(me._state ? deferred.resolve : deferred.reject)(me._value);
				return;
			}
			var ret;
			try {
				ret = cb(me._value);
			}
			catch (e) {
				deferred.reject(e);
				return;
			}
			deferred.resolve(ret);
		})
	}

	function resolve(newValue) {
		try { //Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
			if (newValue === this) throw new TypeError();
			if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {
				var then = newValue.then;
				if (typeof then === 'function') {
					doResolve(then.bind(newValue), resolve.bind(this), reject.bind(this));
					return;
				}
			}
			this._state = true;
			this._value = newValue;
			finale.call(this);
		} catch (e) { reject.call(this, e); }
	}

	function reject(newValue) {
		this._state = false;
		this._value = newValue;
		finale.call(this);
	}

	function finale() {
		for (var i = 0, len = this._deferreds.length; i < len; i++) {
			handle.call(this, this._deferreds[i]);
		}
		this._deferreds = null;
	}

	/**
	 * Take a potentially misbehaving resolver function and make sure
	 * onFulfilled and onRejected are only called once.
	 *
	 * Makes no guarantees about asynchrony.
	 */
	function doResolve(fn, onFulfilled, onRejected) {
		var done = false;
		try {
			fn(function (value) {
				if (done) return;
				done = true;
				onFulfilled(value);
			}, function (reason) {
				if (done) return;
				done = true;
				onRejected(reason);
			})
		} catch (ex) {
			if (done) return;
			done = true;
			onRejected(ex);
		}
	}

	Promise.prototype['catch'] = function (onRejected) {
		return this.then(null, onRejected);
	};

	Promise.prototype.then = function(onFulfilled, onRejected) {
		var me = this;
		return new Promise(function(resolve, reject) {
      handle.call(me, {
        onFulfilled: onFulfilled,
        onRejected: onRejected,
        resolve: resolve,
        reject: reject
      });
		})
	};

	Promise.resolve = function (value) {
		if (value && typeof value === 'object' && value.constructor === Promise) {
			return value;
		}

		return new Promise(function (resolve) {
			resolve(value);
		});
	};

	Promise.reject = function (value) {
		return new Promise(function (resolve, reject) {
			reject(value);
		});
	};

	
  return Promise;
}

if (typeof module !== 'undefined') {
  module.exports = MakePromise;
};
if (!window.Promise) {
  window.Promise = MakePromise(Polymer.Base.async);
};
'use strict';

  Polymer({
    is: 'iron-request',

    hostAttributes: {
      hidden: true
    },

    properties: {

      /**
       * A reference to the XMLHttpRequest instance used to generate the
       * network request.
       *
       * @type {XMLHttpRequest}
       */
      xhr: {
        type: Object,
        notify: true,
        readOnly: true,
        value: function() {
          return new XMLHttpRequest();
        }
      },

      /**
       * A reference to the parsed response body, if the `xhr` has completely
       * resolved.
       *
       * @type {*}
       * @default null
       */
      response: {
        type: Object,
        notify: true,
        readOnly: true,
        value: function() {
          return null;
        }
      },

      /**
       * A reference to the status code, if the `xhr` has completely resolved.
       */
      status: {
        type: Number,
        notify: true,
        readOnly: true,
        value: 0
      },

      /**
       * A reference to the status text, if the `xhr` has completely resolved.
       */
      statusText: {
        type: String,
        notify: true,
        readOnly: true,
        value: ''
      },

      /**
       * A promise that resolves when the `xhr` response comes back, or rejects
       * if there is an error before the `xhr` completes.
       *
       * @type {Promise}
       */
      completes: {
        type: Object,
        readOnly: true,
        notify: true,
        value: function() {
          return new Promise(function (resolve, reject) {
            this.resolveCompletes = resolve;
            this.rejectCompletes = reject;
          }.bind(this));
        }
      },

      /**
       * An object that contains progress information emitted by the XHR if
       * available.
       *
       * @default {}
       */
      progress: {
        type: Object,
        notify: true,
        readOnly: true,
        value: function() {
          return {};
        }
      },

      /**
       * Aborted will be true if an abort of the request is attempted.
       */
      aborted: {
        type: Boolean,
        notify: true,
        readOnly: true,
        value: false,
      },

      /**
       * Errored will be true if the browser fired an error event from the
       * XHR object (mainly network errors).
       */
      errored: {
        type: Boolean,
        notify: true,
        readOnly: true,
        value: false
      },

      /**
       * TimedOut will be true if the XHR threw a timeout event.
       */
      timedOut: {
        type: Boolean,
        notify: true,
        readOnly: true,
        value: false
      }
    },

    /**
     * Succeeded is true if the request succeeded. The request succeeded if it
     * loaded without error, wasn't aborted, and the status code is ≥ 200, and
     * < 300, or if the status code is 0.
     *
     * The status code 0 is accepted as a success because some schemes - e.g.
     * file:// - don't provide status codes.
     *
     * @return {boolean}
     */
    get succeeded() {
      if (this.errored || this.aborted || this.timedOut) {
        return false;
      }
      var status = this.xhr.status || 0;

      // Note: if we are using the file:// protocol, the status code will be 0
      // for all outcomes (successful or otherwise).
      return status === 0 ||
        (status >= 200 && status < 300);
    },

    /**
     * Sends an HTTP request to the server and returns the XHR object.
     *
     * The handling of the `body` parameter will vary based on the Content-Type
     * header. See the docs for iron-ajax's `body` param for details.
     *
     * @param {{
     *   url: string,
     *   method: (string|undefined),
     *   async: (boolean|undefined),
     *   body: (ArrayBuffer|ArrayBufferView|Blob|Document|FormData|null|string|undefined|Object),
     *   headers: (Object|undefined),
     *   handleAs: (string|undefined),
     *   jsonPrefix: (string|undefined),
     *   withCredentials: (boolean|undefined)}} options -
     *     url The url to which the request is sent.
     *     method The HTTP method to use, default is GET.
     *     async By default, all requests are sent asynchronously. To send synchronous requests,
     *         set to false.
     *     body The content for the request body for POST method.
     *     headers HTTP request headers.
     *     handleAs The response type. Default is 'text'.
     *     withCredentials Whether or not to send credentials on the request. Default is false.
     *   timeout: (Number|undefined)
     * @return {Promise}
     */
    send: function (options) {
      var xhr = this.xhr;

      if (xhr.readyState > 0) {
        return null;
      }

      xhr.addEventListener('progress', function (progress) {
        this._setProgress({
          lengthComputable: progress.lengthComputable,
          loaded: progress.loaded,
          total: progress.total
        });
      }.bind(this))

      xhr.addEventListener('error', function (error) {
        this._setErrored(true);
        this._updateStatus();
        this.rejectCompletes(error);
      }.bind(this));

      xhr.addEventListener('timeout', function (error) {
        this._setTimedOut(true);
        this._updateStatus();
        this.rejectCompletes(error);
      }.bind(this));

      xhr.addEventListener('abort', function () {
        this._updateStatus();
        this.rejectCompletes(new Error('Request aborted.'));
      }.bind(this));

      // Called after all of the above.
      xhr.addEventListener('loadend', function () {
        this._updateStatus();
        this._setResponse(this.parseResponse());

        if (!this.succeeded) {
          this.rejectCompletes(new Error('The request failed with status code: ' + this.xhr.status));
          return;
        }

        this.resolveCompletes(this);
      }.bind(this));

      this.url = options.url;
      xhr.open(
        options.method || 'GET',
        options.url,
        options.async !== false
      );

      var acceptType = {
        'json': 'application/json',
        'text': 'text/plain',
        'html': 'text/html',
        'xml': 'application/xml',
        'arraybuffer': 'application/octet-stream'
      }[options.handleAs];
      var headers = options.headers || Object.create(null);
      var newHeaders = Object.create(null);
      for (var key in headers) {
        newHeaders[key.toLowerCase()] = headers[key];
      }
      headers = newHeaders;

      if (acceptType && !headers['accept']) {
        headers['accept'] = acceptType;
      }
      Object.keys(headers).forEach(function (requestHeader) {
        if (/[A-Z]/.test(requestHeader)) {
          Polymer.Base._error('Headers must be lower case, got', requestHeader);
        }
        xhr.setRequestHeader(
          requestHeader,
          headers[requestHeader]
        );
      }, this);

      if (options.async !== false) {
        if (options.async) {
          xhr.timeout = options.timeout;
        }

        var handleAs = options.handleAs;

        // If a JSON prefix is present, the responseType must be 'text' or the
        // browser won’t be able to parse the response.
        if (!!options.jsonPrefix || !handleAs) {
          handleAs = 'text';
        }

        // In IE, `xhr.responseType` is an empty string when the response
        // returns. Hence, caching it as `xhr._responseType`.
        xhr.responseType = xhr._responseType = handleAs;

        // Cache the JSON prefix, if it exists.
        if (!!options.jsonPrefix) {
          xhr._jsonPrefix = options.jsonPrefix;
        }
      }

      xhr.withCredentials = !!options.withCredentials;


      var body = this._encodeBodyObject(options.body, headers['content-type']);

      xhr.send(
        /** @type {ArrayBuffer|ArrayBufferView|Blob|Document|FormData|
                   null|string|undefined} */
        (body));

      return this.completes;
    },

    /**
     * Attempts to parse the response body of the XHR. If parsing succeeds,
     * the value returned will be deserialized based on the `responseType`
     * set on the XHR.
     *
     * @return {*} The parsed response,
     * or undefined if there was an empty response or parsing failed.
     */
    parseResponse: function () {
      var xhr = this.xhr;
      var responseType = xhr.responseType || xhr._responseType;
      var preferResponseText = !this.xhr.responseType;
      var prefixLen = (xhr._jsonPrefix && xhr._jsonPrefix.length) || 0;

      try {
        switch (responseType) {
          case 'json':
            // If the xhr object doesn't have a natural `xhr.responseType`,
            // we can assume that the browser hasn't parsed the response for us,
            // and so parsing is our responsibility. Likewise if response is
            // undefined, as there's no way to encode undefined in JSON.
            if (preferResponseText || xhr.response === undefined) {
              // Try to emulate the JSON section of the response body section of
              // the spec: https://xhr.spec.whatwg.org/#response-body
              // That is to say, we try to parse as JSON, but if anything goes
              // wrong return null.
              try {
                return JSON.parse(xhr.responseText);
              } catch (_) {
                return null;
              }
            }

            return xhr.response;
          case 'xml':
            return xhr.responseXML;
          case 'blob':
          case 'document':
          case 'arraybuffer':
            return xhr.response;
          case 'text':
          default: {
            // If `prefixLen` is set, it implies the response should be parsed
            // as JSON once the prefix of length `prefixLen` is stripped from
            // it. Emulate the behavior above where null is returned on failure
            // to parse.
            if (prefixLen) {
              try {
                return JSON.parse(xhr.responseText.substring(prefixLen));
              } catch (_) {
                return null;
              }
            }
            return xhr.responseText;
          }
        }
      } catch (e) {
        this.rejectCompletes(new Error('Could not parse response. ' + e.message));
      }
    },

    /**
     * Aborts the request.
     */
    abort: function () {
      this._setAborted(true);
      this.xhr.abort();
    },

    /**
     * @param {*} body The given body of the request to try and encode.
     * @param {?string} contentType The given content type, to infer an encoding
     *     from.
     * @return {*} Either the encoded body as a string, if successful,
     *     or the unaltered body object if no encoding could be inferred.
     */
    _encodeBodyObject: function(body, contentType) {
      if (typeof body == 'string') {
        return body;  // Already encoded.
      }
      var bodyObj = /** @type {Object} */ (body);
      switch(contentType) {
        case('application/json'):
          return JSON.stringify(bodyObj);
        case('application/x-www-form-urlencoded'):
          return this._wwwFormUrlEncode(bodyObj);
      }
      return body;
    },

    /**
     * @param {Object} object The object to encode as x-www-form-urlencoded.
     * @return {string} .
     */
    _wwwFormUrlEncode: function(object) {
      if (!object) {
        return '';
      }
      var pieces = [];
      Object.keys(object).forEach(function(key) {
        // TODO(rictic): handle array values here, in a consistent way with
        //   iron-ajax params.
        pieces.push(
            this._wwwFormUrlEncodePiece(key) + '=' +
            this._wwwFormUrlEncodePiece(object[key]));
      }, this);
      return pieces.join('&');
    },

    /**
     * @param {*} str A key or value to encode as x-www-form-urlencoded.
     * @return {string} .
     */
    _wwwFormUrlEncodePiece: function(str) {
      // Spec says to normalize newlines to \r\n and replace %20 spaces with +.
      // jQuery does this as well, so this is likely to be widely compatible.
      if (str === null) {
        return '';
      }
      return encodeURIComponent(str.toString().replace(/\r?\n/g, '\r\n'))
          .replace(/%20/g, '+');
    },

    /**
     * Updates the status code and status text.
     */
    _updateStatus: function() {
      this._setStatus(this.xhr.status);
      this._setStatusText((this.xhr.statusText === undefined) ? '' : this.xhr.statusText);
    }
  });
'use strict';

  Polymer({

    is: 'iron-ajax',

    /**
     * Fired when a request is sent.
     *
     * @event request
     * @event iron-ajax-request
     */

    /**
     * Fired when a response is received.
     *
     * @event response
     * @event iron-ajax-response
     */

    /**
     * Fired when an error is received.
     *
     * @event error
     * @event iron-ajax-error
     */

    hostAttributes: {
      hidden: true
    },

    properties: {
      /**
       * The URL target of the request.
       */
      url: {
        type: String
      },

      /**
       * An object that contains query parameters to be appended to the
       * specified `url` when generating a request. If you wish to set the body
       * content when making a POST request, you should use the `body` property
       * instead.
       */
      params: {
        type: Object,
        value: function() {
          return {};
        }
      },

      /**
       * The HTTP method to use such as 'GET', 'POST', 'PUT', or 'DELETE'.
       * Default is 'GET'.
       */
      method: {
        type: String,
        value: 'GET'
      },

      /**
       * HTTP request headers to send.
       *
       * Example:
       *
       *     <iron-ajax
       *         auto
       *         url="http://somesite.com"
       *         headers='{"X-Requested-With": "XMLHttpRequest"}'
       *         handle-as="json"></iron-ajax>
       *
       * Note: setting a `Content-Type` header here will override the value
       * specified by the `contentType` property of this element.
       */
      headers: {
        type: Object,
        value: function() {
          return {};
        }
      },

      /**
       * Content type to use when sending data. If the `contentType` property
       * is set and a `Content-Type` header is specified in the `headers`
       * property, the `headers` property value will take precedence.
       *
       * Varies the handling of the `body` param.
       */
      contentType: {
        type: String,
        value: null
      },

      /**
       * Body content to send with the request, typically used with "POST"
       * requests.
       *
       * If body is a string it will be sent unmodified.
       *
       * If Content-Type is set to a value listed below, then
       * the body will be encoded accordingly.
       *
       *    * `content-type="application/json"`
       *      * body is encoded like `{"foo":"bar baz","x":1}`
       *    * `content-type="application/x-www-form-urlencoded"`
       *      * body is encoded like `foo=bar+baz&x=1`
       *
       * Otherwise the body will be passed to the browser unmodified, and it
       * will handle any encoding (e.g. for FormData, Blob, ArrayBuffer).
       *
       * @type (ArrayBuffer|ArrayBufferView|Blob|Document|FormData|null|string|undefined|Object)
       */
      body: {
        type: Object,
        value: null
      },

      /**
       * Toggle whether XHR is synchronous or asynchronous. Don't change this
       * to true unless You Know What You Are Doing™.
       */
      sync: {
        type: Boolean,
        value: false
      },

      /**
       * Specifies what data to store in the `response` property, and
       * to deliver as `event.detail.response` in `response` events.
       *
       * One of:
       *
       *    `text`: uses `XHR.responseText`.
       *
       *    `xml`: uses `XHR.responseXML`.
       *
       *    `json`: uses `XHR.responseText` parsed as JSON.
       *
       *    `arraybuffer`: uses `XHR.response`.
       *
       *    `blob`: uses `XHR.response`.
       *
       *    `document`: uses `XHR.response`.
       */
      handleAs: {
        type: String,
        value: 'json'
      },

      /**
       * Set the withCredentials flag on the request.
       */
      withCredentials: {
        type: Boolean,
        value: false
      },

      /**
       * Set the timeout flag on the request.
       */
      timeout: {
        type: Number,
        value: 0
      },

      /**
       * If true, automatically performs an Ajax request when either `url` or
       * `params` changes.
       */
      auto: {
        type: Boolean,
        value: false
      },

      /**
       * If true, error messages will automatically be logged to the console.
       */
      verbose: {
        type: Boolean,
        value: false
      },

      /**
       * The most recent request made by this iron-ajax element.
       */
      lastRequest: {
        type: Object,
        notify: true,
        readOnly: true
      },

      /**
       * True while lastRequest is in flight.
       */
      loading: {
        type: Boolean,
        notify: true,
        readOnly: true
      },

      /**
       * lastRequest's response.
       *
       * Note that lastResponse and lastError are set when lastRequest finishes,
       * so if loading is true, then lastResponse and lastError will correspond
       * to the result of the previous request.
       *
       * The type of the response is determined by the value of `handleAs` at
       * the time that the request was generated.
       *
       * @type {Object}
       */
      lastResponse: {
        type: Object,
        notify: true,
        readOnly: true
      },

      /**
       * lastRequest's error, if any.
       *
       * @type {Object}
       */
      lastError: {
        type: Object,
        notify: true,
        readOnly: true
      },

      /**
       * An Array of all in-flight requests originating from this iron-ajax
       * element.
       */
      activeRequests: {
        type: Array,
        notify: true,
        readOnly: true,
        value: function() {
          return [];
        }
      },

      /**
       * Length of time in milliseconds to debounce multiple automatically generated requests.
       */
      debounceDuration: {
        type: Number,
        value: 0,
        notify: true
      },

      /**
       * Prefix to be stripped from a JSON response before parsing it.
       *
       * In order to prevent an attack using CSRF with Array responses
       * (http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx/)
       * many backends will mitigate this by prefixing all JSON response bodies
       * with a string that would be nonsensical to a JavaScript parser.
       *
       */
      jsonPrefix: {
        type: String,
        value: ''
      },

      /**
       * By default, iron-ajax's events do not bubble. Setting this attribute will cause its
       * request and response events as well as its iron-ajax-request, -response,  and -error
       * events to bubble to the window object. The vanilla error event never bubbles when
       * using shadow dom even if this.bubbles is true because a scoped flag is not passed with
       * it (first link) and because the shadow dom spec did not used to allow certain events,
       * including events named error, to leak outside of shadow trees (second link).
       * https://www.w3.org/TR/shadow-dom/#scoped-flag
       * https://www.w3.org/TR/2015/WD-shadow-dom-20151215/#events-that-are-not-leaked-into-ancestor-trees
       */
      bubbles: {
        type: Boolean,
        value: false
      },

      _boundHandleResponse: {
        type: Function,
        value: function() {
          return this._handleResponse.bind(this);
        }
      }
    },

    observers: [
      '_requestOptionsChanged(url, method, params.*, headers, contentType, ' +
          'body, sync, handleAs, jsonPrefix, withCredentials, timeout, auto)'
    ],

    /**
     * The query string that should be appended to the `url`, serialized from
     * the current value of `params`.
     *
     * @return {string}
     */
    get queryString () {
      var queryParts = [];
      var param;
      var value;

      for (param in this.params) {
        value = this.params[param];
        param = window.encodeURIComponent(param);

        if (Array.isArray(value)) {
          for (var i = 0; i < value.length; i++) {
            queryParts.push(param + '=' + window.encodeURIComponent(value[i]));
          }
        } else if (value !== null) {
          queryParts.push(param + '=' + window.encodeURIComponent(value));
        } else {
          queryParts.push(param);
        }
      }

      return queryParts.join('&');
    },

    /**
     * The `url` with query string (if `params` are specified), suitable for
     * providing to an `iron-request` instance.
     *
     * @return {string}
     */
    get requestUrl() {
      var queryString = this.queryString;
      var url = this.url || '';

      if (queryString) {
        var bindingChar = url.indexOf('?') >= 0 ? '&' : '?';
        return url + bindingChar + queryString;
      }

      return url;
    },

    /**
     * An object that maps header names to header values, first applying the
     * the value of `Content-Type` and then overlaying the headers specified
     * in the `headers` property.
     *
     * @return {Object}
     */
    get requestHeaders() {
      var headers = {};
      var contentType = this.contentType;
      if (contentType == null && (typeof this.body === 'string')) {
        contentType = 'application/x-www-form-urlencoded';
      }
      if (contentType) {
        headers['content-type'] = contentType;
      }
      var header;

      if (this.headers instanceof Object) {
        for (header in this.headers) {
          headers[header] = this.headers[header].toString();
        }
      }

      return headers;
    },

    /**
     * Request options suitable for generating an `iron-request` instance based
     * on the current state of the `iron-ajax` instance's properties.
     *
     * @return {{
     *   url: string,
     *   method: (string|undefined),
     *   async: (boolean|undefined),
     *   body: (ArrayBuffer|ArrayBufferView|Blob|Document|FormData|null|string|undefined|Object),
     *   headers: (Object|undefined),
     *   handleAs: (string|undefined),
     *   jsonPrefix: (string|undefined),
     *   withCredentials: (boolean|undefined)}}
     */
    toRequestOptions: function() {
      return {
        url: this.requestUrl || '',
        method: this.method,
        headers: this.requestHeaders,
        body: this.body,
        async: !this.sync,
        handleAs: this.handleAs,
        jsonPrefix: this.jsonPrefix,
        withCredentials: this.withCredentials,
        timeout: this.timeout
      };
    },

    /**
     * Performs an AJAX request to the specified URL.
     *
     * @return {!IronRequestElement}
     */
    generateRequest: function() {
      var request = /** @type {!IronRequestElement} */ (document.createElement('iron-request'));
      var requestOptions = this.toRequestOptions();

      this.push('activeRequests', request);

      request.completes.then(
        this._boundHandleResponse
      ).catch(
        this._handleError.bind(this, request)
      ).then(
        this._discardRequest.bind(this, request)
      );

      request.send(requestOptions);

      this._setLastRequest(request);
      this._setLoading(true);

      this.fire('request', {
        request: request,
        options: requestOptions
      }, {bubbles: this.bubbles});

      this.fire('iron-ajax-request', {
        request: request,
        options: requestOptions
      }, {bubbles: this.bubbles});

      return request;
    },

    _handleResponse: function(request) {
      if (request === this.lastRequest) {
        this._setLastResponse(request.response);
        this._setLastError(null);
        this._setLoading(false);
      }
      this.fire('response', request, {bubbles: this.bubbles});
      this.fire('iron-ajax-response', request, {bubbles: this.bubbles});
    },

    _handleError: function(request, error) {
      if (this.verbose) {
        Polymer.Base._error(error);
      }

      if (request === this.lastRequest) {
        this._setLastError({
          request: request,
          error: error,
          status: request.xhr.status,
          statusText: request.xhr.statusText,
          response: request.xhr.response
        });
        this._setLastResponse(null);
        this._setLoading(false);
      }

      // Tests fail if this goes after the normal this.fire('error', ...)
      this.fire('iron-ajax-error', {
        request: request,
        error: error
      }, {bubbles: this.bubbles});

      this.fire('error', {
        request: request,
        error: error
      }, {bubbles: this.bubbles});
    },

    _discardRequest: function(request) {
      var requestIndex = this.activeRequests.indexOf(request);

      if (requestIndex > -1) {
        this.splice('activeRequests', requestIndex, 1);
      }
    },

    _requestOptionsChanged: function() {
      this.debounce('generate-request', function() {
        if (this.url == null) {
          return;
        }

        if (this.auto) {
          this.generateRequest();
        }
      }, this.debounceDuration);
    },

  });
/*!
 * json-schema-faker library v0.3.6
 * http://json-schema-faker.js.org
 * @preserve
 *
 * Copyright (c) 2014-2016 Alvaro Cabrera & Tomasz Ducin
 * Released under the MIT license
 *
 * Date: 2016-08-01 21:57:24.752Z
 */
(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.jsf = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";
var Registry = require('../class/Registry');
// instantiate
var registry = new Registry();
/**
 * Custom format API
 *
 * @see https://github.com/json-schema-faker/json-schema-faker#custom-formats
 * @param nameOrFormatMap
 * @param callback
 * @returns {any}
 */
function formatAPI(nameOrFormatMap, callback) {
    if (typeof nameOrFormatMap === 'undefined') {
        return registry.list();
    }
    else if (typeof nameOrFormatMap === 'string') {
        if (typeof callback === 'function') {
            registry.register(nameOrFormatMap, callback);
        }
        else {
            return registry.get(nameOrFormatMap);
        }
    }
    else {
        registry.registerMany(nameOrFormatMap);
    }
}
module.exports = formatAPI;

},{"../class/Registry":5}],2:[function(require,module,exports){
"use strict";
var OptionRegistry = require('../class/OptionRegistry');
// instantiate
var registry = new OptionRegistry();
/**
 * Custom option API
 *
 * @param nameOrOptionMap
 * @returns {any}
 */
function optionAPI(nameOrOptionMap) {
    if (typeof nameOrOptionMap === 'string') {
        return registry.get(nameOrOptionMap);
    }
    else {
        return registry.registerMany(nameOrOptionMap);
    }
}
module.exports = optionAPI;

},{"../class/OptionRegistry":4}],3:[function(require,module,exports){
"use strict";
var randexp = require('randexp');
/**
 * Container is used to wrap external libraries (faker, chance, randexp) that are used among the whole codebase. These
 * libraries might be configured, customized, etc. and each internal JSF module needs to access those instances instead
 * of pure npm module instances. This class supports consistent access to these instances.
 */
var Container = (function () {
    function Container() {
        // static requires - handle both initial dependency load (deps will be available
        // among other modules) as well as they will be included by browserify AST
        this.registry = {
            faker: null,
            chance: null,
            // randexp is required for "pattern" values
            randexp: randexp
        };
    }
    /**
     * Override dependency given by name
     * @param name
     * @param callback
     */
    Container.prototype.extend = function (name, callback) {
        if (typeof this.registry[name] === 'undefined') {
            throw new ReferenceError('"' + name + '" dependency is not allowed.');
        }
        this.registry[name] = callback(this.registry[name]);
    };
    /**
     * Returns dependency given by name
     * @param name
     * @returns {Dependency}
     */
    Container.prototype.get = function (name) {
        if (typeof this.registry[name] === 'undefined') {
            throw new ReferenceError('"' + name + '" dependency doesn\'t exist.');
        }
        else if (name === 'randexp') {
            return this.registry['randexp'].randexp;
        }
        return this.registry[name];
    };
    /**
     * Returns all dependencies
     *
     * @returns {Registry}
     */
    Container.prototype.getAll = function () {
        return {
            faker: this.get('faker'),
            chance: this.get('chance'),
            randexp: this.get('randexp')
        };
    };
    return Container;
}());
// TODO move instantiation somewhere else (out from class file)
// instantiate
var container = new Container();
module.exports = container;

},{"randexp":998}],4:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Registry = require('./Registry');
/**
 * This class defines a registry for custom formats used within JSF.
 */
var OptionRegistry = (function (_super) {
    __extends(OptionRegistry, _super);
    function OptionRegistry() {
        _super.call(this);
        this.data['failOnInvalidTypes'] = true;
        this.data['defaultInvalidTypeProduct'] = null;
        this.data['useDefaultValue'] = false;
    }
    return OptionRegistry;
}(Registry));
module.exports = OptionRegistry;

},{"./Registry":5}],5:[function(require,module,exports){
"use strict";
/**
 * This class defines a registry for custom formats used within JSF.
 */
var Registry = (function () {
    function Registry() {
        // empty by default
        this.data = {};
    }
    /**
     * Registers custom format
     */
    Registry.prototype.register = function (name, callback) {
        this.data[name] = callback;
    };
    /**
     * Register many formats at one shot
     */
    Registry.prototype.registerMany = function (formats) {
        for (var name in formats) {
            this.data[name] = formats[name];
        }
    };
    /**
     * Returns element by registry key
     */
    Registry.prototype.get = function (name) {
        var format = this.data[name];
        if (typeof format === 'undefined') {
            throw new Error('unknown registry key ' + JSON.stringify(name));
        }
        return format;
    };
    /**
     * Returns the whole registry content
     */
    Registry.prototype.list = function () {
        return this.data;
    };
    return Registry;
}());
module.exports = Registry;

},{}],6:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ParseError = (function (_super) {
    __extends(ParseError, _super);
    function ParseError(message, path) {
        _super.call(this);
        this.path = path;
        Error.captureStackTrace(this, this.constructor);
        this.name = 'ParseError';
        this.message = message;
        this.path = path;
    }
    return ParseError;
}(Error));
module.exports = ParseError;

},{}],7:[function(require,module,exports){
"use strict";
var inferredProperties = {
    array: [
        'additionalItems',
        'items',
        'maxItems',
        'minItems',
        'uniqueItems'
    ],
    integer: [
        'exclusiveMaximum',
        'exclusiveMinimum',
        'maximum',
        'minimum',
        'multipleOf'
    ],
    object: [
        'additionalProperties',
        'dependencies',
        'maxProperties',
        'minProperties',
        'patternProperties',
        'properties',
        'required'
    ],
    string: [
        'maxLength',
        'minLength',
        'pattern'
    ]
};
inferredProperties.number = inferredProperties.integer;
var subschemaProperties = [
    'additionalItems',
    'items',
    'additionalProperties',
    'dependencies',
    'patternProperties',
    'properties'
];
/**
 * Iterates through all keys of `obj` and:
 * - checks whether those keys match properties of a given inferred type
 * - makes sure that `obj` is not a subschema; _Do not attempt to infer properties named as subschema containers. The
 * reason for this is that any property name within those containers that matches one of the properties used for
 * inferring missing type values causes the container itself to get processed which leads to invalid output. (Issue 62)_
 *
 * @returns {boolean}
 */
function matchesType(obj, lastElementInPath, inferredTypeProperties) {
    return Object.keys(obj).filter(function (prop) {
        var isSubschema = subschemaProperties.indexOf(lastElementInPath) > -1, inferredPropertyFound = inferredTypeProperties.indexOf(prop) > -1;
        if (inferredPropertyFound && !isSubschema) {
            return true;
        }
    }).length > 0;
}
/**
 * Checks whether given `obj` type might be inferred. The mechanism iterates through all inferred types definitions,
 * tries to match allowed properties with properties of given `obj`. Returns type name, if inferred, or null.
 *
 * @returns {string|null}
 */
function inferType(obj, schemaPath) {
    for (var typeName in inferredProperties) {
        var lastElementInPath = schemaPath[schemaPath.length - 1];
        if (matchesType(obj, lastElementInPath, inferredProperties[typeName])) {
            return typeName;
        }
    }
}
module.exports = inferType;

},{}],8:[function(require,module,exports){
/// <reference path="../index.d.ts" />
"use strict";
/**
 * Returns random element of a collection
 *
 * @param collection
 * @returns {T}
 */
function pick(collection) {
    return collection[Math.floor(Math.random() * collection.length)];
}
/**
 * Returns shuffled collection of elements
 *
 * @param collection
 * @returns {T[]}
 */
function shuffle(collection) {
    var tmp, key, copy = collection.slice(), length = collection.length;
    for (; length > 0;) {
        key = Math.floor(Math.random() * length);
        // swap
        tmp = copy[--length];
        copy[length] = copy[key];
        copy[key] = tmp;
    }
    return copy;
}
/**
 * These values determine default range for random.number function
 *
 * @type {number}
 */
var MIN_NUMBER = -100, MAX_NUMBER = 100;
/**
 * Returns a random integer between min (inclusive) and max (inclusive)
 * Using Math.round() will give you a non-uniform distribution!
 * @see http://stackoverflow.com/a/1527820/769384
 */
function getRandomInt(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}
/**
 * Generates random number according to parameters passed
 *
 * @param min
 * @param max
 * @param defMin
 * @param defMax
 * @param hasPrecision
 * @returns {number}
 */
function number(min, max, defMin, defMax, hasPrecision) {
    if (hasPrecision === void 0) { hasPrecision = false; }
    defMin = typeof defMin === 'undefined' ? MIN_NUMBER : defMin;
    defMax = typeof defMax === 'undefined' ? MAX_NUMBER : defMax;
    min = typeof min === 'undefined' ? defMin : min;
    max = typeof max === 'undefined' ? defMax : max;
    if (max < min) {
        max += min;
    }
    var result = getRandomInt(min, max);
    if (!hasPrecision) {
        return parseInt(result + '', 10);
    }
    return result;
}
module.exports = {
    pick: pick,
    shuffle: shuffle,
    number: number
};

},{}],9:[function(require,module,exports){
"use strict";
var deref = require('deref');
var traverse = require('./traverse');
var random = require('./random');
var utils = require('./utils');
function isKey(prop) {
    return prop === 'enum' || prop === 'default' || prop === 'required' || prop === 'definitions';
}
// TODO provide types
function run(schema, refs, ex) {
    var $ = deref();
    try {
        var seen = {};
        return traverse($(schema, refs, ex), [], function reduce(sub) {
            if (seen[sub.$ref] <= 0) {
                delete sub.$ref;
                delete sub.oneOf;
                delete sub.anyOf;
                delete sub.allOf;
                return sub;
            }
            if (typeof sub.$ref === 'string') {
                var id = sub.$ref;
                delete sub.$ref;
                if (!seen[id]) {
                    // TODO: this should be configurable
                    seen[id] = random.number(1, 5);
                }
                seen[id] -= 1;
                utils.merge(sub, $.util.findByRef(id, $.refs));
            }
            if (Array.isArray(sub.allOf)) {
                var schemas = sub.allOf;
                delete sub.allOf;
                // this is the only case where all sub-schemas
                // must be resolved before any merge
                schemas.forEach(function (schema) {
                    utils.merge(sub, reduce(schema));
                });
            }
            if (Array.isArray(sub.oneOf || sub.anyOf)) {
                var mix = sub.oneOf || sub.anyOf;
                delete sub.anyOf;
                delete sub.oneOf;
                utils.merge(sub, random.pick(mix));
            }
            for (var prop in sub) {
                if ((Array.isArray(sub[prop]) || typeof sub[prop] === 'object') && sub[prop] !== null && !isKey(prop)) {
                    sub[prop] = reduce(sub[prop]);
                }
            }
            return sub;
        });
    }
    catch (e) {
        if (e.path) {
            throw new Error(e.message + ' in ' + '/' + e.path.join('/'));
        }
        else {
            throw e;
        }
    }
}
module.exports = run;

},{"./random":8,"./traverse":10,"./utils":11,"deref":30}],10:[function(require,module,exports){
"use strict";
var random = require('./random');
var ParseError = require('./error');
var inferType = require('./infer');
var types = require('../types/index');
var option = require('../api/option');
function isExternal(schema) {
    return schema.faker || schema.chance;
}
function reduceExternal(schema, path) {
    if (schema['x-faker']) {
        schema.faker = schema['x-faker'];
    }
    if (schema['x-chance']) {
        schema.chance = schema['x-chance'];
    }
    var fakerUsed = schema.faker !== undefined, chanceUsed = schema.chance !== undefined;
    if (fakerUsed && chanceUsed) {
        throw new ParseError('ambiguous generator when using both faker and chance: ' + JSON.stringify(schema), path);
    }
    return schema;
}
// TODO provide types
function traverse(schema, path, resolve) {
    resolve(schema);
    if (Array.isArray(schema.enum)) {
        return random.pick(schema.enum);
    }
    if (option('useDefaultValue') && schema.default) {
        return schema.default;
    }
    // TODO remove the ugly overcome
    var type = schema.type;
    if (Array.isArray(type)) {
        type = random.pick(type);
    }
    else if (typeof type === 'undefined') {
        // Attempt to infer the type
        type = inferType(schema, path) || type;
    }
    schema = reduceExternal(schema, path);
    if (isExternal(schema)) {
        type = 'external';
    }
    if (typeof type === 'string') {
        if (!types[type]) {
            if (option('failOnInvalidTypes')) {
                throw new ParseError('unknown primitive ' + JSON.stringify(type), path.concat(['type']));
            }
            else {
                return option('defaultInvalidTypeProduct');
            }
        }
        else {
            try {
                return types[type](schema, path, resolve, traverse);
            }
            catch (e) {
                if (typeof e.path === 'undefined') {
                    throw new ParseError(e.message, path);
                }
                throw e;
            }
        }
    }
    var copy = {};
    if (Array.isArray(schema)) {
        copy = [];
    }
    for (var prop in schema) {
        if (typeof schema[prop] === 'object' && prop !== 'definitions') {
            copy[prop] = traverse(schema[prop], path.concat([prop]), resolve);
        }
        else {
            copy[prop] = schema[prop];
        }
    }
    return copy;
}
module.exports = traverse;

},{"../api/option":2,"../types/index":23,"./error":6,"./infer":7,"./random":8}],11:[function(require,module,exports){
"use strict";
function getSubAttribute(obj, dotSeparatedKey) {
    var keyElements = dotSeparatedKey.split('.');
    while (keyElements.length) {
        var prop = keyElements.shift();
        if (!obj[prop]) {
            break;
        }
        obj = obj[prop];
    }
    return obj;
}
/**
 * Returns true/false whether the object parameter has its own properties defined
 *
 * @param obj
 * @param properties
 * @returns {boolean}
 */
function hasProperties(obj) {
    var properties = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        properties[_i - 1] = arguments[_i];
    }
    return properties.filter(function (key) {
        return typeof obj[key] !== 'undefined';
    }).length > 0;
}
/**
 * Returns typecasted value.
 * External generators (faker, chance) may return data in non-expected formats, such as string, when you might expect an
 * integer. This function is used to force the typecast.
 *
 * @param value
 * @param targetType
 * @returns {any}
 */
function typecast(value, targetType) {
    switch (targetType) {
        case 'integer':
            return parseInt(value, 10);
        case 'number':
            return parseFloat(value);
        case 'string':
            return '' + value;
        case 'boolean':
            return !!value;
        default:
            return value;
    }
}
function clone(arr) {
    var out = [];
    arr.forEach(function (item, index) {
        if (typeof item === 'object' && item !== null) {
            out[index] = Array.isArray(item) ? clone(item) : merge({}, item);
        }
        else {
            out[index] = item;
        }
    });
    return out;
}
// TODO refactor merge function
function merge(a, b) {
    for (var key in b) {
        if (typeof b[key] !== 'object' || b[key] === null) {
            a[key] = b[key];
        }
        else if (Array.isArray(b[key])) {
            a[key] = (a[key] || []).concat(clone(b[key]));
        }
        else if (typeof a[key] !== 'object' || a[key] === null || Array.isArray(a[key])) {
            a[key] = merge({}, b[key]);
        }
        else {
            a[key] = merge(a[key], b[key]);
        }
    }
    return a;
}
module.exports = {
    getSubAttribute: getSubAttribute,
    hasProperties: hasProperties,
    typecast: typecast,
    clone: clone,
    merge: merge
};

},{}],12:[function(require,module,exports){
"use strict";
/**
 * Generates randomized boolean value.
 *
 * @returns {boolean}
 */
function booleanGenerator() {
    return Math.random() > 0.5;
}
module.exports = booleanGenerator;

},{}],13:[function(require,module,exports){
"use strict";
var container = require('../class/Container');
var randexp = container.get('randexp');
/**
 * Predefined core formats
 * @type {[key: string]: string}
 */
var regexps = {
    email: '[a-zA-Z\\d][a-zA-Z\\d-]{1,13}[a-zA-Z\\d]@{hostname}',
    hostname: '[a-zA-Z]{1,33}\\.[a-z]{2,4}',
    ipv6: '[a-f\\d]{4}(:[a-f\\d]{4}){7}',
    uri: '[a-zA-Z][a-zA-Z0-9+-.]*'
};
/**
 * Generates randomized string basing on a built-in regex format
 *
 * @param coreFormat
 * @returns {string}
 */
function coreFormatGenerator(coreFormat) {
    return randexp(regexps[coreFormat]).replace(/\{(\w+)\}/, function (match, key) {
        return randexp(regexps[key]);
    });
}
module.exports = coreFormatGenerator;

},{"../class/Container":3}],14:[function(require,module,exports){
"use strict";
var random = require('../core/random');
/**
 * Generates randomized date time ISO format string.
 *
 * @returns {string}
 */
function dateTimeGenerator() {
    return new Date(random.number(0, 100000000000000)).toISOString();
}
module.exports = dateTimeGenerator;

},{"../core/random":8}],15:[function(require,module,exports){
"use strict";
var random = require('../core/random');
/**
 * Generates randomized ipv4 address.
 *
 * @returns {string}
 */
function ipv4Generator() {
    return [0, 0, 0, 0].map(function () {
        return random.number(0, 255);
    }).join('.');
}
module.exports = ipv4Generator;

},{"../core/random":8}],16:[function(require,module,exports){
"use strict";
/**
 * Generates null value.
 *
 * @returns {null}
 */
function nullGenerator() {
    return null;
}
module.exports = nullGenerator;

},{}],17:[function(require,module,exports){
"use strict";
var words = require('../generators/words');
var random = require('../core/random');
/**
 * Helper function used by thunkGenerator to produce some words for the final result.
 *
 * @returns {string}
 */
function produce() {
    var length = random.number(1, 5);
    return words(length).join(' ');
}
/**
 * Generates randomized concatenated string based on words generator.
 *
 * @returns {string}
 */
function thunkGenerator(min, max) {
    if (min === void 0) { min = 0; }
    if (max === void 0) { max = 140; }
    var min = Math.max(0, min), max = random.number(min, max), result = produce();
    // append until length is reached
    while (result.length < min) {
        result += produce();
    }
    // cut if needed
    if (result.length > max) {
        result = result.substr(0, max);
    }
    return result;
}
module.exports = thunkGenerator;

},{"../core/random":8,"../generators/words":18}],18:[function(require,module,exports){
"use strict";
var random = require('../core/random');
var LIPSUM_WORDS = ('Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore'
    + ' et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea'
    + ' commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla'
    + ' pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est'
    + ' laborum').split(' ');
/**
 * Generates randomized array of single lorem ipsum words.
 *
 * @param length
 * @returns {Array.<string>}
 */
function wordsGenerator(length) {
    var words = random.shuffle(LIPSUM_WORDS);
    return words.slice(0, length);
}
module.exports = wordsGenerator;

},{"../core/random":8}],19:[function(require,module,exports){
"use strict";
var container = require('./class/Container');
var format = require('./api/format');
var option = require('./api/option');
var run = require('./core/run');
var jsf = function (schema, refs) {
    return run(schema, refs);
};
jsf.format = format;
jsf.option = option;
// returns itself for chaining
jsf.extend = function (name, cb) {
    container.extend(name, cb);
    return jsf;
};
jsf.version = '0.3.6';
module.exports = jsf;

},{"./api/format":1,"./api/option":2,"./class/Container":3,"./core/run":9}],20:[function(require,module,exports){
"use strict";
var random = require('../core/random');
var utils = require('../core/utils');
var ParseError = require('../core/error');
// TODO provide types
function unique(path, items, value, sample, resolve, traverseCallback) {
    var tmp = [], seen = [];
    function walk(obj) {
        var json = JSON.stringify(obj);
        if (seen.indexOf(json) === -1) {
            seen.push(json);
            tmp.push(obj);
        }
    }
    items.forEach(walk);
    // TODO: find a better solution?
    var limit = 100;
    while (tmp.length !== items.length) {
        walk(traverseCallback(value.items || sample, path, resolve));
        if (!limit--) {
            break;
        }
    }
    return tmp;
}
// TODO provide types
var arrayType = function arrayType(value, path, resolve, traverseCallback) {
    var items = [];
    if (!(value.items || value.additionalItems)) {
        if (utils.hasProperties(value, 'minItems', 'maxItems', 'uniqueItems')) {
            throw new ParseError('missing items for ' + JSON.stringify(value), path);
        }
        return items;
    }
    // see http://stackoverflow.com/a/38355228/769384
    // after type guards support subproperties (in TS 2.0) we can simplify below to (value.items instanceof Array)
    // so that value.items.map becomes recognized for typescript compiler
    var tmpItems = value.items;
    if (tmpItems instanceof Array) {
        return Array.prototype.concat.apply(items, tmpItems.map(function (item, key) {
            var itemSubpath = path.concat(['items', key + '']);
            return traverseCallback(item, itemSubpath, resolve);
        }));
    }
    var length = random.number(value.minItems, value.maxItems, 1, 5), 
    // TODO below looks bad. Should additionalItems be copied as-is?
    sample = typeof value.additionalItems === 'object' ? value.additionalItems : {};
    for (var current = items.length; current < length; current++) {
        var itemSubpath = path.concat(['items', current + '']);
        var element = traverseCallback(value.items || sample, itemSubpath, resolve);
        items.push(element);
    }
    if (value.uniqueItems) {
        return unique(path.concat(['items']), items, value, sample, resolve, traverseCallback);
    }
    return items;
};
module.exports = arrayType;

},{"../core/error":6,"../core/random":8,"../core/utils":11}],21:[function(require,module,exports){
"use strict";
var booleanGenerator = require('../generators/boolean');
var booleanType = booleanGenerator;
module.exports = booleanType;

},{"../generators/boolean":12}],22:[function(require,module,exports){
"use strict";
var utils = require('../core/utils');
var container = require('../class/Container');
var externalType = function externalType(value, path) {
    var libraryName = value.faker ? 'faker' : 'chance', libraryModule = value.faker ? container.get('faker') : container.get('chance'), key = value.faker || value.chance, path = key, args = [];
    if (typeof path === 'object') {
        path = Object.keys(path)[0];
        if (Array.isArray(key[path])) {
            args = key[path];
        }
        else {
            args.push(key[path]);
        }
    }
    var genFunction = utils.getSubAttribute(libraryModule, path);
    if (typeof genFunction !== 'function') {
        throw new Error('unknown ' + libraryName + '-generator for ' + JSON.stringify(key));
    }
    // see #116, #117 - faker.js 3.1.0 introduced local dependencies between generators
    // making jsf break after upgrading from 3.0.1
    var contextObject = libraryModule;
    if (libraryName === 'faker') {
        var fakerModuleName = path.split('.')[0];
        contextObject = libraryModule[fakerModuleName];
    }
    var result = genFunction.apply(contextObject, args);
    return utils.typecast(result, value.type);
};
module.exports = externalType;

},{"../class/Container":3,"../core/utils":11}],23:[function(require,module,exports){
"use strict";
var _boolean = require('./boolean');
var _null = require('./null');
var _array = require('./array');
var _integer = require('./integer');
var _number = require('./number');
var _object = require('./object');
var _string = require('./string');
var _external = require('./external');
var typeMap = {
    boolean: _boolean,
    null: _null,
    array: _array,
    integer: _integer,
    number: _number,
    object: _object,
    string: _string,
    external: _external
};
module.exports = typeMap;

},{"./array":20,"./boolean":21,"./external":22,"./integer":24,"./null":25,"./number":26,"./object":27,"./string":28}],24:[function(require,module,exports){
"use strict";
var number = require('./number');
// The `integer` type is just a wrapper for the `number` type. The `number` type
// returns floating point numbers, and `integer` type truncates the fraction
// part, leaving the result as an integer.
var integerType = function integerType(value) {
    var generated = number(value);
    // whether the generated number is positive or negative, need to use either
    // floor (positive) or ceil (negative) function to get rid of the fraction
    return generated > 0 ? Math.floor(generated) : Math.ceil(generated);
};
module.exports = integerType;

},{"./number":26}],25:[function(require,module,exports){
"use strict";
var nullGenerator = require('../generators/null');
var nullType = nullGenerator;
module.exports = nullType;

},{"../generators/null":16}],26:[function(require,module,exports){
"use strict";
var random = require('../core/random');
var MIN_INTEGER = -100000000, MAX_INTEGER = 100000000;
var numberType = function numberType(value) {
    var min = typeof value.minimum === 'undefined' ? MIN_INTEGER : value.minimum, max = typeof value.maximum === 'undefined' ? MAX_INTEGER : value.maximum, multipleOf = value.multipleOf;
    if (multipleOf) {
        max = Math.floor(max / multipleOf) * multipleOf;
        min = Math.ceil(min / multipleOf) * multipleOf;
    }
    if (value.exclusiveMinimum && value.minimum && min === value.minimum) {
        min += multipleOf || 1;
    }
    if (value.exclusiveMaximum && value.maximum && max === value.maximum) {
        max -= multipleOf || 1;
    }
    if (min > max) {
        return NaN;
    }
    if (multipleOf) {
        return Math.floor(random.number(min, max) / multipleOf) * multipleOf;
    }
    return random.number(min, max, undefined, undefined, true);
};
module.exports = numberType;

},{"../core/random":8}],27:[function(require,module,exports){
"use strict";
var container = require('../class/Container');
var random = require('../core/random');
var words = require('../generators/words');
var utils = require('../core/utils');
var ParseError = require('../core/error');
var randexp = container.get('randexp');
// TODO provide types
var objectType = function objectType(value, path, resolve, traverseCallback) {
    var props = {};
    if (!(value.properties || value.patternProperties || value.additionalProperties)) {
        if (utils.hasProperties(value, 'minProperties', 'maxProperties', 'dependencies', 'required')) {
            throw new ParseError('missing properties for ' + JSON.stringify(value), path);
        }
        return props;
    }
    var reqProps = value.required || [], allProps = value.properties ? Object.keys(value.properties) : [];
    reqProps.forEach(function (key) {
        if (value.properties && value.properties[key]) {
            props[key] = value.properties[key];
        }
    });
    var optProps = allProps.filter(function (prop) {
        return reqProps.indexOf(prop) === -1;
    });
    if (value.patternProperties) {
        optProps = Array.prototype.concat.apply(optProps, Object.keys(value.patternProperties));
    }
    var length = random.number(value.minProperties, value.maxProperties, 0, optProps.length);
    random.shuffle(optProps).slice(0, length).forEach(function (key) {
        if (value.properties && value.properties[key]) {
            props[key] = value.properties[key];
        }
        else {
            props[randexp(key)] = value.patternProperties[key];
        }
    });
    var current = Object.keys(props).length, sample = typeof value.additionalProperties === 'object' ? value.additionalProperties : {};
    if (current < length) {
        words(length - current).forEach(function (key) {
            props[key + randexp('[a-f\\d]{4,7}')] = sample;
        });
    }
    return traverseCallback(props, path.concat(['properties']), resolve);
};
module.exports = objectType;

},{"../class/Container":3,"../core/error":6,"../core/random":8,"../core/utils":11,"../generators/words":18}],28:[function(require,module,exports){
"use strict";
var thunk = require('../generators/thunk');
var ipv4 = require('../generators/ipv4');
var dateTime = require('../generators/dateTime');
var coreFormat = require('../generators/coreFormat');
var format = require('../api/format');
var container = require('../class/Container');
var randexp = container.get('randexp');
function generateFormat(value) {
    switch (value.format) {
        case 'date-time':
            return dateTime();
        case 'ipv4':
            return ipv4();
        case 'regex':
            // TODO: discuss
            return '.+?';
        case 'email':
        case 'hostname':
        case 'ipv6':
        case 'uri':
            return coreFormat(value.format);
        default:
            var callback = format(value.format);
            return callback(container.getAll(), value);
    }
}
var stringType = function stringType(value) {
    if (value.format) {
        return generateFormat(value);
    }
    else if (value.pattern) {
        return randexp(value.pattern);
    }
    else {
        return thunk(value.minLength, value.maxLength);
    }
};
module.exports = stringType;

},{"../api/format":1,"../class/Container":3,"../generators/coreFormat":13,"../generators/dateTime":14,"../generators/ipv4":15,"../generators/thunk":17}],29:[function(require,module,exports){
//  Chance.js 1.0.4
//  http://chancejs.com
//  (c) 2013 Victor Quinn
//  Chance may be freely distributed or modified under the MIT license.

(function () {

    // Constants
    var MAX_INT = 9007199254740992;
    var MIN_INT = -MAX_INT;
    var NUMBERS = '0123456789';
    var CHARS_LOWER = 'abcdefghijklmnopqrstuvwxyz';
    var CHARS_UPPER = CHARS_LOWER.toUpperCase();
    var HEX_POOL  = NUMBERS + "abcdef";

    // Cached array helpers
    var slice = Array.prototype.slice;

    // Constructor
    function Chance (seed) {
        if (!(this instanceof Chance)) {
            return seed == null ? new Chance() : new Chance(seed);
        }

        // if user has provided a function, use that as the generator
        if (typeof seed === 'function') {
            this.random = seed;
            return this;
        }

        if (arguments.length) {
            // set a starting value of zero so we can add to it
            this.seed = 0;
        }

        // otherwise, leave this.seed blank so that MT will receive a blank

        for (var i = 0; i < arguments.length; i++) {
            var seedling = 0;
            if (Object.prototype.toString.call(arguments[i]) === '[object String]') {
                for (var j = 0; j < arguments[i].length; j++) {
                    // create a numeric hash for each argument, add to seedling
                    var hash = 0;
                    for (var k = 0; k < arguments[i].length; k++) {
                        hash = arguments[i].charCodeAt(k) + (hash << 6) + (hash << 16) - hash;
                    }
                    seedling += hash;
                }
            } else {
                seedling = arguments[i];
            }
            this.seed += (arguments.length - i) * seedling;
        }

        // If no generator function was provided, use our MT
        this.mt = this.mersenne_twister(this.seed);
        this.bimd5 = this.blueimp_md5();
        this.random = function () {
            return this.mt.random(this.seed);
        };

        return this;
    }

    Chance.prototype.VERSION = "1.0.4";

    // Random helper functions
    function initOptions(options, defaults) {
        options || (options = {});

        if (defaults) {
            for (var i in defaults) {
                if (typeof options[i] === 'undefined') {
                    options[i] = defaults[i];
                }
            }
        }

        return options;
    }

    function testRange(test, errorMessage) {
        if (test) {
            throw new RangeError(errorMessage);
        }
    }

    /**
     * Encode the input string with Base64.
     */
    var base64 = function() {
        throw new Error('No Base64 encoder available.');
    };

    // Select proper Base64 encoder.
    (function determineBase64Encoder() {
        if (typeof btoa === 'function') {
            base64 = btoa;
        } else if (typeof Buffer === 'function') {
            base64 = function(input) {
                return new Buffer(input).toString('base64');
            };
        }
    })();

    // -- Basics --

    /**
     *  Return a random bool, either true or false
     *
     *  @param {Object} [options={ likelihood: 50 }] alter the likelihood of
     *    receiving a true or false value back.
     *  @throws {RangeError} if the likelihood is out of bounds
     *  @returns {Bool} either true or false
     */
    Chance.prototype.bool = function (options) {
        // likelihood of success (true)
        options = initOptions(options, {likelihood : 50});

        // Note, we could get some minor perf optimizations by checking range
        // prior to initializing defaults, but that makes code a bit messier
        // and the check more complicated as we have to check existence of
        // the object then existence of the key before checking constraints.
        // Since the options initialization should be minor computationally,
        // decision made for code cleanliness intentionally. This is mentioned
        // here as it's the first occurrence, will not be mentioned again.
        testRange(
            options.likelihood < 0 || options.likelihood > 100,
            "Chance: Likelihood accepts values from 0 to 100."
        );

        return this.random() * 100 < options.likelihood;
    };

    /**
     *  Return a random character.
     *
     *  @param {Object} [options={}] can specify a character pool, only alpha,
     *    only symbols, and casing (lower or upper)
     *  @returns {String} a single random character
     *  @throws {RangeError} Can only specify alpha or symbols, not both
     */
    Chance.prototype.character = function (options) {
        options = initOptions(options);
        testRange(
            options.alpha && options.symbols,
            "Chance: Cannot specify both alpha and symbols."
        );

        var symbols = "!@#$%^&*()[]",
            letters, pool;

        if (options.casing === 'lower') {
            letters = CHARS_LOWER;
        } else if (options.casing === 'upper') {
            letters = CHARS_UPPER;
        } else {
            letters = CHARS_LOWER + CHARS_UPPER;
        }

        if (options.pool) {
            pool = options.pool;
        } else if (options.alpha) {
            pool = letters;
        } else if (options.symbols) {
            pool = symbols;
        } else {
            pool = letters + NUMBERS + symbols;
        }

        return pool.charAt(this.natural({max: (pool.length - 1)}));
    };

    // Note, wanted to use "float" or "double" but those are both JS reserved words.

    // Note, fixed means N OR LESS digits after the decimal. This because
    // It could be 14.9000 but in JavaScript, when this is cast as a number,
    // the trailing zeroes are dropped. Left to the consumer if trailing zeroes are
    // needed
    /**
     *  Return a random floating point number
     *
     *  @param {Object} [options={}] can specify a fixed precision, min, max
     *  @returns {Number} a single floating point number
     *  @throws {RangeError} Can only specify fixed or precision, not both. Also
     *    min cannot be greater than max
     */
    Chance.prototype.floating = function (options) {
        options = initOptions(options, {fixed : 4});
        testRange(
            options.fixed && options.precision,
            "Chance: Cannot specify both fixed and precision."
        );

        var num;
        var fixed = Math.pow(10, options.fixed);

        var max = MAX_INT / fixed;
        var min = -max;

        testRange(
            options.min && options.fixed && options.min < min,
            "Chance: Min specified is out of range with fixed. Min should be, at least, " + min
        );
        testRange(
            options.max && options.fixed && options.max > max,
            "Chance: Max specified is out of range with fixed. Max should be, at most, " + max
        );

        options = initOptions(options, { min : min, max : max });

        // Todo - Make this work!
        // options.precision = (typeof options.precision !== "undefined") ? options.precision : false;

        num = this.integer({min: options.min * fixed, max: options.max * fixed});
        var num_fixed = (num / fixed).toFixed(options.fixed);

        return parseFloat(num_fixed);
    };

    /**
     *  Return a random integer
     *
     *  NOTE the max and min are INCLUDED in the range. So:
     *  chance.integer({min: 1, max: 3});
     *  would return either 1, 2, or 3.
     *
     *  @param {Object} [options={}] can specify a min and/or max
     *  @returns {Number} a single random integer number
     *  @throws {RangeError} min cannot be greater than max
     */
    Chance.prototype.integer = function (options) {
        // 9007199254740992 (2^53) is the max integer number in JavaScript
        // See: http://vq.io/132sa2j
        options = initOptions(options, {min: MIN_INT, max: MAX_INT});
        testRange(options.min > options.max, "Chance: Min cannot be greater than Max.");

        return Math.floor(this.random() * (options.max - options.min + 1) + options.min);
    };

    /**
     *  Return a random natural
     *
     *  NOTE the max and min are INCLUDED in the range. So:
     *  chance.natural({min: 1, max: 3});
     *  would return either 1, 2, or 3.
     *
     *  @param {Object} [options={}] can specify a min and/or max
     *  @returns {Number} a single random integer number
     *  @throws {RangeError} min cannot be greater than max
     */
    Chance.prototype.natural = function (options) {
        options = initOptions(options, {min: 0, max: MAX_INT});
        testRange(options.min < 0, "Chance: Min cannot be less than zero.");
        return this.integer(options);
    };

    /**
     *  Return a random string
     *
     *  @param {Object} [options={}] can specify a length
     *  @returns {String} a string of random length
     *  @throws {RangeError} length cannot be less than zero
     */
    Chance.prototype.string = function (options) {
        options = initOptions(options, { length: this.natural({min: 5, max: 20}) });
        testRange(options.length < 0, "Chance: Length cannot be less than zero.");
        var length = options.length,
            text = this.n(this.character, length, options);

        return text.join("");
    };

    // -- End Basics --

    // -- Helpers --

    Chance.prototype.capitalize = function (word) {
        return word.charAt(0).toUpperCase() + word.substr(1);
    };

    Chance.prototype.mixin = function (obj) {
        for (var func_name in obj) {
            Chance.prototype[func_name] = obj[func_name];
        }
        return this;
    };

    /**
     *  Given a function that generates something random and a number of items to generate,
     *    return an array of items where none repeat.
     *
     *  @param {Function} fn the function that generates something random
     *  @param {Number} num number of terms to generate
     *  @param {Object} options any options to pass on to the generator function
     *  @returns {Array} an array of length `num` with every item generated by `fn` and unique
     *
     *  There can be more parameters after these. All additional parameters are provided to the given function
     */
    Chance.prototype.unique = function(fn, num, options) {
        testRange(
            typeof fn !== "function",
            "Chance: The first argument must be a function."
        );

        var comparator = function(arr, val) { return arr.indexOf(val) !== -1; };

        if (options) {
            comparator = options.comparator || comparator;
        }

        var arr = [], count = 0, result, MAX_DUPLICATES = num * 50, params = slice.call(arguments, 2);

        while (arr.length < num) {
            var clonedParams = JSON.parse(JSON.stringify(params));
            result = fn.apply(this, clonedParams);
            if (!comparator(arr, result)) {
                arr.push(result);
                // reset count when unique found
                count = 0;
            }

            if (++count > MAX_DUPLICATES) {
                throw new RangeError("Chance: num is likely too large for sample set");
            }
        }
        return arr;
    };

    /**
     *  Gives an array of n random terms
     *
     *  @param {Function} fn the function that generates something random
     *  @param {Number} n number of terms to generate
     *  @returns {Array} an array of length `n` with items generated by `fn`
     *
     *  There can be more parameters after these. All additional parameters are provided to the given function
     */
    Chance.prototype.n = function(fn, n) {
        testRange(
            typeof fn !== "function",
            "Chance: The first argument must be a function."
        );

        if (typeof n === 'undefined') {
            n = 1;
        }
        var i = n, arr = [], params = slice.call(arguments, 2);

        // Providing a negative count should result in a noop.
        i = Math.max( 0, i );

        for (null; i--; null) {
            arr.push(fn.apply(this, params));
        }

        return arr;
    };

    // H/T to SO for this one: http://vq.io/OtUrZ5
    Chance.prototype.pad = function (number, width, pad) {
        // Default pad to 0 if none provided
        pad = pad || '0';
        // Convert number to a string
        number = number + '';
        return number.length >= width ? number : new Array(width - number.length + 1).join(pad) + number;
    };

    // DEPRECATED on 2015-10-01
    Chance.prototype.pick = function (arr, count) {
        if (arr.length === 0) {
            throw new RangeError("Chance: Cannot pick() from an empty array");
        }
        if (!count || count === 1) {
            return arr[this.natural({max: arr.length - 1})];
        } else {
            return this.shuffle(arr).slice(0, count);
        }
    };

    // Given an array, returns a single random element
    Chance.prototype.pickone = function (arr) {
        if (arr.length === 0) {
          throw new RangeError("Chance: Cannot pickone() from an empty array");
        }
        return arr[this.natural({max: arr.length - 1})];
    };

    // Given an array, returns a random set with 'count' elements
    Chance.prototype.pickset = function (arr, count) {
        if (count === 0) {
            return [];
        }
        if (arr.length === 0) {
            throw new RangeError("Chance: Cannot pickset() from an empty array");
        }
        if (count < 0) {
            throw new RangeError("Chance: count must be positive number");
        }
        if (!count || count === 1) {
            return [ this.pickone(arr) ];
        } else {
            return this.shuffle(arr).slice(0, count);
        }
    };

    Chance.prototype.shuffle = function (arr) {
        var old_array = arr.slice(0),
            new_array = [],
            j = 0,
            length = Number(old_array.length);

        for (var i = 0; i < length; i++) {
            // Pick a random index from the array
            j = this.natural({max: old_array.length - 1});
            // Add it to the new array
            new_array[i] = old_array[j];
            // Remove that element from the original array
            old_array.splice(j, 1);
        }

        return new_array;
    };

    // Returns a single item from an array with relative weighting of odds
    Chance.prototype.weighted = function (arr, weights, trim) {
        if (arr.length !== weights.length) {
            throw new RangeError("Chance: length of array and weights must match");
        }

        // scan weights array and sum valid entries
        var sum = 0;
        var val;
        for (var weightIndex = 0; weightIndex < weights.length; ++weightIndex) {
            val = weights[weightIndex];
            if (val > 0) {
                sum += val;
            }
        }

        if (sum === 0) {
            throw new RangeError("Chance: no valid entries in array weights");
        }

        // select a value within range
        var selected = this.random() * sum;

        // find array entry corresponding to selected value
        var total = 0;
        var lastGoodIdx = -1;
        var chosenIdx;
        for (weightIndex = 0; weightIndex < weights.length; ++weightIndex) {
            val = weights[weightIndex];
            total += val;
            if (val > 0) {
                if (selected <= total) {
                    chosenIdx = weightIndex;
                    break;
                }
                lastGoodIdx = weightIndex;
            }

            // handle any possible rounding error comparison to ensure something is picked
            if (weightIndex === (weights.length - 1)) {
                chosenIdx = lastGoodIdx;
            }
        }

        var chosen = arr[chosenIdx];
        trim = (typeof trim === 'undefined') ? false : trim;
        if (trim) {
            arr.splice(chosenIdx, 1);
            weights.splice(chosenIdx, 1);
        }

        return chosen;
    };

    // -- End Helpers --

    // -- Text --

    Chance.prototype.paragraph = function (options) {
        options = initOptions(options);

        var sentences = options.sentences || this.natural({min: 3, max: 7}),
            sentence_array = this.n(this.sentence, sentences);

        return sentence_array.join(' ');
    };

    // Could get smarter about this than generating random words and
    // chaining them together. Such as: http://vq.io/1a5ceOh
    Chance.prototype.sentence = function (options) {
        options = initOptions(options);

        var words = options.words || this.natural({min: 12, max: 18}),
            punctuation = options.punctuation,
            text, word_array = this.n(this.word, words);

        text = word_array.join(' ');

        // Capitalize first letter of sentence
        text = this.capitalize(text);

        // Make sure punctuation has a usable value
        if (punctuation !== false && !/^[\.\?;!:]$/.test(punctuation)) {
            punctuation = '.';
        }

        // Add punctuation mark
        if (punctuation) {
            text += punctuation;
        }

        return text;
    };

    Chance.prototype.syllable = function (options) {
        options = initOptions(options);

        var length = options.length || this.natural({min: 2, max: 3}),
            consonants = 'bcdfghjklmnprstvwz', // consonants except hard to speak ones
            vowels = 'aeiou', // vowels
            all = consonants + vowels, // all
            text = '',
            chr;

        // I'm sure there's a more elegant way to do this, but this works
        // decently well.
        for (var i = 0; i < length; i++) {
            if (i === 0) {
                // First character can be anything
                chr = this.character({pool: all});
            } else if (consonants.indexOf(chr) === -1) {
                // Last character was a vowel, now we want a consonant
                chr = this.character({pool: consonants});
            } else {
                // Last character was a consonant, now we want a vowel
                chr = this.character({pool: vowels});
            }

            text += chr;
        }

        if (options.capitalize) {
            text = this.capitalize(text);
        }

        return text;
    };

    Chance.prototype.word = function (options) {
        options = initOptions(options);

        testRange(
            options.syllables && options.length,
            "Chance: Cannot specify both syllables AND length."
        );

        var syllables = options.syllables || this.natural({min: 1, max: 3}),
            text = '';

        if (options.length) {
            // Either bound word by length
            do {
                text += this.syllable();
            } while (text.length < options.length);
            text = text.substring(0, options.length);
        } else {
            // Or by number of syllables
            for (var i = 0; i < syllables; i++) {
                text += this.syllable();
            }
        }

        if (options.capitalize) {
            text = this.capitalize(text);
        }

        return text;
    };

    // -- End Text --

    // -- Person --

    Chance.prototype.age = function (options) {
        options = initOptions(options);
        var ageRange;

        switch (options.type) {
            case 'child':
                ageRange = {min: 0, max: 12};
                break;
            case 'teen':
                ageRange = {min: 13, max: 19};
                break;
            case 'adult':
                ageRange = {min: 18, max: 65};
                break;
            case 'senior':
                ageRange = {min: 65, max: 100};
                break;
            case 'all':
                ageRange = {min: 0, max: 100};
                break;
            default:
                ageRange = {min: 18, max: 65};
                break;
        }

        return this.natural(ageRange);
    };

    Chance.prototype.birthday = function (options) {
        var age = this.age(options);
        var currentYear = new Date().getFullYear();

        if (options && options.type) {
            var min = new Date();
            var max = new Date();
            min.setFullYear(currentYear - age - 1);
            max.setFullYear(currentYear - age);

            options = initOptions(options, {
                min: min,
                max: max
            });
        } else {
            options = initOptions(options, {
                year: currentYear - age
            });
        }

        return this.date(options);
    };

    // CPF; ID to identify taxpayers in Brazil
    Chance.prototype.cpf = function (options) {
        options = initOptions(options, {
            formatted: true
        });

        var n = this.n(this.natural, 9, { max: 9 });
        var d1 = n[8]*2+n[7]*3+n[6]*4+n[5]*5+n[4]*6+n[3]*7+n[2]*8+n[1]*9+n[0]*10;
        d1 = 11 - (d1 % 11);
        if (d1>=10) {
            d1 = 0;
        }
        var d2 = d1*2+n[8]*3+n[7]*4+n[6]*5+n[5]*6+n[4]*7+n[3]*8+n[2]*9+n[1]*10+n[0]*11;
        d2 = 11 - (d2 % 11);
        if (d2>=10) {
            d2 = 0;
        }
        var cpf = ''+n[0]+n[1]+n[2]+'.'+n[3]+n[4]+n[5]+'.'+n[6]+n[7]+n[8]+'-'+d1+d2;
        return options.formatted ? cpf : cpf.replace(/\D/g,'');
    };

    // CNPJ: ID to identify companies in Brazil
    Chance.prototype.cnpj = function (options) {
        options = initOptions(options, {
            formatted: true
        });

        var n = this.n(this.natural, 12, { max: 12 });
        var d1 = n[11]*2+n[10]*3+n[9]*4+n[8]*5+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;
        d1 = 11 - (d1 % 11);
        if (d1<2) {
            d1 = 0;
        }
        var d2 = d1*2+n[11]*3+n[10]*4+n[9]*5+n[8]*6+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;
        d2 = 11 - (d2 % 11);
        if (d2<2) {
            d2 = 0;
        }
        var cnpj = ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/'+n[8]+n[9]+n[10]+n[11]+'-'+d1+d2;
        return options.formatted ? cnpj : cnpj.replace(/\D/g,'');
    };

    Chance.prototype.first = function (options) {
        options = initOptions(options, {gender: this.gender(), nationality: 'en'});
        return this.pick(this.get("firstNames")[options.gender.toLowerCase()][options.nationality.toLowerCase()]);
    };

    Chance.prototype.gender = function (options) {
        options = initOptions(options, {extraGenders: []});
        return this.pick(['Male', 'Female'].concat(options.extraGenders));
    };

    Chance.prototype.last = function (options) {
        options = initOptions(options, {nationality: 'en'});
        return this.pick(this.get("lastNames")[options.nationality.toLowerCase()]);
    };

    Chance.prototype.israelId=function(){
        var x=this.string({pool: '0123456789',length:8});
        var y=0;
        for (var i=0;i<x.length;i++){
            var thisDigit=  x[i] *  (i/2===parseInt(i/2) ? 1 : 2);
            thisDigit=this.pad(thisDigit,2).toString();
            thisDigit=parseInt(thisDigit[0]) + parseInt(thisDigit[1]);
            y=y+thisDigit;
        }
        x=x+(10-parseInt(y.toString().slice(-1))).toString().slice(-1);
        return x;
    };

    Chance.prototype.mrz = function (options) {
        var checkDigit = function (input) {
            var alpha = "<ABCDEFGHIJKLMNOPQRSTUVWXYXZ".split(''),
                multipliers = [ 7, 3, 1 ],
                runningTotal = 0;

            if (typeof input !== 'string') {
                input = input.toString();
            }

            input.split('').forEach(function(character, idx) {
                var pos = alpha.indexOf(character);

                if(pos !== -1) {
                    character = pos === 0 ? 0 : pos + 9;
                } else {
                    character = parseInt(character, 10);
                }
                character *= multipliers[idx % multipliers.length];
                runningTotal += character;
            });
            return runningTotal % 10;
        };
        var generate = function (opts) {
            var pad = function (length) {
                return new Array(length + 1).join('<');
            };
            var number = [ 'P<',
                           opts.issuer,
                           opts.last.toUpperCase(),
                           '<<',
                           opts.first.toUpperCase(),
                           pad(39 - (opts.last.length + opts.first.length + 2)),
                           opts.passportNumber,
                           checkDigit(opts.passportNumber),
                           opts.nationality,
                           opts.dob,
                           checkDigit(opts.dob),
                           opts.gender,
                           opts.expiry,
                           checkDigit(opts.expiry),
                           pad(14),
                           checkDigit(pad(14)) ].join('');

            return number +
                (checkDigit(number.substr(44, 10) +
                            number.substr(57, 7) +
                            number.substr(65, 7)));
        };

        var that = this;

        options = initOptions(options, {
            first: this.first(),
            last: this.last(),
            passportNumber: this.integer({min: 100000000, max: 999999999}),
            dob: (function () {
                var date = that.birthday({type: 'adult'});
                return [date.getFullYear().toString().substr(2),
                        that.pad(date.getMonth() + 1, 2),
                        that.pad(date.getDate(), 2)].join('');
            }()),
            expiry: (function () {
                var date = new Date();
                return [(date.getFullYear() + 5).toString().substr(2),
                        that.pad(date.getMonth() + 1, 2),
                        that.pad(date.getDate(), 2)].join('');
            }()),
            gender: this.gender() === 'Female' ? 'F': 'M',
            issuer: 'GBR',
            nationality: 'GBR'
        });
        return generate (options);
    };

    Chance.prototype.name = function (options) {
        options = initOptions(options);

        var first = this.first(options),
            last = this.last(options),
            name;

        if (options.middle) {
            name = first + ' ' + this.first(options) + ' ' + last;
        } else if (options.middle_initial) {
            name = first + ' ' + this.character({alpha: true, casing: 'upper'}) + '. ' + last;
        } else {
            name = first + ' ' + last;
        }

        if (options.prefix) {
            name = this.prefix(options) + ' ' + name;
        }

        if (options.suffix) {
            name = name + ' ' + this.suffix(options);
        }

        return name;
    };

    // Return the list of available name prefixes based on supplied gender.
    // @todo introduce internationalization
    Chance.prototype.name_prefixes = function (gender) {
        gender = gender || "all";
        gender = gender.toLowerCase();

        var prefixes = [
            { name: 'Doctor', abbreviation: 'Dr.' }
        ];

        if (gender === "male" || gender === "all") {
            prefixes.push({ name: 'Mister', abbreviation: 'Mr.' });
        }

        if (gender === "female" || gender === "all") {
            prefixes.push({ name: 'Miss', abbreviation: 'Miss' });
            prefixes.push({ name: 'Misses', abbreviation: 'Mrs.' });
        }

        return prefixes;
    };

    // Alias for name_prefix
    Chance.prototype.prefix = function (options) {
        return this.name_prefix(options);
    };

    Chance.prototype.name_prefix = function (options) {
        options = initOptions(options, { gender: "all" });
        return options.full ?
            this.pick(this.name_prefixes(options.gender)).name :
            this.pick(this.name_prefixes(options.gender)).abbreviation;
    };
    //Hungarian ID number
    Chance.prototype.HIDN= function(){
     //Hungarian ID nuber structure: XXXXXXYY (X=number,Y=Capital Latin letter)
      var idn_pool="0123456789";
      var idn_chrs="ABCDEFGHIJKLMNOPQRSTUVWXYXZ";
      var idn="";
        idn+=this.string({pool:idn_pool,length:6});
        idn+=this.string({pool:idn_chrs,length:2});
        return idn;
    };


    Chance.prototype.ssn = function (options) {
        options = initOptions(options, {ssnFour: false, dashes: true});
        var ssn_pool = "1234567890",
            ssn,
            dash = options.dashes ? '-' : '';

        if(!options.ssnFour) {
            ssn = this.string({pool: ssn_pool, length: 3}) + dash +
            this.string({pool: ssn_pool, length: 2}) + dash +
            this.string({pool: ssn_pool, length: 4});
        } else {
            ssn = this.string({pool: ssn_pool, length: 4});
        }
        return ssn;
    };

    // Return the list of available name suffixes
    // @todo introduce internationalization
    Chance.prototype.name_suffixes = function () {
        var suffixes = [
            { name: 'Doctor of Osteopathic Medicine', abbreviation: 'D.O.' },
            { name: 'Doctor of Philosophy', abbreviation: 'Ph.D.' },
            { name: 'Esquire', abbreviation: 'Esq.' },
            { name: 'Junior', abbreviation: 'Jr.' },
            { name: 'Juris Doctor', abbreviation: 'J.D.' },
            { name: 'Master of Arts', abbreviation: 'M.A.' },
            { name: 'Master of Business Administration', abbreviation: 'M.B.A.' },
            { name: 'Master of Science', abbreviation: 'M.S.' },
            { name: 'Medical Doctor', abbreviation: 'M.D.' },
            { name: 'Senior', abbreviation: 'Sr.' },
            { name: 'The Third', abbreviation: 'III' },
            { name: 'The Fourth', abbreviation: 'IV' },
            { name: 'Bachelor of Engineering', abbreviation: 'B.E' },
            { name: 'Bachelor of Technology', abbreviation: 'B.TECH' }
        ];
        return suffixes;
    };

    // Alias for name_suffix
    Chance.prototype.suffix = function (options) {
        return this.name_suffix(options);
    };

    Chance.prototype.name_suffix = function (options) {
        options = initOptions(options);
        return options.full ?
            this.pick(this.name_suffixes()).name :
            this.pick(this.name_suffixes()).abbreviation;
    };

    Chance.prototype.nationalities = function () {
        return this.get("nationalities");
    };

    // Generate random nationality based on json list
    Chance.prototype.nationality = function () {
        var nationality = this.pick(this.nationalities());
        return nationality.name;
    };

    // -- End Person --

    // -- Mobile --
    // Android GCM Registration ID
    Chance.prototype.android_id = function () {
        return "APA91" + this.string({ pool: "0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_", length: 178 });
    };

    // Apple Push Token
    Chance.prototype.apple_token = function () {
        return this.string({ pool: "abcdef1234567890", length: 64 });
    };

    // Windows Phone 8 ANID2
    Chance.prototype.wp8_anid2 = function () {
        return base64( this.hash( { length : 32 } ) );
    };

    // Windows Phone 7 ANID
    Chance.prototype.wp7_anid = function () {
        return 'A=' + this.guid().replace(/-/g, '').toUpperCase() + '&E=' + this.hash({ length:3 }) + '&W=' + this.integer({ min:0, max:9 });
    };

    // BlackBerry Device PIN
    Chance.prototype.bb_pin = function () {
        return this.hash({ length: 8 });
    };

    // -- End Mobile --

    // -- Web --
    Chance.prototype.avatar = function (options) {
        var url = null;
        var URL_BASE = '//www.gravatar.com/avatar/';
        var PROTOCOLS = {
            http: 'http',
            https: 'https'
        };
        var FILE_TYPES = {
            bmp: 'bmp',
            gif: 'gif',
            jpg: 'jpg',
            png: 'png'
        };
        var FALLBACKS = {
            '404': '404', // Return 404 if not found
            mm: 'mm', // Mystery man
            identicon: 'identicon', // Geometric pattern based on hash
            monsterid: 'monsterid', // A generated monster icon
            wavatar: 'wavatar', // A generated face
            retro: 'retro', // 8-bit icon
            blank: 'blank' // A transparent png
        };
        var RATINGS = {
            g: 'g',
            pg: 'pg',
            r: 'r',
            x: 'x'
        };
        var opts = {
            protocol: null,
            email: null,
            fileExtension: null,
            size: null,
            fallback: null,
            rating: null
        };

        if (!options) {
            // Set to a random email
            opts.email = this.email();
            options = {};
        }
        else if (typeof options === 'string') {
            opts.email = options;
            options = {};
        }
        else if (typeof options !== 'object') {
            return null;
        }
        else if (options.constructor === 'Array') {
            return null;
        }

        opts = initOptions(options, opts);

        if (!opts.email) {
            // Set to a random email
            opts.email = this.email();
        }

        // Safe checking for params
        opts.protocol = PROTOCOLS[opts.protocol] ? opts.protocol + ':' : '';
        opts.size = parseInt(opts.size, 0) ? opts.size : '';
        opts.rating = RATINGS[opts.rating] ? opts.rating : '';
        opts.fallback = FALLBACKS[opts.fallback] ? opts.fallback : '';
        opts.fileExtension = FILE_TYPES[opts.fileExtension] ? opts.fileExtension : '';

        url =
            opts.protocol +
            URL_BASE +
            this.bimd5.md5(opts.email) +
            (opts.fileExtension ? '.' + opts.fileExtension : '') +
            (opts.size || opts.rating || opts.fallback ? '?' : '') +
            (opts.size ? '&s=' + opts.size.toString() : '') +
            (opts.rating ? '&r=' + opts.rating : '') +
            (opts.fallback ? '&d=' + opts.fallback : '')
            ;

        return url;
    };

    /**
     * #Description:
     * ===============================================
     * Generate random color value base on color type:
     * -> hex
     * -> rgb
     * -> rgba
     * -> 0x
     * -> named color
     *
     * #Examples:
     * ===============================================
     * * Geerate random hex color
     * chance.color() => '#79c157' / 'rgb(110,52,164)' / '0x67ae0b' / '#e2e2e2' / '#29CFA7'
     *
     * * Generate Hex based color value
     * chance.color({format: 'hex'})    => '#d67118'
     *
     * * Generate simple rgb value
     * chance.color({format: 'rgb'})    => 'rgb(110,52,164)'
     *
     * * Generate Ox based color value
     * chance.color({format: '0x'})     => '0x67ae0b'
     *
     * * Generate graiscale based value
     * chance.color({grayscale: true})  => '#e2e2e2'
     *
     * * Return valide color name
     * chance.color({format: 'name'})   => 'red'
     *
     * * Make color uppercase
     * chance.color({casing: 'upper'})  => '#29CFA7'
     *
     * @param  [object] options
     * @return [string] color value
     */
    Chance.prototype.color = function (options) {

        function gray(value, delimiter) {
            return [value, value, value].join(delimiter || '');
        }

        function rgb(hasAlpha) {

            var rgbValue    = (hasAlpha)    ? 'rgba' : 'rgb';
            var alphaChanal = (hasAlpha)    ? (',' + this.floating({min:0, max:1})) : "";
            var colorValue  = (isGrayscale) ? (gray(this.natural({max: 255}), ',')) : (this.natural({max: 255}) + ',' + this.natural({max: 255}) + ',' + this.natural({max: 255}));

            return rgbValue + '(' + colorValue + alphaChanal + ')';
        }

        function hex(start, end, withHash) {

            var simbol = (withHash) ? "#" : "";
            var expression  = (isGrayscale ? gray(this.hash({length: start})) : this.hash({length: end}));
            return simbol + expression;
        }

        options = initOptions(options, {
            format: this.pick(['hex', 'shorthex', 'rgb', 'rgba', '0x', 'name']),
            grayscale: false,
            casing: 'lower'
        });

        var isGrayscale = options.grayscale;
        var colorValue;

        if (options.format === 'hex') {
            colorValue =  hex.call(this, 2, 6, true);
        }
        else if (options.format === 'shorthex') {
            colorValue = hex.call(this, 1, 3, true);
        }
        else if (options.format === 'rgb') {
            colorValue = rgb.call(this, false);
        }
        else if (options.format === 'rgba') {
            colorValue = rgb.call(this, true);
        }
        else if (options.format === '0x') {
            colorValue = '0x' + hex.call(this, 2, 6);
        }
        else if(options.format === 'name') {
            return this.pick(this.get("colorNames"));
        }
        else {
            throw new RangeError('Invalid format provided. Please provide one of "hex", "shorthex", "rgb", "rgba", "0x" or "name".');
        }

        if (options.casing === 'upper' ) {
            colorValue = colorValue.toUpperCase();
        }

        return colorValue;
    };

    Chance.prototype.domain = function (options) {
        options = initOptions(options);
        return this.word() + '.' + (options.tld || this.tld());
    };

    Chance.prototype.email = function (options) {
        options = initOptions(options);
        return this.word({length: options.length}) + '@' + (options.domain || this.domain());
    };

    Chance.prototype.fbid = function () {
        return parseInt('10000' + this.natural({max: 100000000000}), 10);
    };

    Chance.prototype.google_analytics = function () {
        var account = this.pad(this.natural({max: 999999}), 6);
        var property = this.pad(this.natural({max: 99}), 2);

        return 'UA-' + account + '-' + property;
    };

    Chance.prototype.hashtag = function () {
        return '#' + this.word();
    };

    Chance.prototype.ip = function () {
        // Todo: This could return some reserved IPs. See http://vq.io/137dgYy
        // this should probably be updated to account for that rare as it may be
        return this.natural({min: 1, max: 254}) + '.' +
               this.natural({max: 255}) + '.' +
               this.natural({max: 255}) + '.' +
               this.natural({min: 1, max: 254});
    };

    Chance.prototype.ipv6 = function () {
        var ip_addr = this.n(this.hash, 8, {length: 4});

        return ip_addr.join(":");
    };

    Chance.prototype.klout = function () {
        return this.natural({min: 1, max: 99});
    };

    Chance.prototype.semver = function (options) {
        options = initOptions(options, { include_prerelease: true });

        var range = this.pickone(["^", "~", "<", ">", "<=", ">=", "="]);
        if (options.range) {
            range = options.range;
        }

        var prerelease = "";
        if (options.include_prerelease) {
            prerelease = this.weighted(["", "-dev", "-beta", "-alpha"], [50, 10, 5, 1]);
        }
        return range + this.rpg('3d10').join('.') + prerelease;
    };

    Chance.prototype.tlds = function () {
        return ['com', 'org', 'edu', 'gov', 'co.uk', 'net', 'io', 'ac', 'ad', 'ae', 'af', 'ag', 'ai', 'al', 'am', 'an', 'ao', 'aq', 'ar', 'as', 'at', 'au', 'aw', 'ax', 'az', 'ba', 'bb', 'bd', 'be', 'bf', 'bg', 'bh', 'bi', 'bj', 'bm', 'bn', 'bo', 'bq', 'br', 'bs', 'bt', 'bv', 'bw', 'by', 'bz', 'ca', 'cc', 'cd', 'cf', 'cg', 'ch', 'ci', 'ck', 'cl', 'cm', 'cn', 'co', 'cr', 'cu', 'cv', 'cw', 'cx', 'cy', 'cz', 'de', 'dj', 'dk', 'dm', 'do', 'dz', 'ec', 'ee', 'eg', 'eh', 'er', 'es', 'et', 'eu', 'fi', 'fj', 'fk', 'fm', 'fo', 'fr', 'ga', 'gb', 'gd', 'ge', 'gf', 'gg', 'gh', 'gi', 'gl', 'gm', 'gn', 'gp', 'gq', 'gr', 'gs', 'gt', 'gu', 'gw', 'gy', 'hk', 'hm', 'hn', 'hr', 'ht', 'hu', 'id', 'ie', 'il', 'im', 'in', 'io', 'iq', 'ir', 'is', 'it', 'je', 'jm', 'jo', 'jp', 'ke', 'kg', 'kh', 'ki', 'km', 'kn', 'kp', 'kr', 'kw', 'ky', 'kz', 'la', 'lb', 'lc', 'li', 'lk', 'lr', 'ls', 'lt', 'lu', 'lv', 'ly', 'ma', 'mc', 'md', 'me', 'mg', 'mh', 'mk', 'ml', 'mm', 'mn', 'mo', 'mp', 'mq', 'mr', 'ms', 'mt', 'mu', 'mv', 'mw', 'mx', 'my', 'mz', 'na', 'nc', 'ne', 'nf', 'ng', 'ni', 'nl', 'no', 'np', 'nr', 'nu', 'nz', 'om', 'pa', 'pe', 'pf', 'pg', 'ph', 'pk', 'pl', 'pm', 'pn', 'pr', 'ps', 'pt', 'pw', 'py', 'qa', 're', 'ro', 'rs', 'ru', 'rw', 'sa', 'sb', 'sc', 'sd', 'se', 'sg', 'sh', 'si', 'sj', 'sk', 'sl', 'sm', 'sn', 'so', 'sr', 'ss', 'st', 'su', 'sv', 'sx', 'sy', 'sz', 'tc', 'td', 'tf', 'tg', 'th', 'tj', 'tk', 'tl', 'tm', 'tn', 'to', 'tp', 'tr', 'tt', 'tv', 'tw', 'tz', 'ua', 'ug', 'uk', 'us', 'uy', 'uz', 'va', 'vc', 've', 'vg', 'vi', 'vn', 'vu', 'wf', 'ws', 'ye', 'yt', 'za', 'zm', 'zw'];
    };

    Chance.prototype.tld = function () {
        return this.pick(this.tlds());
    };

    Chance.prototype.twitter = function () {
        return '@' + this.word();
    };

    Chance.prototype.url = function (options) {
        options = initOptions(options, { protocol: "http", domain: this.domain(options), domain_prefix: "", path: this.word(), extensions: []});

        var extension = options.extensions.length > 0 ? "." + this.pick(options.extensions) : "";
        var domain = options.domain_prefix ? options.domain_prefix + "." + options.domain : options.domain;

        return options.protocol + "://" + domain + "/" + options.path + extension;
    };

    // -- End Web --

    // -- Location --

    Chance.prototype.address = function (options) {
        options = initOptions(options);
        return this.natural({min: 5, max: 2000}) + ' ' + this.street(options);
    };

    Chance.prototype.altitude = function (options) {
        options = initOptions(options, {fixed: 5, min: 0, max: 8848});
        return this.floating({
            min: options.min,
            max: options.max,
            fixed: options.fixed
        });
    };

    Chance.prototype.areacode = function (options) {
        options = initOptions(options, {parens : true});
        // Don't want area codes to start with 1, or have a 9 as the second digit
        var areacode = this.natural({min: 2, max: 9}).toString() +
                this.natural({min: 0, max: 8}).toString() +
                this.natural({min: 0, max: 9}).toString();

        return options.parens ? '(' + areacode + ')' : areacode;
    };

    Chance.prototype.city = function () {
        return this.capitalize(this.word({syllables: 3}));
    };

    Chance.prototype.coordinates = function (options) {
        return this.latitude(options) + ', ' + this.longitude(options);
    };

    Chance.prototype.countries = function () {
        return this.get("countries");
    };

    Chance.prototype.country = function (options) {
        options = initOptions(options);
        var country = this.pick(this.countries());
        return options.full ? country.name : country.abbreviation;
    };

    Chance.prototype.depth = function (options) {
        options = initOptions(options, {fixed: 5, min: -10994, max: 0});
        return this.floating({
            min: options.min,
            max: options.max,
            fixed: options.fixed
        });
    };

    Chance.prototype.geohash = function (options) {
        options = initOptions(options, { length: 7 });
        return this.string({ length: options.length, pool: '0123456789bcdefghjkmnpqrstuvwxyz' });
    };

    Chance.prototype.geojson = function (options) {
        return this.latitude(options) + ', ' + this.longitude(options) + ', ' + this.altitude(options);
    };

    Chance.prototype.latitude = function (options) {
        options = initOptions(options, {fixed: 5, min: -90, max: 90});
        return this.floating({min: options.min, max: options.max, fixed: options.fixed});
    };

    Chance.prototype.longitude = function (options) {
        options = initOptions(options, {fixed: 5, min: -180, max: 180});
        return this.floating({min: options.min, max: options.max, fixed: options.fixed});
    };

    Chance.prototype.phone = function (options) {
        var self = this,
            numPick,
            ukNum = function (parts) {
                var section = [];
                //fills the section part of the phone number with random numbers.
                parts.sections.forEach(function(n) {
                    section.push(self.string({ pool: '0123456789', length: n}));
                });
                return parts.area + section.join(' ');
            };
        options = initOptions(options, {
            formatted: true,
            country: 'us',
            mobile: false
        });
        if (!options.formatted) {
            options.parens = false;
        }
        var phone;
        switch (options.country) {
            case 'fr':
                if (!options.mobile) {
                    numPick = this.pick([
                        // Valid zone and département codes.
                        '01' + this.pick(['30', '34', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '53', '55', '56', '58', '60', '64', '69', '70', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83']) + self.string({ pool: '0123456789', length: 6}),
                        '02' + this.pick(['14', '18', '22', '23', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '40', '41', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '56', '57', '61', '62', '69', '72', '76', '77', '78', '85', '90', '96', '97', '98', '99']) + self.string({ pool: '0123456789', length: 6}),
                        '03' + this.pick(['10', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '39', '44', '45', '51', '52', '54', '55', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90']) + self.string({ pool: '0123456789', length: 6}),
                        '04' + this.pick(['11', '13', '15', '20', '22', '26', '27', '30', '32', '34', '37', '42', '43', '44', '50', '56', '57', '63', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '88', '89', '90', '91', '92', '93', '94', '95', '97', '98']) + self.string({ pool: '0123456789', length: 6}),
                        '05' + this.pick(['08', '16', '17', '19', '24', '31', '32', '33', '34', '35', '40', '45', '46', '47', '49', '53', '55', '56', '57', '58', '59', '61', '62', '63', '64', '65', '67', '79', '81', '82', '86', '87', '90', '94']) + self.string({ pool: '0123456789', length: 6}),
                        '09' + self.string({ pool: '0123456789', length: 8}),
                    ]);
                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;
                } else {
                    numPick = this.pick(['06', '07']) + self.string({ pool: '0123456789', length: 8});
                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;
                }
                break;
            case 'uk':
                if (!options.mobile) {
                    numPick = this.pick([
                        //valid area codes of major cities/counties followed by random numbers in required format.
                        { area: '01' + this.character({ pool: '234569' }) + '1 ', sections: [3,4] },
                        { area: '020 ' + this.character({ pool: '378' }), sections: [3,4] },
                        { area: '023 ' + this.character({ pool: '89' }), sections: [3,4] },
                        { area: '024 7', sections: [3,4] },
                        { area: '028 ' + this.pick(['25','28','37','71','82','90','92','95']), sections: [2,4] },
                        { area: '012' + this.pick(['04','08','54','76','97','98']) + ' ', sections: [6] },
                        { area: '013' + this.pick(['63','64','84','86']) + ' ', sections: [6] },
                        { area: '014' + this.pick(['04','20','60','61','80','88']) + ' ', sections: [6] },
                        { area: '015' + this.pick(['24','27','62','66']) + ' ', sections: [6] },
                        { area: '016' + this.pick(['06','29','35','47','59','95']) + ' ', sections: [6] },
                        { area: '017' + this.pick(['26','44','50','68']) + ' ', sections: [6] },
                        { area: '018' + this.pick(['27','37','84','97']) + ' ', sections: [6] },
                        { area: '019' + this.pick(['00','05','35','46','49','63','95']) + ' ', sections: [6] }
                    ]);
                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '', 'g');
                } else {
                    numPick = this.pick([
                        { area: '07' + this.pick(['4','5','7','8','9']), sections: [2,6] },
                        { area: '07624 ', sections: [6] }
                    ]);
                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '');
                }
                break;
            case 'us':
                var areacode = this.areacode(options).toString();
                var exchange = this.natural({ min: 2, max: 9 }).toString() +
                    this.natural({ min: 0, max: 9 }).toString() +
                    this.natural({ min: 0, max: 9 }).toString();
                var subscriber = this.natural({ min: 1000, max: 9999 }).toString(); // this could be random [0-9]{4}
                phone = options.formatted ? areacode + ' ' + exchange + '-' + subscriber : areacode + exchange + subscriber;
        }
        return phone;
    };

    Chance.prototype.postal = function () {
        // Postal District
        var pd = this.character({pool: "XVTSRPNKLMHJGECBA"});
        // Forward Sortation Area (FSA)
        var fsa = pd + this.natural({max: 9}) + this.character({alpha: true, casing: "upper"});
        // Local Delivery Unut (LDU)
        var ldu = this.natural({max: 9}) + this.character({alpha: true, casing: "upper"}) + this.natural({max: 9});

        return fsa + " " + ldu;
    };

    Chance.prototype.counties = function (options) {
        options = initOptions(options, { country: 'uk' });
        return this.get("counties")[options.country.toLowerCase()];
    };

    Chance.prototype.county = function (options) {
        return this.pick(this.counties(options)).name;
    };

    Chance.prototype.provinces = function (options) {
        options = initOptions(options, { country: 'ca' });
        return this.get("provinces")[options.country.toLowerCase()];
    };

    Chance.prototype.province = function (options) {
        return (options && options.full) ?
            this.pick(this.provinces(options)).name :
            this.pick(this.provinces(options)).abbreviation;
    };

    Chance.prototype.state = function (options) {
        return (options && options.full) ?
            this.pick(this.states(options)).name :
            this.pick(this.states(options)).abbreviation;
    };

    Chance.prototype.states = function (options) {
        options = initOptions(options, { country: 'us', us_states_and_dc: true } );

        var states;

        switch (options.country.toLowerCase()) {
            case 'us':
                var us_states_and_dc = this.get("us_states_and_dc"),
                    territories = this.get("territories"),
                    armed_forces = this.get("armed_forces");

                states = [];

                if (options.us_states_and_dc) {
                    states = states.concat(us_states_and_dc);
                }
                if (options.territories) {
                    states = states.concat(territories);
                }
                if (options.armed_forces) {
                    states = states.concat(armed_forces);
                }
                break;
            case 'it':
                states = this.get("country_regions")[options.country.toLowerCase()];
                break;
            case 'uk':
                states = this.get("counties")[options.country.toLowerCase()];
                break;
        }

        return states;
    };

    Chance.prototype.street = function (options) {
        options = initOptions(options, { country: 'us', syllables: 2 });
        var     street;

        switch (options.country.toLowerCase()) {
            case 'us':
                street = this.word({ syllables: options.syllables });
                street = this.capitalize(street);
                street += ' ';
                street += options.short_suffix ?
                    this.street_suffix(options).abbreviation :
                    this.street_suffix(options).name;
                break;
            case 'it':
                street = this.word({ syllables: options.syllables });
                street = this.capitalize(street);
                street = (options.short_suffix ?
                    this.street_suffix(options).abbreviation :
                    this.street_suffix(options).name) + " " + street;
                break;
        }
        return street;
    };

    Chance.prototype.street_suffix = function (options) {
        options = initOptions(options, { country: 'us' });
        return this.pick(this.street_suffixes(options));
    };

    Chance.prototype.street_suffixes = function (options) {
        options = initOptions(options, { country: 'us' });
        // These are the most common suffixes.
        return this.get("street_suffixes")[options.country.toLowerCase()];
    };

    // Note: only returning US zip codes, internationalization will be a whole
    // other beast to tackle at some point.
    Chance.prototype.zip = function (options) {
        var zip = this.n(this.natural, 5, {max: 9});

        if (options && options.plusfour === true) {
            zip.push('-');
            zip = zip.concat(this.n(this.natural, 4, {max: 9}));
        }

        return zip.join("");
    };

    // -- End Location --

    // -- Time

    Chance.prototype.ampm = function () {
        return this.bool() ? 'am' : 'pm';
    };

    Chance.prototype.date = function (options) {
        var date_string, date;

        // If interval is specified we ignore preset
        if(options && (options.min || options.max)) {
            options = initOptions(options, {
                american: true,
                string: false
            });
            var min = typeof options.min !== "undefined" ? options.min.getTime() : 1;
            // 100,000,000 days measured relative to midnight at the beginning of 01 January, 1970 UTC. http://es5.github.io/#x15.9.1.1
            var max = typeof options.max !== "undefined" ? options.max.getTime() : 8640000000000000;

            date = new Date(this.integer({min: min, max: max}));
        } else {
            var m = this.month({raw: true});
            var daysInMonth = m.days;

            if(options && options.month) {
                // Mod 12 to allow months outside range of 0-11 (not encouraged, but also not prevented).
                daysInMonth = this.get('months')[((options.month % 12) + 12) % 12].days;
            }

            options = initOptions(options, {
                year: parseInt(this.year(), 10),
                // Necessary to subtract 1 because Date() 0-indexes month but not day or year
                // for some reason.
                month: m.numeric - 1,
                day: this.natural({min: 1, max: daysInMonth}),
                hour: this.hour({twentyfour: true}),
                minute: this.minute(),
                second: this.second(),
                millisecond: this.millisecond(),
                american: true,
                string: false
            });

            date = new Date(options.year, options.month, options.day, options.hour, options.minute, options.second, options.millisecond);
        }

        if (options.american) {
            // Adding 1 to the month is necessary because Date() 0-indexes
            // months but not day for some odd reason.
            date_string = (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear();
        } else {
            date_string = date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();
        }

        return options.string ? date_string : date;
    };

    Chance.prototype.hammertime = function (options) {
        return this.date(options).getTime();
    };

    Chance.prototype.hour = function (options) {
        options = initOptions(options, {
            min: options && options.twentyfour ? 0 : 1,
            max: options && options.twentyfour ? 23 : 12
        });

        testRange(options.min < 0, "Chance: Min cannot be less than 0.");
        testRange(options.twentyfour && options.max > 23, "Chance: Max cannot be greater than 23 for twentyfour option.");
        testRange(!options.twentyfour && options.max > 12, "Chance: Max cannot be greater than 12.");
        testRange(options.min > options.max, "Chance: Min cannot be greater than Max.");

        return this.natural({min: options.min, max: options.max});
    };

    Chance.prototype.millisecond = function () {
        return this.natural({max: 999});
    };

    Chance.prototype.minute = Chance.prototype.second = function (options) {
        options = initOptions(options, {min: 0, max: 59});

        testRange(options.min < 0, "Chance: Min cannot be less than 0.");
        testRange(options.max > 59, "Chance: Max cannot be greater than 59.");
        testRange(options.min > options.max, "Chance: Min cannot be greater than Max.");

        return this.natural({min: options.min, max: options.max});
    };

    Chance.prototype.month = function (options) {
        options = initOptions(options, {min: 1, max: 12});

        testRange(options.min < 1, "Chance: Min cannot be less than 1.");
        testRange(options.max > 12, "Chance: Max cannot be greater than 12.");
        testRange(options.min > options.max, "Chance: Min cannot be greater than Max.");

        var month = this.pick(this.months().slice(options.min - 1, options.max));
        return options.raw ? month : month.name;
    };

    Chance.prototype.months = function () {
        return this.get("months");
    };

    Chance.prototype.second = function () {
        return this.natural({max: 59});
    };

    Chance.prototype.timestamp = function () {
        return this.natural({min: 1, max: parseInt(new Date().getTime() / 1000, 10)});
    };

    Chance.prototype.weekday = function (options) {
        options = initOptions(options, {weekday_only: false});
        var weekdays = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"];
        if (!options.weekday_only) {
            weekdays.push("Saturday");
            weekdays.push("Sunday");
        }
        return this.pickone(weekdays);
    };

    Chance.prototype.year = function (options) {
        // Default to current year as min if none specified
        options = initOptions(options, {min: new Date().getFullYear()});

        // Default to one century after current year as max if none specified
        options.max = (typeof options.max !== "undefined") ? options.max : options.min + 100;

        return this.natural(options).toString();
    };

    // -- End Time

    // -- Finance --

    Chance.prototype.cc = function (options) {
        options = initOptions(options);

        var type, number, to_generate;

        type = (options.type) ?
                    this.cc_type({ name: options.type, raw: true }) :
                    this.cc_type({ raw: true });

        number = type.prefix.split("");
        to_generate = type.length - type.prefix.length - 1;

        // Generates n - 1 digits
        number = number.concat(this.n(this.integer, to_generate, {min: 0, max: 9}));

        // Generates the last digit according to Luhn algorithm
        number.push(this.luhn_calculate(number.join("")));

        return number.join("");
    };

    Chance.prototype.cc_types = function () {
        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29
        return this.get("cc_types");
    };

    Chance.prototype.cc_type = function (options) {
        options = initOptions(options);
        var types = this.cc_types(),
            type = null;

        if (options.name) {
            for (var i = 0; i < types.length; i++) {
                // Accept either name or short_name to specify card type
                if (types[i].name === options.name || types[i].short_name === options.name) {
                    type = types[i];
                    break;
                }
            }
            if (type === null) {
                throw new RangeError("Credit card type '" + options.name + "'' is not supported");
            }
        } else {
            type = this.pick(types);
        }

        return options.raw ? type : type.name;
    };

    //return all world currency by ISO 4217
    Chance.prototype.currency_types = function () {
        return this.get("currency_types");
    };

    //return random world currency by ISO 4217
    Chance.prototype.currency = function () {
        return this.pick(this.currency_types());
    };

    //return all timezones availabel
    Chance.prototype.timezones = function () {
        return this.get("timezones");
    };

    //return random timezone
    Chance.prototype.timezone = function () {
        return this.pick(this.timezones());
    };

    //Return random correct currency exchange pair (e.g. EUR/USD) or array of currency code
    Chance.prototype.currency_pair = function (returnAsString) {
        var currencies = this.unique(this.currency, 2, {
            comparator: function(arr, val) {

                return arr.reduce(function(acc, item) {
                    // If a match has been found, short circuit check and just return
                    return acc || (item.code === val.code);
                }, false);
            }
        });

        if (returnAsString) {
            return currencies[0].code + '/' + currencies[1].code;
        } else {
            return currencies;
        }
    };

    Chance.prototype.dollar = function (options) {
        // By default, a somewhat more sane max for dollar than all available numbers
        options = initOptions(options, {max : 10000, min : 0});

        var dollar = this.floating({min: options.min, max: options.max, fixed: 2}).toString(),
            cents = dollar.split('.')[1];

        if (cents === undefined) {
            dollar += '.00';
        } else if (cents.length < 2) {
            dollar = dollar + '0';
        }

        if (dollar < 0) {
            return '-$' + dollar.replace('-', '');
        } else {
            return '$' + dollar;
        }
    };

    Chance.prototype.euro = function (options) {
        return Number(this.dollar(options).replace("$", "")).toLocaleString() + "€";
    };

    Chance.prototype.exp = function (options) {
        options = initOptions(options);
        var exp = {};

        exp.year = this.exp_year();

        // If the year is this year, need to ensure month is greater than the
        // current month or this expiration will not be valid
        if (exp.year === (new Date().getFullYear()).toString()) {
            exp.month = this.exp_month({future: true});
        } else {
            exp.month = this.exp_month();
        }

        return options.raw ? exp : exp.month + '/' + exp.year;
    };

    Chance.prototype.exp_month = function (options) {
        options = initOptions(options);
        var month, month_int,
            // Date object months are 0 indexed
            curMonth = new Date().getMonth() + 1;

        if (options.future && (curMonth !== 12)) {
            do {
                month = this.month({raw: true}).numeric;
                month_int = parseInt(month, 10);
            } while (month_int <= curMonth);
        } else {
            month = this.month({raw: true}).numeric;
        }

        return month;
    };

    Chance.prototype.exp_year = function () {
        var curMonth = new Date().getMonth() + 1,
            curYear = new Date().getFullYear();

        return this.year({min: ((curMonth === 12) ? (curYear + 1) : curYear), max: (curYear + 10)});
    };

    Chance.prototype.vat = function (options) {
        options = initOptions(options, { country: 'it' });
        switch (options.country.toLowerCase()) {
            case 'it':
                return this.it_vat();
        }
    };

    // -- End Finance

    // -- Regional

    Chance.prototype.it_vat = function () {
        var it_vat = this.natural({min: 1, max: 1800000});

        it_vat = this.pad(it_vat, 7) + this.pad(this.pick(this.provinces({ country: 'it' })).code, 3);
        return it_vat + this.luhn_calculate(it_vat);
    };

    /*
     * this generator is written following the official algorithm
     * all data can be passed explicitely or randomized by calling chance.cf() without options
     * the code does not check that the input data is valid (it goes beyond the scope of the generator)
     *
     * @param  [Object] options = { first: first name,
     *                              last: last name,
     *                              gender: female|male,
                                    birthday: JavaScript date object,
                                    city: string(4), 1 letter + 3 numbers
                                   }
     * @return [string] codice fiscale
     *
    */
    Chance.prototype.cf = function (options) {
        options = options || {};
        var gender = !!options.gender ? options.gender : this.gender(),
            first = !!options.first ? options.first : this.first( { gender: gender, nationality: 'it'} ),
            last = !!options.last ? options.last : this.last( { nationality: 'it'} ),
            birthday = !!options.birthday ? options.birthday : this.birthday(),
            city = !!options.city ? options.city : this.pickone(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'L', 'M', 'Z']) + this.pad(this.natural({max:999}), 3),
            cf = [],
            name_generator = function(name, isLast) {
                var temp,
                    return_value = [];

                if (name.length < 3) {
                    return_value = name.split("").concat("XXX".split("")).splice(0,3);
                }
                else {
                    temp = name.toUpperCase().split('').map(function(c){
                        return ("BCDFGHJKLMNPRSTVWZ".indexOf(c) !== -1) ? c : undefined;
                    }).join('');
                    if (temp.length > 3) {
                        if (isLast) {
                            temp = temp.substr(0,3);
                        } else {
                            temp = temp[0] + temp.substr(2,2);
                        }
                    }
                    if (temp.length < 3) {
                        return_value = temp;
                        temp = name.toUpperCase().split('').map(function(c){
                            return ("AEIOU".indexOf(c) !== -1) ? c : undefined;
                        }).join('').substr(0, 3 - return_value.length);
                    }
                    return_value = return_value + temp;
                }

                return return_value;
            },
            date_generator = function(birthday, gender, that) {
                var lettermonths = ['A', 'B', 'C', 'D', 'E', 'H', 'L', 'M', 'P', 'R', 'S', 'T'];

                return  birthday.getFullYear().toString().substr(2) +
                        lettermonths[birthday.getMonth()] +
                        that.pad(birthday.getDate() + ((gender.toLowerCase() === "female") ? 40 : 0), 2);
            },
            checkdigit_generator = function(cf) {
                var range1 = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",
                    range2 = "ABCDEFGHIJABCDEFGHIJKLMNOPQRSTUVWXYZ",
                    evens  = "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
                    odds   = "BAKPLCQDREVOSFTGUHMINJWZYX",
                    digit  = 0;


                for(var i = 0; i < 15; i++) {
                    if (i % 2 !== 0) {
                        digit += evens.indexOf(range2[range1.indexOf(cf[i])]);
                    }
                    else {
                        digit +=  odds.indexOf(range2[range1.indexOf(cf[i])]);
                    }
                }
                return evens[digit % 26];
            };

        cf = cf.concat(name_generator(last, true), name_generator(first), date_generator(birthday, gender, this), city.toUpperCase().split("")).join("");
        cf += checkdigit_generator(cf.toUpperCase(), this);

        return cf.toUpperCase();
    };

    Chance.prototype.pl_pesel = function () {
        var number = this.natural({min: 1, max: 9999999999});
        var arr = this.pad(number, 10).split('');
        for (var i = 0; i < arr.length; i++) {
            arr[i] = parseInt(arr[i]);
        }

        var controlNumber = (1 * arr[0] + 3 * arr[1] + 7 * arr[2] + 9 * arr[3] + 1 * arr[4] + 3 * arr[5] + 7 * arr[6] + 9 * arr[7] + 1 * arr[8] + 3 * arr[9]) % 10;
        if(controlNumber !== 0) {
            controlNumber = 10 - controlNumber;
        }

        return arr.join('') + controlNumber;
    };

    Chance.prototype.pl_nip = function () {
        var number = this.natural({min: 1, max: 999999999});
        var arr = this.pad(number, 9).split('');
        for (var i = 0; i < arr.length; i++) {
            arr[i] = parseInt(arr[i]);
        }

        var controlNumber = (6 * arr[0] + 5 * arr[1] + 7 * arr[2] + 2 * arr[3] + 3 * arr[4] + 4 * arr[5] + 5 * arr[6] + 6 * arr[7] + 7 * arr[8]) % 11;
        if(controlNumber === 10) {
            return this.pl_nip();
        }

        return arr.join('') + controlNumber;
    };

    Chance.prototype.pl_regon = function () {
        var number = this.natural({min: 1, max: 99999999});
        var arr = this.pad(number, 8).split('');
        for (var i = 0; i < arr.length; i++) {
            arr[i] = parseInt(arr[i]);
        }

        var controlNumber = (8 * arr[0] + 9 * arr[1] + 2 * arr[2] + 3 * arr[3] + 4 * arr[4] + 5 * arr[5] + 6 * arr[6] + 7 * arr[7]) % 11;
        if(controlNumber === 10) {
            controlNumber = 0;
        }

        return arr.join('') + controlNumber;
    };

    // -- End Regional

    // -- Miscellaneous --

    // Dice - For all the board game geeks out there, myself included ;)
    function diceFn (range) {
        return function () {
            return this.natural(range);
        };
    }
    Chance.prototype.d4 = diceFn({min: 1, max: 4});
    Chance.prototype.d6 = diceFn({min: 1, max: 6});
    Chance.prototype.d8 = diceFn({min: 1, max: 8});
    Chance.prototype.d10 = diceFn({min: 1, max: 10});
    Chance.prototype.d12 = diceFn({min: 1, max: 12});
    Chance.prototype.d20 = diceFn({min: 1, max: 20});
    Chance.prototype.d30 = diceFn({min: 1, max: 30});
    Chance.prototype.d100 = diceFn({min: 1, max: 100});

    Chance.prototype.rpg = function (thrown, options) {
        options = initOptions(options);
        if (!thrown) {
            throw new RangeError("A type of die roll must be included");
        } else {
            var bits = thrown.toLowerCase().split("d"),
                rolls = [];

            if (bits.length !== 2 || !parseInt(bits[0], 10) || !parseInt(bits[1], 10)) {
                throw new Error("Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die");
            }
            for (var i = bits[0]; i > 0; i--) {
                rolls[i - 1] = this.natural({min: 1, max: bits[1]});
            }
            return (typeof options.sum !== 'undefined' && options.sum) ? rolls.reduce(function (p, c) { return p + c; }) : rolls;
        }
    };

    // Guid
    Chance.prototype.guid = function (options) {
        options = initOptions(options, { version: 5 });

        var guid_pool = "abcdef1234567890",
            variant_pool = "ab89",
            guid = this.string({ pool: guid_pool, length: 8 }) + '-' +
                   this.string({ pool: guid_pool, length: 4 }) + '-' +
                   // The Version
                   options.version +
                   this.string({ pool: guid_pool, length: 3 }) + '-' +
                   // The Variant
                   this.string({ pool: variant_pool, length: 1 }) +
                   this.string({ pool: guid_pool, length: 3 }) + '-' +
                   this.string({ pool: guid_pool, length: 12 });
        return guid;
    };

    // Hash
    Chance.prototype.hash = function (options) {
        options = initOptions(options, {length : 40, casing: 'lower'});
        var pool = options.casing === 'upper' ? HEX_POOL.toUpperCase() : HEX_POOL;
        return this.string({pool: pool, length: options.length});
    };

    Chance.prototype.luhn_check = function (num) {
        var str = num.toString();
        var checkDigit = +str.substring(str.length - 1);
        return checkDigit === this.luhn_calculate(+str.substring(0, str.length - 1));
    };

    Chance.prototype.luhn_calculate = function (num) {
        var digits = num.toString().split("").reverse();
        var sum = 0;
        var digit;

        for (var i = 0, l = digits.length; l > i; ++i) {
            digit = +digits[i];
            if (i % 2 === 0) {
                digit *= 2;
                if (digit > 9) {
                    digit -= 9;
                }
            }
            sum += digit;
        }
        return (sum * 9) % 10;
    };

    // MD5 Hash
    Chance.prototype.md5 = function(options) {
        var opts = { str: '', key: null, raw: false };

        if (!options) {
            opts.str = this.string();
            options = {};
        }
        else if (typeof options === 'string') {
            opts.str = options;
            options = {};
        }
        else if (typeof options !== 'object') {
            return null;
        }
        else if(options.constructor === 'Array') {
            return null;
        }

        opts = initOptions(options, opts);

        if(!opts.str){
            throw new Error('A parameter is required to return an md5 hash.');
        }

        return this.bimd5.md5(opts.str, opts.key, opts.raw);
    };

    /**
     * #Description:
     * =====================================================
     * Generate random file name with extention
     *
     * The argument provide extention type
     * -> raster
     * -> vector
     * -> 3d
     * -> document
     *
     * If noting is provided the function return random file name with random
     * extention type of any kind
     *
     * The user can validate the file name length range
     * If noting provided the generated file name is radom
     *
     * #Extention Pool :
     * * Currently the supported extentions are
     *  -> some of the most popular raster image extentions
     *  -> some of the most popular vector image extentions
     *  -> some of the most popular 3d image extentions
     *  -> some of the most popular document extentions
     *
     * #Examples :
     * =====================================================
     *
     * Return random file name with random extention. The file extention
     * is provided by a predifined collection of extentions. More abouth the extention
     * pool can be fond in #Extention Pool section
     *
     * chance.file()
     * => dsfsdhjf.xml
     *
     * In order to generate a file name with sspecific length, specify the
     * length property and integer value. The extention is going to be random
     *
     * chance.file({length : 10})
     * => asrtineqos.pdf
     *
     * In order to geerate file with extention form some of the predifined groups
     * of the extention pool just specify the extenton pool category in fileType property
     *
     * chance.file({fileType : 'raster'})
     * => dshgssds.psd
     *
     * You can provide specific extention for your files
     * chance.file({extention : 'html'})
     * => djfsd.html
     *
     * Or you could pass custom collection of extentons bt array or by object
     * chance.file({extentions : [...]})
     * => dhgsdsd.psd
     *
     * chance.file({extentions : { key : [...], key : [...]}})
     * => djsfksdjsd.xml
     *
     * @param  [collection] options
     * @return [string]
     *
     */
    Chance.prototype.file = function(options) {

        var fileOptions = options || {};
        var poolCollectionKey = "fileExtension";
        var typeRange   = Object.keys(this.get("fileExtension"));//['raster', 'vector', '3d', 'document'];
        var fileName;
        var fileExtention;

        // Generate random file name
        fileName = this.word({length : fileOptions.length});

        // Generate file by specific extention provided by the user
        if(fileOptions.extention) {

            fileExtention = fileOptions.extention;
            return (fileName + '.' + fileExtention);
        }

        // Generate file by specific axtention collection
        if(fileOptions.extentions) {

            if(Array.isArray(fileOptions.extentions)) {

                fileExtention = this.pickone(fileOptions.extentions);
                return (fileName + '.' + fileExtention);
            }
            else if(fileOptions.extentions.constructor === Object) {

                var extentionObjectCollection = fileOptions.extentions;
                var keys = Object.keys(extentionObjectCollection);

                fileExtention = this.pickone(extentionObjectCollection[this.pickone(keys)]);
                return (fileName + '.' + fileExtention);
            }

            throw new Error("Expect collection of type Array or Object to be passed as an argument ");
        }

        // Generate file extention based on specific file type
        if(fileOptions.fileType) {

            var fileType = fileOptions.fileType;
            if(typeRange.indexOf(fileType) !== -1) {

                fileExtention = this.pickone(this.get(poolCollectionKey)[fileType]);
                return (fileName + '.' + fileExtention);
            }

            throw new Error("Expect file type value to be 'raster', 'vector', '3d' or 'document' ");
        }

        // Generate random file name if no extenton options are passed
        fileExtention = this.pickone(this.get(poolCollectionKey)[this.pickone(typeRange)]);
        return (fileName + '.' + fileExtention);
    };

    var data = {

        firstNames: {
            "male": {
                "en": ["James", "John", "Robert", "Michael", "William", "David", "Richard", "Joseph", "Charles", "Thomas", "Christopher", "Daniel", "Matthew", "George", "Donald", "Anthony", "Paul", "Mark", "Edward", "Steven", "Kenneth", "Andrew", "Brian", "Joshua", "Kevin", "Ronald", "Timothy", "Jason", "Jeffrey", "Frank", "Gary", "Ryan", "Nicholas", "Eric", "Stephen", "Jacob", "Larry", "Jonathan", "Scott", "Raymond", "Justin", "Brandon", "Gregory", "Samuel", "Benjamin", "Patrick", "Jack", "Henry", "Walter", "Dennis", "Jerry", "Alexander", "Peter", "Tyler", "Douglas", "Harold", "Aaron", "Jose", "Adam", "Arthur", "Zachary", "Carl", "Nathan", "Albert", "Kyle", "Lawrence", "Joe", "Willie", "Gerald", "Roger", "Keith", "Jeremy", "Terry", "Harry", "Ralph", "Sean", "Jesse", "Roy", "Louis", "Billy", "Austin", "Bruce", "Eugene", "Christian", "Bryan", "Wayne", "Russell", "Howard", "Fred", "Ethan", "Jordan", "Philip", "Alan", "Juan", "Randy", "Vincent", "Bobby", "Dylan", "Johnny", "Phillip", "Victor", "Clarence", "Ernest", "Martin", "Craig", "Stanley", "Shawn", "Travis", "Bradley", "Leonard", "Earl", "Gabriel", "Jimmy", "Francis", "Todd", "Noah", "Danny", "Dale", "Cody", "Carlos", "Allen", "Frederick", "Logan", "Curtis", "Alex", "Joel", "Luis", "Norman", "Marvin", "Glenn", "Tony", "Nathaniel", "Rodney", "Melvin", "Alfred", "Steve", "Cameron", "Chad", "Edwin", "Caleb", "Evan", "Antonio", "Lee", "Herbert", "Jeffery", "Isaac", "Derek", "Ricky", "Marcus", "Theodore", "Elijah", "Luke", "Jesus", "Eddie", "Troy", "Mike", "Dustin", "Ray", "Adrian", "Bernard", "Leroy", "Angel", "Randall", "Wesley", "Ian", "Jared", "Mason", "Hunter", "Calvin", "Oscar", "Clifford", "Jay", "Shane", "Ronnie", "Barry", "Lucas", "Corey", "Manuel", "Leo", "Tommy", "Warren", "Jackson", "Isaiah", "Connor", "Don", "Dean", "Jon", "Julian", "Miguel", "Bill", "Lloyd", "Charlie", "Mitchell", "Leon", "Jerome", "Darrell", "Jeremiah", "Alvin", "Brett", "Seth", "Floyd", "Jim", "Blake", "Micheal", "Gordon", "Trevor", "Lewis", "Erik", "Edgar", "Vernon", "Devin", "Gavin", "Jayden", "Chris", "Clyde", "Tom", "Derrick", "Mario", "Brent", "Marc", "Herman", "Chase", "Dominic", "Ricardo", "Franklin", "Maurice", "Max", "Aiden", "Owen", "Lester", "Gilbert", "Elmer", "Gene", "Francisco", "Glen", "Cory", "Garrett", "Clayton", "Sam", "Jorge", "Chester", "Alejandro", "Jeff", "Harvey", "Milton", "Cole", "Ivan", "Andre", "Duane", "Landon"],
                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0163
                "it": ["Adolfo", "Alberto", "Aldo", "Alessandro", "Alessio", "Alfredo", "Alvaro", "Andrea", "Angelo", "Angiolo", "Antonino", "Antonio", "Attilio", "Benito", "Bernardo", "Bruno", "Carlo", "Cesare", "Christian", "Claudio", "Corrado", "Cosimo", "Cristian", "Cristiano", "Daniele", "Dario", "David", "Davide", "Diego", "Dino", "Domenico", "Duccio", "Edoardo", "Elia", "Elio", "Emanuele", "Emiliano", "Emilio", "Enrico", "Enzo", "Ettore", "Fabio", "Fabrizio", "Federico", "Ferdinando", "Fernando", "Filippo", "Francesco", "Franco", "Gabriele", "Giacomo", "Giampaolo", "Giampiero", "Giancarlo", "Gianfranco", "Gianluca", "Gianmarco", "Gianni", "Gino", "Giorgio", "Giovanni", "Giuliano", "Giulio", "Giuseppe", "Graziano", "Gregorio", "Guido", "Iacopo", "Jacopo", "Lapo", "Leonardo", "Lorenzo", "Luca", "Luciano", "Luigi", "Manuel", "Marcello", "Marco", "Marino", "Mario", "Massimiliano", "Massimo", "Matteo", "Mattia", "Maurizio", "Mauro", "Michele", "Mirko", "Mohamed", "Nello", "Neri", "Niccolò", "Nicola", "Osvaldo", "Otello", "Paolo", "Pier Luigi", "Piero", "Pietro", "Raffaele", "Remo", "Renato", "Renzo", "Riccardo", "Roberto", "Rolando", "Romano", "Salvatore", "Samuele", "Sandro", "Sergio", "Silvano", "Simone", "Stefano", "Thomas", "Tommaso", "Ubaldo", "Ugo", "Umberto", "Valerio", "Valter", "Vasco", "Vincenzo", "Vittorio"]
            },
            "female": {
                "en": ["Mary", "Emma", "Elizabeth", "Minnie", "Margaret", "Ida", "Alice", "Bertha", "Sarah", "Annie", "Clara", "Ella", "Florence", "Cora", "Martha", "Laura", "Nellie", "Grace", "Carrie", "Maude", "Mabel", "Bessie", "Jennie", "Gertrude", "Julia", "Hattie", "Edith", "Mattie", "Rose", "Catherine", "Lillian", "Ada", "Lillie", "Helen", "Jessie", "Louise", "Ethel", "Lula", "Myrtle", "Eva", "Frances", "Lena", "Lucy", "Edna", "Maggie", "Pearl", "Daisy", "Fannie", "Josephine", "Dora", "Rosa", "Katherine", "Agnes", "Marie", "Nora", "May", "Mamie", "Blanche", "Stella", "Ellen", "Nancy", "Effie", "Sallie", "Nettie", "Della", "Lizzie", "Flora", "Susie", "Maud", "Mae", "Etta", "Harriet", "Sadie", "Caroline", "Katie", "Lydia", "Elsie", "Kate", "Susan", "Mollie", "Alma", "Addie", "Georgia", "Eliza", "Lulu", "Nannie", "Lottie", "Amanda", "Belle", "Charlotte", "Rebecca", "Ruth", "Viola", "Olive", "Amelia", "Hannah", "Jane", "Virginia", "Emily", "Matilda", "Irene", "Kathryn", "Esther", "Willie", "Henrietta", "Ollie", "Amy", "Rachel", "Sara", "Estella", "Theresa", "Augusta", "Ora", "Pauline", "Josie", "Lola", "Sophia", "Leona", "Anne", "Mildred", "Ann", "Beulah", "Callie", "Lou", "Delia", "Eleanor", "Barbara", "Iva", "Louisa", "Maria", "Mayme", "Evelyn", "Estelle", "Nina", "Betty", "Marion", "Bettie", "Dorothy", "Luella", "Inez", "Lela", "Rosie", "Allie", "Millie", "Janie", "Cornelia", "Victoria", "Ruby", "Winifred", "Alta", "Celia", "Christine", "Beatrice", "Birdie", "Harriett", "Mable", "Myra", "Sophie", "Tillie", "Isabel", "Sylvia", "Carolyn", "Isabelle", "Leila", "Sally", "Ina", "Essie", "Bertie", "Nell", "Alberta", "Katharine", "Lora", "Rena", "Mina", "Rhoda", "Mathilda", "Abbie", "Eula", "Dollie", "Hettie", "Eunice", "Fanny", "Ola", "Lenora", "Adelaide", "Christina", "Lelia", "Nelle", "Sue", "Johanna", "Lilly", "Lucinda", "Minerva", "Lettie", "Roxie", "Cynthia", "Helena", "Hilda", "Hulda", "Bernice", "Genevieve", "Jean", "Cordelia", "Marian", "Francis", "Jeanette", "Adeline", "Gussie", "Leah", "Lois", "Lura", "Mittie", "Hallie", "Isabella", "Olga", "Phoebe", "Teresa", "Hester", "Lida", "Lina", "Winnie", "Claudia", "Marguerite", "Vera", "Cecelia", "Bess", "Emilie", "John", "Rosetta", "Verna", "Myrtie", "Cecilia", "Elva", "Olivia", "Ophelia", "Georgie", "Elnora", "Violet", "Adele", "Lily", "Linnie", "Loretta", "Madge", "Polly", "Virgie", "Eugenia", "Lucile", "Lucille", "Mabelle", "Rosalie"],
                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0162
                "it": ["Ada", "Adriana", "Alessandra", "Alessia", "Alice", "Angela", "Anna", "Anna Maria", "Annalisa", "Annita", "Annunziata", "Antonella", "Arianna", "Asia", "Assunta", "Aurora", "Barbara", "Beatrice", "Benedetta", "Bianca", "Bruna", "Camilla", "Carla", "Carlotta", "Carmela", "Carolina", "Caterina", "Catia", "Cecilia", "Chiara", "Cinzia", "Clara", "Claudia", "Costanza", "Cristina", "Daniela", "Debora", "Diletta", "Dina", "Donatella", "Elena", "Eleonora", "Elisa", "Elisabetta", "Emanuela", "Emma", "Eva", "Federica", "Fernanda", "Fiorella", "Fiorenza", "Flora", "Franca", "Francesca", "Gabriella", "Gaia", "Gemma", "Giada", "Gianna", "Gina", "Ginevra", "Giorgia", "Giovanna", "Giulia", "Giuliana", "Giuseppa", "Giuseppina", "Grazia", "Graziella", "Greta", "Ida", "Ilaria", "Ines", "Iolanda", "Irene", "Irma", "Isabella", "Jessica", "Laura", "Leda", "Letizia", "Licia", "Lidia", "Liliana", "Lina", "Linda", "Lisa", "Livia", "Loretta", "Luana", "Lucia", "Luciana", "Lucrezia", "Luisa", "Manuela", "Mara", "Marcella", "Margherita", "Maria", "Maria Cristina", "Maria Grazia", "Maria Luisa", "Maria Pia", "Maria Teresa", "Marina", "Marisa", "Marta", "Martina", "Marzia", "Matilde", "Melissa", "Michela", "Milena", "Mirella", "Monica", "Natalina", "Nella", "Nicoletta", "Noemi", "Olga", "Paola", "Patrizia", "Piera", "Pierina", "Raffaella", "Rebecca", "Renata", "Rina", "Rita", "Roberta", "Rosa", "Rosanna", "Rossana", "Rossella", "Sabrina", "Sandra", "Sara", "Serena", "Silvana", "Silvia", "Simona", "Simonetta", "Sofia", "Sonia", "Stefania", "Susanna", "Teresa", "Tina", "Tiziana", "Tosca", "Valentina", "Valeria", "Vanda", "Vanessa", "Vanna", "Vera", "Veronica", "Vilma", "Viola", "Virginia", "Vittoria"]
            }
        },

        lastNames: {
            "en": ['Smith', 'Johnson', 'Williams', 'Jones', 'Brown', 'Davis', 'Miller', 'Wilson', 'Moore', 'Taylor', 'Anderson', 'Thomas', 'Jackson', 'White', 'Harris', 'Martin', 'Thompson', 'Garcia', 'Martinez', 'Robinson', 'Clark', 'Rodriguez', 'Lewis', 'Lee', 'Walker', 'Hall', 'Allen', 'Young', 'Hernandez', 'King', 'Wright', 'Lopez', 'Hill', 'Scott', 'Green', 'Adams', 'Baker', 'Gonzalez', 'Nelson', 'Carter', 'Mitchell', 'Perez', 'Roberts', 'Turner', 'Phillips', 'Campbell', 'Parker', 'Evans', 'Edwards', 'Collins', 'Stewart', 'Sanchez', 'Morris', 'Rogers', 'Reed', 'Cook', 'Morgan', 'Bell', 'Murphy', 'Bailey', 'Rivera', 'Cooper', 'Richardson', 'Cox', 'Howard', 'Ward', 'Torres', 'Peterson', 'Gray', 'Ramirez', 'James', 'Watson', 'Brooks', 'Kelly', 'Sanders', 'Price', 'Bennett', 'Wood', 'Barnes', 'Ross', 'Henderson', 'Coleman', 'Jenkins', 'Perry', 'Powell', 'Long', 'Patterson', 'Hughes', 'Flores', 'Washington', 'Butler', 'Simmons', 'Foster', 'Gonzales', 'Bryant', 'Alexander', 'Russell', 'Griffin', 'Diaz', 'Hayes', 'Myers', 'Ford', 'Hamilton', 'Graham', 'Sullivan', 'Wallace', 'Woods', 'Cole', 'West', 'Jordan', 'Owens', 'Reynolds', 'Fisher', 'Ellis', 'Harrison', 'Gibson', 'McDonald', 'Cruz', 'Marshall', 'Ortiz', 'Gomez', 'Murray', 'Freeman', 'Wells', 'Webb', 'Simpson', 'Stevens', 'Tucker', 'Porter', 'Hunter', 'Hicks', 'Crawford', 'Henry', 'Boyd', 'Mason', 'Morales', 'Kennedy', 'Warren', 'Dixon', 'Ramos', 'Reyes', 'Burns', 'Gordon', 'Shaw', 'Holmes', 'Rice', 'Robertson', 'Hunt', 'Black', 'Daniels', 'Palmer', 'Mills', 'Nichols', 'Grant', 'Knight', 'Ferguson', 'Rose', 'Stone', 'Hawkins', 'Dunn', 'Perkins', 'Hudson', 'Spencer', 'Gardner', 'Stephens', 'Payne', 'Pierce', 'Berry', 'Matthews', 'Arnold', 'Wagner', 'Willis', 'Ray', 'Watkins', 'Olson', 'Carroll', 'Duncan', 'Snyder', 'Hart', 'Cunningham', 'Bradley', 'Lane', 'Andrews', 'Ruiz', 'Harper', 'Fox', 'Riley', 'Armstrong', 'Carpenter', 'Weaver', 'Greene', 'Lawrence', 'Elliott', 'Chavez', 'Sims', 'Austin', 'Peters', 'Kelley', 'Franklin', 'Lawson', 'Fields', 'Gutierrez', 'Ryan', 'Schmidt', 'Carr', 'Vasquez', 'Castillo', 'Wheeler', 'Chapman', 'Oliver', 'Montgomery', 'Richards', 'Williamson', 'Johnston', 'Banks', 'Meyer', 'Bishop', 'McCoy', 'Howell', 'Alvarez', 'Morrison', 'Hansen', 'Fernandez', 'Garza', 'Harvey', 'Little', 'Burton', 'Stanley', 'Nguyen', 'George', 'Jacobs', 'Reid', 'Kim', 'Fuller', 'Lynch', 'Dean', 'Gilbert', 'Garrett', 'Romero', 'Welch', 'Larson', 'Frazier', 'Burke', 'Hanson', 'Day', 'Mendoza', 'Moreno', 'Bowman', 'Medina', 'Fowler', 'Brewer', 'Hoffman', 'Carlson', 'Silva', 'Pearson', 'Holland', 'Douglas', 'Fleming', 'Jensen', 'Vargas', 'Byrd', 'Davidson', 'Hopkins', 'May', 'Terry', 'Herrera', 'Wade', 'Soto', 'Walters', 'Curtis', 'Neal', 'Caldwell', 'Lowe', 'Jennings', 'Barnett', 'Graves', 'Jimenez', 'Horton', 'Shelton', 'Barrett', 'Obrien', 'Castro', 'Sutton', 'Gregory', 'McKinney', 'Lucas', 'Miles', 'Craig', 'Rodriquez', 'Chambers', 'Holt', 'Lambert', 'Fletcher', 'Watts', 'Bates', 'Hale', 'Rhodes', 'Pena', 'Beck', 'Newman', 'Haynes', 'McDaniel', 'Mendez', 'Bush', 'Vaughn', 'Parks', 'Dawson', 'Santiago', 'Norris', 'Hardy', 'Love', 'Steele', 'Curry', 'Powers', 'Schultz', 'Barker', 'Guzman', 'Page', 'Munoz', 'Ball', 'Keller', 'Chandler', 'Weber', 'Leonard', 'Walsh', 'Lyons', 'Ramsey', 'Wolfe', 'Schneider', 'Mullins', 'Benson', 'Sharp', 'Bowen', 'Daniel', 'Barber', 'Cummings', 'Hines', 'Baldwin', 'Griffith', 'Valdez', 'Hubbard', 'Salazar', 'Reeves', 'Warner', 'Stevenson', 'Burgess', 'Santos', 'Tate', 'Cross', 'Garner', 'Mann', 'Mack', 'Moss', 'Thornton', 'Dennis', 'McGee', 'Farmer', 'Delgado', 'Aguilar', 'Vega', 'Glover', 'Manning', 'Cohen', 'Harmon', 'Rodgers', 'Robbins', 'Newton', 'Todd', 'Blair', 'Higgins', 'Ingram', 'Reese', 'Cannon', 'Strickland', 'Townsend', 'Potter', 'Goodwin', 'Walton', 'Rowe', 'Hampton', 'Ortega', 'Patton', 'Swanson', 'Joseph', 'Francis', 'Goodman', 'Maldonado', 'Yates', 'Becker', 'Erickson', 'Hodges', 'Rios', 'Conner', 'Adkins', 'Webster', 'Norman', 'Malone', 'Hammond', 'Flowers', 'Cobb', 'Moody', 'Quinn', 'Blake', 'Maxwell', 'Pope', 'Floyd', 'Osborne', 'Paul', 'McCarthy', 'Guerrero', 'Lindsey', 'Estrada', 'Sandoval', 'Gibbs', 'Tyler', 'Gross', 'Fitzgerald', 'Stokes', 'Doyle', 'Sherman', 'Saunders', 'Wise', 'Colon', 'Gill', 'Alvarado', 'Greer', 'Padilla', 'Simon', 'Waters', 'Nunez', 'Ballard', 'Schwartz', 'McBride', 'Houston', 'Christensen', 'Klein', 'Pratt', 'Briggs', 'Parsons', 'McLaughlin', 'Zimmerman', 'French', 'Buchanan', 'Moran', 'Copeland', 'Roy', 'Pittman', 'Brady', 'McCormick', 'Holloway', 'Brock', 'Poole', 'Frank', 'Logan', 'Owen', 'Bass', 'Marsh', 'Drake', 'Wong', 'Jefferson', 'Park', 'Morton', 'Abbott', 'Sparks', 'Patrick', 'Norton', 'Huff', 'Clayton', 'Massey', 'Lloyd', 'Figueroa', 'Carson', 'Bowers', 'Roberson', 'Barton', 'Tran', 'Lamb', 'Harrington', 'Casey', 'Boone', 'Cortez', 'Clarke', 'Mathis', 'Singleton', 'Wilkins', 'Cain', 'Bryan', 'Underwood', 'Hogan', 'McKenzie', 'Collier', 'Luna', 'Phelps', 'McGuire', 'Allison', 'Bridges', 'Wilkerson', 'Nash', 'Summers', 'Atkins'],
                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0164 (first 1000)
            "it": ["Acciai", "Aglietti", "Agostini", "Agresti", "Ahmed", "Aiazzi", "Albanese", "Alberti", "Alessi", "Alfani", "Alinari", "Alterini", "Amato", "Ammannati", "Ancillotti", "Andrei", "Andreini", "Andreoni", "Angeli", "Anichini", "Antonelli", "Antonini", "Arena", "Ariani", "Arnetoli", "Arrighi", "Baccani", "Baccetti", "Bacci", "Bacherini", "Badii", "Baggiani", "Baglioni", "Bagni", "Bagnoli", "Baldassini", "Baldi", "Baldini", "Ballerini", "Balli", "Ballini", "Balloni", "Bambi", "Banchi", "Bandinelli", "Bandini", "Bani", "Barbetti", "Barbieri", "Barchielli", "Bardazzi", "Bardelli", "Bardi", "Barducci", "Bargellini", "Bargiacchi", "Barni", "Baroncelli", "Baroncini", "Barone", "Baroni", "Baronti", "Bartalesi", "Bartoletti", "Bartoli", "Bartolini", "Bartoloni", "Bartolozzi", "Basagni", "Basile", "Bassi", "Batacchi", "Battaglia", "Battaglini", "Bausi", "Becagli", "Becattini", "Becchi", "Becucci", "Bellandi", "Bellesi", "Belli", "Bellini", "Bellucci", "Bencini", "Benedetti", "Benelli", "Beni", "Benini", "Bensi", "Benucci", "Benvenuti", "Berlincioni", "Bernacchioni", "Bernardi", "Bernardini", "Berni", "Bernini", "Bertelli", "Berti", "Bertini", "Bessi", "Betti", "Bettini", "Biagi", "Biagini", "Biagioni", "Biagiotti", "Biancalani", "Bianchi", "Bianchini", "Bianco", "Biffoli", "Bigazzi", "Bigi", "Biliotti", "Billi", "Binazzi", "Bindi", "Bini", "Biondi", "Bizzarri", "Bocci", "Bogani", "Bolognesi", "Bonaiuti", "Bonanni", "Bonciani", "Boncinelli", "Bondi", "Bonechi", "Bongini", "Boni", "Bonini", "Borchi", "Boretti", "Borghi", "Borghini", "Borgioli", "Borri", "Borselli", "Boschi", "Bottai", "Bracci", "Braccini", "Brandi", "Braschi", "Bravi", "Brazzini", "Breschi", "Brilli", "Brizzi", "Brogelli", "Brogi", "Brogioni", "Brunelli", "Brunetti", "Bruni", "Bruno", "Brunori", "Bruschi", "Bucci", "Bucciarelli", "Buccioni", "Bucelli", "Bulli", "Burberi", "Burchi", "Burgassi", "Burroni", "Bussotti", "Buti", "Caciolli", "Caiani", "Calabrese", "Calamai", "Calamandrei", "Caldini", "Calo'", "Calonaci", "Calosi", "Calvelli", "Cambi", "Camiciottoli", "Cammelli", "Cammilli", "Campolmi", "Cantini", "Capanni", "Capecchi", "Caponi", "Cappelletti", "Cappelli", "Cappellini", "Cappugi", "Capretti", "Caputo", "Carbone", "Carboni", "Cardini", "Carlesi", "Carletti", "Carli", "Caroti", "Carotti", "Carrai", "Carraresi", "Carta", "Caruso", "Casalini", "Casati", "Caselli", "Casini", "Castagnoli", "Castellani", "Castelli", "Castellucci", "Catalano", "Catarzi", "Catelani", "Cavaciocchi", "Cavallaro", "Cavallini", "Cavicchi", "Cavini", "Ceccarelli", "Ceccatelli", "Ceccherelli", "Ceccherini", "Cecchi", "Cecchini", "Cecconi", "Cei", "Cellai", "Celli", "Cellini", "Cencetti", "Ceni", "Cenni", "Cerbai", "Cesari", "Ceseri", "Checcacci", "Checchi", "Checcucci", "Cheli", "Chellini", "Chen", "Cheng", "Cherici", "Cherubini", "Chiaramonti", "Chiarantini", "Chiarelli", "Chiari", "Chiarini", "Chiarugi", "Chiavacci", "Chiesi", "Chimenti", "Chini", "Chirici", "Chiti", "Ciabatti", "Ciampi", "Cianchi", "Cianfanelli", "Cianferoni", "Ciani", "Ciapetti", "Ciappi", "Ciardi", "Ciatti", "Cicali", "Ciccone", "Cinelli", "Cini", "Ciobanu", "Ciolli", "Cioni", "Cipriani", "Cirillo", "Cirri", "Ciucchi", "Ciuffi", "Ciulli", "Ciullini", "Clemente", "Cocchi", "Cognome", "Coli", "Collini", "Colombo", "Colzi", "Comparini", "Conforti", "Consigli", "Conte", "Conti", "Contini", "Coppini", "Coppola", "Corsi", "Corsini", "Corti", "Cortini", "Cosi", "Costa", "Costantini", "Costantino", "Cozzi", "Cresci", "Crescioli", "Cresti", "Crini", "Curradi", "D'Agostino", "D'Alessandro", "D'Amico", "D'Angelo", "Daddi", "Dainelli", "Dallai", "Danti", "Davitti", "De Angelis", "De Luca", "De Marco", "De Rosa", "De Santis", "De Simone", "De Vita", "Degl'Innocenti", "Degli Innocenti", "Dei", "Del Lungo", "Del Re", "Di Marco", "Di Stefano", "Dini", "Diop", "Dobre", "Dolfi", "Donati", "Dondoli", "Dong", "Donnini", "Ducci", "Dumitru", "Ermini", "Esposito", "Evangelisti", "Fabbri", "Fabbrini", "Fabbrizzi", "Fabbroni", "Fabbrucci", "Fabiani", "Facchini", "Faggi", "Fagioli", "Failli", "Faini", "Falciani", "Falcini", "Falcone", "Fallani", "Falorni", "Falsini", "Falugiani", "Fancelli", "Fanelli", "Fanetti", "Fanfani", "Fani", "Fantappie'", "Fantechi", "Fanti", "Fantini", "Fantoni", "Farina", "Fattori", "Favilli", "Fedi", "Fei", "Ferrante", "Ferrara", "Ferrari", "Ferraro", "Ferretti", "Ferri", "Ferrini", "Ferroni", "Fiaschi", "Fibbi", "Fiesoli", "Filippi", "Filippini", "Fini", "Fioravanti", "Fiore", "Fiorentini", "Fiorini", "Fissi", "Focardi", "Foggi", "Fontana", "Fontanelli", "Fontani", "Forconi", "Formigli", "Forte", "Forti", "Fortini", "Fossati", "Fossi", "Francalanci", "Franceschi", "Franceschini", "Franchi", "Franchini", "Franci", "Francini", "Francioni", "Franco", "Frassineti", "Frati", "Fratini", "Frilli", "Frizzi", "Frosali", "Frosini", "Frullini", "Fusco", "Fusi", "Gabbrielli", "Gabellini", "Gagliardi", "Galanti", "Galardi", "Galeotti", "Galletti", "Galli", "Gallo", "Gallori", "Gambacciani", "Gargani", "Garofalo", "Garuglieri", "Gashi", "Gasperini", "Gatti", "Gelli", "Gensini", "Gentile", "Gentili", "Geri", "Gerini", "Gheri", "Ghini", "Giachetti", "Giachi", "Giacomelli", "Gianassi", "Giani", "Giannelli", "Giannetti", "Gianni", "Giannini", "Giannoni", "Giannotti", "Giannozzi", "Gigli", "Giordano", "Giorgetti", "Giorgi", "Giovacchini", "Giovannelli", "Giovannetti", "Giovannini", "Giovannoni", "Giuliani", "Giunti", "Giuntini", "Giusti", "Gonnelli", "Goretti", "Gori", "Gradi", "Gramigni", "Grassi", "Grasso", "Graziani", "Grazzini", "Greco", "Grifoni", "Grillo", "Grimaldi", "Grossi", "Gualtieri", "Guarducci", "Guarino", "Guarnieri", "Guasti", "Guerra", "Guerri", "Guerrini", "Guidi", "Guidotti", "He", "Hoxha", "Hu", "Huang", "Iandelli", "Ignesti", "Innocenti", "Jin", "La Rosa", "Lai", "Landi", "Landini", "Lanini", "Lapi", "Lapini", "Lari", "Lascialfari", "Lastrucci", "Latini", "Lazzeri", "Lazzerini", "Lelli", "Lenzi", "Leonardi", "Leoncini", "Leone", "Leoni", "Lepri", "Li", "Liao", "Lin", "Linari", "Lippi", "Lisi", "Livi", "Lombardi", "Lombardini", "Lombardo", "Longo", "Lopez", "Lorenzi", "Lorenzini", "Lorini", "Lotti", "Lu", "Lucchesi", "Lucherini", "Lunghi", "Lupi", "Madiai", "Maestrini", "Maffei", "Maggi", "Maggini", "Magherini", "Magini", "Magnani", "Magnelli", "Magni", "Magnolfi", "Magrini", "Malavolti", "Malevolti", "Manca", "Mancini", "Manetti", "Manfredi", "Mangani", "Mannelli", "Manni", "Mannini", "Mannucci", "Manuelli", "Manzini", "Marcelli", "Marchese", "Marchetti", "Marchi", "Marchiani", "Marchionni", "Marconi", "Marcucci", "Margheri", "Mari", "Mariani", "Marilli", "Marinai", "Marinari", "Marinelli", "Marini", "Marino", "Mariotti", "Marsili", "Martelli", "Martinelli", "Martini", "Martino", "Marzi", "Masi", "Masini", "Masoni", "Massai", "Materassi", "Mattei", "Matteini", "Matteucci", "Matteuzzi", "Mattioli", "Mattolini", "Matucci", "Mauro", "Mazzanti", "Mazzei", "Mazzetti", "Mazzi", "Mazzini", "Mazzocchi", "Mazzoli", "Mazzoni", "Mazzuoli", "Meacci", "Mecocci", "Meini", "Melani", "Mele", "Meli", "Mengoni", "Menichetti", "Meoni", "Merlini", "Messeri", "Messina", "Meucci", "Miccinesi", "Miceli", "Micheli", "Michelini", "Michelozzi", "Migliori", "Migliorini", "Milani", "Miniati", "Misuri", "Monaco", "Montagnani", "Montagni", "Montanari", "Montelatici", "Monti", "Montigiani", "Montini", "Morandi", "Morandini", "Morelli", "Moretti", "Morganti", "Mori", "Morini", "Moroni", "Morozzi", "Mugnai", "Mugnaini", "Mustafa", "Naldi", "Naldini", "Nannelli", "Nanni", "Nannini", "Nannucci", "Nardi", "Nardini", "Nardoni", "Natali", "Ndiaye", "Nencetti", "Nencini", "Nencioni", "Neri", "Nesi", "Nesti", "Niccolai", "Niccoli", "Niccolini", "Nigi", "Nistri", "Nocentini", "Noferini", "Novelli", "Nucci", "Nuti", "Nutini", "Oliva", "Olivieri", "Olmi", "Orlandi", "Orlandini", "Orlando", "Orsini", "Ortolani", "Ottanelli", "Pacciani", "Pace", "Paci", "Pacini", "Pagani", "Pagano", "Paggetti", "Pagliai", "Pagni", "Pagnini", "Paladini", "Palagi", "Palchetti", "Palloni", "Palmieri", "Palumbo", "Pampaloni", "Pancani", "Pandolfi", "Pandolfini", "Panerai", "Panichi", "Paoletti", "Paoli", "Paolini", "Papi", "Papini", "Papucci", "Parenti", "Parigi", "Parisi", "Parri", "Parrini", "Pasquini", "Passeri", "Pecchioli", "Pecorini", "Pellegrini", "Pepi", "Perini", "Perrone", "Peruzzi", "Pesci", "Pestelli", "Petri", "Petrini", "Petrucci", "Pettini", "Pezzati", "Pezzatini", "Piani", "Piazza", "Piazzesi", "Piazzini", "Piccardi", "Picchi", "Piccini", "Piccioli", "Pieraccini", "Pieraccioni", "Pieralli", "Pierattini", "Pieri", "Pierini", "Pieroni", "Pietrini", "Pini", "Pinna", "Pinto", "Pinzani", "Pinzauti", "Piras", "Pisani", "Pistolesi", "Poggesi", "Poggi", "Poggiali", "Poggiolini", "Poli", "Pollastri", "Porciani", "Pozzi", "Pratellesi", "Pratesi", "Prosperi", "Pruneti", "Pucci", "Puccini", "Puccioni", "Pugi", "Pugliese", "Puliti", "Querci", "Quercioli", "Raddi", "Radu", "Raffaelli", "Ragazzini", "Ranfagni", "Ranieri", "Rastrelli", "Raugei", "Raveggi", "Renai", "Renzi", "Rettori", "Ricci", "Ricciardi", "Ridi", "Ridolfi", "Rigacci", "Righi", "Righini", "Rinaldi", "Risaliti", "Ristori", "Rizzo", "Rocchi", "Rocchini", "Rogai", "Romagnoli", "Romanelli", "Romani", "Romano", "Romei", "Romeo", "Romiti", "Romoli", "Romolini", "Rontini", "Rosati", "Roselli", "Rosi", "Rossetti", "Rossi", "Rossini", "Rovai", "Ruggeri", "Ruggiero", "Russo", "Sabatini", "Saccardi", "Sacchetti", "Sacchi", "Sacco", "Salerno", "Salimbeni", "Salucci", "Salvadori", "Salvestrini", "Salvi", "Salvini", "Sanesi", "Sani", "Sanna", "Santi", "Santini", "Santoni", "Santoro", "Santucci", "Sardi", "Sarri", "Sarti", "Sassi", "Sbolci", "Scali", "Scarpelli", "Scarselli", "Scopetani", "Secci", "Selvi", "Senatori", "Senesi", "Serafini", "Sereni", "Serra", "Sestini", "Sguanci", "Sieni", "Signorini", "Silvestri", "Simoncini", "Simonetti", "Simoni", "Singh", "Sodi", "Soldi", "Somigli", "Sorbi", "Sorelli", "Sorrentino", "Sottili", "Spina", "Spinelli", "Staccioli", "Staderini", "Stefanelli", "Stefani", "Stefanini", "Stella", "Susini", "Tacchi", "Tacconi", "Taddei", "Tagliaferri", "Tamburini", "Tanganelli", "Tani", "Tanini", "Tapinassi", "Tarchi", "Tarchiani", "Targioni", "Tassi", "Tassini", "Tempesti", "Terzani", "Tesi", "Testa", "Testi", "Tilli", "Tinti", "Tirinnanzi", "Toccafondi", "Tofanari", "Tofani", "Tognaccini", "Tonelli", "Tonini", "Torelli", "Torrini", "Tosi", "Toti", "Tozzi", "Trambusti", "Trapani", "Tucci", "Turchi", "Ugolini", "Ulivi", "Valente", "Valenti", "Valentini", "Vangelisti", "Vanni", "Vannini", "Vannoni", "Vannozzi", "Vannucchi", "Vannucci", "Ventura", "Venturi", "Venturini", "Vestri", "Vettori", "Vichi", "Viciani", "Vieri", "Vigiani", "Vignoli", "Vignolini", "Vignozzi", "Villani", "Vinci", "Visani", "Vitale", "Vitali", "Viti", "Viviani", "Vivoli", "Volpe", "Volpi", "Wang", "Wu", "Xu", "Yang", "Ye", "Zagli", "Zani", "Zanieri", "Zanobini", "Zecchi", "Zetti", "Zhang", "Zheng", "Zhou", "Zhu", "Zingoni", "Zini", "Zoppi"]
        },

        // Data taken from https://github.com/umpirsky/country-list/blob/master/data/en_US/country.json
        countries: [{"name":"Afghanistan","abbreviation":"AF"},{"name":"Åland Islands","abbreviation":"AX"},{"name":"Albania","abbreviation":"AL"},{"name":"Algeria","abbreviation":"DZ"},{"name":"American Samoa","abbreviation":"AS"},{"name":"Andorra","abbreviation":"AD"},{"name":"Angola","abbreviation":"AO"},{"name":"Anguilla","abbreviation":"AI"},{"name":"Antarctica","abbreviation":"AQ"},{"name":"Antigua & Barbuda","abbreviation":"AG"},{"name":"Argentina","abbreviation":"AR"},{"name":"Armenia","abbreviation":"AM"},{"name":"Aruba","abbreviation":"AW"},{"name":"Ascension Island","abbreviation":"AC"},{"name":"Australia","abbreviation":"AU"},{"name":"Austria","abbreviation":"AT"},{"name":"Azerbaijan","abbreviation":"AZ"},{"name":"Bahamas","abbreviation":"BS"},{"name":"Bahrain","abbreviation":"BH"},{"name":"Bangladesh","abbreviation":"BD"},{"name":"Barbados","abbreviation":"BB"},{"name":"Belarus","abbreviation":"BY"},{"name":"Belgium","abbreviation":"BE"},{"name":"Belize","abbreviation":"BZ"},{"name":"Benin","abbreviation":"BJ"},{"name":"Bermuda","abbreviation":"BM"},{"name":"Bhutan","abbreviation":"BT"},{"name":"Bolivia","abbreviation":"BO"},{"name":"Bosnia & Herzegovina","abbreviation":"BA"},{"name":"Botswana","abbreviation":"BW"},{"name":"Brazil","abbreviation":"BR"},{"name":"British Indian Ocean Territory","abbreviation":"IO"},{"name":"British Virgin Islands","abbreviation":"VG"},{"name":"Brunei","abbreviation":"BN"},{"name":"Bulgaria","abbreviation":"BG"},{"name":"Burkina Faso","abbreviation":"BF"},{"name":"Burundi","abbreviation":"BI"},{"name":"Cambodia","abbreviation":"KH"},{"name":"Cameroon","abbreviation":"CM"},{"name":"Canada","abbreviation":"CA"},{"name":"Canary Islands","abbreviation":"IC"},{"name":"Cape Verde","abbreviation":"CV"},{"name":"Caribbean Netherlands","abbreviation":"BQ"},{"name":"Cayman Islands","abbreviation":"KY"},{"name":"Central African Republic","abbreviation":"CF"},{"name":"Ceuta & Melilla","abbreviation":"EA"},{"name":"Chad","abbreviation":"TD"},{"name":"Chile","abbreviation":"CL"},{"name":"China","abbreviation":"CN"},{"name":"Christmas Island","abbreviation":"CX"},{"name":"Cocos (Keeling) Islands","abbreviation":"CC"},{"name":"Colombia","abbreviation":"CO"},{"name":"Comoros","abbreviation":"KM"},{"name":"Congo - Brazzaville","abbreviation":"CG"},{"name":"Congo - Kinshasa","abbreviation":"CD"},{"name":"Cook Islands","abbreviation":"CK"},{"name":"Costa Rica","abbreviation":"CR"},{"name":"Côte d'Ivoire","abbreviation":"CI"},{"name":"Croatia","abbreviation":"HR"},{"name":"Cuba","abbreviation":"CU"},{"name":"Curaçao","abbreviation":"CW"},{"name":"Cyprus","abbreviation":"CY"},{"name":"Czech Republic","abbreviation":"CZ"},{"name":"Denmark","abbreviation":"DK"},{"name":"Diego Garcia","abbreviation":"DG"},{"name":"Djibouti","abbreviation":"DJ"},{"name":"Dominica","abbreviation":"DM"},{"name":"Dominican Republic","abbreviation":"DO"},{"name":"Ecuador","abbreviation":"EC"},{"name":"Egypt","abbreviation":"EG"},{"name":"El Salvador","abbreviation":"SV"},{"name":"Equatorial Guinea","abbreviation":"GQ"},{"name":"Eritrea","abbreviation":"ER"},{"name":"Estonia","abbreviation":"EE"},{"name":"Ethiopia","abbreviation":"ET"},{"name":"Falkland Islands","abbreviation":"FK"},{"name":"Faroe Islands","abbreviation":"FO"},{"name":"Fiji","abbreviation":"FJ"},{"name":"Finland","abbreviation":"FI"},{"name":"France","abbreviation":"FR"},{"name":"French Guiana","abbreviation":"GF"},{"name":"French Polynesia","abbreviation":"PF"},{"name":"French Southern Territories","abbreviation":"TF"},{"name":"Gabon","abbreviation":"GA"},{"name":"Gambia","abbreviation":"GM"},{"name":"Georgia","abbreviation":"GE"},{"name":"Germany","abbreviation":"DE"},{"name":"Ghana","abbreviation":"GH"},{"name":"Gibraltar","abbreviation":"GI"},{"name":"Greece","abbreviation":"GR"},{"name":"Greenland","abbreviation":"GL"},{"name":"Grenada","abbreviation":"GD"},{"name":"Guadeloupe","abbreviation":"GP"},{"name":"Guam","abbreviation":"GU"},{"name":"Guatemala","abbreviation":"GT"},{"name":"Guernsey","abbreviation":"GG"},{"name":"Guinea","abbreviation":"GN"},{"name":"Guinea-Bissau","abbreviation":"GW"},{"name":"Guyana","abbreviation":"GY"},{"name":"Haiti","abbreviation":"HT"},{"name":"Honduras","abbreviation":"HN"},{"name":"Hong Kong SAR China","abbreviation":"HK"},{"name":"Hungary","abbreviation":"HU"},{"name":"Iceland","abbreviation":"IS"},{"name":"India","abbreviation":"IN"},{"name":"Indonesia","abbreviation":"ID"},{"name":"Iran","abbreviation":"IR"},{"name":"Iraq","abbreviation":"IQ"},{"name":"Ireland","abbreviation":"IE"},{"name":"Isle of Man","abbreviation":"IM"},{"name":"Israel","abbreviation":"IL"},{"name":"Italy","abbreviation":"IT"},{"name":"Jamaica","abbreviation":"JM"},{"name":"Japan","abbreviation":"JP"},{"name":"Jersey","abbreviation":"JE"},{"name":"Jordan","abbreviation":"JO"},{"name":"Kazakhstan","abbreviation":"KZ"},{"name":"Kenya","abbreviation":"KE"},{"name":"Kiribati","abbreviation":"KI"},{"name":"Kosovo","abbreviation":"XK"},{"name":"Kuwait","abbreviation":"KW"},{"name":"Kyrgyzstan","abbreviation":"KG"},{"name":"Laos","abbreviation":"LA"},{"name":"Latvia","abbreviation":"LV"},{"name":"Lebanon","abbreviation":"LB"},{"name":"Lesotho","abbreviation":"LS"},{"name":"Liberia","abbreviation":"LR"},{"name":"Libya","abbreviation":"LY"},{"name":"Liechtenstein","abbreviation":"LI"},{"name":"Lithuania","abbreviation":"LT"},{"name":"Luxembourg","abbreviation":"LU"},{"name":"Macau SAR China","abbreviation":"MO"},{"name":"Macedonia","abbreviation":"MK"},{"name":"Madagascar","abbreviation":"MG"},{"name":"Malawi","abbreviation":"MW"},{"name":"Malaysia","abbreviation":"MY"},{"name":"Maldives","abbreviation":"MV"},{"name":"Mali","abbreviation":"ML"},{"name":"Malta","abbreviation":"MT"},{"name":"Marshall Islands","abbreviation":"MH"},{"name":"Martinique","abbreviation":"MQ"},{"name":"Mauritania","abbreviation":"MR"},{"name":"Mauritius","abbreviation":"MU"},{"name":"Mayotte","abbreviation":"YT"},{"name":"Mexico","abbreviation":"MX"},{"name":"Micronesia","abbreviation":"FM"},{"name":"Moldova","abbreviation":"MD"},{"name":"Monaco","abbreviation":"MC"},{"name":"Mongolia","abbreviation":"MN"},{"name":"Montenegro","abbreviation":"ME"},{"name":"Montserrat","abbreviation":"MS"},{"name":"Morocco","abbreviation":"MA"},{"name":"Mozambique","abbreviation":"MZ"},{"name":"Myanmar (Burma)","abbreviation":"MM"},{"name":"Namibia","abbreviation":"NA"},{"name":"Nauru","abbreviation":"NR"},{"name":"Nepal","abbreviation":"NP"},{"name":"Netherlands","abbreviation":"NL"},{"name":"New Caledonia","abbreviation":"NC"},{"name":"New Zealand","abbreviation":"NZ"},{"name":"Nicaragua","abbreviation":"NI"},{"name":"Niger","abbreviation":"NE"},{"name":"Nigeria","abbreviation":"NG"},{"name":"Niue","abbreviation":"NU"},{"name":"Norfolk Island","abbreviation":"NF"},{"name":"North Korea","abbreviation":"KP"},{"name":"Northern Mariana Islands","abbreviation":"MP"},{"name":"Norway","abbreviation":"NO"},{"name":"Oman","abbreviation":"OM"},{"name":"Pakistan","abbreviation":"PK"},{"name":"Palau","abbreviation":"PW"},{"name":"Palestinian Territories","abbreviation":"PS"},{"name":"Panama","abbreviation":"PA"},{"name":"Papua New Guinea","abbreviation":"PG"},{"name":"Paraguay","abbreviation":"PY"},{"name":"Peru","abbreviation":"PE"},{"name":"Philippines","abbreviation":"PH"},{"name":"Pitcairn Islands","abbreviation":"PN"},{"name":"Poland","abbreviation":"PL"},{"name":"Portugal","abbreviation":"PT"},{"name":"Puerto Rico","abbreviation":"PR"},{"name":"Qatar","abbreviation":"QA"},{"name":"Réunion","abbreviation":"RE"},{"name":"Romania","abbreviation":"RO"},{"name":"Russia","abbreviation":"RU"},{"name":"Rwanda","abbreviation":"RW"},{"name":"Samoa","abbreviation":"WS"},{"name":"San Marino","abbreviation":"SM"},{"name":"São Tomé and Príncipe","abbreviation":"ST"},{"name":"Saudi Arabia","abbreviation":"SA"},{"name":"Senegal","abbreviation":"SN"},{"name":"Serbia","abbreviation":"RS"},{"name":"Seychelles","abbreviation":"SC"},{"name":"Sierra Leone","abbreviation":"SL"},{"name":"Singapore","abbreviation":"SG"},{"name":"Sint Maarten","abbreviation":"SX"},{"name":"Slovakia","abbreviation":"SK"},{"name":"Slovenia","abbreviation":"SI"},{"name":"Solomon Islands","abbreviation":"SB"},{"name":"Somalia","abbreviation":"SO"},{"name":"South Africa","abbreviation":"ZA"},{"name":"South Georgia & South Sandwich Islands","abbreviation":"GS"},{"name":"South Korea","abbreviation":"KR"},{"name":"South Sudan","abbreviation":"SS"},{"name":"Spain","abbreviation":"ES"},{"name":"Sri Lanka","abbreviation":"LK"},{"name":"St. Barthélemy","abbreviation":"BL"},{"name":"St. Helena","abbreviation":"SH"},{"name":"St. Kitts & Nevis","abbreviation":"KN"},{"name":"St. Lucia","abbreviation":"LC"},{"name":"St. Martin","abbreviation":"MF"},{"name":"St. Pierre & Miquelon","abbreviation":"PM"},{"name":"St. Vincent & Grenadines","abbreviation":"VC"},{"name":"Sudan","abbreviation":"SD"},{"name":"Suriname","abbreviation":"SR"},{"name":"Svalbard & Jan Mayen","abbreviation":"SJ"},{"name":"Swaziland","abbreviation":"SZ"},{"name":"Sweden","abbreviation":"SE"},{"name":"Switzerland","abbreviation":"CH"},{"name":"Syria","abbreviation":"SY"},{"name":"Taiwan","abbreviation":"TW"},{"name":"Tajikistan","abbreviation":"TJ"},{"name":"Tanzania","abbreviation":"TZ"},{"name":"Thailand","abbreviation":"TH"},{"name":"Timor-Leste","abbreviation":"TL"},{"name":"Togo","abbreviation":"TG"},{"name":"Tokelau","abbreviation":"TK"},{"name":"Tonga","abbreviation":"TO"},{"name":"Trinidad & Tobago","abbreviation":"TT"},{"name":"Tristan da Cunha","abbreviation":"TA"},{"name":"Tunisia","abbreviation":"TN"},{"name":"Turkey","abbreviation":"TR"},{"name":"Turkmenistan","abbreviation":"TM"},{"name":"Turks & Caicos Islands","abbreviation":"TC"},{"name":"Tuvalu","abbreviation":"TV"},{"name":"U.S. Outlying Islands","abbreviation":"UM"},{"name":"U.S. Virgin Islands","abbreviation":"VI"},{"name":"Uganda","abbreviation":"UG"},{"name":"Ukraine","abbreviation":"UA"},{"name":"United Arab Emirates","abbreviation":"AE"},{"name":"United Kingdom","abbreviation":"GB"},{"name":"United States","abbreviation":"US"},{"name":"Uruguay","abbreviation":"UY"},{"name":"Uzbekistan","abbreviation":"UZ"},{"name":"Vanuatu","abbreviation":"VU"},{"name":"Vatican City","abbreviation":"VA"},{"name":"Venezuela","abbreviation":"VE"},{"name":"Vietnam","abbreviation":"VN"},{"name":"Wallis & Futuna","abbreviation":"WF"},{"name":"Western Sahara","abbreviation":"EH"},{"name":"Yemen","abbreviation":"YE"},{"name":"Zambia","abbreviation":"ZM"},{"name":"Zimbabwe","abbreviation":"ZW"}],

		counties: {
            // Data taken from http://www.downloadexcelfiles.com/gb_en/download-excel-file-list-counties-uk
            "uk": [
                {name: 'Bath and North East Somerset'},
                {name: 'Bedford'},
                {name: 'Blackburn with Darwen'},
                {name: 'Blackpool'},
                {name: 'Bournemouth'},
                {name: 'Bracknell Forest'},
                {name: 'Brighton & Hove'},
                {name: 'Bristol'},
                {name: 'Buckinghamshire'},
                {name: 'Cambridgeshire'},
                {name: 'Central Bedfordshire'},
                {name: 'Cheshire East'},
                {name: 'Cheshire West and Chester'},
                {name: 'Cornwall'},
                {name: 'County Durham'},
                {name: 'Cumbria'},
                {name: 'Darlington'},
                {name: 'Derby'},
                {name: 'Derbyshire'},
                {name: 'Devon'},
                {name: 'Dorset'},
                {name: 'East Riding of Yorkshire'},
                {name: 'East Sussex'},
                {name: 'Essex'},
                {name: 'Gloucestershire'},
                {name: 'Greater London'},
                {name: 'Greater Manchester'},
                {name: 'Halton'},
                {name: 'Hampshire'},
                {name: 'Hartlepool'},
                {name: 'Herefordshire'},
                {name: 'Hertfordshire'},
                {name: 'Hull'},
                {name: 'Isle of Wight'},
                {name: 'Isles of Scilly'},
                {name: 'Kent'},
                {name: 'Lancashire'},
                {name: 'Leicester'},
                {name: 'Leicestershire'},
                {name: 'Lincolnshire'},
                {name: 'Luton'},
                {name: 'Medway'},
                {name: 'Merseyside'},
                {name: 'Middlesbrough'},
                {name: 'Milton Keynes'},
                {name: 'Norfolk'},
                {name: 'North East Lincolnshire'},
                {name: 'North Lincolnshire'},
                {name: 'North Somerset'},
                {name: 'North Yorkshire'},
                {name: 'Northamptonshire'},
                {name: 'Northumberland'},
                {name: 'Nottingham'},
                {name: 'Nottinghamshire'},
                {name: 'Oxfordshire'},
                {name: 'Peterborough'},
                {name: 'Plymouth'},
                {name: 'Poole'},
                {name: 'Portsmouth'},
                {name: 'Reading'},
                {name: 'Redcar and Cleveland'},
                {name: 'Rutland'},
                {name: 'Shropshire'},
                {name: 'Slough'},
                {name: 'Somerset'},
                {name: 'South Gloucestershire'},
                {name: 'South Yorkshire'},
                {name: 'Southampton'},
                {name: 'Southend-on-Sea'},
                {name: 'Staffordshire'},
                {name: 'Stockton-on-Tees'},
                {name: 'Stoke-on-Trent'},
                {name: 'Suffolk'},
                {name: 'Surrey'},
                {name: 'Swindon'},
                {name: 'Telford and Wrekin'},
                {name: 'Thurrock'},
                {name: 'Torbay'},
                {name: 'Tyne and Wear'},
                {name: 'Warrington'},
                {name: 'Warwickshire'},
                {name: 'West Berkshire'},
                {name: 'West Midlands'},
                {name: 'West Sussex'},
                {name: 'West Yorkshire'},
                {name: 'Wiltshire'},
                {name: 'Windsor and Maidenhead'},
                {name: 'Wokingham'},
                {name: 'Worcestershire'},
                {name: 'York'}]
				},
        provinces: {
            "ca": [
                {name: 'Alberta', abbreviation: 'AB'},
                {name: 'British Columbia', abbreviation: 'BC'},
                {name: 'Manitoba', abbreviation: 'MB'},
                {name: 'New Brunswick', abbreviation: 'NB'},
                {name: 'Newfoundland and Labrador', abbreviation: 'NL'},
                {name: 'Nova Scotia', abbreviation: 'NS'},
                {name: 'Ontario', abbreviation: 'ON'},
                {name: 'Prince Edward Island', abbreviation: 'PE'},
                {name: 'Quebec', abbreviation: 'QC'},
                {name: 'Saskatchewan', abbreviation: 'SK'},

                // The case could be made that the following are not actually provinces
                // since they are technically considered "territories" however they all
                // look the same on an envelope!
                {name: 'Northwest Territories', abbreviation: 'NT'},
                {name: 'Nunavut', abbreviation: 'NU'},
                {name: 'Yukon', abbreviation: 'YT'}
            ],
            "it": [
                { name: "Agrigento", abbreviation: "AG", code: 84 },
                { name: "Alessandria", abbreviation: "AL", code: 6 },
                { name: "Ancona", abbreviation: "AN", code: 42 },
                { name: "Aosta", abbreviation: "AO", code: 7 },
                { name: "L'Aquila", abbreviation: "AQ", code: 66 },
                { name: "Arezzo", abbreviation: "AR", code: 51 },
                { name: "Ascoli-Piceno", abbreviation: "AP", code: 44 },
                { name: "Asti", abbreviation: "AT", code: 5 },
                { name: "Avellino", abbreviation: "AV", code: 64 },
                { name: "Bari", abbreviation: "BA", code: 72 },
                { name: "Barletta-Andria-Trani", abbreviation: "BT", code: 72 },
                { name: "Belluno", abbreviation: "BL", code: 25 },
                { name: "Benevento", abbreviation: "BN", code: 62 },
                { name: "Bergamo", abbreviation: "BG", code: 16 },
                { name: "Biella", abbreviation: "BI", code: 96 },
                { name: "Bologna", abbreviation: "BO", code: 37 },
                { name: "Bolzano", abbreviation: "BZ", code: 21 },
                { name: "Brescia", abbreviation: "BS", code: 17 },
                { name: "Brindisi", abbreviation: "BR", code: 74 },
                { name: "Cagliari", abbreviation: "CA", code: 92 },
                { name: "Caltanissetta", abbreviation: "CL", code: 85 },
                { name: "Campobasso", abbreviation: "CB", code: 70 },
                { name: "Carbonia Iglesias", abbreviation: "CI", code: 70 },
                { name: "Caserta", abbreviation: "CE", code: 61 },
                { name: "Catania", abbreviation: "CT", code: 87 },
                { name: "Catanzaro", abbreviation: "CZ", code: 79 },
                { name: "Chieti", abbreviation: "CH", code: 69 },
                { name: "Como", abbreviation: "CO", code: 13 },
                { name: "Cosenza", abbreviation: "CS", code: 78 },
                { name: "Cremona", abbreviation: "CR", code: 19 },
                { name: "Crotone", abbreviation: "KR", code: 101 },
                { name: "Cuneo", abbreviation: "CN", code: 4 },
                { name: "Enna", abbreviation: "EN", code: 86 },
                { name: "Fermo", abbreviation: "FM", code: 86 },
                { name: "Ferrara", abbreviation: "FE", code: 38 },
                { name: "Firenze", abbreviation: "FI", code: 48 },
                { name: "Foggia", abbreviation: "FG", code: 71 },
                { name: "Forli-Cesena", abbreviation: "FC", code: 71 },
                { name: "Frosinone", abbreviation: "FR", code: 60 },
                { name: "Genova", abbreviation: "GE", code: 10 },
                { name: "Gorizia", abbreviation: "GO", code: 31 },
                { name: "Grosseto", abbreviation: "GR", code: 53 },
                { name: "Imperia", abbreviation: "IM", code: 8 },
                { name: "Isernia", abbreviation: "IS", code: 94 },
                { name: "La-Spezia", abbreviation: "SP", code: 66 },
                { name: "Latina", abbreviation: "LT", code: 59 },
                { name: "Lecce", abbreviation: "LE", code: 75 },
                { name: "Lecco", abbreviation: "LC", code: 97 },
                { name: "Livorno", abbreviation: "LI", code: 49 },
                { name: "Lodi", abbreviation: "LO", code: 98 },
                { name: "Lucca", abbreviation: "LU", code: 46 },
                { name: "Macerata", abbreviation: "MC", code: 43 },
                { name: "Mantova", abbreviation: "MN", code: 20 },
                { name: "Massa-Carrara", abbreviation: "MS", code: 45 },
                { name: "Matera", abbreviation: "MT", code: 77 },
                { name: "Medio Campidano", abbreviation: "VS", code: 77 },
                { name: "Messina", abbreviation: "ME", code: 83 },
                { name: "Milano", abbreviation: "MI", code: 15 },
                { name: "Modena", abbreviation: "MO", code: 36 },
                { name: "Monza-Brianza", abbreviation: "MB", code: 36 },
                { name: "Napoli", abbreviation: "NA", code: 63 },
                { name: "Novara", abbreviation: "NO", code: 3 },
                { name: "Nuoro", abbreviation: "NU", code: 91 },
                { name: "Ogliastra", abbreviation: "OG", code: 91 },
                { name: "Olbia Tempio", abbreviation: "OT", code: 91 },
                { name: "Oristano", abbreviation: "OR", code: 95 },
                { name: "Padova", abbreviation: "PD", code: 28 },
                { name: "Palermo", abbreviation: "PA", code: 82 },
                { name: "Parma", abbreviation: "PR", code: 34 },
                { name: "Pavia", abbreviation: "PV", code: 18 },
                { name: "Perugia", abbreviation: "PG", code: 54 },
                { name: "Pesaro-Urbino", abbreviation: "PU", code: 41 },
                { name: "Pescara", abbreviation: "PE", code: 68 },
                { name: "Piacenza", abbreviation: "PC", code: 33 },
                { name: "Pisa", abbreviation: "PI", code: 50 },
                { name: "Pistoia", abbreviation: "PT", code: 47 },
                { name: "Pordenone", abbreviation: "PN", code: 93 },
                { name: "Potenza", abbreviation: "PZ", code: 76 },
                { name: "Prato", abbreviation: "PO", code: 100 },
                { name: "Ragusa", abbreviation: "RG", code: 88 },
                { name: "Ravenna", abbreviation: "RA", code: 39 },
                { name: "Reggio-Calabria", abbreviation: "RC", code: 35 },
                { name: "Reggio-Emilia", abbreviation: "RE", code: 35 },
                { name: "Rieti", abbreviation: "RI", code: 57 },
                { name: "Rimini", abbreviation: "RN", code: 99 },
                { name: "Roma", abbreviation: "Roma", code: 58 },
                { name: "Rovigo", abbreviation: "RO", code: 29 },
                { name: "Salerno", abbreviation: "SA", code: 65 },
                { name: "Sassari", abbreviation: "SS", code: 90 },
                { name: "Savona", abbreviation: "SV", code: 9 },
                { name: "Siena", abbreviation: "SI", code: 52 },
                { name: "Siracusa", abbreviation: "SR", code: 89 },
                { name: "Sondrio", abbreviation: "SO", code: 14 },
                { name: "Taranto", abbreviation: "TA", code: 73 },
                { name: "Teramo", abbreviation: "TE", code: 67 },
                { name: "Terni", abbreviation: "TR", code: 55 },
                { name: "Torino", abbreviation: "TO", code: 1 },
                { name: "Trapani", abbreviation: "TP", code: 81 },
                { name: "Trento", abbreviation: "TN", code: 22 },
                { name: "Treviso", abbreviation: "TV", code: 26 },
                { name: "Trieste", abbreviation: "TS", code: 32 },
                { name: "Udine", abbreviation: "UD", code: 30 },
                { name: "Varese", abbreviation: "VA", code: 12 },
                { name: "Venezia", abbreviation: "VE", code: 27 },
                { name: "Verbania", abbreviation: "VB", code: 27 },
                { name: "Vercelli", abbreviation: "VC", code: 2 },
                { name: "Verona", abbreviation: "VR", code: 23 },
                { name: "Vibo-Valentia", abbreviation: "VV", code: 102 },
                { name: "Vicenza", abbreviation: "VI", code: 24 },
                { name: "Viterbo", abbreviation: "VT", code: 56 }
            ]
        },

            // from: https://github.com/samsargent/Useful-Autocomplete-Data/blob/master/data/nationalities.json
        nationalities: [
           {name: 'Afghan'},
           {name: 'Albanian'},
           {name: 'Algerian'},
           {name: 'American'},
           {name: 'Andorran'},
           {name: 'Angolan'},
           {name: 'Antiguans'},
           {name: 'Argentinean'},
           {name: 'Armenian'},
           {name: 'Australian'},
           {name: 'Austrian'},
           {name: 'Azerbaijani'},
           {name: 'Bahami'},
           {name: 'Bahraini'},
           {name: 'Bangladeshi'},
           {name: 'Barbadian'},
           {name: 'Barbudans'},
           {name: 'Batswana'},
           {name: 'Belarusian'},
           {name: 'Belgian'},
           {name: 'Belizean'},
           {name: 'Beninese'},
           {name: 'Bhutanese'},
           {name: 'Bolivian'},
           {name: 'Bosnian'},
           {name: 'Brazilian'},
           {name: 'British'},
           {name: 'Bruneian'},
           {name: 'Bulgarian'},
           {name: 'Burkinabe'},
           {name: 'Burmese'},
           {name: 'Burundian'},
           {name: 'Cambodian'},
           {name: 'Cameroonian'},
           {name: 'Canadian'},
           {name: 'Cape Verdean'},
           {name: 'Central African'},
           {name: 'Chadian'},
           {name: 'Chilean'},
           {name: 'Chinese'},
           {name: 'Colombian'},
           {name: 'Comoran'},
           {name: 'Congolese'},
           {name: 'Costa Rican'},
           {name: 'Croatian'},
           {name: 'Cuban'},
           {name: 'Cypriot'},
           {name: 'Czech'},
           {name: 'Danish'},
           {name: 'Djibouti'},
           {name: 'Dominican'},
           {name: 'Dutch'},
           {name: 'East Timorese'},
           {name: 'Ecuadorean'},
           {name: 'Egyptian'},
           {name: 'Emirian'},
           {name: 'Equatorial Guinean'},
           {name: 'Eritrean'},
           {name: 'Estonian'},
           {name: 'Ethiopian'},
           {name: 'Fijian'},
           {name: 'Filipino'},
           {name: 'Finnish'},
           {name: 'French'},
           {name: 'Gabonese'},
           {name: 'Gambian'},
           {name: 'Georgian'},
           {name: 'German'},
           {name: 'Ghanaian'},
           {name: 'Greek'},
           {name: 'Grenadian'},
           {name: 'Guatemalan'},
           {name: 'Guinea-Bissauan'},
           {name: 'Guinean'},
           {name: 'Guyanese'},
           {name: 'Haitian'},
           {name: 'Herzegovinian'},
           {name: 'Honduran'},
           {name: 'Hungarian'},
           {name: 'I-Kiribati'},
           {name: 'Icelander'},
           {name: 'Indian'},
           {name: 'Indonesian'},
           {name: 'Iranian'},
           {name: 'Iraqi'},
           {name: 'Irish'},
           {name: 'Israeli'},
           {name: 'Italian'},
           {name: 'Ivorian'},
           {name: 'Jamaican'},
           {name: 'Japanese'},
           {name: 'Jordanian'},
           {name: 'Kazakhstani'},
           {name: 'Kenyan'},
           {name: 'Kittian and Nevisian'},
           {name: 'Kuwaiti'},
           {name: 'Kyrgyz'},
           {name: 'Laotian'},
           {name: 'Latvian'},
           {name: 'Lebanese'},
           {name: 'Liberian'},
           {name: 'Libyan'},
           {name: 'Liechtensteiner'},
           {name: 'Lithuanian'},
           {name: 'Luxembourger'},
           {name: 'Macedonian'},
           {name: 'Malagasy'},
           {name: 'Malawian'},
           {name: 'Malaysian'},
           {name: 'Maldivan'},
           {name: 'Malian'},
           {name: 'Maltese'},
           {name: 'Marshallese'},
           {name: 'Mauritanian'},
           {name: 'Mauritian'},
           {name: 'Mexican'},
           {name: 'Micronesian'},
           {name: 'Moldovan'},
           {name: 'Monacan'},
           {name: 'Mongolian'},
           {name: 'Moroccan'},
           {name: 'Mosotho'},
           {name: 'Motswana'},
           {name: 'Mozambican'},
           {name: 'Namibian'},
           {name: 'Nauruan'},
           {name: 'Nepalese'},
           {name: 'New Zealander'},
           {name: 'Nicaraguan'},
           {name: 'Nigerian'},
           {name: 'Nigerien'},
           {name: 'North Korean'},
           {name: 'Northern Irish'},
           {name: 'Norwegian'},
           {name: 'Omani'},
           {name: 'Pakistani'},
           {name: 'Palauan'},
           {name: 'Panamanian'},
           {name: 'Papua New Guinean'},
           {name: 'Paraguayan'},
           {name: 'Peruvian'},
           {name: 'Polish'},
           {name: 'Portuguese'},
           {name: 'Qatari'},
           {name: 'Romani'},
           {name: 'Russian'},
           {name: 'Rwandan'},
           {name: 'Saint Lucian'},
           {name: 'Salvadoran'},
           {name: 'Samoan'},
           {name: 'San Marinese'},
           {name: 'Sao Tomean'},
           {name: 'Saudi'},
           {name: 'Scottish'},
           {name: 'Senegalese'},
           {name: 'Serbian'},
           {name: 'Seychellois'},
           {name: 'Sierra Leonean'},
           {name: 'Singaporean'},
           {name: 'Slovakian'},
           {name: 'Slovenian'},
           {name: 'Solomon Islander'},
           {name: 'Somali'},
           {name: 'South African'},
           {name: 'South Korean'},
           {name: 'Spanish'},
           {name: 'Sri Lankan'},
           {name: 'Sudanese'},
           {name: 'Surinamer'},
           {name: 'Swazi'},
           {name: 'Swedish'},
           {name: 'Swiss'},
           {name: 'Syrian'},
           {name: 'Taiwanese'},
           {name: 'Tajik'},
           {name: 'Tanzanian'},
           {name: 'Thai'},
           {name: 'Togolese'},
           {name: 'Tongan'},
           {name: 'Trinidadian or Tobagonian'},
           {name: 'Tunisian'},
           {name: 'Turkish'},
           {name: 'Tuvaluan'},
           {name: 'Ugandan'},
           {name: 'Ukrainian'},
           {name: 'Uruguaya'},
           {name: 'Uzbekistani'},
           {name: 'Venezuela'},
           {name: 'Vietnamese'},
           {name: 'Wels'},
           {name: 'Yemenit'},
           {name: 'Zambia'},
           {name: 'Zimbabwe'},
        ],

        us_states_and_dc: [
            {name: 'Alabama', abbreviation: 'AL'},
            {name: 'Alaska', abbreviation: 'AK'},
            {name: 'Arizona', abbreviation: 'AZ'},
            {name: 'Arkansas', abbreviation: 'AR'},
            {name: 'California', abbreviation: 'CA'},
            {name: 'Colorado', abbreviation: 'CO'},
            {name: 'Connecticut', abbreviation: 'CT'},
            {name: 'Delaware', abbreviation: 'DE'},
            {name: 'District of Columbia', abbreviation: 'DC'},
            {name: 'Florida', abbreviation: 'FL'},
            {name: 'Georgia', abbreviation: 'GA'},
            {name: 'Hawaii', abbreviation: 'HI'},
            {name: 'Idaho', abbreviation: 'ID'},
            {name: 'Illinois', abbreviation: 'IL'},
            {name: 'Indiana', abbreviation: 'IN'},
            {name: 'Iowa', abbreviation: 'IA'},
            {name: 'Kansas', abbreviation: 'KS'},
            {name: 'Kentucky', abbreviation: 'KY'},
            {name: 'Louisiana', abbreviation: 'LA'},
            {name: 'Maine', abbreviation: 'ME'},
            {name: 'Maryland', abbreviation: 'MD'},
            {name: 'Massachusetts', abbreviation: 'MA'},
            {name: 'Michigan', abbreviation: 'MI'},
            {name: 'Minnesota', abbreviation: 'MN'},
            {name: 'Mississippi', abbreviation: 'MS'},
            {name: 'Missouri', abbreviation: 'MO'},
            {name: 'Montana', abbreviation: 'MT'},
            {name: 'Nebraska', abbreviation: 'NE'},
            {name: 'Nevada', abbreviation: 'NV'},
            {name: 'New Hampshire', abbreviation: 'NH'},
            {name: 'New Jersey', abbreviation: 'NJ'},
            {name: 'New Mexico', abbreviation: 'NM'},
            {name: 'New York', abbreviation: 'NY'},
            {name: 'North Carolina', abbreviation: 'NC'},
            {name: 'North Dakota', abbreviation: 'ND'},
            {name: 'Ohio', abbreviation: 'OH'},
            {name: 'Oklahoma', abbreviation: 'OK'},
            {name: 'Oregon', abbreviation: 'OR'},
            {name: 'Pennsylvania', abbreviation: 'PA'},
            {name: 'Rhode Island', abbreviation: 'RI'},
            {name: 'South Carolina', abbreviation: 'SC'},
            {name: 'South Dakota', abbreviation: 'SD'},
            {name: 'Tennessee', abbreviation: 'TN'},
            {name: 'Texas', abbreviation: 'TX'},
            {name: 'Utah', abbreviation: 'UT'},
            {name: 'Vermont', abbreviation: 'VT'},
            {name: 'Virginia', abbreviation: 'VA'},
            {name: 'Washington', abbreviation: 'WA'},
            {name: 'West Virginia', abbreviation: 'WV'},
            {name: 'Wisconsin', abbreviation: 'WI'},
            {name: 'Wyoming', abbreviation: 'WY'}
        ],

        territories: [
            {name: 'American Samoa', abbreviation: 'AS'},
            {name: 'Federated States of Micronesia', abbreviation: 'FM'},
            {name: 'Guam', abbreviation: 'GU'},
            {name: 'Marshall Islands', abbreviation: 'MH'},
            {name: 'Northern Mariana Islands', abbreviation: 'MP'},
            {name: 'Puerto Rico', abbreviation: 'PR'},
            {name: 'Virgin Islands, U.S.', abbreviation: 'VI'}
        ],

        armed_forces: [
            {name: 'Armed Forces Europe', abbreviation: 'AE'},
            {name: 'Armed Forces Pacific', abbreviation: 'AP'},
            {name: 'Armed Forces the Americas', abbreviation: 'AA'}
        ],

        country_regions: {
            it: [
                { name: "Valle d'Aosta", abbreviation: "VDA" },
                { name: "Piemonte", abbreviation: "PIE" },
                { name: "Lombardia", abbreviation: "LOM" },
                { name: "Veneto", abbreviation: "VEN" },
                { name: "Trentino Alto Adige", abbreviation: "TAA" },
                { name: "Friuli Venezia Giulia", abbreviation: "FVG" },
                { name: "Liguria", abbreviation: "LIG" },
                { name: "Emilia Romagna", abbreviation: "EMR" },
                { name: "Toscana", abbreviation: "TOS" },
                { name: "Umbria", abbreviation: "UMB" },
                { name: "Marche", abbreviation: "MAR" },
                { name: "Abruzzo", abbreviation: "ABR" },
                { name: "Lazio", abbreviation: "LAZ" },
                { name: "Campania", abbreviation: "CAM" },
                { name: "Puglia", abbreviation: "PUG" },
                { name: "Basilicata", abbreviation: "BAS" },
                { name: "Molise", abbreviation: "MOL" },
                { name: "Calabria", abbreviation: "CAL" },
                { name: "Sicilia", abbreviation: "SIC" },
                { name: "Sardegna", abbreviation: "SAR" }
            ]
        },

        street_suffixes: {
            'us': [
                {name: 'Avenue', abbreviation: 'Ave'},
                {name: 'Boulevard', abbreviation: 'Blvd'},
                {name: 'Center', abbreviation: 'Ctr'},
                {name: 'Circle', abbreviation: 'Cir'},
                {name: 'Court', abbreviation: 'Ct'},
                {name: 'Drive', abbreviation: 'Dr'},
                {name: 'Extension', abbreviation: 'Ext'},
                {name: 'Glen', abbreviation: 'Gln'},
                {name: 'Grove', abbreviation: 'Grv'},
                {name: 'Heights', abbreviation: 'Hts'},
                {name: 'Highway', abbreviation: 'Hwy'},
                {name: 'Junction', abbreviation: 'Jct'},
                {name: 'Key', abbreviation: 'Key'},
                {name: 'Lane', abbreviation: 'Ln'},
                {name: 'Loop', abbreviation: 'Loop'},
                {name: 'Manor', abbreviation: 'Mnr'},
                {name: 'Mill', abbreviation: 'Mill'},
                {name: 'Park', abbreviation: 'Park'},
                {name: 'Parkway', abbreviation: 'Pkwy'},
                {name: 'Pass', abbreviation: 'Pass'},
                {name: 'Path', abbreviation: 'Path'},
                {name: 'Pike', abbreviation: 'Pike'},
                {name: 'Place', abbreviation: 'Pl'},
                {name: 'Plaza', abbreviation: 'Plz'},
                {name: 'Point', abbreviation: 'Pt'},
                {name: 'Ridge', abbreviation: 'Rdg'},
                {name: 'River', abbreviation: 'Riv'},
                {name: 'Road', abbreviation: 'Rd'},
                {name: 'Square', abbreviation: 'Sq'},
                {name: 'Street', abbreviation: 'St'},
                {name: 'Terrace', abbreviation: 'Ter'},
                {name: 'Trail', abbreviation: 'Trl'},
                {name: 'Turnpike', abbreviation: 'Tpke'},
                {name: 'View', abbreviation: 'Vw'},
                {name: 'Way', abbreviation: 'Way'}
            ],
            'it': [
                { name: 'Accesso', abbreviation: 'Acc.' },
                { name: 'Alzaia', abbreviation: 'Alz.' },
                { name: 'Arco', abbreviation: 'Arco' },
                { name: 'Archivolto', abbreviation: 'Acv.' },
                { name: 'Arena', abbreviation: 'Arena' },
                { name: 'Argine', abbreviation: 'Argine' },
                { name: 'Bacino', abbreviation: 'Bacino' },
                { name: 'Banchi', abbreviation: 'Banchi' },
                { name: 'Banchina', abbreviation: 'Ban.' },
                { name: 'Bastioni', abbreviation: 'Bas.' },
                { name: 'Belvedere', abbreviation: 'Belv.' },
                { name: 'Borgata', abbreviation: 'B.ta' },
                { name: 'Borgo', abbreviation: 'B.go' },
                { name: 'Calata', abbreviation: 'Cal.' },
                { name: 'Calle', abbreviation: 'Calle' },
                { name: 'Campiello', abbreviation: 'Cam.' },
                { name: 'Campo', abbreviation: 'Cam.' },
                { name: 'Canale', abbreviation: 'Can.' },
                { name: 'Carraia', abbreviation: 'Carr.' },
                { name: 'Cascina', abbreviation: 'Cascina' },
                { name: 'Case sparse', abbreviation: 'c.s.' },
                { name: 'Cavalcavia', abbreviation: 'Cv.' },
                { name: 'Circonvallazione', abbreviation: 'Cv.' },
                { name: 'Complanare', abbreviation: 'C.re' },
                { name: 'Contrada', abbreviation: 'C.da' },
                { name: 'Corso', abbreviation: 'C.so' },
                { name: 'Corte', abbreviation: 'C.te' },
                { name: 'Cortile', abbreviation: 'C.le' },
                { name: 'Diramazione', abbreviation: 'Dir.' },
                { name: 'Fondaco', abbreviation: 'F.co' },
                { name: 'Fondamenta', abbreviation: 'F.ta' },
                { name: 'Fondo', abbreviation: 'F.do' },
                { name: 'Frazione', abbreviation: 'Fr.' },
                { name: 'Isola', abbreviation: 'Is.' },
                { name: 'Largo', abbreviation: 'L.go' },
                { name: 'Litoranea', abbreviation: 'Lit.' },
                { name: 'Lungolago', abbreviation: 'L.go lago' },
                { name: 'Lungo Po', abbreviation: 'l.go Po' },
                { name: 'Molo', abbreviation: 'Molo' },
                { name: 'Mura', abbreviation: 'Mura' },
                { name: 'Passaggio privato', abbreviation: 'pass. priv.' },
                { name: 'Passeggiata', abbreviation: 'Pass.' },
                { name: 'Piazza', abbreviation: 'P.zza' },
                { name: 'Piazzale', abbreviation: 'P.le' },
                { name: 'Ponte', abbreviation: 'P.te' },
                { name: 'Portico', abbreviation: 'P.co' },
                { name: 'Rampa', abbreviation: 'Rampa' },
                { name: 'Regione', abbreviation: 'Reg.' },
                { name: 'Rione', abbreviation: 'R.ne' },
                { name: 'Rio', abbreviation: 'Rio' },
                { name: 'Ripa', abbreviation: 'Ripa' },
                { name: 'Riva', abbreviation: 'Riva' },
                { name: 'Rondò', abbreviation: 'Rondò' },
                { name: 'Rotonda', abbreviation: 'Rot.' },
                { name: 'Sagrato', abbreviation: 'Sagr.' },
                { name: 'Salita', abbreviation: 'Sal.' },
                { name: 'Scalinata', abbreviation: 'Scal.' },
                { name: 'Scalone', abbreviation: 'Scal.' },
                { name: 'Slargo', abbreviation: 'Sl.' },
                { name: 'Sottoportico', abbreviation: 'Sott.' },
                { name: 'Strada', abbreviation: 'Str.' },
                { name: 'Stradale', abbreviation: 'Str.le' },
                { name: 'Strettoia', abbreviation: 'Strett.' },
                { name: 'Traversa', abbreviation: 'Trav.' },
                { name: 'Via', abbreviation: 'V.' },
                { name: 'Viale', abbreviation: 'V.le' },
                { name: 'Vicinale', abbreviation: 'Vic.le' },
                { name: 'Vicolo', abbreviation: 'Vic.' }
            ]
        },

        months: [
            {name: 'January', short_name: 'Jan', numeric: '01', days: 31},
            // Not messing with leap years...
            {name: 'February', short_name: 'Feb', numeric: '02', days: 28},
            {name: 'March', short_name: 'Mar', numeric: '03', days: 31},
            {name: 'April', short_name: 'Apr', numeric: '04', days: 30},
            {name: 'May', short_name: 'May', numeric: '05', days: 31},
            {name: 'June', short_name: 'Jun', numeric: '06', days: 30},
            {name: 'July', short_name: 'Jul', numeric: '07', days: 31},
            {name: 'August', short_name: 'Aug', numeric: '08', days: 31},
            {name: 'September', short_name: 'Sep', numeric: '09', days: 30},
            {name: 'October', short_name: 'Oct', numeric: '10', days: 31},
            {name: 'November', short_name: 'Nov', numeric: '11', days: 30},
            {name: 'December', short_name: 'Dec', numeric: '12', days: 31}
        ],

        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29
        cc_types: [
            {name: "American Express", short_name: 'amex', prefix: '34', length: 15},
            {name: "Bankcard", short_name: 'bankcard', prefix: '5610', length: 16},
            {name: "China UnionPay", short_name: 'chinaunion', prefix: '62', length: 16},
            {name: "Diners Club Carte Blanche", short_name: 'dccarte', prefix: '300', length: 14},
            {name: "Diners Club enRoute", short_name: 'dcenroute', prefix: '2014', length: 15},
            {name: "Diners Club International", short_name: 'dcintl', prefix: '36', length: 14},
            {name: "Diners Club United States & Canada", short_name: 'dcusc', prefix: '54', length: 16},
            {name: "Discover Card", short_name: 'discover', prefix: '6011', length: 16},
            {name: "InstaPayment", short_name: 'instapay', prefix: '637', length: 16},
            {name: "JCB", short_name: 'jcb', prefix: '3528', length: 16},
            {name: "Laser", short_name: 'laser', prefix: '6304', length: 16},
            {name: "Maestro", short_name: 'maestro', prefix: '5018', length: 16},
            {name: "Mastercard", short_name: 'mc', prefix: '51', length: 16},
            {name: "Solo", short_name: 'solo', prefix: '6334', length: 16},
            {name: "Switch", short_name: 'switch', prefix: '4903', length: 16},
            {name: "Visa", short_name: 'visa', prefix: '4', length: 16},
            {name: "Visa Electron", short_name: 'electron', prefix: '4026', length: 16}
        ],

        //return all world currency by ISO 4217
        currency_types: [
            {'code' : 'AED', 'name' : 'United Arab Emirates Dirham'},
            {'code' : 'AFN', 'name' : 'Afghanistan Afghani'},
            {'code' : 'ALL', 'name' : 'Albania Lek'},
            {'code' : 'AMD', 'name' : 'Armenia Dram'},
            {'code' : 'ANG', 'name' : 'Netherlands Antilles Guilder'},
            {'code' : 'AOA', 'name' : 'Angola Kwanza'},
            {'code' : 'ARS', 'name' : 'Argentina Peso'},
            {'code' : 'AUD', 'name' : 'Australia Dollar'},
            {'code' : 'AWG', 'name' : 'Aruba Guilder'},
            {'code' : 'AZN', 'name' : 'Azerbaijan New Manat'},
            {'code' : 'BAM', 'name' : 'Bosnia and Herzegovina Convertible Marka'},
            {'code' : 'BBD', 'name' : 'Barbados Dollar'},
            {'code' : 'BDT', 'name' : 'Bangladesh Taka'},
            {'code' : 'BGN', 'name' : 'Bulgaria Lev'},
            {'code' : 'BHD', 'name' : 'Bahrain Dinar'},
            {'code' : 'BIF', 'name' : 'Burundi Franc'},
            {'code' : 'BMD', 'name' : 'Bermuda Dollar'},
            {'code' : 'BND', 'name' : 'Brunei Darussalam Dollar'},
            {'code' : 'BOB', 'name' : 'Bolivia Boliviano'},
            {'code' : 'BRL', 'name' : 'Brazil Real'},
            {'code' : 'BSD', 'name' : 'Bahamas Dollar'},
            {'code' : 'BTN', 'name' : 'Bhutan Ngultrum'},
            {'code' : 'BWP', 'name' : 'Botswana Pula'},
            {'code' : 'BYR', 'name' : 'Belarus Ruble'},
            {'code' : 'BZD', 'name' : 'Belize Dollar'},
            {'code' : 'CAD', 'name' : 'Canada Dollar'},
            {'code' : 'CDF', 'name' : 'Congo/Kinshasa Franc'},
            {'code' : 'CHF', 'name' : 'Switzerland Franc'},
            {'code' : 'CLP', 'name' : 'Chile Peso'},
            {'code' : 'CNY', 'name' : 'China Yuan Renminbi'},
            {'code' : 'COP', 'name' : 'Colombia Peso'},
            {'code' : 'CRC', 'name' : 'Costa Rica Colon'},
            {'code' : 'CUC', 'name' : 'Cuba Convertible Peso'},
            {'code' : 'CUP', 'name' : 'Cuba Peso'},
            {'code' : 'CVE', 'name' : 'Cape Verde Escudo'},
            {'code' : 'CZK', 'name' : 'Czech Republic Koruna'},
            {'code' : 'DJF', 'name' : 'Djibouti Franc'},
            {'code' : 'DKK', 'name' : 'Denmark Krone'},
            {'code' : 'DOP', 'name' : 'Dominican Republic Peso'},
            {'code' : 'DZD', 'name' : 'Algeria Dinar'},
            {'code' : 'EGP', 'name' : 'Egypt Pound'},
            {'code' : 'ERN', 'name' : 'Eritrea Nakfa'},
            {'code' : 'ETB', 'name' : 'Ethiopia Birr'},
            {'code' : 'EUR', 'name' : 'Euro Member Countries'},
            {'code' : 'FJD', 'name' : 'Fiji Dollar'},
            {'code' : 'FKP', 'name' : 'Falkland Islands (Malvinas) Pound'},
            {'code' : 'GBP', 'name' : 'United Kingdom Pound'},
            {'code' : 'GEL', 'name' : 'Georgia Lari'},
            {'code' : 'GGP', 'name' : 'Guernsey Pound'},
            {'code' : 'GHS', 'name' : 'Ghana Cedi'},
            {'code' : 'GIP', 'name' : 'Gibraltar Pound'},
            {'code' : 'GMD', 'name' : 'Gambia Dalasi'},
            {'code' : 'GNF', 'name' : 'Guinea Franc'},
            {'code' : 'GTQ', 'name' : 'Guatemala Quetzal'},
            {'code' : 'GYD', 'name' : 'Guyana Dollar'},
            {'code' : 'HKD', 'name' : 'Hong Kong Dollar'},
            {'code' : 'HNL', 'name' : 'Honduras Lempira'},
            {'code' : 'HRK', 'name' : 'Croatia Kuna'},
            {'code' : 'HTG', 'name' : 'Haiti Gourde'},
            {'code' : 'HUF', 'name' : 'Hungary Forint'},
            {'code' : 'IDR', 'name' : 'Indonesia Rupiah'},
            {'code' : 'ILS', 'name' : 'Israel Shekel'},
            {'code' : 'IMP', 'name' : 'Isle of Man Pound'},
            {'code' : 'INR', 'name' : 'India Rupee'},
            {'code' : 'IQD', 'name' : 'Iraq Dinar'},
            {'code' : 'IRR', 'name' : 'Iran Rial'},
            {'code' : 'ISK', 'name' : 'Iceland Krona'},
            {'code' : 'JEP', 'name' : 'Jersey Pound'},
            {'code' : 'JMD', 'name' : 'Jamaica Dollar'},
            {'code' : 'JOD', 'name' : 'Jordan Dinar'},
            {'code' : 'JPY', 'name' : 'Japan Yen'},
            {'code' : 'KES', 'name' : 'Kenya Shilling'},
            {'code' : 'KGS', 'name' : 'Kyrgyzstan Som'},
            {'code' : 'KHR', 'name' : 'Cambodia Riel'},
            {'code' : 'KMF', 'name' : 'Comoros Franc'},
            {'code' : 'KPW', 'name' : 'Korea (North) Won'},
            {'code' : 'KRW', 'name' : 'Korea (South) Won'},
            {'code' : 'KWD', 'name' : 'Kuwait Dinar'},
            {'code' : 'KYD', 'name' : 'Cayman Islands Dollar'},
            {'code' : 'KZT', 'name' : 'Kazakhstan Tenge'},
            {'code' : 'LAK', 'name' : 'Laos Kip'},
            {'code' : 'LBP', 'name' : 'Lebanon Pound'},
            {'code' : 'LKR', 'name' : 'Sri Lanka Rupee'},
            {'code' : 'LRD', 'name' : 'Liberia Dollar'},
            {'code' : 'LSL', 'name' : 'Lesotho Loti'},
            {'code' : 'LTL', 'name' : 'Lithuania Litas'},
            {'code' : 'LYD', 'name' : 'Libya Dinar'},
            {'code' : 'MAD', 'name' : 'Morocco Dirham'},
            {'code' : 'MDL', 'name' : 'Moldova Leu'},
            {'code' : 'MGA', 'name' : 'Madagascar Ariary'},
            {'code' : 'MKD', 'name' : 'Macedonia Denar'},
            {'code' : 'MMK', 'name' : 'Myanmar (Burma) Kyat'},
            {'code' : 'MNT', 'name' : 'Mongolia Tughrik'},
            {'code' : 'MOP', 'name' : 'Macau Pataca'},
            {'code' : 'MRO', 'name' : 'Mauritania Ouguiya'},
            {'code' : 'MUR', 'name' : 'Mauritius Rupee'},
            {'code' : 'MVR', 'name' : 'Maldives (Maldive Islands) Rufiyaa'},
            {'code' : 'MWK', 'name' : 'Malawi Kwacha'},
            {'code' : 'MXN', 'name' : 'Mexico Peso'},
            {'code' : 'MYR', 'name' : 'Malaysia Ringgit'},
            {'code' : 'MZN', 'name' : 'Mozambique Metical'},
            {'code' : 'NAD', 'name' : 'Namibia Dollar'},
            {'code' : 'NGN', 'name' : 'Nigeria Naira'},
            {'code' : 'NIO', 'name' : 'Nicaragua Cordoba'},
            {'code' : 'NOK', 'name' : 'Norway Krone'},
            {'code' : 'NPR', 'name' : 'Nepal Rupee'},
            {'code' : 'NZD', 'name' : 'New Zealand Dollar'},
            {'code' : 'OMR', 'name' : 'Oman Rial'},
            {'code' : 'PAB', 'name' : 'Panama Balboa'},
            {'code' : 'PEN', 'name' : 'Peru Nuevo Sol'},
            {'code' : 'PGK', 'name' : 'Papua New Guinea Kina'},
            {'code' : 'PHP', 'name' : 'Philippines Peso'},
            {'code' : 'PKR', 'name' : 'Pakistan Rupee'},
            {'code' : 'PLN', 'name' : 'Poland Zloty'},
            {'code' : 'PYG', 'name' : 'Paraguay Guarani'},
            {'code' : 'QAR', 'name' : 'Qatar Riyal'},
            {'code' : 'RON', 'name' : 'Romania New Leu'},
            {'code' : 'RSD', 'name' : 'Serbia Dinar'},
            {'code' : 'RUB', 'name' : 'Russia Ruble'},
            {'code' : 'RWF', 'name' : 'Rwanda Franc'},
            {'code' : 'SAR', 'name' : 'Saudi Arabia Riyal'},
            {'code' : 'SBD', 'name' : 'Solomon Islands Dollar'},
            {'code' : 'SCR', 'name' : 'Seychelles Rupee'},
            {'code' : 'SDG', 'name' : 'Sudan Pound'},
            {'code' : 'SEK', 'name' : 'Sweden Krona'},
            {'code' : 'SGD', 'name' : 'Singapore Dollar'},
            {'code' : 'SHP', 'name' : 'Saint Helena Pound'},
            {'code' : 'SLL', 'name' : 'Sierra Leone Leone'},
            {'code' : 'SOS', 'name' : 'Somalia Shilling'},
            {'code' : 'SPL', 'name' : 'Seborga Luigino'},
            {'code' : 'SRD', 'name' : 'Suriname Dollar'},
            {'code' : 'STD', 'name' : 'São Tomé and Príncipe Dobra'},
            {'code' : 'SVC', 'name' : 'El Salvador Colon'},
            {'code' : 'SYP', 'name' : 'Syria Pound'},
            {'code' : 'SZL', 'name' : 'Swaziland Lilangeni'},
            {'code' : 'THB', 'name' : 'Thailand Baht'},
            {'code' : 'TJS', 'name' : 'Tajikistan Somoni'},
            {'code' : 'TMT', 'name' : 'Turkmenistan Manat'},
            {'code' : 'TND', 'name' : 'Tunisia Dinar'},
            {'code' : 'TOP', 'name' : 'Tonga Pa\'anga'},
            {'code' : 'TRY', 'name' : 'Turkey Lira'},
            {'code' : 'TTD', 'name' : 'Trinidad and Tobago Dollar'},
            {'code' : 'TVD', 'name' : 'Tuvalu Dollar'},
            {'code' : 'TWD', 'name' : 'Taiwan New Dollar'},
            {'code' : 'TZS', 'name' : 'Tanzania Shilling'},
            {'code' : 'UAH', 'name' : 'Ukraine Hryvnia'},
            {'code' : 'UGX', 'name' : 'Uganda Shilling'},
            {'code' : 'USD', 'name' : 'United States Dollar'},
            {'code' : 'UYU', 'name' : 'Uruguay Peso'},
            {'code' : 'UZS', 'name' : 'Uzbekistan Som'},
            {'code' : 'VEF', 'name' : 'Venezuela Bolivar'},
            {'code' : 'VND', 'name' : 'Viet Nam Dong'},
            {'code' : 'VUV', 'name' : 'Vanuatu Vatu'},
            {'code' : 'WST', 'name' : 'Samoa Tala'},
            {'code' : 'XAF', 'name' : 'Communauté Financière Africaine (BEAC) CFA Franc BEAC'},
            {'code' : 'XCD', 'name' : 'East Caribbean Dollar'},
            {'code' : 'XDR', 'name' : 'International Monetary Fund (IMF) Special Drawing Rights'},
            {'code' : 'XOF', 'name' : 'Communauté Financière Africaine (BCEAO) Franc'},
            {'code' : 'XPF', 'name' : 'Comptoirs Français du Pacifique (CFP) Franc'},
            {'code' : 'YER', 'name' : 'Yemen Rial'},
            {'code' : 'ZAR', 'name' : 'South Africa Rand'},
            {'code' : 'ZMW', 'name' : 'Zambia Kwacha'},
            {'code' : 'ZWD', 'name' : 'Zimbabwe Dollar'}
        ],

        // return the names of all valide colors
        colorNames : [  "AliceBlue", "Black", "Navy", "DarkBlue", "MediumBlue", "Blue", "DarkGreen", "Green", "Teal", "DarkCyan", "DeepSkyBlue", "DarkTurquoise", "MediumSpringGreen", "Lime", "SpringGreen",
            "Aqua", "Cyan", "MidnightBlue", "DodgerBlue", "LightSeaGreen", "ForestGreen", "SeaGreen", "DarkSlateGray", "LimeGreen", "MediumSeaGreen", "Turquoise", "RoyalBlue", "SteelBlue", "DarkSlateBlue", "MediumTurquoise",
            "Indigo", "DarkOliveGreen", "CadetBlue", "CornflowerBlue", "RebeccaPurple", "MediumAquaMarine", "DimGray", "SlateBlue", "OliveDrab", "SlateGray", "LightSlateGray", "MediumSlateBlue", "LawnGreen", "Chartreuse",
            "Aquamarine", "Maroon", "Purple", "Olive", "Gray", "SkyBlue", "LightSkyBlue", "BlueViolet", "DarkRed", "DarkMagenta", "SaddleBrown", "Ivory", "White",
            "DarkSeaGreen", "LightGreen", "MediumPurple", "DarkViolet", "PaleGreen", "DarkOrchid", "YellowGreen", "Sienna", "Brown", "DarkGray", "LightBlue", "GreenYellow", "PaleTurquoise", "LightSteelBlue", "PowderBlue",
            "FireBrick", "DarkGoldenRod", "MediumOrchid", "RosyBrown", "DarkKhaki", "Silver", "MediumVioletRed", "IndianRed", "Peru", "Chocolate", "Tan", "LightGray", "Thistle", "Orchid", "GoldenRod", "PaleVioletRed",
            "Crimson", "Gainsboro", "Plum", "BurlyWood", "LightCyan", "Lavender", "DarkSalmon", "Violet", "PaleGoldenRod", "LightCoral", "Khaki", "AliceBlue", "HoneyDew", "Azure", "SandyBrown", "Wheat", "Beige", "WhiteSmoke",
            "MintCream", "GhostWhite", "Salmon", "AntiqueWhite", "Linen", "LightGoldenRodYellow", "OldLace", "Red", "Fuchsia", "Magenta", "DeepPink", "OrangeRed", "Tomato", "HotPink", "Coral", "DarkOrange", "LightSalmon", "Orange",
            "LightPink", "Pink", "Gold", "PeachPuff", "NavajoWhite", "Moccasin", "Bisque", "MistyRose", "BlanchedAlmond", "PapayaWhip", "LavenderBlush", "SeaShell", "Cornsilk", "LemonChiffon", "FloralWhite", "Snow", "Yellow", "LightYellow"
        ],

        fileExtension : {
            "raster"    : ["bmp", "gif", "gpl", "ico", "jpeg", "psd", "png", "psp", "raw", "tiff"],
            "vector"    : ["3dv", "amf", "awg", "ai", "cgm", "cdr", "cmx", "dxf", "e2d", "egt", "eps", "fs", "odg", "svg", "xar"],
            "3d"        : ["3dmf", "3dm", "3mf", "3ds", "an8", "aoi", "blend", "cal3d", "cob", "ctm", "iob", "jas", "max", "mb", "mdx", "obj", "x", "x3d"],
            "document"  : ["doc", "docx", "dot", "html", "xml", "odt", "odm", "ott", "csv", "rtf", "tex", "xhtml", "xps"]
        },

        // Data taken from https://github.com/dmfilipenko/timezones.json/blob/master/timezones.json
        timezones: [
                  {
                    "name": "Dateline Standard Time",
                    "abbr": "DST",
                    "offset": -12,
                    "isdst": false,
                    "text": "(UTC-12:00) International Date Line West",
                    "utc": [
                      "Etc/GMT+12"
                    ]
                  },
                  {
                    "name": "UTC-11",
                    "abbr": "U",
                    "offset": -11,
                    "isdst": false,
                    "text": "(UTC-11:00) Coordinated Universal Time-11",
                    "utc": [
                      "Etc/GMT+11",
                      "Pacific/Midway",
                      "Pacific/Niue",
                      "Pacific/Pago_Pago"
                    ]
                  },
                  {
                    "name": "Hawaiian Standard Time",
                    "abbr": "HST",
                    "offset": -10,
                    "isdst": false,
                    "text": "(UTC-10:00) Hawaii",
                    "utc": [
                      "Etc/GMT+10",
                      "Pacific/Honolulu",
                      "Pacific/Johnston",
                      "Pacific/Rarotonga",
                      "Pacific/Tahiti"
                    ]
                  },
                  {
                    "name": "Alaskan Standard Time",
                    "abbr": "AKDT",
                    "offset": -8,
                    "isdst": true,
                    "text": "(UTC-09:00) Alaska",
                    "utc": [
                      "America/Anchorage",
                      "America/Juneau",
                      "America/Nome",
                      "America/Sitka",
                      "America/Yakutat"
                    ]
                  },
                  {
                    "name": "Pacific Standard Time (Mexico)",
                    "abbr": "PDT",
                    "offset": -7,
                    "isdst": true,
                    "text": "(UTC-08:00) Baja California",
                    "utc": [
                      "America/Santa_Isabel"
                    ]
                  },
                  {
                    "name": "Pacific Standard Time",
                    "abbr": "PDT",
                    "offset": -7,
                    "isdst": true,
                    "text": "(UTC-08:00) Pacific Time (US & Canada)",
                    "utc": [
                      "America/Dawson",
                      "America/Los_Angeles",
                      "America/Tijuana",
                      "America/Vancouver",
                      "America/Whitehorse",
                      "PST8PDT"
                    ]
                  },
                  {
                    "name": "US Mountain Standard Time",
                    "abbr": "UMST",
                    "offset": -7,
                    "isdst": false,
                    "text": "(UTC-07:00) Arizona",
                    "utc": [
                      "America/Creston",
                      "America/Dawson_Creek",
                      "America/Hermosillo",
                      "America/Phoenix",
                      "Etc/GMT+7"
                    ]
                  },
                  {
                    "name": "Mountain Standard Time (Mexico)",
                    "abbr": "MDT",
                    "offset": -6,
                    "isdst": true,
                    "text": "(UTC-07:00) Chihuahua, La Paz, Mazatlan",
                    "utc": [
                      "America/Chihuahua",
                      "America/Mazatlan"
                    ]
                  },
                  {
                    "name": "Mountain Standard Time",
                    "abbr": "MDT",
                    "offset": -6,
                    "isdst": true,
                    "text": "(UTC-07:00) Mountain Time (US & Canada)",
                    "utc": [
                      "America/Boise",
                      "America/Cambridge_Bay",
                      "America/Denver",
                      "America/Edmonton",
                      "America/Inuvik",
                      "America/Ojinaga",
                      "America/Yellowknife",
                      "MST7MDT"
                    ]
                  },
                  {
                    "name": "Central America Standard Time",
                    "abbr": "CAST",
                    "offset": -6,
                    "isdst": false,
                    "text": "(UTC-06:00) Central America",
                    "utc": [
                      "America/Belize",
                      "America/Costa_Rica",
                      "America/El_Salvador",
                      "America/Guatemala",
                      "America/Managua",
                      "America/Tegucigalpa",
                      "Etc/GMT+6",
                      "Pacific/Galapagos"
                    ]
                  },
                  {
                    "name": "Central Standard Time",
                    "abbr": "CDT",
                    "offset": -5,
                    "isdst": true,
                    "text": "(UTC-06:00) Central Time (US & Canada)",
                    "utc": [
                      "America/Chicago",
                      "America/Indiana/Knox",
                      "America/Indiana/Tell_City",
                      "America/Matamoros",
                      "America/Menominee",
                      "America/North_Dakota/Beulah",
                      "America/North_Dakota/Center",
                      "America/North_Dakota/New_Salem",
                      "America/Rainy_River",
                      "America/Rankin_Inlet",
                      "America/Resolute",
                      "America/Winnipeg",
                      "CST6CDT"
                    ]
                  },
                  {
                    "name": "Central Standard Time (Mexico)",
                    "abbr": "CDT",
                    "offset": -5,
                    "isdst": true,
                    "text": "(UTC-06:00) Guadalajara, Mexico City, Monterrey",
                    "utc": [
                      "America/Bahia_Banderas",
                      "America/Cancun",
                      "America/Merida",
                      "America/Mexico_City",
                      "America/Monterrey"
                    ]
                  },
                  {
                    "name": "Canada Central Standard Time",
                    "abbr": "CCST",
                    "offset": -6,
                    "isdst": false,
                    "text": "(UTC-06:00) Saskatchewan",
                    "utc": [
                      "America/Regina",
                      "America/Swift_Current"
                    ]
                  },
                  {
                    "name": "SA Pacific Standard Time",
                    "abbr": "SPST",
                    "offset": -5,
                    "isdst": false,
                    "text": "(UTC-05:00) Bogota, Lima, Quito",
                    "utc": [
                      "America/Bogota",
                      "America/Cayman",
                      "America/Coral_Harbour",
                      "America/Eirunepe",
                      "America/Guayaquil",
                      "America/Jamaica",
                      "America/Lima",
                      "America/Panama",
                      "America/Rio_Branco",
                      "Etc/GMT+5"
                    ]
                  },
                  {
                    "name": "Eastern Standard Time",
                    "abbr": "EDT",
                    "offset": -4,
                    "isdst": true,
                    "text": "(UTC-05:00) Eastern Time (US & Canada)",
                    "utc": [
                      "America/Detroit",
                      "America/Havana",
                      "America/Indiana/Petersburg",
                      "America/Indiana/Vincennes",
                      "America/Indiana/Winamac",
                      "America/Iqaluit",
                      "America/Kentucky/Monticello",
                      "America/Louisville",
                      "America/Montreal",
                      "America/Nassau",
                      "America/New_York",
                      "America/Nipigon",
                      "America/Pangnirtung",
                      "America/Port-au-Prince",
                      "America/Thunder_Bay",
                      "America/Toronto",
                      "EST5EDT"
                    ]
                  },
                  {
                    "name": "US Eastern Standard Time",
                    "abbr": "UEDT",
                    "offset": -4,
                    "isdst": true,
                    "text": "(UTC-05:00) Indiana (East)",
                    "utc": [
                      "America/Indiana/Marengo",
                      "America/Indiana/Vevay",
                      "America/Indianapolis"
                    ]
                  },
                  {
                    "name": "Venezuela Standard Time",
                    "abbr": "VST",
                    "offset": -4.5,
                    "isdst": false,
                    "text": "(UTC-04:30) Caracas",
                    "utc": [
                      "America/Caracas"
                    ]
                  },
                  {
                    "name": "Paraguay Standard Time",
                    "abbr": "PST",
                    "offset": -4,
                    "isdst": false,
                    "text": "(UTC-04:00) Asuncion",
                    "utc": [
                      "America/Asuncion"
                    ]
                  },
                  {
                    "name": "Atlantic Standard Time",
                    "abbr": "ADT",
                    "offset": -3,
                    "isdst": true,
                    "text": "(UTC-04:00) Atlantic Time (Canada)",
                    "utc": [
                      "America/Glace_Bay",
                      "America/Goose_Bay",
                      "America/Halifax",
                      "America/Moncton",
                      "America/Thule",
                      "Atlantic/Bermuda"
                    ]
                  },
                  {
                    "name": "Central Brazilian Standard Time",
                    "abbr": "CBST",
                    "offset": -4,
                    "isdst": false,
                    "text": "(UTC-04:00) Cuiaba",
                    "utc": [
                      "America/Campo_Grande",
                      "America/Cuiaba"
                    ]
                  },
                  {
                    "name": "SA Western Standard Time",
                    "abbr": "SWST",
                    "offset": -4,
                    "isdst": false,
                    "text": "(UTC-04:00) Georgetown, La Paz, Manaus, San Juan",
                    "utc": [
                      "America/Anguilla",
                      "America/Antigua",
                      "America/Aruba",
                      "America/Barbados",
                      "America/Blanc-Sablon",
                      "America/Boa_Vista",
                      "America/Curacao",
                      "America/Dominica",
                      "America/Grand_Turk",
                      "America/Grenada",
                      "America/Guadeloupe",
                      "America/Guyana",
                      "America/Kralendijk",
                      "America/La_Paz",
                      "America/Lower_Princes",
                      "America/Manaus",
                      "America/Marigot",
                      "America/Martinique",
                      "America/Montserrat",
                      "America/Port_of_Spain",
                      "America/Porto_Velho",
                      "America/Puerto_Rico",
                      "America/Santo_Domingo",
                      "America/St_Barthelemy",
                      "America/St_Kitts",
                      "America/St_Lucia",
                      "America/St_Thomas",
                      "America/St_Vincent",
                      "America/Tortola",
                      "Etc/GMT+4"
                    ]
                  },
                  {
                    "name": "Pacific SA Standard Time",
                    "abbr": "PSST",
                    "offset": -4,
                    "isdst": false,
                    "text": "(UTC-04:00) Santiago",
                    "utc": [
                      "America/Santiago",
                      "Antarctica/Palmer"
                    ]
                  },
                  {
                    "name": "Newfoundland Standard Time",
                    "abbr": "NDT",
                    "offset": -2.5,
                    "isdst": true,
                    "text": "(UTC-03:30) Newfoundland",
                    "utc": [
                      "America/St_Johns"
                    ]
                  },
                  {
                    "name": "E. South America Standard Time",
                    "abbr": "ESAST",
                    "offset": -3,
                    "isdst": false,
                    "text": "(UTC-03:00) Brasilia",
                    "utc": [
                      "America/Sao_Paulo"
                    ]
                  },
                  {
                    "name": "Argentina Standard Time",
                    "abbr": "AST",
                    "offset": -3,
                    "isdst": false,
                    "text": "(UTC-03:00) Buenos Aires",
                    "utc": [
                      "America/Argentina/La_Rioja",
                      "America/Argentina/Rio_Gallegos",
                      "America/Argentina/Salta",
                      "America/Argentina/San_Juan",
                      "America/Argentina/San_Luis",
                      "America/Argentina/Tucuman",
                      "America/Argentina/Ushuaia",
                      "America/Buenos_Aires",
                      "America/Catamarca",
                      "America/Cordoba",
                      "America/Jujuy",
                      "America/Mendoza"
                    ]
                  },
                  {
                    "name": "SA Eastern Standard Time",
                    "abbr": "SEST",
                    "offset": -3,
                    "isdst": false,
                    "text": "(UTC-03:00) Cayenne, Fortaleza",
                    "utc": [
                      "America/Araguaina",
                      "America/Belem",
                      "America/Cayenne",
                      "America/Fortaleza",
                      "America/Maceio",
                      "America/Paramaribo",
                      "America/Recife",
                      "America/Santarem",
                      "Antarctica/Rothera",
                      "Atlantic/Stanley",
                      "Etc/GMT+3"
                    ]
                  },
                  {
                    "name": "Greenland Standard Time",
                    "abbr": "GDT",
                    "offset": -2,
                    "isdst": true,
                    "text": "(UTC-03:00) Greenland",
                    "utc": [
                      "America/Godthab"
                    ]
                  },
                  {
                    "name": "Montevideo Standard Time",
                    "abbr": "MST",
                    "offset": -3,
                    "isdst": false,
                    "text": "(UTC-03:00) Montevideo",
                    "utc": [
                      "America/Montevideo"
                    ]
                  },
                  {
                    "name": "Bahia Standard Time",
                    "abbr": "BST",
                    "offset": -3,
                    "isdst": false,
                    "text": "(UTC-03:00) Salvador",
                    "utc": [
                      "America/Bahia"
                    ]
                  },
                  {
                    "name": "UTC-02",
                    "abbr": "U",
                    "offset": -2,
                    "isdst": false,
                    "text": "(UTC-02:00) Coordinated Universal Time-02",
                    "utc": [
                      "America/Noronha",
                      "Atlantic/South_Georgia",
                      "Etc/GMT+2"
                    ]
                  },
                  {
                    "name": "Mid-Atlantic Standard Time",
                    "abbr": "MDT",
                    "offset": -1,
                    "isdst": true,
                    "text": "(UTC-02:00) Mid-Atlantic - Old"
                  },
                  {
                    "name": "Azores Standard Time",
                    "abbr": "ADT",
                    "offset": 0,
                    "isdst": true,
                    "text": "(UTC-01:00) Azores",
                    "utc": [
                      "America/Scoresbysund",
                      "Atlantic/Azores"
                    ]
                  },
                  {
                    "name": "Cape Verde Standard Time",
                    "abbr": "CVST",
                    "offset": -1,
                    "isdst": false,
                    "text": "(UTC-01:00) Cape Verde Is.",
                    "utc": [
                      "Atlantic/Cape_Verde",
                      "Etc/GMT+1"
                    ]
                  },
                  {
                    "name": "Morocco Standard Time",
                    "abbr": "MDT",
                    "offset": 1,
                    "isdst": true,
                    "text": "(UTC) Casablanca",
                    "utc": [
                      "Africa/Casablanca",
                      "Africa/El_Aaiun"
                    ]
                  },
                  {
                    "name": "UTC",
                    "abbr": "CUT",
                    "offset": 0,
                    "isdst": false,
                    "text": "(UTC) Coordinated Universal Time",
                    "utc": [
                      "America/Danmarkshavn",
                      "Etc/GMT"
                    ]
                  },
                  {
                    "name": "GMT Standard Time",
                    "abbr": "GDT",
                    "offset": 1,
                    "isdst": true,
                    "text": "(UTC) Dublin, Edinburgh, Lisbon, London",
                    "utc": [
                      "Atlantic/Canary",
                      "Atlantic/Faeroe",
                      "Atlantic/Madeira",
                      "Europe/Dublin",
                      "Europe/Guernsey",
                      "Europe/Isle_of_Man",
                      "Europe/Jersey",
                      "Europe/Lisbon",
                      "Europe/London"
                    ]
                  },
                  {
                    "name": "Greenwich Standard Time",
                    "abbr": "GST",
                    "offset": 0,
                    "isdst": false,
                    "text": "(UTC) Monrovia, Reykjavik",
                    "utc": [
                      "Africa/Abidjan",
                      "Africa/Accra",
                      "Africa/Bamako",
                      "Africa/Banjul",
                      "Africa/Bissau",
                      "Africa/Conakry",
                      "Africa/Dakar",
                      "Africa/Freetown",
                      "Africa/Lome",
                      "Africa/Monrovia",
                      "Africa/Nouakchott",
                      "Africa/Ouagadougou",
                      "Africa/Sao_Tome",
                      "Atlantic/Reykjavik",
                      "Atlantic/St_Helena"
                    ]
                  },
                  {
                    "name": "W. Europe Standard Time",
                    "abbr": "WEDT",
                    "offset": 2,
                    "isdst": true,
                    "text": "(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",
                    "utc": [
                      "Arctic/Longyearbyen",
                      "Europe/Amsterdam",
                      "Europe/Andorra",
                      "Europe/Berlin",
                      "Europe/Busingen",
                      "Europe/Gibraltar",
                      "Europe/Luxembourg",
                      "Europe/Malta",
                      "Europe/Monaco",
                      "Europe/Oslo",
                      "Europe/Rome",
                      "Europe/San_Marino",
                      "Europe/Stockholm",
                      "Europe/Vaduz",
                      "Europe/Vatican",
                      "Europe/Vienna",
                      "Europe/Zurich"
                    ]
                  },
                  {
                    "name": "Central Europe Standard Time",
                    "abbr": "CEDT",
                    "offset": 2,
                    "isdst": true,
                    "text": "(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",
                    "utc": [
                      "Europe/Belgrade",
                      "Europe/Bratislava",
                      "Europe/Budapest",
                      "Europe/Ljubljana",
                      "Europe/Podgorica",
                      "Europe/Prague",
                      "Europe/Tirane"
                    ]
                  },
                  {
                    "name": "Romance Standard Time",
                    "abbr": "RDT",
                    "offset": 2,
                    "isdst": true,
                    "text": "(UTC+01:00) Brussels, Copenhagen, Madrid, Paris",
                    "utc": [
                      "Africa/Ceuta",
                      "Europe/Brussels",
                      "Europe/Copenhagen",
                      "Europe/Madrid",
                      "Europe/Paris"
                    ]
                  },
                  {
                    "name": "Central European Standard Time",
                    "abbr": "CEDT",
                    "offset": 2,
                    "isdst": true,
                    "text": "(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb",
                    "utc": [
                      "Europe/Sarajevo",
                      "Europe/Skopje",
                      "Europe/Warsaw",
                      "Europe/Zagreb"
                    ]
                  },
                  {
                    "name": "W. Central Africa Standard Time",
                    "abbr": "WCAST",
                    "offset": 1,
                    "isdst": false,
                    "text": "(UTC+01:00) West Central Africa",
                    "utc": [
                      "Africa/Algiers",
                      "Africa/Bangui",
                      "Africa/Brazzaville",
                      "Africa/Douala",
                      "Africa/Kinshasa",
                      "Africa/Lagos",
                      "Africa/Libreville",
                      "Africa/Luanda",
                      "Africa/Malabo",
                      "Africa/Ndjamena",
                      "Africa/Niamey",
                      "Africa/Porto-Novo",
                      "Africa/Tunis",
                      "Etc/GMT-1"
                    ]
                  },
                  {
                    "name": "Namibia Standard Time",
                    "abbr": "NST",
                    "offset": 1,
                    "isdst": false,
                    "text": "(UTC+01:00) Windhoek",
                    "utc": [
                      "Africa/Windhoek"
                    ]
                  },
                  {
                    "name": "GTB Standard Time",
                    "abbr": "GDT",
                    "offset": 3,
                    "isdst": true,
                    "text": "(UTC+02:00) Athens, Bucharest",
                    "utc": [
                      "Asia/Nicosia",
                      "Europe/Athens",
                      "Europe/Bucharest",
                      "Europe/Chisinau"
                    ]
                  },
                  {
                    "name": "Middle East Standard Time",
                    "abbr": "MEDT",
                    "offset": 3,
                    "isdst": true,
                    "text": "(UTC+02:00) Beirut",
                    "utc": [
                      "Asia/Beirut"
                    ]
                  },
                  {
                    "name": "Egypt Standard Time",
                    "abbr": "EST",
                    "offset": 2,
                    "isdst": false,
                    "text": "(UTC+02:00) Cairo",
                    "utc": [
                      "Africa/Cairo"
                    ]
                  },
                  {
                    "name": "Syria Standard Time",
                    "abbr": "SDT",
                    "offset": 3,
                    "isdst": true,
                    "text": "(UTC+02:00) Damascus",
                    "utc": [
                      "Asia/Damascus"
                    ]
                  },
                  {
                    "name": "E. Europe Standard Time",
                    "abbr": "EEDT",
                    "offset": 3,
                    "isdst": true,
                    "text": "(UTC+02:00) E. Europe"
                  },
                  {
                    "name": "South Africa Standard Time",
                    "abbr": "SAST",
                    "offset": 2,
                    "isdst": false,
                    "text": "(UTC+02:00) Harare, Pretoria",
                    "utc": [
                      "Africa/Blantyre",
                      "Africa/Bujumbura",
                      "Africa/Gaborone",
                      "Africa/Harare",
                      "Africa/Johannesburg",
                      "Africa/Kigali",
                      "Africa/Lubumbashi",
                      "Africa/Lusaka",
                      "Africa/Maputo",
                      "Africa/Maseru",
                      "Africa/Mbabane",
                      "Etc/GMT-2"
                    ]
                  },
                  {
                    "name": "FLE Standard Time",
                    "abbr": "FDT",
                    "offset": 3,
                    "isdst": true,
                    "text": "(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius",
                    "utc": [
                      "Europe/Helsinki",
                      "Europe/Kiev",
                      "Europe/Mariehamn",
                      "Europe/Riga",
                      "Europe/Sofia",
                      "Europe/Tallinn",
                      "Europe/Uzhgorod",
                      "Europe/Vilnius",
                      "Europe/Zaporozhye"
                    ]
                  },
                  {
                    "name": "Turkey Standard Time",
                    "abbr": "TDT",
                    "offset": 3,
                    "isdst": true,
                    "text": "(UTC+02:00) Istanbul",
                    "utc": [
                      "Europe/Istanbul"
                    ]
                  },
                  {
                    "name": "Israel Standard Time",
                    "abbr": "JDT",
                    "offset": 3,
                    "isdst": true,
                    "text": "(UTC+02:00) Jerusalem",
                    "utc": [
                      "Asia/Jerusalem"
                    ]
                  },
                  {
                    "name": "Libya Standard Time",
                    "abbr": "LST",
                    "offset": 2,
                    "isdst": false,
                    "text": "(UTC+02:00) Tripoli",
                    "utc": [
                      "Africa/Tripoli"
                    ]
                  },
                  {
                    "name": "Jordan Standard Time",
                    "abbr": "JST",
                    "offset": 3,
                    "isdst": false,
                    "text": "(UTC+03:00) Amman",
                    "utc": [
                      "Asia/Amman"
                    ]
                  },
                  {
                    "name": "Arabic Standard Time",
                    "abbr": "AST",
                    "offset": 3,
                    "isdst": false,
                    "text": "(UTC+03:00) Baghdad",
                    "utc": [
                      "Asia/Baghdad"
                    ]
                  },
                  {
                    "name": "Kaliningrad Standard Time",
                    "abbr": "KST",
                    "offset": 3,
                    "isdst": false,
                    "text": "(UTC+03:00) Kaliningrad, Minsk",
                    "utc": [
                      "Europe/Kaliningrad",
                      "Europe/Minsk"
                    ]
                  },
                  {
                    "name": "Arab Standard Time",
                    "abbr": "AST",
                    "offset": 3,
                    "isdst": false,
                    "text": "(UTC+03:00) Kuwait, Riyadh",
                    "utc": [
                      "Asia/Aden",
                      "Asia/Bahrain",
                      "Asia/Kuwait",
                      "Asia/Qatar",
                      "Asia/Riyadh"
                    ]
                  },
                  {
                    "name": "E. Africa Standard Time",
                    "abbr": "EAST",
                    "offset": 3,
                    "isdst": false,
                    "text": "(UTC+03:00) Nairobi",
                    "utc": [
                      "Africa/Addis_Ababa",
                      "Africa/Asmera",
                      "Africa/Dar_es_Salaam",
                      "Africa/Djibouti",
                      "Africa/Juba",
                      "Africa/Kampala",
                      "Africa/Khartoum",
                      "Africa/Mogadishu",
                      "Africa/Nairobi",
                      "Antarctica/Syowa",
                      "Etc/GMT-3",
                      "Indian/Antananarivo",
                      "Indian/Comoro",
                      "Indian/Mayotte"
                    ]
                  },
                  {
                    "name": "Iran Standard Time",
                    "abbr": "IDT",
                    "offset": 4.5,
                    "isdst": true,
                    "text": "(UTC+03:30) Tehran",
                    "utc": [
                      "Asia/Tehran"
                    ]
                  },
                  {
                    "name": "Arabian Standard Time",
                    "abbr": "AST",
                    "offset": 4,
                    "isdst": false,
                    "text": "(UTC+04:00) Abu Dhabi, Muscat",
                    "utc": [
                      "Asia/Dubai",
                      "Asia/Muscat",
                      "Etc/GMT-4"
                    ]
                  },
                  {
                    "name": "Azerbaijan Standard Time",
                    "abbr": "ADT",
                    "offset": 5,
                    "isdst": true,
                    "text": "(UTC+04:00) Baku",
                    "utc": [
                      "Asia/Baku"
                    ]
                  },
                  {
                    "name": "Russian Standard Time",
                    "abbr": "RST",
                    "offset": 4,
                    "isdst": false,
                    "text": "(UTC+04:00) Moscow, St. Petersburg, Volgograd",
                    "utc": [
                      "Europe/Moscow",
                      "Europe/Samara",
                      "Europe/Simferopol",
                      "Europe/Volgograd"
                    ]
                  },
                  {
                    "name": "Mauritius Standard Time",
                    "abbr": "MST",
                    "offset": 4,
                    "isdst": false,
                    "text": "(UTC+04:00) Port Louis",
                    "utc": [
                      "Indian/Mahe",
                      "Indian/Mauritius",
                      "Indian/Reunion"
                    ]
                  },
                  {
                    "name": "Georgian Standard Time",
                    "abbr": "GST",
                    "offset": 4,
                    "isdst": false,
                    "text": "(UTC+04:00) Tbilisi",
                    "utc": [
                      "Asia/Tbilisi"
                    ]
                  },
                  {
                    "name": "Caucasus Standard Time",
                    "abbr": "CST",
                    "offset": 4,
                    "isdst": false,
                    "text": "(UTC+04:00) Yerevan",
                    "utc": [
                      "Asia/Yerevan"
                    ]
                  },
                  {
                    "name": "Afghanistan Standard Time",
                    "abbr": "AST",
                    "offset": 4.5,
                    "isdst": false,
                    "text": "(UTC+04:30) Kabul",
                    "utc": [
                      "Asia/Kabul"
                    ]
                  },
                  {
                    "name": "West Asia Standard Time",
                    "abbr": "WAST",
                    "offset": 5,
                    "isdst": false,
                    "text": "(UTC+05:00) Ashgabat, Tashkent",
                    "utc": [
                      "Antarctica/Mawson",
                      "Asia/Aqtau",
                      "Asia/Aqtobe",
                      "Asia/Ashgabat",
                      "Asia/Dushanbe",
                      "Asia/Oral",
                      "Asia/Samarkand",
                      "Asia/Tashkent",
                      "Etc/GMT-5",
                      "Indian/Kerguelen",
                      "Indian/Maldives"
                    ]
                  },
                  {
                    "name": "Pakistan Standard Time",
                    "abbr": "PST",
                    "offset": 5,
                    "isdst": false,
                    "text": "(UTC+05:00) Islamabad, Karachi",
                    "utc": [
                      "Asia/Karachi"
                    ]
                  },
                  {
                    "name": "India Standard Time",
                    "abbr": "IST",
                    "offset": 5.5,
                    "isdst": false,
                    "text": "(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi",
                    "utc": [
                      "Asia/Calcutta"
                    ]
                  },
                  {
                    "name": "Sri Lanka Standard Time",
                    "abbr": "SLST",
                    "offset": 5.5,
                    "isdst": false,
                    "text": "(UTC+05:30) Sri Jayawardenepura",
                    "utc": [
                      "Asia/Colombo"
                    ]
                  },
                  {
                    "name": "Nepal Standard Time",
                    "abbr": "NST",
                    "offset": 5.75,
                    "isdst": false,
                    "text": "(UTC+05:45) Kathmandu",
                    "utc": [
                      "Asia/Katmandu"
                    ]
                  },
                  {
                    "name": "Central Asia Standard Time",
                    "abbr": "CAST",
                    "offset": 6,
                    "isdst": false,
                    "text": "(UTC+06:00) Astana",
                    "utc": [
                      "Antarctica/Vostok",
                      "Asia/Almaty",
                      "Asia/Bishkek",
                      "Asia/Qyzylorda",
                      "Asia/Urumqi",
                      "Etc/GMT-6",
                      "Indian/Chagos"
                    ]
                  },
                  {
                    "name": "Bangladesh Standard Time",
                    "abbr": "BST",
                    "offset": 6,
                    "isdst": false,
                    "text": "(UTC+06:00) Dhaka",
                    "utc": [
                      "Asia/Dhaka",
                      "Asia/Thimphu"
                    ]
                  },
                  {
                    "name": "Ekaterinburg Standard Time",
                    "abbr": "EST",
                    "offset": 6,
                    "isdst": false,
                    "text": "(UTC+06:00) Ekaterinburg",
                    "utc": [
                      "Asia/Yekaterinburg"
                    ]
                  },
                  {
                    "name": "Myanmar Standard Time",
                    "abbr": "MST",
                    "offset": 6.5,
                    "isdst": false,
                    "text": "(UTC+06:30) Yangon (Rangoon)",
                    "utc": [
                      "Asia/Rangoon",
                      "Indian/Cocos"
                    ]
                  },
                  {
                    "name": "SE Asia Standard Time",
                    "abbr": "SAST",
                    "offset": 7,
                    "isdst": false,
                    "text": "(UTC+07:00) Bangkok, Hanoi, Jakarta",
                    "utc": [
                      "Antarctica/Davis",
                      "Asia/Bangkok",
                      "Asia/Hovd",
                      "Asia/Jakarta",
                      "Asia/Phnom_Penh",
                      "Asia/Pontianak",
                      "Asia/Saigon",
                      "Asia/Vientiane",
                      "Etc/GMT-7",
                      "Indian/Christmas"
                    ]
                  },
                  {
                    "name": "N. Central Asia Standard Time",
                    "abbr": "NCAST",
                    "offset": 7,
                    "isdst": false,
                    "text": "(UTC+07:00) Novosibirsk",
                    "utc": [
                      "Asia/Novokuznetsk",
                      "Asia/Novosibirsk",
                      "Asia/Omsk"
                    ]
                  },
                  {
                    "name": "China Standard Time",
                    "abbr": "CST",
                    "offset": 8,
                    "isdst": false,
                    "text": "(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi",
                    "utc": [
                      "Asia/Hong_Kong",
                      "Asia/Macau",
                      "Asia/Shanghai"
                    ]
                  },
                  {
                    "name": "North Asia Standard Time",
                    "abbr": "NAST",
                    "offset": 8,
                    "isdst": false,
                    "text": "(UTC+08:00) Krasnoyarsk",
                    "utc": [
                      "Asia/Krasnoyarsk"
                    ]
                  },
                  {
                    "name": "Singapore Standard Time",
                    "abbr": "MPST",
                    "offset": 8,
                    "isdst": false,
                    "text": "(UTC+08:00) Kuala Lumpur, Singapore",
                    "utc": [
                      "Asia/Brunei",
                      "Asia/Kuala_Lumpur",
                      "Asia/Kuching",
                      "Asia/Makassar",
                      "Asia/Manila",
                      "Asia/Singapore",
                      "Etc/GMT-8"
                    ]
                  },
                  {
                    "name": "W. Australia Standard Time",
                    "abbr": "WAST",
                    "offset": 8,
                    "isdst": false,
                    "text": "(UTC+08:00) Perth",
                    "utc": [
                      "Antarctica/Casey",
                      "Australia/Perth"
                    ]
                  },
                  {
                    "name": "Taipei Standard Time",
                    "abbr": "TST",
                    "offset": 8,
                    "isdst": false,
                    "text": "(UTC+08:00) Taipei",
                    "utc": [
                      "Asia/Taipei"
                    ]
                  },
                  {
                    "name": "Ulaanbaatar Standard Time",
                    "abbr": "UST",
                    "offset": 8,
                    "isdst": false,
                    "text": "(UTC+08:00) Ulaanbaatar",
                    "utc": [
                      "Asia/Choibalsan",
                      "Asia/Ulaanbaatar"
                    ]
                  },
                  {
                    "name": "North Asia East Standard Time",
                    "abbr": "NAEST",
                    "offset": 9,
                    "isdst": false,
                    "text": "(UTC+09:00) Irkutsk",
                    "utc": [
                      "Asia/Irkutsk"
                    ]
                  },
                  {
                    "name": "Tokyo Standard Time",
                    "abbr": "TST",
                    "offset": 9,
                    "isdst": false,
                    "text": "(UTC+09:00) Osaka, Sapporo, Tokyo",
                    "utc": [
                      "Asia/Dili",
                      "Asia/Jayapura",
                      "Asia/Tokyo",
                      "Etc/GMT-9",
                      "Pacific/Palau"
                    ]
                  },
                  {
                    "name": "Korea Standard Time",
                    "abbr": "KST",
                    "offset": 9,
                    "isdst": false,
                    "text": "(UTC+09:00) Seoul",
                    "utc": [
                      "Asia/Pyongyang",
                      "Asia/Seoul"
                    ]
                  },
                  {
                    "name": "Cen. Australia Standard Time",
                    "abbr": "CAST",
                    "offset": 9.5,
                    "isdst": false,
                    "text": "(UTC+09:30) Adelaide",
                    "utc": [
                      "Australia/Adelaide",
                      "Australia/Broken_Hill"
                    ]
                  },
                  {
                    "name": "AUS Central Standard Time",
                    "abbr": "ACST",
                    "offset": 9.5,
                    "isdst": false,
                    "text": "(UTC+09:30) Darwin",
                    "utc": [
                      "Australia/Darwin"
                    ]
                  },
                  {
                    "name": "E. Australia Standard Time",
                    "abbr": "EAST",
                    "offset": 10,
                    "isdst": false,
                    "text": "(UTC+10:00) Brisbane",
                    "utc": [
                      "Australia/Brisbane",
                      "Australia/Lindeman"
                    ]
                  },
                  {
                    "name": "AUS Eastern Standard Time",
                    "abbr": "AEST",
                    "offset": 10,
                    "isdst": false,
                    "text": "(UTC+10:00) Canberra, Melbourne, Sydney",
                    "utc": [
                      "Australia/Melbourne",
                      "Australia/Sydney"
                    ]
                  },
                  {
                    "name": "West Pacific Standard Time",
                    "abbr": "WPST",
                    "offset": 10,
                    "isdst": false,
                    "text": "(UTC+10:00) Guam, Port Moresby",
                    "utc": [
                      "Antarctica/DumontDUrville",
                      "Etc/GMT-10",
                      "Pacific/Guam",
                      "Pacific/Port_Moresby",
                      "Pacific/Saipan",
                      "Pacific/Truk"
                    ]
                  },
                  {
                    "name": "Tasmania Standard Time",
                    "abbr": "TST",
                    "offset": 10,
                    "isdst": false,
                    "text": "(UTC+10:00) Hobart",
                    "utc": [
                      "Australia/Currie",
                      "Australia/Hobart"
                    ]
                  },
                  {
                    "name": "Yakutsk Standard Time",
                    "abbr": "YST",
                    "offset": 10,
                    "isdst": false,
                    "text": "(UTC+10:00) Yakutsk",
                    "utc": [
                      "Asia/Chita",
                      "Asia/Khandyga",
                      "Asia/Yakutsk"
                    ]
                  },
                  {
                    "name": "Central Pacific Standard Time",
                    "abbr": "CPST",
                    "offset": 11,
                    "isdst": false,
                    "text": "(UTC+11:00) Solomon Is., New Caledonia",
                    "utc": [
                      "Antarctica/Macquarie",
                      "Etc/GMT-11",
                      "Pacific/Efate",
                      "Pacific/Guadalcanal",
                      "Pacific/Kosrae",
                      "Pacific/Noumea",
                      "Pacific/Ponape"
                    ]
                  },
                  {
                    "name": "Vladivostok Standard Time",
                    "abbr": "VST",
                    "offset": 11,
                    "isdst": false,
                    "text": "(UTC+11:00) Vladivostok",
                    "utc": [
                      "Asia/Sakhalin",
                      "Asia/Ust-Nera",
                      "Asia/Vladivostok"
                    ]
                  },
                  {
                    "name": "New Zealand Standard Time",
                    "abbr": "NZST",
                    "offset": 12,
                    "isdst": false,
                    "text": "(UTC+12:00) Auckland, Wellington",
                    "utc": [
                      "Antarctica/McMurdo",
                      "Pacific/Auckland"
                    ]
                  },
                  {
                    "name": "UTC+12",
                    "abbr": "U",
                    "offset": 12,
                    "isdst": false,
                    "text": "(UTC+12:00) Coordinated Universal Time+12",
                    "utc": [
                      "Etc/GMT-12",
                      "Pacific/Funafuti",
                      "Pacific/Kwajalein",
                      "Pacific/Majuro",
                      "Pacific/Nauru",
                      "Pacific/Tarawa",
                      "Pacific/Wake",
                      "Pacific/Wallis"
                    ]
                  },
                  {
                    "name": "Fiji Standard Time",
                    "abbr": "FST",
                    "offset": 12,
                    "isdst": false,
                    "text": "(UTC+12:00) Fiji",
                    "utc": [
                      "Pacific/Fiji"
                    ]
                  },
                  {
                    "name": "Magadan Standard Time",
                    "abbr": "MST",
                    "offset": 12,
                    "isdst": false,
                    "text": "(UTC+12:00) Magadan",
                    "utc": [
                      "Asia/Anadyr",
                      "Asia/Kamchatka",
                      "Asia/Magadan",
                      "Asia/Srednekolymsk"
                    ]
                  },
                  {
                    "name": "Kamchatka Standard Time",
                    "abbr": "KDT",
                    "offset": 13,
                    "isdst": true,
                    "text": "(UTC+12:00) Petropavlovsk-Kamchatsky - Old"
                  },
                  {
                    "name": "Tonga Standard Time",
                    "abbr": "TST",
                    "offset": 13,
                    "isdst": false,
                    "text": "(UTC+13:00) Nuku'alofa",
                    "utc": [
                      "Etc/GMT-13",
                      "Pacific/Enderbury",
                      "Pacific/Fakaofo",
                      "Pacific/Tongatapu"
                    ]
                  },
                  {
                    "name": "Samoa Standard Time",
                    "abbr": "SST",
                    "offset": 13,
                    "isdst": false,
                    "text": "(UTC+13:00) Samoa",
                    "utc": [
                      "Pacific/Apia"
                    ]
                  }
                ]
    };

    var o_hasOwnProperty = Object.prototype.hasOwnProperty;
    var o_keys = (Object.keys || function(obj) {
      var result = [];
      for (var key in obj) {
        if (o_hasOwnProperty.call(obj, key)) {
          result.push(key);
        }
      }

      return result;
    });

    function _copyObject(source, target) {
      var keys = o_keys(source);
      var key;

      for (var i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        target[key] = source[key] || target[key];
      }
    }

    function _copyArray(source, target) {
      for (var i = 0, l = source.length; i < l; i++) {
        target[i] = source[i];
      }
    }

    function copyObject(source, _target) {
        var isArray = Array.isArray(source);
        var target = _target || (isArray ? new Array(source.length) : {});

        if (isArray) {
          _copyArray(source, target);
        } else {
          _copyObject(source, target);
        }

        return target;
    }

    /** Get the data based on key**/
    Chance.prototype.get = function (name) {
        return copyObject(data[name]);
    };

    // Mac Address
    Chance.prototype.mac_address = function(options){
        // typically mac addresses are separated by ":"
        // however they can also be separated by "-"
        // the network variant uses a dot every fourth byte

        options = initOptions(options);
        if(!options.separator) {
            options.separator =  options.networkVersion ? "." : ":";
        }

        var mac_pool="ABCDEF1234567890",
            mac = "";
        if(!options.networkVersion) {
            mac = this.n(this.string, 6, { pool: mac_pool, length:2 }).join(options.separator);
        } else {
            mac = this.n(this.string, 3, { pool: mac_pool, length:4 }).join(options.separator);
        }

        return mac;
    };

    Chance.prototype.normal = function (options) {
        options = initOptions(options, {mean : 0, dev : 1, pool : []});

        testRange(
            options.pool.constructor !== Array,
            "Chance: The pool option must be a valid array."
        );

        // If a pool has been passed, then we are returning an item from that pool,
        // using the normal distribution settings that were passed in
        if (options.pool.length > 0) {
            return this.normal_pool(options);
        }

        // The Marsaglia Polar method
        var s, u, v, norm,
            mean = options.mean,
            dev = options.dev;

        do {
            // U and V are from the uniform distribution on (-1, 1)
            u = this.random() * 2 - 1;
            v = this.random() * 2 - 1;

            s = u * u + v * v;
        } while (s >= 1);

        // Compute the standard normal variate
        norm = u * Math.sqrt(-2 * Math.log(s) / s);

        // Shape and scale
        return dev * norm + mean;
    };

    Chance.prototype.normal_pool = function(options) {
        var performanceCounter = 0;
        do {
            var idx = Math.round(this.normal({ mean: options.mean, dev: options.dev }));
            if (idx < options.pool.length && idx >= 0) {
                return options.pool[idx];
            } else {
                performanceCounter++;
            }
        } while(performanceCounter < 100);

        throw new RangeError("Chance: Your pool is too small for the given mean and standard deviation. Please adjust.");
    };

    Chance.prototype.radio = function (options) {
        // Initial Letter (Typically Designated by Side of Mississippi River)
        options = initOptions(options, {side : "?"});
        var fl = "";
        switch (options.side.toLowerCase()) {
        case "east":
        case "e":
            fl = "W";
            break;
        case "west":
        case "w":
            fl = "K";
            break;
        default:
            fl = this.character({pool: "KW"});
            break;
        }

        return fl + this.character({alpha: true, casing: "upper"}) +
                this.character({alpha: true, casing: "upper"}) +
                this.character({alpha: true, casing: "upper"});
    };

    // Set the data as key and data or the data map
    Chance.prototype.set = function (name, values) {
        if (typeof name === "string") {
            data[name] = values;
        } else {
            data = copyObject(name, data);
        }
    };

    Chance.prototype.tv = function (options) {
        return this.radio(options);
    };

    // ID number for Brazil companies
    Chance.prototype.cnpj = function () {
        var n = this.n(this.natural, 8, { max: 9 });
        var d1 = 2+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;
        d1 = 11 - (d1 % 11);
        if (d1>=10){
            d1 = 0;
        }
        var d2 = d1*2+3+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;
        d2 = 11 - (d2 % 11);
        if (d2>=10){
            d2 = 0;
        }
        return ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/0001-'+d1+d2;
    };

    // -- End Miscellaneous --

    Chance.prototype.mersenne_twister = function (seed) {
        return new MersenneTwister(seed);
    };

    Chance.prototype.blueimp_md5 = function () {
        return new BlueImpMD5();
    };

    // Mersenne Twister from https://gist.github.com/banksean/300494
    var MersenneTwister = function (seed) {
        if (seed === undefined) {
            // kept random number same size as time used previously to ensure no unexpected results downstream
            seed = Math.floor(Math.random()*Math.pow(10,13));
        }
        /* Period parameters */
        this.N = 624;
        this.M = 397;
        this.MATRIX_A = 0x9908b0df;   /* constant vector a */
        this.UPPER_MASK = 0x80000000; /* most significant w-r bits */
        this.LOWER_MASK = 0x7fffffff; /* least significant r bits */

        this.mt = new Array(this.N); /* the array for the state vector */
        this.mti = this.N + 1; /* mti==N + 1 means mt[N] is not initialized */

        this.init_genrand(seed);
    };

    /* initializes mt[N] with a seed */
    MersenneTwister.prototype.init_genrand = function (s) {
        this.mt[0] = s >>> 0;
        for (this.mti = 1; this.mti < this.N; this.mti++) {
            s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30);
            this.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253) + this.mti;
            /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */
            /* In the previous versions, MSBs of the seed affect   */
            /* only MSBs of the array mt[].                        */
            /* 2002/01/09 modified by Makoto Matsumoto             */
            this.mt[this.mti] >>>= 0;
            /* for >32 bit machines */
        }
    };

    /* initialize by an array with array-length */
    /* init_key is the array for initializing keys */
    /* key_length is its length */
    /* slight change for C++, 2004/2/26 */
    MersenneTwister.prototype.init_by_array = function (init_key, key_length) {
        var i = 1, j = 0, k, s;
        this.init_genrand(19650218);
        k = (this.N > key_length ? this.N : key_length);
        for (; k; k--) {
            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);
            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525))) + init_key[j] + j; /* non linear */
            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */
            i++;
            j++;
            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }
            if (j >= key_length) { j = 0; }
        }
        for (k = this.N - 1; k; k--) {
            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);
            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941)) - i; /* non linear */
            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */
            i++;
            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }
        }

        this.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */
    };

    /* generates a random number on [0,0xffffffff]-interval */
    MersenneTwister.prototype.genrand_int32 = function () {
        var y;
        var mag01 = new Array(0x0, this.MATRIX_A);
        /* mag01[x] = x * MATRIX_A  for x=0,1 */

        if (this.mti >= this.N) { /* generate N words at one time */
            var kk;

            if (this.mti === this.N + 1) {   /* if init_genrand() has not been called, */
                this.init_genrand(5489); /* a default initial seed is used */
            }
            for (kk = 0; kk < this.N - this.M; kk++) {
                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);
                this.mt[kk] = this.mt[kk + this.M] ^ (y >>> 1) ^ mag01[y & 0x1];
            }
            for (;kk < this.N - 1; kk++) {
                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);
                this.mt[kk] = this.mt[kk + (this.M - this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];
            }
            y = (this.mt[this.N - 1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);
            this.mt[this.N - 1] = this.mt[this.M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];

            this.mti = 0;
        }

        y = this.mt[this.mti++];

        /* Tempering */
        y ^= (y >>> 11);
        y ^= (y << 7) & 0x9d2c5680;
        y ^= (y << 15) & 0xefc60000;
        y ^= (y >>> 18);

        return y >>> 0;
    };

    /* generates a random number on [0,0x7fffffff]-interval */
    MersenneTwister.prototype.genrand_int31 = function () {
        return (this.genrand_int32() >>> 1);
    };

    /* generates a random number on [0,1]-real-interval */
    MersenneTwister.prototype.genrand_real1 = function () {
        return this.genrand_int32() * (1.0 / 4294967295.0);
        /* divided by 2^32-1 */
    };

    /* generates a random number on [0,1)-real-interval */
    MersenneTwister.prototype.random = function () {
        return this.genrand_int32() * (1.0 / 4294967296.0);
        /* divided by 2^32 */
    };

    /* generates a random number on (0,1)-real-interval */
    MersenneTwister.prototype.genrand_real3 = function () {
        return (this.genrand_int32() + 0.5) * (1.0 / 4294967296.0);
        /* divided by 2^32 */
    };

    /* generates a random number on [0,1) with 53-bit resolution*/
    MersenneTwister.prototype.genrand_res53 = function () {
        var a = this.genrand_int32()>>>5, b = this.genrand_int32()>>>6;
        return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);
    };

    // BlueImp MD5 hashing algorithm from https://github.com/blueimp/JavaScript-MD5
    var BlueImpMD5 = function () {};

    BlueImpMD5.prototype.VERSION = '1.0.1';

    /*
    * Add integers, wrapping at 2^32. This uses 16-bit operations internally
    * to work around bugs in some JS interpreters.
    */
    BlueImpMD5.prototype.safe_add = function safe_add(x, y) {
        var lsw = (x & 0xFFFF) + (y & 0xFFFF),
            msw = (x >> 16) + (y >> 16) + (lsw >> 16);
        return (msw << 16) | (lsw & 0xFFFF);
    };

    /*
    * Bitwise rotate a 32-bit number to the left.
    */
    BlueImpMD5.prototype.bit_roll = function (num, cnt) {
        return (num << cnt) | (num >>> (32 - cnt));
    };

    /*
    * These functions implement the five basic operations the algorithm uses.
    */
    BlueImpMD5.prototype.md5_cmn = function (q, a, b, x, s, t) {
        return this.safe_add(this.bit_roll(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s), b);
    };
    BlueImpMD5.prototype.md5_ff = function (a, b, c, d, x, s, t) {
        return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
    };
    BlueImpMD5.prototype.md5_gg = function (a, b, c, d, x, s, t) {
        return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
    };
    BlueImpMD5.prototype.md5_hh = function (a, b, c, d, x, s, t) {
        return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);
    };
    BlueImpMD5.prototype.md5_ii = function (a, b, c, d, x, s, t) {
        return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
    };

    /*
    * Calculate the MD5 of an array of little-endian words, and a bit length.
    */
    BlueImpMD5.prototype.binl_md5 = function (x, len) {
        /* append padding */
        x[len >> 5] |= 0x80 << (len % 32);
        x[(((len + 64) >>> 9) << 4) + 14] = len;

        var i, olda, oldb, oldc, oldd,
            a =  1732584193,
            b = -271733879,
            c = -1732584194,
            d =  271733878;

        for (i = 0; i < x.length; i += 16) {
            olda = a;
            oldb = b;
            oldc = c;
            oldd = d;

            a = this.md5_ff(a, b, c, d, x[i],       7, -680876936);
            d = this.md5_ff(d, a, b, c, x[i +  1], 12, -389564586);
            c = this.md5_ff(c, d, a, b, x[i +  2], 17,  606105819);
            b = this.md5_ff(b, c, d, a, x[i +  3], 22, -1044525330);
            a = this.md5_ff(a, b, c, d, x[i +  4],  7, -176418897);
            d = this.md5_ff(d, a, b, c, x[i +  5], 12,  1200080426);
            c = this.md5_ff(c, d, a, b, x[i +  6], 17, -1473231341);
            b = this.md5_ff(b, c, d, a, x[i +  7], 22, -45705983);
            a = this.md5_ff(a, b, c, d, x[i +  8],  7,  1770035416);
            d = this.md5_ff(d, a, b, c, x[i +  9], 12, -1958414417);
            c = this.md5_ff(c, d, a, b, x[i + 10], 17, -42063);
            b = this.md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);
            a = this.md5_ff(a, b, c, d, x[i + 12],  7,  1804603682);
            d = this.md5_ff(d, a, b, c, x[i + 13], 12, -40341101);
            c = this.md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);
            b = this.md5_ff(b, c, d, a, x[i + 15], 22,  1236535329);

            a = this.md5_gg(a, b, c, d, x[i +  1],  5, -165796510);
            d = this.md5_gg(d, a, b, c, x[i +  6],  9, -1069501632);
            c = this.md5_gg(c, d, a, b, x[i + 11], 14,  643717713);
            b = this.md5_gg(b, c, d, a, x[i],      20, -373897302);
            a = this.md5_gg(a, b, c, d, x[i +  5],  5, -701558691);
            d = this.md5_gg(d, a, b, c, x[i + 10],  9,  38016083);
            c = this.md5_gg(c, d, a, b, x[i + 15], 14, -660478335);
            b = this.md5_gg(b, c, d, a, x[i +  4], 20, -405537848);
            a = this.md5_gg(a, b, c, d, x[i +  9],  5,  568446438);
            d = this.md5_gg(d, a, b, c, x[i + 14],  9, -1019803690);
            c = this.md5_gg(c, d, a, b, x[i +  3], 14, -187363961);
            b = this.md5_gg(b, c, d, a, x[i +  8], 20,  1163531501);
            a = this.md5_gg(a, b, c, d, x[i + 13],  5, -1444681467);
            d = this.md5_gg(d, a, b, c, x[i +  2],  9, -51403784);
            c = this.md5_gg(c, d, a, b, x[i +  7], 14,  1735328473);
            b = this.md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);

            a = this.md5_hh(a, b, c, d, x[i +  5],  4, -378558);
            d = this.md5_hh(d, a, b, c, x[i +  8], 11, -2022574463);
            c = this.md5_hh(c, d, a, b, x[i + 11], 16,  1839030562);
            b = this.md5_hh(b, c, d, a, x[i + 14], 23, -35309556);
            a = this.md5_hh(a, b, c, d, x[i +  1],  4, -1530992060);
            d = this.md5_hh(d, a, b, c, x[i +  4], 11,  1272893353);
            c = this.md5_hh(c, d, a, b, x[i +  7], 16, -155497632);
            b = this.md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);
            a = this.md5_hh(a, b, c, d, x[i + 13],  4,  681279174);
            d = this.md5_hh(d, a, b, c, x[i],      11, -358537222);
            c = this.md5_hh(c, d, a, b, x[i +  3], 16, -722521979);
            b = this.md5_hh(b, c, d, a, x[i +  6], 23,  76029189);
            a = this.md5_hh(a, b, c, d, x[i +  9],  4, -640364487);
            d = this.md5_hh(d, a, b, c, x[i + 12], 11, -421815835);
            c = this.md5_hh(c, d, a, b, x[i + 15], 16,  530742520);
            b = this.md5_hh(b, c, d, a, x[i +  2], 23, -995338651);

            a = this.md5_ii(a, b, c, d, x[i],       6, -198630844);
            d = this.md5_ii(d, a, b, c, x[i +  7], 10,  1126891415);
            c = this.md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);
            b = this.md5_ii(b, c, d, a, x[i +  5], 21, -57434055);
            a = this.md5_ii(a, b, c, d, x[i + 12],  6,  1700485571);
            d = this.md5_ii(d, a, b, c, x[i +  3], 10, -1894986606);
            c = this.md5_ii(c, d, a, b, x[i + 10], 15, -1051523);
            b = this.md5_ii(b, c, d, a, x[i +  1], 21, -2054922799);
            a = this.md5_ii(a, b, c, d, x[i +  8],  6,  1873313359);
            d = this.md5_ii(d, a, b, c, x[i + 15], 10, -30611744);
            c = this.md5_ii(c, d, a, b, x[i +  6], 15, -1560198380);
            b = this.md5_ii(b, c, d, a, x[i + 13], 21,  1309151649);
            a = this.md5_ii(a, b, c, d, x[i +  4],  6, -145523070);
            d = this.md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);
            c = this.md5_ii(c, d, a, b, x[i +  2], 15,  718787259);
            b = this.md5_ii(b, c, d, a, x[i +  9], 21, -343485551);

            a = this.safe_add(a, olda);
            b = this.safe_add(b, oldb);
            c = this.safe_add(c, oldc);
            d = this.safe_add(d, oldd);
        }
        return [a, b, c, d];
    };

    /*
    * Convert an array of little-endian words to a string
    */
    BlueImpMD5.prototype.binl2rstr = function (input) {
        var i,
            output = '';
        for (i = 0; i < input.length * 32; i += 8) {
            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);
        }
        return output;
    };

    /*
    * Convert a raw string to an array of little-endian words
    * Characters >255 have their high-byte silently ignored.
    */
    BlueImpMD5.prototype.rstr2binl = function (input) {
        var i,
            output = [];
        output[(input.length >> 2) - 1] = undefined;
        for (i = 0; i < output.length; i += 1) {
            output[i] = 0;
        }
        for (i = 0; i < input.length * 8; i += 8) {
            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);
        }
        return output;
    };

    /*
    * Calculate the MD5 of a raw string
    */
    BlueImpMD5.prototype.rstr_md5 = function (s) {
        return this.binl2rstr(this.binl_md5(this.rstr2binl(s), s.length * 8));
    };

    /*
    * Calculate the HMAC-MD5, of a key and some data (raw strings)
    */
    BlueImpMD5.prototype.rstr_hmac_md5 = function (key, data) {
        var i,
            bkey = this.rstr2binl(key),
            ipad = [],
            opad = [],
            hash;
        ipad[15] = opad[15] = undefined;
        if (bkey.length > 16) {
            bkey = this.binl_md5(bkey, key.length * 8);
        }
        for (i = 0; i < 16; i += 1) {
            ipad[i] = bkey[i] ^ 0x36363636;
            opad[i] = bkey[i] ^ 0x5C5C5C5C;
        }
        hash = this.binl_md5(ipad.concat(this.rstr2binl(data)), 512 + data.length * 8);
        return this.binl2rstr(this.binl_md5(opad.concat(hash), 512 + 128));
    };

    /*
    * Convert a raw string to a hex string
    */
    BlueImpMD5.prototype.rstr2hex = function (input) {
        var hex_tab = '0123456789abcdef',
            output = '',
            x,
            i;
        for (i = 0; i < input.length; i += 1) {
            x = input.charCodeAt(i);
            output += hex_tab.charAt((x >>> 4) & 0x0F) +
                hex_tab.charAt(x & 0x0F);
        }
        return output;
    };

    /*
    * Encode a string as utf-8
    */
    BlueImpMD5.prototype.str2rstr_utf8 = function (input) {
        return unescape(encodeURIComponent(input));
    };

    /*
    * Take string arguments and return either raw or hex encoded strings
    */
    BlueImpMD5.prototype.raw_md5 = function (s) {
        return this.rstr_md5(this.str2rstr_utf8(s));
    };
    BlueImpMD5.prototype.hex_md5 = function (s) {
        return this.rstr2hex(this.raw_md5(s));
    };
    BlueImpMD5.prototype.raw_hmac_md5 = function (k, d) {
        return this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d));
    };
    BlueImpMD5.prototype.hex_hmac_md5 = function (k, d) {
        return this.rstr2hex(this.raw_hmac_md5(k, d));
    };

    BlueImpMD5.prototype.md5 = function (string, key, raw) {
        if (!key) {
            if (!raw) {
                return this.hex_md5(string);
            }

            return this.raw_md5(string);
        }

        if (!raw) {
            return this.hex_hmac_md5(key, string);
        }

        return this.raw_hmac_md5(key, string);
    };

    // CommonJS module
    if (typeof exports !== 'undefined') {
        if (typeof module !== 'undefined' && module.exports) {
            exports = module.exports = Chance;
        }
        exports.Chance = Chance;
    }

    // Register as an anonymous AMD module
    if (typeof define === 'function' && define.amd) {
        define([], function () {
            return Chance;
        });
    }

    // if there is a importsScrips object define chance for worker
    if (typeof importScripts !== 'undefined') {
        chance = new Chance();
    }

    // If there is a window object, that at least has a document property,
    // instantiate and define chance on the window
    if (typeof window === "object" && typeof window.document === "object") {
        window.Chance = Chance;
        window.chance = new Chance();
    }
})();

},{}],30:[function(require,module,exports){
'use strict';

var $ = require('./util/helpers');

$.findByRef = require('./util/find-reference');
$.resolveSchema = require('./util/resolve-schema');
$.normalizeSchema = require('./util/normalize-schema');

var instance = module.exports = function() {
  function $ref(fakeroot, schema, refs, ex) {
    if (typeof fakeroot === 'object') {
      ex = refs;
      refs = schema;
      schema = fakeroot;
      fakeroot = undefined;
    }

    if (typeof schema !== 'object') {
      throw new Error('schema must be an object');
    }

    if (typeof refs === 'object' && refs !== null) {
      var aux = refs;

      refs = [];

      for (var k in aux) {
        aux[k].id = aux[k].id || k;
        refs.push(aux[k]);
      }
    }

    if (typeof refs !== 'undefined' && !Array.isArray(refs)) {
      ex = !!refs;
      refs = [];
    }

    function push(ref) {
      if (typeof ref.id === 'string') {
        var id = $.resolveURL(fakeroot, ref.id).replace(/\/#?$/, '');

        if (id.indexOf('#') > -1) {
          var parts = id.split('#');

          if (parts[1].charAt() === '/') {
            id = parts[0];
          } else {
            id = parts[1] || parts[0];
          }
        }

        if (!$ref.refs[id]) {
          $ref.refs[id] = ref;
        }
      }
    }

    (refs || []).concat([schema]).forEach(function(ref) {
      schema = $.normalizeSchema(fakeroot, ref, push);
      push(schema);
    });

    return $.resolveSchema(schema, $ref.refs, ex);
  }

  $ref.refs = {};
  $ref.util = $;

  return $ref;
};

instance.util = $;

},{"./util/find-reference":32,"./util/helpers":33,"./util/normalize-schema":34,"./util/resolve-schema":35}],31:[function(require,module,exports){
'use strict';

var clone = module.exports = function(obj, seen) {
  seen = seen || [];

  if (seen.indexOf(obj) > -1) {
    throw new Error('unable dereference circular structures');
  }

  if (!obj || typeof obj !== 'object') {
    return obj;
  }

  seen = seen.concat([obj]);

  var target = Array.isArray(obj) ? [] : {};

  function copy(key, value) {
    target[key] = clone(value, seen);
  }

  if (Array.isArray(target)) {
    obj.forEach(function(value, key) {
      copy(key, value);
    });
  } else if (Object.prototype.toString.call(obj) === '[object Object]') {
    Object.keys(obj).forEach(function(key) {
      copy(key, obj[key]);
    });
  }

  return target;
};

},{}],32:[function(require,module,exports){
'use strict';

var $ = require('./helpers');

function get(obj, path) {
  var hash = path.split('#')[1];

  var parts = hash.split('/').slice(1);

  while (parts.length) {
    var key = decodeURIComponent(parts.shift()).replace(/~1/g, '/').replace(/~0/g, '~');

    if (typeof obj[key] === 'undefined') {
      throw new Error('JSON pointer not found: ' + path);
    }

    obj = obj[key];
  }

  return obj;
}

var find = module.exports = function(id, refs) {
  var target = refs[id] || refs[id.split('#')[1]] || refs[$.getDocumentURI(id)];

  if (target) {
    target = id.indexOf('#/') > -1 ? get(target, id) : target;
  } else {
    for (var key in refs) {
      if ($.resolveURL(refs[key].id, id) === refs[key].id) {
        target = refs[key];
        break;
      }
    }
  }

  if (!target) {
    throw new Error('Reference not found: ' + id);
  }

  while (target.$ref) {
    target = find(target.$ref, refs);
  }

  return target;
};

},{"./helpers":33}],33:[function(require,module,exports){
'use strict';

// https://gist.github.com/pjt33/efb2f1134bab986113fd

function URLUtils(url, baseURL) {
  // remove leading ./
  url = url.replace(/^\.\//, '');

  var m = String(url).replace(/^\s+|\s+$/g, '').match(/^([^:\/?#]+:)?(?:\/\/(?:([^:@]*)(?::([^:@]*))?@)?(([^:\/?#]*)(?::(\d*))?))?([^?#]*)(\?[^#]*)?(#[\s\S]*)?/);
  if (!m) {
    throw new RangeError();
  }
  var href = m[0] || '';
  var protocol = m[1] || '';
  var username = m[2] || '';
  var password = m[3] || '';
  var host = m[4] || '';
  var hostname = m[5] || '';
  var port = m[6] || '';
  var pathname = m[7] || '';
  var search = m[8] || '';
  var hash = m[9] || '';
  if (baseURL !== undefined) {
    var base = new URLUtils(baseURL);
    var flag = protocol === '' && host === '' && username === '';
    if (flag && pathname === '' && search === '') {
      search = base.search;
    }
    if (flag && pathname.charAt(0) !== '/') {
      pathname = (pathname !== '' ? (base.pathname.slice(0, base.pathname.lastIndexOf('/') + 1) + pathname) : base.pathname);
    }
    // dot segments removal
    var output = [];

    pathname.replace(/\/?[^\/]+/g, function(p) {
      if (p === '/..') {
        output.pop();
      } else {
        output.push(p);
      }
    });

    pathname = output.join('') || '/';

    if (flag) {
      port = base.port;
      hostname = base.hostname;
      host = base.host;
      password = base.password;
      username = base.username;
    }
    if (protocol === '') {
      protocol = base.protocol;
    }
    href = protocol + (host !== '' ? '//' : '') + (username !== '' ? username + (password !== '' ? ':' + password : '') + '@' : '') + host + pathname + search + hash;
  }
  this.href = href;
  this.origin = protocol + (host !== '' ? '//' + host : '');
  this.protocol = protocol;
  this.username = username;
  this.password = password;
  this.host = host;
  this.hostname = hostname;
  this.port = port;
  this.pathname = pathname;
  this.search = search;
  this.hash = hash;
}

function isURL(path) {
  if (typeof path === 'string' && /^\w+:\/\//.test(path)) {
    return true;
  }
}

function parseURI(href, base) {
  return new URLUtils(href, base);
}

function resolveURL(base, href) {
  base = base || 'http://json-schema.org/schema#';

  href = parseURI(href, base);
  base = parseURI(base);

  if (base.hash && !href.hash) {
    return href.href + base.hash;
  }

  return href.href;
}

function getDocumentURI(uri) {
  return typeof uri === 'string' && uri.split('#')[0];
}

function isKeyword(prop) {
  return prop === 'enum' || prop === 'default' || prop === 'required';
}

module.exports = {
  isURL: isURL,
  parseURI: parseURI,
  isKeyword: isKeyword,
  resolveURL: resolveURL,
  getDocumentURI: getDocumentURI
};

},{}],34:[function(require,module,exports){
'use strict';

var $ = require('./helpers');

var cloneObj = require('./clone-obj');

var SCHEMA_URI = [
  'http://json-schema.org/schema#',
  'http://json-schema.org/draft-04/schema#'
];

function expand(obj, parent, callback) {
  if (obj) {
    var id = typeof obj.id === 'string' ? obj.id : '#';

    if (!$.isURL(id)) {
      id = $.resolveURL(parent === id ? null : parent, id);
    }

    if (typeof obj.$ref === 'string' && !$.isURL(obj.$ref)) {
      obj.$ref = $.resolveURL(id, obj.$ref);
    }

    if (typeof obj.id === 'string') {
      obj.id = parent = id;
    }
  }

  for (var key in obj) {
    var value = obj[key];

    if (typeof value === 'object' && value !== null && !$.isKeyword(key)) {
      expand(value, parent, callback);
    }
  }

  if (typeof callback === 'function') {
    callback(obj);
  }
}

module.exports = function(fakeroot, schema, push) {
  if (typeof fakeroot === 'object') {
    push = schema;
    schema = fakeroot;
    fakeroot = null;
  }

  var base = fakeroot || '',
      copy = cloneObj(schema);

  if (copy.$schema && SCHEMA_URI.indexOf(copy.$schema) === -1) {
    throw new Error('Unsupported schema version (v4 only)');
  }

  base = $.resolveURL(copy.$schema || SCHEMA_URI[0], base);

  expand(copy, $.resolveURL(copy.id || '#', base), push);

  copy.id = copy.id || base;

  return copy;
};

},{"./clone-obj":31,"./helpers":33}],35:[function(require,module,exports){
'use strict';

var $ = require('./helpers');

var find = require('./find-reference');

var deepExtend = require('deep-extend');

function copy(obj, refs, parent, resolve) {
  var target =  Array.isArray(obj) ? [] : {};

  if (typeof obj.$ref === 'string') {
    var base = $.getDocumentURI(obj.$ref);

    if (parent !== base || (resolve && obj.$ref.indexOf('#/') > -1)) {
      var fixed = find(obj.$ref, refs);

      deepExtend(obj, fixed);

      delete obj.$ref;
      delete obj.id;
    }
  }

  for (var prop in obj) {
    if (typeof obj[prop] === 'object' && obj[prop] !== null && !$.isKeyword(prop)) {
      target[prop] = copy(obj[prop], refs, parent, resolve);
    } else {
      target[prop] = obj[prop];
    }
  }

  return target;
}

module.exports = function(obj, refs, resolve) {
  var fixedId = $.resolveURL(obj.$schema, obj.id),
      parent = $.getDocumentURI(fixedId);

  return copy(obj, refs, parent, resolve);
};

},{"./find-reference":32,"./helpers":33,"deep-extend":36}],36:[function(require,module,exports){
/*!
 * @description Recursive object extending
 * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>
 * @license MIT
 *
 * The MIT License (MIT)
 *
 * Copyright (c) 2013-2015 Viacheslav Lotsmanov
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

'use strict';

function isSpecificValue(val) {
	return (
		val instanceof Buffer
		|| val instanceof Date
		|| val instanceof RegExp
	) ? true : false;
}

function cloneSpecificValue(val) {
	if (val instanceof Buffer) {
		var x = new Buffer(val.length);
		val.copy(x);
		return x;
	} else if (val instanceof Date) {
		return new Date(val.getTime());
	} else if (val instanceof RegExp) {
		return new RegExp(val);
	} else {
		throw new Error('Unexpected situation');
	}
}

/**
 * Recursive cloning array.
 */
function deepCloneArray(arr) {
	var clone = [];
	arr.forEach(function (item, index) {
		if (typeof item === 'object' && item !== null) {
			if (Array.isArray(item)) {
				clone[index] = deepCloneArray(item);
			} else if (isSpecificValue(item)) {
				clone[index] = cloneSpecificValue(item);
			} else {
				clone[index] = deepExtend({}, item);
			}
		} else {
			clone[index] = item;
		}
	});
	return clone;
}

/**
 * Extening object that entered in first argument.
 *
 * Returns extended object or false if have no target object or incorrect type.
 *
 * If you wish to clone source object (without modify it), just use empty new
 * object as first argument, like this:
 *   deepExtend({}, yourObj_1, [yourObj_N]);
 */
var deepExtend = module.exports = function (/*obj_1, [obj_2], [obj_N]*/) {
	if (arguments.length < 1 || typeof arguments[0] !== 'object') {
		return false;
	}

	if (arguments.length < 2) {
		return arguments[0];
	}

	var target = arguments[0];

	// convert arguments to array and cut off target object
	var args = Array.prototype.slice.call(arguments, 1);

	var val, src, clone;

	args.forEach(function (obj) {
		// skip argument if it is array or isn't object
		if (typeof obj !== 'object' || Array.isArray(obj)) {
			return;
		}

		Object.keys(obj).forEach(function (key) {
			src = target[key]; // source value
			val = obj[key]; // new value

			// recursion prevention
			if (val === target) {
				return;

			/**
			 * if new value isn't object then just overwrite by new value
			 * instead of extending.
			 */
			} else if (typeof val !== 'object' || val === null) {
				target[key] = val;
				return;

			// just clone arrays (and recursive clone objects inside)
			} else if (Array.isArray(val)) {
				target[key] = deepCloneArray(val);
				return;

			// custom cloning and overwrite for specific objects
			} else if (isSpecificValue(val)) {
				target[key] = cloneSpecificValue(val);
				return;

			// overwrite by new value if source isn't object or array
			} else if (typeof src !== 'object' || src === null || Array.isArray(src)) {
				target[key] = deepExtend({}, val);
				return;

			// source value and new value is objects both, extending...
			} else {
				target[key] = deepExtend(src, val);
				return;
			}
		});
	});

	return target;
}

},{}],37:[function(require,module,exports){
// since we are requiring the top level of faker, load all locales by default
var Faker = require('./lib');
var faker = new Faker({ locales: require('./lib/locales') });
module['exports'] = faker;
},{"./lib":47,"./lib/locales":49}],38:[function(require,module,exports){
/**
 *
 * @namespace faker.address
 */
function Address (faker) {
  var f = faker.fake,
      Helpers = faker.helpers;

  /**
   * Generates random zipcode from format. If format is not specified, the
   * locale's zip format is used.
   *
   * @method faker.address.zipCode
   * @param {String} format
   */
  this.zipCode = function(format) {
    // if zip format is not specified, use the zip format defined for the locale
    if (typeof format === 'undefined') {
      var localeFormat = faker.definitions.address.postcode;
      if (typeof localeFormat === 'string') {
        format = localeFormat;
      } else {
        format = faker.random.arrayElement(localeFormat);
      }
    }
    return Helpers.replaceSymbols(format);
  }

  /**
   * Generates a random localized city name. The format string can contain any
   * method provided by faker wrapped in `{{}}`, e.g. `{{name.firstName}}` in
   * order to build the city name.
   *
   * If no format string is provided one of the following is randomly used:
   * 
   * * `{{address.cityPrefix}} {{name.firstName}}{{address.citySuffix}}`
   * * `{{address.cityPrefix}} {{name.firstName}}`
   * * `{{name.firstName}}{{address.citySuffix}}`
   * * `{{name.lastName}}{{address.citySuffix}}`
   *
   * @method faker.address.city
   * @param {String} format
   */
  this.city = function (format) {
    var formats = [
      '{{address.cityPrefix}} {{name.firstName}}{{address.citySuffix}}',
      '{{address.cityPrefix}} {{name.firstName}}',
      '{{name.firstName}}{{address.citySuffix}}',
      '{{name.lastName}}{{address.citySuffix}}'
    ];

    if (typeof format !== "number") {
      format = faker.random.number(formats.length - 1);
    }

    return f(formats[format]);

  }

  /**
   * Return a random localized city prefix
   * @method faker.address.cityPrefix
   */
  this.cityPrefix = function () {
    return faker.random.arrayElement(faker.definitions.address.city_prefix);
  }

  /**
   * Return a random localized city suffix
   *
   * @method faker.address.citySuffix
   */
  this.citySuffix = function () {
    return faker.random.arrayElement(faker.definitions.address.city_suffix);
  }

  /**
   * Returns a random localized street name
   *
   * @method faker.address.streetName
   */
  this.streetName = function () {
      var result;
      var suffix = faker.address.streetSuffix();
      if (suffix !== "") {
          suffix = " " + suffix
      }

      switch (faker.random.number(1)) {
      case 0:
          result = faker.name.lastName() + suffix;
          break;
      case 1:
          result = faker.name.firstName() + suffix;
          break;
      }
      return result;
  }

  //
  // TODO: change all these methods that accept a boolean to instead accept an options hash.
  //
  /**
   * Returns a random localized street address
   *
   * @method faker.address.streetAddress
   * @param {Boolean} useFullAddress
   */
  this.streetAddress = function (useFullAddress) {
      if (useFullAddress === undefined) { useFullAddress = false; }
      var address = "";
      switch (faker.random.number(2)) {
      case 0:
          address = Helpers.replaceSymbolWithNumber("#####") + " " + faker.address.streetName();
          break;
      case 1:
          address = Helpers.replaceSymbolWithNumber("####") +  " " + faker.address.streetName();
          break;
      case 2:
          address = Helpers.replaceSymbolWithNumber("###") + " " + faker.address.streetName();
          break;
      }
      return useFullAddress ? (address + " " + faker.address.secondaryAddress()) : address;
  }

  /**
   * streetSuffix
   *
   * @method faker.address.streetSuffix
   */
  this.streetSuffix = function () {
      return faker.random.arrayElement(faker.definitions.address.street_suffix);
  }
  
  /**
   * streetPrefix
   *
   * @method faker.address.streetPrefix
   */
  this.streetPrefix = function () {
      return faker.random.arrayElement(faker.definitions.address.street_prefix);
  }

  /**
   * secondaryAddress
   *
   * @method faker.address.secondaryAddress
   */
  this.secondaryAddress = function () {
      return Helpers.replaceSymbolWithNumber(faker.random.arrayElement(
          [
              'Apt. ###',
              'Suite ###'
          ]
      ));
  }

  /**
   * county
   *
   * @method faker.address.county
   */
  this.county = function () {
    return faker.random.arrayElement(faker.definitions.address.county);
  }

  /**
   * country
   *
   * @method faker.address.country
   */
  this.country = function () {
    return faker.random.arrayElement(faker.definitions.address.country);
  }

  /**
   * countryCode
   *
   * @method faker.address.countryCode
   */
  this.countryCode = function () {
    return faker.random.arrayElement(faker.definitions.address.country_code);
  }

  /**
   * state
   *
   * @method faker.address.state
   * @param {Boolean} useAbbr
   */
  this.state = function (useAbbr) {
      return faker.random.arrayElement(faker.definitions.address.state);
  }

  /**
   * stateAbbr
   *
   * @method faker.address.stateAbbr
   */
  this.stateAbbr = function () {
      return faker.random.arrayElement(faker.definitions.address.state_abbr);
  }

  /**
   * latitude
   *
   * @method faker.address.latitude
   */
  this.latitude = function () {
      return (faker.random.number(180 * 10000) / 10000.0 - 90.0).toFixed(4);
  }

  /**
   * longitude
   *
   * @method faker.address.longitude
   */
  this.longitude = function () {
      return (faker.random.number(360 * 10000) / 10000.0 - 180.0).toFixed(4);
  }
  
  return this;
}


module.exports = Address;

},{}],39:[function(require,module,exports){
/**
 *
 * @namespace faker.commerce
 */
var Commerce = function (faker) {
  var self = this;

  /**
   * color
   *
   * @method faker.commerce.color
   */
  self.color = function() {
      return faker.random.arrayElement(faker.definitions.commerce.color);
  };

  /**
   * department
   *
   * @method faker.commerce.department
   * @param {number} max
   * @param {number} fixedAmount
   */
  self.department = function(max, fixedAmount) {
      return faker.random.arrayElement(faker.definitions.commerce.department);
  };

  /**
   * productName
   *
   * @method faker.commerce.productName
   */
  self.productName = function() {
      return faker.commerce.productAdjective() + " " +
              faker.commerce.productMaterial() + " " +
              faker.commerce.product();
  };

  /**
   * price
   *
   * @method faker.commerce.price
   * @param {number} min
   * @param {number} max
   * @param {number} dec
   * @param {string} symbol
   */
  self.price = function(min, max, dec, symbol) {
      min = min || 0;
      max = max || 1000;
      dec = dec || 2;
      symbol = symbol || '';

      if(min < 0 || max < 0) {
          return symbol + 0.00;
      }

      var randValue = faker.random.number({ max: max, min: min });

      return symbol + (Math.round(randValue * Math.pow(10, dec)) / Math.pow(10, dec)).toFixed(dec);
  };

  /*
  self.categories = function(num) {
      var categories = [];

      do {
          var category = faker.random.arrayElement(faker.definitions.commerce.department);
          if(categories.indexOf(category) === -1) {
              categories.push(category);
          }
      } while(categories.length < num);

      return categories;
  };

  */
  /*
  self.mergeCategories = function(categories) {
      var separator = faker.definitions.separator || " &";
      // TODO: find undefined here
      categories = categories || faker.definitions.commerce.categories;
      var commaSeparated = categories.slice(0, -1).join(', ');

      return [commaSeparated, categories[categories.length - 1]].join(separator + " ");
  };
  */

  /**
   * productAdjective
   *
   * @method faker.commerce.productAdjective
   */
  self.productAdjective = function() {
      return faker.random.arrayElement(faker.definitions.commerce.product_name.adjective);
  };

  /**
   * productMaterial
   *
   * @method faker.commerce.productMaterial
   */
  self.productMaterial = function() {
      return faker.random.arrayElement(faker.definitions.commerce.product_name.material);
  };

  /**
   * product
   *
   * @method faker.commerce.product
   */
  self.product = function() {
      return faker.random.arrayElement(faker.definitions.commerce.product_name.product);
  }

  return self;
};

module['exports'] = Commerce;

},{}],40:[function(require,module,exports){
/**
 *
 * @namespace faker.company
 */
var Company = function (faker) {
  
  var self = this;
  var f = faker.fake;
  
  /**
   * suffixes
   *
   * @method faker.company.suffixes
   */
  this.suffixes = function () {
    // Don't want the source array exposed to modification, so return a copy
    return faker.definitions.company.suffix.slice(0);
  }

  /**
   * companyName
   *
   * @method faker.company.companyName
   * @param {string} format
   */
  this.companyName = function (format) {

    var formats = [
      '{{name.lastName}} {{company.companySuffix}}',
      '{{name.lastName}} - {{name.lastName}}',
      '{{name.lastName}}, {{name.lastName}} and {{name.lastName}}'
    ];

    if (typeof format !== "number") {
      format = faker.random.number(formats.length - 1);
    }

    return f(formats[format]);
  }

  /**
   * companySuffix
   *
   * @method faker.company.companySuffix
   */
  this.companySuffix = function () {
      return faker.random.arrayElement(faker.company.suffixes());
  }

  /**
   * catchPhrase
   *
   * @method faker.company.catchPhrase
   */
  this.catchPhrase = function () {
    return f('{{company.catchPhraseAdjective}} {{company.catchPhraseDescriptor}} {{company.catchPhraseNoun}}')
  }

  /**
   * bs
   *
   * @method faker.company.bs
   */
  this.bs = function () {
    return f('{{company.bsAdjective}} {{company.bsBuzz}} {{company.bsNoun}}');
  }

  /**
   * catchPhraseAdjective
   *
   * @method faker.company.catchPhraseAdjective
   */
  this.catchPhraseAdjective = function () {
      return faker.random.arrayElement(faker.definitions.company.adjective);
  }

  /**
   * catchPhraseDescriptor
   *
   * @method faker.company.catchPhraseDescriptor
   */
  this.catchPhraseDescriptor = function () {
      return faker.random.arrayElement(faker.definitions.company.descriptor);
  }

  /**
   * catchPhraseNoun
   *
   * @method faker.company.catchPhraseNoun
   */
  this.catchPhraseNoun = function () {
      return faker.random.arrayElement(faker.definitions.company.noun);
  }

  /**
   * bsAdjective
   *
   * @method faker.company.bsAdjective
   */
  this.bsAdjective = function () {
      return faker.random.arrayElement(faker.definitions.company.bs_adjective);
  }

  /**
   * bsBuzz
   *
   * @method faker.company.bsBuzz
   */
  this.bsBuzz = function () {
      return faker.random.arrayElement(faker.definitions.company.bs_verb);
  }

  /**
   * bsNoun
   *
   * @method faker.company.bsNoun
   */
  this.bsNoun = function () {
      return faker.random.arrayElement(faker.definitions.company.bs_noun);
  }
  
}

module['exports'] = Company;
},{}],41:[function(require,module,exports){
/**
 *
 * @namespace faker.date
 */
var _Date = function (faker) {
  var self = this;
  /**
   * past
   *
   * @method faker.date.past
   * @param {number} years
   * @param {date} refDate
   */
  self.past = function (years, refDate) {
      var date = (refDate) ? new Date(Date.parse(refDate)) : new Date();
      var range = {
        min: 1000,
        max: (years || 1) * 365 * 24 * 3600 * 1000
      };

      var past = date.getTime();
      past -= faker.random.number(range); // some time from now to N years ago, in milliseconds
      date.setTime(past);

      return date;
  };

  /**
   * future
   *
   * @method faker.date.future
   * @param {number} years
   * @param {date} refDate
   */
  self.future = function (years, refDate) {
      var date = (refDate) ? new Date(Date.parse(refDate)) : new Date();
      var range = {
        min: 1000,
        max: (years || 1) * 365 * 24 * 3600 * 1000
      };

      var future = date.getTime();
      future += faker.random.number(range); // some time from now to N years later, in milliseconds
      date.setTime(future);

      return date;
  };

  /**
   * between
   *
   * @method faker.date.between
   * @param {date} from
   * @param {date} to
   */
  self.between = function (from, to) {
      var fromMilli = Date.parse(from);
      var dateOffset = faker.random.number(Date.parse(to) - fromMilli);

      var newDate = new Date(fromMilli + dateOffset);

      return newDate;
  };

  /**
   * recent
   *
   * @method faker.date.recent
   * @param {number} days
   */
  self.recent = function (days) {
      var date = new Date();
      var range = {
        min: 1000,
        max: (days || 1) * 24 * 3600 * 1000
      };

      var future = date.getTime();
      future -= faker.random.number(range); // some time from now to N days ago, in milliseconds
      date.setTime(future);

      return date;
  };

  /**
   * month
   *
   * @method faker.date.month
   * @param {object} options
   */
  self.month = function (options) {
      options = options || {};

      var type = 'wide';
      if (options.abbr) {
          type = 'abbr';
      }
      if (options.context && typeof faker.definitions.date.month[type + '_context'] !== 'undefined') {
          type += '_context';
      }

      var source = faker.definitions.date.month[type];

      return faker.random.arrayElement(source);
  };

  /**
   * weekday
   *
   * @param {object} options
   * @method faker.date.weekday
   */
  self.weekday = function (options) {
      options = options || {};

      var type = 'wide';
      if (options.abbr) {
          type = 'abbr';
      }
      if (options.context && typeof faker.definitions.date.weekday[type + '_context'] !== 'undefined') {
          type += '_context';
      }

      var source = faker.definitions.date.weekday[type];

      return faker.random.arrayElement(source);
  };
  
  return self;
  
};

module['exports'] = _Date;
},{}],42:[function(require,module,exports){
/*
  fake.js - generator method for combining faker methods based on string input

*/

function Fake (faker) {
  
  /**
   * Generator method for combining faker methods based on string input
   *
   * __Example:__
   *
   * ```
   * console.log(faker.fake('{{name.lastName}}, {{name.firstName}} {{name.suffix}}'));
   * //outputs: "Marks, Dean Sr."
   * ```
   *
   * This will interpolate the format string with the value of methods
   * [name.lastName]{@link faker.name.lastName}, [name.firstName]{@link faker.name.firstName},
   * and [name.suffix]{@link faker.name.suffix}
   *
   * @method faker.fake
   * @param {string} str
   */
  this.fake = function fake (str) {
    // setup default response as empty string
    var res = '';

    // if incoming str parameter is not provided, return error message
    if (typeof str !== 'string' || str.length === 0) {
      res = 'string parameter is required!';
      return res;
    }

    // find first matching {{ and }}
    var start = str.search('{{');
    var end = str.search('}}');

    // if no {{ and }} is found, we are done
    if (start === -1 && end === -1) {
      return str;
    }

    // console.log('attempting to parse', str);

    // extract method name from between the {{ }} that we found
    // for example: {{name.firstName}}
    var token = str.substr(start + 2,  end - start - 2);
    var method = token.replace('}}', '').replace('{{', '');

    // console.log('method', method)

    // extract method parameters
    var regExp = /\(([^)]+)\)/;
    var matches = regExp.exec(method);
    var parameters = '';
    if (matches) {
      method = method.replace(regExp, '');
      parameters = matches[1];
    }

    // split the method into module and function
    var parts = method.split('.');

    if (typeof faker[parts[0]] === "undefined") {
      throw new Error('Invalid module: ' + parts[0]);
    }

    if (typeof faker[parts[0]][parts[1]] === "undefined") {
      throw new Error('Invalid method: ' + parts[0] + "." + parts[1]);
    }

    // assign the function from the module.function namespace
    var fn = faker[parts[0]][parts[1]];

    // If parameters are populated here, they are always going to be of string type
    // since we might actually be dealing with an object or array,
    // we always attempt to the parse the incoming parameters into JSON
    var params;
    // Note: we experience a small performance hit here due to JSON.parse try / catch
    // If anyone actually needs to optimize this specific code path, please open a support issue on github
    try {
      params = JSON.parse(parameters)
    } catch (err) {
      // since JSON.parse threw an error, assume parameters was actually a string
      params = parameters;
    }

    var result;
    if (typeof params === "string" && params.length === 0) {
      result = fn.call(this);
    } else {
      result = fn.call(this, params);
    }

    // replace the found tag with the returned fake value
    res = str.replace('{{' + token + '}}', result);

    // return the response recursively until we are done finding all tags
    return fake(res);    
  }
  
  return this;
  
  
}

module['exports'] = Fake;
},{}],43:[function(require,module,exports){
/**
 *
 * @namespace faker.finance
 */
var Finance = function (faker) {
  var Helpers = faker.helpers,
      self = this;

  /**
   * account
   *
   * @method faker.finance.account
   * @param {number} length
   */
  self.account = function (length) {

      length = length || 8;

      var template = '';

      for (var i = 0; i < length; i++) {
          template = template + '#';
      }
      length = null;
      return Helpers.replaceSymbolWithNumber(template);
  }

  /**
   * accountName
   *
   * @method faker.finance.accountName
   */
  self.accountName = function () {

      return [Helpers.randomize(faker.definitions.finance.account_type), 'Account'].join(' ');
  }

  /**
   * mask
   *
   * @method faker.finance.mask
   * @param {number} length
   * @param {boolean} parens
   * @param {boolean} elipsis
   */
  self.mask = function (length, parens, elipsis) {


      //set defaults
      length = (length == 0 || !length || typeof length == 'undefined') ? 4 : length;
      parens = (parens === null) ? true : parens;
      elipsis = (elipsis === null) ? true : elipsis;

      //create a template for length
      var template = '';

      for (var i = 0; i < length; i++) {
          template = template + '#';
      }

      //prefix with elipsis
      template = (elipsis) ? ['...', template].join('') : template;

      template = (parens) ? ['(', template, ')'].join('') : template;

      //generate random numbers
      template = Helpers.replaceSymbolWithNumber(template);

      return template;

  }

  //min and max take in minimum and maximum amounts, dec is the decimal place you want rounded to, symbol is $, €, £, etc
  //NOTE: this returns a string representation of the value, if you want a number use parseFloat and no symbol

  /**
   * amount
   *
   * @method faker.finance.amount
   * @param {number} min
   * @param {number} max
   * @param {number} dec
   * @param {string} symbol
   */
  self.amount = function (min, max, dec, symbol) {

      min = min || 0;
      max = max || 1000;
      dec = dec || 2;
      symbol = symbol || '';
      var randValue = faker.random.number({ max: max, min: min });

      return symbol + (Math.round(randValue * Math.pow(10, dec)) / Math.pow(10, dec)).toFixed(dec);

  }

  /**
   * transactionType
   *
   * @method faker.finance.transactionType
   */
  self.transactionType = function () {
      return Helpers.randomize(faker.definitions.finance.transaction_type);
  }

  /**
   * currencyCode
   *
   * @method faker.finance.currencyCode
   */
  self.currencyCode = function () {
      return faker.random.objectElement(faker.definitions.finance.currency)['code'];
  }

  /**
   * currencyName
   *
   * @method faker.finance.currencyName
   */
  self.currencyName = function () {
      return faker.random.objectElement(faker.definitions.finance.currency, 'key');
  }

  /**
   * currencySymbol
   *
   * @method faker.finance.currencySymbol
   */
  self.currencySymbol = function () {
      var symbol;

      while (!symbol) {
          symbol = faker.random.objectElement(faker.definitions.finance.currency)['symbol'];
      }
      return symbol;
  }

  /**
   * bitcoinAddress
   *
   * @method  faker.finance.bitcoinAddress
   */
  self.bitcoinAddress = function () {
    var addressLength = faker.random.number({ min: 27, max: 34 });

    var address = faker.random.arrayElement(['1', '3']);

    for (var i = 0; i < addressLength - 1; i++)
      address += faker.random.alphaNumeric().toUpperCase();

    return address;
  }
}

module['exports'] = Finance;

},{}],44:[function(require,module,exports){
/**
 *
 * @namespace faker.hacker
 */
var Hacker = function (faker) {
  var self = this;
  
  /**
   * abbreviation
   *
   * @method faker.hacker.abbreviation
   */
  self.abbreviation = function () {
    return faker.random.arrayElement(faker.definitions.hacker.abbreviation);
  };

  /**
   * adjective
   *
   * @method faker.hacker.adjective
   */
  self.adjective = function () {
    return faker.random.arrayElement(faker.definitions.hacker.adjective);
  };

  /**
   * noun
   *
   * @method faker.hacker.noun
   */
  self.noun = function () {
    return faker.random.arrayElement(faker.definitions.hacker.noun);
  };

  /**
   * verb
   *
   * @method faker.hacker.verb
   */
  self.verb = function () {
    return faker.random.arrayElement(faker.definitions.hacker.verb);
  };

  /**
   * ingverb
   *
   * @method faker.hacker.ingverb
   */
  self.ingverb = function () {
    return faker.random.arrayElement(faker.definitions.hacker.ingverb);
  };

  /**
   * phrase
   *
   * @method faker.hacker.phrase
   */
  self.phrase = function () {

    var data = {
      abbreviation: self.abbreviation,
      adjective: self.adjective,
      ingverb: self.ingverb,
      noun: self.noun,
      verb: self.verb
    };

    var phrase = faker.random.arrayElement([ "If we {{verb}} the {{noun}}, we can get to the {{abbreviation}} {{noun}} through the {{adjective}} {{abbreviation}} {{noun}}!",
      "We need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!",
      "Try to {{verb}} the {{abbreviation}} {{noun}}, maybe it will {{verb}} the {{adjective}} {{noun}}!",
      "You can't {{verb}} the {{noun}} without {{ingverb}} the {{adjective}} {{abbreviation}} {{noun}}!",
      "Use the {{adjective}} {{abbreviation}} {{noun}}, then you can {{verb}} the {{adjective}} {{noun}}!",
      "The {{abbreviation}} {{noun}} is down, {{verb}} the {{adjective}} {{noun}} so we can {{verb}} the {{abbreviation}} {{noun}}!",
      "{{ingverb}} the {{noun}} won't do anything, we need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!",
      "I'll {{verb}} the {{adjective}} {{abbreviation}} {{noun}}, that should {{noun}} the {{abbreviation}} {{noun}}!"
   ]);

   return faker.helpers.mustache(phrase, data);

  };
  
  return self;
};

module['exports'] = Hacker;
},{}],45:[function(require,module,exports){
/**
 *
 * @namespace faker.helpers
 */
var Helpers = function (faker) {

  var self = this;

  /**
   * backword-compatibility
   *
   * @method faker.helpers.randomize
   * @param {array} array
   */
  self.randomize = function (array) {
      array = array || ["a", "b", "c"];
      return faker.random.arrayElement(array);
  };

  /**
   * slugifies string
   *
   * @method faker.helpers.slugify
   * @param {string} string
   */
  self.slugify = function (string) {
      string = string || "";
      return string.replace(/ /g, '-').replace(/[^\w\.\-]+/g, '');
  };

  /**
   * parses string for a symbol and replace it with a random number from 1-10
   *
   * @method faker.helpers.replaceSymbolWithNumber
   * @param {string} string
   * @param {string} symbol defaults to `"#"`
   */
  self.replaceSymbolWithNumber = function (string, symbol) {
      string = string || "";
      // default symbol is '#'
      if (symbol === undefined) {
          symbol = '#';
      }

      var str = '';
      for (var i = 0; i < string.length; i++) {
          if (string.charAt(i) == symbol) {
              str += faker.random.number(9);
          } else {
              str += string.charAt(i);
          }
      }
      return str;
  };

  /**
   * parses string for symbols (numbers or letters) and replaces them appropriately
   *
   * @method faker.helpers.replaceSymbols
   * @param {string} string
   */
  self.replaceSymbols = function (string) {
      string = string || "";
  	var alpha = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
      var str = '';

      for (var i = 0; i < string.length; i++) {
          if (string.charAt(i) == "#") {
              str += faker.random.number(9);
  		} else if (string.charAt(i) == "?") {
  			str += faker.random.arrayElement(alpha);
          } else {
              str += string.charAt(i);
          }
      }
      return str;
  };

  /**
   * takes an array and returns it randomized
   *
   * @method faker.helpers.shuffle
   * @param {array} o
   */
  self.shuffle = function (o) {
      o = o || ["a", "b", "c"];
      for (var j, x, i = o.length-1; i; j = faker.random.number(i), x = o[--i], o[i] = o[j], o[j] = x);
      return o;
  };

  /**
   * mustache
   *
   * @method faker.helpers.mustache
   * @param {string} str
   * @param {object} data
   */
  self.mustache = function (str, data) {
    if (typeof str === 'undefined') {
      return '';
    }
    for(var p in data) {
      var re = new RegExp('{{' + p + '}}', 'g')
      str = str.replace(re, data[p]);
    }
    return str;
  };

  /**
   * createCard
   *
   * @method faker.helpers.createCard
   */
  self.createCard = function () {
      return {
          "name": faker.name.findName(),
          "username": faker.internet.userName(),
          "email": faker.internet.email(),
          "address": {
              "streetA": faker.address.streetName(),
              "streetB": faker.address.streetAddress(),
              "streetC": faker.address.streetAddress(true),
              "streetD": faker.address.secondaryAddress(),
              "city": faker.address.city(),
              "state": faker.address.state(),
              "country": faker.address.country(),
              "zipcode": faker.address.zipCode(),
              "geo": {
                  "lat": faker.address.latitude(),
                  "lng": faker.address.longitude()
              }
          },
          "phone": faker.phone.phoneNumber(),
          "website": faker.internet.domainName(),
          "company": {
              "name": faker.company.companyName(),
              "catchPhrase": faker.company.catchPhrase(),
              "bs": faker.company.bs()
          },
          "posts": [
              {
                  "words": faker.lorem.words(),
                  "sentence": faker.lorem.sentence(),
                  "sentences": faker.lorem.sentences(),
                  "paragraph": faker.lorem.paragraph()
              },
              {
                  "words": faker.lorem.words(),
                  "sentence": faker.lorem.sentence(),
                  "sentences": faker.lorem.sentences(),
                  "paragraph": faker.lorem.paragraph()
              },
              {
                  "words": faker.lorem.words(),
                  "sentence": faker.lorem.sentence(),
                  "sentences": faker.lorem.sentences(),
                  "paragraph": faker.lorem.paragraph()
              }
          ],
          "accountHistory": [faker.helpers.createTransaction(), faker.helpers.createTransaction(), faker.helpers.createTransaction()]
      };
  };

  /**
   * contextualCard
   *
   * @method faker.helpers.contextualCard
   */
  self.contextualCard = function () {
    var name = faker.name.firstName(),
        userName = faker.internet.userName(name);
    return {
        "name": name,
        "username": userName,
        "avatar": faker.internet.avatar(),
        "email": faker.internet.email(userName),
        "dob": faker.date.past(50, new Date("Sat Sep 20 1992 21:35:02 GMT+0200 (CEST)")),
        "phone": faker.phone.phoneNumber(),
        "address": {
            "street": faker.address.streetName(true),
            "suite": faker.address.secondaryAddress(),
            "city": faker.address.city(),
            "zipcode": faker.address.zipCode(),
            "geo": {
                "lat": faker.address.latitude(),
                "lng": faker.address.longitude()
            }
        },
        "website": faker.internet.domainName(),
        "company": {
            "name": faker.company.companyName(),
            "catchPhrase": faker.company.catchPhrase(),
            "bs": faker.company.bs()
        }
    };
  };


  /**
   * userCard
   *
   * @method faker.helpers.userCard
   */
  self.userCard = function () {
      return {
          "name": faker.name.findName(),
          "username": faker.internet.userName(),
          "email": faker.internet.email(),
          "address": {
              "street": faker.address.streetName(true),
              "suite": faker.address.secondaryAddress(),
              "city": faker.address.city(),
              "zipcode": faker.address.zipCode(),
              "geo": {
                  "lat": faker.address.latitude(),
                  "lng": faker.address.longitude()
              }
          },
          "phone": faker.phone.phoneNumber(),
          "website": faker.internet.domainName(),
          "company": {
              "name": faker.company.companyName(),
              "catchPhrase": faker.company.catchPhrase(),
              "bs": faker.company.bs()
          }
      };
  };

  /**
   * createTransaction
   *
   * @method faker.helpers.createTransaction
   */
  self.createTransaction = function(){
    return {
      "amount" : faker.finance.amount(),
      "date" : new Date(2012, 1, 2),  //TODO: add a ranged date method
      "business": faker.company.companyName(),
      "name": [faker.finance.accountName(), faker.finance.mask()].join(' '),
      "type" : self.randomize(faker.definitions.finance.transaction_type),
      "account" : faker.finance.account()
    };
  };

  return self;

};


/*
String.prototype.capitalize = function () { //v1.0
    return this.replace(/\w+/g, function (a) {
        return a.charAt(0).toUpperCase() + a.substr(1).toLowerCase();
    });
};
*/

module['exports'] = Helpers;

},{}],46:[function(require,module,exports){
/**
 *
 * @namespace faker.image
 */
var Image = function (faker) {

  var self = this;

  /**
   * image
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.image
   */
  self.image = function (width, height, randomize) {
    var categories = ["abstract", "animals", "business", "cats", "city", "food", "nightlife", "fashion", "people", "nature", "sports", "technics", "transport"];
    return self[faker.random.arrayElement(categories)](width, height, randomize);
  };
  /**
   * avatar
   *
   * @method faker.image.avatar
   */
  self.avatar = function () {
    return faker.internet.avatar();
  };
  /**
   * imageUrl
   *
   * @param {number} width
   * @param {number} height
   * @param {string} category
   * @param {boolean} randomize
   * @method faker.image.imageUrl
   */
  self.imageUrl = function (width, height, category, randomize) {
      var width = width || 640;
      var height = height || 480;

      var url ='http://lorempixel.com/' + width + '/' + height;
      if (typeof category !== 'undefined') {
        url += '/' + category;
      }

      if (randomize) {
        url += '?' + faker.random.number()
      }

      return url;
  };
  /**
   * abstract
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.abstract
   */
  self.abstract = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'abstract', randomize);
  };
  /**
   * animals
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.animals
   */
  self.animals = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'animals', randomize);
  };
  /**
   * business
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.business
   */
  self.business = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'business', randomize);
  };
  /**
   * cats
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.cats
   */
  self.cats = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'cats', randomize);
  };
  /**
   * city
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.city
   */
  self.city = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'city', randomize);
  };
  /**
   * food
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.food
   */
  self.food = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'food', randomize);
  };
  /**
   * nightlife
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.nightlife
   */
  self.nightlife = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'nightlife', randomize);
  };
  /**
   * fashion
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.fashion
   */
  self.fashion = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'fashion', randomize);
  };
  /**
   * people
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.people
   */
  self.people = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'people', randomize);
  };
  /**
   * nature
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.nature
   */
  self.nature = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'nature', randomize);
  };
  /**
   * sports
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.sports
   */
  self.sports = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'sports', randomize);
  };
  /**
   * technics
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.technics
   */
  self.technics = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'technics', randomize);
  };
  /**
   * transport
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.transport
   */
  self.transport = function (width, height, randomize) {
    return faker.image.imageUrl(width, height, 'transport', randomize);
  }  
}

module["exports"] = Image;
},{}],47:[function(require,module,exports){
/*

   this index.js file is used for including the faker library as a CommonJS module, instead of a bundle

   you can include the faker library into your existing node.js application by requiring the entire /faker directory

    var faker = require(./faker);
    var randomName = faker.name.findName();

   you can also simply include the "faker.js" file which is the auto-generated bundled version of the faker library

    var faker = require(./customAppPath/faker);
    var randomName = faker.name.findName();


  if you plan on modifying the faker library you should be performing your changes in the /lib/ directory

*/

/**
 *
 * @namespace faker
 */
function Faker (opts) {

  var self = this;

  opts = opts || {};

  // assign options
  var locales = self.locales || opts.locales || {};
  var locale = self.locale || opts.locale || "en";
  var localeFallback = self.localeFallback || opts.localeFallback || "en";

  self.locales = locales;
  self.locale = locale;
  self.localeFallback = localeFallback;

  self.definitions = {};

  var Fake = require('./fake');
  self.fake = new Fake(self).fake;

  var Random = require('./random');
  self.random = new Random(self);
  // self.random = require('./random');

  var Helpers = require('./helpers');
  self.helpers = new Helpers(self);

  var Name = require('./name');
  self.name = new Name(self);
  // self.name = require('./name');

  var Address = require('./address');
  self.address = new Address(self);

  var Company = require('./company');
  self.company = new Company(self);

  var Finance = require('./finance');
  self.finance = new Finance(self);

  var Image = require('./image');
  self.image = new Image(self);

  var Lorem = require('./lorem');
  self.lorem = new Lorem(self);

  var Hacker = require('./hacker');
  self.hacker = new Hacker(self);

  var Internet = require('./internet');
  self.internet = new Internet(self);

  var Phone = require('./phone_number');
  self.phone = new Phone(self);

  var _Date = require('./date');
  self.date = new _Date(self);

  var Commerce = require('./commerce');
  self.commerce = new Commerce(self);

  var System = require('./system');
  self.system = new System(self);

  var _definitions = {
    "name": ["first_name", "last_name", "prefix", "suffix", "title", "male_first_name", "female_first_name", "male_middle_name", "female_middle_name", "male_last_name", "female_last_name"],
    "address": ["city_prefix", "city_suffix", "street_suffix", "county", "country", "country_code", "state", "state_abbr", "street_prefix", "postcode"],
    "company": ["adjective", "noun", "descriptor", "bs_adjective", "bs_noun", "bs_verb", "suffix"],
    "lorem": ["words"],
    "hacker": ["abbreviation", "adjective", "noun", "verb", "ingverb"],
    "phone_number": ["formats"],
    "finance": ["account_type", "transaction_type", "currency"],
    "internet": ["avatar_uri", "domain_suffix", "free_email", "example_email", "password"],
    "commerce": ["color", "department", "product_name", "price", "categories"],
    "system": ["mimeTypes"],
    "date": ["month", "weekday"],
    "title": "",
    "separator": ""
  };

  // Create a Getter for all definitions.foo.bar propetries
  Object.keys(_definitions).forEach(function(d){
    if (typeof self.definitions[d] === "undefined") {
      self.definitions[d] = {};
    }

    if (typeof _definitions[d] === "string") {
        self.definitions[d] = _definitions[d];
      return;
    }

    _definitions[d].forEach(function(p){
      Object.defineProperty(self.definitions[d], p, {
        get: function () {
          if (typeof self.locales[self.locale][d] === "undefined" || typeof self.locales[self.locale][d][p] === "undefined") {
            // certain localization sets contain less data then others.
            // in the case of a missing defintion, use the default localeFallback to substitute the missing set data
            // throw new Error('unknown property ' + d + p)
            return self.locales[localeFallback][d][p];
          } else {
            // return localized data
            return self.locales[self.locale][d][p];
          }
        }
      });
    });
  });

};

Faker.prototype.seed = function(value) {
  var Random = require('./random');
  this.seedValue = value;
  this.random = new Random(this, this.seedValue);
}
module['exports'] = Faker;

},{"./address":38,"./commerce":39,"./company":40,"./date":41,"./fake":42,"./finance":43,"./hacker":44,"./helpers":45,"./image":46,"./internet":48,"./lorem":990,"./name":991,"./phone_number":992,"./random":993,"./system":994}],48:[function(require,module,exports){
var password_generator = require('../vendor/password-generator.js'),
    random_ua = require('../vendor/user-agent');

/**
 *
 * @namespace faker.internet
 */
var Internet = function (faker) {
  var self = this;
  /**
   * avatar
   *
   * @method faker.internet.avatar
   */
  self.avatar = function () {
      return faker.random.arrayElement(faker.definitions.internet.avatar_uri);
  };

  self.avatar.schema = {
    "description": "Generates a URL for an avatar.",
    "sampleResults": ["https://s3.amazonaws.com/uifaces/faces/twitter/igorgarybaldi/128.jpg"]
  };

  /**
   * email
   *
   * @method faker.internet.email
   * @param {string} firstName
   * @param {string} lastName
   * @param {string} provider
   */
  self.email = function (firstName, lastName, provider) {
      provider = provider || faker.random.arrayElement(faker.definitions.internet.free_email);
      return  faker.helpers.slugify(faker.internet.userName(firstName, lastName)) + "@" + provider;
  };

  self.email.schema = {
    "description": "Generates a valid email address based on optional input criteria",
    "sampleResults": ["foo.bar@gmail.com"],
    "properties": {
      "firstName": {
        "type": "string",
        "required": false,
        "description": "The first name of the user"
      },
      "lastName": {
        "type": "string",
        "required": false,
        "description": "The last name of the user"
      },
      "provider": {
        "type": "string",
        "required": false,
        "description": "The domain of the user"
      }
    }
  };
  /**
   * exampleEmail
   *
   * @method faker.internet.exampleEmail
   * @param {string} firstName
   * @param {string} lastName
   */
  self.exampleEmail = function (firstName, lastName) {
      var provider = faker.random.arrayElement(faker.definitions.internet.example_email);
      return self.email(firstName, lastName, provider);
  };

  /**
   * userName
   *
   * @method faker.internet.userName
   * @param {string} firstName
   * @param {string} lastName
   */
  self.userName = function (firstName, lastName) {
      var result;
      firstName = firstName || faker.name.firstName();
      lastName = lastName || faker.name.lastName();
      switch (faker.random.number(2)) {
      case 0:
          result = firstName + faker.random.number(99);
          break;
      case 1:
          result = firstName + faker.random.arrayElement([".", "_"]) + lastName;
          break;
      case 2:
          result = firstName + faker.random.arrayElement([".", "_"]) + lastName + faker.random.number(99);
          break;
      }
      result = result.toString().replace(/'/g, "");
      result = result.replace(/ /g, "");
      return result;
  };

  self.userName.schema = {
    "description": "Generates a username based on one of several patterns. The pattern is chosen randomly.",
    "sampleResults": [
      "Kirstin39",
      "Kirstin.Smith",
      "Kirstin.Smith39",
      "KirstinSmith",
      "KirstinSmith39",
    ],
    "properties": {
      "firstName": {
        "type": "string",
        "required": false,
        "description": "The first name of the user"
      },
      "lastName": {
        "type": "string",
        "required": false,
        "description": "The last name of the user"
      }
    }
  };

  /**
   * protocol
   *
   * @method faker.internet.protocol
   */
  self.protocol = function () {
      var protocols = ['http','https'];
      return faker.random.arrayElement(protocols);
  };

  self.protocol.schema = {
    "description": "Randomly generates http or https",
    "sampleResults": ["https", "http"]
  };

  /**
   * url
   *
   * @method faker.internet.url
   */
  self.url = function () {
      return faker.internet.protocol() + '://' + faker.internet.domainName();
  };

  self.url.schema = {
    "description": "Generates a random URL. The URL could be secure or insecure.",
    "sampleResults": [
      "http://rashawn.name",
      "https://rashawn.name"
    ]
  };

  /**
   * domainName
   *
   * @method faker.internet.domainName
   */
  self.domainName = function () {
      return faker.internet.domainWord() + "." + faker.internet.domainSuffix();
  };

  self.domainName.schema = {
    "description": "Generates a random domain name.",
    "sampleResults": ["marvin.org"]
  };

  /**
   * domainSuffix
   *
   * @method faker.internet.domainSuffix
   */
  self.domainSuffix = function () {
      return faker.random.arrayElement(faker.definitions.internet.domain_suffix);
  };

  self.domainSuffix.schema = {
    "description": "Generates a random domain suffix.",
    "sampleResults": ["net"]
  };

  /**
   * domainWord
   *
   * @method faker.internet.domainWord
   */
  self.domainWord = function () {
      return faker.name.firstName().replace(/([\\~#&*{}/:<>?|\"'])/ig, '').toLowerCase();
  };

  self.domainWord.schema = {
    "description": "Generates a random domain word.",
    "sampleResults": ["alyce"]
  };

  /**
   * ip
   *
   * @method faker.internet.ip
   */
  self.ip = function () {
      var randNum = function () {
          return (faker.random.number(255)).toFixed(0);
      };

      var result = [];
      for (var i = 0; i < 4; i++) {
          result[i] = randNum();
      }

      return result.join(".");
  };

  self.ip.schema = {
    "description": "Generates a random IP.",
    "sampleResults": ["97.238.241.11"]
  };

  /**
   * userAgent
   *
   * @method faker.internet.userAgent
   */
  self.userAgent = function () {
    return random_ua.generate();
  };

  self.userAgent.schema = {
    "description": "Generates a random user agent.",
    "sampleResults": ["Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_7_5 rv:6.0; SL) AppleWebKit/532.0.1 (KHTML, like Gecko) Version/7.1.6 Safari/532.0.1"]
  };

  /**
   * color
   *
   * @method faker.internet.color
   * @param {number} baseRed255
   * @param {number} baseGreen255
   * @param {number} baseBlue255
   */
  self.color = function (baseRed255, baseGreen255, baseBlue255) {
      baseRed255 = baseRed255 || 0;
      baseGreen255 = baseGreen255 || 0;
      baseBlue255 = baseBlue255 || 0;
      // based on awesome response : http://stackoverflow.com/questions/43044/algorithm-to-randomly-generate-an-aesthetically-pleasing-color-palette
      var red = Math.floor((faker.random.number(256) + baseRed255) / 2);
      var green = Math.floor((faker.random.number(256) + baseGreen255) / 2);
      var blue = Math.floor((faker.random.number(256) + baseBlue255) / 2);
      var redStr = red.toString(16);
      var greenStr = green.toString(16);
      var blueStr = blue.toString(16);
      return '#' +
        (redStr.length === 1 ? '0' : '') + redStr +
        (greenStr.length === 1 ? '0' : '') + greenStr +
        (blueStr.length === 1 ? '0': '') + blueStr;

  };

  self.color.schema = {
    "description": "Generates a random hexadecimal color.",
    "sampleResults": ["#06267f"],
    "properties": {
      "baseRed255": {
        "type": "number",
        "required": false,
        "description": "The red value. Valid values are 0 - 255."
      },
      "baseGreen255": {
        "type": "number",
        "required": false,
        "description": "The green value. Valid values are 0 - 255."
      },
      "baseBlue255": {
        "type": "number",
        "required": false,
        "description": "The blue value. Valid values are 0 - 255."
      }
    }
  };

  /**
   * mac
   *
   * @method faker.internet.mac
   */
  self.mac = function(){
      var i, mac = "";
      for (i=0; i < 12; i++) {
          mac+= faker.random.number(15).toString(16);
          if (i%2==1 && i != 11) {
              mac+=":";
          }
      }
      return mac;
  };

  self.mac.schema = {
    "description": "Generates a random mac address.",
    "sampleResults": ["78:06:cc:ae:b3:81"]
  };

  /**
   * password
   *
   * @method faker.internet.password
   * @param {number} len
   * @param {boolean} memorable
   * @param {string} pattern
   * @param {string} prefix
   */
  self.password = function (len, memorable, pattern, prefix) {
    len = len || 15;
    if (typeof memorable === "undefined") {
      memorable = false;
    }
    return password_generator(len, memorable, pattern, prefix);
  }

  self.password.schema = {
    "description": "Generates a random password.",
    "sampleResults": [
      "AM7zl6Mg",
      "susejofe"
    ],
    "properties": {
      "length": {
        "type": "number",
        "required": false,
        "description": "The number of characters in the password."
      },
      "memorable": {
        "type": "boolean",
        "required": false,
        "description": "Whether a password should be easy to remember."
      },
      "pattern": {
        "type": "regex",
        "required": false,
        "description": "A regex to match each character of the password against. This parameter will be negated if the memorable setting is turned on."
      },
      "prefix": {
        "type": "string",
        "required": false,
        "description": "A value to prepend to the generated password. The prefix counts towards the length of the password."
      }
    }
  };

};


module["exports"] = Internet;

},{"../vendor/password-generator.js":996,"../vendor/user-agent":997}],49:[function(require,module,exports){
exports['de'] = require('./locales/de');
exports['de_AT'] = require('./locales/de_AT');
exports['de_CH'] = require('./locales/de_CH');
exports['en'] = require('./locales/en');
exports['en_AU'] = require('./locales/en_AU');
exports['en_BORK'] = require('./locales/en_BORK');
exports['en_CA'] = require('./locales/en_CA');
exports['en_GB'] = require('./locales/en_GB');
exports['en_IE'] = require('./locales/en_IE');
exports['en_IND'] = require('./locales/en_IND');
exports['en_US'] = require('./locales/en_US');
exports['en_au_ocker'] = require('./locales/en_au_ocker');
exports['es'] = require('./locales/es');
exports['es_MX'] = require('./locales/es_MX');
exports['fa'] = require('./locales/fa');
exports['fr'] = require('./locales/fr');
exports['fr_CA'] = require('./locales/fr_CA');
exports['ge'] = require('./locales/ge');
exports['id_ID'] = require('./locales/id_ID');
exports['it'] = require('./locales/it');
exports['ja'] = require('./locales/ja');
exports['ko'] = require('./locales/ko');
exports['nb_NO'] = require('./locales/nb_NO');
exports['nep'] = require('./locales/nep');
exports['nl'] = require('./locales/nl');
exports['pl'] = require('./locales/pl');
exports['pt_BR'] = require('./locales/pt_BR');
exports['ru'] = require('./locales/ru');
exports['sk'] = require('./locales/sk');
exports['sv'] = require('./locales/sv');
exports['tr'] = require('./locales/tr');
exports['uk'] = require('./locales/uk');
exports['vi'] = require('./locales/vi');
exports['zh_CN'] = require('./locales/zh_CN');
exports['zh_TW'] = require('./locales/zh_TW');

},{"./locales/de":70,"./locales/de_AT":103,"./locales/de_CH":122,"./locales/en":197,"./locales/en_AU":229,"./locales/en_BORK":237,"./locales/en_CA":245,"./locales/en_GB":258,"./locales/en_IE":268,"./locales/en_IND":280,"./locales/en_US":292,"./locales/en_au_ocker":312,"./locales/es":344,"./locales/es_MX":388,"./locales/fa":407,"./locales/fr":433,"./locales/fr_CA":453,"./locales/ge":479,"./locales/id_ID":508,"./locales/it":545,"./locales/ja":567,"./locales/ko":588,"./locales/nb_NO":618,"./locales/nep":638,"./locales/nl":662,"./locales/pl":702,"./locales/pt_BR":731,"./locales/ru":768,"./locales/sk":808,"./locales/sv":855,"./locales/tr":881,"./locales/uk":914,"./locales/vi":941,"./locales/zh_CN":964,"./locales/zh_TW":983}],50:[function(require,module,exports){
module["exports"] = [
  "###",
  "##",
  "#",
  "##a",
  "##b",
  "##c"
];

},{}],51:[function(require,module,exports){
module["exports"] = [
  "#{city_prefix} #{Name.first_name}#{city_suffix}",
  "#{city_prefix} #{Name.first_name}",
  "#{Name.first_name}#{city_suffix}",
  "#{Name.last_name}#{city_suffix}"
];

},{}],52:[function(require,module,exports){
module["exports"] = [
  "Nord",
  "Ost",
  "West",
  "Süd",
  "Neu",
  "Alt",
  "Bad"
];

},{}],53:[function(require,module,exports){
module["exports"] = [
  "stadt",
  "dorf",
  "land",
  "scheid",
  "burg"
];

},{}],54:[function(require,module,exports){
module["exports"] = [
  "Ägypten",
  "Äquatorialguinea",
  "Äthiopien",
  "Österreich",
  "Afghanistan",
  "Albanien",
  "Algerien",
  "Amerikanisch-Samoa",
  "Amerikanische Jungferninseln",
  "Andorra",
  "Angola",
  "Anguilla",
  "Antarktis",
  "Antigua und Barbuda",
  "Argentinien",
  "Armenien",
  "Aruba",
  "Aserbaidschan",
  "Australien",
  "Bahamas",
  "Bahrain",
  "Bangladesch",
  "Barbados",
  "Belarus",
  "Belgien",
  "Belize",
  "Benin",
  "die Bermudas",
  "Bhutan",
  "Bolivien",
  "Bosnien und Herzegowina",
  "Botsuana",
  "Bouvetinsel",
  "Brasilien",
  "Britische Jungferninseln",
  "Britisches Territorium im Indischen Ozean",
  "Brunei Darussalam",
  "Bulgarien",
  "Burkina Faso",
  "Burundi",
  "Chile",
  "China",
  "Cookinseln",
  "Costa Rica",
  "Dänemark",
  "Demokratische Republik Kongo",
  "Demokratische Volksrepublik Korea",
  "Deutschland",
  "Dominica",
  "Dominikanische Republik",
  "Dschibuti",
  "Ecuador",
  "El Salvador",
  "Eritrea",
  "Estland",
  "Färöer",
  "Falklandinseln",
  "Fidschi",
  "Finnland",
  "Frankreich",
  "Französisch-Guayana",
  "Französisch-Polynesien",
  "Französische Gebiete im südlichen Indischen Ozean",
  "Gabun",
  "Gambia",
  "Georgien",
  "Ghana",
  "Gibraltar",
  "Grönland",
  "Grenada",
  "Griechenland",
  "Guadeloupe",
  "Guam",
  "Guatemala",
  "Guinea",
  "Guinea-Bissau",
  "Guyana",
  "Haiti",
  "Heard und McDonaldinseln",
  "Honduras",
  "Hongkong",
  "Indien",
  "Indonesien",
  "Irak",
  "Iran",
  "Irland",
  "Island",
  "Israel",
  "Italien",
  "Jamaika",
  "Japan",
  "Jemen",
  "Jordanien",
  "Jugoslawien",
  "Kaimaninseln",
  "Kambodscha",
  "Kamerun",
  "Kanada",
  "Kap Verde",
  "Kasachstan",
  "Katar",
  "Kenia",
  "Kirgisistan",
  "Kiribati",
  "Kleinere amerikanische Überseeinseln",
  "Kokosinseln",
  "Kolumbien",
  "Komoren",
  "Kongo",
  "Kroatien",
  "Kuba",
  "Kuwait",
  "Laos",
  "Lesotho",
  "Lettland",
  "Libanon",
  "Liberia",
  "Libyen",
  "Liechtenstein",
  "Litauen",
  "Luxemburg",
  "Macau",
  "Madagaskar",
  "Malawi",
  "Malaysia",
  "Malediven",
  "Mali",
  "Malta",
  "ehemalige jugoslawische Republik Mazedonien",
  "Marokko",
  "Marshallinseln",
  "Martinique",
  "Mauretanien",
  "Mauritius",
  "Mayotte",
  "Mexiko",
  "Mikronesien",
  "Monaco",
  "Mongolei",
  "Montserrat",
  "Mosambik",
  "Myanmar",
  "Nördliche Marianen",
  "Namibia",
  "Nauru",
  "Nepal",
  "Neukaledonien",
  "Neuseeland",
  "Nicaragua",
  "Niederländische Antillen",
  "Niederlande",
  "Niger",
  "Nigeria",
  "Niue",
  "Norfolkinsel",
  "Norwegen",
  "Oman",
  "Osttimor",
  "Pakistan",
  "Palau",
  "Panama",
  "Papua-Neuguinea",
  "Paraguay",
  "Peru",
  "Philippinen",
  "Pitcairninseln",
  "Polen",
  "Portugal",
  "Puerto Rico",
  "Réunion",
  "Republik Korea",
  "Republik Moldau",
  "Ruanda",
  "Rumänien",
  "Russische Föderation",
  "São Tomé und Príncipe",
  "Südafrika",
  "Südgeorgien und Südliche Sandwichinseln",
  "Salomonen",
  "Sambia",
  "Samoa",
  "San Marino",
  "Saudi-Arabien",
  "Schweden",
  "Schweiz",
  "Senegal",
  "Seychellen",
  "Sierra Leone",
  "Simbabwe",
  "Singapur",
  "Slowakei",
  "Slowenien",
  "Somalien",
  "Spanien",
  "Sri Lanka",
  "St. Helena",
  "St. Kitts und Nevis",
  "St. Lucia",
  "St. Pierre und Miquelon",
  "St. Vincent und die Grenadinen",
  "Sudan",
  "Surinam",
  "Svalbard und Jan Mayen",
  "Swasiland",
  "Syrien",
  "Türkei",
  "Tadschikistan",
  "Taiwan",
  "Tansania",
  "Thailand",
  "Togo",
  "Tokelau",
  "Tonga",
  "Trinidad und Tobago",
  "Tschad",
  "Tschechische Republik",
  "Tunesien",
  "Turkmenistan",
  "Turks- und Caicosinseln",
  "Tuvalu",
  "Uganda",
  "Ukraine",
  "Ungarn",
  "Uruguay",
  "Usbekistan",
  "Vanuatu",
  "Vatikanstadt",
  "Venezuela",
  "Vereinigte Arabische Emirate",
  "Vereinigte Staaten",
  "Vereinigtes Königreich",
  "Vietnam",
  "Wallis und Futuna",
  "Weihnachtsinsel",
  "Westsahara",
  "Zentralafrikanische Republik",
  "Zypern"
];

},{}],55:[function(require,module,exports){
module["exports"] = [
  "Deutschland"
];

},{}],56:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.country = require("./country");
address.street_root = require("./street_root");
address.building_number = require("./building_number");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":50,"./city":51,"./city_prefix":52,"./city_suffix":53,"./country":54,"./default_country":55,"./postcode":57,"./secondary_address":58,"./state":59,"./state_abbr":60,"./street_address":61,"./street_name":62,"./street_root":63}],57:[function(require,module,exports){
module["exports"] = [
  "#####",
  "#####"
];

},{}],58:[function(require,module,exports){
module["exports"] = [
  "Apt. ###",
  "Zimmer ###",
  "# OG"
];

},{}],59:[function(require,module,exports){
module["exports"] = [
  "Baden-Württemberg",
  "Bayern",
  "Berlin",
  "Brandenburg",
  "Bremen",
  "Hamburg",
  "Hessen",
  "Mecklenburg-Vorpommern",
  "Niedersachsen",
  "Nordrhein-Westfalen",
  "Rheinland-Pfalz",
  "Saarland",
  "Sachsen",
  "Sachsen-Anhalt",
  "Schleswig-Holstein",
  "Thüringen"
];

},{}],60:[function(require,module,exports){
module["exports"] = [
  "BW",
  "BY",
  "BE",
  "BB",
  "HB",
  "HH",
  "HE",
  "MV",
  "NI",
  "NW",
  "RP",
  "SL",
  "SN",
  "ST",
  "SH",
  "TH"
];

},{}],61:[function(require,module,exports){
module["exports"] = [
  "#{street_name} #{building_number}"
];

},{}],62:[function(require,module,exports){
module["exports"] = [
  "#{street_root}"
];

},{}],63:[function(require,module,exports){
module["exports"] = [
  "Ackerweg",
  "Adalbert-Stifter-Str.",
  "Adalbertstr.",
  "Adolf-Baeyer-Str.",
  "Adolf-Kaschny-Str.",
  "Adolf-Reichwein-Str.",
  "Adolfsstr.",
  "Ahornweg",
  "Ahrstr.",
  "Akazienweg",
  "Albert-Einstein-Str.",
  "Albert-Schweitzer-Str.",
  "Albertus-Magnus-Str.",
  "Albert-Zarthe-Weg",
  "Albin-Edelmann-Str.",
  "Albrecht-Haushofer-Str.",
  "Aldegundisstr.",
  "Alexanderstr.",
  "Alfred-Delp-Str.",
  "Alfred-Kubin-Str.",
  "Alfred-Stock-Str.",
  "Alkenrather Str.",
  "Allensteiner Str.",
  "Alsenstr.",
  "Alt Steinbücheler Weg",
  "Alte Garten",
  "Alte Heide",
  "Alte Landstr.",
  "Alte Ziegelei",
  "Altenberger Str.",
  "Altenhof",
  "Alter Grenzweg",
  "Altstadtstr.",
  "Am Alten Gaswerk",
  "Am Alten Schafstall",
  "Am Arenzberg",
  "Am Benthal",
  "Am Birkenberg",
  "Am Blauen Berg",
  "Am Borsberg",
  "Am Brungen",
  "Am Büchelter Hof",
  "Am Buttermarkt",
  "Am Ehrenfriedhof",
  "Am Eselsdamm",
  "Am Falkenberg",
  "Am Frankenberg",
  "Am Gesundheitspark",
  "Am Gierlichshof",
  "Am Graben",
  "Am Hagelkreuz",
  "Am Hang",
  "Am Heidkamp",
  "Am Hemmelrather Hof",
  "Am Hofacker",
  "Am Hohen Ufer",
  "Am Höllers Eck",
  "Am Hühnerberg",
  "Am Jägerhof",
  "Am Junkernkamp",
  "Am Kemperstiegel",
  "Am Kettnersbusch",
  "Am Kiesberg",
  "Am Klösterchen",
  "Am Knechtsgraben",
  "Am Köllerweg",
  "Am Köttersbach",
  "Am Kreispark",
  "Am Kronefeld",
  "Am Küchenhof",
  "Am Kühnsbusch",
  "Am Lindenfeld",
  "Am Märchen",
  "Am Mittelberg",
  "Am Mönchshof",
  "Am Mühlenbach",
  "Am Neuenhof",
  "Am Nonnenbruch",
  "Am Plattenbusch",
  "Am Quettinger Feld",
  "Am Rosenhügel",
  "Am Sandberg",
  "Am Scherfenbrand",
  "Am Schokker",
  "Am Silbersee",
  "Am Sonnenhang",
  "Am Sportplatz",
  "Am Stadtpark",
  "Am Steinberg",
  "Am Telegraf",
  "Am Thelenhof",
  "Am Vogelkreuz",
  "Am Vogelsang",
  "Am Vogelsfeldchen",
  "Am Wambacher Hof",
  "Am Wasserturm",
  "Am Weidenbusch",
  "Am Weiher",
  "Am Weingarten",
  "Am Werth",
  "Amselweg",
  "An den Irlen",
  "An den Rheinauen",
  "An der Bergerweide",
  "An der Dingbank",
  "An der Evangelischen Kirche",
  "An der Evgl. Kirche",
  "An der Feldgasse",
  "An der Fettehenne",
  "An der Kante",
  "An der Laach",
  "An der Lehmkuhle",
  "An der Lichtenburg",
  "An der Luisenburg",
  "An der Robertsburg",
  "An der Schmitten",
  "An der Schusterinsel",
  "An der Steinrütsch",
  "An St. Andreas",
  "An St. Remigius",
  "Andreasstr.",
  "Ankerweg",
  "Annette-Kolb-Str.",
  "Apenrader Str.",
  "Arnold-Ohletz-Str.",
  "Atzlenbacher Str.",
  "Auerweg",
  "Auestr.",
  "Auf dem Acker",
  "Auf dem Blahnenhof",
  "Auf dem Bohnbüchel",
  "Auf dem Bruch",
  "Auf dem End",
  "Auf dem Forst",
  "Auf dem Herberg",
  "Auf dem Lehn",
  "Auf dem Stein",
  "Auf dem Weierberg",
  "Auf dem Weiherhahn",
  "Auf den Reien",
  "Auf der Donnen",
  "Auf der Grieße",
  "Auf der Ohmer",
  "Auf der Weide",
  "Auf'm Berg",
  "Auf'm Kamp",
  "Augustastr.",
  "August-Kekulé-Str.",
  "A.-W.-v.-Hofmann-Str.",
  "Bahnallee",
  "Bahnhofstr.",
  "Baltrumstr.",
  "Bamberger Str.",
  "Baumberger Str.",
  "Bebelstr.",
  "Beckers Kämpchen",
  "Beerenstr.",
  "Beethovenstr.",
  "Behringstr.",
  "Bendenweg",
  "Bensberger Str.",
  "Benzstr.",
  "Bergische Landstr.",
  "Bergstr.",
  "Berliner Platz",
  "Berliner Str.",
  "Bernhard-Letterhaus-Str.",
  "Bernhard-Lichtenberg-Str.",
  "Bernhard-Ridder-Str.",
  "Bernsteinstr.",
  "Bertha-Middelhauve-Str.",
  "Bertha-von-Suttner-Str.",
  "Bertolt-Brecht-Str.",
  "Berzeliusstr.",
  "Bielertstr.",
  "Biesenbach",
  "Billrothstr.",
  "Birkenbergstr.",
  "Birkengartenstr.",
  "Birkenweg",
  "Bismarckstr.",
  "Bitterfelder Str.",
  "Blankenburg",
  "Blaukehlchenweg",
  "Blütenstr.",
  "Boberstr.",
  "Böcklerstr.",
  "Bodelschwinghstr.",
  "Bodestr.",
  "Bogenstr.",
  "Bohnenkampsweg",
  "Bohofsweg",
  "Bonifatiusstr.",
  "Bonner Str.",
  "Borkumstr.",
  "Bornheimer Str.",
  "Borsigstr.",
  "Borussiastr.",
  "Bracknellstr.",
  "Brahmsweg",
  "Brandenburger Str.",
  "Breidenbachstr.",
  "Breslauer Str.",
  "Bruchhauser Str.",
  "Brückenstr.",
  "Brucknerstr.",
  "Brüder-Bonhoeffer-Str.",
  "Buchenweg",
  "Bürgerbuschweg",
  "Burgloch",
  "Burgplatz",
  "Burgstr.",
  "Burgweg",
  "Bürriger Weg",
  "Burscheider Str.",
  "Buschkämpchen",
  "Butterheider Str.",
  "Carl-Duisberg-Platz",
  "Carl-Duisberg-Str.",
  "Carl-Leverkus-Str.",
  "Carl-Maria-von-Weber-Platz",
  "Carl-Maria-von-Weber-Str.",
  "Carlo-Mierendorff-Str.",
  "Carl-Rumpff-Str.",
  "Carl-von-Ossietzky-Str.",
  "Charlottenburger Str.",
  "Christian-Heß-Str.",
  "Claasbruch",
  "Clemens-Winkler-Str.",
  "Concordiastr.",
  "Cranachstr.",
  "Dahlemer Str.",
  "Daimlerstr.",
  "Damaschkestr.",
  "Danziger Str.",
  "Debengasse",
  "Dechant-Fein-Str.",
  "Dechant-Krey-Str.",
  "Deichtorstr.",
  "Dhünnberg",
  "Dhünnstr.",
  "Dianastr.",
  "Diedenhofener Str.",
  "Diepental",
  "Diepenthaler Str.",
  "Dieselstr.",
  "Dillinger Str.",
  "Distelkamp",
  "Dohrgasse",
  "Domblick",
  "Dönhoffstr.",
  "Dornierstr.",
  "Drachenfelsstr.",
  "Dr.-August-Blank-Str.",
  "Dresdener Str.",
  "Driescher Hecke",
  "Drosselweg",
  "Dudweilerstr.",
  "Dünenweg",
  "Dünfelder Str.",
  "Dünnwalder Grenzweg",
  "Düppeler Str.",
  "Dürerstr.",
  "Dürscheider Weg",
  "Düsseldorfer Str.",
  "Edelrather Weg",
  "Edmund-Husserl-Str.",
  "Eduard-Spranger-Str.",
  "Ehrlichstr.",
  "Eichenkamp",
  "Eichenweg",
  "Eidechsenweg",
  "Eifelstr.",
  "Eifgenstr.",
  "Eintrachtstr.",
  "Elbestr.",
  "Elisabeth-Langgässer-Str.",
  "Elisabethstr.",
  "Elisabeth-von-Thadden-Str.",
  "Elisenstr.",
  "Elsa-Brändström-Str.",
  "Elsbachstr.",
  "Else-Lasker-Schüler-Str.",
  "Elsterstr.",
  "Emil-Fischer-Str.",
  "Emil-Nolde-Str.",
  "Engelbertstr.",
  "Engstenberger Weg",
  "Entenpfuhl",
  "Erbelegasse",
  "Erftstr.",
  "Erfurter Str.",
  "Erich-Heckel-Str.",
  "Erich-Klausener-Str.",
  "Erich-Ollenhauer-Str.",
  "Erlenweg",
  "Ernst-Bloch-Str.",
  "Ernst-Ludwig-Kirchner-Str.",
  "Erzbergerstr.",
  "Eschenallee",
  "Eschenweg",
  "Esmarchstr.",
  "Espenweg",
  "Euckenstr.",
  "Eulengasse",
  "Eulenkamp",
  "Ewald-Flamme-Str.",
  "Ewald-Röll-Str.",
  "Fährstr.",
  "Farnweg",
  "Fasanenweg",
  "Faßbacher Hof",
  "Felderstr.",
  "Feldkampstr.",
  "Feldsiefer Weg",
  "Feldsiefer Wiesen",
  "Feldstr.",
  "Feldtorstr.",
  "Felix-von-Roll-Str.",
  "Ferdinand-Lassalle-Str.",
  "Fester Weg",
  "Feuerbachstr.",
  "Feuerdornweg",
  "Fichtenweg",
  "Fichtestr.",
  "Finkelsteinstr.",
  "Finkenweg",
  "Fixheider Str.",
  "Flabbenhäuschen",
  "Flensburger Str.",
  "Fliederweg",
  "Florastr.",
  "Florianweg",
  "Flotowstr.",
  "Flurstr.",
  "Föhrenweg",
  "Fontanestr.",
  "Forellental",
  "Fortunastr.",
  "Franz-Esser-Str.",
  "Franz-Hitze-Str.",
  "Franz-Kail-Str.",
  "Franz-Marc-Str.",
  "Freiburger Str.",
  "Freiheitstr.",
  "Freiherr-vom-Stein-Str.",
  "Freudenthal",
  "Freudenthaler Weg",
  "Fridtjof-Nansen-Str.",
  "Friedenberger Str.",
  "Friedensstr.",
  "Friedhofstr.",
  "Friedlandstr.",
  "Friedlieb-Ferdinand-Runge-Str.",
  "Friedrich-Bayer-Str.",
  "Friedrich-Bergius-Platz",
  "Friedrich-Ebert-Platz",
  "Friedrich-Ebert-Str.",
  "Friedrich-Engels-Str.",
  "Friedrich-List-Str.",
  "Friedrich-Naumann-Str.",
  "Friedrich-Sertürner-Str.",
  "Friedrichstr.",
  "Friedrich-Weskott-Str.",
  "Friesenweg",
  "Frischenberg",
  "Fritz-Erler-Str.",
  "Fritz-Henseler-Str.",
  "Fröbelstr.",
  "Fürstenbergplatz",
  "Fürstenbergstr.",
  "Gabriele-Münter-Str.",
  "Gartenstr.",
  "Gebhardstr.",
  "Geibelstr.",
  "Gellertstr.",
  "Georg-von-Vollmar-Str.",
  "Gerhard-Domagk-Str.",
  "Gerhart-Hauptmann-Str.",
  "Gerichtsstr.",
  "Geschwister-Scholl-Str.",
  "Gezelinallee",
  "Gierener Weg",
  "Ginsterweg",
  "Gisbert-Cremer-Str.",
  "Glücksburger Str.",
  "Gluckstr.",
  "Gneisenaustr.",
  "Goetheplatz",
  "Goethestr.",
  "Golo-Mann-Str.",
  "Görlitzer Str.",
  "Görresstr.",
  "Graebestr.",
  "Graf-Galen-Platz",
  "Gregor-Mendel-Str.",
  "Greifswalder Str.",
  "Grillenweg",
  "Gronenborner Weg",
  "Große Kirchstr.",
  "Grunder Wiesen",
  "Grundermühle",
  "Grundermühlenhof",
  "Grundermühlenweg",
  "Grüner Weg",
  "Grunewaldstr.",
  "Grünstr.",
  "Günther-Weisenborn-Str.",
  "Gustav-Freytag-Str.",
  "Gustav-Heinemann-Str.",
  "Gustav-Radbruch-Str.",
  "Gut Reuschenberg",
  "Gutenbergstr.",
  "Haberstr.",
  "Habichtgasse",
  "Hafenstr.",
  "Hagenauer Str.",
  "Hahnenblecher",
  "Halenseestr.",
  "Halfenleimbach",
  "Hallesche Str.",
  "Halligstr.",
  "Hamberger Str.",
  "Hammerweg",
  "Händelstr.",
  "Hannah-Höch-Str.",
  "Hans-Arp-Str.",
  "Hans-Gerhard-Str.",
  "Hans-Sachs-Str.",
  "Hans-Schlehahn-Str.",
  "Hans-von-Dohnanyi-Str.",
  "Hardenbergstr.",
  "Haselweg",
  "Hauptstr.",
  "Haus-Vorster-Str.",
  "Hauweg",
  "Havelstr.",
  "Havensteinstr.",
  "Haydnstr.",
  "Hebbelstr.",
  "Heckenweg",
  "Heerweg",
  "Hegelstr.",
  "Heidberg",
  "Heidehöhe",
  "Heidestr.",
  "Heimstättenweg",
  "Heinrich-Böll-Str.",
  "Heinrich-Brüning-Str.",
  "Heinrich-Claes-Str.",
  "Heinrich-Heine-Str.",
  "Heinrich-Hörlein-Str.",
  "Heinrich-Lübke-Str.",
  "Heinrich-Lützenkirchen-Weg",
  "Heinrichstr.",
  "Heinrich-Strerath-Str.",
  "Heinrich-von-Kleist-Str.",
  "Heinrich-von-Stephan-Str.",
  "Heisterbachstr.",
  "Helenenstr.",
  "Helmestr.",
  "Hemmelrather Weg",
  "Henry-T.-v.-Böttinger-Str.",
  "Herderstr.",
  "Heribertstr.",
  "Hermann-Ehlers-Str.",
  "Hermann-Hesse-Str.",
  "Hermann-König-Str.",
  "Hermann-Löns-Str.",
  "Hermann-Milde-Str.",
  "Hermann-Nörrenberg-Str.",
  "Hermann-von-Helmholtz-Str.",
  "Hermann-Waibel-Str.",
  "Herzogstr.",
  "Heymannstr.",
  "Hindenburgstr.",
  "Hirzenberg",
  "Hitdorfer Kirchweg",
  "Hitdorfer Str.",
  "Höfer Mühle",
  "Höfer Weg",
  "Hohe Str.",
  "Höhenstr.",
  "Höltgestal",
  "Holunderweg",
  "Holzer Weg",
  "Holzer Wiesen",
  "Hornpottweg",
  "Hubertusweg",
  "Hufelandstr.",
  "Hufer Weg",
  "Humboldtstr.",
  "Hummelsheim",
  "Hummelweg",
  "Humperdinckstr.",
  "Hüscheider Gärten",
  "Hüscheider Str.",
  "Hütte",
  "Ilmstr.",
  "Im Bergischen Heim",
  "Im Bruch",
  "Im Buchenhain",
  "Im Bühl",
  "Im Burgfeld",
  "Im Dorf",
  "Im Eisholz",
  "Im Friedenstal",
  "Im Frohental",
  "Im Grunde",
  "Im Hederichsfeld",
  "Im Jücherfeld",
  "Im Kalkfeld",
  "Im Kirberg",
  "Im Kirchfeld",
  "Im Kreuzbruch",
  "Im Mühlenfeld",
  "Im Nesselrader Kamp",
  "Im Oberdorf",
  "Im Oberfeld",
  "Im Rosengarten",
  "Im Rottland",
  "Im Scheffengarten",
  "Im Staderfeld",
  "Im Steinfeld",
  "Im Weidenblech",
  "Im Winkel",
  "Im Ziegelfeld",
  "Imbach",
  "Imbacher Weg",
  "Immenweg",
  "In den Blechenhöfen",
  "In den Dehlen",
  "In der Birkenau",
  "In der Dasladen",
  "In der Felderhütten",
  "In der Hartmannswiese",
  "In der Höhle",
  "In der Schaafsdellen",
  "In der Wasserkuhl",
  "In der Wüste",
  "In Holzhausen",
  "Insterstr.",
  "Jacob-Fröhlen-Str.",
  "Jägerstr.",
  "Jahnstr.",
  "Jakob-Eulenberg-Weg",
  "Jakobistr.",
  "Jakob-Kaiser-Str.",
  "Jenaer Str.",
  "Johannes-Baptist-Str.",
  "Johannes-Dott-Str.",
  "Johannes-Popitz-Str.",
  "Johannes-Wislicenus-Str.",
  "Johannisburger Str.",
  "Johann-Janssen-Str.",
  "Johann-Wirtz-Weg",
  "Josefstr.",
  "Jüch",
  "Julius-Doms-Str.",
  "Julius-Leber-Str.",
  "Kaiserplatz",
  "Kaiserstr.",
  "Kaiser-Wilhelm-Allee",
  "Kalkstr.",
  "Kämpchenstr.",
  "Kämpenwiese",
  "Kämper Weg",
  "Kamptalweg",
  "Kanalstr.",
  "Kandinskystr.",
  "Kantstr.",
  "Kapellenstr.",
  "Karl-Arnold-Str.",
  "Karl-Bosch-Str.",
  "Karl-Bückart-Str.",
  "Karl-Carstens-Ring",
  "Karl-Friedrich-Goerdeler-Str.",
  "Karl-Jaspers-Str.",
  "Karl-König-Str.",
  "Karl-Krekeler-Str.",
  "Karl-Marx-Str.",
  "Karlstr.",
  "Karl-Ulitzka-Str.",
  "Karl-Wichmann-Str.",
  "Karl-Wingchen-Str.",
  "Käsenbrod",
  "Käthe-Kollwitz-Str.",
  "Katzbachstr.",
  "Kerschensteinerstr.",
  "Kiefernweg",
  "Kieler Str.",
  "Kieselstr.",
  "Kiesweg",
  "Kinderhausen",
  "Kleiberweg",
  "Kleine Kirchstr.",
  "Kleingansweg",
  "Kleinheider Weg",
  "Klief",
  "Kneippstr.",
  "Knochenbergsweg",
  "Kochergarten",
  "Kocherstr.",
  "Kockelsberg",
  "Kolberger Str.",
  "Kolmarer Str.",
  "Kölner Gasse",
  "Kölner Str.",
  "Kolpingstr.",
  "Königsberger Platz",
  "Konrad-Adenauer-Platz",
  "Köpenicker Str.",
  "Kopernikusstr.",
  "Körnerstr.",
  "Köschenberg",
  "Köttershof",
  "Kreuzbroicher Str.",
  "Kreuzkamp",
  "Krummer Weg",
  "Kruppstr.",
  "Kuhlmannweg",
  "Kump",
  "Kumper Weg",
  "Kunstfeldstr.",
  "Küppersteger Str.",
  "Kursiefen",
  "Kursiefer Weg",
  "Kurtekottenweg",
  "Kurt-Schumacher-Ring",
  "Kyllstr.",
  "Langenfelder Str.",
  "Längsleimbach",
  "Lärchenweg",
  "Legienstr.",
  "Lehner Mühle",
  "Leichlinger Str.",
  "Leimbacher Hof",
  "Leinestr.",
  "Leineweberstr.",
  "Leipziger Str.",
  "Lerchengasse",
  "Lessingstr.",
  "Libellenweg",
  "Lichstr.",
  "Liebigstr.",
  "Lindenstr.",
  "Lingenfeld",
  "Linienstr.",
  "Lippe",
  "Löchergraben",
  "Löfflerstr.",
  "Loheweg",
  "Lohrbergstr.",
  "Lohrstr.",
  "Löhstr.",
  "Lortzingstr.",
  "Lötzener Str.",
  "Löwenburgstr.",
  "Lucasstr.",
  "Ludwig-Erhard-Platz",
  "Ludwig-Girtler-Str.",
  "Ludwig-Knorr-Str.",
  "Luisenstr.",
  "Lupinenweg",
  "Lurchenweg",
  "Lützenkirchener Str.",
  "Lycker Str.",
  "Maashofstr.",
  "Manforter Str.",
  "Marc-Chagall-Str.",
  "Maria-Dresen-Str.",
  "Maria-Terwiel-Str.",
  "Marie-Curie-Str.",
  "Marienburger Str.",
  "Mariendorfer Str.",
  "Marienwerderstr.",
  "Marie-Schlei-Str.",
  "Marktplatz",
  "Markusweg",
  "Martin-Buber-Str.",
  "Martin-Heidegger-Str.",
  "Martin-Luther-Str.",
  "Masurenstr.",
  "Mathildenweg",
  "Maurinusstr.",
  "Mauspfad",
  "Max-Beckmann-Str.",
  "Max-Delbrück-Str.",
  "Max-Ernst-Str.",
  "Max-Holthausen-Platz",
  "Max-Horkheimer-Str.",
  "Max-Liebermann-Str.",
  "Max-Pechstein-Str.",
  "Max-Planck-Str.",
  "Max-Scheler-Str.",
  "Max-Schönenberg-Str.",
  "Maybachstr.",
  "Meckhofer Feld",
  "Meisenweg",
  "Memelstr.",
  "Menchendahler Str.",
  "Mendelssohnstr.",
  "Merziger Str.",
  "Mettlacher Str.",
  "Metzer Str.",
  "Michaelsweg",
  "Miselohestr.",
  "Mittelstr.",
  "Mohlenstr.",
  "Moltkestr.",
  "Monheimer Str.",
  "Montanusstr.",
  "Montessoriweg",
  "Moosweg",
  "Morsbroicher Str.",
  "Moselstr.",
  "Moskauer Str.",
  "Mozartstr.",
  "Mühlenweg",
  "Muhrgasse",
  "Muldestr.",
  "Mülhausener Str.",
  "Mülheimer Str.",
  "Münsters Gäßchen",
  "Münzstr.",
  "Müritzstr.",
  "Myliusstr.",
  "Nachtigallenweg",
  "Nauener Str.",
  "Neißestr.",
  "Nelly-Sachs-Str.",
  "Netzestr.",
  "Neuendriesch",
  "Neuenhausgasse",
  "Neuenkamp",
  "Neujudenhof",
  "Neukronenberger Str.",
  "Neustadtstr.",
  "Nicolai-Hartmann-Str.",
  "Niederblecher",
  "Niederfeldstr.",
  "Nietzschestr.",
  "Nikolaus-Groß-Str.",
  "Nobelstr.",
  "Norderneystr.",
  "Nordstr.",
  "Ober dem Hof",
  "Obere Lindenstr.",
  "Obere Str.",
  "Oberölbach",
  "Odenthaler Str.",
  "Oderstr.",
  "Okerstr.",
  "Olof-Palme-Str.",
  "Ophovener Str.",
  "Opladener Platz",
  "Opladener Str.",
  "Ortelsburger Str.",
  "Oskar-Moll-Str.",
  "Oskar-Schlemmer-Str.",
  "Oststr.",
  "Oswald-Spengler-Str.",
  "Otto-Dix-Str.",
  "Otto-Grimm-Str.",
  "Otto-Hahn-Str.",
  "Otto-Müller-Str.",
  "Otto-Stange-Str.",
  "Ottostr.",
  "Otto-Varnhagen-Str.",
  "Otto-Wels-Str.",
  "Ottweilerstr.",
  "Oulustr.",
  "Overfeldweg",
  "Pappelweg",
  "Paracelsusstr.",
  "Parkstr.",
  "Pastor-Louis-Str.",
  "Pastor-Scheibler-Str.",
  "Pastorskamp",
  "Paul-Klee-Str.",
  "Paul-Löbe-Str.",
  "Paulstr.",
  "Peenestr.",
  "Pescher Busch",
  "Peschstr.",
  "Pestalozzistr.",
  "Peter-Grieß-Str.",
  "Peter-Joseph-Lenné-Str.",
  "Peter-Neuenheuser-Str.",
  "Petersbergstr.",
  "Peterstr.",
  "Pfarrer-Jekel-Str.",
  "Pfarrer-Klein-Str.",
  "Pfarrer-Röhr-Str.",
  "Pfeilshofstr.",
  "Philipp-Ott-Str.",
  "Piet-Mondrian-Str.",
  "Platanenweg",
  "Pommernstr.",
  "Porschestr.",
  "Poststr.",
  "Potsdamer Str.",
  "Pregelstr.",
  "Prießnitzstr.",
  "Pützdelle",
  "Quarzstr.",
  "Quettinger Str.",
  "Rat-Deycks-Str.",
  "Rathenaustr.",
  "Ratherkämp",
  "Ratiborer Str.",
  "Raushofstr.",
  "Regensburger Str.",
  "Reinickendorfer Str.",
  "Renkgasse",
  "Rennbaumplatz",
  "Rennbaumstr.",
  "Reuschenberger Str.",
  "Reusrather Str.",
  "Reuterstr.",
  "Rheinallee",
  "Rheindorfer Str.",
  "Rheinstr.",
  "Rhein-Wupper-Platz",
  "Richard-Wagner-Str.",
  "Rilkestr.",
  "Ringstr.",
  "Robert-Blum-Str.",
  "Robert-Koch-Str.",
  "Robert-Medenwald-Str.",
  "Rolandstr.",
  "Romberg",
  "Röntgenstr.",
  "Roonstr.",
  "Ropenstall",
  "Ropenstaller Weg",
  "Rosenthal",
  "Rostocker Str.",
  "Rotdornweg",
  "Röttgerweg",
  "Rückertstr.",
  "Rudolf-Breitscheid-Str.",
  "Rudolf-Mann-Platz",
  "Rudolf-Stracke-Str.",
  "Ruhlachplatz",
  "Ruhlachstr.",
  "Rüttersweg",
  "Saalestr.",
  "Saarbrücker Str.",
  "Saarlauterner Str.",
  "Saarstr.",
  "Salamanderweg",
  "Samlandstr.",
  "Sanddornstr.",
  "Sandstr.",
  "Sauerbruchstr.",
  "Schäfershütte",
  "Scharnhorststr.",
  "Scheffershof",
  "Scheidemannstr.",
  "Schellingstr.",
  "Schenkendorfstr.",
  "Schießbergstr.",
  "Schillerstr.",
  "Schlangenhecke",
  "Schlebuscher Heide",
  "Schlebuscher Str.",
  "Schlebuschrath",
  "Schlehdornstr.",
  "Schleiermacherstr.",
  "Schloßstr.",
  "Schmalenbruch",
  "Schnepfenflucht",
  "Schöffenweg",
  "Schöllerstr.",
  "Schöne Aussicht",
  "Schöneberger Str.",
  "Schopenhauerstr.",
  "Schubertplatz",
  "Schubertstr.",
  "Schulberg",
  "Schulstr.",
  "Schumannstr.",
  "Schwalbenweg",
  "Schwarzastr.",
  "Sebastianusweg",
  "Semmelweisstr.",
  "Siebelplatz",
  "Siemensstr.",
  "Solinger Str.",
  "Sonderburger Str.",
  "Spandauer Str.",
  "Speestr.",
  "Sperberweg",
  "Sperlingsweg",
  "Spitzwegstr.",
  "Sporrenberger Mühle",
  "Spreestr.",
  "St. Ingberter Str.",
  "Starenweg",
  "Stauffenbergstr.",
  "Stefan-Zweig-Str.",
  "Stegerwaldstr.",
  "Steglitzer Str.",
  "Steinbücheler Feld",
  "Steinbücheler Str.",
  "Steinstr.",
  "Steinweg",
  "Stephan-Lochner-Str.",
  "Stephanusstr.",
  "Stettiner Str.",
  "Stixchesstr.",
  "Stöckenstr.",
  "Stralsunder Str.",
  "Straßburger Str.",
  "Stresemannplatz",
  "Strombergstr.",
  "Stromstr.",
  "Stüttekofener Str.",
  "Sudestr.",
  "Sürderstr.",
  "Syltstr.",
  "Talstr.",
  "Tannenbergstr.",
  "Tannenweg",
  "Taubenweg",
  "Teitscheider Weg",
  "Telegrafenstr.",
  "Teltower Str.",
  "Tempelhofer Str.",
  "Theodor-Adorno-Str.",
  "Theodor-Fliedner-Str.",
  "Theodor-Gierath-Str.",
  "Theodor-Haubach-Str.",
  "Theodor-Heuss-Ring",
  "Theodor-Storm-Str.",
  "Theodorstr.",
  "Thomas-Dehler-Str.",
  "Thomas-Morus-Str.",
  "Thomas-von-Aquin-Str.",
  "Tönges Feld",
  "Torstr.",
  "Treptower Str.",
  "Treuburger Str.",
  "Uhlandstr.",
  "Ulmenweg",
  "Ulmer Str.",
  "Ulrichstr.",
  "Ulrich-von-Hassell-Str.",
  "Umlag",
  "Unstrutstr.",
  "Unter dem Schildchen",
  "Unterölbach",
  "Unterstr.",
  "Uppersberg",
  "Van\\'t-Hoff-Str.",
  "Veit-Stoß-Str.",
  "Vereinsstr.",
  "Viktor-Meyer-Str.",
  "Vincent-van-Gogh-Str.",
  "Virchowstr.",
  "Voigtslach",
  "Volhardstr.",
  "Völklinger Str.",
  "Von-Brentano-Str.",
  "Von-Diergardt-Str.",
  "Von-Eichendorff-Str.",
  "Von-Ketteler-Str.",
  "Von-Knoeringen-Str.",
  "Von-Pettenkofer-Str.",
  "Von-Siebold-Str.",
  "Wacholderweg",
  "Waldstr.",
  "Walter-Flex-Str.",
  "Walter-Hempel-Str.",
  "Walter-Hochapfel-Str.",
  "Walter-Nernst-Str.",
  "Wannseestr.",
  "Warnowstr.",
  "Warthestr.",
  "Weddigenstr.",
  "Weichselstr.",
  "Weidenstr.",
  "Weidfeldstr.",
  "Weiherfeld",
  "Weiherstr.",
  "Weinhäuser Str.",
  "Weißdornweg",
  "Weißenseestr.",
  "Weizkamp",
  "Werftstr.",
  "Werkstättenstr.",
  "Werner-Heisenberg-Str.",
  "Werrastr.",
  "Weyerweg",
  "Widdauener Str.",
  "Wiebertshof",
  "Wiehbachtal",
  "Wiembachallee",
  "Wiesdorfer Platz",
  "Wiesenstr.",
  "Wilhelm-Busch-Str.",
  "Wilhelm-Hastrich-Str.",
  "Wilhelm-Leuschner-Str.",
  "Wilhelm-Liebknecht-Str.",
  "Wilhelmsgasse",
  "Wilhelmstr.",
  "Willi-Baumeister-Str.",
  "Willy-Brandt-Ring",
  "Winand-Rossi-Str.",
  "Windthorststr.",
  "Winkelweg",
  "Winterberg",
  "Wittenbergstr.",
  "Wolf-Vostell-Str.",
  "Wolkenburgstr.",
  "Wupperstr.",
  "Wuppertalstr.",
  "Wüstenhof",
  "Yitzhak-Rabin-Str.",
  "Zauberkuhle",
  "Zedernweg",
  "Zehlendorfer Str.",
  "Zehntenweg",
  "Zeisigweg",
  "Zeppelinstr.",
  "Zschopaustr.",
  "Zum Claashäuschen",
  "Zündhütchenweg",
  "Zur Alten Brauerei",
  "Zur alten Fabrik"
];

},{}],64:[function(require,module,exports){
module["exports"] = [
  "+49-1##-#######",
  "+49-1###-########"
];

},{}],65:[function(require,module,exports){
var cell_phone = {};
module['exports'] = cell_phone;
cell_phone.formats = require("./formats");

},{"./formats":64}],66:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.legal_form = require("./legal_form");
company.name = require("./name");

},{"./legal_form":67,"./name":68,"./suffix":69}],67:[function(require,module,exports){
module["exports"] = [
  "GmbH",
  "AG",
  "Gruppe",
  "KG",
  "GmbH & Co. KG",
  "UG",
  "OHG"
];

},{}],68:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name}-#{Name.last_name}",
  "#{Name.last_name}, #{Name.last_name} und #{Name.last_name}"
];

},{}],69:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"dup":67}],70:[function(require,module,exports){
var de = {};
module['exports'] = de;
de.title = "German";
de.address = require("./address");
de.company = require("./company");
de.internet = require("./internet");
de.lorem = require("./lorem");
de.name = require("./name");
de.phone_number = require("./phone_number");
de.cell_phone = require("./cell_phone");
},{"./address":56,"./cell_phone":65,"./company":66,"./internet":73,"./lorem":74,"./name":77,"./phone_number":83}],71:[function(require,module,exports){
module["exports"] = [
  "com",
  "info",
  "name",
  "net",
  "org",
  "de",
  "ch"
];

},{}],72:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.com",
  "hotmail.com"
];

},{}],73:[function(require,module,exports){
var internet = {};
module['exports'] = internet;
internet.free_email = require("./free_email");
internet.domain_suffix = require("./domain_suffix");

},{"./domain_suffix":71,"./free_email":72}],74:[function(require,module,exports){
var lorem = {};
module['exports'] = lorem;
lorem.words = require("./words");

},{"./words":75}],75:[function(require,module,exports){
module["exports"] = [
  "alias",
  "consequatur",
  "aut",
  "perferendis",
  "sit",
  "voluptatem",
  "accusantium",
  "doloremque",
  "aperiam",
  "eaque",
  "ipsa",
  "quae",
  "ab",
  "illo",
  "inventore",
  "veritatis",
  "et",
  "quasi",
  "architecto",
  "beatae",
  "vitae",
  "dicta",
  "sunt",
  "explicabo",
  "aspernatur",
  "aut",
  "odit",
  "aut",
  "fugit",
  "sed",
  "quia",
  "consequuntur",
  "magni",
  "dolores",
  "eos",
  "qui",
  "ratione",
  "voluptatem",
  "sequi",
  "nesciunt",
  "neque",
  "dolorem",
  "ipsum",
  "quia",
  "dolor",
  "sit",
  "amet",
  "consectetur",
  "adipisci",
  "velit",
  "sed",
  "quia",
  "non",
  "numquam",
  "eius",
  "modi",
  "tempora",
  "incidunt",
  "ut",
  "labore",
  "et",
  "dolore",
  "magnam",
  "aliquam",
  "quaerat",
  "voluptatem",
  "ut",
  "enim",
  "ad",
  "minima",
  "veniam",
  "quis",
  "nostrum",
  "exercitationem",
  "ullam",
  "corporis",
  "nemo",
  "enim",
  "ipsam",
  "voluptatem",
  "quia",
  "voluptas",
  "sit",
  "suscipit",
  "laboriosam",
  "nisi",
  "ut",
  "aliquid",
  "ex",
  "ea",
  "commodi",
  "consequatur",
  "quis",
  "autem",
  "vel",
  "eum",
  "iure",
  "reprehenderit",
  "qui",
  "in",
  "ea",
  "voluptate",
  "velit",
  "esse",
  "quam",
  "nihil",
  "molestiae",
  "et",
  "iusto",
  "odio",
  "dignissimos",
  "ducimus",
  "qui",
  "blanditiis",
  "praesentium",
  "laudantium",
  "totam",
  "rem",
  "voluptatum",
  "deleniti",
  "atque",
  "corrupti",
  "quos",
  "dolores",
  "et",
  "quas",
  "molestias",
  "excepturi",
  "sint",
  "occaecati",
  "cupiditate",
  "non",
  "provident",
  "sed",
  "ut",
  "perspiciatis",
  "unde",
  "omnis",
  "iste",
  "natus",
  "error",
  "similique",
  "sunt",
  "in",
  "culpa",
  "qui",
  "officia",
  "deserunt",
  "mollitia",
  "animi",
  "id",
  "est",
  "laborum",
  "et",
  "dolorum",
  "fuga",
  "et",
  "harum",
  "quidem",
  "rerum",
  "facilis",
  "est",
  "et",
  "expedita",
  "distinctio",
  "nam",
  "libero",
  "tempore",
  "cum",
  "soluta",
  "nobis",
  "est",
  "eligendi",
  "optio",
  "cumque",
  "nihil",
  "impedit",
  "quo",
  "porro",
  "quisquam",
  "est",
  "qui",
  "minus",
  "id",
  "quod",
  "maxime",
  "placeat",
  "facere",
  "possimus",
  "omnis",
  "voluptas",
  "assumenda",
  "est",
  "omnis",
  "dolor",
  "repellendus",
  "temporibus",
  "autem",
  "quibusdam",
  "et",
  "aut",
  "consequatur",
  "vel",
  "illum",
  "qui",
  "dolorem",
  "eum",
  "fugiat",
  "quo",
  "voluptas",
  "nulla",
  "pariatur",
  "at",
  "vero",
  "eos",
  "et",
  "accusamus",
  "officiis",
  "debitis",
  "aut",
  "rerum",
  "necessitatibus",
  "saepe",
  "eveniet",
  "ut",
  "et",
  "voluptates",
  "repudiandae",
  "sint",
  "et",
  "molestiae",
  "non",
  "recusandae",
  "itaque",
  "earum",
  "rerum",
  "hic",
  "tenetur",
  "a",
  "sapiente",
  "delectus",
  "ut",
  "aut",
  "reiciendis",
  "voluptatibus",
  "maiores",
  "doloribus",
  "asperiores",
  "repellat"
];

},{}],76:[function(require,module,exports){
module["exports"] = [
  "Aaron",
  "Abdul",
  "Abdullah",
  "Adam",
  "Adrian",
  "Adriano",
  "Ahmad",
  "Ahmed",
  "Ahmet",
  "Alan",
  "Albert",
  "Alessandro",
  "Alessio",
  "Alex",
  "Alexander",
  "Alfred",
  "Ali",
  "Amar",
  "Amir",
  "Amon",
  "Andre",
  "Andreas",
  "Andrew",
  "Angelo",
  "Ansgar",
  "Anthony",
  "Anton",
  "Antonio",
  "Arda",
  "Arian",
  "Armin",
  "Arne",
  "Arno",
  "Arthur",
  "Artur",
  "Arved",
  "Arvid",
  "Ayman",
  "Baran",
  "Baris",
  "Bastian",
  "Batuhan",
  "Bela",
  "Ben",
  "Benedikt",
  "Benjamin",
  "Bennet",
  "Bennett",
  "Benno",
  "Bent",
  "Berat",
  "Berkay",
  "Bernd",
  "Bilal",
  "Bjarne",
  "Björn",
  "Bo",
  "Boris",
  "Brandon",
  "Brian",
  "Bruno",
  "Bryan",
  "Burak",
  "Calvin",
  "Can",
  "Carl",
  "Carlo",
  "Carlos",
  "Caspar",
  "Cedric",
  "Cedrik",
  "Cem",
  "Charlie",
  "Chris",
  "Christian",
  "Christiano",
  "Christoph",
  "Christopher",
  "Claas",
  "Clemens",
  "Colin",
  "Collin",
  "Conner",
  "Connor",
  "Constantin",
  "Corvin",
  "Curt",
  "Damian",
  "Damien",
  "Daniel",
  "Danilo",
  "Danny",
  "Darian",
  "Dario",
  "Darius",
  "Darren",
  "David",
  "Davide",
  "Davin",
  "Dean",
  "Deniz",
  "Dennis",
  "Denny",
  "Devin",
  "Diego",
  "Dion",
  "Domenic",
  "Domenik",
  "Dominic",
  "Dominik",
  "Dorian",
  "Dustin",
  "Dylan",
  "Ecrin",
  "Eddi",
  "Eddy",
  "Edgar",
  "Edwin",
  "Efe",
  "Ege",
  "Elia",
  "Eliah",
  "Elias",
  "Elijah",
  "Emanuel",
  "Emil",
  "Emilian",
  "Emilio",
  "Emir",
  "Emirhan",
  "Emre",
  "Enes",
  "Enno",
  "Enrico",
  "Eren",
  "Eric",
  "Erik",
  "Etienne",
  "Fabian",
  "Fabien",
  "Fabio",
  "Fabrice",
  "Falk",
  "Felix",
  "Ferdinand",
  "Fiete",
  "Filip",
  "Finlay",
  "Finley",
  "Finn",
  "Finnley",
  "Florian",
  "Francesco",
  "Franz",
  "Frederic",
  "Frederick",
  "Frederik",
  "Friedrich",
  "Fritz",
  "Furkan",
  "Fynn",
  "Gabriel",
  "Georg",
  "Gerrit",
  "Gian",
  "Gianluca",
  "Gino",
  "Giuliano",
  "Giuseppe",
  "Gregor",
  "Gustav",
  "Hagen",
  "Hamza",
  "Hannes",
  "Hanno",
  "Hans",
  "Hasan",
  "Hassan",
  "Hauke",
  "Hendrik",
  "Hennes",
  "Henning",
  "Henri",
  "Henrick",
  "Henrik",
  "Henry",
  "Hugo",
  "Hussein",
  "Ian",
  "Ibrahim",
  "Ilias",
  "Ilja",
  "Ilyas",
  "Immanuel",
  "Ismael",
  "Ismail",
  "Ivan",
  "Iven",
  "Jack",
  "Jacob",
  "Jaden",
  "Jakob",
  "Jamal",
  "James",
  "Jamie",
  "Jan",
  "Janek",
  "Janis",
  "Janne",
  "Jannek",
  "Jannes",
  "Jannik",
  "Jannis",
  "Jano",
  "Janosch",
  "Jared",
  "Jari",
  "Jarne",
  "Jarno",
  "Jaron",
  "Jason",
  "Jasper",
  "Jay",
  "Jayden",
  "Jayson",
  "Jean",
  "Jens",
  "Jeremias",
  "Jeremie",
  "Jeremy",
  "Jermaine",
  "Jerome",
  "Jesper",
  "Jesse",
  "Jim",
  "Jimmy",
  "Joe",
  "Joel",
  "Joey",
  "Johann",
  "Johannes",
  "John",
  "Johnny",
  "Jon",
  "Jona",
  "Jonah",
  "Jonas",
  "Jonathan",
  "Jonte",
  "Joost",
  "Jordan",
  "Joris",
  "Joscha",
  "Joschua",
  "Josef",
  "Joseph",
  "Josh",
  "Joshua",
  "Josua",
  "Juan",
  "Julian",
  "Julien",
  "Julius",
  "Juri",
  "Justin",
  "Justus",
  "Kaan",
  "Kai",
  "Kalle",
  "Karim",
  "Karl",
  "Karlo",
  "Kay",
  "Keanu",
  "Kenan",
  "Kenny",
  "Keno",
  "Kerem",
  "Kerim",
  "Kevin",
  "Kian",
  "Kilian",
  "Kim",
  "Kimi",
  "Kjell",
  "Klaas",
  "Klemens",
  "Konrad",
  "Konstantin",
  "Koray",
  "Korbinian",
  "Kurt",
  "Lars",
  "Lasse",
  "Laurence",
  "Laurens",
  "Laurenz",
  "Laurin",
  "Lean",
  "Leander",
  "Leandro",
  "Leif",
  "Len",
  "Lenn",
  "Lennard",
  "Lennart",
  "Lennert",
  "Lennie",
  "Lennox",
  "Lenny",
  "Leo",
  "Leon",
  "Leonard",
  "Leonardo",
  "Leonhard",
  "Leonidas",
  "Leopold",
  "Leroy",
  "Levent",
  "Levi",
  "Levin",
  "Lewin",
  "Lewis",
  "Liam",
  "Lian",
  "Lias",
  "Lino",
  "Linus",
  "Lio",
  "Lion",
  "Lionel",
  "Logan",
  "Lorenz",
  "Lorenzo",
  "Loris",
  "Louis",
  "Luan",
  "Luc",
  "Luca",
  "Lucas",
  "Lucian",
  "Lucien",
  "Ludwig",
  "Luis",
  "Luiz",
  "Luk",
  "Luka",
  "Lukas",
  "Luke",
  "Lutz",
  "Maddox",
  "Mads",
  "Magnus",
  "Maik",
  "Maksim",
  "Malik",
  "Malte",
  "Manuel",
  "Marc",
  "Marcel",
  "Marco",
  "Marcus",
  "Marek",
  "Marian",
  "Mario",
  "Marius",
  "Mark",
  "Marko",
  "Markus",
  "Marlo",
  "Marlon",
  "Marten",
  "Martin",
  "Marvin",
  "Marwin",
  "Mateo",
  "Mathis",
  "Matis",
  "Mats",
  "Matteo",
  "Mattes",
  "Matthias",
  "Matthis",
  "Matti",
  "Mattis",
  "Maurice",
  "Max",
  "Maxim",
  "Maximilian",
  "Mehmet",
  "Meik",
  "Melvin",
  "Merlin",
  "Mert",
  "Michael",
  "Michel",
  "Mick",
  "Miguel",
  "Mika",
  "Mikail",
  "Mike",
  "Milan",
  "Milo",
  "Mio",
  "Mirac",
  "Mirco",
  "Mirko",
  "Mohamed",
  "Mohammad",
  "Mohammed",
  "Moritz",
  "Morten",
  "Muhammed",
  "Murat",
  "Mustafa",
  "Nathan",
  "Nathanael",
  "Nelson",
  "Neo",
  "Nevio",
  "Nick",
  "Niclas",
  "Nico",
  "Nicolai",
  "Nicolas",
  "Niels",
  "Nikita",
  "Niklas",
  "Niko",
  "Nikolai",
  "Nikolas",
  "Nils",
  "Nino",
  "Noah",
  "Noel",
  "Norman",
  "Odin",
  "Oke",
  "Ole",
  "Oliver",
  "Omar",
  "Onur",
  "Oscar",
  "Oskar",
  "Pascal",
  "Patrice",
  "Patrick",
  "Paul",
  "Peer",
  "Pepe",
  "Peter",
  "Phil",
  "Philip",
  "Philipp",
  "Pierre",
  "Piet",
  "Pit",
  "Pius",
  "Quentin",
  "Quirin",
  "Rafael",
  "Raik",
  "Ramon",
  "Raphael",
  "Rasmus",
  "Raul",
  "Rayan",
  "René",
  "Ricardo",
  "Riccardo",
  "Richard",
  "Rick",
  "Rico",
  "Robert",
  "Robin",
  "Rocco",
  "Roman",
  "Romeo",
  "Ron",
  "Ruben",
  "Ryan",
  "Said",
  "Salih",
  "Sam",
  "Sami",
  "Sammy",
  "Samuel",
  "Sandro",
  "Santino",
  "Sascha",
  "Sean",
  "Sebastian",
  "Selim",
  "Semih",
  "Shawn",
  "Silas",
  "Simeon",
  "Simon",
  "Sinan",
  "Sky",
  "Stefan",
  "Steffen",
  "Stephan",
  "Steve",
  "Steven",
  "Sven",
  "Sönke",
  "Sören",
  "Taha",
  "Tamino",
  "Tammo",
  "Tarik",
  "Tayler",
  "Taylor",
  "Teo",
  "Theo",
  "Theodor",
  "Thies",
  "Thilo",
  "Thomas",
  "Thorben",
  "Thore",
  "Thorge",
  "Tiago",
  "Til",
  "Till",
  "Tillmann",
  "Tim",
  "Timm",
  "Timo",
  "Timon",
  "Timothy",
  "Tino",
  "Titus",
  "Tizian",
  "Tjark",
  "Tobias",
  "Tom",
  "Tommy",
  "Toni",
  "Tony",
  "Torben",
  "Tore",
  "Tristan",
  "Tyler",
  "Tyron",
  "Umut",
  "Valentin",
  "Valentino",
  "Veit",
  "Victor",
  "Viktor",
  "Vin",
  "Vincent",
  "Vito",
  "Vitus",
  "Wilhelm",
  "Willi",
  "William",
  "Willy",
  "Xaver",
  "Yannic",
  "Yannick",
  "Yannik",
  "Yannis",
  "Yasin",
  "Youssef",
  "Yunus",
  "Yusuf",
  "Yven",
  "Yves",
  "Ömer",
  "Aaliyah",
  "Abby",
  "Abigail",
  "Ada",
  "Adelina",
  "Adriana",
  "Aileen",
  "Aimee",
  "Alana",
  "Alea",
  "Alena",
  "Alessa",
  "Alessia",
  "Alexa",
  "Alexandra",
  "Alexia",
  "Alexis",
  "Aleyna",
  "Alia",
  "Alica",
  "Alice",
  "Alicia",
  "Alina",
  "Alisa",
  "Alisha",
  "Alissa",
  "Aliya",
  "Aliyah",
  "Allegra",
  "Alma",
  "Alyssa",
  "Amalia",
  "Amanda",
  "Amelia",
  "Amelie",
  "Amina",
  "Amira",
  "Amy",
  "Ana",
  "Anabel",
  "Anastasia",
  "Andrea",
  "Angela",
  "Angelina",
  "Angelique",
  "Anja",
  "Ann",
  "Anna",
  "Annabel",
  "Annabell",
  "Annabelle",
  "Annalena",
  "Anne",
  "Anneke",
  "Annelie",
  "Annemarie",
  "Anni",
  "Annie",
  "Annika",
  "Anny",
  "Anouk",
  "Antonia",
  "Arda",
  "Ariana",
  "Ariane",
  "Arwen",
  "Ashley",
  "Asya",
  "Aurelia",
  "Aurora",
  "Ava",
  "Ayleen",
  "Aylin",
  "Ayse",
  "Azra",
  "Betty",
  "Bianca",
  "Bianka",
  "Caitlin",
  "Cara",
  "Carina",
  "Carla",
  "Carlotta",
  "Carmen",
  "Carolin",
  "Carolina",
  "Caroline",
  "Cassandra",
  "Catharina",
  "Catrin",
  "Cecile",
  "Cecilia",
  "Celia",
  "Celina",
  "Celine",
  "Ceyda",
  "Ceylin",
  "Chantal",
  "Charleen",
  "Charlotta",
  "Charlotte",
  "Chayenne",
  "Cheyenne",
  "Chiara",
  "Christin",
  "Christina",
  "Cindy",
  "Claire",
  "Clara",
  "Clarissa",
  "Colleen",
  "Collien",
  "Cora",
  "Corinna",
  "Cosima",
  "Dana",
  "Daniela",
  "Daria",
  "Darleen",
  "Defne",
  "Delia",
  "Denise",
  "Diana",
  "Dilara",
  "Dina",
  "Dorothea",
  "Ecrin",
  "Eda",
  "Eileen",
  "Ela",
  "Elaine",
  "Elanur",
  "Elea",
  "Elena",
  "Eleni",
  "Eleonora",
  "Eliana",
  "Elif",
  "Elina",
  "Elisa",
  "Elisabeth",
  "Ella",
  "Ellen",
  "Elli",
  "Elly",
  "Elsa",
  "Emelie",
  "Emely",
  "Emilia",
  "Emilie",
  "Emily",
  "Emma",
  "Emmely",
  "Emmi",
  "Emmy",
  "Enie",
  "Enna",
  "Enya",
  "Esma",
  "Estelle",
  "Esther",
  "Eva",
  "Evelin",
  "Evelina",
  "Eveline",
  "Evelyn",
  "Fabienne",
  "Fatima",
  "Fatma",
  "Felicia",
  "Felicitas",
  "Felina",
  "Femke",
  "Fenja",
  "Fine",
  "Finia",
  "Finja",
  "Finnja",
  "Fiona",
  "Flora",
  "Florentine",
  "Francesca",
  "Franka",
  "Franziska",
  "Frederike",
  "Freya",
  "Frida",
  "Frieda",
  "Friederike",
  "Giada",
  "Gina",
  "Giulia",
  "Giuliana",
  "Greta",
  "Hailey",
  "Hana",
  "Hanna",
  "Hannah",
  "Heidi",
  "Helen",
  "Helena",
  "Helene",
  "Helin",
  "Henriette",
  "Henrike",
  "Hermine",
  "Ida",
  "Ilayda",
  "Imke",
  "Ina",
  "Ines",
  "Inga",
  "Inka",
  "Irem",
  "Isa",
  "Isabel",
  "Isabell",
  "Isabella",
  "Isabelle",
  "Ivonne",
  "Jacqueline",
  "Jamie",
  "Jamila",
  "Jana",
  "Jane",
  "Janin",
  "Janina",
  "Janine",
  "Janna",
  "Janne",
  "Jara",
  "Jasmin",
  "Jasmina",
  "Jasmine",
  "Jella",
  "Jenna",
  "Jennifer",
  "Jenny",
  "Jessica",
  "Jessy",
  "Jette",
  "Jil",
  "Jill",
  "Joana",
  "Joanna",
  "Joelina",
  "Joeline",
  "Joelle",
  "Johanna",
  "Joleen",
  "Jolie",
  "Jolien",
  "Jolin",
  "Jolina",
  "Joline",
  "Jona",
  "Jonah",
  "Jonna",
  "Josefin",
  "Josefine",
  "Josephin",
  "Josephine",
  "Josie",
  "Josy",
  "Joy",
  "Joyce",
  "Judith",
  "Judy",
  "Jule",
  "Julia",
  "Juliana",
  "Juliane",
  "Julie",
  "Julienne",
  "Julika",
  "Julina",
  "Juna",
  "Justine",
  "Kaja",
  "Karina",
  "Karla",
  "Karlotta",
  "Karolina",
  "Karoline",
  "Kassandra",
  "Katarina",
  "Katharina",
  "Kathrin",
  "Katja",
  "Katrin",
  "Kaya",
  "Kayra",
  "Kiana",
  "Kiara",
  "Kim",
  "Kimberley",
  "Kimberly",
  "Kira",
  "Klara",
  "Korinna",
  "Kristin",
  "Kyra",
  "Laila",
  "Lana",
  "Lara",
  "Larissa",
  "Laura",
  "Laureen",
  "Lavinia",
  "Lea",
  "Leah",
  "Leana",
  "Leandra",
  "Leann",
  "Lee",
  "Leila",
  "Lena",
  "Lene",
  "Leni",
  "Lenia",
  "Lenja",
  "Lenya",
  "Leona",
  "Leoni",
  "Leonie",
  "Leonora",
  "Leticia",
  "Letizia",
  "Levke",
  "Leyla",
  "Lia",
  "Liah",
  "Liana",
  "Lili",
  "Lilia",
  "Lilian",
  "Liliana",
  "Lilith",
  "Lilli",
  "Lillian",
  "Lilly",
  "Lily",
  "Lina",
  "Linda",
  "Lindsay",
  "Line",
  "Linn",
  "Linnea",
  "Lisa",
  "Lisann",
  "Lisanne",
  "Liv",
  "Livia",
  "Liz",
  "Lola",
  "Loreen",
  "Lorena",
  "Lotta",
  "Lotte",
  "Louisa",
  "Louise",
  "Luana",
  "Luca",
  "Lucia",
  "Lucie",
  "Lucienne",
  "Lucy",
  "Luisa",
  "Luise",
  "Luka",
  "Luna",
  "Luzie",
  "Lya",
  "Lydia",
  "Lyn",
  "Lynn",
  "Madeleine",
  "Madita",
  "Madleen",
  "Madlen",
  "Magdalena",
  "Maike",
  "Mailin",
  "Maira",
  "Maja",
  "Malena",
  "Malia",
  "Malin",
  "Malina",
  "Mandy",
  "Mara",
  "Marah",
  "Mareike",
  "Maren",
  "Maria",
  "Mariam",
  "Marie",
  "Marieke",
  "Mariella",
  "Marika",
  "Marina",
  "Marisa",
  "Marissa",
  "Marit",
  "Marla",
  "Marleen",
  "Marlen",
  "Marlena",
  "Marlene",
  "Marta",
  "Martha",
  "Mary",
  "Maryam",
  "Mathilda",
  "Mathilde",
  "Matilda",
  "Maxi",
  "Maxima",
  "Maxine",
  "Maya",
  "Mayra",
  "Medina",
  "Medine",
  "Meike",
  "Melanie",
  "Melek",
  "Melike",
  "Melina",
  "Melinda",
  "Melis",
  "Melisa",
  "Melissa",
  "Merle",
  "Merve",
  "Meryem",
  "Mette",
  "Mia",
  "Michaela",
  "Michelle",
  "Mieke",
  "Mila",
  "Milana",
  "Milena",
  "Milla",
  "Mina",
  "Mira",
  "Miray",
  "Miriam",
  "Mirja",
  "Mona",
  "Monique",
  "Nadine",
  "Nadja",
  "Naemi",
  "Nancy",
  "Naomi",
  "Natalia",
  "Natalie",
  "Nathalie",
  "Neele",
  "Nela",
  "Nele",
  "Nelli",
  "Nelly",
  "Nia",
  "Nicole",
  "Nika",
  "Nike",
  "Nikita",
  "Nila",
  "Nina",
  "Nisa",
  "Noemi",
  "Nora",
  "Olivia",
  "Patricia",
  "Patrizia",
  "Paula",
  "Paulina",
  "Pauline",
  "Penelope",
  "Philine",
  "Phoebe",
  "Pia",
  "Rahel",
  "Rania",
  "Rebecca",
  "Rebekka",
  "Riana",
  "Rieke",
  "Rike",
  "Romina",
  "Romy",
  "Ronja",
  "Rosa",
  "Rosalie",
  "Ruby",
  "Sabrina",
  "Sahra",
  "Sally",
  "Salome",
  "Samantha",
  "Samia",
  "Samira",
  "Sandra",
  "Sandy",
  "Sanja",
  "Saphira",
  "Sara",
  "Sarah",
  "Saskia",
  "Selin",
  "Selina",
  "Selma",
  "Sena",
  "Sidney",
  "Sienna",
  "Silja",
  "Sina",
  "Sinja",
  "Smilla",
  "Sofia",
  "Sofie",
  "Sonja",
  "Sophia",
  "Sophie",
  "Soraya",
  "Stefanie",
  "Stella",
  "Stephanie",
  "Stina",
  "Sude",
  "Summer",
  "Susanne",
  "Svea",
  "Svenja",
  "Sydney",
  "Tabea",
  "Talea",
  "Talia",
  "Tamara",
  "Tamia",
  "Tamina",
  "Tanja",
  "Tara",
  "Tarja",
  "Teresa",
  "Tessa",
  "Thalea",
  "Thalia",
  "Thea",
  "Theresa",
  "Tia",
  "Tina",
  "Tomke",
  "Tuana",
  "Valentina",
  "Valeria",
  "Valerie",
  "Vanessa",
  "Vera",
  "Veronika",
  "Victoria",
  "Viktoria",
  "Viola",
  "Vivian",
  "Vivien",
  "Vivienne",
  "Wibke",
  "Wiebke",
  "Xenia",
  "Yara",
  "Yaren",
  "Yasmin",
  "Ylvi",
  "Ylvie",
  "Yvonne",
  "Zara",
  "Zehra",
  "Zeynep",
  "Zoe",
  "Zoey",
  "Zoé"
];

},{}],77:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.nobility_title_prefix = require("./nobility_title_prefix");
name.name = require("./name");

},{"./first_name":76,"./last_name":78,"./name":79,"./nobility_title_prefix":80,"./prefix":81}],78:[function(require,module,exports){
module["exports"] = [
  "Abel",
  "Abicht",
  "Abraham",
  "Abramovic",
  "Abt",
  "Achilles",
  "Achkinadze",
  "Ackermann",
  "Adam",
  "Adams",
  "Ade",
  "Agostini",
  "Ahlke",
  "Ahrenberg",
  "Ahrens",
  "Aigner",
  "Albert",
  "Albrecht",
  "Alexa",
  "Alexander",
  "Alizadeh",
  "Allgeyer",
  "Amann",
  "Amberg",
  "Anding",
  "Anggreny",
  "Apitz",
  "Arendt",
  "Arens",
  "Arndt",
  "Aryee",
  "Aschenbroich",
  "Assmus",
  "Astafei",
  "Auer",
  "Axmann",
  "Baarck",
  "Bachmann",
  "Badane",
  "Bader",
  "Baganz",
  "Bahl",
  "Bak",
  "Balcer",
  "Balck",
  "Balkow",
  "Balnuweit",
  "Balzer",
  "Banse",
  "Barr",
  "Bartels",
  "Barth",
  "Barylla",
  "Baseda",
  "Battke",
  "Bauer",
  "Bauermeister",
  "Baumann",
  "Baumeister",
  "Bauschinger",
  "Bauschke",
  "Bayer",
  "Beavogui",
  "Beck",
  "Beckel",
  "Becker",
  "Beckmann",
  "Bedewitz",
  "Beele",
  "Beer",
  "Beggerow",
  "Beh",
  "Behr",
  "Behrenbruch",
  "Belz",
  "Bender",
  "Benecke",
  "Benner",
  "Benninger",
  "Benzing",
  "Berends",
  "Berger",
  "Berner",
  "Berning",
  "Bertenbreiter",
  "Best",
  "Bethke",
  "Betz",
  "Beushausen",
  "Beutelspacher",
  "Beyer",
  "Biba",
  "Bichler",
  "Bickel",
  "Biedermann",
  "Bieler",
  "Bielert",
  "Bienasch",
  "Bienias",
  "Biesenbach",
  "Bigdeli",
  "Birkemeyer",
  "Bittner",
  "Blank",
  "Blaschek",
  "Blassneck",
  "Bloch",
  "Blochwitz",
  "Blockhaus",
  "Blum",
  "Blume",
  "Bock",
  "Bode",
  "Bogdashin",
  "Bogenrieder",
  "Bohge",
  "Bolm",
  "Borgschulze",
  "Bork",
  "Bormann",
  "Bornscheuer",
  "Borrmann",
  "Borsch",
  "Boruschewski",
  "Bos",
  "Bosler",
  "Bourrouag",
  "Bouschen",
  "Boxhammer",
  "Boyde",
  "Bozsik",
  "Brand",
  "Brandenburg",
  "Brandis",
  "Brandt",
  "Brauer",
  "Braun",
  "Brehmer",
  "Breitenstein",
  "Bremer",
  "Bremser",
  "Brenner",
  "Brettschneider",
  "Breu",
  "Breuer",
  "Briesenick",
  "Bringmann",
  "Brinkmann",
  "Brix",
  "Broening",
  "Brosch",
  "Bruckmann",
  "Bruder",
  "Bruhns",
  "Brunner",
  "Bruns",
  "Bräutigam",
  "Brömme",
  "Brüggmann",
  "Buchholz",
  "Buchrucker",
  "Buder",
  "Bultmann",
  "Bunjes",
  "Burger",
  "Burghagen",
  "Burkhard",
  "Burkhardt",
  "Burmeister",
  "Busch",
  "Buschbaum",
  "Busemann",
  "Buss",
  "Busse",
  "Bussmann",
  "Byrd",
  "Bäcker",
  "Böhm",
  "Bönisch",
  "Börgeling",
  "Börner",
  "Böttner",
  "Büchele",
  "Bühler",
  "Büker",
  "Büngener",
  "Bürger",
  "Bürklein",
  "Büscher",
  "Büttner",
  "Camara",
  "Carlowitz",
  "Carlsohn",
  "Caspari",
  "Caspers",
  "Chapron",
  "Christ",
  "Cierpinski",
  "Clarius",
  "Cleem",
  "Cleve",
  "Co",
  "Conrad",
  "Cordes",
  "Cornelsen",
  "Cors",
  "Cotthardt",
  "Crews",
  "Cronjäger",
  "Crosskofp",
  "Da",
  "Dahm",
  "Dahmen",
  "Daimer",
  "Damaske",
  "Danneberg",
  "Danner",
  "Daub",
  "Daubner",
  "Daudrich",
  "Dauer",
  "Daum",
  "Dauth",
  "Dautzenberg",
  "De",
  "Decker",
  "Deckert",
  "Deerberg",
  "Dehmel",
  "Deja",
  "Delonge",
  "Demut",
  "Dengler",
  "Denner",
  "Denzinger",
  "Derr",
  "Dertmann",
  "Dethloff",
  "Deuschle",
  "Dieckmann",
  "Diedrich",
  "Diekmann",
  "Dienel",
  "Dies",
  "Dietrich",
  "Dietz",
  "Dietzsch",
  "Diezel",
  "Dilla",
  "Dingelstedt",
  "Dippl",
  "Dittmann",
  "Dittmar",
  "Dittmer",
  "Dix",
  "Dobbrunz",
  "Dobler",
  "Dohring",
  "Dolch",
  "Dold",
  "Dombrowski",
  "Donie",
  "Doskoczynski",
  "Dragu",
  "Drechsler",
  "Drees",
  "Dreher",
  "Dreier",
  "Dreissigacker",
  "Dressler",
  "Drews",
  "Duma",
  "Dutkiewicz",
  "Dyett",
  "Dylus",
  "Dächert",
  "Döbel",
  "Döring",
  "Dörner",
  "Dörre",
  "Dück",
  "Eberhard",
  "Eberhardt",
  "Ecker",
  "Eckhardt",
  "Edorh",
  "Effler",
  "Eggenmueller",
  "Ehm",
  "Ehmann",
  "Ehrig",
  "Eich",
  "Eichmann",
  "Eifert",
  "Einert",
  "Eisenlauer",
  "Ekpo",
  "Elbe",
  "Eleyth",
  "Elss",
  "Emert",
  "Emmelmann",
  "Ender",
  "Engel",
  "Engelen",
  "Engelmann",
  "Eplinius",
  "Erdmann",
  "Erhardt",
  "Erlei",
  "Erm",
  "Ernst",
  "Ertl",
  "Erwes",
  "Esenwein",
  "Esser",
  "Evers",
  "Everts",
  "Ewald",
  "Fahner",
  "Faller",
  "Falter",
  "Farber",
  "Fassbender",
  "Faulhaber",
  "Fehrig",
  "Feld",
  "Felke",
  "Feller",
  "Fenner",
  "Fenske",
  "Feuerbach",
  "Fietz",
  "Figl",
  "Figura",
  "Filipowski",
  "Filsinger",
  "Fincke",
  "Fink",
  "Finke",
  "Fischer",
  "Fitschen",
  "Fleischer",
  "Fleischmann",
  "Floder",
  "Florczak",
  "Flore",
  "Flottmann",
  "Forkel",
  "Forst",
  "Frahmeke",
  "Frank",
  "Franke",
  "Franta",
  "Frantz",
  "Franz",
  "Franzis",
  "Franzmann",
  "Frauen",
  "Frauendorf",
  "Freigang",
  "Freimann",
  "Freimuth",
  "Freisen",
  "Frenzel",
  "Frey",
  "Fricke",
  "Fried",
  "Friedek",
  "Friedenberg",
  "Friedmann",
  "Friedrich",
  "Friess",
  "Frisch",
  "Frohn",
  "Frosch",
  "Fuchs",
  "Fuhlbrügge",
  "Fusenig",
  "Fust",
  "Förster",
  "Gaba",
  "Gabius",
  "Gabler",
  "Gadschiew",
  "Gakstädter",
  "Galander",
  "Gamlin",
  "Gamper",
  "Gangnus",
  "Ganzmann",
  "Garatva",
  "Gast",
  "Gastel",
  "Gatzka",
  "Gauder",
  "Gebhardt",
  "Geese",
  "Gehre",
  "Gehrig",
  "Gehring",
  "Gehrke",
  "Geiger",
  "Geisler",
  "Geissler",
  "Gelling",
  "Gens",
  "Gerbennow",
  "Gerdel",
  "Gerhardt",
  "Gerschler",
  "Gerson",
  "Gesell",
  "Geyer",
  "Ghirmai",
  "Ghosh",
  "Giehl",
  "Gierisch",
  "Giesa",
  "Giesche",
  "Gilde",
  "Glatting",
  "Goebel",
  "Goedicke",
  "Goldbeck",
  "Goldfuss",
  "Goldkamp",
  "Goldkühle",
  "Goller",
  "Golling",
  "Gollnow",
  "Golomski",
  "Gombert",
  "Gotthardt",
  "Gottschalk",
  "Gotz",
  "Goy",
  "Gradzki",
  "Graf",
  "Grams",
  "Grasse",
  "Gratzky",
  "Grau",
  "Greb",
  "Green",
  "Greger",
  "Greithanner",
  "Greschner",
  "Griem",
  "Griese",
  "Grimm",
  "Gromisch",
  "Gross",
  "Grosser",
  "Grossheim",
  "Grosskopf",
  "Grothaus",
  "Grothkopp",
  "Grotke",
  "Grube",
  "Gruber",
  "Grundmann",
  "Gruning",
  "Gruszecki",
  "Gröss",
  "Grötzinger",
  "Grün",
  "Grüner",
  "Gummelt",
  "Gunkel",
  "Gunther",
  "Gutjahr",
  "Gutowicz",
  "Gutschank",
  "Göbel",
  "Göckeritz",
  "Göhler",
  "Görlich",
  "Görmer",
  "Götz",
  "Götzelmann",
  "Güldemeister",
  "Günther",
  "Günz",
  "Gürbig",
  "Haack",
  "Haaf",
  "Habel",
  "Hache",
  "Hackbusch",
  "Hackelbusch",
  "Hadfield",
  "Hadwich",
  "Haferkamp",
  "Hahn",
  "Hajek",
  "Hallmann",
  "Hamann",
  "Hanenberger",
  "Hannecker",
  "Hanniske",
  "Hansen",
  "Hardy",
  "Hargasser",
  "Harms",
  "Harnapp",
  "Harter",
  "Harting",
  "Hartlieb",
  "Hartmann",
  "Hartwig",
  "Hartz",
  "Haschke",
  "Hasler",
  "Hasse",
  "Hassfeld",
  "Haug",
  "Hauke",
  "Haupt",
  "Haverney",
  "Heberstreit",
  "Hechler",
  "Hecht",
  "Heck",
  "Hedermann",
  "Hehl",
  "Heidelmann",
  "Heidler",
  "Heinemann",
  "Heinig",
  "Heinke",
  "Heinrich",
  "Heinze",
  "Heiser",
  "Heist",
  "Hellmann",
  "Helm",
  "Helmke",
  "Helpling",
  "Hengmith",
  "Henkel",
  "Hennes",
  "Henry",
  "Hense",
  "Hensel",
  "Hentel",
  "Hentschel",
  "Hentschke",
  "Hepperle",
  "Herberger",
  "Herbrand",
  "Hering",
  "Hermann",
  "Hermecke",
  "Herms",
  "Herold",
  "Herrmann",
  "Herschmann",
  "Hertel",
  "Herweg",
  "Herwig",
  "Herzenberg",
  "Hess",
  "Hesse",
  "Hessek",
  "Hessler",
  "Hetzler",
  "Heuck",
  "Heydemüller",
  "Hiebl",
  "Hildebrand",
  "Hildenbrand",
  "Hilgendorf",
  "Hillard",
  "Hiller",
  "Hingsen",
  "Hingst",
  "Hinrichs",
  "Hirsch",
  "Hirschberg",
  "Hirt",
  "Hodea",
  "Hoffman",
  "Hoffmann",
  "Hofmann",
  "Hohenberger",
  "Hohl",
  "Hohn",
  "Hohnheiser",
  "Hold",
  "Holdt",
  "Holinski",
  "Holl",
  "Holtfreter",
  "Holz",
  "Holzdeppe",
  "Holzner",
  "Hommel",
  "Honz",
  "Hooss",
  "Hoppe",
  "Horak",
  "Horn",
  "Horna",
  "Hornung",
  "Hort",
  "Howard",
  "Huber",
  "Huckestein",
  "Hudak",
  "Huebel",
  "Hugo",
  "Huhn",
  "Hujo",
  "Huke",
  "Huls",
  "Humbert",
  "Huneke",
  "Huth",
  "Häber",
  "Häfner",
  "Höcke",
  "Höft",
  "Höhne",
  "Hönig",
  "Hördt",
  "Hübenbecker",
  "Hübl",
  "Hübner",
  "Hügel",
  "Hüttcher",
  "Hütter",
  "Ibe",
  "Ihly",
  "Illing",
  "Isak",
  "Isekenmeier",
  "Itt",
  "Jacob",
  "Jacobs",
  "Jagusch",
  "Jahn",
  "Jahnke",
  "Jakobs",
  "Jakubczyk",
  "Jambor",
  "Jamrozy",
  "Jander",
  "Janich",
  "Janke",
  "Jansen",
  "Jarets",
  "Jaros",
  "Jasinski",
  "Jasper",
  "Jegorov",
  "Jellinghaus",
  "Jeorga",
  "Jerschabek",
  "Jess",
  "John",
  "Jonas",
  "Jossa",
  "Jucken",
  "Jung",
  "Jungbluth",
  "Jungton",
  "Just",
  "Jürgens",
  "Kaczmarek",
  "Kaesmacher",
  "Kahl",
  "Kahlert",
  "Kahles",
  "Kahlmeyer",
  "Kaiser",
  "Kalinowski",
  "Kallabis",
  "Kallensee",
  "Kampf",
  "Kampschulte",
  "Kappe",
  "Kappler",
  "Karhoff",
  "Karrass",
  "Karst",
  "Karsten",
  "Karus",
  "Kass",
  "Kasten",
  "Kastner",
  "Katzinski",
  "Kaufmann",
  "Kaul",
  "Kausemann",
  "Kawohl",
  "Kazmarek",
  "Kedzierski",
  "Keil",
  "Keiner",
  "Keller",
  "Kelm",
  "Kempe",
  "Kemper",
  "Kempter",
  "Kerl",
  "Kern",
  "Kesselring",
  "Kesselschläger",
  "Kette",
  "Kettenis",
  "Keutel",
  "Kick",
  "Kiessling",
  "Kinadeter",
  "Kinzel",
  "Kinzy",
  "Kirch",
  "Kirst",
  "Kisabaka",
  "Klaas",
  "Klabuhn",
  "Klapper",
  "Klauder",
  "Klaus",
  "Kleeberg",
  "Kleiber",
  "Klein",
  "Kleinert",
  "Kleininger",
  "Kleinmann",
  "Kleinsteuber",
  "Kleiss",
  "Klemme",
  "Klimczak",
  "Klinger",
  "Klink",
  "Klopsch",
  "Klose",
  "Kloss",
  "Kluge",
  "Kluwe",
  "Knabe",
  "Kneifel",
  "Knetsch",
  "Knies",
  "Knippel",
  "Knobel",
  "Knoblich",
  "Knoll",
  "Knorr",
  "Knorscheidt",
  "Knut",
  "Kobs",
  "Koch",
  "Kochan",
  "Kock",
  "Koczulla",
  "Koderisch",
  "Koehl",
  "Koehler",
  "Koenig",
  "Koester",
  "Kofferschlager",
  "Koha",
  "Kohle",
  "Kohlmann",
  "Kohnle",
  "Kohrt",
  "Koj",
  "Kolb",
  "Koleiski",
  "Kolokas",
  "Komoll",
  "Konieczny",
  "Konig",
  "Konow",
  "Konya",
  "Koob",
  "Kopf",
  "Kosenkow",
  "Koster",
  "Koszewski",
  "Koubaa",
  "Kovacs",
  "Kowalick",
  "Kowalinski",
  "Kozakiewicz",
  "Krabbe",
  "Kraft",
  "Kral",
  "Kramer",
  "Krauel",
  "Kraus",
  "Krause",
  "Krauspe",
  "Kreb",
  "Krebs",
  "Kreissig",
  "Kresse",
  "Kreutz",
  "Krieger",
  "Krippner",
  "Krodinger",
  "Krohn",
  "Krol",
  "Kron",
  "Krueger",
  "Krug",
  "Kruger",
  "Krull",
  "Kruschinski",
  "Krämer",
  "Kröckert",
  "Kröger",
  "Krüger",
  "Kubera",
  "Kufahl",
  "Kuhlee",
  "Kuhnen",
  "Kulimann",
  "Kulma",
  "Kumbernuss",
  "Kummle",
  "Kunz",
  "Kupfer",
  "Kupprion",
  "Kuprion",
  "Kurnicki",
  "Kurrat",
  "Kurschilgen",
  "Kuschewitz",
  "Kuschmann",
  "Kuske",
  "Kustermann",
  "Kutscherauer",
  "Kutzner",
  "Kwadwo",
  "Kähler",
  "Käther",
  "Köhler",
  "Köhrbrück",
  "Köhre",
  "Kölotzei",
  "König",
  "Köpernick",
  "Köseoglu",
  "Kúhn",
  "Kúhnert",
  "Kühn",
  "Kühnel",
  "Kühnemund",
  "Kühnert",
  "Kühnke",
  "Küsters",
  "Küter",
  "Laack",
  "Lack",
  "Ladewig",
  "Lakomy",
  "Lammert",
  "Lamos",
  "Landmann",
  "Lang",
  "Lange",
  "Langfeld",
  "Langhirt",
  "Lanig",
  "Lauckner",
  "Lauinger",
  "Laurén",
  "Lausecker",
  "Laux",
  "Laws",
  "Lax",
  "Leberer",
  "Lehmann",
  "Lehner",
  "Leibold",
  "Leide",
  "Leimbach",
  "Leipold",
  "Leist",
  "Leiter",
  "Leiteritz",
  "Leitheim",
  "Leiwesmeier",
  "Lenfers",
  "Lenk",
  "Lenz",
  "Lenzen",
  "Leo",
  "Lepthin",
  "Lesch",
  "Leschnik",
  "Letzelter",
  "Lewin",
  "Lewke",
  "Leyckes",
  "Lg",
  "Lichtenfeld",
  "Lichtenhagen",
  "Lichtl",
  "Liebach",
  "Liebe",
  "Liebich",
  "Liebold",
  "Lieder",
  "Lienshöft",
  "Linden",
  "Lindenberg",
  "Lindenmayer",
  "Lindner",
  "Linke",
  "Linnenbaum",
  "Lippe",
  "Lipske",
  "Lipus",
  "Lischka",
  "Lobinger",
  "Logsch",
  "Lohmann",
  "Lohre",
  "Lohse",
  "Lokar",
  "Loogen",
  "Lorenz",
  "Losch",
  "Loska",
  "Lott",
  "Loy",
  "Lubina",
  "Ludolf",
  "Lufft",
  "Lukoschek",
  "Lutje",
  "Lutz",
  "Löser",
  "Löwa",
  "Lübke",
  "Maak",
  "Maczey",
  "Madetzky",
  "Madubuko",
  "Mai",
  "Maier",
  "Maisch",
  "Malek",
  "Malkus",
  "Mallmann",
  "Malucha",
  "Manns",
  "Manz",
  "Marahrens",
  "Marchewski",
  "Margis",
  "Markowski",
  "Marl",
  "Marner",
  "Marquart",
  "Marschek",
  "Martel",
  "Marten",
  "Martin",
  "Marx",
  "Marxen",
  "Mathes",
  "Mathies",
  "Mathiszik",
  "Matschke",
  "Mattern",
  "Matthes",
  "Matula",
  "Mau",
  "Maurer",
  "Mauroff",
  "May",
  "Maybach",
  "Mayer",
  "Mebold",
  "Mehl",
  "Mehlhorn",
  "Mehlorn",
  "Meier",
  "Meisch",
  "Meissner",
  "Meloni",
  "Melzer",
  "Menga",
  "Menne",
  "Mensah",
  "Mensing",
  "Merkel",
  "Merseburg",
  "Mertens",
  "Mesloh",
  "Metzger",
  "Metzner",
  "Mewes",
  "Meyer",
  "Michallek",
  "Michel",
  "Mielke",
  "Mikitenko",
  "Milde",
  "Minah",
  "Mintzlaff",
  "Mockenhaupt",
  "Moede",
  "Moedl",
  "Moeller",
  "Moguenara",
  "Mohr",
  "Mohrhard",
  "Molitor",
  "Moll",
  "Moller",
  "Molzan",
  "Montag",
  "Moormann",
  "Mordhorst",
  "Morgenstern",
  "Morhelfer",
  "Moritz",
  "Moser",
  "Motchebon",
  "Motzenbbäcker",
  "Mrugalla",
  "Muckenthaler",
  "Mues",
  "Muller",
  "Mulrain",
  "Mächtig",
  "Mäder",
  "Möcks",
  "Mögenburg",
  "Möhsner",
  "Möldner",
  "Möllenbeck",
  "Möller",
  "Möllinger",
  "Mörsch",
  "Mühleis",
  "Müller",
  "Münch",
  "Nabein",
  "Nabow",
  "Nagel",
  "Nannen",
  "Nastvogel",
  "Nau",
  "Naubert",
  "Naumann",
  "Ne",
  "Neimke",
  "Nerius",
  "Neubauer",
  "Neubert",
  "Neuendorf",
  "Neumair",
  "Neumann",
  "Neupert",
  "Neurohr",
  "Neuschwander",
  "Newton",
  "Ney",
  "Nicolay",
  "Niedermeier",
  "Nieklauson",
  "Niklaus",
  "Nitzsche",
  "Noack",
  "Nodler",
  "Nolte",
  "Normann",
  "Norris",
  "Northoff",
  "Nowak",
  "Nussbeck",
  "Nwachukwu",
  "Nytra",
  "Nöh",
  "Oberem",
  "Obergföll",
  "Obermaier",
  "Ochs",
  "Oeser",
  "Olbrich",
  "Onnen",
  "Ophey",
  "Oppong",
  "Orth",
  "Orthmann",
  "Oschkenat",
  "Osei",
  "Osenberg",
  "Ostendarp",
  "Ostwald",
  "Otte",
  "Otto",
  "Paesler",
  "Pajonk",
  "Pallentin",
  "Panzig",
  "Paschke",
  "Patzwahl",
  "Paukner",
  "Peselman",
  "Peter",
  "Peters",
  "Petzold",
  "Pfeiffer",
  "Pfennig",
  "Pfersich",
  "Pfingsten",
  "Pflieger",
  "Pflügner",
  "Philipp",
  "Pichlmaier",
  "Piesker",
  "Pietsch",
  "Pingpank",
  "Pinnock",
  "Pippig",
  "Pitschugin",
  "Plank",
  "Plass",
  "Platzer",
  "Plauk",
  "Plautz",
  "Pletsch",
  "Plotzitzka",
  "Poehn",
  "Poeschl",
  "Pogorzelski",
  "Pohl",
  "Pohland",
  "Pohle",
  "Polifka",
  "Polizzi",
  "Pollmächer",
  "Pomp",
  "Ponitzsch",
  "Porsche",
  "Porth",
  "Poschmann",
  "Poser",
  "Pottel",
  "Prah",
  "Prange",
  "Prediger",
  "Pressler",
  "Preuk",
  "Preuss",
  "Prey",
  "Priemer",
  "Proske",
  "Pusch",
  "Pöche",
  "Pöge",
  "Raabe",
  "Rabenstein",
  "Rach",
  "Radtke",
  "Rahn",
  "Ranftl",
  "Rangen",
  "Ranz",
  "Rapp",
  "Rath",
  "Rau",
  "Raubuch",
  "Raukuc",
  "Rautenkranz",
  "Rehwagen",
  "Reiber",
  "Reichardt",
  "Reichel",
  "Reichling",
  "Reif",
  "Reifenrath",
  "Reimann",
  "Reinberg",
  "Reinelt",
  "Reinhardt",
  "Reinke",
  "Reitze",
  "Renk",
  "Rentz",
  "Renz",
  "Reppin",
  "Restle",
  "Restorff",
  "Retzke",
  "Reuber",
  "Reumann",
  "Reus",
  "Reuss",
  "Reusse",
  "Rheder",
  "Rhoden",
  "Richards",
  "Richter",
  "Riedel",
  "Riediger",
  "Rieger",
  "Riekmann",
  "Riepl",
  "Riermeier",
  "Riester",
  "Riethmüller",
  "Rietmüller",
  "Rietscher",
  "Ringel",
  "Ringer",
  "Rink",
  "Ripken",
  "Ritosek",
  "Ritschel",
  "Ritter",
  "Rittweg",
  "Ritz",
  "Roba",
  "Rockmeier",
  "Rodehau",
  "Rodowski",
  "Roecker",
  "Roggatz",
  "Rohländer",
  "Rohrer",
  "Rokossa",
  "Roleder",
  "Roloff",
  "Roos",
  "Rosbach",
  "Roschinsky",
  "Rose",
  "Rosenauer",
  "Rosenbauer",
  "Rosenthal",
  "Rosksch",
  "Rossberg",
  "Rossler",
  "Roth",
  "Rother",
  "Ruch",
  "Ruckdeschel",
  "Rumpf",
  "Rupprecht",
  "Ruth",
  "Ryjikh",
  "Ryzih",
  "Rädler",
  "Räntsch",
  "Rödiger",
  "Röse",
  "Röttger",
  "Rücker",
  "Rüdiger",
  "Rüter",
  "Sachse",
  "Sack",
  "Saflanis",
  "Sagafe",
  "Sagonas",
  "Sahner",
  "Saile",
  "Sailer",
  "Salow",
  "Salzer",
  "Salzmann",
  "Sammert",
  "Sander",
  "Sarvari",
  "Sattelmaier",
  "Sauer",
  "Sauerland",
  "Saumweber",
  "Savoia",
  "Scc",
  "Schacht",
  "Schaefer",
  "Schaffarzik",
  "Schahbasian",
  "Scharf",
  "Schedler",
  "Scheer",
  "Schelk",
  "Schellenbeck",
  "Schembera",
  "Schenk",
  "Scherbarth",
  "Scherer",
  "Schersing",
  "Scherz",
  "Scheurer",
  "Scheuring",
  "Scheytt",
  "Schielke",
  "Schieskow",
  "Schildhauer",
  "Schilling",
  "Schima",
  "Schimmer",
  "Schindzielorz",
  "Schirmer",
  "Schirrmeister",
  "Schlachter",
  "Schlangen",
  "Schlawitz",
  "Schlechtweg",
  "Schley",
  "Schlicht",
  "Schlitzer",
  "Schmalzle",
  "Schmid",
  "Schmidt",
  "Schmidtchen",
  "Schmitt",
  "Schmitz",
  "Schmuhl",
  "Schneider",
  "Schnelting",
  "Schnieder",
  "Schniedermeier",
  "Schnürer",
  "Schoberg",
  "Scholz",
  "Schonberg",
  "Schondelmaier",
  "Schorr",
  "Schott",
  "Schottmann",
  "Schouren",
  "Schrader",
  "Schramm",
  "Schreck",
  "Schreiber",
  "Schreiner",
  "Schreiter",
  "Schroder",
  "Schröder",
  "Schuermann",
  "Schuff",
  "Schuhaj",
  "Schuldt",
  "Schult",
  "Schulte",
  "Schultz",
  "Schultze",
  "Schulz",
  "Schulze",
  "Schumacher",
  "Schumann",
  "Schupp",
  "Schuri",
  "Schuster",
  "Schwab",
  "Schwalm",
  "Schwanbeck",
  "Schwandke",
  "Schwanitz",
  "Schwarthoff",
  "Schwartz",
  "Schwarz",
  "Schwarzer",
  "Schwarzkopf",
  "Schwarzmeier",
  "Schwatlo",
  "Schweisfurth",
  "Schwennen",
  "Schwerdtner",
  "Schwidde",
  "Schwirkschlies",
  "Schwuchow",
  "Schäfer",
  "Schäffel",
  "Schäffer",
  "Schäning",
  "Schöckel",
  "Schönball",
  "Schönbeck",
  "Schönberg",
  "Schönebeck",
  "Schönenberger",
  "Schönfeld",
  "Schönherr",
  "Schönlebe",
  "Schötz",
  "Schüler",
  "Schüppel",
  "Schütz",
  "Schütze",
  "Seeger",
  "Seelig",
  "Sehls",
  "Seibold",
  "Seidel",
  "Seiders",
  "Seigel",
  "Seiler",
  "Seitz",
  "Semisch",
  "Senkel",
  "Sewald",
  "Siebel",
  "Siebert",
  "Siegling",
  "Sielemann",
  "Siemon",
  "Siener",
  "Sievers",
  "Siewert",
  "Sihler",
  "Sillah",
  "Simon",
  "Sinnhuber",
  "Sischka",
  "Skibicki",
  "Sladek",
  "Slotta",
  "Smieja",
  "Soboll",
  "Sokolowski",
  "Soller",
  "Sollner",
  "Sommer",
  "Somssich",
  "Sonn",
  "Sonnabend",
  "Spahn",
  "Spank",
  "Spelmeyer",
  "Spiegelburg",
  "Spielvogel",
  "Spinner",
  "Spitzmüller",
  "Splinter",
  "Sporrer",
  "Sprenger",
  "Spöttel",
  "Stahl",
  "Stang",
  "Stanger",
  "Stauss",
  "Steding",
  "Steffen",
  "Steffny",
  "Steidl",
  "Steigauf",
  "Stein",
  "Steinecke",
  "Steinert",
  "Steinkamp",
  "Steinmetz",
  "Stelkens",
  "Stengel",
  "Stengl",
  "Stenzel",
  "Stepanov",
  "Stephan",
  "Stern",
  "Steuk",
  "Stief",
  "Stifel",
  "Stoll",
  "Stolle",
  "Stolz",
  "Storl",
  "Storp",
  "Stoutjesdijk",
  "Stratmann",
  "Straub",
  "Strausa",
  "Streck",
  "Streese",
  "Strege",
  "Streit",
  "Streller",
  "Strieder",
  "Striezel",
  "Strogies",
  "Strohschank",
  "Strunz",
  "Strutz",
  "Stube",
  "Stöckert",
  "Stöppler",
  "Stöwer",
  "Stürmer",
  "Suffa",
  "Sujew",
  "Sussmann",
  "Suthe",
  "Sutschet",
  "Swillims",
  "Szendrei",
  "Sören",
  "Sürth",
  "Tafelmeier",
  "Tang",
  "Tasche",
  "Taufratshofer",
  "Tegethof",
  "Teichmann",
  "Tepper",
  "Terheiden",
  "Terlecki",
  "Teufel",
  "Theele",
  "Thieke",
  "Thimm",
  "Thiomas",
  "Thomas",
  "Thriene",
  "Thränhardt",
  "Thust",
  "Thyssen",
  "Thöne",
  "Tidow",
  "Tiedtke",
  "Tietze",
  "Tilgner",
  "Tillack",
  "Timmermann",
  "Tischler",
  "Tischmann",
  "Tittman",
  "Tivontschik",
  "Tonat",
  "Tonn",
  "Trampeli",
  "Trauth",
  "Trautmann",
  "Travan",
  "Treff",
  "Tremmel",
  "Tress",
  "Tsamonikian",
  "Tschiers",
  "Tschirch",
  "Tuch",
  "Tucholke",
  "Tudow",
  "Tuschmo",
  "Tächl",
  "Többen",
  "Töpfer",
  "Uhlemann",
  "Uhlig",
  "Uhrig",
  "Uibel",
  "Uliczka",
  "Ullmann",
  "Ullrich",
  "Umbach",
  "Umlauft",
  "Umminger",
  "Unger",
  "Unterpaintner",
  "Urban",
  "Urbaniak",
  "Urbansky",
  "Urhig",
  "Vahlensieck",
  "Van",
  "Vangermain",
  "Vater",
  "Venghaus",
  "Verniest",
  "Verzi",
  "Vey",
  "Viellehner",
  "Vieweg",
  "Voelkel",
  "Vogel",
  "Vogelgsang",
  "Vogt",
  "Voigt",
  "Vokuhl",
  "Volk",
  "Volker",
  "Volkmann",
  "Von",
  "Vona",
  "Vontein",
  "Wachenbrunner",
  "Wachtel",
  "Wagner",
  "Waibel",
  "Wakan",
  "Waldmann",
  "Wallner",
  "Wallstab",
  "Walter",
  "Walther",
  "Walton",
  "Walz",
  "Wanner",
  "Wartenberg",
  "Waschbüsch",
  "Wassilew",
  "Wassiluk",
  "Weber",
  "Wehrsen",
  "Weidlich",
  "Weidner",
  "Weigel",
  "Weight",
  "Weiler",
  "Weimer",
  "Weis",
  "Weiss",
  "Weller",
  "Welsch",
  "Welz",
  "Welzel",
  "Weniger",
  "Wenk",
  "Werle",
  "Werner",
  "Werrmann",
  "Wessel",
  "Wessinghage",
  "Weyel",
  "Wezel",
  "Wichmann",
  "Wickert",
  "Wiebe",
  "Wiechmann",
  "Wiegelmann",
  "Wierig",
  "Wiese",
  "Wieser",
  "Wilhelm",
  "Wilky",
  "Will",
  "Willwacher",
  "Wilts",
  "Wimmer",
  "Winkelmann",
  "Winkler",
  "Winter",
  "Wischek",
  "Wischer",
  "Wissing",
  "Wittich",
  "Wittl",
  "Wolf",
  "Wolfarth",
  "Wolff",
  "Wollenberg",
  "Wollmann",
  "Woytkowska",
  "Wujak",
  "Wurm",
  "Wyludda",
  "Wölpert",
  "Wöschler",
  "Wühn",
  "Wünsche",
  "Zach",
  "Zaczkiewicz",
  "Zahn",
  "Zaituc",
  "Zandt",
  "Zanner",
  "Zapletal",
  "Zauber",
  "Zeidler",
  "Zekl",
  "Zender",
  "Zeuch",
  "Zeyen",
  "Zeyhle",
  "Ziegler",
  "Zimanyi",
  "Zimmer",
  "Zimmermann",
  "Zinser",
  "Zintl",
  "Zipp",
  "Zipse",
  "Zschunke",
  "Zuber",
  "Zwiener",
  "Zümsande",
  "Östringer",
  "Überacker"
];

},{}],79:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name}",
  "#{first_name} #{nobility_title_prefix} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}"
];

},{}],80:[function(require,module,exports){
module["exports"] = [
  "zu",
  "von",
  "vom",
  "von der"
];

},{}],81:[function(require,module,exports){
module["exports"] = [
  "Hr.",
  "Fr.",
  "Dr.",
  "Prof. Dr."
];

},{}],82:[function(require,module,exports){
module["exports"] = [
  "(0###) #########",
  "(0####) #######",
  "+49-###-#######",
  "+49-####-########"
];

},{}],83:[function(require,module,exports){
var phone_number = {};
module['exports'] = phone_number;
phone_number.formats = require("./formats");

},{"./formats":82}],84:[function(require,module,exports){
arguments[4][50][0].apply(exports,arguments)
},{"dup":50}],85:[function(require,module,exports){
module["exports"] = [
  "#{city_name}"
];

},{}],86:[function(require,module,exports){
module["exports"] = [
  "Aigen im Mühlkreis",
  "Allerheiligen bei Wildon",
  "Altenfelden",
  "Arriach",
  "Axams",
  "Baumgartenberg",
  "Bergern im Dunkelsteinerwald",
  "Berndorf bei Salzburg",
  "Bregenz",
  "Breitenbach am Inn",
  "Deutsch-Wagram",
  "Dienten am Hochkönig",
  "Dietach",
  "Dornbirn",
  "Dürnkrut",
  "Eben im Pongau",
  "Ebenthal in Kärnten",
  "Eichgraben",
  "Eisenstadt",
  "Ellmau",
  "Feistritz am Wechsel",
  "Finkenberg",
  "Fiss",
  "Frantschach-St. Gertraud",
  "Fritzens",
  "Gams bei Hieflau",
  "Geiersberg",
  "Graz",
  "Großhöflein",
  "Gößnitz",
  "Hartl",
  "Hausleiten",
  "Herzogenburg",
  "Hinterhornbach",
  "Hochwolkersdorf",
  "Ilz",
  "Ilztal",
  "Innerbraz",
  "Innsbruck",
  "Itter",
  "Jagerberg",
  "Jeging",
  "Johnsbach",
  "Johnsdorf-Brunn",
  "Jungholz",
  "Kirchdorf am Inn",
  "Klagenfurt",
  "Kottes-Purk",
  "Krumau am Kamp",
  "Krumbach",
  "Lavamünd",
  "Lech",
  "Linz",
  "Ludesch",
  "Lödersdorf",
  "Marbach an der Donau",
  "Mattsee",
  "Mautern an der Donau",
  "Mauterndorf",
  "Mitterbach am Erlaufsee",
  "Neudorf bei Passail",
  "Neudorf bei Staatz",
  "Neukirchen an der Enknach",
  "Neustift an der Lafnitz",
  "Niederleis",
  "Oberndorf in Tirol",
  "Oberstorcha",
  "Oberwaltersdorf",
  "Oed-Oehling",
  "Ort im Innkreis",
  "Pilgersdorf",
  "Pitschgau",
  "Pollham",
  "Preitenegg",
  "Purbach am Neusiedler See",
  "Rabenwald",
  "Raiding",
  "Rastenfeld",
  "Ratten",
  "Rettenegg",
  "Salzburg",
  "Sankt Johann im Saggautal",
  "St. Peter am Kammersberg",
  "St. Pölten",
  "St. Veit an der Glan",
  "Taxenbach",
  "Tragwein",
  "Trebesing",
  "Trieben",
  "Turnau",
  "Ungerdorf",
  "Unterauersbach",
  "Unterstinkenbrunn",
  "Untertilliach",
  "Uttendorf",
  "Vals",
  "Velden am Wörther See",
  "Viehhofen",
  "Villach",
  "Vitis",
  "Waidhofen an der Thaya",
  "Waldkirchen am Wesen",
  "Weißkirchen an der Traun",
  "Wien",
  "Wimpassing im Schwarzatale",
  "Ybbs an der Donau",
  "Ybbsitz",
  "Yspertal",
  "Zeillern",
  "Zell am Pettenfirst",
  "Zell an der Pram",
  "Zerlach",
  "Zwölfaxing",
  "Öblarn",
  "Übelbach",
  "Überackern",
  "Übersaxen",
  "Übersbach"
];

},{}],87:[function(require,module,exports){
arguments[4][54][0].apply(exports,arguments)
},{"dup":54}],88:[function(require,module,exports){
module["exports"] = [
  "Österreich"
];

},{}],89:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.country = require("./country");
address.street_root = require("./street_root");
address.building_number = require("./building_number");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city_name = require("./city_name");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":84,"./city":85,"./city_name":86,"./country":87,"./default_country":88,"./postcode":90,"./secondary_address":91,"./state":92,"./state_abbr":93,"./street_address":94,"./street_name":95,"./street_root":96}],90:[function(require,module,exports){
module["exports"] = [
  "####"
];

},{}],91:[function(require,module,exports){
arguments[4][58][0].apply(exports,arguments)
},{"dup":58}],92:[function(require,module,exports){
module["exports"] = [
  "Burgenland",
  "Kärnten",
  "Niederösterreich",
  "Oberösterreich",
  "Salzburg",
  "Steiermark",
  "Tirol",
  "Vorarlberg",
  "Wien"
];

},{}],93:[function(require,module,exports){
module["exports"] = [
  "Bgld.",
  "Ktn.",
  "NÖ",
  "OÖ",
  "Sbg.",
  "Stmk.",
  "T",
  "Vbg.",
  "W"
];

},{}],94:[function(require,module,exports){
arguments[4][61][0].apply(exports,arguments)
},{"dup":61}],95:[function(require,module,exports){
arguments[4][62][0].apply(exports,arguments)
},{"dup":62}],96:[function(require,module,exports){
module["exports"] = [
  "Ahorn",
  "Ahorngasse (St. Andrä)",
  "Alleestraße (Poysbrunn)",
  "Alpenlandstraße",
  "Alte Poststraße",
  "Alte Ufergasse",
  "Am Kronawett (Hagenbrunn)",
  "Am Mühlwasser",
  "Am Rebenhang",
  "Am Sternweg",
  "Anton Wildgans-Straße",
  "Auer-von-Welsbach-Weg",
  "Auf der Stift",
  "Aufeldgasse",
  "Bahngasse",
  "Bahnhofstraße",
  "Bahnstraße (Gerhaus)",
  "Basteigasse",
  "Berggasse",
  "Bergstraße",
  "Birkenweg",
  "Blasiussteig",
  "Blattur",
  "Bruderhofgasse",
  "Brunnelligasse",
  "Bühelweg",
  "Darnautgasse",
  "Donaugasse",
  "Dorfplatz (Haselbach)",
  "Dr.-Oberreiter-Straße",
  "Dr.Karl Holoubek-Str.",
  "Drautal Bundesstraße",
  "Dürnrohrer Straße",
  "Ebenthalerstraße",
  "Eckgrabenweg",
  "Erlenstraße",
  "Erlenweg",
  "Eschenweg",
  "Etrichgasse",
  "Fassergasse",
  "Feichteggerwiese",
  "Feld-Weg",
  "Feldgasse",
  "Feldstapfe",
  "Fischpointweg",
  "Flachbergstraße",
  "Flurweg",
  "Franz Schubert-Gasse",
  "Franz-Schneeweiß-Weg",
  "Franz-von-Assisi-Straße",
  "Fritz-Pregl-Straße",
  "Fuchsgrubenweg",
  "Födlerweg",
  "Föhrenweg",
  "Fünfhaus (Paasdorf)",
  "Gabelsbergerstraße",
  "Gartenstraße",
  "Geigen",
  "Geigergasse",
  "Gemeindeaugasse",
  "Gemeindeplatz",
  "Georg-Aichinger-Straße",
  "Glanfeldbachweg",
  "Graben (Burgauberg)",
  "Grub",
  "Gröretgasse",
  "Grünbach",
  "Gösting",
  "Hainschwang",
  "Hans-Mauracher-Straße",
  "Hart",
  "Teichstraße",
  "Hauptplatz",
  "Hauptstraße",
  "Heideweg",
  "Heinrich Landauer Gasse",
  "Helenengasse",
  "Hermann von Gilmweg",
  "Hermann-Löns-Gasse",
  "Herminengasse",
  "Hernstorferstraße",
  "Hirsdorf",
  "Hochfeistritz",
  "Hochhaus Neue Donau",
  "Hof",
  "Hussovits Gasse",
  "Höggen",
  "Hütten",
  "Janzgasse",
  "Jochriemgutstraße",
  "Johann-Strauß-Gasse",
  "Julius-Raab-Straße",
  "Kahlenberger Straße",
  "Karl Kraft-Straße",
  "Kegelprielstraße",
  "Keltenberg-Eponaweg",
  "Kennedybrücke",
  "Kerpelystraße",
  "Kindergartenstraße",
  "Kinderheimgasse",
  "Kirchenplatz",
  "Kirchweg",
  "Klagenfurter Straße",
  "Klamm",
  "Kleinbaumgarten",
  "Klingergasse",
  "Koloniestraße",
  "Konrad-Duden-Gasse",
  "Krankenhausstraße",
  "Kubinstraße",
  "Köhldorfergasse",
  "Lackenweg",
  "Lange Mekotte",
  "Leifling",
  "Leopold Frank-Straße (Pellendorf)",
  "Lerchengasse (Pirka)",
  "Lichtensternsiedlung V",
  "Lindenhofstraße",
  "Lindenweg",
  "Luegstraße",
  "Maierhof",
  "Malerweg",
  "Mitterweg",
  "Mittlere Hauptstraße",
  "Moosbachgasse",
  "Morettigasse",
  "Musikpavillon Riezlern",
  "Mühlboden",
  "Mühle",
  "Mühlenweg",
  "Neustiftgasse",
  "Niederegg",
  "Niedergams",
  "Nordwestbahnbrücke",
  "Oberbödenalm",
  "Obere Berggasse",
  "Oedt",
  "Am Färberberg",
  "Ottogasse",
  "Paul Peters-Gasse",
  "Perspektivstraße",
  "Poppichl",
  "Privatweg",
  "Prixgasse",
  "Pyhra",
  "Radetzkystraße",
  "Raiden",
  "Reichensteinstraße",
  "Reitbauernstraße",
  "Reiterweg",
  "Reitschulgasse",
  "Ringweg",
  "Rupertistraße",
  "Römerstraße",
  "Römerweg",
  "Sackgasse",
  "Schaunbergerstraße",
  "Schloßweg",
  "Schulgasse (Langeck)",
  "Schönholdsiedlung",
  "Seeblick",
  "Seestraße",
  "Semriacherstraße",
  "Simling",
  "Sipbachzeller Straße",
  "Sonnenweg",
  "Spargelfeldgasse",
  "Spiesmayrweg",
  "Sportplatzstraße",
  "St.Ulrich",
  "Steilmannstraße",
  "Steingrüneredt",
  "Strassfeld",
  "Straßerau",
  "Stöpflweg",
  "Stüra",
  "Taferngasse",
  "Tennweg",
  "Thomas Koschat-Gasse",
  "Tiroler Straße",
  "Torrogasse",
  "Uferstraße (Schwarzau am Steinfeld)",
  "Unterdörfl",
  "Unterer Sonnrainweg",
  "Verwaltersiedlung",
  "Waldhang",
  "Wasen",
  "Weidenstraße",
  "Weiherweg",
  "Wettsteingasse",
  "Wiener Straße",
  "Windisch",
  "Zebragasse",
  "Zellerstraße",
  "Ziehrerstraße",
  "Zulechnerweg",
  "Zwergjoch",
  "Ötzbruck"
];

},{}],97:[function(require,module,exports){
module["exports"] = [
  "+43-6##-#######",
  "06##-########",
  "+436#########",
  "06##########"
];

},{}],98:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"./formats":97,"dup":65}],99:[function(require,module,exports){
arguments[4][66][0].apply(exports,arguments)
},{"./legal_form":100,"./name":101,"./suffix":102,"dup":66}],100:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"dup":67}],101:[function(require,module,exports){
arguments[4][68][0].apply(exports,arguments)
},{"dup":68}],102:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"dup":67}],103:[function(require,module,exports){
var de_AT = {};
module['exports'] = de_AT;
de_AT.title = "German (Austria)";
de_AT.address = require("./address");
de_AT.company = require("./company");
de_AT.internet = require("./internet");
de_AT.name = require("./name");
de_AT.phone_number = require("./phone_number");
de_AT.cell_phone = require("./cell_phone");

},{"./address":89,"./cell_phone":98,"./company":99,"./internet":106,"./name":108,"./phone_number":114}],104:[function(require,module,exports){
module["exports"] = [
  "com",
  "info",
  "name",
  "net",
  "org",
  "de",
  "ch",
  "at"
];

},{}],105:[function(require,module,exports){
arguments[4][72][0].apply(exports,arguments)
},{"dup":72}],106:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./domain_suffix":104,"./free_email":105,"dup":73}],107:[function(require,module,exports){
arguments[4][76][0].apply(exports,arguments)
},{"dup":76}],108:[function(require,module,exports){
arguments[4][77][0].apply(exports,arguments)
},{"./first_name":107,"./last_name":109,"./name":110,"./nobility_title_prefix":111,"./prefix":112,"dup":77}],109:[function(require,module,exports){
arguments[4][78][0].apply(exports,arguments)
},{"dup":78}],110:[function(require,module,exports){
arguments[4][79][0].apply(exports,arguments)
},{"dup":79}],111:[function(require,module,exports){
arguments[4][80][0].apply(exports,arguments)
},{"dup":80}],112:[function(require,module,exports){
module["exports"] = [
  "Dr.",
  "Prof. Dr."
];

},{}],113:[function(require,module,exports){
module["exports"] = [
  "01 #######",
  "01#######",
  "+43-1-#######",
  "+431#######",
  "0#### ####",
  "0#########",
  "+43-####-####",
  "+43 ########"
];

},{}],114:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":113,"dup":83}],115:[function(require,module,exports){
module["exports"] = [
  "CH",
  "CH",
  "CH",
  "DE",
  "AT",
  "US",
  "LI",
  "US",
  "HK",
  "VN"
];

},{}],116:[function(require,module,exports){
module["exports"] = [
  "Schweiz"
];

},{}],117:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.country_code = require("./country_code");
address.postcode = require("./postcode");
address.default_country = require("./default_country");

},{"./country_code":115,"./default_country":116,"./postcode":118}],118:[function(require,module,exports){
module["exports"] = [
  "1###",
  "2###",
  "3###",
  "4###",
  "5###",
  "6###",
  "7###",
  "8###",
  "9###"
];

},{}],119:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.name = require("./name");

},{"./name":120,"./suffix":121}],120:[function(require,module,exports){
arguments[4][68][0].apply(exports,arguments)
},{"dup":68}],121:[function(require,module,exports){
module["exports"] = [
  "AG",
  "GmbH",
  "und Söhne",
  "und Partner",
  "& Co.",
  "Gruppe",
  "LLC",
  "Inc."
];

},{}],122:[function(require,module,exports){
var de_CH = {};
module['exports'] = de_CH;
de_CH.title = "German (Switzerland)";
de_CH.address = require("./address");
de_CH.company = require("./company");
de_CH.internet = require("./internet");
de_CH.name = require("./name");
de_CH.phone_number = require("./phone_number");

},{"./address":117,"./company":119,"./internet":124,"./name":126,"./phone_number":131}],123:[function(require,module,exports){
module["exports"] = [
  "com",
  "net",
  "biz",
  "ch",
  "de",
  "li",
  "at",
  "ch",
  "ch"
];

},{}],124:[function(require,module,exports){
var internet = {};
module['exports'] = internet;
internet.domain_suffix = require("./domain_suffix");

},{"./domain_suffix":123}],125:[function(require,module,exports){
module["exports"] = [
    "Adolf",
    "Adrian",
    "Agnes",
    "Alain",
    "Albert",
    "Alberto",
    "Aldo",
    "Alex",
    "Alexander",
    "Alexandre",
    "Alfons",
    "Alfred",
    "Alice",
    "Alois",
    "André",
    "Andrea",
    "Andreas",
    "Angela",
    "Angelo",
    "Anita",
    "Anna",
    "Anne",
    "Anne-Marie",
    "Annemarie",
    "Antoine",
    "Anton",
    "Antonio",
    "Armin",
    "Arnold",
    "Arthur",
    "Astrid",
    "Barbara",
    "Beat",
    "Beatrice",
    "Beatrix",
    "Bernadette",
    "Bernard",
    "Bernhard",
    "Bettina",
    "Brigitta",
    "Brigitte",
    "Bruno",
    "Carlo",
    "Carmen",
    "Caroline",
    "Catherine",
    "Chantal",
    "Charles",
    "Charlotte",
    "Christa",
    "Christian",
    "Christiane",
    "Christina",
    "Christine",
    "Christoph",
    "Christophe",
    "Claire",
    "Claude",
    "Claudia",
    "Claudine",
    "Claudio",
    "Corinne",
    "Cornelia",
    "Daniel",
    "Daniela",
    "Daniele",
    "Danielle",
    "David",
    "Denis",
    "Denise",
    "Didier",
    "Dieter",
    "Dominik",
    "Dominique",
    "Dora",
    "Doris",
    "Edgar",
    "Edith",
    "Eduard",
    "Edwin",
    "Eliane",
    "Elisabeth",
    "Elsa",
    "Elsbeth",
    "Emil",
    "Enrico",
    "Eric",
    "Erica",
    "Erich",
    "Erika",
    "Ernst",
    "Erwin",
    "Esther",
    "Eugen",
    "Eva",
    "Eveline",
    "Evelyne",
    "Fabienne",
    "Felix",
    "Ferdinand",
    "Florence",
    "Francesco",
    "Francis",
    "Franco",
    "François",
    "Françoise",
    "Frank",
    "Franz",
    "Franziska",
    "Frédéric",
    "Fredy",
    "Fridolin",
    "Friedrich",
    "Fritz",
    "Gabriel",
    "Gabriela",
    "Gabrielle",
    "Georg",
    "Georges",
    "Gérald",
    "Gérard",
    "Gerhard",
    "Gertrud",
    "Gianni",
    "Gilbert",
    "Giorgio",
    "Giovanni",
    "Gisela",
    "Giuseppe",
    "Gottfried",
    "Guido",
    "Guy",
    "Hanna",
    "Hans",
    "Hans-Peter",
    "Hans-Rudolf",
    "Hans-Ulrich",
    "Hansjörg",
    "Hanspeter",
    "Hansruedi",
    "Hansueli",
    "Harry",
    "Heidi",
    "Heinrich",
    "Heinz",
    "Helen",
    "Helena",
    "Helene",
    "Helmut",
    "Henri",
    "Herbert",
    "Hermann",
    "Hildegard",
    "Hubert",
    "Hugo",
    "Ingrid",
    "Irene",
    "Iris",
    "Isabelle",
    "Jacqueline",
    "Jacques",
    "Jakob",
    "Jan",
    "Janine",
    "Jean",
    "Jean-Claude",
    "Jean-Daniel",
    "Jean-François",
    "Jean-Jacques",
    "Jean-Louis",
    "Jean-Luc",
    "Jean-Marc",
    "Jean-Marie",
    "Jean-Paul",
    "Jean-Pierre",
    "Johann",
    "Johanna",
    "Johannes",
    "John",
    "Jolanda",
    "Jörg",
    "Josef",
    "Joseph",
    "Josette",
    "Josiane",
    "Judith",
    "Julia",
    "Jürg",
    "Karin",
    "Karl",
    "Katharina",
    "Klaus",
    "Konrad",
    "Kurt",
    "Laura",
    "Laurence",
    "Laurent",
    "Leo",
    "Liliane",
    "Liselotte",
    "Louis",
    "Luca",
    "Luigi",
    "Lukas",
    "Lydia",
    "Madeleine",
    "Maja",
    "Manfred",
    "Manuel",
    "Manuela",
    "Marc",
    "Marcel",
    "Marco",
    "Margrit",
    "Margrith",
    "Maria",
    "Marianne",
    "Mario",
    "Marion",
    "Markus",
    "Marlène",
    "Marlies",
    "Marlis",
    "Martha",
    "Martin",
    "Martina",
    "Martine",
    "Massimo",
    "Matthias",
    "Maurice",
    "Max",
    "Maya",
    "Michael",
    "Michel",
    "Michele",
    "Micheline",
    "Monica",
    "Monika",
    "Monique",
    "Myriam",
    "Nadia",
    "Nadja",
    "Nathalie",
    "Nelly",
    "Nicolas",
    "Nicole",
    "Niklaus",
    "Norbert",
    "Olivier",
    "Oskar",
    "Otto",
    "Paola",
    "Paolo",
    "Pascal",
    "Patricia",
    "Patrick",
    "Paul",
    "Peter",
    "Petra",
    "Philipp",
    "Philippe",
    "Pia",
    "Pierre",
    "Pierre-Alain",
    "Pierre-André",
    "Pius",
    "Priska",
    "Rainer",
    "Raymond",
    "Regina",
    "Regula",
    "Reinhard",
    "Remo",
    "Renata",
    "Renate",
    "Renato",
    "Rene",
    "René",
    "Reto",
    "Richard",
    "Rita",
    "Robert",
    "Roberto",
    "Roger",
    "Roland",
    "Rolf",
    "Roman",
    "Rosa",
    "Rosemarie",
    "Rosmarie",
    "Rudolf",
    "Ruedi",
    "Ruth",
    "Sabine",
    "Samuel",
    "Sandra",
    "Sandro",
    "Serge",
    "Silvia",
    "Silvio",
    "Simon",
    "Simone",
    "Sonia",
    "Sonja",
    "Stefan",
    "Stephan",
    "Stéphane",
    "Stéphanie",
    "Susanna",
    "Susanne",
    "Suzanne",
    "Sylvia",
    "Sylvie",
    "Theo",
    "Theodor",
    "Therese",
    "Thomas",
    "Toni",
    "Ueli",
    "Ulrich",
    "Urs",
    "Ursula",
    "Verena",
    "Véronique",
    "Victor",
    "Viktor",
    "Vreni",
    "Walter",
    "Werner",
    "Willi",
    "Willy",
    "Wolfgang",
    "Yolande",
    "Yves",
    "Yvette",
    "Yvonne",

];

},{}],126:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.name = require("./name");

},{"./first_name":125,"./last_name":127,"./name":128,"./prefix":129}],127:[function(require,module,exports){
module["exports"] = [
    "Ackermann",
    "Aebi",
    "Albrecht",
    "Ammann",
    "Amrein",
    "Arnold",
    "Bachmann",
    "Bader",
    "Bär",
    "Bättig",
    "Bauer",
    "Baumann",
    "Baumgartner",
    "Baur",
    "Beck",
    "Benz",
    "Berger",
    "Bernasconi",
    "Betschart",
    "Bianchi",
    "Bieri",
    "Blaser",
    "Blum",
    "Bolliger",
    "Bosshard",
    "Braun",
    "Brun",
    "Brunner",
    "Bucher",
    "Bühler",
    "Bühlmann",
    "Burri",
    "Christen",
    "Egger",
    "Egli",
    "Eichenberger",
    "Erni",
    "Ernst",
    "Eugster",
    "Fankhauser",
    "Favre",
    "Fehr",
    "Felber",
    "Felder",
    "Ferrari",
    "Fischer",
    "Flückiger",
    "Forster",
    "Frei",
    "Frey",
    "Frick",
    "Friedli",
    "Fuchs",
    "Furrer",
    "Gasser",
    "Geiger",
    "Gerber",
    "Gfeller",
    "Giger",
    "Gloor",
    "Graf",
    "Grob",
    "Gross",
    "Gut",
    "Haas",
    "Häfliger",
    "Hafner",
    "Hartmann",
    "Hasler",
    "Hauser",
    "Hermann",
    "Herzog",
    "Hess",
    "Hirt",
    "Hodel",
    "Hofer",
    "Hoffmann",
    "Hofmann",
    "Hofstetter",
    "Hotz",
    "Huber",
    "Hug",
    "Hunziker",
    "Hürlimann",
    "Imhof",
    "Isler",
    "Iten",
    "Jäggi",
    "Jenni",
    "Jost",
    "Kägi",
    "Kaiser",
    "Kälin",
    "Käser",
    "Kaufmann",
    "Keller",
    "Kern",
    "Kessler",
    "Knecht",
    "Koch",
    "Kohler",
    "Kuhn",
    "Küng",
    "Kunz",
    "Lang",
    "Lanz",
    "Lehmann",
    "Leu",
    "Leunberger",
    "Lüscher",
    "Lustenberger",
    "Lüthi",
    "Lutz",
    "Mäder",
    "Maier",
    "Marti",
    "Martin",
    "Maurer",
    "Mayer",
    "Meier",
    "Meili",
    "Meister",
    "Merz",
    "Mettler",
    "Meyer",
    "Michel",
    "Moser",
    "Müller",
    "Näf",
    "Ott",
    "Peter",
    "Pfister",
    "Portmann",
    "Probst",
    "Rey",
    "Ritter",
    "Roos",
    "Roth",
    "Rüegg",
    "Schäfer",
    "Schaller",
    "Schär",
    "Schärer",
    "Schaub",
    "Scheidegger",
    "Schenk",
    "Scherrer",
    "Schlatter",
    "Schmid",
    "Schmidt",
    "Schneider",
    "Schnyder",
    "Schoch",
    "Schuler",
    "Schumacher",
    "Schürch",
    "Schwab",
    "Schwarz",
    "Schweizer",
    "Seiler",
    "Senn",
    "Sidler",
    "Siegrist",
    "Sigrist",
    "Spörri",
    "Stadelmann",
    "Stalder",
    "Staub",
    "Stauffer",
    "Steffen",
    "Steiger",
    "Steiner",
    "Steinmann",
    "Stettler",
    "Stocker",
    "Stöckli",
    "Stucki",
    "Studer",
    "Stutz",
    "Suter",
    "Sutter",
    "Tanner",
    "Thommen",
    "Tobler",
    "Vogel",
    "Vogt",
    "Wagner",
    "Walder",
    "Walter",
    "Weber",
    "Wegmann",
    "Wehrli",
    "Weibel",
    "Wenger",
    "Wettstein",
    "Widmer",
    "Winkler",
    "Wirth",
    "Wirz",
    "Wolf",
    "Wüthrich",
    "Wyss",
    "Zbinden",
    "Zehnder",
    "Ziegler",
    "Zimmermann",
    "Zingg",
    "Zollinger",
    "Zürcher"
];

},{}],128:[function(require,module,exports){
module["exports"] = [
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}"
];

},{}],129:[function(require,module,exports){
module["exports"] = [
  "Hr.",
  "Fr.",
  "Dr."
];

},{}],130:[function(require,module,exports){
module["exports"] = [
  "0800 ### ###",
  "0800 ## ## ##",
  "0## ### ## ##",
  "0## ### ## ##",
  "+41 ## ### ## ##",
  "0900 ### ###",
  "076 ### ## ##",
  "+4178 ### ## ##",
  "0041 79 ### ## ##"
];

},{}],131:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":130,"dup":83}],132:[function(require,module,exports){
module["exports"] = [
  "#####",
  "####",
  "###"
];

},{}],133:[function(require,module,exports){
arguments[4][51][0].apply(exports,arguments)
},{"dup":51}],134:[function(require,module,exports){
module["exports"] = [
  "North",
  "East",
  "West",
  "South",
  "New",
  "Lake",
  "Port"
];

},{}],135:[function(require,module,exports){
module["exports"] = [
  "town",
  "ton",
  "land",
  "ville",
  "berg",
  "burgh",
  "borough",
  "bury",
  "view",
  "port",
  "mouth",
  "stad",
  "furt",
  "chester",
  "mouth",
  "fort",
  "haven",
  "side",
  "shire"
];

},{}],136:[function(require,module,exports){
module["exports"] = [
  "Afghanistan",
  "Albania",
  "Algeria",
  "American Samoa",
  "Andorra",
  "Angola",
  "Anguilla",
  "Antarctica (the territory South of 60 deg S)",
  "Antigua and Barbuda",
  "Argentina",
  "Armenia",
  "Aruba",
  "Australia",
  "Austria",
  "Azerbaijan",
  "Bahamas",
  "Bahrain",
  "Bangladesh",
  "Barbados",
  "Belarus",
  "Belgium",
  "Belize",
  "Benin",
  "Bermuda",
  "Bhutan",
  "Bolivia",
  "Bosnia and Herzegovina",
  "Botswana",
  "Bouvet Island (Bouvetoya)",
  "Brazil",
  "British Indian Ocean Territory (Chagos Archipelago)",
  "Brunei Darussalam",
  "Bulgaria",
  "Burkina Faso",
  "Burundi",
  "Cambodia",
  "Cameroon",
  "Canada",
  "Cape Verde",
  "Cayman Islands",
  "Central African Republic",
  "Chad",
  "Chile",
  "China",
  "Christmas Island",
  "Cocos (Keeling) Islands",
  "Colombia",
  "Comoros",
  "Congo",
  "Congo",
  "Cook Islands",
  "Costa Rica",
  "Cote d'Ivoire",
  "Croatia",
  "Cuba",
  "Cyprus",
  "Czech Republic",
  "Denmark",
  "Djibouti",
  "Dominica",
  "Dominican Republic",
  "Ecuador",
  "Egypt",
  "El Salvador",
  "Equatorial Guinea",
  "Eritrea",
  "Estonia",
  "Ethiopia",
  "Faroe Islands",
  "Falkland Islands (Malvinas)",
  "Fiji",
  "Finland",
  "France",
  "French Guiana",
  "French Polynesia",
  "French Southern Territories",
  "Gabon",
  "Gambia",
  "Georgia",
  "Germany",
  "Ghana",
  "Gibraltar",
  "Greece",
  "Greenland",
  "Grenada",
  "Guadeloupe",
  "Guam",
  "Guatemala",
  "Guernsey",
  "Guinea",
  "Guinea-Bissau",
  "Guyana",
  "Haiti",
  "Heard Island and McDonald Islands",
  "Holy See (Vatican City State)",
  "Honduras",
  "Hong Kong",
  "Hungary",
  "Iceland",
  "India",
  "Indonesia",
  "Iran",
  "Iraq",
  "Ireland",
  "Isle of Man",
  "Israel",
  "Italy",
  "Jamaica",
  "Japan",
  "Jersey",
  "Jordan",
  "Kazakhstan",
  "Kenya",
  "Kiribati",
  "Democratic People's Republic of Korea",
  "Republic of Korea",
  "Kuwait",
  "Kyrgyz Republic",
  "Lao People's Democratic Republic",
  "Latvia",
  "Lebanon",
  "Lesotho",
  "Liberia",
  "Libyan Arab Jamahiriya",
  "Liechtenstein",
  "Lithuania",
  "Luxembourg",
  "Macao",
  "Macedonia",
  "Madagascar",
  "Malawi",
  "Malaysia",
  "Maldives",
  "Mali",
  "Malta",
  "Marshall Islands",
  "Martinique",
  "Mauritania",
  "Mauritius",
  "Mayotte",
  "Mexico",
  "Micronesia",
  "Moldova",
  "Monaco",
  "Mongolia",
  "Montenegro",
  "Montserrat",
  "Morocco",
  "Mozambique",
  "Myanmar",
  "Namibia",
  "Nauru",
  "Nepal",
  "Netherlands Antilles",
  "Netherlands",
  "New Caledonia",
  "New Zealand",
  "Nicaragua",
  "Niger",
  "Nigeria",
  "Niue",
  "Norfolk Island",
  "Northern Mariana Islands",
  "Norway",
  "Oman",
  "Pakistan",
  "Palau",
  "Palestinian Territory",
  "Panama",
  "Papua New Guinea",
  "Paraguay",
  "Peru",
  "Philippines",
  "Pitcairn Islands",
  "Poland",
  "Portugal",
  "Puerto Rico",
  "Qatar",
  "Reunion",
  "Romania",
  "Russian Federation",
  "Rwanda",
  "Saint Barthelemy",
  "Saint Helena",
  "Saint Kitts and Nevis",
  "Saint Lucia",
  "Saint Martin",
  "Saint Pierre and Miquelon",
  "Saint Vincent and the Grenadines",
  "Samoa",
  "San Marino",
  "Sao Tome and Principe",
  "Saudi Arabia",
  "Senegal",
  "Serbia",
  "Seychelles",
  "Sierra Leone",
  "Singapore",
  "Slovakia (Slovak Republic)",
  "Slovenia",
  "Solomon Islands",
  "Somalia",
  "South Africa",
  "South Georgia and the South Sandwich Islands",
  "Spain",
  "Sri Lanka",
  "Sudan",
  "Suriname",
  "Svalbard & Jan Mayen Islands",
  "Swaziland",
  "Sweden",
  "Switzerland",
  "Syrian Arab Republic",
  "Taiwan",
  "Tajikistan",
  "Tanzania",
  "Thailand",
  "Timor-Leste",
  "Togo",
  "Tokelau",
  "Tonga",
  "Trinidad and Tobago",
  "Tunisia",
  "Turkey",
  "Turkmenistan",
  "Turks and Caicos Islands",
  "Tuvalu",
  "Uganda",
  "Ukraine",
  "United Arab Emirates",
  "United Kingdom",
  "United States of America",
  "United States Minor Outlying Islands",
  "Uruguay",
  "Uzbekistan",
  "Vanuatu",
  "Venezuela",
  "Vietnam",
  "Virgin Islands, British",
  "Virgin Islands, U.S.",
  "Wallis and Futuna",
  "Western Sahara",
  "Yemen",
  "Zambia",
  "Zimbabwe"
];

},{}],137:[function(require,module,exports){
module["exports"] = [
  "AD",
  "AE",
  "AF",
  "AG",
  "AI",
  "AL",
  "AM",
  "AO",
  "AQ",
  "AR",
  "AS",
  "AT",
  "AU",
  "AW",
  "AX",
  "AZ",
  "BA",
  "BB",
  "BD",
  "BE",
  "BF",
  "BG",
  "BH",
  "BI",
  "BJ",
  "BL",
  "BM",
  "BN",
  "BO",
  "BQ",
  "BQ",
  "BR",
  "BS",
  "BT",
  "BV",
  "BW",
  "BY",
  "BZ",
  "CA",
  "CC",
  "CD",
  "CF",
  "CG",
  "CH",
  "CI",
  "CK",
  "CL",
  "CM",
  "CN",
  "CO",
  "CR",
  "CU",
  "CV",
  "CW",
  "CX",
  "CY",
  "CZ",
  "DE",
  "DJ",
  "DK",
  "DM",
  "DO",
  "DZ",
  "EC",
  "EE",
  "EG",
  "EH",
  "ER",
  "ES",
  "ET",
  "FI",
  "FJ",
  "FK",
  "FM",
  "FO",
  "FR",
  "GA",
  "GB",
  "GD",
  "GE",
  "GF",
  "GG",
  "GH",
  "GI",
  "GL",
  "GM",
  "GN",
  "GP",
  "GQ",
  "GR",
  "GS",
  "GT",
  "GU",
  "GW",
  "GY",
  "HK",
  "HM",
  "HN",
  "HR",
  "HT",
  "HU",
  "ID",
  "IE",
  "IL",
  "IM",
  "IN",
  "IO",
  "IQ",
  "IR",
  "IS",
  "IT",
  "JE",
  "JM",
  "JO",
  "JP",
  "KE",
  "KG",
  "KH",
  "KI",
  "KM",
  "KN",
  "KP",
  "KR",
  "KW",
  "KY",
  "KZ",
  "LA",
  "LB",
  "LC",
  "LI",
  "LK",
  "LR",
  "LS",
  "LT",
  "LU",
  "LV",
  "LY",
  "MA",
  "MC",
  "MD",
  "ME",
  "MF",
  "MG",
  "MH",
  "MK",
  "ML",
  "MM",
  "MN",
  "MO",
  "MP",
  "MQ",
  "MR",
  "MS",
  "MT",
  "MU",
  "MV",
  "MW",
  "MX",
  "MY",
  "MZ",
  "NA",
  "NC",
  "NE",
  "NF",
  "NG",
  "NI",
  "NL",
  "NO",
  "NP",
  "NR",
  "NU",
  "NZ",
  "OM",
  "PA",
  "PE",
  "PF",
  "PG",
  "PH",
  "PK",
  "PL",
  "PM",
  "PN",
  "PR",
  "PS",
  "PT",
  "PW",
  "PY",
  "QA",
  "RE",
  "RO",
  "RS",
  "RU",
  "RW",
  "SA",
  "SB",
  "SC",
  "SD",
  "SE",
  "SG",
  "SH",
  "SI",
  "SJ",
  "SK",
  "SL",
  "SM",
  "SN",
  "SO",
  "SR",
  "SS",
  "ST",
  "SV",
  "SX",
  "SY",
  "SZ",
  "TC",
  "TD",
  "TF",
  "TG",
  "TH",
  "TJ",
  "TK",
  "TL",
  "TM",
  "TN",
  "TO",
  "TR",
  "TT",
  "TV",
  "TW",
  "TZ",
  "UA",
  "UG",
  "UM",
  "US",
  "UY",
  "UZ",
  "VA",
  "VC",
  "VE",
  "VG",
  "VI",
  "VN",
  "VU",
  "WF",
  "WS",
  "YE",
  "YT",
  "ZA",
  "ZM",
  "ZW"
];

},{}],138:[function(require,module,exports){
module["exports"] = [
  "Avon",
  "Bedfordshire",
  "Berkshire",
  "Borders",
  "Buckinghamshire",
  "Cambridgeshire"
];

},{}],139:[function(require,module,exports){
module["exports"] = [
  "United States of America"
];

},{}],140:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.county = require("./county");
address.country = require("./country");
address.country_code = require("./country_code");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.postcode_by_state = require("./postcode_by_state");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.time_zone = require("./time_zone");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":132,"./city":133,"./city_prefix":134,"./city_suffix":135,"./country":136,"./country_code":137,"./county":138,"./default_country":139,"./postcode":141,"./postcode_by_state":142,"./secondary_address":143,"./state":144,"./state_abbr":145,"./street_address":146,"./street_name":147,"./street_suffix":148,"./time_zone":149}],141:[function(require,module,exports){
module["exports"] = [
  "#####",
  "#####-####"
];

},{}],142:[function(require,module,exports){
arguments[4][141][0].apply(exports,arguments)
},{"dup":141}],143:[function(require,module,exports){
module["exports"] = [
  "Apt. ###",
  "Suite ###"
];

},{}],144:[function(require,module,exports){
module["exports"] = [
  "Alabama",
  "Alaska",
  "Arizona",
  "Arkansas",
  "California",
  "Colorado",
  "Connecticut",
  "Delaware",
  "Florida",
  "Georgia",
  "Hawaii",
  "Idaho",
  "Illinois",
  "Indiana",
  "Iowa",
  "Kansas",
  "Kentucky",
  "Louisiana",
  "Maine",
  "Maryland",
  "Massachusetts",
  "Michigan",
  "Minnesota",
  "Mississippi",
  "Missouri",
  "Montana",
  "Nebraska",
  "Nevada",
  "New Hampshire",
  "New Jersey",
  "New Mexico",
  "New York",
  "North Carolina",
  "North Dakota",
  "Ohio",
  "Oklahoma",
  "Oregon",
  "Pennsylvania",
  "Rhode Island",
  "South Carolina",
  "South Dakota",
  "Tennessee",
  "Texas",
  "Utah",
  "Vermont",
  "Virginia",
  "Washington",
  "West Virginia",
  "Wisconsin",
  "Wyoming"
];

},{}],145:[function(require,module,exports){
module["exports"] = [
  "AL",
  "AK",
  "AZ",
  "AR",
  "CA",
  "CO",
  "CT",
  "DE",
  "FL",
  "GA",
  "HI",
  "ID",
  "IL",
  "IN",
  "IA",
  "KS",
  "KY",
  "LA",
  "ME",
  "MD",
  "MA",
  "MI",
  "MN",
  "MS",
  "MO",
  "MT",
  "NE",
  "NV",
  "NH",
  "NJ",
  "NM",
  "NY",
  "NC",
  "ND",
  "OH",
  "OK",
  "OR",
  "PA",
  "RI",
  "SC",
  "SD",
  "TN",
  "TX",
  "UT",
  "VT",
  "VA",
  "WA",
  "WV",
  "WI",
  "WY"
];

},{}],146:[function(require,module,exports){
module["exports"] = [
  "#{building_number} #{street_name}"
];

},{}],147:[function(require,module,exports){
module["exports"] = [
  "#{Name.first_name} #{street_suffix}",
  "#{Name.last_name} #{street_suffix}"
];

},{}],148:[function(require,module,exports){
module["exports"] = [
  "Alley",
  "Avenue",
  "Branch",
  "Bridge",
  "Brook",
  "Brooks",
  "Burg",
  "Burgs",
  "Bypass",
  "Camp",
  "Canyon",
  "Cape",
  "Causeway",
  "Center",
  "Centers",
  "Circle",
  "Circles",
  "Cliff",
  "Cliffs",
  "Club",
  "Common",
  "Corner",
  "Corners",
  "Course",
  "Court",
  "Courts",
  "Cove",
  "Coves",
  "Creek",
  "Crescent",
  "Crest",
  "Crossing",
  "Crossroad",
  "Curve",
  "Dale",
  "Dam",
  "Divide",
  "Drive",
  "Drive",
  "Drives",
  "Estate",
  "Estates",
  "Expressway",
  "Extension",
  "Extensions",
  "Fall",
  "Falls",
  "Ferry",
  "Field",
  "Fields",
  "Flat",
  "Flats",
  "Ford",
  "Fords",
  "Forest",
  "Forge",
  "Forges",
  "Fork",
  "Forks",
  "Fort",
  "Freeway",
  "Garden",
  "Gardens",
  "Gateway",
  "Glen",
  "Glens",
  "Green",
  "Greens",
  "Grove",
  "Groves",
  "Harbor",
  "Harbors",
  "Haven",
  "Heights",
  "Highway",
  "Hill",
  "Hills",
  "Hollow",
  "Inlet",
  "Inlet",
  "Island",
  "Island",
  "Islands",
  "Islands",
  "Isle",
  "Isle",
  "Junction",
  "Junctions",
  "Key",
  "Keys",
  "Knoll",
  "Knolls",
  "Lake",
  "Lakes",
  "Land",
  "Landing",
  "Lane",
  "Light",
  "Lights",
  "Loaf",
  "Lock",
  "Locks",
  "Locks",
  "Lodge",
  "Lodge",
  "Loop",
  "Mall",
  "Manor",
  "Manors",
  "Meadow",
  "Meadows",
  "Mews",
  "Mill",
  "Mills",
  "Mission",
  "Mission",
  "Motorway",
  "Mount",
  "Mountain",
  "Mountain",
  "Mountains",
  "Mountains",
  "Neck",
  "Orchard",
  "Oval",
  "Overpass",
  "Park",
  "Parks",
  "Parkway",
  "Parkways",
  "Pass",
  "Passage",
  "Path",
  "Pike",
  "Pine",
  "Pines",
  "Place",
  "Plain",
  "Plains",
  "Plains",
  "Plaza",
  "Plaza",
  "Point",
  "Points",
  "Port",
  "Port",
  "Ports",
  "Ports",
  "Prairie",
  "Prairie",
  "Radial",
  "Ramp",
  "Ranch",
  "Rapid",
  "Rapids",
  "Rest",
  "Ridge",
  "Ridges",
  "River",
  "Road",
  "Road",
  "Roads",
  "Roads",
  "Route",
  "Row",
  "Rue",
  "Run",
  "Shoal",
  "Shoals",
  "Shore",
  "Shores",
  "Skyway",
  "Spring",
  "Springs",
  "Springs",
  "Spur",
  "Spurs",
  "Square",
  "Square",
  "Squares",
  "Squares",
  "Station",
  "Station",
  "Stravenue",
  "Stravenue",
  "Stream",
  "Stream",
  "Street",
  "Street",
  "Streets",
  "Summit",
  "Summit",
  "Terrace",
  "Throughway",
  "Trace",
  "Track",
  "Trafficway",
  "Trail",
  "Trail",
  "Tunnel",
  "Tunnel",
  "Turnpike",
  "Turnpike",
  "Underpass",
  "Union",
  "Unions",
  "Valley",
  "Valleys",
  "Via",
  "Viaduct",
  "View",
  "Views",
  "Village",
  "Village",
  "Villages",
  "Ville",
  "Vista",
  "Vista",
  "Walk",
  "Walks",
  "Wall",
  "Way",
  "Ways",
  "Well",
  "Wells"
];

},{}],149:[function(require,module,exports){
module["exports"] = [
  "Pacific/Midway",
  "Pacific/Pago_Pago",
  "Pacific/Honolulu",
  "America/Juneau",
  "America/Los_Angeles",
  "America/Tijuana",
  "America/Denver",
  "America/Phoenix",
  "America/Chihuahua",
  "America/Mazatlan",
  "America/Chicago",
  "America/Regina",
  "America/Mexico_City",
  "America/Mexico_City",
  "America/Monterrey",
  "America/Guatemala",
  "America/New_York",
  "America/Indiana/Indianapolis",
  "America/Bogota",
  "America/Lima",
  "America/Lima",
  "America/Halifax",
  "America/Caracas",
  "America/La_Paz",
  "America/Santiago",
  "America/St_Johns",
  "America/Sao_Paulo",
  "America/Argentina/Buenos_Aires",
  "America/Guyana",
  "America/Godthab",
  "Atlantic/South_Georgia",
  "Atlantic/Azores",
  "Atlantic/Cape_Verde",
  "Europe/Dublin",
  "Europe/London",
  "Europe/Lisbon",
  "Europe/London",
  "Africa/Casablanca",
  "Africa/Monrovia",
  "Etc/UTC",
  "Europe/Belgrade",
  "Europe/Bratislava",
  "Europe/Budapest",
  "Europe/Ljubljana",
  "Europe/Prague",
  "Europe/Sarajevo",
  "Europe/Skopje",
  "Europe/Warsaw",
  "Europe/Zagreb",
  "Europe/Brussels",
  "Europe/Copenhagen",
  "Europe/Madrid",
  "Europe/Paris",
  "Europe/Amsterdam",
  "Europe/Berlin",
  "Europe/Berlin",
  "Europe/Rome",
  "Europe/Stockholm",
  "Europe/Vienna",
  "Africa/Algiers",
  "Europe/Bucharest",
  "Africa/Cairo",
  "Europe/Helsinki",
  "Europe/Kiev",
  "Europe/Riga",
  "Europe/Sofia",
  "Europe/Tallinn",
  "Europe/Vilnius",
  "Europe/Athens",
  "Europe/Istanbul",
  "Europe/Minsk",
  "Asia/Jerusalem",
  "Africa/Harare",
  "Africa/Johannesburg",
  "Europe/Moscow",
  "Europe/Moscow",
  "Europe/Moscow",
  "Asia/Kuwait",
  "Asia/Riyadh",
  "Africa/Nairobi",
  "Asia/Baghdad",
  "Asia/Tehran",
  "Asia/Muscat",
  "Asia/Muscat",
  "Asia/Baku",
  "Asia/Tbilisi",
  "Asia/Yerevan",
  "Asia/Kabul",
  "Asia/Yekaterinburg",
  "Asia/Karachi",
  "Asia/Karachi",
  "Asia/Tashkent",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kathmandu",
  "Asia/Dhaka",
  "Asia/Dhaka",
  "Asia/Colombo",
  "Asia/Almaty",
  "Asia/Novosibirsk",
  "Asia/Rangoon",
  "Asia/Bangkok",
  "Asia/Bangkok",
  "Asia/Jakarta",
  "Asia/Krasnoyarsk",
  "Asia/Shanghai",
  "Asia/Chongqing",
  "Asia/Hong_Kong",
  "Asia/Urumqi",
  "Asia/Kuala_Lumpur",
  "Asia/Singapore",
  "Asia/Taipei",
  "Australia/Perth",
  "Asia/Irkutsk",
  "Asia/Ulaanbaatar",
  "Asia/Seoul",
  "Asia/Tokyo",
  "Asia/Tokyo",
  "Asia/Tokyo",
  "Asia/Yakutsk",
  "Australia/Darwin",
  "Australia/Adelaide",
  "Australia/Melbourne",
  "Australia/Melbourne",
  "Australia/Sydney",
  "Australia/Brisbane",
  "Australia/Hobart",
  "Asia/Vladivostok",
  "Pacific/Guam",
  "Pacific/Port_Moresby",
  "Asia/Magadan",
  "Asia/Magadan",
  "Pacific/Noumea",
  "Pacific/Fiji",
  "Asia/Kamchatka",
  "Pacific/Majuro",
  "Pacific/Auckland",
  "Pacific/Auckland",
  "Pacific/Tongatapu",
  "Pacific/Fakaofo",
  "Pacific/Apia"
];

},{}],150:[function(require,module,exports){
module["exports"] = [
  "#{Name.name}",
  "#{Company.name}"
];

},{}],151:[function(require,module,exports){
var app = {};
module['exports'] = app;
app.name = require("./name");
app.version = require("./version");
app.author = require("./author");

},{"./author":150,"./name":152,"./version":153}],152:[function(require,module,exports){
module["exports"] = [
  "Redhold",
  "Treeflex",
  "Trippledex",
  "Kanlam",
  "Bigtax",
  "Daltfresh",
  "Toughjoyfax",
  "Mat Lam Tam",
  "Otcom",
  "Tres-Zap",
  "Y-Solowarm",
  "Tresom",
  "Voltsillam",
  "Biodex",
  "Greenlam",
  "Viva",
  "Matsoft",
  "Temp",
  "Zoolab",
  "Subin",
  "Rank",
  "Job",
  "Stringtough",
  "Tin",
  "It",
  "Home Ing",
  "Zamit",
  "Sonsing",
  "Konklab",
  "Alpha",
  "Latlux",
  "Voyatouch",
  "Alphazap",
  "Holdlamis",
  "Zaam-Dox",
  "Sub-Ex",
  "Quo Lux",
  "Bamity",
  "Ventosanzap",
  "Lotstring",
  "Hatity",
  "Tempsoft",
  "Overhold",
  "Fixflex",
  "Konklux",
  "Zontrax",
  "Tampflex",
  "Span",
  "Namfix",
  "Transcof",
  "Stim",
  "Fix San",
  "Sonair",
  "Stronghold",
  "Fintone",
  "Y-find",
  "Opela",
  "Lotlux",
  "Ronstring",
  "Zathin",
  "Duobam",
  "Keylex"
];

},{}],153:[function(require,module,exports){
module["exports"] = [
  "0.#.#",
  "0.##",
  "#.##",
  "#.#",
  "#.#.#"
];

},{}],154:[function(require,module,exports){
module["exports"] = [
  "2011-10-12",
  "2012-11-12",
  "2015-11-11",
  "2013-9-12"
];

},{}],155:[function(require,module,exports){
module["exports"] = [
  "1234-2121-1221-1211",
  "1212-1221-1121-1234",
  "1211-1221-1234-2201",
  "1228-1221-1221-1431"
];

},{}],156:[function(require,module,exports){
module["exports"] = [
  "visa",
  "mastercard",
  "americanexpress",
  "discover"
];

},{}],157:[function(require,module,exports){
var business = {};
module['exports'] = business;
business.credit_card_numbers = require("./credit_card_numbers");
business.credit_card_expiry_dates = require("./credit_card_expiry_dates");
business.credit_card_types = require("./credit_card_types");

},{"./credit_card_expiry_dates":154,"./credit_card_numbers":155,"./credit_card_types":156}],158:[function(require,module,exports){
module["exports"] = [
  "###-###-####",
  "(###) ###-####",
  "1-###-###-####",
  "###.###.####"
];

},{}],159:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"./formats":158,"dup":65}],160:[function(require,module,exports){
module["exports"] = [
  "red",
  "green",
  "blue",
  "yellow",
  "purple",
  "mint green",
  "teal",
  "white",
  "black",
  "orange",
  "pink",
  "grey",
  "maroon",
  "violet",
  "turquoise",
  "tan",
  "sky blue",
  "salmon",
  "plum",
  "orchid",
  "olive",
  "magenta",
  "lime",
  "ivory",
  "indigo",
  "gold",
  "fuchsia",
  "cyan",
  "azure",
  "lavender",
  "silver"
];

},{}],161:[function(require,module,exports){
module["exports"] = [
  "Books",
  "Movies",
  "Music",
  "Games",
  "Electronics",
  "Computers",
  "Home",
  "Garden",
  "Tools",
  "Grocery",
  "Health",
  "Beauty",
  "Toys",
  "Kids",
  "Baby",
  "Clothing",
  "Shoes",
  "Jewelery",
  "Sports",
  "Outdoors",
  "Automotive",
  "Industrial"
];

},{}],162:[function(require,module,exports){
var commerce = {};
module['exports'] = commerce;
commerce.color = require("./color");
commerce.department = require("./department");
commerce.product_name = require("./product_name");

},{"./color":160,"./department":161,"./product_name":163}],163:[function(require,module,exports){
module["exports"] = {
  "adjective": [
    "Small",
    "Ergonomic",
    "Rustic",
    "Intelligent",
    "Gorgeous",
    "Incredible",
    "Fantastic",
    "Practical",
    "Sleek",
    "Awesome",
    "Generic",
    "Handcrafted",
    "Handmade",
    "Licensed",
    "Refined",
    "Unbranded",
    "Tasty"
  ],
  "material": [
    "Steel",
    "Wooden",
    "Concrete",
    "Plastic",
    "Cotton",
    "Granite",
    "Rubber",
    "Metal",
    "Soft",
    "Fresh",
    "Frozen"
  ],
  "product": [
    "Chair",
    "Car",
    "Computer",
    "Keyboard",
    "Mouse",
    "Bike",
    "Ball",
    "Gloves",
    "Pants",
    "Shirt",
    "Table",
    "Shoes",
    "Hat",
    "Towels",
    "Soap",
    "Tuna",
    "Chicken",
    "Fish",
    "Cheese",
    "Bacon",
    "Pizza",
    "Salad",
    "Sausages",
    "Chips"
  ]
};

},{}],164:[function(require,module,exports){
module["exports"] = [
  "Adaptive",
  "Advanced",
  "Ameliorated",
  "Assimilated",
  "Automated",
  "Balanced",
  "Business-focused",
  "Centralized",
  "Cloned",
  "Compatible",
  "Configurable",
  "Cross-group",
  "Cross-platform",
  "Customer-focused",
  "Customizable",
  "Decentralized",
  "De-engineered",
  "Devolved",
  "Digitized",
  "Distributed",
  "Diverse",
  "Down-sized",
  "Enhanced",
  "Enterprise-wide",
  "Ergonomic",
  "Exclusive",
  "Expanded",
  "Extended",
  "Face to face",
  "Focused",
  "Front-line",
  "Fully-configurable",
  "Function-based",
  "Fundamental",
  "Future-proofed",
  "Grass-roots",
  "Horizontal",
  "Implemented",
  "Innovative",
  "Integrated",
  "Intuitive",
  "Inverse",
  "Managed",
  "Mandatory",
  "Monitored",
  "Multi-channelled",
  "Multi-lateral",
  "Multi-layered",
  "Multi-tiered",
  "Networked",
  "Object-based",
  "Open-architected",
  "Open-source",
  "Operative",
  "Optimized",
  "Optional",
  "Organic",
  "Organized",
  "Persevering",
  "Persistent",
  "Phased",
  "Polarised",
  "Pre-emptive",
  "Proactive",
  "Profit-focused",
  "Profound",
  "Programmable",
  "Progressive",
  "Public-key",
  "Quality-focused",
  "Reactive",
  "Realigned",
  "Re-contextualized",
  "Re-engineered",
  "Reduced",
  "Reverse-engineered",
  "Right-sized",
  "Robust",
  "Seamless",
  "Secured",
  "Self-enabling",
  "Sharable",
  "Stand-alone",
  "Streamlined",
  "Switchable",
  "Synchronised",
  "Synergistic",
  "Synergized",
  "Team-oriented",
  "Total",
  "Triple-buffered",
  "Universal",
  "Up-sized",
  "Upgradable",
  "User-centric",
  "User-friendly",
  "Versatile",
  "Virtual",
  "Visionary",
  "Vision-oriented"
];

},{}],165:[function(require,module,exports){
module["exports"] = [
  "clicks-and-mortar",
  "value-added",
  "vertical",
  "proactive",
  "robust",
  "revolutionary",
  "scalable",
  "leading-edge",
  "innovative",
  "intuitive",
  "strategic",
  "e-business",
  "mission-critical",
  "sticky",
  "one-to-one",
  "24/7",
  "end-to-end",
  "global",
  "B2B",
  "B2C",
  "granular",
  "frictionless",
  "virtual",
  "viral",
  "dynamic",
  "24/365",
  "best-of-breed",
  "killer",
  "magnetic",
  "bleeding-edge",
  "web-enabled",
  "interactive",
  "dot-com",
  "sexy",
  "back-end",
  "real-time",
  "efficient",
  "front-end",
  "distributed",
  "seamless",
  "extensible",
  "turn-key",
  "world-class",
  "open-source",
  "cross-platform",
  "cross-media",
  "synergistic",
  "bricks-and-clicks",
  "out-of-the-box",
  "enterprise",
  "integrated",
  "impactful",
  "wireless",
  "transparent",
  "next-generation",
  "cutting-edge",
  "user-centric",
  "visionary",
  "customized",
  "ubiquitous",
  "plug-and-play",
  "collaborative",
  "compelling",
  "holistic",
  "rich"
];

},{}],166:[function(require,module,exports){
module["exports"] = [
  "synergies",
  "web-readiness",
  "paradigms",
  "markets",
  "partnerships",
  "infrastructures",
  "platforms",
  "initiatives",
  "channels",
  "eyeballs",
  "communities",
  "ROI",
  "solutions",
  "e-tailers",
  "e-services",
  "action-items",
  "portals",
  "niches",
  "technologies",
  "content",
  "vortals",
  "supply-chains",
  "convergence",
  "relationships",
  "architectures",
  "interfaces",
  "e-markets",
  "e-commerce",
  "systems",
  "bandwidth",
  "infomediaries",
  "models",
  "mindshare",
  "deliverables",
  "users",
  "schemas",
  "networks",
  "applications",
  "metrics",
  "e-business",
  "functionalities",
  "experiences",
  "web services",
  "methodologies"
];

},{}],167:[function(require,module,exports){
module["exports"] = [
  "implement",
  "utilize",
  "integrate",
  "streamline",
  "optimize",
  "evolve",
  "transform",
  "embrace",
  "enable",
  "orchestrate",
  "leverage",
  "reinvent",
  "aggregate",
  "architect",
  "enhance",
  "incentivize",
  "morph",
  "empower",
  "envisioneer",
  "monetize",
  "harness",
  "facilitate",
  "seize",
  "disintermediate",
  "synergize",
  "strategize",
  "deploy",
  "brand",
  "grow",
  "target",
  "syndicate",
  "synthesize",
  "deliver",
  "mesh",
  "incubate",
  "engage",
  "maximize",
  "benchmark",
  "expedite",
  "reintermediate",
  "whiteboard",
  "visualize",
  "repurpose",
  "innovate",
  "scale",
  "unleash",
  "drive",
  "extend",
  "engineer",
  "revolutionize",
  "generate",
  "exploit",
  "transition",
  "e-enable",
  "iterate",
  "cultivate",
  "matrix",
  "productize",
  "redefine",
  "recontextualize"
];

},{}],168:[function(require,module,exports){
module["exports"] = [
  "24 hour",
  "24/7",
  "3rd generation",
  "4th generation",
  "5th generation",
  "6th generation",
  "actuating",
  "analyzing",
  "asymmetric",
  "asynchronous",
  "attitude-oriented",
  "background",
  "bandwidth-monitored",
  "bi-directional",
  "bifurcated",
  "bottom-line",
  "clear-thinking",
  "client-driven",
  "client-server",
  "coherent",
  "cohesive",
  "composite",
  "context-sensitive",
  "contextually-based",
  "content-based",
  "dedicated",
  "demand-driven",
  "didactic",
  "directional",
  "discrete",
  "disintermediate",
  "dynamic",
  "eco-centric",
  "empowering",
  "encompassing",
  "even-keeled",
  "executive",
  "explicit",
  "exuding",
  "fault-tolerant",
  "foreground",
  "fresh-thinking",
  "full-range",
  "global",
  "grid-enabled",
  "heuristic",
  "high-level",
  "holistic",
  "homogeneous",
  "human-resource",
  "hybrid",
  "impactful",
  "incremental",
  "intangible",
  "interactive",
  "intermediate",
  "leading edge",
  "local",
  "logistical",
  "maximized",
  "methodical",
  "mission-critical",
  "mobile",
  "modular",
  "motivating",
  "multimedia",
  "multi-state",
  "multi-tasking",
  "national",
  "needs-based",
  "neutral",
  "next generation",
  "non-volatile",
  "object-oriented",
  "optimal",
  "optimizing",
  "radical",
  "real-time",
  "reciprocal",
  "regional",
  "responsive",
  "scalable",
  "secondary",
  "solution-oriented",
  "stable",
  "static",
  "systematic",
  "systemic",
  "system-worthy",
  "tangible",
  "tertiary",
  "transitional",
  "uniform",
  "upward-trending",
  "user-facing",
  "value-added",
  "web-enabled",
  "well-modulated",
  "zero administration",
  "zero defect",
  "zero tolerance"
];

},{}],169:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.adjective = require("./adjective");
company.descriptor = require("./descriptor");
company.noun = require("./noun");
company.bs_verb = require("./bs_verb");
company.bs_adjective = require("./bs_adjective");
company.bs_noun = require("./bs_noun");
company.name = require("./name");

},{"./adjective":164,"./bs_adjective":165,"./bs_noun":166,"./bs_verb":167,"./descriptor":168,"./name":170,"./noun":171,"./suffix":172}],170:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name}-#{Name.last_name}",
  "#{Name.last_name}, #{Name.last_name} and #{Name.last_name}"
];

},{}],171:[function(require,module,exports){
module["exports"] = [
  "ability",
  "access",
  "adapter",
  "algorithm",
  "alliance",
  "analyzer",
  "application",
  "approach",
  "architecture",
  "archive",
  "artificial intelligence",
  "array",
  "attitude",
  "benchmark",
  "budgetary management",
  "capability",
  "capacity",
  "challenge",
  "circuit",
  "collaboration",
  "complexity",
  "concept",
  "conglomeration",
  "contingency",
  "core",
  "customer loyalty",
  "database",
  "data-warehouse",
  "definition",
  "emulation",
  "encoding",
  "encryption",
  "extranet",
  "firmware",
  "flexibility",
  "focus group",
  "forecast",
  "frame",
  "framework",
  "function",
  "functionalities",
  "Graphic Interface",
  "groupware",
  "Graphical User Interface",
  "hardware",
  "help-desk",
  "hierarchy",
  "hub",
  "implementation",
  "info-mediaries",
  "infrastructure",
  "initiative",
  "installation",
  "instruction set",
  "interface",
  "internet solution",
  "intranet",
  "knowledge user",
  "knowledge base",
  "local area network",
  "leverage",
  "matrices",
  "matrix",
  "methodology",
  "middleware",
  "migration",
  "model",
  "moderator",
  "monitoring",
  "moratorium",
  "neural-net",
  "open architecture",
  "open system",
  "orchestration",
  "paradigm",
  "parallelism",
  "policy",
  "portal",
  "pricing structure",
  "process improvement",
  "product",
  "productivity",
  "project",
  "projection",
  "protocol",
  "secured line",
  "service-desk",
  "software",
  "solution",
  "standardization",
  "strategy",
  "structure",
  "success",
  "superstructure",
  "support",
  "synergy",
  "system engine",
  "task-force",
  "throughput",
  "time-frame",
  "toolset",
  "utilisation",
  "website",
  "workforce"
];

},{}],172:[function(require,module,exports){
module["exports"] = [
  "Inc",
  "and Sons",
  "LLC",
  "Group"
];

},{}],173:[function(require,module,exports){
module["exports"] = [
  "/34##-######-####L/",
  "/37##-######-####L/"
];

},{}],174:[function(require,module,exports){
module["exports"] = [
  "/30[0-5]#-######-###L/",
  "/368#-######-###L/"
];

},{}],175:[function(require,module,exports){
module["exports"] = [
  "/6011-####-####-###L/",
  "/65##-####-####-###L/",
  "/64[4-9]#-####-####-###L/",
  "/6011-62##-####-####-###L/",
  "/65##-62##-####-####-###L/",
  "/64[4-9]#-62##-####-####-###L/"
];

},{}],176:[function(require,module,exports){
var credit_card = {};
module['exports'] = credit_card;
credit_card.visa = require("./visa");
credit_card.mastercard = require("./mastercard");
credit_card.discover = require("./discover");
credit_card.american_express = require("./american_express");
credit_card.diners_club = require("./diners_club");
credit_card.jcb = require("./jcb");
credit_card.switch = require("./switch");
credit_card.solo = require("./solo");
credit_card.maestro = require("./maestro");
credit_card.laser = require("./laser");

},{"./american_express":173,"./diners_club":174,"./discover":175,"./jcb":177,"./laser":178,"./maestro":179,"./mastercard":180,"./solo":181,"./switch":182,"./visa":183}],177:[function(require,module,exports){
module["exports"] = [
  "/3528-####-####-###L/",
  "/3529-####-####-###L/",
  "/35[3-8]#-####-####-###L/"
];

},{}],178:[function(require,module,exports){
module["exports"] = [
  "/6304###########L/",
  "/6706###########L/",
  "/6771###########L/",
  "/6709###########L/",
  "/6304#########{5,6}L/",
  "/6706#########{5,6}L/",
  "/6771#########{5,6}L/",
  "/6709#########{5,6}L/"
];

},{}],179:[function(require,module,exports){
module["exports"] = [
  "/50#{9,16}L/",
  "/5[6-8]#{9,16}L/",
  "/56##{9,16}L/"
];

},{}],180:[function(require,module,exports){
module["exports"] = [
  "/5[1-5]##-####-####-###L/",
  "/6771-89##-####-###L/"
];

},{}],181:[function(require,module,exports){
module["exports"] = [
  "/6767-####-####-###L/",
  "/6767-####-####-####-#L/",
  "/6767-####-####-####-##L/"
];

},{}],182:[function(require,module,exports){
module["exports"] = [
  "/6759-####-####-###L/",
  "/6759-####-####-####-#L/",
  "/6759-####-####-####-##L/"
];

},{}],183:[function(require,module,exports){
module["exports"] = [
  "/4###########L/",
  "/4###-####-####-###L/"
];

},{}],184:[function(require,module,exports){
var date = {};
module["exports"] = date;
date.month = require("./month");
date.weekday = require("./weekday");

},{"./month":185,"./weekday":186}],185:[function(require,module,exports){
// Source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/en.xml#L1799
module["exports"] = {
  wide: [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December"
  ],
  // Property "wide_context" is optional, if not set then "wide" will be used instead
  // It is used to specify a word in context, which may differ from a stand-alone word
  wide_context: [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December"
  ],
  abbr: [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec"
  ],
  // Property "abbr_context" is optional, if not set then "abbr" will be used instead
  // It is used to specify a word in context, which may differ from a stand-alone word
  abbr_context: [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec"
  ]
};

},{}],186:[function(require,module,exports){
// Source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/en.xml#L1847
module["exports"] = {
  wide: [
    "Sunday",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday"
  ],
  // Property "wide_context" is optional, if not set then "wide" will be used instead
  // It is used to specify a word in context, which may differ from a stand-alone word
  wide_context: [
    "Sunday",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday"
  ],
  abbr: [
    "Sun",
    "Mon",
    "Tue",
    "Wed",
    "Thu",
    "Fri",
    "Sat"
  ],
  // Property "abbr_context" is optional, if not set then "abbr" will be used instead
  // It is used to specify a word in context, which may differ from a stand-alone word
  abbr_context: [
    "Sun",
    "Mon",
    "Tue",
    "Wed",
    "Thu",
    "Fri",
    "Sat"
  ]
};

},{}],187:[function(require,module,exports){
module["exports"] = [
  "Checking",
  "Savings",
  "Money Market",
  "Investment",
  "Home Loan",
  "Credit Card",
  "Auto Loan",
  "Personal Loan"
];

},{}],188:[function(require,module,exports){
module["exports"] = {
  "UAE Dirham": {
    "code": "AED",
    "symbol": ""
  },
  "Afghani": {
    "code": "AFN",
    "symbol": "؋"
  },
  "Lek": {
    "code": "ALL",
    "symbol": "Lek"
  },
  "Armenian Dram": {
    "code": "AMD",
    "symbol": ""
  },
  "Netherlands Antillian Guilder": {
    "code": "ANG",
    "symbol": "ƒ"
  },
  "Kwanza": {
    "code": "AOA",
    "symbol": ""
  },
  "Argentine Peso": {
    "code": "ARS",
    "symbol": "$"
  },
  "Australian Dollar": {
    "code": "AUD",
    "symbol": "$"
  },
  "Aruban Guilder": {
    "code": "AWG",
    "symbol": "ƒ"
  },
  "Azerbaijanian Manat": {
    "code": "AZN",
    "symbol": "ман"
  },
  "Convertible Marks": {
    "code": "BAM",
    "symbol": "KM"
  },
  "Barbados Dollar": {
    "code": "BBD",
    "symbol": "$"
  },
  "Taka": {
    "code": "BDT",
    "symbol": ""
  },
  "Bulgarian Lev": {
    "code": "BGN",
    "symbol": "лв"
  },
  "Bahraini Dinar": {
    "code": "BHD",
    "symbol": ""
  },
  "Burundi Franc": {
    "code": "BIF",
    "symbol": ""
  },
  "Bermudian Dollar (customarily known as Bermuda Dollar)": {
    "code": "BMD",
    "symbol": "$"
  },
  "Brunei Dollar": {
    "code": "BND",
    "symbol": "$"
  },
  "Boliviano Mvdol": {
    "code": "BOB BOV",
    "symbol": "$b"
  },
  "Brazilian Real": {
    "code": "BRL",
    "symbol": "R$"
  },
  "Bahamian Dollar": {
    "code": "BSD",
    "symbol": "$"
  },
  "Pula": {
    "code": "BWP",
    "symbol": "P"
  },
  "Belarussian Ruble": {
    "code": "BYR",
    "symbol": "p."
  },
  "Belize Dollar": {
    "code": "BZD",
    "symbol": "BZ$"
  },
  "Canadian Dollar": {
    "code": "CAD",
    "symbol": "$"
  },
  "Congolese Franc": {
    "code": "CDF",
    "symbol": ""
  },
  "Swiss Franc": {
    "code": "CHF",
    "symbol": "CHF"
  },
  "Chilean Peso Unidades de fomento": {
    "code": "CLP CLF",
    "symbol": "$"
  },
  "Yuan Renminbi": {
    "code": "CNY",
    "symbol": "¥"
  },
  "Colombian Peso Unidad de Valor Real": {
    "code": "COP COU",
    "symbol": "$"
  },
  "Costa Rican Colon": {
    "code": "CRC",
    "symbol": "₡"
  },
  "Cuban Peso Peso Convertible": {
    "code": "CUP CUC",
    "symbol": "₱"
  },
  "Cape Verde Escudo": {
    "code": "CVE",
    "symbol": ""
  },
  "Czech Koruna": {
    "code": "CZK",
    "symbol": "Kč"
  },
  "Djibouti Franc": {
    "code": "DJF",
    "symbol": ""
  },
  "Danish Krone": {
    "code": "DKK",
    "symbol": "kr"
  },
  "Dominican Peso": {
    "code": "DOP",
    "symbol": "RD$"
  },
  "Algerian Dinar": {
    "code": "DZD",
    "symbol": ""
  },
  "Kroon": {
    "code": "EEK",
    "symbol": ""
  },
  "Egyptian Pound": {
    "code": "EGP",
    "symbol": "£"
  },
  "Nakfa": {
    "code": "ERN",
    "symbol": ""
  },
  "Ethiopian Birr": {
    "code": "ETB",
    "symbol": ""
  },
  "Euro": {
    "code": "EUR",
    "symbol": "€"
  },
  "Fiji Dollar": {
    "code": "FJD",
    "symbol": "$"
  },
  "Falkland Islands Pound": {
    "code": "FKP",
    "symbol": "£"
  },
  "Pound Sterling": {
    "code": "GBP",
    "symbol": "£"
  },
  "Lari": {
    "code": "GEL",
    "symbol": ""
  },
  "Cedi": {
    "code": "GHS",
    "symbol": ""
  },
  "Gibraltar Pound": {
    "code": "GIP",
    "symbol": "£"
  },
  "Dalasi": {
    "code": "GMD",
    "symbol": ""
  },
  "Guinea Franc": {
    "code": "GNF",
    "symbol": ""
  },
  "Quetzal": {
    "code": "GTQ",
    "symbol": "Q"
  },
  "Guyana Dollar": {
    "code": "GYD",
    "symbol": "$"
  },
  "Hong Kong Dollar": {
    "code": "HKD",
    "symbol": "$"
  },
  "Lempira": {
    "code": "HNL",
    "symbol": "L"
  },
  "Croatian Kuna": {
    "code": "HRK",
    "symbol": "kn"
  },
  "Gourde US Dollar": {
    "code": "HTG USD",
    "symbol": ""
  },
  "Forint": {
    "code": "HUF",
    "symbol": "Ft"
  },
  "Rupiah": {
    "code": "IDR",
    "symbol": "Rp"
  },
  "New Israeli Sheqel": {
    "code": "ILS",
    "symbol": "₪"
  },
  "Indian Rupee": {
    "code": "INR",
    "symbol": ""
  },
  "Indian Rupee Ngultrum": {
    "code": "INR BTN",
    "symbol": ""
  },
  "Iraqi Dinar": {
    "code": "IQD",
    "symbol": ""
  },
  "Iranian Rial": {
    "code": "IRR",
    "symbol": "﷼"
  },
  "Iceland Krona": {
    "code": "ISK",
    "symbol": "kr"
  },
  "Jamaican Dollar": {
    "code": "JMD",
    "symbol": "J$"
  },
  "Jordanian Dinar": {
    "code": "JOD",
    "symbol": ""
  },
  "Yen": {
    "code": "JPY",
    "symbol": "¥"
  },
  "Kenyan Shilling": {
    "code": "KES",
    "symbol": ""
  },
  "Som": {
    "code": "KGS",
    "symbol": "лв"
  },
  "Riel": {
    "code": "KHR",
    "symbol": "៛"
  },
  "Comoro Franc": {
    "code": "KMF",
    "symbol": ""
  },
  "North Korean Won": {
    "code": "KPW",
    "symbol": "₩"
  },
  "Won": {
    "code": "KRW",
    "symbol": "₩"
  },
  "Kuwaiti Dinar": {
    "code": "KWD",
    "symbol": ""
  },
  "Cayman Islands Dollar": {
    "code": "KYD",
    "symbol": "$"
  },
  "Tenge": {
    "code": "KZT",
    "symbol": "лв"
  },
  "Kip": {
    "code": "LAK",
    "symbol": "₭"
  },
  "Lebanese Pound": {
    "code": "LBP",
    "symbol": "£"
  },
  "Sri Lanka Rupee": {
    "code": "LKR",
    "symbol": "₨"
  },
  "Liberian Dollar": {
    "code": "LRD",
    "symbol": "$"
  },
  "Lithuanian Litas": {
    "code": "LTL",
    "symbol": "Lt"
  },
  "Latvian Lats": {
    "code": "LVL",
    "symbol": "Ls"
  },
  "Libyan Dinar": {
    "code": "LYD",
    "symbol": ""
  },
  "Moroccan Dirham": {
    "code": "MAD",
    "symbol": ""
  },
  "Moldovan Leu": {
    "code": "MDL",
    "symbol": ""
  },
  "Malagasy Ariary": {
    "code": "MGA",
    "symbol": ""
  },
  "Denar": {
    "code": "MKD",
    "symbol": "ден"
  },
  "Kyat": {
    "code": "MMK",
    "symbol": ""
  },
  "Tugrik": {
    "code": "MNT",
    "symbol": "₮"
  },
  "Pataca": {
    "code": "MOP",
    "symbol": ""
  },
  "Ouguiya": {
    "code": "MRO",
    "symbol": ""
  },
  "Mauritius Rupee": {
    "code": "MUR",
    "symbol": "₨"
  },
  "Rufiyaa": {
    "code": "MVR",
    "symbol": ""
  },
  "Kwacha": {
    "code": "MWK",
    "symbol": ""
  },
  "Mexican Peso Mexican Unidad de Inversion (UDI)": {
    "code": "MXN MXV",
    "symbol": "$"
  },
  "Malaysian Ringgit": {
    "code": "MYR",
    "symbol": "RM"
  },
  "Metical": {
    "code": "MZN",
    "symbol": "MT"
  },
  "Naira": {
    "code": "NGN",
    "symbol": "₦"
  },
  "Cordoba Oro": {
    "code": "NIO",
    "symbol": "C$"
  },
  "Norwegian Krone": {
    "code": "NOK",
    "symbol": "kr"
  },
  "Nepalese Rupee": {
    "code": "NPR",
    "symbol": "₨"
  },
  "New Zealand Dollar": {
    "code": "NZD",
    "symbol": "$"
  },
  "Rial Omani": {
    "code": "OMR",
    "symbol": "﷼"
  },
  "Balboa US Dollar": {
    "code": "PAB USD",
    "symbol": "B/."
  },
  "Nuevo Sol": {
    "code": "PEN",
    "symbol": "S/."
  },
  "Kina": {
    "code": "PGK",
    "symbol": ""
  },
  "Philippine Peso": {
    "code": "PHP",
    "symbol": "Php"
  },
  "Pakistan Rupee": {
    "code": "PKR",
    "symbol": "₨"
  },
  "Zloty": {
    "code": "PLN",
    "symbol": "zł"
  },
  "Guarani": {
    "code": "PYG",
    "symbol": "Gs"
  },
  "Qatari Rial": {
    "code": "QAR",
    "symbol": "﷼"
  },
  "New Leu": {
    "code": "RON",
    "symbol": "lei"
  },
  "Serbian Dinar": {
    "code": "RSD",
    "symbol": "Дин."
  },
  "Russian Ruble": {
    "code": "RUB",
    "symbol": "руб"
  },
  "Rwanda Franc": {
    "code": "RWF",
    "symbol": ""
  },
  "Saudi Riyal": {
    "code": "SAR",
    "symbol": "﷼"
  },
  "Solomon Islands Dollar": {
    "code": "SBD",
    "symbol": "$"
  },
  "Seychelles Rupee": {
    "code": "SCR",
    "symbol": "₨"
  },
  "Sudanese Pound": {
    "code": "SDG",
    "symbol": ""
  },
  "Swedish Krona": {
    "code": "SEK",
    "symbol": "kr"
  },
  "Singapore Dollar": {
    "code": "SGD",
    "symbol": "$"
  },
  "Saint Helena Pound": {
    "code": "SHP",
    "symbol": "£"
  },
  "Leone": {
    "code": "SLL",
    "symbol": ""
  },
  "Somali Shilling": {
    "code": "SOS",
    "symbol": "S"
  },
  "Surinam Dollar": {
    "code": "SRD",
    "symbol": "$"
  },
  "Dobra": {
    "code": "STD",
    "symbol": ""
  },
  "El Salvador Colon US Dollar": {
    "code": "SVC USD",
    "symbol": "$"
  },
  "Syrian Pound": {
    "code": "SYP",
    "symbol": "£"
  },
  "Lilangeni": {
    "code": "SZL",
    "symbol": ""
  },
  "Baht": {
    "code": "THB",
    "symbol": "฿"
  },
  "Somoni": {
    "code": "TJS",
    "symbol": ""
  },
  "Manat": {
    "code": "TMT",
    "symbol": ""
  },
  "Tunisian Dinar": {
    "code": "TND",
    "symbol": ""
  },
  "Pa'anga": {
    "code": "TOP",
    "symbol": ""
  },
  "Turkish Lira": {
    "code": "TRY",
    "symbol": "TL"
  },
  "Trinidad and Tobago Dollar": {
    "code": "TTD",
    "symbol": "TT$"
  },
  "New Taiwan Dollar": {
    "code": "TWD",
    "symbol": "NT$"
  },
  "Tanzanian Shilling": {
    "code": "TZS",
    "symbol": ""
  },
  "Hryvnia": {
    "code": "UAH",
    "symbol": "₴"
  },
  "Uganda Shilling": {
    "code": "UGX",
    "symbol": ""
  },
  "US Dollar": {
    "code": "USD",
    "symbol": "$"
  },
  "Peso Uruguayo Uruguay Peso en Unidades Indexadas": {
    "code": "UYU UYI",
    "symbol": "$U"
  },
  "Uzbekistan Sum": {
    "code": "UZS",
    "symbol": "лв"
  },
  "Bolivar Fuerte": {
    "code": "VEF",
    "symbol": "Bs"
  },
  "Dong": {
    "code": "VND",
    "symbol": "₫"
  },
  "Vatu": {
    "code": "VUV",
    "symbol": ""
  },
  "Tala": {
    "code": "WST",
    "symbol": ""
  },
  "CFA Franc BEAC": {
    "code": "XAF",
    "symbol": ""
  },
  "Silver": {
    "code": "XAG",
    "symbol": ""
  },
  "Gold": {
    "code": "XAU",
    "symbol": ""
  },
  "Bond Markets Units European Composite Unit (EURCO)": {
    "code": "XBA",
    "symbol": ""
  },
  "European Monetary Unit (E.M.U.-6)": {
    "code": "XBB",
    "symbol": ""
  },
  "European Unit of Account 9(E.U.A.-9)": {
    "code": "XBC",
    "symbol": ""
  },
  "European Unit of Account 17(E.U.A.-17)": {
    "code": "XBD",
    "symbol": ""
  },
  "East Caribbean Dollar": {
    "code": "XCD",
    "symbol": "$"
  },
  "SDR": {
    "code": "XDR",
    "symbol": ""
  },
  "UIC-Franc": {
    "code": "XFU",
    "symbol": ""
  },
  "CFA Franc BCEAO": {
    "code": "XOF",
    "symbol": ""
  },
  "Palladium": {
    "code": "XPD",
    "symbol": ""
  },
  "CFP Franc": {
    "code": "XPF",
    "symbol": ""
  },
  "Platinum": {
    "code": "XPT",
    "symbol": ""
  },
  "Codes specifically reserved for testing purposes": {
    "code": "XTS",
    "symbol": ""
  },
  "Yemeni Rial": {
    "code": "YER",
    "symbol": "﷼"
  },
  "Rand": {
    "code": "ZAR",
    "symbol": "R"
  },
  "Rand Loti": {
    "code": "ZAR LSL",
    "symbol": ""
  },
  "Rand Namibia Dollar": {
    "code": "ZAR NAD",
    "symbol": ""
  },
  "Zambian Kwacha": {
    "code": "ZMK",
    "symbol": ""
  },
  "Zimbabwe Dollar": {
    "code": "ZWL",
    "symbol": ""
  }
};

},{}],189:[function(require,module,exports){
var finance = {};
module['exports'] = finance;
finance.account_type = require("./account_type");
finance.transaction_type = require("./transaction_type");
finance.currency = require("./currency");

},{"./account_type":187,"./currency":188,"./transaction_type":190}],190:[function(require,module,exports){
module["exports"] = [
  "deposit",
  "withdrawal",
  "payment",
  "invoice"
];

},{}],191:[function(require,module,exports){
module["exports"] = [
  "TCP",
  "HTTP",
  "SDD",
  "RAM",
  "GB",
  "CSS",
  "SSL",
  "AGP",
  "SQL",
  "FTP",
  "PCI",
  "AI",
  "ADP",
  "RSS",
  "XML",
  "EXE",
  "COM",
  "HDD",
  "THX",
  "SMTP",
  "SMS",
  "USB",
  "PNG",
  "SAS",
  "IB",
  "SCSI",
  "JSON",
  "XSS",
  "JBOD"
];

},{}],192:[function(require,module,exports){
module["exports"] = [
  "auxiliary",
  "primary",
  "back-end",
  "digital",
  "open-source",
  "virtual",
  "cross-platform",
  "redundant",
  "online",
  "haptic",
  "multi-byte",
  "bluetooth",
  "wireless",
  "1080p",
  "neural",
  "optical",
  "solid state",
  "mobile"
];

},{}],193:[function(require,module,exports){
var hacker = {};
module['exports'] = hacker;
hacker.abbreviation = require("./abbreviation");
hacker.adjective = require("./adjective");
hacker.noun = require("./noun");
hacker.verb = require("./verb");
hacker.ingverb = require("./ingverb");

},{"./abbreviation":191,"./adjective":192,"./ingverb":194,"./noun":195,"./verb":196}],194:[function(require,module,exports){
module["exports"] = [
  "backing up",
  "bypassing",
  "hacking",
  "overriding",
  "compressing",
  "copying",
  "navigating",
  "indexing",
  "connecting",
  "generating",
  "quantifying",
  "calculating",
  "synthesizing",
  "transmitting",
  "programming",
  "parsing"
];

},{}],195:[function(require,module,exports){
module["exports"] = [
  "driver",
  "protocol",
  "bandwidth",
  "panel",
  "microchip",
  "program",
  "port",
  "card",
  "array",
  "interface",
  "system",
  "sensor",
  "firewall",
  "hard drive",
  "pixel",
  "alarm",
  "feed",
  "monitor",
  "application",
  "transmitter",
  "bus",
  "circuit",
  "capacitor",
  "matrix"
];

},{}],196:[function(require,module,exports){
module["exports"] = [
  "back up",
  "bypass",
  "hack",
  "override",
  "compress",
  "copy",
  "navigate",
  "index",
  "connect",
  "generate",
  "quantify",
  "calculate",
  "synthesize",
  "input",
  "transmit",
  "program",
  "reboot",
  "parse"
];

},{}],197:[function(require,module,exports){
var en = {};
module['exports'] = en;
en.title = "English";
en.separator = " & ";
en.address = require("./address");
en.credit_card = require("./credit_card");
en.company = require("./company");
en.internet = require("./internet");
en.lorem = require("./lorem");
en.name = require("./name");
en.phone_number = require("./phone_number");
en.cell_phone = require("./cell_phone");
en.business = require("./business");
en.commerce = require("./commerce");
en.team = require("./team");
en.hacker = require("./hacker");
en.app = require("./app");
en.finance = require("./finance");
en.date = require("./date");
en.system = require("./system");

},{"./address":140,"./app":151,"./business":157,"./cell_phone":159,"./commerce":162,"./company":169,"./credit_card":176,"./date":184,"./finance":189,"./hacker":193,"./internet":202,"./lorem":203,"./name":207,"./phone_number":214,"./system":215,"./team":218}],198:[function(require,module,exports){
module["exports"] = [
  "https://s3.amazonaws.com/uifaces/faces/twitter/jarjan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mahdif/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sprayaga/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ruzinav/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Skyhartman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/moscoz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kurafire/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/91bilal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/igorgarybaldi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/calebogden/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/malykhinv/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joelhelin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kushsolitary/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/coreyweb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/snowshade/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/areus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/holdenweb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/heyimjuani/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/envex/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/unterdreht/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/collegeman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/peejfancher/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andyisonline/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ultragex/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fuck_you_two/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adellecharles/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ateneupopular/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ahmetalpbalkan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Stievius/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kerem/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/osvaldas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/angelceballos/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thierrykoblentz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/peterlandt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/catarino/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/weglov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brandclay/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/flame_kaizar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ahmetsulek/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nicolasfolliot/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jayrobinson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/victorerixon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kolage/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michzen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/markjenkins/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nicolai_larsen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/noxdzine/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alagoon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/idiot/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mizko/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chadengle/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mutlu82/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/simobenso/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vocino/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/guiiipontes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/soyjavi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joshaustin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tomaslau/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/VinThomas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ManikRathee/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/langate/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cemshid/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/leemunroe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_shahedk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/enda/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/BillSKenney/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/divya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joshhemsley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sindresorhus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/soffes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/9lessons/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/linux29/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Chakintosh/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/anaami/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joreira/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shadeed9/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scottkclark/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jedbridges/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/salleedesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marakasina/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ariil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/BrianPurkiss/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michaelmartinho/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bublienko/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/devankoshal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ZacharyZorbas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/timmillwood/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joshuasortino/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/damenleeturks/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tomas_janousek/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/herrhaase/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/RussellBishop/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brajeshwar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nachtmeister/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cbracco/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bermonpainter/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/abdullindenis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/isacosta/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/suprb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yalozhkin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chandlervdw/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iamgarth/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_victa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/commadelimited/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/roybarberuk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/axel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vladarbatov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ffbel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/syropian/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ankitind/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/traneblow/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/flashmurphy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ChrisFarina78/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/baliomega/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/saschamt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jm_denis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/anoff/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kennyadr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chatyrko/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dingyi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mds/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/terryxlife/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aaroni/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kinday/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/prrstn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/eduardostuart/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dhilipsiva/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/GavicoInd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/baires/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rohixx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bigmancho/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/blakesimkins/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/leeiio/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tjrus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/uberschizo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kylefoundry/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/claudioguglieri/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ripplemdk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/exentrich/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jakemoore/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joaoedumedeiros/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/poormini/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tereshenkov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/keryilmaz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/haydn_woods/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rude/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/llun/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sgaurav_baghel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jamiebrittain/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/badlittleduck/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pifagor/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/agromov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/benefritz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/erwanhesry/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/diesellaws/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeremiaha/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/koridhandy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chaensel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andrewcohen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/smaczny/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gonzalorobaina/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nandini_m/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sydlawrence/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cdharrison/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tgerken/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lewisainslie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/charliecwaite/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/robbschiller/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/flexrs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mattdetails/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/raquelwilson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/karsh/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mrmartineau/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/opnsrce/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hgharrygo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/maximseshuk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/uxalex/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/samihah/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chanpory/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sharvin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/josemarques/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jefffis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/krystalfister/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lokesh_coder/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thedamianhdez/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dpmachado/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/funwatercat/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/timothycd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ivanfilipovbg/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/picard102/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marcobarbosa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/krasnoukhov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/g3d/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ademilter/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rickdt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/operatino/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bungiwan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hugomano/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/logorado/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dc_user/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/horaciobella/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/SlaapMe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/teeragit/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iqonicd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ilya_pestov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andrewarrow/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ssiskind/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/HenryHoffman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rdsaunders/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adamsxu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/curiousoffice/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/themadray/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michigangraham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kohette/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nickfratter/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/runningskull/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/madysondesigns/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brenton_clarke/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jennyshen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bradenhamm/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kurtinc/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/amanruzaini/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/coreyhaggard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Karimmove/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aaronalfred/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wtrsld/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jitachi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/therealmarvin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pmeissner/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ooomz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chacky14/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jesseddy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thinmatt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shanehudson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/akmur/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/IsaryAmairani/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/arthurholcombe1/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andychipster/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/boxmodel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ehsandiary/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/LucasPerdidao/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shalt0ni/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/swaplord/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kaelifa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/plbabin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/guillemboti/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/arindam_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/renbyrd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thiagovernetti/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jmillspaysbills/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mikemai2awesome/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jervo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mekal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sta1ex/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/robergd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/felipecsl/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andrea211087/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/garand/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dhooyenga/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/abovefunction/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pcridesagain/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/randomlies/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/BryanHorsey/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/heykenneth/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dahparra/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/allthingssmitty/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danvernon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/beweinreich/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/increase/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/falvarad/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alxndrustinov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/souuf/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/orkuncaylar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/AM_Kn2/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gearpixels/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bassamology/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vimarethomas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kosmar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/SULiik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mrjamesnoble/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/silvanmuhlemann/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shaneIxD/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nacho/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yigitpinarbasi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/buzzusborne/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aaronkwhite/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rmlewisuk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/giancarlon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nbirckel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/d_nny_m_cher/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sdidonato/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/atariboy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/abotap/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/karalek/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/psdesignuk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ludwiczakpawel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nemanjaivanovic/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/baluli/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ahmadajmi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vovkasolovev/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/samgrover/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/derienzo777/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jonathansimmons/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nelsonjoyce/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/S0ufi4n3/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xtopherpaul/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/oaktreemedia/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nateschulte/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/findingjenny/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/namankreative/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/antonyzotov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/we_social/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/leehambley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/solid_color/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/abelcabans/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mbilderbach/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kkusaa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jordyvdboom/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carlosgavina/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pechkinator/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vc27/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rdbannon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/croakx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kerihenare/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/catadeleon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gcmorley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/duivvv/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/saschadroste/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/victorDubugras/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wintopia/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mattbilotti/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/taylorling/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/megdraws/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/meln1ks/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mahmoudmetwally/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Silveredge9/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/derekebradley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/happypeter1983/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/travis_arnold/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/artem_kostenko/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adobi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/daykiine/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alek_djuric/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scips/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/miguelmendes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/justinrhee/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alsobrooks/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fronx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mcflydesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/santi_urso/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/allfordesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stayuber/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bertboerland/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marosholly/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adamnac/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cynthiasavard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/muringa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danro/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hiemil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jackiesaik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/zacsnider/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iduuck/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/antjanus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aroon_sharma/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dshster/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thehacker/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michaelbrooksjr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ryanmclaughlin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/clubb3rry/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/taybenlor/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xripunov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/myastro/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adityasutomo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/digitalmaverick/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hjartstrorn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/itolmach/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vaughanmoffitt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/abdots/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/isnifer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sergeysafonov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/maz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scrapdnb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chrismj83/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vitorleal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sokaniwaal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/zaki3d/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/illyzoren/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mocabyte/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/osmanince/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/djsherman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/davidhemphill/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/waghner/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/necodymiconer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/praveen_vijaya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fabbrucci/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cliffseal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/travishines/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kuldarkalvik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Elt_n/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/phillapier/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/okseanjay/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/id835559/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kudretkeskin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/anjhero/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/duck4fuck/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scott_riley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/noufalibrahim/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/h1brd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/borges_marcos/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/devinhalladay/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ciaranr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stefooo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mikebeecham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tonymillion/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joshuaraichur/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/irae/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/petrangr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dmitriychuta/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/charliegann/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/arashmanteghi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ainsleywagon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/svenlen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/faisalabid/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/beshur/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carlyson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dutchnadia/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/teddyzetterlund/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/samuelkraft/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aoimedia/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/toddrew/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/codepoet_ru/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/artvavs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/benoitboucart/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jomarmen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kolmarlopez/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/creartinc/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/homka/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gaborenton/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/robinclediere/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/maximsorokin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/plasticine/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/j2deme/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/peachananr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kapaluccio/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/de_ascanio/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rikas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dawidwu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/angelcreative/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rpatey/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/popey/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rehatkathuria/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/the_purplebunny/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/1markiz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ajaxy_ru/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brenmurrell/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dudestein/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/oskarlevinson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/victorstuber/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nehfy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vicivadeline/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/leandrovaranda/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scottgallant/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/victor_haydin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sawrb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ryhanhassan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/amayvs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/a_brixen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/karolkrakowiak_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/herkulano/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/geran7/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cggaurav/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chris_witko/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lososina/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/polarity/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mattlat/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brandonburke/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/constantx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/teylorfeliz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/craigelimeliah/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rachelreveley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/reabo101/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rahmeen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ky/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rickyyean/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/j04ntoh/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/spbroma/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sebashton/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jpenico/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/francis_vega/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/oktayelipek/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kikillo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fabbianz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/larrygerard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/BroumiYoussef/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/0therplanet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mbilalsiddique1/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ionuss/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/grrr_nl/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/liminha/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rawdiggie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ryandownie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sethlouey/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pixage/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/arpitnj/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/switmer777/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/josevnclch/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kanickairaj/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/puzik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tbakdesigns/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/besbujupi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/supjoey/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lowie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/linkibol/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/balintorosz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/imcoding/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/agustincruiz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gusoto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thomasschrijer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/superoutman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kalmerrautam/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gabrielizalo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gojeanyn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/davidbaldie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_vojto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/laurengray/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jydesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mymyboy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nellleo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marciotoledo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ninjad3m0/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/to_soham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hasslunsford/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/muridrahhal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/levisan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/grahamkennery/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lepetitogre/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/antongenkin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nessoila/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/amandabuzard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/safrankov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cocolero/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dss49/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/matt3224/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bluesix/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/quailandquasar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/AlbertoCococi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lepinski/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sementiy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mhudobivnik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thibaut_re/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/olgary/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shojberg/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mtolokonnikov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bereto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/naupintos/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wegotvices/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xadhix/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/macxim/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rodnylobos/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/madcampos/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/madebyvadim/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bartoszdawydzik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/supervova/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/markretzloff/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vonachoo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/darylws/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stevedesigner/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mylesb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/herbigt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/depaulawagner/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/geshan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gizmeedevil1991/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_scottburgess/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lisovsky/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/davidsasda/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/artd_sign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/YoungCutlass/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mgonto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/itstotallyamy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/victorquinn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/osmond/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/oksanafrewer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/zauerkraut/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iamkeithmason/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nitinhayaran/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lmjabreu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mandalareopens/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thinkleft/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ponchomendivil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/juamperro/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brunodesign1206/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/caseycavanagh/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/luxe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dotgridline/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/spedwig/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/madewulf/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mattsapii/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/helderleal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chrisstumph/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jayphen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nsamoylov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chrisvanderkooi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/justme_timothyg/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/otozk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/prinzadi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gu5taf/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cyril_gaillard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/d_kobelyatsky/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/daniloc/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nwdsha/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/romanbulah/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/skkirilov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dvdwinden/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dannol/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thekevinjones/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jwalter14/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/timgthomas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/buddhasource/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/uxpiper/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thatonetommy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/diansigitp/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adrienths/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/klimmka/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gkaam/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/derekcramer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jennyyo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nerrsoft/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xalionmalik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/edhenderson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/keyuri85/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/roxanejammet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kimcool/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/edkf/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/matkins/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alessandroribe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jacksonlatka/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lebronjennan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kostaspt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/karlkanall/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/moynihan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danpliego/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/saulihirvi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wesleytrankin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fjaguero/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bowbrick/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mashaaaaal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yassiryahya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dparrelli/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fotomagin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aka_james/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/denisepires/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iqbalperkasa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/martinansty/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jarsen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/r_oy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/justinrob/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gabrielrosser/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/malgordon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carlfairclough/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michaelabehsera/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pierrestoffe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/enjoythetau/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/loganjlambert/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rpeezy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/coreyginnivan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michalhron/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/msveet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lingeswaran/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kolsvein/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/peter576/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/reideiredale/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joeymurdah/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/raphaelnikson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mvdheuvel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/maxlinderman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jimmuirhead/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/begreative/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/frankiefreesbie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/robturlinckx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Talbi_ConSept/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/longlivemyword/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vanchesz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/maiklam/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hermanobrother/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rez___a/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gregsqueeb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/greenbes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_ragzor/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/anthonysukow/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fluidbrush/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dactrtr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jehnglynn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bergmartin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hugocornejo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_kkga/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dzantievm/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sawalazar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sovesove/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jonsgotwood/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/byryan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vytautas_a/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mizhgan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cicerobr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nilshelmersson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/d33pthought/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/davecraige/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nckjrvs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alexandermayes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jcubic/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/craigrcoles/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bagawarman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rob_thomas10/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cofla/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/maikelk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rtgibbons/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/russell_baylis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mhesslow/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/codysanfilippo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/webtanya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/madebybrenton/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dcalonaci/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/perfectflow/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jjsiii/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/saarabpreet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kumarrajan12123/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iamsteffen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/themikenagle/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ceekaytweet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/larrybolt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/conspirator/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dallasbpeters/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/n3dmax/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/terpimost/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kirillz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/byrnecore/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/j_drake_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/calebjoyce/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/russoedu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hoangloi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tobysaxon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gofrasdesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dimaposnyy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tjisousa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/okandungel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/billyroshan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/oskamaya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/motionthinks/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/knilob/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ashocka18/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marrimo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bartjo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/omnizya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ernestsemerda/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andreas_pr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/edgarchris99/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thomasgeisen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gseguin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joannefournier/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/demersdesigns/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adammarsbar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nasirwd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/n_tassone/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/javorszky/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/themrdave/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yecidsm/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nicollerich/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/canapud/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nicoleglynn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/judzhin_miles/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/designervzm/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kianoshp/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/evandrix/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alterchuca/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dhrubo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ma_tiax/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ssbb_me/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dorphern/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mauriolg/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bruno_mart/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mactopus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/the_winslet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joemdesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Shriiiiimp/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jacobbennett/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nfedoroff/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iamglimy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/allagringaus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aiiaiiaii/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/olaolusoga/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/buryaknick/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wim1k/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nicklacke/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/a1chapone/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/steynviljoen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/strikewan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ryankirkman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andrewabogado/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/doooon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jagan123/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ariffsetiawan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/elenadissi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mwarkentin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thierrymeier_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/r_garcia/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dmackerman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/borantula/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/konus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/spacewood_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ryuchi311/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/evanshajed/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tristanlegros/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shoaib253/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aislinnkelly/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/okcoker/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/timpetricola/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sunshinedgirl/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chadami/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aleclarsoniv/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nomidesigns/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/petebernardo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scottiedude/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/millinet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/imsoper/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/imammuht/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/benjamin_knight/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nepdud/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joki4/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lanceguyatt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bboy1895/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/amywebbb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rweve/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/haruintesettden/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ricburton/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nelshd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/batsirai/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/primozcigler/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jffgrdnr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/8d3k/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/geneseleznev/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/al_li/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/souperphly/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mslarkina/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/2fockus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cdavis565/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xiel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/turkutuuli/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/uxward/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lebinoclard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gauravjassal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/davidmerrique/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mdsisto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andrewofficer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kojourin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dnirmal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kevka/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mr_shiznit/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aluisio_azevedo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cloudstudio/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danvierich/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alexivanichkin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fran_mchamy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/perretmagali/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/betraydan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cadikkara/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/matbeedotcom/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeremyworboys/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bpartridge/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michaelkoper/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/silv3rgvn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alevizio/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/johnsmithagency/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lawlbwoy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vitor376/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/desastrozo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thimo_cz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jasonmarkjones/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lhausermann/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xravil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/guischmitt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vigobronx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/panghal0/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/miguelkooreman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/surgeonist/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/christianoliff/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/caspergrl/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iamkarna/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ipavelek/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pierre_nel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/y2graphic/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sterlingrules/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/elbuscainfo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bennyjien/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stushona/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/estebanuribe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/embrcecreations/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danillos/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/elliotlewis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/charlesrpratt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vladyn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/emmeffess/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carlosblanco_eu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/leonfedotov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rangafangs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chris_frees/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tgormtx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bryan_topham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jpscribbles/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mighty55/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carbontwelve/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/isaacfifth/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iamjdeleon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/snowwrite/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/barputro/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/drewbyreese/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sachacorazzi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bistrianiosip/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/magoo04/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pehamondello/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yayteejay/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/a_harris88/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/algunsanabria/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/zforrester/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ovall/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carlosjgsousa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/geobikas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ah_lice/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/looneydoodle/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nerdgr8/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ddggccaa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/zackeeler/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/normanbox/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/el_fuertisimo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ismail_biltagi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/juangomezw/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jnmnrd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/patrickcoombe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ryanjohnson_me/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/markolschesky/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeffgolenski/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kvasnic/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lindseyzilla/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gauchomatt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/afusinatto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kevinoh/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/okansurreel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adamawesomeface/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/emileboudeling/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/arishi_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/juanmamartinez/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wikiziner/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danthms/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mkginfo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/terrorpixel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/curiousonaut/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/prheemo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michaelcolenso/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/foczzi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/martip07/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thaodang17/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/johncafazza/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/robinlayfield/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/franciscoamk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/abdulhyeuk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marklamb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/edobene/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andresenfredrik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mikaeljorhult/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chrisslowik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vinciarts/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/meelford/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/elliotnolten/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yehudab/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vijaykarthik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bfrohs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/josep_martins/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/attacks/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sur4dye/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tumski/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/instalox/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mangosango/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/paulfarino/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kazaky999/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kiwiupover/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nvkznemo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tom_even/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ratbus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/woodsman001/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joshmedeski/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thewillbeard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/psaikali/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joe_black/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aleinadsays/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marcusgorillius/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hota_v/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jghyllebert/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shinze/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/janpalounek/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeremiespoken/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/her_ruu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dansowter/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/felipeapiress/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/magugzbrand2d/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/posterjob/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nathalie_fs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bobbytwoshoes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dreizle/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeremymouton/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/elisabethkjaer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/notbadart/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mohanrohith/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jlsolerdeltoro/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/itskawsar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/slowspock/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/zvchkelly/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wiljanslofstra/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/craighenneberry/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/trubeatto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/juaumlol/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/samscouto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/BenouarradeM/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gipsy_raf/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/netonet_il/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/arkokoley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/itsajimithing/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/smalonso/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/victordeanda/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_dwite_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/richardgarretts/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gregrwilkinson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/anatolinicolae/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lu4sh1i/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stefanotirloni/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ostirbu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/darcystonge/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/naitanamoreno/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michaelcomiskey/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adhiardana/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marcomano_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/davidcazalis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/falconerie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gregkilian/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bcrad/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bolzanmarco/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/low_res/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vlajki/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/petar_prog/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jonkspr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/akmalfikri/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mfacchinello/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/atanism/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/harry_sistalam/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/murrayswift/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bobwassermann/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gavr1l0/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/madshensel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mr_subtle/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/deviljho_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/salimianoff/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joetruesdell/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/twittypork/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/airskylar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dnezkumar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dgajjar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cherif_b/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/salvafc/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/louis_currie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/deeenright/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cybind/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/eyronn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vickyshits/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sweetdelisa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cboller1/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andresdjasso/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/melvindidit/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andysolomon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thaisselenator_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lvovenok/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/giuliusa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/belyaev_rs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/overcloacked/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kamal_chaneman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/incubo82/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hellofeverrrr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mhaligowski/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sunlandictwin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bu7921/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andytlaw/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeremery/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/finchjke/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/manigm/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/umurgdk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scottfeltham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ganserene/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mutu_krish/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jodytaggart/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ntfblog/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tanveerrao/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hfalucas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alxleroydeval/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kucingbelang4/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bargaorobalo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/colgruv/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stalewine/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kylefrost/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/baumannzone/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/angelcolberg/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sachingawas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jjshaw14/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ramanathan_pdy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/johndezember/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nilshoenson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brandonmorreale/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nutzumi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brandonflatsoda/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sergeyalmone/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/klefue/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kirangopal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/baumann_alex/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/matthewkay_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jay_wilburn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shesgared/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/apriendeau/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/johnriordan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wake_gs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aleksitappura/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/emsgulam/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xilantra/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/imomenui/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sircalebgrove/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/newbrushes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hsinyo23/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/m4rio/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/katiemdaly/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/s4f1/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ecommerceil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marlinjayakody/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/swooshycueb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sangdth/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/coderdiaz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bluefx_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vivekprvr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sasha_shestakov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/eugeneeweb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dgclegg/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/n1ght_coder/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dixchen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/blakehawksworth/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/trueblood_33/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hai_ninh_nguyen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marclgonzales/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yesmeck/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stephcoue/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/doronmalki/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ruehldesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/anasnakawa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kijanmaharjan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wearesavas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stefvdham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tweetubhai/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alecarpentier/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fiterik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/antonyryndya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/d00maz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/theonlyzeke/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/missaaamy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carlosm/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/manekenthe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/reetajayendra/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeremyshimko/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/justinrgraham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stefanozoffoli/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/overra/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mrebay007/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shvelo96/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pyronite/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thedjpetersen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rtyukmaev/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_williamguerra/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/albertaugustin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vikashpathak18/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kevinjohndayy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vj_demien/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/colirpixoil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/goddardlewis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/laasli/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jqiuss/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/heycamtaylor/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nastya_mane/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mastermindesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ccinojasso1/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nyancecom/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sandywoodruff/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bighanddesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sbtransparent/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aviddayentonbay/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/richwild/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kaysix_dizzy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tur8le/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/seyedhossein1/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/privetwagner/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/emmandenn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dev_essentials/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jmfsocial/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_yardenoon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mateaodviteza/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/weavermedia/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mufaddal_mw/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hafeeskhan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ashernatali/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sulaqo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/eddiechen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/josecarlospsh/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vm_f/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/enricocicconi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danmartin70/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gmourier/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/donjain/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mrxloka/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_pedropinho/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/eitarafa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/oscarowusu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ralph_lam/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/panchajanyag/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/woodydotmx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jerrybai1907/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marshallchen_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xamorep/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aio___/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chaabane_wail/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/txcx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/akashsharma39/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/falling_soul/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sainraja/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mugukamil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/johannesneu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/markwienands/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/karthipanraj/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/balakayuriy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alan_zhang_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/layerssss/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kaspernordkvist/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mirfanqureshi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hanna_smi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/VMilescu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aeon56/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/m_kalibry/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sreejithexp/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dicesales/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dhoot_amit/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/smenov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lonesomelemon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vladimirdevic/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joelcipriano/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/haligaliharun/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/buleswapnil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/serefka/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ifarafonow/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vikasvinfotech/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/urrutimeoli/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/areandacom/128.jpg"
];

},{}],199:[function(require,module,exports){
module["exports"] = [
  "com",
  "biz",
  "info",
  "name",
  "net",
  "org"
];

},{}],200:[function(require,module,exports){
module["exports"] = [
  "example.org",
  "example.com",
  "example.net"
];

},{}],201:[function(require,module,exports){
arguments[4][72][0].apply(exports,arguments)
},{"dup":72}],202:[function(require,module,exports){
var internet = {};
module['exports'] = internet;
internet.free_email = require("./free_email");
internet.example_email = require("./example_email");
internet.domain_suffix = require("./domain_suffix");
internet.avatar_uri = require("./avatar_uri");

},{"./avatar_uri":198,"./domain_suffix":199,"./example_email":200,"./free_email":201}],203:[function(require,module,exports){
var lorem = {};
module['exports'] = lorem;
lorem.words = require("./words");
lorem.supplemental = require("./supplemental");

},{"./supplemental":204,"./words":205}],204:[function(require,module,exports){
module["exports"] = [
  "abbas",
  "abduco",
  "abeo",
  "abscido",
  "absconditus",
  "absens",
  "absorbeo",
  "absque",
  "abstergo",
  "absum",
  "abundans",
  "abutor",
  "accedo",
  "accendo",
  "acceptus",
  "accipio",
  "accommodo",
  "accusator",
  "acer",
  "acerbitas",
  "acervus",
  "acidus",
  "acies",
  "acquiro",
  "acsi",
  "adamo",
  "adaugeo",
  "addo",
  "adduco",
  "ademptio",
  "adeo",
  "adeptio",
  "adfectus",
  "adfero",
  "adficio",
  "adflicto",
  "adhaero",
  "adhuc",
  "adicio",
  "adimpleo",
  "adinventitias",
  "adipiscor",
  "adiuvo",
  "administratio",
  "admiratio",
  "admitto",
  "admoneo",
  "admoveo",
  "adnuo",
  "adopto",
  "adsidue",
  "adstringo",
  "adsuesco",
  "adsum",
  "adulatio",
  "adulescens",
  "adultus",
  "aduro",
  "advenio",
  "adversus",
  "advoco",
  "aedificium",
  "aeger",
  "aegre",
  "aegrotatio",
  "aegrus",
  "aeneus",
  "aequitas",
  "aequus",
  "aer",
  "aestas",
  "aestivus",
  "aestus",
  "aetas",
  "aeternus",
  "ager",
  "aggero",
  "aggredior",
  "agnitio",
  "agnosco",
  "ago",
  "ait",
  "aiunt",
  "alienus",
  "alii",
  "alioqui",
  "aliqua",
  "alius",
  "allatus",
  "alo",
  "alter",
  "altus",
  "alveus",
  "amaritudo",
  "ambitus",
  "ambulo",
  "amicitia",
  "amiculum",
  "amissio",
  "amita",
  "amitto",
  "amo",
  "amor",
  "amoveo",
  "amplexus",
  "amplitudo",
  "amplus",
  "ancilla",
  "angelus",
  "angulus",
  "angustus",
  "animadverto",
  "animi",
  "animus",
  "annus",
  "anser",
  "ante",
  "antea",
  "antepono",
  "antiquus",
  "aperio",
  "aperte",
  "apostolus",
  "apparatus",
  "appello",
  "appono",
  "appositus",
  "approbo",
  "apto",
  "aptus",
  "apud",
  "aqua",
  "ara",
  "aranea",
  "arbitro",
  "arbor",
  "arbustum",
  "arca",
  "arceo",
  "arcesso",
  "arcus",
  "argentum",
  "argumentum",
  "arguo",
  "arma",
  "armarium",
  "armo",
  "aro",
  "ars",
  "articulus",
  "artificiose",
  "arto",
  "arx",
  "ascisco",
  "ascit",
  "asper",
  "aspicio",
  "asporto",
  "assentator",
  "astrum",
  "atavus",
  "ater",
  "atqui",
  "atrocitas",
  "atrox",
  "attero",
  "attollo",
  "attonbitus",
  "auctor",
  "auctus",
  "audacia",
  "audax",
  "audentia",
  "audeo",
  "audio",
  "auditor",
  "aufero",
  "aureus",
  "auris",
  "aurum",
  "aut",
  "autem",
  "autus",
  "auxilium",
  "avaritia",
  "avarus",
  "aveho",
  "averto",
  "avoco",
  "baiulus",
  "balbus",
  "barba",
  "bardus",
  "basium",
  "beatus",
  "bellicus",
  "bellum",
  "bene",
  "beneficium",
  "benevolentia",
  "benigne",
  "bestia",
  "bibo",
  "bis",
  "blandior",
  "bonus",
  "bos",
  "brevis",
  "cado",
  "caecus",
  "caelestis",
  "caelum",
  "calamitas",
  "calcar",
  "calco",
  "calculus",
  "callide",
  "campana",
  "candidus",
  "canis",
  "canonicus",
  "canto",
  "capillus",
  "capio",
  "capitulus",
  "capto",
  "caput",
  "carbo",
  "carcer",
  "careo",
  "caries",
  "cariosus",
  "caritas",
  "carmen",
  "carpo",
  "carus",
  "casso",
  "caste",
  "casus",
  "catena",
  "caterva",
  "cattus",
  "cauda",
  "causa",
  "caute",
  "caveo",
  "cavus",
  "cedo",
  "celebrer",
  "celer",
  "celo",
  "cena",
  "cenaculum",
  "ceno",
  "censura",
  "centum",
  "cerno",
  "cernuus",
  "certe",
  "certo",
  "certus",
  "cervus",
  "cetera",
  "charisma",
  "chirographum",
  "cibo",
  "cibus",
  "cicuta",
  "cilicium",
  "cimentarius",
  "ciminatio",
  "cinis",
  "circumvenio",
  "cito",
  "civis",
  "civitas",
  "clam",
  "clamo",
  "claro",
  "clarus",
  "claudeo",
  "claustrum",
  "clementia",
  "clibanus",
  "coadunatio",
  "coaegresco",
  "coepi",
  "coerceo",
  "cogito",
  "cognatus",
  "cognomen",
  "cogo",
  "cohaero",
  "cohibeo",
  "cohors",
  "colligo",
  "colloco",
  "collum",
  "colo",
  "color",
  "coma",
  "combibo",
  "comburo",
  "comedo",
  "comes",
  "cometes",
  "comis",
  "comitatus",
  "commemoro",
  "comminor",
  "commodo",
  "communis",
  "comparo",
  "compello",
  "complectus",
  "compono",
  "comprehendo",
  "comptus",
  "conatus",
  "concedo",
  "concido",
  "conculco",
  "condico",
  "conduco",
  "confero",
  "confido",
  "conforto",
  "confugo",
  "congregatio",
  "conicio",
  "coniecto",
  "conitor",
  "coniuratio",
  "conor",
  "conqueror",
  "conscendo",
  "conservo",
  "considero",
  "conspergo",
  "constans",
  "consuasor",
  "contabesco",
  "contego",
  "contigo",
  "contra",
  "conturbo",
  "conventus",
  "convoco",
  "copia",
  "copiose",
  "cornu",
  "corona",
  "corpus",
  "correptius",
  "corrigo",
  "corroboro",
  "corrumpo",
  "coruscus",
  "cotidie",
  "crapula",
  "cras",
  "crastinus",
  "creator",
  "creber",
  "crebro",
  "credo",
  "creo",
  "creptio",
  "crepusculum",
  "cresco",
  "creta",
  "cribro",
  "crinis",
  "cruciamentum",
  "crudelis",
  "cruentus",
  "crur",
  "crustulum",
  "crux",
  "cubicularis",
  "cubitum",
  "cubo",
  "cui",
  "cuius",
  "culpa",
  "culpo",
  "cultellus",
  "cultura",
  "cum",
  "cunabula",
  "cunae",
  "cunctatio",
  "cupiditas",
  "cupio",
  "cuppedia",
  "cupressus",
  "cur",
  "cura",
  "curatio",
  "curia",
  "curiositas",
  "curis",
  "curo",
  "curriculum",
  "currus",
  "cursim",
  "curso",
  "cursus",
  "curto",
  "curtus",
  "curvo",
  "curvus",
  "custodia",
  "damnatio",
  "damno",
  "dapifer",
  "debeo",
  "debilito",
  "decens",
  "decerno",
  "decet",
  "decimus",
  "decipio",
  "decor",
  "decretum",
  "decumbo",
  "dedecor",
  "dedico",
  "deduco",
  "defaeco",
  "defendo",
  "defero",
  "defessus",
  "defetiscor",
  "deficio",
  "defigo",
  "defleo",
  "defluo",
  "defungo",
  "degenero",
  "degero",
  "degusto",
  "deinde",
  "delectatio",
  "delego",
  "deleo",
  "delibero",
  "delicate",
  "delinquo",
  "deludo",
  "demens",
  "demergo",
  "demitto",
  "demo",
  "demonstro",
  "demoror",
  "demulceo",
  "demum",
  "denego",
  "denique",
  "dens",
  "denuncio",
  "denuo",
  "deorsum",
  "depereo",
  "depono",
  "depopulo",
  "deporto",
  "depraedor",
  "deprecator",
  "deprimo",
  "depromo",
  "depulso",
  "deputo",
  "derelinquo",
  "derideo",
  "deripio",
  "desidero",
  "desino",
  "desipio",
  "desolo",
  "desparatus",
  "despecto",
  "despirmatio",
  "infit",
  "inflammatio",
  "paens",
  "patior",
  "patria",
  "patrocinor",
  "patruus",
  "pauci",
  "paulatim",
  "pauper",
  "pax",
  "peccatus",
  "pecco",
  "pecto",
  "pectus",
  "pecunia",
  "pecus",
  "peior",
  "pel",
  "ocer",
  "socius",
  "sodalitas",
  "sol",
  "soleo",
  "solio",
  "solitudo",
  "solium",
  "sollers",
  "sollicito",
  "solum",
  "solus",
  "solutio",
  "solvo",
  "somniculosus",
  "somnus",
  "sonitus",
  "sono",
  "sophismata",
  "sopor",
  "sordeo",
  "sortitus",
  "spargo",
  "speciosus",
  "spectaculum",
  "speculum",
  "sperno",
  "spero",
  "spes",
  "spiculum",
  "spiritus",
  "spoliatio",
  "sponte",
  "stabilis",
  "statim",
  "statua",
  "stella",
  "stillicidium",
  "stipes",
  "stips",
  "sto",
  "strenuus",
  "strues",
  "studio",
  "stultus",
  "suadeo",
  "suasoria",
  "sub",
  "subito",
  "subiungo",
  "sublime",
  "subnecto",
  "subseco",
  "substantia",
  "subvenio",
  "succedo",
  "succurro",
  "sufficio",
  "suffoco",
  "suffragium",
  "suggero",
  "sui",
  "sulum",
  "sum",
  "summa",
  "summisse",
  "summopere",
  "sumo",
  "sumptus",
  "supellex",
  "super",
  "suppellex",
  "supplanto",
  "suppono",
  "supra",
  "surculus",
  "surgo",
  "sursum",
  "suscipio",
  "suspendo",
  "sustineo",
  "suus",
  "synagoga",
  "tabella",
  "tabernus",
  "tabesco",
  "tabgo",
  "tabula",
  "taceo",
  "tactus",
  "taedium",
  "talio",
  "talis",
  "talus",
  "tam",
  "tamdiu",
  "tamen",
  "tametsi",
  "tamisium",
  "tamquam",
  "tandem",
  "tantillus",
  "tantum",
  "tardus",
  "tego",
  "temeritas",
  "temperantia",
  "templum",
  "temptatio",
  "tempus",
  "tenax",
  "tendo",
  "teneo",
  "tener",
  "tenuis",
  "tenus",
  "tepesco",
  "tepidus",
  "ter",
  "terebro",
  "teres",
  "terga",
  "tergeo",
  "tergiversatio",
  "tergo",
  "tergum",
  "termes",
  "terminatio",
  "tero",
  "terra",
  "terreo",
  "territo",
  "terror",
  "tersus",
  "tertius",
  "testimonium",
  "texo",
  "textilis",
  "textor",
  "textus",
  "thalassinus",
  "theatrum",
  "theca",
  "thema",
  "theologus",
  "thermae",
  "thesaurus",
  "thesis",
  "thorax",
  "thymbra",
  "thymum",
  "tibi",
  "timidus",
  "timor",
  "titulus",
  "tolero",
  "tollo",
  "tondeo",
  "tonsor",
  "torqueo",
  "torrens",
  "tot",
  "totidem",
  "toties",
  "totus",
  "tracto",
  "trado",
  "traho",
  "trans",
  "tredecim",
  "tremo",
  "trepide",
  "tres",
  "tribuo",
  "tricesimus",
  "triduana",
  "triginta",
  "tripudio",
  "tristis",
  "triumphus",
  "trucido",
  "truculenter",
  "tubineus",
  "tui",
  "tum",
  "tumultus",
  "tunc",
  "turba",
  "turbo",
  "turpe",
  "turpis",
  "tutamen",
  "tutis",
  "tyrannus",
  "uberrime",
  "ubi",
  "ulciscor",
  "ullus",
  "ulterius",
  "ultio",
  "ultra",
  "umbra",
  "umerus",
  "umquam",
  "una",
  "unde",
  "undique",
  "universe",
  "unus",
  "urbanus",
  "urbs",
  "uredo",
  "usitas",
  "usque",
  "ustilo",
  "ustulo",
  "usus",
  "uter",
  "uterque",
  "utilis",
  "utique",
  "utor",
  "utpote",
  "utrimque",
  "utroque",
  "utrum",
  "uxor",
  "vaco",
  "vacuus",
  "vado",
  "vae",
  "valde",
  "valens",
  "valeo",
  "valetudo",
  "validus",
  "vallum",
  "vapulus",
  "varietas",
  "varius",
  "vehemens",
  "vel",
  "velociter",
  "velum",
  "velut",
  "venia",
  "venio",
  "ventito",
  "ventosus",
  "ventus",
  "venustas",
  "ver",
  "verbera",
  "verbum",
  "vere",
  "verecundia",
  "vereor",
  "vergo",
  "veritas",
  "vero",
  "versus",
  "verto",
  "verumtamen",
  "verus",
  "vesco",
  "vesica",
  "vesper",
  "vespillo",
  "vester",
  "vestigium",
  "vestrum",
  "vetus",
  "via",
  "vicinus",
  "vicissitudo",
  "victoria",
  "victus",
  "videlicet",
  "video",
  "viduata",
  "viduo",
  "vigilo",
  "vigor",
  "vilicus",
  "vilis",
  "vilitas",
  "villa",
  "vinco",
  "vinculum",
  "vindico",
  "vinitor",
  "vinum",
  "vir",
  "virga",
  "virgo",
  "viridis",
  "viriliter",
  "virtus",
  "vis",
  "viscus",
  "vita",
  "vitiosus",
  "vitium",
  "vito",
  "vivo",
  "vix",
  "vobis",
  "vociferor",
  "voco",
  "volaticus",
  "volo",
  "volubilis",
  "voluntarius",
  "volup",
  "volutabrum",
  "volva",
  "vomer",
  "vomica",
  "vomito",
  "vorago",
  "vorax",
  "voro",
  "vos",
  "votum",
  "voveo",
  "vox",
  "vulariter",
  "vulgaris",
  "vulgivagus",
  "vulgo",
  "vulgus",
  "vulnero",
  "vulnus",
  "vulpes",
  "vulticulus",
  "vultuosus",
  "xiphias"
];

},{}],205:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"dup":75}],206:[function(require,module,exports){
module["exports"] = [
  "Aaliyah",
  "Aaron",
  "Abagail",
  "Abbey",
  "Abbie",
  "Abbigail",
  "Abby",
  "Abdiel",
  "Abdul",
  "Abdullah",
  "Abe",
  "Abel",
  "Abelardo",
  "Abigail",
  "Abigale",
  "Abigayle",
  "Abner",
  "Abraham",
  "Ada",
  "Adah",
  "Adalberto",
  "Adaline",
  "Adam",
  "Adan",
  "Addie",
  "Addison",
  "Adela",
  "Adelbert",
  "Adele",
  "Adelia",
  "Adeline",
  "Adell",
  "Adella",
  "Adelle",
  "Aditya",
  "Adolf",
  "Adolfo",
  "Adolph",
  "Adolphus",
  "Adonis",
  "Adrain",
  "Adrian",
  "Adriana",
  "Adrianna",
  "Adriel",
  "Adrien",
  "Adrienne",
  "Afton",
  "Aglae",
  "Agnes",
  "Agustin",
  "Agustina",
  "Ahmad",
  "Ahmed",
  "Aida",
  "Aidan",
  "Aiden",
  "Aileen",
  "Aimee",
  "Aisha",
  "Aiyana",
  "Akeem",
  "Al",
  "Alaina",
  "Alan",
  "Alana",
  "Alanis",
  "Alanna",
  "Alayna",
  "Alba",
  "Albert",
  "Alberta",
  "Albertha",
  "Alberto",
  "Albin",
  "Albina",
  "Alda",
  "Alden",
  "Alec",
  "Aleen",
  "Alejandra",
  "Alejandrin",
  "Alek",
  "Alena",
  "Alene",
  "Alessandra",
  "Alessandro",
  "Alessia",
  "Aletha",
  "Alex",
  "Alexa",
  "Alexander",
  "Alexandra",
  "Alexandre",
  "Alexandrea",
  "Alexandria",
  "Alexandrine",
  "Alexandro",
  "Alexane",
  "Alexanne",
  "Alexie",
  "Alexis",
  "Alexys",
  "Alexzander",
  "Alf",
  "Alfonso",
  "Alfonzo",
  "Alford",
  "Alfred",
  "Alfreda",
  "Alfredo",
  "Ali",
  "Alia",
  "Alice",
  "Alicia",
  "Alisa",
  "Alisha",
  "Alison",
  "Alivia",
  "Aliya",
  "Aliyah",
  "Aliza",
  "Alize",
  "Allan",
  "Allen",
  "Allene",
  "Allie",
  "Allison",
  "Ally",
  "Alphonso",
  "Alta",
  "Althea",
  "Alva",
  "Alvah",
  "Alvena",
  "Alvera",
  "Alverta",
  "Alvina",
  "Alvis",
  "Alyce",
  "Alycia",
  "Alysa",
  "Alysha",
  "Alyson",
  "Alysson",
  "Amalia",
  "Amanda",
  "Amani",
  "Amara",
  "Amari",
  "Amaya",
  "Amber",
  "Ambrose",
  "Amelia",
  "Amelie",
  "Amely",
  "America",
  "Americo",
  "Amie",
  "Amina",
  "Amir",
  "Amira",
  "Amiya",
  "Amos",
  "Amparo",
  "Amy",
  "Amya",
  "Ana",
  "Anabel",
  "Anabelle",
  "Anahi",
  "Anais",
  "Anastacio",
  "Anastasia",
  "Anderson",
  "Andre",
  "Andreane",
  "Andreanne",
  "Andres",
  "Andrew",
  "Andy",
  "Angel",
  "Angela",
  "Angelica",
  "Angelina",
  "Angeline",
  "Angelita",
  "Angelo",
  "Angie",
  "Angus",
  "Anibal",
  "Anika",
  "Anissa",
  "Anita",
  "Aniya",
  "Aniyah",
  "Anjali",
  "Anna",
  "Annabel",
  "Annabell",
  "Annabelle",
  "Annalise",
  "Annamae",
  "Annamarie",
  "Anne",
  "Annetta",
  "Annette",
  "Annie",
  "Ansel",
  "Ansley",
  "Anthony",
  "Antoinette",
  "Antone",
  "Antonetta",
  "Antonette",
  "Antonia",
  "Antonietta",
  "Antonina",
  "Antonio",
  "Antwan",
  "Antwon",
  "Anya",
  "April",
  "Ara",
  "Araceli",
  "Aracely",
  "Arch",
  "Archibald",
  "Ardella",
  "Arden",
  "Ardith",
  "Arely",
  "Ari",
  "Ariane",
  "Arianna",
  "Aric",
  "Ariel",
  "Arielle",
  "Arjun",
  "Arlene",
  "Arlie",
  "Arlo",
  "Armand",
  "Armando",
  "Armani",
  "Arnaldo",
  "Arne",
  "Arno",
  "Arnold",
  "Arnoldo",
  "Arnulfo",
  "Aron",
  "Art",
  "Arthur",
  "Arturo",
  "Arvel",
  "Arvid",
  "Arvilla",
  "Aryanna",
  "Asa",
  "Asha",
  "Ashlee",
  "Ashleigh",
  "Ashley",
  "Ashly",
  "Ashlynn",
  "Ashton",
  "Ashtyn",
  "Asia",
  "Assunta",
  "Astrid",
  "Athena",
  "Aubree",
  "Aubrey",
  "Audie",
  "Audra",
  "Audreanne",
  "Audrey",
  "August",
  "Augusta",
  "Augustine",
  "Augustus",
  "Aurelia",
  "Aurelie",
  "Aurelio",
  "Aurore",
  "Austen",
  "Austin",
  "Austyn",
  "Autumn",
  "Ava",
  "Avery",
  "Avis",
  "Axel",
  "Ayana",
  "Ayden",
  "Ayla",
  "Aylin",
  "Baby",
  "Bailee",
  "Bailey",
  "Barbara",
  "Barney",
  "Baron",
  "Barrett",
  "Barry",
  "Bart",
  "Bartholome",
  "Barton",
  "Baylee",
  "Beatrice",
  "Beau",
  "Beaulah",
  "Bell",
  "Bella",
  "Belle",
  "Ben",
  "Benedict",
  "Benjamin",
  "Bennett",
  "Bennie",
  "Benny",
  "Benton",
  "Berenice",
  "Bernadette",
  "Bernadine",
  "Bernard",
  "Bernardo",
  "Berneice",
  "Bernhard",
  "Bernice",
  "Bernie",
  "Berniece",
  "Bernita",
  "Berry",
  "Bert",
  "Berta",
  "Bertha",
  "Bertram",
  "Bertrand",
  "Beryl",
  "Bessie",
  "Beth",
  "Bethany",
  "Bethel",
  "Betsy",
  "Bette",
  "Bettie",
  "Betty",
  "Bettye",
  "Beulah",
  "Beverly",
  "Bianka",
  "Bill",
  "Billie",
  "Billy",
  "Birdie",
  "Blair",
  "Blaise",
  "Blake",
  "Blanca",
  "Blanche",
  "Blaze",
  "Bo",
  "Bobbie",
  "Bobby",
  "Bonita",
  "Bonnie",
  "Boris",
  "Boyd",
  "Brad",
  "Braden",
  "Bradford",
  "Bradley",
  "Bradly",
  "Brady",
  "Braeden",
  "Brain",
  "Brandi",
  "Brando",
  "Brandon",
  "Brandt",
  "Brandy",
  "Brandyn",
  "Brannon",
  "Branson",
  "Brant",
  "Braulio",
  "Braxton",
  "Brayan",
  "Breana",
  "Breanna",
  "Breanne",
  "Brenda",
  "Brendan",
  "Brenden",
  "Brendon",
  "Brenna",
  "Brennan",
  "Brennon",
  "Brent",
  "Bret",
  "Brett",
  "Bria",
  "Brian",
  "Briana",
  "Brianne",
  "Brice",
  "Bridget",
  "Bridgette",
  "Bridie",
  "Brielle",
  "Brigitte",
  "Brionna",
  "Brisa",
  "Britney",
  "Brittany",
  "Brock",
  "Broderick",
  "Brody",
  "Brook",
  "Brooke",
  "Brooklyn",
  "Brooks",
  "Brown",
  "Bruce",
  "Bryana",
  "Bryce",
  "Brycen",
  "Bryon",
  "Buck",
  "Bud",
  "Buddy",
  "Buford",
  "Bulah",
  "Burdette",
  "Burley",
  "Burnice",
  "Buster",
  "Cade",
  "Caden",
  "Caesar",
  "Caitlyn",
  "Cale",
  "Caleb",
  "Caleigh",
  "Cali",
  "Calista",
  "Callie",
  "Camden",
  "Cameron",
  "Camila",
  "Camilla",
  "Camille",
  "Camren",
  "Camron",
  "Camryn",
  "Camylle",
  "Candace",
  "Candelario",
  "Candice",
  "Candida",
  "Candido",
  "Cara",
  "Carey",
  "Carissa",
  "Carlee",
  "Carleton",
  "Carley",
  "Carli",
  "Carlie",
  "Carlo",
  "Carlos",
  "Carlotta",
  "Carmel",
  "Carmela",
  "Carmella",
  "Carmelo",
  "Carmen",
  "Carmine",
  "Carol",
  "Carolanne",
  "Carole",
  "Carolina",
  "Caroline",
  "Carolyn",
  "Carolyne",
  "Carrie",
  "Carroll",
  "Carson",
  "Carter",
  "Cary",
  "Casandra",
  "Casey",
  "Casimer",
  "Casimir",
  "Casper",
  "Cassandra",
  "Cassandre",
  "Cassidy",
  "Cassie",
  "Catalina",
  "Caterina",
  "Catharine",
  "Catherine",
  "Cathrine",
  "Cathryn",
  "Cathy",
  "Cayla",
  "Ceasar",
  "Cecelia",
  "Cecil",
  "Cecile",
  "Cecilia",
  "Cedrick",
  "Celestine",
  "Celestino",
  "Celia",
  "Celine",
  "Cesar",
  "Chad",
  "Chadd",
  "Chadrick",
  "Chaim",
  "Chance",
  "Chandler",
  "Chanel",
  "Chanelle",
  "Charity",
  "Charlene",
  "Charles",
  "Charley",
  "Charlie",
  "Charlotte",
  "Chase",
  "Chasity",
  "Chauncey",
  "Chaya",
  "Chaz",
  "Chelsea",
  "Chelsey",
  "Chelsie",
  "Chesley",
  "Chester",
  "Chet",
  "Cheyanne",
  "Cheyenne",
  "Chloe",
  "Chris",
  "Christ",
  "Christa",
  "Christelle",
  "Christian",
  "Christiana",
  "Christina",
  "Christine",
  "Christop",
  "Christophe",
  "Christopher",
  "Christy",
  "Chyna",
  "Ciara",
  "Cicero",
  "Cielo",
  "Cierra",
  "Cindy",
  "Citlalli",
  "Clair",
  "Claire",
  "Clara",
  "Clarabelle",
  "Clare",
  "Clarissa",
  "Clark",
  "Claud",
  "Claude",
  "Claudia",
  "Claudie",
  "Claudine",
  "Clay",
  "Clemens",
  "Clement",
  "Clementina",
  "Clementine",
  "Clemmie",
  "Cleo",
  "Cleora",
  "Cleta",
  "Cletus",
  "Cleve",
  "Cleveland",
  "Clifford",
  "Clifton",
  "Clint",
  "Clinton",
  "Clotilde",
  "Clovis",
  "Cloyd",
  "Clyde",
  "Coby",
  "Cody",
  "Colby",
  "Cole",
  "Coleman",
  "Colin",
  "Colleen",
  "Collin",
  "Colt",
  "Colten",
  "Colton",
  "Columbus",
  "Concepcion",
  "Conner",
  "Connie",
  "Connor",
  "Conor",
  "Conrad",
  "Constance",
  "Constantin",
  "Consuelo",
  "Cooper",
  "Cora",
  "Coralie",
  "Corbin",
  "Cordelia",
  "Cordell",
  "Cordia",
  "Cordie",
  "Corene",
  "Corine",
  "Cornelius",
  "Cornell",
  "Corrine",
  "Cortez",
  "Cortney",
  "Cory",
  "Coty",
  "Courtney",
  "Coy",
  "Craig",
  "Crawford",
  "Creola",
  "Cristal",
  "Cristian",
  "Cristina",
  "Cristobal",
  "Cristopher",
  "Cruz",
  "Crystal",
  "Crystel",
  "Cullen",
  "Curt",
  "Curtis",
  "Cydney",
  "Cynthia",
  "Cyril",
  "Cyrus",
  "Dagmar",
  "Dahlia",
  "Daija",
  "Daisha",
  "Daisy",
  "Dakota",
  "Dale",
  "Dallas",
  "Dallin",
  "Dalton",
  "Damaris",
  "Dameon",
  "Damian",
  "Damien",
  "Damion",
  "Damon",
  "Dan",
  "Dana",
  "Dandre",
  "Dane",
  "D'angelo",
  "Dangelo",
  "Danial",
  "Daniela",
  "Daniella",
  "Danielle",
  "Danika",
  "Dannie",
  "Danny",
  "Dante",
  "Danyka",
  "Daphne",
  "Daphnee",
  "Daphney",
  "Darby",
  "Daren",
  "Darian",
  "Dariana",
  "Darien",
  "Dario",
  "Darion",
  "Darius",
  "Darlene",
  "Daron",
  "Darrel",
  "Darrell",
  "Darren",
  "Darrick",
  "Darrin",
  "Darrion",
  "Darron",
  "Darryl",
  "Darwin",
  "Daryl",
  "Dashawn",
  "Dasia",
  "Dave",
  "David",
  "Davin",
  "Davion",
  "Davon",
  "Davonte",
  "Dawn",
  "Dawson",
  "Dax",
  "Dayana",
  "Dayna",
  "Dayne",
  "Dayton",
  "Dean",
  "Deangelo",
  "Deanna",
  "Deborah",
  "Declan",
  "Dedric",
  "Dedrick",
  "Dee",
  "Deion",
  "Deja",
  "Dejah",
  "Dejon",
  "Dejuan",
  "Delaney",
  "Delbert",
  "Delfina",
  "Delia",
  "Delilah",
  "Dell",
  "Della",
  "Delmer",
  "Delores",
  "Delpha",
  "Delphia",
  "Delphine",
  "Delta",
  "Demarco",
  "Demarcus",
  "Demario",
  "Demetris",
  "Demetrius",
  "Demond",
  "Dena",
  "Denis",
  "Dennis",
  "Deon",
  "Deondre",
  "Deontae",
  "Deonte",
  "Dereck",
  "Derek",
  "Derick",
  "Deron",
  "Derrick",
  "Deshaun",
  "Deshawn",
  "Desiree",
  "Desmond",
  "Dessie",
  "Destany",
  "Destin",
  "Destinee",
  "Destiney",
  "Destini",
  "Destiny",
  "Devan",
  "Devante",
  "Deven",
  "Devin",
  "Devon",
  "Devonte",
  "Devyn",
  "Dewayne",
  "Dewitt",
  "Dexter",
  "Diamond",
  "Diana",
  "Dianna",
  "Diego",
  "Dillan",
  "Dillon",
  "Dimitri",
  "Dina",
  "Dino",
  "Dion",
  "Dixie",
  "Dock",
  "Dolly",
  "Dolores",
  "Domenic",
  "Domenica",
  "Domenick",
  "Domenico",
  "Domingo",
  "Dominic",
  "Dominique",
  "Don",
  "Donald",
  "Donato",
  "Donavon",
  "Donna",
  "Donnell",
  "Donnie",
  "Donny",
  "Dora",
  "Dorcas",
  "Dorian",
  "Doris",
  "Dorothea",
  "Dorothy",
  "Dorris",
  "Dortha",
  "Dorthy",
  "Doug",
  "Douglas",
  "Dovie",
  "Doyle",
  "Drake",
  "Drew",
  "Duane",
  "Dudley",
  "Dulce",
  "Duncan",
  "Durward",
  "Dustin",
  "Dusty",
  "Dwight",
  "Dylan",
  "Earl",
  "Earlene",
  "Earline",
  "Earnest",
  "Earnestine",
  "Easter",
  "Easton",
  "Ebba",
  "Ebony",
  "Ed",
  "Eda",
  "Edd",
  "Eddie",
  "Eden",
  "Edgar",
  "Edgardo",
  "Edison",
  "Edmond",
  "Edmund",
  "Edna",
  "Eduardo",
  "Edward",
  "Edwardo",
  "Edwin",
  "Edwina",
  "Edyth",
  "Edythe",
  "Effie",
  "Efrain",
  "Efren",
  "Eileen",
  "Einar",
  "Eino",
  "Eladio",
  "Elaina",
  "Elbert",
  "Elda",
  "Eldon",
  "Eldora",
  "Eldred",
  "Eldridge",
  "Eleanora",
  "Eleanore",
  "Eleazar",
  "Electa",
  "Elena",
  "Elenor",
  "Elenora",
  "Eleonore",
  "Elfrieda",
  "Eli",
  "Elian",
  "Eliane",
  "Elias",
  "Eliezer",
  "Elijah",
  "Elinor",
  "Elinore",
  "Elisa",
  "Elisabeth",
  "Elise",
  "Eliseo",
  "Elisha",
  "Elissa",
  "Eliza",
  "Elizabeth",
  "Ella",
  "Ellen",
  "Ellie",
  "Elliot",
  "Elliott",
  "Ellis",
  "Ellsworth",
  "Elmer",
  "Elmira",
  "Elmo",
  "Elmore",
  "Elna",
  "Elnora",
  "Elody",
  "Eloisa",
  "Eloise",
  "Elouise",
  "Eloy",
  "Elroy",
  "Elsa",
  "Else",
  "Elsie",
  "Elta",
  "Elton",
  "Elva",
  "Elvera",
  "Elvie",
  "Elvis",
  "Elwin",
  "Elwyn",
  "Elyse",
  "Elyssa",
  "Elza",
  "Emanuel",
  "Emelia",
  "Emelie",
  "Emely",
  "Emerald",
  "Emerson",
  "Emery",
  "Emie",
  "Emil",
  "Emile",
  "Emilia",
  "Emiliano",
  "Emilie",
  "Emilio",
  "Emily",
  "Emma",
  "Emmalee",
  "Emmanuel",
  "Emmanuelle",
  "Emmet",
  "Emmett",
  "Emmie",
  "Emmitt",
  "Emmy",
  "Emory",
  "Ena",
  "Enid",
  "Enoch",
  "Enola",
  "Enos",
  "Enrico",
  "Enrique",
  "Ephraim",
  "Era",
  "Eriberto",
  "Eric",
  "Erica",
  "Erich",
  "Erick",
  "Ericka",
  "Erik",
  "Erika",
  "Erin",
  "Erling",
  "Erna",
  "Ernest",
  "Ernestina",
  "Ernestine",
  "Ernesto",
  "Ernie",
  "Ervin",
  "Erwin",
  "Eryn",
  "Esmeralda",
  "Esperanza",
  "Esta",
  "Esteban",
  "Estefania",
  "Estel",
  "Estell",
  "Estella",
  "Estelle",
  "Estevan",
  "Esther",
  "Estrella",
  "Etha",
  "Ethan",
  "Ethel",
  "Ethelyn",
  "Ethyl",
  "Ettie",
  "Eudora",
  "Eugene",
  "Eugenia",
  "Eula",
  "Eulah",
  "Eulalia",
  "Euna",
  "Eunice",
  "Eusebio",
  "Eva",
  "Evalyn",
  "Evan",
  "Evangeline",
  "Evans",
  "Eve",
  "Eveline",
  "Evelyn",
  "Everardo",
  "Everett",
  "Everette",
  "Evert",
  "Evie",
  "Ewald",
  "Ewell",
  "Ezekiel",
  "Ezequiel",
  "Ezra",
  "Fabian",
  "Fabiola",
  "Fae",
  "Fannie",
  "Fanny",
  "Fatima",
  "Faustino",
  "Fausto",
  "Favian",
  "Fay",
  "Faye",
  "Federico",
  "Felicia",
  "Felicita",
  "Felicity",
  "Felipa",
  "Felipe",
  "Felix",
  "Felton",
  "Fermin",
  "Fern",
  "Fernando",
  "Ferne",
  "Fidel",
  "Filiberto",
  "Filomena",
  "Finn",
  "Fiona",
  "Flavie",
  "Flavio",
  "Fleta",
  "Fletcher",
  "Flo",
  "Florence",
  "Florencio",
  "Florian",
  "Florida",
  "Florine",
  "Flossie",
  "Floy",
  "Floyd",
  "Ford",
  "Forest",
  "Forrest",
  "Foster",
  "Frances",
  "Francesca",
  "Francesco",
  "Francis",
  "Francisca",
  "Francisco",
  "Franco",
  "Frank",
  "Frankie",
  "Franz",
  "Fred",
  "Freda",
  "Freddie",
  "Freddy",
  "Frederic",
  "Frederick",
  "Frederik",
  "Frederique",
  "Fredrick",
  "Fredy",
  "Freeda",
  "Freeman",
  "Freida",
  "Frida",
  "Frieda",
  "Friedrich",
  "Fritz",
  "Furman",
  "Gabe",
  "Gabriel",
  "Gabriella",
  "Gabrielle",
  "Gaetano",
  "Gage",
  "Gail",
  "Gardner",
  "Garett",
  "Garfield",
  "Garland",
  "Garnet",
  "Garnett",
  "Garret",
  "Garrett",
  "Garrick",
  "Garrison",
  "Garry",
  "Garth",
  "Gaston",
  "Gavin",
  "Gay",
  "Gayle",
  "Gaylord",
  "Gene",
  "General",
  "Genesis",
  "Genevieve",
  "Gennaro",
  "Genoveva",
  "Geo",
  "Geoffrey",
  "George",
  "Georgette",
  "Georgiana",
  "Georgianna",
  "Geovanni",
  "Geovanny",
  "Geovany",
  "Gerald",
  "Geraldine",
  "Gerard",
  "Gerardo",
  "Gerda",
  "Gerhard",
  "Germaine",
  "German",
  "Gerry",
  "Gerson",
  "Gertrude",
  "Gia",
  "Gianni",
  "Gideon",
  "Gilbert",
  "Gilberto",
  "Gilda",
  "Giles",
  "Gillian",
  "Gina",
  "Gino",
  "Giovani",
  "Giovanna",
  "Giovanni",
  "Giovanny",
  "Gisselle",
  "Giuseppe",
  "Gladyce",
  "Gladys",
  "Glen",
  "Glenda",
  "Glenna",
  "Glennie",
  "Gloria",
  "Godfrey",
  "Golda",
  "Golden",
  "Gonzalo",
  "Gordon",
  "Grace",
  "Gracie",
  "Graciela",
  "Grady",
  "Graham",
  "Grant",
  "Granville",
  "Grayce",
  "Grayson",
  "Green",
  "Greg",
  "Gregg",
  "Gregoria",
  "Gregorio",
  "Gregory",
  "Greta",
  "Gretchen",
  "Greyson",
  "Griffin",
  "Grover",
  "Guadalupe",
  "Gudrun",
  "Guido",
  "Guillermo",
  "Guiseppe",
  "Gunnar",
  "Gunner",
  "Gus",
  "Gussie",
  "Gust",
  "Gustave",
  "Guy",
  "Gwen",
  "Gwendolyn",
  "Hadley",
  "Hailee",
  "Hailey",
  "Hailie",
  "Hal",
  "Haleigh",
  "Haley",
  "Halie",
  "Halle",
  "Hallie",
  "Hank",
  "Hanna",
  "Hannah",
  "Hans",
  "Hardy",
  "Harley",
  "Harmon",
  "Harmony",
  "Harold",
  "Harrison",
  "Harry",
  "Harvey",
  "Haskell",
  "Hassan",
  "Hassie",
  "Hattie",
  "Haven",
  "Hayden",
  "Haylee",
  "Hayley",
  "Haylie",
  "Hazel",
  "Hazle",
  "Heath",
  "Heather",
  "Heaven",
  "Heber",
  "Hector",
  "Heidi",
  "Helen",
  "Helena",
  "Helene",
  "Helga",
  "Hellen",
  "Helmer",
  "Heloise",
  "Henderson",
  "Henri",
  "Henriette",
  "Henry",
  "Herbert",
  "Herman",
  "Hermann",
  "Hermina",
  "Herminia",
  "Herminio",
  "Hershel",
  "Herta",
  "Hertha",
  "Hester",
  "Hettie",
  "Hilario",
  "Hilbert",
  "Hilda",
  "Hildegard",
  "Hillard",
  "Hillary",
  "Hilma",
  "Hilton",
  "Hipolito",
  "Hiram",
  "Hobart",
  "Holden",
  "Hollie",
  "Hollis",
  "Holly",
  "Hope",
  "Horace",
  "Horacio",
  "Hortense",
  "Hosea",
  "Houston",
  "Howard",
  "Howell",
  "Hoyt",
  "Hubert",
  "Hudson",
  "Hugh",
  "Hulda",
  "Humberto",
  "Hunter",
  "Hyman",
  "Ian",
  "Ibrahim",
  "Icie",
  "Ida",
  "Idell",
  "Idella",
  "Ignacio",
  "Ignatius",
  "Ike",
  "Ila",
  "Ilene",
  "Iliana",
  "Ima",
  "Imani",
  "Imelda",
  "Immanuel",
  "Imogene",
  "Ines",
  "Irma",
  "Irving",
  "Irwin",
  "Isaac",
  "Isabel",
  "Isabell",
  "Isabella",
  "Isabelle",
  "Isac",
  "Isadore",
  "Isai",
  "Isaiah",
  "Isaias",
  "Isidro",
  "Ismael",
  "Isobel",
  "Isom",
  "Israel",
  "Issac",
  "Itzel",
  "Iva",
  "Ivah",
  "Ivory",
  "Ivy",
  "Izabella",
  "Izaiah",
  "Jabari",
  "Jace",
  "Jacey",
  "Jacinthe",
  "Jacinto",
  "Jack",
  "Jackeline",
  "Jackie",
  "Jacklyn",
  "Jackson",
  "Jacky",
  "Jaclyn",
  "Jacquelyn",
  "Jacques",
  "Jacynthe",
  "Jada",
  "Jade",
  "Jaden",
  "Jadon",
  "Jadyn",
  "Jaeden",
  "Jaida",
  "Jaiden",
  "Jailyn",
  "Jaime",
  "Jairo",
  "Jakayla",
  "Jake",
  "Jakob",
  "Jaleel",
  "Jalen",
  "Jalon",
  "Jalyn",
  "Jamaal",
  "Jamal",
  "Jamar",
  "Jamarcus",
  "Jamel",
  "Jameson",
  "Jamey",
  "Jamie",
  "Jamil",
  "Jamir",
  "Jamison",
  "Jammie",
  "Jan",
  "Jana",
  "Janae",
  "Jane",
  "Janelle",
  "Janessa",
  "Janet",
  "Janice",
  "Janick",
  "Janie",
  "Janis",
  "Janiya",
  "Jannie",
  "Jany",
  "Jaquan",
  "Jaquelin",
  "Jaqueline",
  "Jared",
  "Jaren",
  "Jarod",
  "Jaron",
  "Jarred",
  "Jarrell",
  "Jarret",
  "Jarrett",
  "Jarrod",
  "Jarvis",
  "Jasen",
  "Jasmin",
  "Jason",
  "Jasper",
  "Jaunita",
  "Javier",
  "Javon",
  "Javonte",
  "Jay",
  "Jayce",
  "Jaycee",
  "Jayda",
  "Jayde",
  "Jayden",
  "Jaydon",
  "Jaylan",
  "Jaylen",
  "Jaylin",
  "Jaylon",
  "Jayme",
  "Jayne",
  "Jayson",
  "Jazlyn",
  "Jazmin",
  "Jazmyn",
  "Jazmyne",
  "Jean",
  "Jeanette",
  "Jeanie",
  "Jeanne",
  "Jed",
  "Jedediah",
  "Jedidiah",
  "Jeff",
  "Jefferey",
  "Jeffery",
  "Jeffrey",
  "Jeffry",
  "Jena",
  "Jenifer",
  "Jennie",
  "Jennifer",
  "Jennings",
  "Jennyfer",
  "Jensen",
  "Jerad",
  "Jerald",
  "Jeramie",
  "Jeramy",
  "Jerel",
  "Jeremie",
  "Jeremy",
  "Jermain",
  "Jermaine",
  "Jermey",
  "Jerod",
  "Jerome",
  "Jeromy",
  "Jerrell",
  "Jerrod",
  "Jerrold",
  "Jerry",
  "Jess",
  "Jesse",
  "Jessica",
  "Jessie",
  "Jessika",
  "Jessy",
  "Jessyca",
  "Jesus",
  "Jett",
  "Jettie",
  "Jevon",
  "Jewel",
  "Jewell",
  "Jillian",
  "Jimmie",
  "Jimmy",
  "Jo",
  "Joan",
  "Joana",
  "Joanie",
  "Joanne",
  "Joannie",
  "Joanny",
  "Joany",
  "Joaquin",
  "Jocelyn",
  "Jodie",
  "Jody",
  "Joe",
  "Joel",
  "Joelle",
  "Joesph",
  "Joey",
  "Johan",
  "Johann",
  "Johanna",
  "Johathan",
  "John",
  "Johnathan",
  "Johnathon",
  "Johnnie",
  "Johnny",
  "Johnpaul",
  "Johnson",
  "Jolie",
  "Jon",
  "Jonas",
  "Jonatan",
  "Jonathan",
  "Jonathon",
  "Jordan",
  "Jordane",
  "Jordi",
  "Jordon",
  "Jordy",
  "Jordyn",
  "Jorge",
  "Jose",
  "Josefa",
  "Josefina",
  "Joseph",
  "Josephine",
  "Josh",
  "Joshua",
  "Joshuah",
  "Josiah",
  "Josiane",
  "Josianne",
  "Josie",
  "Josue",
  "Jovan",
  "Jovani",
  "Jovanny",
  "Jovany",
  "Joy",
  "Joyce",
  "Juana",
  "Juanita",
  "Judah",
  "Judd",
  "Jude",
  "Judge",
  "Judson",
  "Judy",
  "Jules",
  "Julia",
  "Julian",
  "Juliana",
  "Julianne",
  "Julie",
  "Julien",
  "Juliet",
  "Julio",
  "Julius",
  "June",
  "Junior",
  "Junius",
  "Justen",
  "Justice",
  "Justina",
  "Justine",
  "Juston",
  "Justus",
  "Justyn",
  "Juvenal",
  "Juwan",
  "Kacey",
  "Kaci",
  "Kacie",
  "Kade",
  "Kaden",
  "Kadin",
  "Kaela",
  "Kaelyn",
  "Kaia",
  "Kailee",
  "Kailey",
  "Kailyn",
  "Kaitlin",
  "Kaitlyn",
  "Kale",
  "Kaleb",
  "Kaleigh",
  "Kaley",
  "Kali",
  "Kallie",
  "Kameron",
  "Kamille",
  "Kamren",
  "Kamron",
  "Kamryn",
  "Kane",
  "Kara",
  "Kareem",
  "Karelle",
  "Karen",
  "Kari",
  "Kariane",
  "Karianne",
  "Karina",
  "Karine",
  "Karl",
  "Karlee",
  "Karley",
  "Karli",
  "Karlie",
  "Karolann",
  "Karson",
  "Kasandra",
  "Kasey",
  "Kassandra",
  "Katarina",
  "Katelin",
  "Katelyn",
  "Katelynn",
  "Katharina",
  "Katherine",
  "Katheryn",
  "Kathleen",
  "Kathlyn",
  "Kathryn",
  "Kathryne",
  "Katlyn",
  "Katlynn",
  "Katrina",
  "Katrine",
  "Kattie",
  "Kavon",
  "Kay",
  "Kaya",
  "Kaycee",
  "Kayden",
  "Kayla",
  "Kaylah",
  "Kaylee",
  "Kayleigh",
  "Kayley",
  "Kayli",
  "Kaylie",
  "Kaylin",
  "Keagan",
  "Keanu",
  "Keara",
  "Keaton",
  "Keegan",
  "Keeley",
  "Keely",
  "Keenan",
  "Keira",
  "Keith",
  "Kellen",
  "Kelley",
  "Kelli",
  "Kellie",
  "Kelly",
  "Kelsi",
  "Kelsie",
  "Kelton",
  "Kelvin",
  "Ken",
  "Kendall",
  "Kendra",
  "Kendrick",
  "Kenna",
  "Kennedi",
  "Kennedy",
  "Kenneth",
  "Kennith",
  "Kenny",
  "Kenton",
  "Kenya",
  "Kenyatta",
  "Kenyon",
  "Keon",
  "Keshaun",
  "Keshawn",
  "Keven",
  "Kevin",
  "Kevon",
  "Keyon",
  "Keyshawn",
  "Khalid",
  "Khalil",
  "Kian",
  "Kiana",
  "Kianna",
  "Kiara",
  "Kiarra",
  "Kiel",
  "Kiera",
  "Kieran",
  "Kiley",
  "Kim",
  "Kimberly",
  "King",
  "Kip",
  "Kira",
  "Kirk",
  "Kirsten",
  "Kirstin",
  "Kitty",
  "Kobe",
  "Koby",
  "Kody",
  "Kolby",
  "Kole",
  "Korbin",
  "Korey",
  "Kory",
  "Kraig",
  "Kris",
  "Krista",
  "Kristian",
  "Kristin",
  "Kristina",
  "Kristofer",
  "Kristoffer",
  "Kristopher",
  "Kristy",
  "Krystal",
  "Krystel",
  "Krystina",
  "Kurt",
  "Kurtis",
  "Kyla",
  "Kyle",
  "Kylee",
  "Kyleigh",
  "Kyler",
  "Kylie",
  "Kyra",
  "Lacey",
  "Lacy",
  "Ladarius",
  "Lafayette",
  "Laila",
  "Laisha",
  "Lamar",
  "Lambert",
  "Lamont",
  "Lance",
  "Landen",
  "Lane",
  "Laney",
  "Larissa",
  "Laron",
  "Larry",
  "Larue",
  "Laura",
  "Laurel",
  "Lauren",
  "Laurence",
  "Lauretta",
  "Lauriane",
  "Laurianne",
  "Laurie",
  "Laurine",
  "Laury",
  "Lauryn",
  "Lavada",
  "Lavern",
  "Laverna",
  "Laverne",
  "Lavina",
  "Lavinia",
  "Lavon",
  "Lavonne",
  "Lawrence",
  "Lawson",
  "Layla",
  "Layne",
  "Lazaro",
  "Lea",
  "Leann",
  "Leanna",
  "Leanne",
  "Leatha",
  "Leda",
  "Lee",
  "Leif",
  "Leila",
  "Leilani",
  "Lela",
  "Lelah",
  "Leland",
  "Lelia",
  "Lempi",
  "Lemuel",
  "Lenna",
  "Lennie",
  "Lenny",
  "Lenora",
  "Lenore",
  "Leo",
  "Leola",
  "Leon",
  "Leonard",
  "Leonardo",
  "Leone",
  "Leonel",
  "Leonie",
  "Leonor",
  "Leonora",
  "Leopold",
  "Leopoldo",
  "Leora",
  "Lera",
  "Lesley",
  "Leslie",
  "Lesly",
  "Lessie",
  "Lester",
  "Leta",
  "Letha",
  "Letitia",
  "Levi",
  "Lew",
  "Lewis",
  "Lexi",
  "Lexie",
  "Lexus",
  "Lia",
  "Liam",
  "Liana",
  "Libbie",
  "Libby",
  "Lila",
  "Lilian",
  "Liliana",
  "Liliane",
  "Lilla",
  "Lillian",
  "Lilliana",
  "Lillie",
  "Lilly",
  "Lily",
  "Lilyan",
  "Lina",
  "Lincoln",
  "Linda",
  "Lindsay",
  "Lindsey",
  "Linnea",
  "Linnie",
  "Linwood",
  "Lionel",
  "Lisa",
  "Lisandro",
  "Lisette",
  "Litzy",
  "Liza",
  "Lizeth",
  "Lizzie",
  "Llewellyn",
  "Lloyd",
  "Logan",
  "Lois",
  "Lola",
  "Lolita",
  "Loma",
  "Lon",
  "London",
  "Lonie",
  "Lonnie",
  "Lonny",
  "Lonzo",
  "Lora",
  "Loraine",
  "Loren",
  "Lorena",
  "Lorenz",
  "Lorenza",
  "Lorenzo",
  "Lori",
  "Lorine",
  "Lorna",
  "Lottie",
  "Lou",
  "Louie",
  "Louisa",
  "Lourdes",
  "Louvenia",
  "Lowell",
  "Loy",
  "Loyal",
  "Loyce",
  "Lucas",
  "Luciano",
  "Lucie",
  "Lucienne",
  "Lucile",
  "Lucinda",
  "Lucio",
  "Lucious",
  "Lucius",
  "Lucy",
  "Ludie",
  "Ludwig",
  "Lue",
  "Luella",
  "Luigi",
  "Luis",
  "Luisa",
  "Lukas",
  "Lula",
  "Lulu",
  "Luna",
  "Lupe",
  "Lura",
  "Lurline",
  "Luther",
  "Luz",
  "Lyda",
  "Lydia",
  "Lyla",
  "Lynn",
  "Lyric",
  "Lysanne",
  "Mabel",
  "Mabelle",
  "Mable",
  "Mac",
  "Macey",
  "Maci",
  "Macie",
  "Mack",
  "Mackenzie",
  "Macy",
  "Madaline",
  "Madalyn",
  "Maddison",
  "Madeline",
  "Madelyn",
  "Madelynn",
  "Madge",
  "Madie",
  "Madilyn",
  "Madisen",
  "Madison",
  "Madisyn",
  "Madonna",
  "Madyson",
  "Mae",
  "Maegan",
  "Maeve",
  "Mafalda",
  "Magali",
  "Magdalen",
  "Magdalena",
  "Maggie",
  "Magnolia",
  "Magnus",
  "Maia",
  "Maida",
  "Maiya",
  "Major",
  "Makayla",
  "Makenna",
  "Makenzie",
  "Malachi",
  "Malcolm",
  "Malika",
  "Malinda",
  "Mallie",
  "Mallory",
  "Malvina",
  "Mandy",
  "Manley",
  "Manuel",
  "Manuela",
  "Mara",
  "Marc",
  "Marcel",
  "Marcelina",
  "Marcelino",
  "Marcella",
  "Marcelle",
  "Marcellus",
  "Marcelo",
  "Marcia",
  "Marco",
  "Marcos",
  "Marcus",
  "Margaret",
  "Margarete",
  "Margarett",
  "Margaretta",
  "Margarette",
  "Margarita",
  "Marge",
  "Margie",
  "Margot",
  "Margret",
  "Marguerite",
  "Maria",
  "Mariah",
  "Mariam",
  "Marian",
  "Mariana",
  "Mariane",
  "Marianna",
  "Marianne",
  "Mariano",
  "Maribel",
  "Marie",
  "Mariela",
  "Marielle",
  "Marietta",
  "Marilie",
  "Marilou",
  "Marilyne",
  "Marina",
  "Mario",
  "Marion",
  "Marisa",
  "Marisol",
  "Maritza",
  "Marjolaine",
  "Marjorie",
  "Marjory",
  "Mark",
  "Markus",
  "Marlee",
  "Marlen",
  "Marlene",
  "Marley",
  "Marlin",
  "Marlon",
  "Marques",
  "Marquis",
  "Marquise",
  "Marshall",
  "Marta",
  "Martin",
  "Martina",
  "Martine",
  "Marty",
  "Marvin",
  "Mary",
  "Maryam",
  "Maryjane",
  "Maryse",
  "Mason",
  "Mateo",
  "Mathew",
  "Mathias",
  "Mathilde",
  "Matilda",
  "Matilde",
  "Matt",
  "Matteo",
  "Mattie",
  "Maud",
  "Maude",
  "Maudie",
  "Maureen",
  "Maurice",
  "Mauricio",
  "Maurine",
  "Maverick",
  "Mavis",
  "Max",
  "Maxie",
  "Maxime",
  "Maximilian",
  "Maximillia",
  "Maximillian",
  "Maximo",
  "Maximus",
  "Maxine",
  "Maxwell",
  "May",
  "Maya",
  "Maybell",
  "Maybelle",
  "Maye",
  "Maymie",
  "Maynard",
  "Mayra",
  "Mazie",
  "Mckayla",
  "Mckenna",
  "Mckenzie",
  "Meagan",
  "Meaghan",
  "Meda",
  "Megane",
  "Meggie",
  "Meghan",
  "Mekhi",
  "Melany",
  "Melba",
  "Melisa",
  "Melissa",
  "Mellie",
  "Melody",
  "Melvin",
  "Melvina",
  "Melyna",
  "Melyssa",
  "Mercedes",
  "Meredith",
  "Merl",
  "Merle",
  "Merlin",
  "Merritt",
  "Mertie",
  "Mervin",
  "Meta",
  "Mia",
  "Micaela",
  "Micah",
  "Michael",
  "Michaela",
  "Michale",
  "Micheal",
  "Michel",
  "Michele",
  "Michelle",
  "Miguel",
  "Mikayla",
  "Mike",
  "Mikel",
  "Milan",
  "Miles",
  "Milford",
  "Miller",
  "Millie",
  "Milo",
  "Milton",
  "Mina",
  "Minerva",
  "Minnie",
  "Miracle",
  "Mireille",
  "Mireya",
  "Misael",
  "Missouri",
  "Misty",
  "Mitchel",
  "Mitchell",
  "Mittie",
  "Modesta",
  "Modesto",
  "Mohamed",
  "Mohammad",
  "Mohammed",
  "Moises",
  "Mollie",
  "Molly",
  "Mona",
  "Monica",
  "Monique",
  "Monroe",
  "Monserrat",
  "Monserrate",
  "Montana",
  "Monte",
  "Monty",
  "Morgan",
  "Moriah",
  "Morris",
  "Mortimer",
  "Morton",
  "Mose",
  "Moses",
  "Moshe",
  "Mossie",
  "Mozell",
  "Mozelle",
  "Muhammad",
  "Muriel",
  "Murl",
  "Murphy",
  "Murray",
  "Mustafa",
  "Mya",
  "Myah",
  "Mylene",
  "Myles",
  "Myra",
  "Myriam",
  "Myrl",
  "Myrna",
  "Myron",
  "Myrtice",
  "Myrtie",
  "Myrtis",
  "Myrtle",
  "Nadia",
  "Nakia",
  "Name",
  "Nannie",
  "Naomi",
  "Naomie",
  "Napoleon",
  "Narciso",
  "Nash",
  "Nasir",
  "Nat",
  "Natalia",
  "Natalie",
  "Natasha",
  "Nathan",
  "Nathanael",
  "Nathanial",
  "Nathaniel",
  "Nathen",
  "Nayeli",
  "Neal",
  "Ned",
  "Nedra",
  "Neha",
  "Neil",
  "Nelda",
  "Nella",
  "Nelle",
  "Nellie",
  "Nels",
  "Nelson",
  "Neoma",
  "Nestor",
  "Nettie",
  "Neva",
  "Newell",
  "Newton",
  "Nia",
  "Nicholas",
  "Nicholaus",
  "Nichole",
  "Nick",
  "Nicklaus",
  "Nickolas",
  "Nico",
  "Nicola",
  "Nicolas",
  "Nicole",
  "Nicolette",
  "Nigel",
  "Nikita",
  "Nikki",
  "Nikko",
  "Niko",
  "Nikolas",
  "Nils",
  "Nina",
  "Noah",
  "Noble",
  "Noe",
  "Noel",
  "Noelia",
  "Noemi",
  "Noemie",
  "Noemy",
  "Nola",
  "Nolan",
  "Nona",
  "Nora",
  "Norbert",
  "Norberto",
  "Norene",
  "Norma",
  "Norris",
  "Norval",
  "Norwood",
  "Nova",
  "Novella",
  "Nya",
  "Nyah",
  "Nyasia",
  "Obie",
  "Oceane",
  "Ocie",
  "Octavia",
  "Oda",
  "Odell",
  "Odessa",
  "Odie",
  "Ofelia",
  "Okey",
  "Ola",
  "Olaf",
  "Ole",
  "Olen",
  "Oleta",
  "Olga",
  "Olin",
  "Oliver",
  "Ollie",
  "Oma",
  "Omari",
  "Omer",
  "Ona",
  "Onie",
  "Opal",
  "Ophelia",
  "Ora",
  "Oral",
  "Oran",
  "Oren",
  "Orie",
  "Orin",
  "Orion",
  "Orland",
  "Orlando",
  "Orlo",
  "Orpha",
  "Orrin",
  "Orval",
  "Orville",
  "Osbaldo",
  "Osborne",
  "Oscar",
  "Osvaldo",
  "Oswald",
  "Oswaldo",
  "Otha",
  "Otho",
  "Otilia",
  "Otis",
  "Ottilie",
  "Ottis",
  "Otto",
  "Ova",
  "Owen",
  "Ozella",
  "Pablo",
  "Paige",
  "Palma",
  "Pamela",
  "Pansy",
  "Paolo",
  "Paris",
  "Parker",
  "Pascale",
  "Pasquale",
  "Pat",
  "Patience",
  "Patricia",
  "Patrick",
  "Patsy",
  "Pattie",
  "Paul",
  "Paula",
  "Pauline",
  "Paxton",
  "Payton",
  "Pearl",
  "Pearlie",
  "Pearline",
  "Pedro",
  "Peggie",
  "Penelope",
  "Percival",
  "Percy",
  "Perry",
  "Pete",
  "Peter",
  "Petra",
  "Peyton",
  "Philip",
  "Phoebe",
  "Phyllis",
  "Pierce",
  "Pierre",
  "Pietro",
  "Pink",
  "Pinkie",
  "Piper",
  "Polly",
  "Porter",
  "Precious",
  "Presley",
  "Preston",
  "Price",
  "Prince",
  "Princess",
  "Priscilla",
  "Providenci",
  "Prudence",
  "Queen",
  "Queenie",
  "Quentin",
  "Quincy",
  "Quinn",
  "Quinten",
  "Quinton",
  "Rachael",
  "Rachel",
  "Rachelle",
  "Rae",
  "Raegan",
  "Rafael",
  "Rafaela",
  "Raheem",
  "Rahsaan",
  "Rahul",
  "Raina",
  "Raleigh",
  "Ralph",
  "Ramiro",
  "Ramon",
  "Ramona",
  "Randal",
  "Randall",
  "Randi",
  "Randy",
  "Ransom",
  "Raoul",
  "Raphael",
  "Raphaelle",
  "Raquel",
  "Rashad",
  "Rashawn",
  "Rasheed",
  "Raul",
  "Raven",
  "Ray",
  "Raymond",
  "Raymundo",
  "Reagan",
  "Reanna",
  "Reba",
  "Rebeca",
  "Rebecca",
  "Rebeka",
  "Rebekah",
  "Reece",
  "Reed",
  "Reese",
  "Regan",
  "Reggie",
  "Reginald",
  "Reid",
  "Reilly",
  "Reina",
  "Reinhold",
  "Remington",
  "Rene",
  "Renee",
  "Ressie",
  "Reta",
  "Retha",
  "Retta",
  "Reuben",
  "Reva",
  "Rex",
  "Rey",
  "Reyes",
  "Reymundo",
  "Reyna",
  "Reynold",
  "Rhea",
  "Rhett",
  "Rhianna",
  "Rhiannon",
  "Rhoda",
  "Ricardo",
  "Richard",
  "Richie",
  "Richmond",
  "Rick",
  "Rickey",
  "Rickie",
  "Ricky",
  "Rico",
  "Rigoberto",
  "Riley",
  "Rita",
  "River",
  "Robb",
  "Robbie",
  "Robert",
  "Roberta",
  "Roberto",
  "Robin",
  "Robyn",
  "Rocio",
  "Rocky",
  "Rod",
  "Roderick",
  "Rodger",
  "Rodolfo",
  "Rodrick",
  "Rodrigo",
  "Roel",
  "Rogelio",
  "Roger",
  "Rogers",
  "Rolando",
  "Rollin",
  "Roma",
  "Romaine",
  "Roman",
  "Ron",
  "Ronaldo",
  "Ronny",
  "Roosevelt",
  "Rory",
  "Rosa",
  "Rosalee",
  "Rosalia",
  "Rosalind",
  "Rosalinda",
  "Rosalyn",
  "Rosamond",
  "Rosanna",
  "Rosario",
  "Roscoe",
  "Rose",
  "Rosella",
  "Roselyn",
  "Rosemarie",
  "Rosemary",
  "Rosendo",
  "Rosetta",
  "Rosie",
  "Rosina",
  "Roslyn",
  "Ross",
  "Rossie",
  "Rowan",
  "Rowena",
  "Rowland",
  "Roxane",
  "Roxanne",
  "Roy",
  "Royal",
  "Royce",
  "Rozella",
  "Ruben",
  "Rubie",
  "Ruby",
  "Rubye",
  "Rudolph",
  "Rudy",
  "Rupert",
  "Russ",
  "Russel",
  "Russell",
  "Rusty",
  "Ruth",
  "Ruthe",
  "Ruthie",
  "Ryan",
  "Ryann",
  "Ryder",
  "Rylan",
  "Rylee",
  "Ryleigh",
  "Ryley",
  "Sabina",
  "Sabrina",
  "Sabryna",
  "Sadie",
  "Sadye",
  "Sage",
  "Saige",
  "Sallie",
  "Sally",
  "Salma",
  "Salvador",
  "Salvatore",
  "Sam",
  "Samanta",
  "Samantha",
  "Samara",
  "Samir",
  "Sammie",
  "Sammy",
  "Samson",
  "Sandra",
  "Sandrine",
  "Sandy",
  "Sanford",
  "Santa",
  "Santiago",
  "Santina",
  "Santino",
  "Santos",
  "Sarah",
  "Sarai",
  "Sarina",
  "Sasha",
  "Saul",
  "Savanah",
  "Savanna",
  "Savannah",
  "Savion",
  "Scarlett",
  "Schuyler",
  "Scot",
  "Scottie",
  "Scotty",
  "Seamus",
  "Sean",
  "Sebastian",
  "Sedrick",
  "Selena",
  "Selina",
  "Selmer",
  "Serena",
  "Serenity",
  "Seth",
  "Shad",
  "Shaina",
  "Shakira",
  "Shana",
  "Shane",
  "Shanel",
  "Shanelle",
  "Shania",
  "Shanie",
  "Shaniya",
  "Shanna",
  "Shannon",
  "Shanny",
  "Shanon",
  "Shany",
  "Sharon",
  "Shaun",
  "Shawn",
  "Shawna",
  "Shaylee",
  "Shayna",
  "Shayne",
  "Shea",
  "Sheila",
  "Sheldon",
  "Shemar",
  "Sheridan",
  "Sherman",
  "Sherwood",
  "Shirley",
  "Shyann",
  "Shyanne",
  "Sibyl",
  "Sid",
  "Sidney",
  "Sienna",
  "Sierra",
  "Sigmund",
  "Sigrid",
  "Sigurd",
  "Silas",
  "Sim",
  "Simeon",
  "Simone",
  "Sincere",
  "Sister",
  "Skye",
  "Skyla",
  "Skylar",
  "Sofia",
  "Soledad",
  "Solon",
  "Sonia",
  "Sonny",
  "Sonya",
  "Sophia",
  "Sophie",
  "Spencer",
  "Stacey",
  "Stacy",
  "Stan",
  "Stanford",
  "Stanley",
  "Stanton",
  "Stefan",
  "Stefanie",
  "Stella",
  "Stephan",
  "Stephania",
  "Stephanie",
  "Stephany",
  "Stephen",
  "Stephon",
  "Sterling",
  "Steve",
  "Stevie",
  "Stewart",
  "Stone",
  "Stuart",
  "Summer",
  "Sunny",
  "Susan",
  "Susana",
  "Susanna",
  "Susie",
  "Suzanne",
  "Sven",
  "Syble",
  "Sydnee",
  "Sydney",
  "Sydni",
  "Sydnie",
  "Sylvan",
  "Sylvester",
  "Sylvia",
  "Tabitha",
  "Tad",
  "Talia",
  "Talon",
  "Tamara",
  "Tamia",
  "Tania",
  "Tanner",
  "Tanya",
  "Tara",
  "Taryn",
  "Tate",
  "Tatum",
  "Tatyana",
  "Taurean",
  "Tavares",
  "Taya",
  "Taylor",
  "Teagan",
  "Ted",
  "Telly",
  "Terence",
  "Teresa",
  "Terrance",
  "Terrell",
  "Terrence",
  "Terrill",
  "Terry",
  "Tess",
  "Tessie",
  "Tevin",
  "Thad",
  "Thaddeus",
  "Thalia",
  "Thea",
  "Thelma",
  "Theo",
  "Theodora",
  "Theodore",
  "Theresa",
  "Therese",
  "Theresia",
  "Theron",
  "Thomas",
  "Thora",
  "Thurman",
  "Tia",
  "Tiana",
  "Tianna",
  "Tiara",
  "Tierra",
  "Tiffany",
  "Tillman",
  "Timmothy",
  "Timmy",
  "Timothy",
  "Tina",
  "Tito",
  "Titus",
  "Tobin",
  "Toby",
  "Tod",
  "Tom",
  "Tomas",
  "Tomasa",
  "Tommie",
  "Toney",
  "Toni",
  "Tony",
  "Torey",
  "Torrance",
  "Torrey",
  "Toy",
  "Trace",
  "Tracey",
  "Tracy",
  "Travis",
  "Travon",
  "Tre",
  "Tremaine",
  "Tremayne",
  "Trent",
  "Trenton",
  "Tressa",
  "Tressie",
  "Treva",
  "Trever",
  "Trevion",
  "Trevor",
  "Trey",
  "Trinity",
  "Trisha",
  "Tristian",
  "Tristin",
  "Triston",
  "Troy",
  "Trudie",
  "Trycia",
  "Trystan",
  "Turner",
  "Twila",
  "Tyler",
  "Tyra",
  "Tyree",
  "Tyreek",
  "Tyrel",
  "Tyrell",
  "Tyrese",
  "Tyrique",
  "Tyshawn",
  "Tyson",
  "Ubaldo",
  "Ulices",
  "Ulises",
  "Una",
  "Unique",
  "Urban",
  "Uriah",
  "Uriel",
  "Ursula",
  "Vada",
  "Valentin",
  "Valentina",
  "Valentine",
  "Valerie",
  "Vallie",
  "Van",
  "Vance",
  "Vanessa",
  "Vaughn",
  "Veda",
  "Velda",
  "Vella",
  "Velma",
  "Velva",
  "Vena",
  "Verda",
  "Verdie",
  "Vergie",
  "Verla",
  "Verlie",
  "Vern",
  "Verna",
  "Verner",
  "Vernice",
  "Vernie",
  "Vernon",
  "Verona",
  "Veronica",
  "Vesta",
  "Vicenta",
  "Vicente",
  "Vickie",
  "Vicky",
  "Victor",
  "Victoria",
  "Vida",
  "Vidal",
  "Vilma",
  "Vince",
  "Vincent",
  "Vincenza",
  "Vincenzo",
  "Vinnie",
  "Viola",
  "Violet",
  "Violette",
  "Virgie",
  "Virgil",
  "Virginia",
  "Virginie",
  "Vita",
  "Vito",
  "Viva",
  "Vivian",
  "Viviane",
  "Vivianne",
  "Vivien",
  "Vivienne",
  "Vladimir",
  "Wade",
  "Waino",
  "Waldo",
  "Walker",
  "Wallace",
  "Walter",
  "Walton",
  "Wanda",
  "Ward",
  "Warren",
  "Watson",
  "Wava",
  "Waylon",
  "Wayne",
  "Webster",
  "Weldon",
  "Wellington",
  "Wendell",
  "Wendy",
  "Werner",
  "Westley",
  "Weston",
  "Whitney",
  "Wilber",
  "Wilbert",
  "Wilburn",
  "Wiley",
  "Wilford",
  "Wilfred",
  "Wilfredo",
  "Wilfrid",
  "Wilhelm",
  "Wilhelmine",
  "Will",
  "Willa",
  "Willard",
  "William",
  "Willie",
  "Willis",
  "Willow",
  "Willy",
  "Wilma",
  "Wilmer",
  "Wilson",
  "Wilton",
  "Winfield",
  "Winifred",
  "Winnifred",
  "Winona",
  "Winston",
  "Woodrow",
  "Wyatt",
  "Wyman",
  "Xander",
  "Xavier",
  "Xzavier",
  "Yadira",
  "Yasmeen",
  "Yasmin",
  "Yasmine",
  "Yazmin",
  "Yesenia",
  "Yessenia",
  "Yolanda",
  "Yoshiko",
  "Yvette",
  "Yvonne",
  "Zachariah",
  "Zachary",
  "Zachery",
  "Zack",
  "Zackary",
  "Zackery",
  "Zakary",
  "Zander",
  "Zane",
  "Zaria",
  "Zechariah",
  "Zelda",
  "Zella",
  "Zelma",
  "Zena",
  "Zetta",
  "Zion",
  "Zita",
  "Zoe",
  "Zoey",
  "Zoie",
  "Zoila",
  "Zola",
  "Zora",
  "Zula"
];

},{}],207:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.title = require("./title");
name.name = require("./name");

},{"./first_name":206,"./last_name":208,"./name":209,"./prefix":210,"./suffix":211,"./title":212}],208:[function(require,module,exports){
module["exports"] = [
  "Abbott",
  "Abernathy",
  "Abshire",
  "Adams",
  "Altenwerth",
  "Anderson",
  "Ankunding",
  "Armstrong",
  "Auer",
  "Aufderhar",
  "Bahringer",
  "Bailey",
  "Balistreri",
  "Barrows",
  "Bartell",
  "Bartoletti",
  "Barton",
  "Bashirian",
  "Batz",
  "Bauch",
  "Baumbach",
  "Bayer",
  "Beahan",
  "Beatty",
  "Bechtelar",
  "Becker",
  "Bednar",
  "Beer",
  "Beier",
  "Berge",
  "Bergnaum",
  "Bergstrom",
  "Bernhard",
  "Bernier",
  "Bins",
  "Blanda",
  "Blick",
  "Block",
  "Bode",
  "Boehm",
  "Bogan",
  "Bogisich",
  "Borer",
  "Bosco",
  "Botsford",
  "Boyer",
  "Boyle",
  "Bradtke",
  "Brakus",
  "Braun",
  "Breitenberg",
  "Brekke",
  "Brown",
  "Bruen",
  "Buckridge",
  "Carroll",
  "Carter",
  "Cartwright",
  "Casper",
  "Cassin",
  "Champlin",
  "Christiansen",
  "Cole",
  "Collier",
  "Collins",
  "Conn",
  "Connelly",
  "Conroy",
  "Considine",
  "Corkery",
  "Cormier",
  "Corwin",
  "Cremin",
  "Crist",
  "Crona",
  "Cronin",
  "Crooks",
  "Cruickshank",
  "Cummerata",
  "Cummings",
  "Dach",
  "D'Amore",
  "Daniel",
  "Dare",
  "Daugherty",
  "Davis",
  "Deckow",
  "Denesik",
  "Dibbert",
  "Dickens",
  "Dicki",
  "Dickinson",
  "Dietrich",
  "Donnelly",
  "Dooley",
  "Douglas",
  "Doyle",
  "DuBuque",
  "Durgan",
  "Ebert",
  "Effertz",
  "Eichmann",
  "Emard",
  "Emmerich",
  "Erdman",
  "Ernser",
  "Fadel",
  "Fahey",
  "Farrell",
  "Fay",
  "Feeney",
  "Feest",
  "Feil",
  "Ferry",
  "Fisher",
  "Flatley",
  "Frami",
  "Franecki",
  "Friesen",
  "Fritsch",
  "Funk",
  "Gaylord",
  "Gerhold",
  "Gerlach",
  "Gibson",
  "Gislason",
  "Gleason",
  "Gleichner",
  "Glover",
  "Goldner",
  "Goodwin",
  "Gorczany",
  "Gottlieb",
  "Goyette",
  "Grady",
  "Graham",
  "Grant",
  "Green",
  "Greenfelder",
  "Greenholt",
  "Grimes",
  "Gulgowski",
  "Gusikowski",
  "Gutkowski",
  "Gutmann",
  "Haag",
  "Hackett",
  "Hagenes",
  "Hahn",
  "Haley",
  "Halvorson",
  "Hamill",
  "Hammes",
  "Hand",
  "Hane",
  "Hansen",
  "Harber",
  "Harris",
  "Hartmann",
  "Harvey",
  "Hauck",
  "Hayes",
  "Heaney",
  "Heathcote",
  "Hegmann",
  "Heidenreich",
  "Heller",
  "Herman",
  "Hermann",
  "Hermiston",
  "Herzog",
  "Hessel",
  "Hettinger",
  "Hickle",
  "Hilll",
  "Hills",
  "Hilpert",
  "Hintz",
  "Hirthe",
  "Hodkiewicz",
  "Hoeger",
  "Homenick",
  "Hoppe",
  "Howe",
  "Howell",
  "Hudson",
  "Huel",
  "Huels",
  "Hyatt",
  "Jacobi",
  "Jacobs",
  "Jacobson",
  "Jakubowski",
  "Jaskolski",
  "Jast",
  "Jenkins",
  "Jerde",
  "Johns",
  "Johnson",
  "Johnston",
  "Jones",
  "Kassulke",
  "Kautzer",
  "Keebler",
  "Keeling",
  "Kemmer",
  "Kerluke",
  "Kertzmann",
  "Kessler",
  "Kiehn",
  "Kihn",
  "Kilback",
  "King",
  "Kirlin",
  "Klein",
  "Kling",
  "Klocko",
  "Koch",
  "Koelpin",
  "Koepp",
  "Kohler",
  "Konopelski",
  "Koss",
  "Kovacek",
  "Kozey",
  "Krajcik",
  "Kreiger",
  "Kris",
  "Kshlerin",
  "Kub",
  "Kuhic",
  "Kuhlman",
  "Kuhn",
  "Kulas",
  "Kunde",
  "Kunze",
  "Kuphal",
  "Kutch",
  "Kuvalis",
  "Labadie",
  "Lakin",
  "Lang",
  "Langosh",
  "Langworth",
  "Larkin",
  "Larson",
  "Leannon",
  "Lebsack",
  "Ledner",
  "Leffler",
  "Legros",
  "Lehner",
  "Lemke",
  "Lesch",
  "Leuschke",
  "Lind",
  "Lindgren",
  "Littel",
  "Little",
  "Lockman",
  "Lowe",
  "Lubowitz",
  "Lueilwitz",
  "Luettgen",
  "Lynch",
  "Macejkovic",
  "MacGyver",
  "Maggio",
  "Mann",
  "Mante",
  "Marks",
  "Marquardt",
  "Marvin",
  "Mayer",
  "Mayert",
  "McClure",
  "McCullough",
  "McDermott",
  "McGlynn",
  "McKenzie",
  "McLaughlin",
  "Medhurst",
  "Mertz",
  "Metz",
  "Miller",
  "Mills",
  "Mitchell",
  "Moen",
  "Mohr",
  "Monahan",
  "Moore",
  "Morar",
  "Morissette",
  "Mosciski",
  "Mraz",
  "Mueller",
  "Muller",
  "Murazik",
  "Murphy",
  "Murray",
  "Nader",
  "Nicolas",
  "Nienow",
  "Nikolaus",
  "Nitzsche",
  "Nolan",
  "Oberbrunner",
  "O'Connell",
  "O'Conner",
  "O'Hara",
  "O'Keefe",
  "O'Kon",
  "Okuneva",
  "Olson",
  "Ondricka",
  "O'Reilly",
  "Orn",
  "Ortiz",
  "Osinski",
  "Pacocha",
  "Padberg",
  "Pagac",
  "Parisian",
  "Parker",
  "Paucek",
  "Pfannerstill",
  "Pfeffer",
  "Pollich",
  "Pouros",
  "Powlowski",
  "Predovic",
  "Price",
  "Prohaska",
  "Prosacco",
  "Purdy",
  "Quigley",
  "Quitzon",
  "Rath",
  "Ratke",
  "Rau",
  "Raynor",
  "Reichel",
  "Reichert",
  "Reilly",
  "Reinger",
  "Rempel",
  "Renner",
  "Reynolds",
  "Rice",
  "Rippin",
  "Ritchie",
  "Robel",
  "Roberts",
  "Rodriguez",
  "Rogahn",
  "Rohan",
  "Rolfson",
  "Romaguera",
  "Roob",
  "Rosenbaum",
  "Rowe",
  "Ruecker",
  "Runolfsdottir",
  "Runolfsson",
  "Runte",
  "Russel",
  "Rutherford",
  "Ryan",
  "Sanford",
  "Satterfield",
  "Sauer",
  "Sawayn",
  "Schaden",
  "Schaefer",
  "Schamberger",
  "Schiller",
  "Schimmel",
  "Schinner",
  "Schmeler",
  "Schmidt",
  "Schmitt",
  "Schneider",
  "Schoen",
  "Schowalter",
  "Schroeder",
  "Schulist",
  "Schultz",
  "Schumm",
  "Schuppe",
  "Schuster",
  "Senger",
  "Shanahan",
  "Shields",
  "Simonis",
  "Sipes",
  "Skiles",
  "Smith",
  "Smitham",
  "Spencer",
  "Spinka",
  "Sporer",
  "Stamm",
  "Stanton",
  "Stark",
  "Stehr",
  "Steuber",
  "Stiedemann",
  "Stokes",
  "Stoltenberg",
  "Stracke",
  "Streich",
  "Stroman",
  "Strosin",
  "Swaniawski",
  "Swift",
  "Terry",
  "Thiel",
  "Thompson",
  "Tillman",
  "Torp",
  "Torphy",
  "Towne",
  "Toy",
  "Trantow",
  "Tremblay",
  "Treutel",
  "Tromp",
  "Turcotte",
  "Turner",
  "Ullrich",
  "Upton",
  "Vandervort",
  "Veum",
  "Volkman",
  "Von",
  "VonRueden",
  "Waelchi",
  "Walker",
  "Walsh",
  "Walter",
  "Ward",
  "Waters",
  "Watsica",
  "Weber",
  "Wehner",
  "Weimann",
  "Weissnat",
  "Welch",
  "West",
  "White",
  "Wiegand",
  "Wilderman",
  "Wilkinson",
  "Will",
  "Williamson",
  "Willms",
  "Windler",
  "Wintheiser",
  "Wisoky",
  "Wisozk",
  "Witting",
  "Wiza",
  "Wolf",
  "Wolff",
  "Wuckert",
  "Wunsch",
  "Wyman",
  "Yost",
  "Yundt",
  "Zboncak",
  "Zemlak",
  "Ziemann",
  "Zieme",
  "Zulauf"
];

},{}],209:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name}",
  "#{first_name} #{last_name} #{suffix}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}"
];

},{}],210:[function(require,module,exports){
module["exports"] = [
  "Mr.",
  "Mrs.",
  "Ms.",
  "Miss",
  "Dr."
];

},{}],211:[function(require,module,exports){
module["exports"] = [
  "Jr.",
  "Sr.",
  "I",
  "II",
  "III",
  "IV",
  "V",
  "MD",
  "DDS",
  "PhD",
  "DVM"
];

},{}],212:[function(require,module,exports){
module["exports"] = {
  "descriptor": [
    "Lead",
    "Senior",
    "Direct",
    "Corporate",
    "Dynamic",
    "Future",
    "Product",
    "National",
    "Regional",
    "District",
    "Central",
    "Global",
    "Customer",
    "Investor",
    "Dynamic",
    "International",
    "Legacy",
    "Forward",
    "Internal",
    "Human",
    "Chief",
    "Principal"
  ],
  "level": [
    "Solutions",
    "Program",
    "Brand",
    "Security",
    "Research",
    "Marketing",
    "Directives",
    "Implementation",
    "Integration",
    "Functionality",
    "Response",
    "Paradigm",
    "Tactics",
    "Identity",
    "Markets",
    "Group",
    "Division",
    "Applications",
    "Optimization",
    "Operations",
    "Infrastructure",
    "Intranet",
    "Communications",
    "Web",
    "Branding",
    "Quality",
    "Assurance",
    "Mobility",
    "Accounts",
    "Data",
    "Creative",
    "Configuration",
    "Accountability",
    "Interactions",
    "Factors",
    "Usability",
    "Metrics"
  ],
  "job": [
    "Supervisor",
    "Associate",
    "Executive",
    "Liason",
    "Officer",
    "Manager",
    "Engineer",
    "Specialist",
    "Director",
    "Coordinator",
    "Administrator",
    "Architect",
    "Analyst",
    "Designer",
    "Planner",
    "Orchestrator",
    "Technician",
    "Developer",
    "Producer",
    "Consultant",
    "Assistant",
    "Facilitator",
    "Agent",
    "Representative",
    "Strategist"
  ]
};

},{}],213:[function(require,module,exports){
module["exports"] = [
  "###-###-####",
  "(###) ###-####",
  "1-###-###-####",
  "###.###.####",
  "###-###-####",
  "(###) ###-####",
  "1-###-###-####",
  "###.###.####",
  "###-###-#### x###",
  "(###) ###-#### x###",
  "1-###-###-#### x###",
  "###.###.#### x###",
  "###-###-#### x####",
  "(###) ###-#### x####",
  "1-###-###-#### x####",
  "###.###.#### x####",
  "###-###-#### x#####",
  "(###) ###-#### x#####",
  "1-###-###-#### x#####",
  "###.###.#### x#####"
];

},{}],214:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":213,"dup":83}],215:[function(require,module,exports){
var system = {};
module['exports'] = system;
system.mimeTypes = require("./mimeTypes");
},{"./mimeTypes":216}],216:[function(require,module,exports){
/*

The MIT License (MIT)

Copyright (c) 2014 Jonathan Ong me@jongleberry.com

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

Definitions from mime-db v1.21.0
For updates check: https://github.com/jshttp/mime-db/blob/master/db.json

*/

module['exports'] = {
  "application/1d-interleaved-parityfec": {
    "source": "iana"
  },
  "application/3gpdash-qoe-report+xml": {
    "source": "iana"
  },
  "application/3gpp-ims+xml": {
    "source": "iana"
  },
  "application/a2l": {
    "source": "iana"
  },
  "application/activemessage": {
    "source": "iana"
  },
  "application/alto-costmap+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-costmapfilter+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-directory+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-endpointcost+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-endpointcostparams+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-endpointprop+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-endpointpropparams+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-error+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-networkmap+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-networkmapfilter+json": {
    "source": "iana",
    "compressible": true
  },
  "application/aml": {
    "source": "iana"
  },
  "application/andrew-inset": {
    "source": "iana",
    "extensions": ["ez"]
  },
  "application/applefile": {
    "source": "iana"
  },
  "application/applixware": {
    "source": "apache",
    "extensions": ["aw"]
  },
  "application/atf": {
    "source": "iana"
  },
  "application/atfx": {
    "source": "iana"
  },
  "application/atom+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["atom"]
  },
  "application/atomcat+xml": {
    "source": "iana",
    "extensions": ["atomcat"]
  },
  "application/atomdeleted+xml": {
    "source": "iana"
  },
  "application/atomicmail": {
    "source": "iana"
  },
  "application/atomsvc+xml": {
    "source": "iana",
    "extensions": ["atomsvc"]
  },
  "application/atxml": {
    "source": "iana"
  },
  "application/auth-policy+xml": {
    "source": "iana"
  },
  "application/bacnet-xdd+zip": {
    "source": "iana"
  },
  "application/batch-smtp": {
    "source": "iana"
  },
  "application/bdoc": {
    "compressible": false,
    "extensions": ["bdoc"]
  },
  "application/beep+xml": {
    "source": "iana"
  },
  "application/calendar+json": {
    "source": "iana",
    "compressible": true
  },
  "application/calendar+xml": {
    "source": "iana"
  },
  "application/call-completion": {
    "source": "iana"
  },
  "application/cals-1840": {
    "source": "iana"
  },
  "application/cbor": {
    "source": "iana"
  },
  "application/ccmp+xml": {
    "source": "iana"
  },
  "application/ccxml+xml": {
    "source": "iana",
    "extensions": ["ccxml"]
  },
  "application/cdfx+xml": {
    "source": "iana"
  },
  "application/cdmi-capability": {
    "source": "iana",
    "extensions": ["cdmia"]
  },
  "application/cdmi-container": {
    "source": "iana",
    "extensions": ["cdmic"]
  },
  "application/cdmi-domain": {
    "source": "iana",
    "extensions": ["cdmid"]
  },
  "application/cdmi-object": {
    "source": "iana",
    "extensions": ["cdmio"]
  },
  "application/cdmi-queue": {
    "source": "iana",
    "extensions": ["cdmiq"]
  },
  "application/cdni": {
    "source": "iana"
  },
  "application/cea": {
    "source": "iana"
  },
  "application/cea-2018+xml": {
    "source": "iana"
  },
  "application/cellml+xml": {
    "source": "iana"
  },
  "application/cfw": {
    "source": "iana"
  },
  "application/cms": {
    "source": "iana"
  },
  "application/cnrp+xml": {
    "source": "iana"
  },
  "application/coap-group+json": {
    "source": "iana",
    "compressible": true
  },
  "application/commonground": {
    "source": "iana"
  },
  "application/conference-info+xml": {
    "source": "iana"
  },
  "application/cpl+xml": {
    "source": "iana"
  },
  "application/csrattrs": {
    "source": "iana"
  },
  "application/csta+xml": {
    "source": "iana"
  },
  "application/cstadata+xml": {
    "source": "iana"
  },
  "application/csvm+json": {
    "source": "iana",
    "compressible": true
  },
  "application/cu-seeme": {
    "source": "apache",
    "extensions": ["cu"]
  },
  "application/cybercash": {
    "source": "iana"
  },
  "application/dart": {
    "compressible": true
  },
  "application/dash+xml": {
    "source": "iana",
    "extensions": ["mdp"]
  },
  "application/dashdelta": {
    "source": "iana"
  },
  "application/davmount+xml": {
    "source": "iana",
    "extensions": ["davmount"]
  },
  "application/dca-rft": {
    "source": "iana"
  },
  "application/dcd": {
    "source": "iana"
  },
  "application/dec-dx": {
    "source": "iana"
  },
  "application/dialog-info+xml": {
    "source": "iana"
  },
  "application/dicom": {
    "source": "iana"
  },
  "application/dii": {
    "source": "iana"
  },
  "application/dit": {
    "source": "iana"
  },
  "application/dns": {
    "source": "iana"
  },
  "application/docbook+xml": {
    "source": "apache",
    "extensions": ["dbk"]
  },
  "application/dskpp+xml": {
    "source": "iana"
  },
  "application/dssc+der": {
    "source": "iana",
    "extensions": ["dssc"]
  },
  "application/dssc+xml": {
    "source": "iana",
    "extensions": ["xdssc"]
  },
  "application/dvcs": {
    "source": "iana"
  },
  "application/ecmascript": {
    "source": "iana",
    "compressible": true,
    "extensions": ["ecma"]
  },
  "application/edi-consent": {
    "source": "iana"
  },
  "application/edi-x12": {
    "source": "iana",
    "compressible": false
  },
  "application/edifact": {
    "source": "iana",
    "compressible": false
  },
  "application/emergencycalldata.comment+xml": {
    "source": "iana"
  },
  "application/emergencycalldata.deviceinfo+xml": {
    "source": "iana"
  },
  "application/emergencycalldata.providerinfo+xml": {
    "source": "iana"
  },
  "application/emergencycalldata.serviceinfo+xml": {
    "source": "iana"
  },
  "application/emergencycalldata.subscriberinfo+xml": {
    "source": "iana"
  },
  "application/emma+xml": {
    "source": "iana",
    "extensions": ["emma"]
  },
  "application/emotionml+xml": {
    "source": "iana"
  },
  "application/encaprtp": {
    "source": "iana"
  },
  "application/epp+xml": {
    "source": "iana"
  },
  "application/epub+zip": {
    "source": "iana",
    "extensions": ["epub"]
  },
  "application/eshop": {
    "source": "iana"
  },
  "application/exi": {
    "source": "iana",
    "extensions": ["exi"]
  },
  "application/fastinfoset": {
    "source": "iana"
  },
  "application/fastsoap": {
    "source": "iana"
  },
  "application/fdt+xml": {
    "source": "iana"
  },
  "application/fits": {
    "source": "iana"
  },
  "application/font-sfnt": {
    "source": "iana"
  },
  "application/font-tdpfr": {
    "source": "iana",
    "extensions": ["pfr"]
  },
  "application/font-woff": {
    "source": "iana",
    "compressible": false,
    "extensions": ["woff"]
  },
  "application/font-woff2": {
    "compressible": false,
    "extensions": ["woff2"]
  },
  "application/framework-attributes+xml": {
    "source": "iana"
  },
  "application/gml+xml": {
    "source": "apache",
    "extensions": ["gml"]
  },
  "application/gpx+xml": {
    "source": "apache",
    "extensions": ["gpx"]
  },
  "application/gxf": {
    "source": "apache",
    "extensions": ["gxf"]
  },
  "application/gzip": {
    "source": "iana",
    "compressible": false
  },
  "application/h224": {
    "source": "iana"
  },
  "application/held+xml": {
    "source": "iana"
  },
  "application/http": {
    "source": "iana"
  },
  "application/hyperstudio": {
    "source": "iana",
    "extensions": ["stk"]
  },
  "application/ibe-key-request+xml": {
    "source": "iana"
  },
  "application/ibe-pkg-reply+xml": {
    "source": "iana"
  },
  "application/ibe-pp-data": {
    "source": "iana"
  },
  "application/iges": {
    "source": "iana"
  },
  "application/im-iscomposing+xml": {
    "source": "iana"
  },
  "application/index": {
    "source": "iana"
  },
  "application/index.cmd": {
    "source": "iana"
  },
  "application/index.obj": {
    "source": "iana"
  },
  "application/index.response": {
    "source": "iana"
  },
  "application/index.vnd": {
    "source": "iana"
  },
  "application/inkml+xml": {
    "source": "iana",
    "extensions": ["ink","inkml"]
  },
  "application/iotp": {
    "source": "iana"
  },
  "application/ipfix": {
    "source": "iana",
    "extensions": ["ipfix"]
  },
  "application/ipp": {
    "source": "iana"
  },
  "application/isup": {
    "source": "iana"
  },
  "application/its+xml": {
    "source": "iana"
  },
  "application/java-archive": {
    "source": "apache",
    "compressible": false,
    "extensions": ["jar","war","ear"]
  },
  "application/java-serialized-object": {
    "source": "apache",
    "compressible": false,
    "extensions": ["ser"]
  },
  "application/java-vm": {
    "source": "apache",
    "compressible": false,
    "extensions": ["class"]
  },
  "application/javascript": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true,
    "extensions": ["js"]
  },
  "application/jose": {
    "source": "iana"
  },
  "application/jose+json": {
    "source": "iana",
    "compressible": true
  },
  "application/jrd+json": {
    "source": "iana",
    "compressible": true
  },
  "application/json": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true,
    "extensions": ["json","map"]
  },
  "application/json-patch+json": {
    "source": "iana",
    "compressible": true
  },
  "application/json-seq": {
    "source": "iana"
  },
  "application/json5": {
    "extensions": ["json5"]
  },
  "application/jsonml+json": {
    "source": "apache",
    "compressible": true,
    "extensions": ["jsonml"]
  },
  "application/jwk+json": {
    "source": "iana",
    "compressible": true
  },
  "application/jwk-set+json": {
    "source": "iana",
    "compressible": true
  },
  "application/jwt": {
    "source": "iana"
  },
  "application/kpml-request+xml": {
    "source": "iana"
  },
  "application/kpml-response+xml": {
    "source": "iana"
  },
  "application/ld+json": {
    "source": "iana",
    "compressible": true,
    "extensions": ["jsonld"]
  },
  "application/link-format": {
    "source": "iana"
  },
  "application/load-control+xml": {
    "source": "iana"
  },
  "application/lost+xml": {
    "source": "iana",
    "extensions": ["lostxml"]
  },
  "application/lostsync+xml": {
    "source": "iana"
  },
  "application/lxf": {
    "source": "iana"
  },
  "application/mac-binhex40": {
    "source": "iana",
    "extensions": ["hqx"]
  },
  "application/mac-compactpro": {
    "source": "apache",
    "extensions": ["cpt"]
  },
  "application/macwriteii": {
    "source": "iana"
  },
  "application/mads+xml": {
    "source": "iana",
    "extensions": ["mads"]
  },
  "application/manifest+json": {
    "charset": "UTF-8",
    "compressible": true,
    "extensions": ["webmanifest"]
  },
  "application/marc": {
    "source": "iana",
    "extensions": ["mrc"]
  },
  "application/marcxml+xml": {
    "source": "iana",
    "extensions": ["mrcx"]
  },
  "application/mathematica": {
    "source": "iana",
    "extensions": ["ma","nb","mb"]
  },
  "application/mathml+xml": {
    "source": "iana",
    "extensions": ["mathml"]
  },
  "application/mathml-content+xml": {
    "source": "iana"
  },
  "application/mathml-presentation+xml": {
    "source": "iana"
  },
  "application/mbms-associated-procedure-description+xml": {
    "source": "iana"
  },
  "application/mbms-deregister+xml": {
    "source": "iana"
  },
  "application/mbms-envelope+xml": {
    "source": "iana"
  },
  "application/mbms-msk+xml": {
    "source": "iana"
  },
  "application/mbms-msk-response+xml": {
    "source": "iana"
  },
  "application/mbms-protection-description+xml": {
    "source": "iana"
  },
  "application/mbms-reception-report+xml": {
    "source": "iana"
  },
  "application/mbms-register+xml": {
    "source": "iana"
  },
  "application/mbms-register-response+xml": {
    "source": "iana"
  },
  "application/mbms-schedule+xml": {
    "source": "iana"
  },
  "application/mbms-user-service-description+xml": {
    "source": "iana"
  },
  "application/mbox": {
    "source": "iana",
    "extensions": ["mbox"]
  },
  "application/media-policy-dataset+xml": {
    "source": "iana"
  },
  "application/media_control+xml": {
    "source": "iana"
  },
  "application/mediaservercontrol+xml": {
    "source": "iana",
    "extensions": ["mscml"]
  },
  "application/merge-patch+json": {
    "source": "iana",
    "compressible": true
  },
  "application/metalink+xml": {
    "source": "apache",
    "extensions": ["metalink"]
  },
  "application/metalink4+xml": {
    "source": "iana",
    "extensions": ["meta4"]
  },
  "application/mets+xml": {
    "source": "iana",
    "extensions": ["mets"]
  },
  "application/mf4": {
    "source": "iana"
  },
  "application/mikey": {
    "source": "iana"
  },
  "application/mods+xml": {
    "source": "iana",
    "extensions": ["mods"]
  },
  "application/moss-keys": {
    "source": "iana"
  },
  "application/moss-signature": {
    "source": "iana"
  },
  "application/mosskey-data": {
    "source": "iana"
  },
  "application/mosskey-request": {
    "source": "iana"
  },
  "application/mp21": {
    "source": "iana",
    "extensions": ["m21","mp21"]
  },
  "application/mp4": {
    "source": "iana",
    "extensions": ["mp4s","m4p"]
  },
  "application/mpeg4-generic": {
    "source": "iana"
  },
  "application/mpeg4-iod": {
    "source": "iana"
  },
  "application/mpeg4-iod-xmt": {
    "source": "iana"
  },
  "application/mrb-consumer+xml": {
    "source": "iana"
  },
  "application/mrb-publish+xml": {
    "source": "iana"
  },
  "application/msc-ivr+xml": {
    "source": "iana"
  },
  "application/msc-mixer+xml": {
    "source": "iana"
  },
  "application/msword": {
    "source": "iana",
    "compressible": false,
    "extensions": ["doc","dot"]
  },
  "application/mxf": {
    "source": "iana",
    "extensions": ["mxf"]
  },
  "application/nasdata": {
    "source": "iana"
  },
  "application/news-checkgroups": {
    "source": "iana"
  },
  "application/news-groupinfo": {
    "source": "iana"
  },
  "application/news-transmission": {
    "source": "iana"
  },
  "application/nlsml+xml": {
    "source": "iana"
  },
  "application/nss": {
    "source": "iana"
  },
  "application/ocsp-request": {
    "source": "iana"
  },
  "application/ocsp-response": {
    "source": "iana"
  },
  "application/octet-stream": {
    "source": "iana",
    "compressible": false,
    "extensions": ["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]
  },
  "application/oda": {
    "source": "iana",
    "extensions": ["oda"]
  },
  "application/odx": {
    "source": "iana"
  },
  "application/oebps-package+xml": {
    "source": "iana",
    "extensions": ["opf"]
  },
  "application/ogg": {
    "source": "iana",
    "compressible": false,
    "extensions": ["ogx"]
  },
  "application/omdoc+xml": {
    "source": "apache",
    "extensions": ["omdoc"]
  },
  "application/onenote": {
    "source": "apache",
    "extensions": ["onetoc","onetoc2","onetmp","onepkg"]
  },
  "application/oxps": {
    "source": "iana",
    "extensions": ["oxps"]
  },
  "application/p2p-overlay+xml": {
    "source": "iana"
  },
  "application/parityfec": {
    "source": "iana"
  },
  "application/patch-ops-error+xml": {
    "source": "iana",
    "extensions": ["xer"]
  },
  "application/pdf": {
    "source": "iana",
    "compressible": false,
    "extensions": ["pdf"]
  },
  "application/pdx": {
    "source": "iana"
  },
  "application/pgp-encrypted": {
    "source": "iana",
    "compressible": false,
    "extensions": ["pgp"]
  },
  "application/pgp-keys": {
    "source": "iana"
  },
  "application/pgp-signature": {
    "source": "iana",
    "extensions": ["asc","sig"]
  },
  "application/pics-rules": {
    "source": "apache",
    "extensions": ["prf"]
  },
  "application/pidf+xml": {
    "source": "iana"
  },
  "application/pidf-diff+xml": {
    "source": "iana"
  },
  "application/pkcs10": {
    "source": "iana",
    "extensions": ["p10"]
  },
  "application/pkcs12": {
    "source": "iana"
  },
  "application/pkcs7-mime": {
    "source": "iana",
    "extensions": ["p7m","p7c"]
  },
  "application/pkcs7-signature": {
    "source": "iana",
    "extensions": ["p7s"]
  },
  "application/pkcs8": {
    "source": "iana",
    "extensions": ["p8"]
  },
  "application/pkix-attr-cert": {
    "source": "iana",
    "extensions": ["ac"]
  },
  "application/pkix-cert": {
    "source": "iana",
    "extensions": ["cer"]
  },
  "application/pkix-crl": {
    "source": "iana",
    "extensions": ["crl"]
  },
  "application/pkix-pkipath": {
    "source": "iana",
    "extensions": ["pkipath"]
  },
  "application/pkixcmp": {
    "source": "iana",
    "extensions": ["pki"]
  },
  "application/pls+xml": {
    "source": "iana",
    "extensions": ["pls"]
  },
  "application/poc-settings+xml": {
    "source": "iana"
  },
  "application/postscript": {
    "source": "iana",
    "compressible": true,
    "extensions": ["ai","eps","ps"]
  },
  "application/provenance+xml": {
    "source": "iana"
  },
  "application/prs.alvestrand.titrax-sheet": {
    "source": "iana"
  },
  "application/prs.cww": {
    "source": "iana",
    "extensions": ["cww"]
  },
  "application/prs.hpub+zip": {
    "source": "iana"
  },
  "application/prs.nprend": {
    "source": "iana"
  },
  "application/prs.plucker": {
    "source": "iana"
  },
  "application/prs.rdf-xml-crypt": {
    "source": "iana"
  },
  "application/prs.xsf+xml": {
    "source": "iana"
  },
  "application/pskc+xml": {
    "source": "iana",
    "extensions": ["pskcxml"]
  },
  "application/qsig": {
    "source": "iana"
  },
  "application/raptorfec": {
    "source": "iana"
  },
  "application/rdap+json": {
    "source": "iana",
    "compressible": true
  },
  "application/rdf+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rdf"]
  },
  "application/reginfo+xml": {
    "source": "iana",
    "extensions": ["rif"]
  },
  "application/relax-ng-compact-syntax": {
    "source": "iana",
    "extensions": ["rnc"]
  },
  "application/remote-printing": {
    "source": "iana"
  },
  "application/reputon+json": {
    "source": "iana",
    "compressible": true
  },
  "application/resource-lists+xml": {
    "source": "iana",
    "extensions": ["rl"]
  },
  "application/resource-lists-diff+xml": {
    "source": "iana",
    "extensions": ["rld"]
  },
  "application/rfc+xml": {
    "source": "iana"
  },
  "application/riscos": {
    "source": "iana"
  },
  "application/rlmi+xml": {
    "source": "iana"
  },
  "application/rls-services+xml": {
    "source": "iana",
    "extensions": ["rs"]
  },
  "application/rpki-ghostbusters": {
    "source": "iana",
    "extensions": ["gbr"]
  },
  "application/rpki-manifest": {
    "source": "iana",
    "extensions": ["mft"]
  },
  "application/rpki-roa": {
    "source": "iana",
    "extensions": ["roa"]
  },
  "application/rpki-updown": {
    "source": "iana"
  },
  "application/rsd+xml": {
    "source": "apache",
    "extensions": ["rsd"]
  },
  "application/rss+xml": {
    "source": "apache",
    "compressible": true,
    "extensions": ["rss"]
  },
  "application/rtf": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rtf"]
  },
  "application/rtploopback": {
    "source": "iana"
  },
  "application/rtx": {
    "source": "iana"
  },
  "application/samlassertion+xml": {
    "source": "iana"
  },
  "application/samlmetadata+xml": {
    "source": "iana"
  },
  "application/sbml+xml": {
    "source": "iana",
    "extensions": ["sbml"]
  },
  "application/scaip+xml": {
    "source": "iana"
  },
  "application/scim+json": {
    "source": "iana",
    "compressible": true
  },
  "application/scvp-cv-request": {
    "source": "iana",
    "extensions": ["scq"]
  },
  "application/scvp-cv-response": {
    "source": "iana",
    "extensions": ["scs"]
  },
  "application/scvp-vp-request": {
    "source": "iana",
    "extensions": ["spq"]
  },
  "application/scvp-vp-response": {
    "source": "iana",
    "extensions": ["spp"]
  },
  "application/sdp": {
    "source": "iana",
    "extensions": ["sdp"]
  },
  "application/sep+xml": {
    "source": "iana"
  },
  "application/sep-exi": {
    "source": "iana"
  },
  "application/session-info": {
    "source": "iana"
  },
  "application/set-payment": {
    "source": "iana"
  },
  "application/set-payment-initiation": {
    "source": "iana",
    "extensions": ["setpay"]
  },
  "application/set-registration": {
    "source": "iana"
  },
  "application/set-registration-initiation": {
    "source": "iana",
    "extensions": ["setreg"]
  },
  "application/sgml": {
    "source": "iana"
  },
  "application/sgml-open-catalog": {
    "source": "iana"
  },
  "application/shf+xml": {
    "source": "iana",
    "extensions": ["shf"]
  },
  "application/sieve": {
    "source": "iana"
  },
  "application/simple-filter+xml": {
    "source": "iana"
  },
  "application/simple-message-summary": {
    "source": "iana"
  },
  "application/simplesymbolcontainer": {
    "source": "iana"
  },
  "application/slate": {
    "source": "iana"
  },
  "application/smil": {
    "source": "iana"
  },
  "application/smil+xml": {
    "source": "iana",
    "extensions": ["smi","smil"]
  },
  "application/smpte336m": {
    "source": "iana"
  },
  "application/soap+fastinfoset": {
    "source": "iana"
  },
  "application/soap+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/sparql-query": {
    "source": "iana",
    "extensions": ["rq"]
  },
  "application/sparql-results+xml": {
    "source": "iana",
    "extensions": ["srx"]
  },
  "application/spirits-event+xml": {
    "source": "iana"
  },
  "application/sql": {
    "source": "iana"
  },
  "application/srgs": {
    "source": "iana",
    "extensions": ["gram"]
  },
  "application/srgs+xml": {
    "source": "iana",
    "extensions": ["grxml"]
  },
  "application/sru+xml": {
    "source": "iana",
    "extensions": ["sru"]
  },
  "application/ssdl+xml": {
    "source": "apache",
    "extensions": ["ssdl"]
  },
  "application/ssml+xml": {
    "source": "iana",
    "extensions": ["ssml"]
  },
  "application/tamp-apex-update": {
    "source": "iana"
  },
  "application/tamp-apex-update-confirm": {
    "source": "iana"
  },
  "application/tamp-community-update": {
    "source": "iana"
  },
  "application/tamp-community-update-confirm": {
    "source": "iana"
  },
  "application/tamp-error": {
    "source": "iana"
  },
  "application/tamp-sequence-adjust": {
    "source": "iana"
  },
  "application/tamp-sequence-adjust-confirm": {
    "source": "iana"
  },
  "application/tamp-status-query": {
    "source": "iana"
  },
  "application/tamp-status-response": {
    "source": "iana"
  },
  "application/tamp-update": {
    "source": "iana"
  },
  "application/tamp-update-confirm": {
    "source": "iana"
  },
  "application/tar": {
    "compressible": true
  },
  "application/tei+xml": {
    "source": "iana",
    "extensions": ["tei","teicorpus"]
  },
  "application/thraud+xml": {
    "source": "iana",
    "extensions": ["tfi"]
  },
  "application/timestamp-query": {
    "source": "iana"
  },
  "application/timestamp-reply": {
    "source": "iana"
  },
  "application/timestamped-data": {
    "source": "iana",
    "extensions": ["tsd"]
  },
  "application/ttml+xml": {
    "source": "iana"
  },
  "application/tve-trigger": {
    "source": "iana"
  },
  "application/ulpfec": {
    "source": "iana"
  },
  "application/urc-grpsheet+xml": {
    "source": "iana"
  },
  "application/urc-ressheet+xml": {
    "source": "iana"
  },
  "application/urc-targetdesc+xml": {
    "source": "iana"
  },
  "application/urc-uisocketdesc+xml": {
    "source": "iana"
  },
  "application/vcard+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vcard+xml": {
    "source": "iana"
  },
  "application/vemmi": {
    "source": "iana"
  },
  "application/vividence.scriptfile": {
    "source": "apache"
  },
  "application/vnd.3gpp-prose+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp-prose-pc3ch+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp.access-transfer-events+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp.bsf+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp.mid-call+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp.pic-bw-large": {
    "source": "iana",
    "extensions": ["plb"]
  },
  "application/vnd.3gpp.pic-bw-small": {
    "source": "iana",
    "extensions": ["psb"]
  },
  "application/vnd.3gpp.pic-bw-var": {
    "source": "iana",
    "extensions": ["pvb"]
  },
  "application/vnd.3gpp.sms": {
    "source": "iana"
  },
  "application/vnd.3gpp.srvcc-ext+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp.srvcc-info+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp.state-and-event-info+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp.ussd+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp2.bcmcsinfo+xml": {
    "source": "iana"
  },
  "application/vnd.3gpp2.sms": {
    "source": "iana"
  },
  "application/vnd.3gpp2.tcap": {
    "source": "iana",
    "extensions": ["tcap"]
  },
  "application/vnd.3m.post-it-notes": {
    "source": "iana",
    "extensions": ["pwn"]
  },
  "application/vnd.accpac.simply.aso": {
    "source": "iana",
    "extensions": ["aso"]
  },
  "application/vnd.accpac.simply.imp": {
    "source": "iana",
    "extensions": ["imp"]
  },
  "application/vnd.acucobol": {
    "source": "iana",
    "extensions": ["acu"]
  },
  "application/vnd.acucorp": {
    "source": "iana",
    "extensions": ["atc","acutc"]
  },
  "application/vnd.adobe.air-application-installer-package+zip": {
    "source": "apache",
    "extensions": ["air"]
  },
  "application/vnd.adobe.flash.movie": {
    "source": "iana"
  },
  "application/vnd.adobe.formscentral.fcdt": {
    "source": "iana",
    "extensions": ["fcdt"]
  },
  "application/vnd.adobe.fxp": {
    "source": "iana",
    "extensions": ["fxp","fxpl"]
  },
  "application/vnd.adobe.partial-upload": {
    "source": "iana"
  },
  "application/vnd.adobe.xdp+xml": {
    "source": "iana",
    "extensions": ["xdp"]
  },
  "application/vnd.adobe.xfdf": {
    "source": "iana",
    "extensions": ["xfdf"]
  },
  "application/vnd.aether.imp": {
    "source": "iana"
  },
  "application/vnd.ah-barcode": {
    "source": "iana"
  },
  "application/vnd.ahead.space": {
    "source": "iana",
    "extensions": ["ahead"]
  },
  "application/vnd.airzip.filesecure.azf": {
    "source": "iana",
    "extensions": ["azf"]
  },
  "application/vnd.airzip.filesecure.azs": {
    "source": "iana",
    "extensions": ["azs"]
  },
  "application/vnd.amazon.ebook": {
    "source": "apache",
    "extensions": ["azw"]
  },
  "application/vnd.americandynamics.acc": {
    "source": "iana",
    "extensions": ["acc"]
  },
  "application/vnd.amiga.ami": {
    "source": "iana",
    "extensions": ["ami"]
  },
  "application/vnd.amundsen.maze+xml": {
    "source": "iana"
  },
  "application/vnd.android.package-archive": {
    "source": "apache",
    "compressible": false,
    "extensions": ["apk"]
  },
  "application/vnd.anki": {
    "source": "iana"
  },
  "application/vnd.anser-web-certificate-issue-initiation": {
    "source": "iana",
    "extensions": ["cii"]
  },
  "application/vnd.anser-web-funds-transfer-initiation": {
    "source": "apache",
    "extensions": ["fti"]
  },
  "application/vnd.antix.game-component": {
    "source": "iana",
    "extensions": ["atx"]
  },
  "application/vnd.apache.thrift.binary": {
    "source": "iana"
  },
  "application/vnd.apache.thrift.compact": {
    "source": "iana"
  },
  "application/vnd.apache.thrift.json": {
    "source": "iana"
  },
  "application/vnd.api+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.apple.installer+xml": {
    "source": "iana",
    "extensions": ["mpkg"]
  },
  "application/vnd.apple.mpegurl": {
    "source": "iana",
    "extensions": ["m3u8"]
  },
  "application/vnd.apple.pkpass": {
    "compressible": false,
    "extensions": ["pkpass"]
  },
  "application/vnd.arastra.swi": {
    "source": "iana"
  },
  "application/vnd.aristanetworks.swi": {
    "source": "iana",
    "extensions": ["swi"]
  },
  "application/vnd.artsquare": {
    "source": "iana"
  },
  "application/vnd.astraea-software.iota": {
    "source": "iana",
    "extensions": ["iota"]
  },
  "application/vnd.audiograph": {
    "source": "iana",
    "extensions": ["aep"]
  },
  "application/vnd.autopackage": {
    "source": "iana"
  },
  "application/vnd.avistar+xml": {
    "source": "iana"
  },
  "application/vnd.balsamiq.bmml+xml": {
    "source": "iana"
  },
  "application/vnd.balsamiq.bmpr": {
    "source": "iana"
  },
  "application/vnd.bekitzur-stech+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.biopax.rdf+xml": {
    "source": "iana"
  },
  "application/vnd.blueice.multipass": {
    "source": "iana",
    "extensions": ["mpm"]
  },
  "application/vnd.bluetooth.ep.oob": {
    "source": "iana"
  },
  "application/vnd.bluetooth.le.oob": {
    "source": "iana"
  },
  "application/vnd.bmi": {
    "source": "iana",
    "extensions": ["bmi"]
  },
  "application/vnd.businessobjects": {
    "source": "iana",
    "extensions": ["rep"]
  },
  "application/vnd.cab-jscript": {
    "source": "iana"
  },
  "application/vnd.canon-cpdl": {
    "source": "iana"
  },
  "application/vnd.canon-lips": {
    "source": "iana"
  },
  "application/vnd.cendio.thinlinc.clientconf": {
    "source": "iana"
  },
  "application/vnd.century-systems.tcp_stream": {
    "source": "iana"
  },
  "application/vnd.chemdraw+xml": {
    "source": "iana",
    "extensions": ["cdxml"]
  },
  "application/vnd.chipnuts.karaoke-mmd": {
    "source": "iana",
    "extensions": ["mmd"]
  },
  "application/vnd.cinderella": {
    "source": "iana",
    "extensions": ["cdy"]
  },
  "application/vnd.cirpack.isdn-ext": {
    "source": "iana"
  },
  "application/vnd.citationstyles.style+xml": {
    "source": "iana"
  },
  "application/vnd.claymore": {
    "source": "iana",
    "extensions": ["cla"]
  },
  "application/vnd.cloanto.rp9": {
    "source": "iana",
    "extensions": ["rp9"]
  },
  "application/vnd.clonk.c4group": {
    "source": "iana",
    "extensions": ["c4g","c4d","c4f","c4p","c4u"]
  },
  "application/vnd.cluetrust.cartomobile-config": {
    "source": "iana",
    "extensions": ["c11amc"]
  },
  "application/vnd.cluetrust.cartomobile-config-pkg": {
    "source": "iana",
    "extensions": ["c11amz"]
  },
  "application/vnd.coffeescript": {
    "source": "iana"
  },
  "application/vnd.collection+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.collection.doc+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.collection.next+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.commerce-battelle": {
    "source": "iana"
  },
  "application/vnd.commonspace": {
    "source": "iana",
    "extensions": ["csp"]
  },
  "application/vnd.contact.cmsg": {
    "source": "iana",
    "extensions": ["cdbcmsg"]
  },
  "application/vnd.cosmocaller": {
    "source": "iana",
    "extensions": ["cmc"]
  },
  "application/vnd.crick.clicker": {
    "source": "iana",
    "extensions": ["clkx"]
  },
  "application/vnd.crick.clicker.keyboard": {
    "source": "iana",
    "extensions": ["clkk"]
  },
  "application/vnd.crick.clicker.palette": {
    "source": "iana",
    "extensions": ["clkp"]
  },
  "application/vnd.crick.clicker.template": {
    "source": "iana",
    "extensions": ["clkt"]
  },
  "application/vnd.crick.clicker.wordbank": {
    "source": "iana",
    "extensions": ["clkw"]
  },
  "application/vnd.criticaltools.wbs+xml": {
    "source": "iana",
    "extensions": ["wbs"]
  },
  "application/vnd.ctc-posml": {
    "source": "iana",
    "extensions": ["pml"]
  },
  "application/vnd.ctct.ws+xml": {
    "source": "iana"
  },
  "application/vnd.cups-pdf": {
    "source": "iana"
  },
  "application/vnd.cups-postscript": {
    "source": "iana"
  },
  "application/vnd.cups-ppd": {
    "source": "iana",
    "extensions": ["ppd"]
  },
  "application/vnd.cups-raster": {
    "source": "iana"
  },
  "application/vnd.cups-raw": {
    "source": "iana"
  },
  "application/vnd.curl": {
    "source": "iana"
  },
  "application/vnd.curl.car": {
    "source": "apache",
    "extensions": ["car"]
  },
  "application/vnd.curl.pcurl": {
    "source": "apache",
    "extensions": ["pcurl"]
  },
  "application/vnd.cyan.dean.root+xml": {
    "source": "iana"
  },
  "application/vnd.cybank": {
    "source": "iana"
  },
  "application/vnd.dart": {
    "source": "iana",
    "compressible": true,
    "extensions": ["dart"]
  },
  "application/vnd.data-vision.rdz": {
    "source": "iana",
    "extensions": ["rdz"]
  },
  "application/vnd.debian.binary-package": {
    "source": "iana"
  },
  "application/vnd.dece.data": {
    "source": "iana",
    "extensions": ["uvf","uvvf","uvd","uvvd"]
  },
  "application/vnd.dece.ttml+xml": {
    "source": "iana",
    "extensions": ["uvt","uvvt"]
  },
  "application/vnd.dece.unspecified": {
    "source": "iana",
    "extensions": ["uvx","uvvx"]
  },
  "application/vnd.dece.zip": {
    "source": "iana",
    "extensions": ["uvz","uvvz"]
  },
  "application/vnd.denovo.fcselayout-link": {
    "source": "iana",
    "extensions": ["fe_launch"]
  },
  "application/vnd.desmume-movie": {
    "source": "iana"
  },
  "application/vnd.dir-bi.plate-dl-nosuffix": {
    "source": "iana"
  },
  "application/vnd.dm.delegation+xml": {
    "source": "iana"
  },
  "application/vnd.dna": {
    "source": "iana",
    "extensions": ["dna"]
  },
  "application/vnd.document+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.dolby.mlp": {
    "source": "apache",
    "extensions": ["mlp"]
  },
  "application/vnd.dolby.mobile.1": {
    "source": "iana"
  },
  "application/vnd.dolby.mobile.2": {
    "source": "iana"
  },
  "application/vnd.doremir.scorecloud-binary-document": {
    "source": "iana"
  },
  "application/vnd.dpgraph": {
    "source": "iana",
    "extensions": ["dpg"]
  },
  "application/vnd.dreamfactory": {
    "source": "iana",
    "extensions": ["dfac"]
  },
  "application/vnd.drive+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ds-keypoint": {
    "source": "apache",
    "extensions": ["kpxx"]
  },
  "application/vnd.dtg.local": {
    "source": "iana"
  },
  "application/vnd.dtg.local.flash": {
    "source": "iana"
  },
  "application/vnd.dtg.local.html": {
    "source": "iana"
  },
  "application/vnd.dvb.ait": {
    "source": "iana",
    "extensions": ["ait"]
  },
  "application/vnd.dvb.dvbj": {
    "source": "iana"
  },
  "application/vnd.dvb.esgcontainer": {
    "source": "iana"
  },
  "application/vnd.dvb.ipdcdftnotifaccess": {
    "source": "iana"
  },
  "application/vnd.dvb.ipdcesgaccess": {
    "source": "iana"
  },
  "application/vnd.dvb.ipdcesgaccess2": {
    "source": "iana"
  },
  "application/vnd.dvb.ipdcesgpdd": {
    "source": "iana"
  },
  "application/vnd.dvb.ipdcroaming": {
    "source": "iana"
  },
  "application/vnd.dvb.iptv.alfec-base": {
    "source": "iana"
  },
  "application/vnd.dvb.iptv.alfec-enhancement": {
    "source": "iana"
  },
  "application/vnd.dvb.notif-aggregate-root+xml": {
    "source": "iana"
  },
  "application/vnd.dvb.notif-container+xml": {
    "source": "iana"
  },
  "application/vnd.dvb.notif-generic+xml": {
    "source": "iana"
  },
  "application/vnd.dvb.notif-ia-msglist+xml": {
    "source": "iana"
  },
  "application/vnd.dvb.notif-ia-registration-request+xml": {
    "source": "iana"
  },
  "application/vnd.dvb.notif-ia-registration-response+xml": {
    "source": "iana"
  },
  "application/vnd.dvb.notif-init+xml": {
    "source": "iana"
  },
  "application/vnd.dvb.pfr": {
    "source": "iana"
  },
  "application/vnd.dvb.service": {
    "source": "iana",
    "extensions": ["svc"]
  },
  "application/vnd.dxr": {
    "source": "iana"
  },
  "application/vnd.dynageo": {
    "source": "iana",
    "extensions": ["geo"]
  },
  "application/vnd.dzr": {
    "source": "iana"
  },
  "application/vnd.easykaraoke.cdgdownload": {
    "source": "iana"
  },
  "application/vnd.ecdis-update": {
    "source": "iana"
  },
  "application/vnd.ecowin.chart": {
    "source": "iana",
    "extensions": ["mag"]
  },
  "application/vnd.ecowin.filerequest": {
    "source": "iana"
  },
  "application/vnd.ecowin.fileupdate": {
    "source": "iana"
  },
  "application/vnd.ecowin.series": {
    "source": "iana"
  },
  "application/vnd.ecowin.seriesrequest": {
    "source": "iana"
  },
  "application/vnd.ecowin.seriesupdate": {
    "source": "iana"
  },
  "application/vnd.emclient.accessrequest+xml": {
    "source": "iana"
  },
  "application/vnd.enliven": {
    "source": "iana",
    "extensions": ["nml"]
  },
  "application/vnd.enphase.envoy": {
    "source": "iana"
  },
  "application/vnd.eprints.data+xml": {
    "source": "iana"
  },
  "application/vnd.epson.esf": {
    "source": "iana",
    "extensions": ["esf"]
  },
  "application/vnd.epson.msf": {
    "source": "iana",
    "extensions": ["msf"]
  },
  "application/vnd.epson.quickanime": {
    "source": "iana",
    "extensions": ["qam"]
  },
  "application/vnd.epson.salt": {
    "source": "iana",
    "extensions": ["slt"]
  },
  "application/vnd.epson.ssf": {
    "source": "iana",
    "extensions": ["ssf"]
  },
  "application/vnd.ericsson.quickcall": {
    "source": "iana"
  },
  "application/vnd.eszigno3+xml": {
    "source": "iana",
    "extensions": ["es3","et3"]
  },
  "application/vnd.etsi.aoc+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.asic-e+zip": {
    "source": "iana"
  },
  "application/vnd.etsi.asic-s+zip": {
    "source": "iana"
  },
  "application/vnd.etsi.cug+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.iptvcommand+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.iptvdiscovery+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.iptvprofile+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.iptvsad-bc+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.iptvsad-cod+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.iptvsad-npvr+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.iptvservice+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.iptvsync+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.iptvueprofile+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.mcid+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.mheg5": {
    "source": "iana"
  },
  "application/vnd.etsi.overload-control-policy-dataset+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.pstn+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.sci+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.simservs+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.timestamp-token": {
    "source": "iana"
  },
  "application/vnd.etsi.tsl+xml": {
    "source": "iana"
  },
  "application/vnd.etsi.tsl.der": {
    "source": "iana"
  },
  "application/vnd.eudora.data": {
    "source": "iana"
  },
  "application/vnd.ezpix-album": {
    "source": "iana",
    "extensions": ["ez2"]
  },
  "application/vnd.ezpix-package": {
    "source": "iana",
    "extensions": ["ez3"]
  },
  "application/vnd.f-secure.mobile": {
    "source": "iana"
  },
  "application/vnd.fastcopy-disk-image": {
    "source": "iana"
  },
  "application/vnd.fdf": {
    "source": "iana",
    "extensions": ["fdf"]
  },
  "application/vnd.fdsn.mseed": {
    "source": "iana",
    "extensions": ["mseed"]
  },
  "application/vnd.fdsn.seed": {
    "source": "iana",
    "extensions": ["seed","dataless"]
  },
  "application/vnd.ffsns": {
    "source": "iana"
  },
  "application/vnd.filmit.zfc": {
    "source": "iana"
  },
  "application/vnd.fints": {
    "source": "iana"
  },
  "application/vnd.firemonkeys.cloudcell": {
    "source": "iana"
  },
  "application/vnd.flographit": {
    "source": "iana",
    "extensions": ["gph"]
  },
  "application/vnd.fluxtime.clip": {
    "source": "iana",
    "extensions": ["ftc"]
  },
  "application/vnd.font-fontforge-sfd": {
    "source": "iana"
  },
  "application/vnd.framemaker": {
    "source": "iana",
    "extensions": ["fm","frame","maker","book"]
  },
  "application/vnd.frogans.fnc": {
    "source": "iana",
    "extensions": ["fnc"]
  },
  "application/vnd.frogans.ltf": {
    "source": "iana",
    "extensions": ["ltf"]
  },
  "application/vnd.fsc.weblaunch": {
    "source": "iana",
    "extensions": ["fsc"]
  },
  "application/vnd.fujitsu.oasys": {
    "source": "iana",
    "extensions": ["oas"]
  },
  "application/vnd.fujitsu.oasys2": {
    "source": "iana",
    "extensions": ["oa2"]
  },
  "application/vnd.fujitsu.oasys3": {
    "source": "iana",
    "extensions": ["oa3"]
  },
  "application/vnd.fujitsu.oasysgp": {
    "source": "iana",
    "extensions": ["fg5"]
  },
  "application/vnd.fujitsu.oasysprs": {
    "source": "iana",
    "extensions": ["bh2"]
  },
  "application/vnd.fujixerox.art-ex": {
    "source": "iana"
  },
  "application/vnd.fujixerox.art4": {
    "source": "iana"
  },
  "application/vnd.fujixerox.ddd": {
    "source": "iana",
    "extensions": ["ddd"]
  },
  "application/vnd.fujixerox.docuworks": {
    "source": "iana",
    "extensions": ["xdw"]
  },
  "application/vnd.fujixerox.docuworks.binder": {
    "source": "iana",
    "extensions": ["xbd"]
  },
  "application/vnd.fujixerox.docuworks.container": {
    "source": "iana"
  },
  "application/vnd.fujixerox.hbpl": {
    "source": "iana"
  },
  "application/vnd.fut-misnet": {
    "source": "iana"
  },
  "application/vnd.fuzzysheet": {
    "source": "iana",
    "extensions": ["fzs"]
  },
  "application/vnd.genomatix.tuxedo": {
    "source": "iana",
    "extensions": ["txd"]
  },
  "application/vnd.geo+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.geocube+xml": {
    "source": "iana"
  },
  "application/vnd.geogebra.file": {
    "source": "iana",
    "extensions": ["ggb"]
  },
  "application/vnd.geogebra.tool": {
    "source": "iana",
    "extensions": ["ggt"]
  },
  "application/vnd.geometry-explorer": {
    "source": "iana",
    "extensions": ["gex","gre"]
  },
  "application/vnd.geonext": {
    "source": "iana",
    "extensions": ["gxt"]
  },
  "application/vnd.geoplan": {
    "source": "iana",
    "extensions": ["g2w"]
  },
  "application/vnd.geospace": {
    "source": "iana",
    "extensions": ["g3w"]
  },
  "application/vnd.gerber": {
    "source": "iana"
  },
  "application/vnd.globalplatform.card-content-mgt": {
    "source": "iana"
  },
  "application/vnd.globalplatform.card-content-mgt-response": {
    "source": "iana"
  },
  "application/vnd.gmx": {
    "source": "iana",
    "extensions": ["gmx"]
  },
  "application/vnd.google-apps.document": {
    "compressible": false,
    "extensions": ["gdoc"]
  },
  "application/vnd.google-apps.presentation": {
    "compressible": false,
    "extensions": ["gslides"]
  },
  "application/vnd.google-apps.spreadsheet": {
    "compressible": false,
    "extensions": ["gsheet"]
  },
  "application/vnd.google-earth.kml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["kml"]
  },
  "application/vnd.google-earth.kmz": {
    "source": "iana",
    "compressible": false,
    "extensions": ["kmz"]
  },
  "application/vnd.gov.sk.e-form+xml": {
    "source": "iana"
  },
  "application/vnd.gov.sk.e-form+zip": {
    "source": "iana"
  },
  "application/vnd.gov.sk.xmldatacontainer+xml": {
    "source": "iana"
  },
  "application/vnd.grafeq": {
    "source": "iana",
    "extensions": ["gqf","gqs"]
  },
  "application/vnd.gridmp": {
    "source": "iana"
  },
  "application/vnd.groove-account": {
    "source": "iana",
    "extensions": ["gac"]
  },
  "application/vnd.groove-help": {
    "source": "iana",
    "extensions": ["ghf"]
  },
  "application/vnd.groove-identity-message": {
    "source": "iana",
    "extensions": ["gim"]
  },
  "application/vnd.groove-injector": {
    "source": "iana",
    "extensions": ["grv"]
  },
  "application/vnd.groove-tool-message": {
    "source": "iana",
    "extensions": ["gtm"]
  },
  "application/vnd.groove-tool-template": {
    "source": "iana",
    "extensions": ["tpl"]
  },
  "application/vnd.groove-vcard": {
    "source": "iana",
    "extensions": ["vcg"]
  },
  "application/vnd.hal+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.hal+xml": {
    "source": "iana",
    "extensions": ["hal"]
  },
  "application/vnd.handheld-entertainment+xml": {
    "source": "iana",
    "extensions": ["zmm"]
  },
  "application/vnd.hbci": {
    "source": "iana",
    "extensions": ["hbci"]
  },
  "application/vnd.hcl-bireports": {
    "source": "iana"
  },
  "application/vnd.heroku+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.hhe.lesson-player": {
    "source": "iana",
    "extensions": ["les"]
  },
  "application/vnd.hp-hpgl": {
    "source": "iana",
    "extensions": ["hpgl"]
  },
  "application/vnd.hp-hpid": {
    "source": "iana",
    "extensions": ["hpid"]
  },
  "application/vnd.hp-hps": {
    "source": "iana",
    "extensions": ["hps"]
  },
  "application/vnd.hp-jlyt": {
    "source": "iana",
    "extensions": ["jlt"]
  },
  "application/vnd.hp-pcl": {
    "source": "iana",
    "extensions": ["pcl"]
  },
  "application/vnd.hp-pclxl": {
    "source": "iana",
    "extensions": ["pclxl"]
  },
  "application/vnd.httphone": {
    "source": "iana"
  },
  "application/vnd.hydrostatix.sof-data": {
    "source": "iana",
    "extensions": ["sfd-hdstx"]
  },
  "application/vnd.hyperdrive+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.hzn-3d-crossword": {
    "source": "iana"
  },
  "application/vnd.ibm.afplinedata": {
    "source": "iana"
  },
  "application/vnd.ibm.electronic-media": {
    "source": "iana"
  },
  "application/vnd.ibm.minipay": {
    "source": "iana",
    "extensions": ["mpy"]
  },
  "application/vnd.ibm.modcap": {
    "source": "iana",
    "extensions": ["afp","listafp","list3820"]
  },
  "application/vnd.ibm.rights-management": {
    "source": "iana",
    "extensions": ["irm"]
  },
  "application/vnd.ibm.secure-container": {
    "source": "iana",
    "extensions": ["sc"]
  },
  "application/vnd.iccprofile": {
    "source": "iana",
    "extensions": ["icc","icm"]
  },
  "application/vnd.ieee.1905": {
    "source": "iana"
  },
  "application/vnd.igloader": {
    "source": "iana",
    "extensions": ["igl"]
  },
  "application/vnd.immervision-ivp": {
    "source": "iana",
    "extensions": ["ivp"]
  },
  "application/vnd.immervision-ivu": {
    "source": "iana",
    "extensions": ["ivu"]
  },
  "application/vnd.ims.imsccv1p1": {
    "source": "iana"
  },
  "application/vnd.ims.imsccv1p2": {
    "source": "iana"
  },
  "application/vnd.ims.imsccv1p3": {
    "source": "iana"
  },
  "application/vnd.ims.lis.v2.result+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ims.lti.v2.toolconsumerprofile+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ims.lti.v2.toolproxy+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ims.lti.v2.toolproxy.id+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ims.lti.v2.toolsettings+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ims.lti.v2.toolsettings.simple+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.informedcontrol.rms+xml": {
    "source": "iana"
  },
  "application/vnd.informix-visionary": {
    "source": "iana"
  },
  "application/vnd.infotech.project": {
    "source": "iana"
  },
  "application/vnd.infotech.project+xml": {
    "source": "iana"
  },
  "application/vnd.innopath.wamp.notification": {
    "source": "iana"
  },
  "application/vnd.insors.igm": {
    "source": "iana",
    "extensions": ["igm"]
  },
  "application/vnd.intercon.formnet": {
    "source": "iana",
    "extensions": ["xpw","xpx"]
  },
  "application/vnd.intergeo": {
    "source": "iana",
    "extensions": ["i2g"]
  },
  "application/vnd.intertrust.digibox": {
    "source": "iana"
  },
  "application/vnd.intertrust.nncp": {
    "source": "iana"
  },
  "application/vnd.intu.qbo": {
    "source": "iana",
    "extensions": ["qbo"]
  },
  "application/vnd.intu.qfx": {
    "source": "iana",
    "extensions": ["qfx"]
  },
  "application/vnd.iptc.g2.catalogitem+xml": {
    "source": "iana"
  },
  "application/vnd.iptc.g2.conceptitem+xml": {
    "source": "iana"
  },
  "application/vnd.iptc.g2.knowledgeitem+xml": {
    "source": "iana"
  },
  "application/vnd.iptc.g2.newsitem+xml": {
    "source": "iana"
  },
  "application/vnd.iptc.g2.newsmessage+xml": {
    "source": "iana"
  },
  "application/vnd.iptc.g2.packageitem+xml": {
    "source": "iana"
  },
  "application/vnd.iptc.g2.planningitem+xml": {
    "source": "iana"
  },
  "application/vnd.ipunplugged.rcprofile": {
    "source": "iana",
    "extensions": ["rcprofile"]
  },
  "application/vnd.irepository.package+xml": {
    "source": "iana",
    "extensions": ["irp"]
  },
  "application/vnd.is-xpr": {
    "source": "iana",
    "extensions": ["xpr"]
  },
  "application/vnd.isac.fcs": {
    "source": "iana",
    "extensions": ["fcs"]
  },
  "application/vnd.jam": {
    "source": "iana",
    "extensions": ["jam"]
  },
  "application/vnd.japannet-directory-service": {
    "source": "iana"
  },
  "application/vnd.japannet-jpnstore-wakeup": {
    "source": "iana"
  },
  "application/vnd.japannet-payment-wakeup": {
    "source": "iana"
  },
  "application/vnd.japannet-registration": {
    "source": "iana"
  },
  "application/vnd.japannet-registration-wakeup": {
    "source": "iana"
  },
  "application/vnd.japannet-setstore-wakeup": {
    "source": "iana"
  },
  "application/vnd.japannet-verification": {
    "source": "iana"
  },
  "application/vnd.japannet-verification-wakeup": {
    "source": "iana"
  },
  "application/vnd.jcp.javame.midlet-rms": {
    "source": "iana",
    "extensions": ["rms"]
  },
  "application/vnd.jisp": {
    "source": "iana",
    "extensions": ["jisp"]
  },
  "application/vnd.joost.joda-archive": {
    "source": "iana",
    "extensions": ["joda"]
  },
  "application/vnd.jsk.isdn-ngn": {
    "source": "iana"
  },
  "application/vnd.kahootz": {
    "source": "iana",
    "extensions": ["ktz","ktr"]
  },
  "application/vnd.kde.karbon": {
    "source": "iana",
    "extensions": ["karbon"]
  },
  "application/vnd.kde.kchart": {
    "source": "iana",
    "extensions": ["chrt"]
  },
  "application/vnd.kde.kformula": {
    "source": "iana",
    "extensions": ["kfo"]
  },
  "application/vnd.kde.kivio": {
    "source": "iana",
    "extensions": ["flw"]
  },
  "application/vnd.kde.kontour": {
    "source": "iana",
    "extensions": ["kon"]
  },
  "application/vnd.kde.kpresenter": {
    "source": "iana",
    "extensions": ["kpr","kpt"]
  },
  "application/vnd.kde.kspread": {
    "source": "iana",
    "extensions": ["ksp"]
  },
  "application/vnd.kde.kword": {
    "source": "iana",
    "extensions": ["kwd","kwt"]
  },
  "application/vnd.kenameaapp": {
    "source": "iana",
    "extensions": ["htke"]
  },
  "application/vnd.kidspiration": {
    "source": "iana",
    "extensions": ["kia"]
  },
  "application/vnd.kinar": {
    "source": "iana",
    "extensions": ["kne","knp"]
  },
  "application/vnd.koan": {
    "source": "iana",
    "extensions": ["skp","skd","skt","skm"]
  },
  "application/vnd.kodak-descriptor": {
    "source": "iana",
    "extensions": ["sse"]
  },
  "application/vnd.las.las+xml": {
    "source": "iana",
    "extensions": ["lasxml"]
  },
  "application/vnd.liberty-request+xml": {
    "source": "iana"
  },
  "application/vnd.llamagraphics.life-balance.desktop": {
    "source": "iana",
    "extensions": ["lbd"]
  },
  "application/vnd.llamagraphics.life-balance.exchange+xml": {
    "source": "iana",
    "extensions": ["lbe"]
  },
  "application/vnd.lotus-1-2-3": {
    "source": "iana",
    "extensions": ["123"]
  },
  "application/vnd.lotus-approach": {
    "source": "iana",
    "extensions": ["apr"]
  },
  "application/vnd.lotus-freelance": {
    "source": "iana",
    "extensions": ["pre"]
  },
  "application/vnd.lotus-notes": {
    "source": "iana",
    "extensions": ["nsf"]
  },
  "application/vnd.lotus-organizer": {
    "source": "iana",
    "extensions": ["org"]
  },
  "application/vnd.lotus-screencam": {
    "source": "iana",
    "extensions": ["scm"]
  },
  "application/vnd.lotus-wordpro": {
    "source": "iana",
    "extensions": ["lwp"]
  },
  "application/vnd.macports.portpkg": {
    "source": "iana",
    "extensions": ["portpkg"]
  },
  "application/vnd.mapbox-vector-tile": {
    "source": "iana"
  },
  "application/vnd.marlin.drm.actiontoken+xml": {
    "source": "iana"
  },
  "application/vnd.marlin.drm.conftoken+xml": {
    "source": "iana"
  },
  "application/vnd.marlin.drm.license+xml": {
    "source": "iana"
  },
  "application/vnd.marlin.drm.mdcf": {
    "source": "iana"
  },
  "application/vnd.mason+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.maxmind.maxmind-db": {
    "source": "iana"
  },
  "application/vnd.mcd": {
    "source": "iana",
    "extensions": ["mcd"]
  },
  "application/vnd.medcalcdata": {
    "source": "iana",
    "extensions": ["mc1"]
  },
  "application/vnd.mediastation.cdkey": {
    "source": "iana",
    "extensions": ["cdkey"]
  },
  "application/vnd.meridian-slingshot": {
    "source": "iana"
  },
  "application/vnd.mfer": {
    "source": "iana",
    "extensions": ["mwf"]
  },
  "application/vnd.mfmp": {
    "source": "iana",
    "extensions": ["mfm"]
  },
  "application/vnd.micro+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.micrografx.flo": {
    "source": "iana",
    "extensions": ["flo"]
  },
  "application/vnd.micrografx.igx": {
    "source": "iana",
    "extensions": ["igx"]
  },
  "application/vnd.microsoft.portable-executable": {
    "source": "iana"
  },
  "application/vnd.miele+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.mif": {
    "source": "iana",
    "extensions": ["mif"]
  },
  "application/vnd.minisoft-hp3000-save": {
    "source": "iana"
  },
  "application/vnd.mitsubishi.misty-guard.trustweb": {
    "source": "iana"
  },
  "application/vnd.mobius.daf": {
    "source": "iana",
    "extensions": ["daf"]
  },
  "application/vnd.mobius.dis": {
    "source": "iana",
    "extensions": ["dis"]
  },
  "application/vnd.mobius.mbk": {
    "source": "iana",
    "extensions": ["mbk"]
  },
  "application/vnd.mobius.mqy": {
    "source": "iana",
    "extensions": ["mqy"]
  },
  "application/vnd.mobius.msl": {
    "source": "iana",
    "extensions": ["msl"]
  },
  "application/vnd.mobius.plc": {
    "source": "iana",
    "extensions": ["plc"]
  },
  "application/vnd.mobius.txf": {
    "source": "iana",
    "extensions": ["txf"]
  },
  "application/vnd.mophun.application": {
    "source": "iana",
    "extensions": ["mpn"]
  },
  "application/vnd.mophun.certificate": {
    "source": "iana",
    "extensions": ["mpc"]
  },
  "application/vnd.motorola.flexsuite": {
    "source": "iana"
  },
  "application/vnd.motorola.flexsuite.adsi": {
    "source": "iana"
  },
  "application/vnd.motorola.flexsuite.fis": {
    "source": "iana"
  },
  "application/vnd.motorola.flexsuite.gotap": {
    "source": "iana"
  },
  "application/vnd.motorola.flexsuite.kmr": {
    "source": "iana"
  },
  "application/vnd.motorola.flexsuite.ttc": {
    "source": "iana"
  },
  "application/vnd.motorola.flexsuite.wem": {
    "source": "iana"
  },
  "application/vnd.motorola.iprm": {
    "source": "iana"
  },
  "application/vnd.mozilla.xul+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xul"]
  },
  "application/vnd.ms-3mfdocument": {
    "source": "iana"
  },
  "application/vnd.ms-artgalry": {
    "source": "iana",
    "extensions": ["cil"]
  },
  "application/vnd.ms-asf": {
    "source": "iana"
  },
  "application/vnd.ms-cab-compressed": {
    "source": "iana",
    "extensions": ["cab"]
  },
  "application/vnd.ms-color.iccprofile": {
    "source": "apache"
  },
  "application/vnd.ms-excel": {
    "source": "iana",
    "compressible": false,
    "extensions": ["xls","xlm","xla","xlc","xlt","xlw"]
  },
  "application/vnd.ms-excel.addin.macroenabled.12": {
    "source": "iana",
    "extensions": ["xlam"]
  },
  "application/vnd.ms-excel.sheet.binary.macroenabled.12": {
    "source": "iana",
    "extensions": ["xlsb"]
  },
  "application/vnd.ms-excel.sheet.macroenabled.12": {
    "source": "iana",
    "extensions": ["xlsm"]
  },
  "application/vnd.ms-excel.template.macroenabled.12": {
    "source": "iana",
    "extensions": ["xltm"]
  },
  "application/vnd.ms-fontobject": {
    "source": "iana",
    "compressible": true,
    "extensions": ["eot"]
  },
  "application/vnd.ms-htmlhelp": {
    "source": "iana",
    "extensions": ["chm"]
  },
  "application/vnd.ms-ims": {
    "source": "iana",
    "extensions": ["ims"]
  },
  "application/vnd.ms-lrm": {
    "source": "iana",
    "extensions": ["lrm"]
  },
  "application/vnd.ms-office.activex+xml": {
    "source": "iana"
  },
  "application/vnd.ms-officetheme": {
    "source": "iana",
    "extensions": ["thmx"]
  },
  "application/vnd.ms-opentype": {
    "source": "apache",
    "compressible": true
  },
  "application/vnd.ms-package.obfuscated-opentype": {
    "source": "apache"
  },
  "application/vnd.ms-pki.seccat": {
    "source": "apache",
    "extensions": ["cat"]
  },
  "application/vnd.ms-pki.stl": {
    "source": "apache",
    "extensions": ["stl"]
  },
  "application/vnd.ms-playready.initiator+xml": {
    "source": "iana"
  },
  "application/vnd.ms-powerpoint": {
    "source": "iana",
    "compressible": false,
    "extensions": ["ppt","pps","pot"]
  },
  "application/vnd.ms-powerpoint.addin.macroenabled.12": {
    "source": "iana",
    "extensions": ["ppam"]
  },
  "application/vnd.ms-powerpoint.presentation.macroenabled.12": {
    "source": "iana",
    "extensions": ["pptm"]
  },
  "application/vnd.ms-powerpoint.slide.macroenabled.12": {
    "source": "iana",
    "extensions": ["sldm"]
  },
  "application/vnd.ms-powerpoint.slideshow.macroenabled.12": {
    "source": "iana",
    "extensions": ["ppsm"]
  },
  "application/vnd.ms-powerpoint.template.macroenabled.12": {
    "source": "iana",
    "extensions": ["potm"]
  },
  "application/vnd.ms-printdevicecapabilities+xml": {
    "source": "iana"
  },
  "application/vnd.ms-printing.printticket+xml": {
    "source": "apache"
  },
  "application/vnd.ms-project": {
    "source": "iana",
    "extensions": ["mpp","mpt"]
  },
  "application/vnd.ms-tnef": {
    "source": "iana"
  },
  "application/vnd.ms-windows.devicepairing": {
    "source": "iana"
  },
  "application/vnd.ms-windows.nwprinting.oob": {
    "source": "iana"
  },
  "application/vnd.ms-windows.printerpairing": {
    "source": "iana"
  },
  "application/vnd.ms-windows.wsd.oob": {
    "source": "iana"
  },
  "application/vnd.ms-wmdrm.lic-chlg-req": {
    "source": "iana"
  },
  "application/vnd.ms-wmdrm.lic-resp": {
    "source": "iana"
  },
  "application/vnd.ms-wmdrm.meter-chlg-req": {
    "source": "iana"
  },
  "application/vnd.ms-wmdrm.meter-resp": {
    "source": "iana"
  },
  "application/vnd.ms-word.document.macroenabled.12": {
    "source": "iana",
    "extensions": ["docm"]
  },
  "application/vnd.ms-word.template.macroenabled.12": {
    "source": "iana",
    "extensions": ["dotm"]
  },
  "application/vnd.ms-works": {
    "source": "iana",
    "extensions": ["wps","wks","wcm","wdb"]
  },
  "application/vnd.ms-wpl": {
    "source": "iana",
    "extensions": ["wpl"]
  },
  "application/vnd.ms-xpsdocument": {
    "source": "iana",
    "compressible": false,
    "extensions": ["xps"]
  },
  "application/vnd.msa-disk-image": {
    "source": "iana"
  },
  "application/vnd.mseq": {
    "source": "iana",
    "extensions": ["mseq"]
  },
  "application/vnd.msign": {
    "source": "iana"
  },
  "application/vnd.multiad.creator": {
    "source": "iana"
  },
  "application/vnd.multiad.creator.cif": {
    "source": "iana"
  },
  "application/vnd.music-niff": {
    "source": "iana"
  },
  "application/vnd.musician": {
    "source": "iana",
    "extensions": ["mus"]
  },
  "application/vnd.muvee.style": {
    "source": "iana",
    "extensions": ["msty"]
  },
  "application/vnd.mynfc": {
    "source": "iana",
    "extensions": ["taglet"]
  },
  "application/vnd.ncd.control": {
    "source": "iana"
  },
  "application/vnd.ncd.reference": {
    "source": "iana"
  },
  "application/vnd.nervana": {
    "source": "iana"
  },
  "application/vnd.netfpx": {
    "source": "iana"
  },
  "application/vnd.neurolanguage.nlu": {
    "source": "iana",
    "extensions": ["nlu"]
  },
  "application/vnd.nintendo.nitro.rom": {
    "source": "iana"
  },
  "application/vnd.nintendo.snes.rom": {
    "source": "iana"
  },
  "application/vnd.nitf": {
    "source": "iana",
    "extensions": ["ntf","nitf"]
  },
  "application/vnd.noblenet-directory": {
    "source": "iana",
    "extensions": ["nnd"]
  },
  "application/vnd.noblenet-sealer": {
    "source": "iana",
    "extensions": ["nns"]
  },
  "application/vnd.noblenet-web": {
    "source": "iana",
    "extensions": ["nnw"]
  },
  "application/vnd.nokia.catalogs": {
    "source": "iana"
  },
  "application/vnd.nokia.conml+wbxml": {
    "source": "iana"
  },
  "application/vnd.nokia.conml+xml": {
    "source": "iana"
  },
  "application/vnd.nokia.iptv.config+xml": {
    "source": "iana"
  },
  "application/vnd.nokia.isds-radio-presets": {
    "source": "iana"
  },
  "application/vnd.nokia.landmark+wbxml": {
    "source": "iana"
  },
  "application/vnd.nokia.landmark+xml": {
    "source": "iana"
  },
  "application/vnd.nokia.landmarkcollection+xml": {
    "source": "iana"
  },
  "application/vnd.nokia.n-gage.ac+xml": {
    "source": "iana"
  },
  "application/vnd.nokia.n-gage.data": {
    "source": "iana",
    "extensions": ["ngdat"]
  },
  "application/vnd.nokia.n-gage.symbian.install": {
    "source": "iana",
    "extensions": ["n-gage"]
  },
  "application/vnd.nokia.ncd": {
    "source": "iana"
  },
  "application/vnd.nokia.pcd+wbxml": {
    "source": "iana"
  },
  "application/vnd.nokia.pcd+xml": {
    "source": "iana"
  },
  "application/vnd.nokia.radio-preset": {
    "source": "iana",
    "extensions": ["rpst"]
  },
  "application/vnd.nokia.radio-presets": {
    "source": "iana",
    "extensions": ["rpss"]
  },
  "application/vnd.novadigm.edm": {
    "source": "iana",
    "extensions": ["edm"]
  },
  "application/vnd.novadigm.edx": {
    "source": "iana",
    "extensions": ["edx"]
  },
  "application/vnd.novadigm.ext": {
    "source": "iana",
    "extensions": ["ext"]
  },
  "application/vnd.ntt-local.content-share": {
    "source": "iana"
  },
  "application/vnd.ntt-local.file-transfer": {
    "source": "iana"
  },
  "application/vnd.ntt-local.ogw_remote-access": {
    "source": "iana"
  },
  "application/vnd.ntt-local.sip-ta_remote": {
    "source": "iana"
  },
  "application/vnd.ntt-local.sip-ta_tcp_stream": {
    "source": "iana"
  },
  "application/vnd.oasis.opendocument.chart": {
    "source": "iana",
    "extensions": ["odc"]
  },
  "application/vnd.oasis.opendocument.chart-template": {
    "source": "iana",
    "extensions": ["otc"]
  },
  "application/vnd.oasis.opendocument.database": {
    "source": "iana",
    "extensions": ["odb"]
  },
  "application/vnd.oasis.opendocument.formula": {
    "source": "iana",
    "extensions": ["odf"]
  },
  "application/vnd.oasis.opendocument.formula-template": {
    "source": "iana",
    "extensions": ["odft"]
  },
  "application/vnd.oasis.opendocument.graphics": {
    "source": "iana",
    "compressible": false,
    "extensions": ["odg"]
  },
  "application/vnd.oasis.opendocument.graphics-template": {
    "source": "iana",
    "extensions": ["otg"]
  },
  "application/vnd.oasis.opendocument.image": {
    "source": "iana",
    "extensions": ["odi"]
  },
  "application/vnd.oasis.opendocument.image-template": {
    "source": "iana",
    "extensions": ["oti"]
  },
  "application/vnd.oasis.opendocument.presentation": {
    "source": "iana",
    "compressible": false,
    "extensions": ["odp"]
  },
  "application/vnd.oasis.opendocument.presentation-template": {
    "source": "iana",
    "extensions": ["otp"]
  },
  "application/vnd.oasis.opendocument.spreadsheet": {
    "source": "iana",
    "compressible": false,
    "extensions": ["ods"]
  },
  "application/vnd.oasis.opendocument.spreadsheet-template": {
    "source": "iana",
    "extensions": ["ots"]
  },
  "application/vnd.oasis.opendocument.text": {
    "source": "iana",
    "compressible": false,
    "extensions": ["odt"]
  },
  "application/vnd.oasis.opendocument.text-master": {
    "source": "iana",
    "extensions": ["odm"]
  },
  "application/vnd.oasis.opendocument.text-template": {
    "source": "iana",
    "extensions": ["ott"]
  },
  "application/vnd.oasis.opendocument.text-web": {
    "source": "iana",
    "extensions": ["oth"]
  },
  "application/vnd.obn": {
    "source": "iana"
  },
  "application/vnd.oftn.l10n+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oipf.contentaccessdownload+xml": {
    "source": "iana"
  },
  "application/vnd.oipf.contentaccessstreaming+xml": {
    "source": "iana"
  },
  "application/vnd.oipf.cspg-hexbinary": {
    "source": "iana"
  },
  "application/vnd.oipf.dae.svg+xml": {
    "source": "iana"
  },
  "application/vnd.oipf.dae.xhtml+xml": {
    "source": "iana"
  },
  "application/vnd.oipf.mippvcontrolmessage+xml": {
    "source": "iana"
  },
  "application/vnd.oipf.pae.gem": {
    "source": "iana"
  },
  "application/vnd.oipf.spdiscovery+xml": {
    "source": "iana"
  },
  "application/vnd.oipf.spdlist+xml": {
    "source": "iana"
  },
  "application/vnd.oipf.ueprofile+xml": {
    "source": "iana"
  },
  "application/vnd.oipf.userprofile+xml": {
    "source": "iana"
  },
  "application/vnd.olpc-sugar": {
    "source": "iana",
    "extensions": ["xo"]
  },
  "application/vnd.oma-scws-config": {
    "source": "iana"
  },
  "application/vnd.oma-scws-http-request": {
    "source": "iana"
  },
  "application/vnd.oma-scws-http-response": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.associated-procedure-parameter+xml": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.drm-trigger+xml": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.imd+xml": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.ltkm": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.notification+xml": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.provisioningtrigger": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.sgboot": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.sgdd+xml": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.sgdu": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.simple-symbol-container": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.smartcard-trigger+xml": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.sprov+xml": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.stkm": {
    "source": "iana"
  },
  "application/vnd.oma.cab-address-book+xml": {
    "source": "iana"
  },
  "application/vnd.oma.cab-feature-handler+xml": {
    "source": "iana"
  },
  "application/vnd.oma.cab-pcc+xml": {
    "source": "iana"
  },
  "application/vnd.oma.cab-subs-invite+xml": {
    "source": "iana"
  },
  "application/vnd.oma.cab-user-prefs+xml": {
    "source": "iana"
  },
  "application/vnd.oma.dcd": {
    "source": "iana"
  },
  "application/vnd.oma.dcdc": {
    "source": "iana"
  },
  "application/vnd.oma.dd2+xml": {
    "source": "iana",
    "extensions": ["dd2"]
  },
  "application/vnd.oma.drm.risd+xml": {
    "source": "iana"
  },
  "application/vnd.oma.group-usage-list+xml": {
    "source": "iana"
  },
  "application/vnd.oma.pal+xml": {
    "source": "iana"
  },
  "application/vnd.oma.poc.detailed-progress-report+xml": {
    "source": "iana"
  },
  "application/vnd.oma.poc.final-report+xml": {
    "source": "iana"
  },
  "application/vnd.oma.poc.groups+xml": {
    "source": "iana"
  },
  "application/vnd.oma.poc.invocation-descriptor+xml": {
    "source": "iana"
  },
  "application/vnd.oma.poc.optimized-progress-report+xml": {
    "source": "iana"
  },
  "application/vnd.oma.push": {
    "source": "iana"
  },
  "application/vnd.oma.scidm.messages+xml": {
    "source": "iana"
  },
  "application/vnd.oma.xcap-directory+xml": {
    "source": "iana"
  },
  "application/vnd.omads-email+xml": {
    "source": "iana"
  },
  "application/vnd.omads-file+xml": {
    "source": "iana"
  },
  "application/vnd.omads-folder+xml": {
    "source": "iana"
  },
  "application/vnd.omaloc-supl-init": {
    "source": "iana"
  },
  "application/vnd.openblox.game+xml": {
    "source": "iana"
  },
  "application/vnd.openblox.game-binary": {
    "source": "iana"
  },
  "application/vnd.openeye.oeb": {
    "source": "iana"
  },
  "application/vnd.openofficeorg.extension": {
    "source": "apache",
    "extensions": ["oxt"]
  },
  "application/vnd.openxmlformats-officedocument.custom-properties+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.customxmlproperties+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.drawing+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.drawingml.chart+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.extended-properties+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml-template": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.comments+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.presentation": {
    "source": "iana",
    "compressible": false,
    "extensions": ["pptx"]
  },
  "application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.presprops+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slide": {
    "source": "iana",
    "extensions": ["sldx"]
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slide+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slideshow": {
    "source": "iana",
    "extensions": ["ppsx"]
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.tags+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.template": {
    "source": "apache",
    "extensions": ["potx"]
  },
  "application/vnd.openxmlformats-officedocument.presentationml.template.main+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml-template": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
    "source": "iana",
    "compressible": false,
    "extensions": ["xlsx"]
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.template": {
    "source": "apache",
    "extensions": ["xltx"]
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.theme+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.themeoverride+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.vmldrawing": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml-template": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
    "source": "iana",
    "compressible": false,
    "extensions": ["docx"]
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.template": {
    "source": "apache",
    "extensions": ["dotx"]
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-package.core-properties+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-package.relationships+xml": {
    "source": "iana"
  },
  "application/vnd.oracle.resource+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.orange.indata": {
    "source": "iana"
  },
  "application/vnd.osa.netdeploy": {
    "source": "iana"
  },
  "application/vnd.osgeo.mapguide.package": {
    "source": "iana",
    "extensions": ["mgp"]
  },
  "application/vnd.osgi.bundle": {
    "source": "iana"
  },
  "application/vnd.osgi.dp": {
    "source": "iana",
    "extensions": ["dp"]
  },
  "application/vnd.osgi.subsystem": {
    "source": "iana",
    "extensions": ["esa"]
  },
  "application/vnd.otps.ct-kip+xml": {
    "source": "iana"
  },
  "application/vnd.oxli.countgraph": {
    "source": "iana"
  },
  "application/vnd.pagerduty+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.palm": {
    "source": "iana",
    "extensions": ["pdb","pqa","oprc"]
  },
  "application/vnd.panoply": {
    "source": "iana"
  },
  "application/vnd.paos+xml": {
    "source": "iana"
  },
  "application/vnd.paos.xml": {
    "source": "apache"
  },
  "application/vnd.pawaafile": {
    "source": "iana",
    "extensions": ["paw"]
  },
  "application/vnd.pcos": {
    "source": "iana"
  },
  "application/vnd.pg.format": {
    "source": "iana",
    "extensions": ["str"]
  },
  "application/vnd.pg.osasli": {
    "source": "iana",
    "extensions": ["ei6"]
  },
  "application/vnd.piaccess.application-licence": {
    "source": "iana"
  },
  "application/vnd.picsel": {
    "source": "iana",
    "extensions": ["efif"]
  },
  "application/vnd.pmi.widget": {
    "source": "iana",
    "extensions": ["wg"]
  },
  "application/vnd.poc.group-advertisement+xml": {
    "source": "iana"
  },
  "application/vnd.pocketlearn": {
    "source": "iana",
    "extensions": ["plf"]
  },
  "application/vnd.powerbuilder6": {
    "source": "iana",
    "extensions": ["pbd"]
  },
  "application/vnd.powerbuilder6-s": {
    "source": "iana"
  },
  "application/vnd.powerbuilder7": {
    "source": "iana"
  },
  "application/vnd.powerbuilder7-s": {
    "source": "iana"
  },
  "application/vnd.powerbuilder75": {
    "source": "iana"
  },
  "application/vnd.powerbuilder75-s": {
    "source": "iana"
  },
  "application/vnd.preminet": {
    "source": "iana"
  },
  "application/vnd.previewsystems.box": {
    "source": "iana",
    "extensions": ["box"]
  },
  "application/vnd.proteus.magazine": {
    "source": "iana",
    "extensions": ["mgz"]
  },
  "application/vnd.publishare-delta-tree": {
    "source": "iana",
    "extensions": ["qps"]
  },
  "application/vnd.pvi.ptid1": {
    "source": "iana",
    "extensions": ["ptid"]
  },
  "application/vnd.pwg-multiplexed": {
    "source": "iana"
  },
  "application/vnd.pwg-xhtml-print+xml": {
    "source": "iana"
  },
  "application/vnd.qualcomm.brew-app-res": {
    "source": "iana"
  },
  "application/vnd.quark.quarkxpress": {
    "source": "iana",
    "extensions": ["qxd","qxt","qwd","qwt","qxl","qxb"]
  },
  "application/vnd.quobject-quoxdocument": {
    "source": "iana"
  },
  "application/vnd.radisys.moml+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-audit+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-audit-conf+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-audit-conn+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-audit-dialog+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-audit-stream+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-conf+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-dialog+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-dialog-base+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-dialog-fax-detect+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-dialog-fax-sendrecv+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-dialog-group+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-dialog-speech+xml": {
    "source": "iana"
  },
  "application/vnd.radisys.msml-dialog-transform+xml": {
    "source": "iana"
  },
  "application/vnd.rainstor.data": {
    "source": "iana"
  },
  "application/vnd.rapid": {
    "source": "iana"
  },
  "application/vnd.realvnc.bed": {
    "source": "iana",
    "extensions": ["bed"]
  },
  "application/vnd.recordare.musicxml": {
    "source": "iana",
    "extensions": ["mxl"]
  },
  "application/vnd.recordare.musicxml+xml": {
    "source": "iana",
    "extensions": ["musicxml"]
  },
  "application/vnd.renlearn.rlprint": {
    "source": "iana"
  },
  "application/vnd.rig.cryptonote": {
    "source": "iana",
    "extensions": ["cryptonote"]
  },
  "application/vnd.rim.cod": {
    "source": "apache",
    "extensions": ["cod"]
  },
  "application/vnd.rn-realmedia": {
    "source": "apache",
    "extensions": ["rm"]
  },
  "application/vnd.rn-realmedia-vbr": {
    "source": "apache",
    "extensions": ["rmvb"]
  },
  "application/vnd.route66.link66+xml": {
    "source": "iana",
    "extensions": ["link66"]
  },
  "application/vnd.rs-274x": {
    "source": "iana"
  },
  "application/vnd.ruckus.download": {
    "source": "iana"
  },
  "application/vnd.s3sms": {
    "source": "iana"
  },
  "application/vnd.sailingtracker.track": {
    "source": "iana",
    "extensions": ["st"]
  },
  "application/vnd.sbm.cid": {
    "source": "iana"
  },
  "application/vnd.sbm.mid2": {
    "source": "iana"
  },
  "application/vnd.scribus": {
    "source": "iana"
  },
  "application/vnd.sealed.3df": {
    "source": "iana"
  },
  "application/vnd.sealed.csf": {
    "source": "iana"
  },
  "application/vnd.sealed.doc": {
    "source": "iana"
  },
  "application/vnd.sealed.eml": {
    "source": "iana"
  },
  "application/vnd.sealed.mht": {
    "source": "iana"
  },
  "application/vnd.sealed.net": {
    "source": "iana"
  },
  "application/vnd.sealed.ppt": {
    "source": "iana"
  },
  "application/vnd.sealed.tiff": {
    "source": "iana"
  },
  "application/vnd.sealed.xls": {
    "source": "iana"
  },
  "application/vnd.sealedmedia.softseal.html": {
    "source": "iana"
  },
  "application/vnd.sealedmedia.softseal.pdf": {
    "source": "iana"
  },
  "application/vnd.seemail": {
    "source": "iana",
    "extensions": ["see"]
  },
  "application/vnd.sema": {
    "source": "iana",
    "extensions": ["sema"]
  },
  "application/vnd.semd": {
    "source": "iana",
    "extensions": ["semd"]
  },
  "application/vnd.semf": {
    "source": "iana",
    "extensions": ["semf"]
  },
  "application/vnd.shana.informed.formdata": {
    "source": "iana",
    "extensions": ["ifm"]
  },
  "application/vnd.shana.informed.formtemplate": {
    "source": "iana",
    "extensions": ["itp"]
  },
  "application/vnd.shana.informed.interchange": {
    "source": "iana",
    "extensions": ["iif"]
  },
  "application/vnd.shana.informed.package": {
    "source": "iana",
    "extensions": ["ipk"]
  },
  "application/vnd.simtech-mindmapper": {
    "source": "iana",
    "extensions": ["twd","twds"]
  },
  "application/vnd.siren+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.smaf": {
    "source": "iana",
    "extensions": ["mmf"]
  },
  "application/vnd.smart.notebook": {
    "source": "iana"
  },
  "application/vnd.smart.teacher": {
    "source": "iana",
    "extensions": ["teacher"]
  },
  "application/vnd.software602.filler.form+xml": {
    "source": "iana"
  },
  "application/vnd.software602.filler.form-xml-zip": {
    "source": "iana"
  },
  "application/vnd.solent.sdkm+xml": {
    "source": "iana",
    "extensions": ["sdkm","sdkd"]
  },
  "application/vnd.spotfire.dxp": {
    "source": "iana",
    "extensions": ["dxp"]
  },
  "application/vnd.spotfire.sfs": {
    "source": "iana",
    "extensions": ["sfs"]
  },
  "application/vnd.sss-cod": {
    "source": "iana"
  },
  "application/vnd.sss-dtf": {
    "source": "iana"
  },
  "application/vnd.sss-ntf": {
    "source": "iana"
  },
  "application/vnd.stardivision.calc": {
    "source": "apache",
    "extensions": ["sdc"]
  },
  "application/vnd.stardivision.draw": {
    "source": "apache",
    "extensions": ["sda"]
  },
  "application/vnd.stardivision.impress": {
    "source": "apache",
    "extensions": ["sdd"]
  },
  "application/vnd.stardivision.math": {
    "source": "apache",
    "extensions": ["smf"]
  },
  "application/vnd.stardivision.writer": {
    "source": "apache",
    "extensions": ["sdw","vor"]
  },
  "application/vnd.stardivision.writer-global": {
    "source": "apache",
    "extensions": ["sgl"]
  },
  "application/vnd.stepmania.package": {
    "source": "iana",
    "extensions": ["smzip"]
  },
  "application/vnd.stepmania.stepchart": {
    "source": "iana",
    "extensions": ["sm"]
  },
  "application/vnd.street-stream": {
    "source": "iana"
  },
  "application/vnd.sun.wadl+xml": {
    "source": "iana"
  },
  "application/vnd.sun.xml.calc": {
    "source": "apache",
    "extensions": ["sxc"]
  },
  "application/vnd.sun.xml.calc.template": {
    "source": "apache",
    "extensions": ["stc"]
  },
  "application/vnd.sun.xml.draw": {
    "source": "apache",
    "extensions": ["sxd"]
  },
  "application/vnd.sun.xml.draw.template": {
    "source": "apache",
    "extensions": ["std"]
  },
  "application/vnd.sun.xml.impress": {
    "source": "apache",
    "extensions": ["sxi"]
  },
  "application/vnd.sun.xml.impress.template": {
    "source": "apache",
    "extensions": ["sti"]
  },
  "application/vnd.sun.xml.math": {
    "source": "apache",
    "extensions": ["sxm"]
  },
  "application/vnd.sun.xml.writer": {
    "source": "apache",
    "extensions": ["sxw"]
  },
  "application/vnd.sun.xml.writer.global": {
    "source": "apache",
    "extensions": ["sxg"]
  },
  "application/vnd.sun.xml.writer.template": {
    "source": "apache",
    "extensions": ["stw"]
  },
  "application/vnd.sus-calendar": {
    "source": "iana",
    "extensions": ["sus","susp"]
  },
  "application/vnd.svd": {
    "source": "iana",
    "extensions": ["svd"]
  },
  "application/vnd.swiftview-ics": {
    "source": "iana"
  },
  "application/vnd.symbian.install": {
    "source": "apache",
    "extensions": ["sis","sisx"]
  },
  "application/vnd.syncml+xml": {
    "source": "iana",
    "extensions": ["xsm"]
  },
  "application/vnd.syncml.dm+wbxml": {
    "source": "iana",
    "extensions": ["bdm"]
  },
  "application/vnd.syncml.dm+xml": {
    "source": "iana",
    "extensions": ["xdm"]
  },
  "application/vnd.syncml.dm.notification": {
    "source": "iana"
  },
  "application/vnd.syncml.dmddf+wbxml": {
    "source": "iana"
  },
  "application/vnd.syncml.dmddf+xml": {
    "source": "iana"
  },
  "application/vnd.syncml.dmtnds+wbxml": {
    "source": "iana"
  },
  "application/vnd.syncml.dmtnds+xml": {
    "source": "iana"
  },
  "application/vnd.syncml.ds.notification": {
    "source": "iana"
  },
  "application/vnd.tao.intent-module-archive": {
    "source": "iana",
    "extensions": ["tao"]
  },
  "application/vnd.tcpdump.pcap": {
    "source": "iana",
    "extensions": ["pcap","cap","dmp"]
  },
  "application/vnd.tmd.mediaflex.api+xml": {
    "source": "iana"
  },
  "application/vnd.tml": {
    "source": "iana"
  },
  "application/vnd.tmobile-livetv": {
    "source": "iana",
    "extensions": ["tmo"]
  },
  "application/vnd.trid.tpt": {
    "source": "iana",
    "extensions": ["tpt"]
  },
  "application/vnd.triscape.mxs": {
    "source": "iana",
    "extensions": ["mxs"]
  },
  "application/vnd.trueapp": {
    "source": "iana",
    "extensions": ["tra"]
  },
  "application/vnd.truedoc": {
    "source": "iana"
  },
  "application/vnd.ubisoft.webplayer": {
    "source": "iana"
  },
  "application/vnd.ufdl": {
    "source": "iana",
    "extensions": ["ufd","ufdl"]
  },
  "application/vnd.uiq.theme": {
    "source": "iana",
    "extensions": ["utz"]
  },
  "application/vnd.umajin": {
    "source": "iana",
    "extensions": ["umj"]
  },
  "application/vnd.unity": {
    "source": "iana",
    "extensions": ["unityweb"]
  },
  "application/vnd.uoml+xml": {
    "source": "iana",
    "extensions": ["uoml"]
  },
  "application/vnd.uplanet.alert": {
    "source": "iana"
  },
  "application/vnd.uplanet.alert-wbxml": {
    "source": "iana"
  },
  "application/vnd.uplanet.bearer-choice": {
    "source": "iana"
  },
  "application/vnd.uplanet.bearer-choice-wbxml": {
    "source": "iana"
  },
  "application/vnd.uplanet.cacheop": {
    "source": "iana"
  },
  "application/vnd.uplanet.cacheop-wbxml": {
    "source": "iana"
  },
  "application/vnd.uplanet.channel": {
    "source": "iana"
  },
  "application/vnd.uplanet.channel-wbxml": {
    "source": "iana"
  },
  "application/vnd.uplanet.list": {
    "source": "iana"
  },
  "application/vnd.uplanet.list-wbxml": {
    "source": "iana"
  },
  "application/vnd.uplanet.listcmd": {
    "source": "iana"
  },
  "application/vnd.uplanet.listcmd-wbxml": {
    "source": "iana"
  },
  "application/vnd.uplanet.signal": {
    "source": "iana"
  },
  "application/vnd.uri-map": {
    "source": "iana"
  },
  "application/vnd.valve.source.material": {
    "source": "iana"
  },
  "application/vnd.vcx": {
    "source": "iana",
    "extensions": ["vcx"]
  },
  "application/vnd.vd-study": {
    "source": "iana"
  },
  "application/vnd.vectorworks": {
    "source": "iana"
  },
  "application/vnd.verimatrix.vcas": {
    "source": "iana"
  },
  "application/vnd.vidsoft.vidconference": {
    "source": "iana"
  },
  "application/vnd.visio": {
    "source": "iana",
    "extensions": ["vsd","vst","vss","vsw"]
  },
  "application/vnd.visionary": {
    "source": "iana",
    "extensions": ["vis"]
  },
  "application/vnd.vividence.scriptfile": {
    "source": "iana"
  },
  "application/vnd.vsf": {
    "source": "iana",
    "extensions": ["vsf"]
  },
  "application/vnd.wap.sic": {
    "source": "iana"
  },
  "application/vnd.wap.slc": {
    "source": "iana"
  },
  "application/vnd.wap.wbxml": {
    "source": "iana",
    "extensions": ["wbxml"]
  },
  "application/vnd.wap.wmlc": {
    "source": "iana",
    "extensions": ["wmlc"]
  },
  "application/vnd.wap.wmlscriptc": {
    "source": "iana",
    "extensions": ["wmlsc"]
  },
  "application/vnd.webturbo": {
    "source": "iana",
    "extensions": ["wtb"]
  },
  "application/vnd.wfa.p2p": {
    "source": "iana"
  },
  "application/vnd.wfa.wsc": {
    "source": "iana"
  },
  "application/vnd.windows.devicepairing": {
    "source": "iana"
  },
  "application/vnd.wmc": {
    "source": "iana"
  },
  "application/vnd.wmf.bootstrap": {
    "source": "iana"
  },
  "application/vnd.wolfram.mathematica": {
    "source": "iana"
  },
  "application/vnd.wolfram.mathematica.package": {
    "source": "iana"
  },
  "application/vnd.wolfram.player": {
    "source": "iana",
    "extensions": ["nbp"]
  },
  "application/vnd.wordperfect": {
    "source": "iana",
    "extensions": ["wpd"]
  },
  "application/vnd.wqd": {
    "source": "iana",
    "extensions": ["wqd"]
  },
  "application/vnd.wrq-hp3000-labelled": {
    "source": "iana"
  },
  "application/vnd.wt.stf": {
    "source": "iana",
    "extensions": ["stf"]
  },
  "application/vnd.wv.csp+wbxml": {
    "source": "iana"
  },
  "application/vnd.wv.csp+xml": {
    "source": "iana"
  },
  "application/vnd.wv.ssp+xml": {
    "source": "iana"
  },
  "application/vnd.xacml+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.xara": {
    "source": "iana",
    "extensions": ["xar"]
  },
  "application/vnd.xfdl": {
    "source": "iana",
    "extensions": ["xfdl"]
  },
  "application/vnd.xfdl.webform": {
    "source": "iana"
  },
  "application/vnd.xmi+xml": {
    "source": "iana"
  },
  "application/vnd.xmpie.cpkg": {
    "source": "iana"
  },
  "application/vnd.xmpie.dpkg": {
    "source": "iana"
  },
  "application/vnd.xmpie.plan": {
    "source": "iana"
  },
  "application/vnd.xmpie.ppkg": {
    "source": "iana"
  },
  "application/vnd.xmpie.xlim": {
    "source": "iana"
  },
  "application/vnd.yamaha.hv-dic": {
    "source": "iana",
    "extensions": ["hvd"]
  },
  "application/vnd.yamaha.hv-script": {
    "source": "iana",
    "extensions": ["hvs"]
  },
  "application/vnd.yamaha.hv-voice": {
    "source": "iana",
    "extensions": ["hvp"]
  },
  "application/vnd.yamaha.openscoreformat": {
    "source": "iana",
    "extensions": ["osf"]
  },
  "application/vnd.yamaha.openscoreformat.osfpvg+xml": {
    "source": "iana",
    "extensions": ["osfpvg"]
  },
  "application/vnd.yamaha.remote-setup": {
    "source": "iana"
  },
  "application/vnd.yamaha.smaf-audio": {
    "source": "iana",
    "extensions": ["saf"]
  },
  "application/vnd.yamaha.smaf-phrase": {
    "source": "iana",
    "extensions": ["spf"]
  },
  "application/vnd.yamaha.through-ngn": {
    "source": "iana"
  },
  "application/vnd.yamaha.tunnel-udpencap": {
    "source": "iana"
  },
  "application/vnd.yaoweme": {
    "source": "iana"
  },
  "application/vnd.yellowriver-custom-menu": {
    "source": "iana",
    "extensions": ["cmp"]
  },
  "application/vnd.zul": {
    "source": "iana",
    "extensions": ["zir","zirz"]
  },
  "application/vnd.zzazz.deck+xml": {
    "source": "iana",
    "extensions": ["zaz"]
  },
  "application/voicexml+xml": {
    "source": "iana",
    "extensions": ["vxml"]
  },
  "application/vq-rtcpxr": {
    "source": "iana"
  },
  "application/watcherinfo+xml": {
    "source": "iana"
  },
  "application/whoispp-query": {
    "source": "iana"
  },
  "application/whoispp-response": {
    "source": "iana"
  },
  "application/widget": {
    "source": "iana",
    "extensions": ["wgt"]
  },
  "application/winhlp": {
    "source": "apache",
    "extensions": ["hlp"]
  },
  "application/wita": {
    "source": "iana"
  },
  "application/wordperfect5.1": {
    "source": "iana"
  },
  "application/wsdl+xml": {
    "source": "iana",
    "extensions": ["wsdl"]
  },
  "application/wspolicy+xml": {
    "source": "iana",
    "extensions": ["wspolicy"]
  },
  "application/x-7z-compressed": {
    "source": "apache",
    "compressible": false,
    "extensions": ["7z"]
  },
  "application/x-abiword": {
    "source": "apache",
    "extensions": ["abw"]
  },
  "application/x-ace-compressed": {
    "source": "apache",
    "extensions": ["ace"]
  },
  "application/x-amf": {
    "source": "apache"
  },
  "application/x-apple-diskimage": {
    "source": "apache",
    "extensions": ["dmg"]
  },
  "application/x-authorware-bin": {
    "source": "apache",
    "extensions": ["aab","x32","u32","vox"]
  },
  "application/x-authorware-map": {
    "source": "apache",
    "extensions": ["aam"]
  },
  "application/x-authorware-seg": {
    "source": "apache",
    "extensions": ["aas"]
  },
  "application/x-bcpio": {
    "source": "apache",
    "extensions": ["bcpio"]
  },
  "application/x-bdoc": {
    "compressible": false,
    "extensions": ["bdoc"]
  },
  "application/x-bittorrent": {
    "source": "apache",
    "extensions": ["torrent"]
  },
  "application/x-blorb": {
    "source": "apache",
    "extensions": ["blb","blorb"]
  },
  "application/x-bzip": {
    "source": "apache",
    "compressible": false,
    "extensions": ["bz"]
  },
  "application/x-bzip2": {
    "source": "apache",
    "compressible": false,
    "extensions": ["bz2","boz"]
  },
  "application/x-cbr": {
    "source": "apache",
    "extensions": ["cbr","cba","cbt","cbz","cb7"]
  },
  "application/x-cdlink": {
    "source": "apache",
    "extensions": ["vcd"]
  },
  "application/x-cfs-compressed": {
    "source": "apache",
    "extensions": ["cfs"]
  },
  "application/x-chat": {
    "source": "apache",
    "extensions": ["chat"]
  },
  "application/x-chess-pgn": {
    "source": "apache",
    "extensions": ["pgn"]
  },
  "application/x-chrome-extension": {
    "extensions": ["crx"]
  },
  "application/x-cocoa": {
    "source": "nginx",
    "extensions": ["cco"]
  },
  "application/x-compress": {
    "source": "apache"
  },
  "application/x-conference": {
    "source": "apache",
    "extensions": ["nsc"]
  },
  "application/x-cpio": {
    "source": "apache",
    "extensions": ["cpio"]
  },
  "application/x-csh": {
    "source": "apache",
    "extensions": ["csh"]
  },
  "application/x-deb": {
    "compressible": false
  },
  "application/x-debian-package": {
    "source": "apache",
    "extensions": ["deb","udeb"]
  },
  "application/x-dgc-compressed": {
    "source": "apache",
    "extensions": ["dgc"]
  },
  "application/x-director": {
    "source": "apache",
    "extensions": ["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"]
  },
  "application/x-doom": {
    "source": "apache",
    "extensions": ["wad"]
  },
  "application/x-dtbncx+xml": {
    "source": "apache",
    "extensions": ["ncx"]
  },
  "application/x-dtbook+xml": {
    "source": "apache",
    "extensions": ["dtb"]
  },
  "application/x-dtbresource+xml": {
    "source": "apache",
    "extensions": ["res"]
  },
  "application/x-dvi": {
    "source": "apache",
    "compressible": false,
    "extensions": ["dvi"]
  },
  "application/x-envoy": {
    "source": "apache",
    "extensions": ["evy"]
  },
  "application/x-eva": {
    "source": "apache",
    "extensions": ["eva"]
  },
  "application/x-font-bdf": {
    "source": "apache",
    "extensions": ["bdf"]
  },
  "application/x-font-dos": {
    "source": "apache"
  },
  "application/x-font-framemaker": {
    "source": "apache"
  },
  "application/x-font-ghostscript": {
    "source": "apache",
    "extensions": ["gsf"]
  },
  "application/x-font-libgrx": {
    "source": "apache"
  },
  "application/x-font-linux-psf": {
    "source": "apache",
    "extensions": ["psf"]
  },
  "application/x-font-otf": {
    "source": "apache",
    "compressible": true,
    "extensions": ["otf"]
  },
  "application/x-font-pcf": {
    "source": "apache",
    "extensions": ["pcf"]
  },
  "application/x-font-snf": {
    "source": "apache",
    "extensions": ["snf"]
  },
  "application/x-font-speedo": {
    "source": "apache"
  },
  "application/x-font-sunos-news": {
    "source": "apache"
  },
  "application/x-font-ttf": {
    "source": "apache",
    "compressible": true,
    "extensions": ["ttf","ttc"]
  },
  "application/x-font-type1": {
    "source": "apache",
    "extensions": ["pfa","pfb","pfm","afm"]
  },
  "application/x-font-vfont": {
    "source": "apache"
  },
  "application/x-freearc": {
    "source": "apache",
    "extensions": ["arc"]
  },
  "application/x-futuresplash": {
    "source": "apache",
    "extensions": ["spl"]
  },
  "application/x-gca-compressed": {
    "source": "apache",
    "extensions": ["gca"]
  },
  "application/x-glulx": {
    "source": "apache",
    "extensions": ["ulx"]
  },
  "application/x-gnumeric": {
    "source": "apache",
    "extensions": ["gnumeric"]
  },
  "application/x-gramps-xml": {
    "source": "apache",
    "extensions": ["gramps"]
  },
  "application/x-gtar": {
    "source": "apache",
    "extensions": ["gtar"]
  },
  "application/x-gzip": {
    "source": "apache"
  },
  "application/x-hdf": {
    "source": "apache",
    "extensions": ["hdf"]
  },
  "application/x-httpd-php": {
    "compressible": true,
    "extensions": ["php"]
  },
  "application/x-install-instructions": {
    "source": "apache",
    "extensions": ["install"]
  },
  "application/x-iso9660-image": {
    "source": "apache",
    "extensions": ["iso"]
  },
  "application/x-java-archive-diff": {
    "source": "nginx",
    "extensions": ["jardiff"]
  },
  "application/x-java-jnlp-file": {
    "source": "apache",
    "compressible": false,
    "extensions": ["jnlp"]
  },
  "application/x-javascript": {
    "compressible": true
  },
  "application/x-latex": {
    "source": "apache",
    "compressible": false,
    "extensions": ["latex"]
  },
  "application/x-lua-bytecode": {
    "extensions": ["luac"]
  },
  "application/x-lzh-compressed": {
    "source": "apache",
    "extensions": ["lzh","lha"]
  },
  "application/x-makeself": {
    "source": "nginx",
    "extensions": ["run"]
  },
  "application/x-mie": {
    "source": "apache",
    "extensions": ["mie"]
  },
  "application/x-mobipocket-ebook": {
    "source": "apache",
    "extensions": ["prc","mobi"]
  },
  "application/x-mpegurl": {
    "compressible": false
  },
  "application/x-ms-application": {
    "source": "apache",
    "extensions": ["application"]
  },
  "application/x-ms-shortcut": {
    "source": "apache",
    "extensions": ["lnk"]
  },
  "application/x-ms-wmd": {
    "source": "apache",
    "extensions": ["wmd"]
  },
  "application/x-ms-wmz": {
    "source": "apache",
    "extensions": ["wmz"]
  },
  "application/x-ms-xbap": {
    "source": "apache",
    "extensions": ["xbap"]
  },
  "application/x-msaccess": {
    "source": "apache",
    "extensions": ["mdb"]
  },
  "application/x-msbinder": {
    "source": "apache",
    "extensions": ["obd"]
  },
  "application/x-mscardfile": {
    "source": "apache",
    "extensions": ["crd"]
  },
  "application/x-msclip": {
    "source": "apache",
    "extensions": ["clp"]
  },
  "application/x-msdos-program": {
    "extensions": ["exe"]
  },
  "application/x-msdownload": {
    "source": "apache",
    "extensions": ["exe","dll","com","bat","msi"]
  },
  "application/x-msmediaview": {
    "source": "apache",
    "extensions": ["mvb","m13","m14"]
  },
  "application/x-msmetafile": {
    "source": "apache",
    "extensions": ["wmf","wmz","emf","emz"]
  },
  "application/x-msmoney": {
    "source": "apache",
    "extensions": ["mny"]
  },
  "application/x-mspublisher": {
    "source": "apache",
    "extensions": ["pub"]
  },
  "application/x-msschedule": {
    "source": "apache",
    "extensions": ["scd"]
  },
  "application/x-msterminal": {
    "source": "apache",
    "extensions": ["trm"]
  },
  "application/x-mswrite": {
    "source": "apache",
    "extensions": ["wri"]
  },
  "application/x-netcdf": {
    "source": "apache",
    "extensions": ["nc","cdf"]
  },
  "application/x-ns-proxy-autoconfig": {
    "compressible": true,
    "extensions": ["pac"]
  },
  "application/x-nzb": {
    "source": "apache",
    "extensions": ["nzb"]
  },
  "application/x-perl": {
    "source": "nginx",
    "extensions": ["pl","pm"]
  },
  "application/x-pilot": {
    "source": "nginx",
    "extensions": ["prc","pdb"]
  },
  "application/x-pkcs12": {
    "source": "apache",
    "compressible": false,
    "extensions": ["p12","pfx"]
  },
  "application/x-pkcs7-certificates": {
    "source": "apache",
    "extensions": ["p7b","spc"]
  },
  "application/x-pkcs7-certreqresp": {
    "source": "apache",
    "extensions": ["p7r"]
  },
  "application/x-rar-compressed": {
    "source": "apache",
    "compressible": false,
    "extensions": ["rar"]
  },
  "application/x-redhat-package-manager": {
    "source": "nginx",
    "extensions": ["rpm"]
  },
  "application/x-research-info-systems": {
    "source": "apache",
    "extensions": ["ris"]
  },
  "application/x-sea": {
    "source": "nginx",
    "extensions": ["sea"]
  },
  "application/x-sh": {
    "source": "apache",
    "compressible": true,
    "extensions": ["sh"]
  },
  "application/x-shar": {
    "source": "apache",
    "extensions": ["shar"]
  },
  "application/x-shockwave-flash": {
    "source": "apache",
    "compressible": false,
    "extensions": ["swf"]
  },
  "application/x-silverlight-app": {
    "source": "apache",
    "extensions": ["xap"]
  },
  "application/x-sql": {
    "source": "apache",
    "extensions": ["sql"]
  },
  "application/x-stuffit": {
    "source": "apache",
    "compressible": false,
    "extensions": ["sit"]
  },
  "application/x-stuffitx": {
    "source": "apache",
    "extensions": ["sitx"]
  },
  "application/x-subrip": {
    "source": "apache",
    "extensions": ["srt"]
  },
  "application/x-sv4cpio": {
    "source": "apache",
    "extensions": ["sv4cpio"]
  },
  "application/x-sv4crc": {
    "source": "apache",
    "extensions": ["sv4crc"]
  },
  "application/x-t3vm-image": {
    "source": "apache",
    "extensions": ["t3"]
  },
  "application/x-tads": {
    "source": "apache",
    "extensions": ["gam"]
  },
  "application/x-tar": {
    "source": "apache",
    "compressible": true,
    "extensions": ["tar"]
  },
  "application/x-tcl": {
    "source": "apache",
    "extensions": ["tcl","tk"]
  },
  "application/x-tex": {
    "source": "apache",
    "extensions": ["tex"]
  },
  "application/x-tex-tfm": {
    "source": "apache",
    "extensions": ["tfm"]
  },
  "application/x-texinfo": {
    "source": "apache",
    "extensions": ["texinfo","texi"]
  },
  "application/x-tgif": {
    "source": "apache",
    "extensions": ["obj"]
  },
  "application/x-ustar": {
    "source": "apache",
    "extensions": ["ustar"]
  },
  "application/x-wais-source": {
    "source": "apache",
    "extensions": ["src"]
  },
  "application/x-web-app-manifest+json": {
    "compressible": true,
    "extensions": ["webapp"]
  },
  "application/x-www-form-urlencoded": {
    "source": "iana",
    "compressible": true
  },
  "application/x-x509-ca-cert": {
    "source": "apache",
    "extensions": ["der","crt","pem"]
  },
  "application/x-xfig": {
    "source": "apache",
    "extensions": ["fig"]
  },
  "application/x-xliff+xml": {
    "source": "apache",
    "extensions": ["xlf"]
  },
  "application/x-xpinstall": {
    "source": "apache",
    "compressible": false,
    "extensions": ["xpi"]
  },
  "application/x-xz": {
    "source": "apache",
    "extensions": ["xz"]
  },
  "application/x-zmachine": {
    "source": "apache",
    "extensions": ["z1","z2","z3","z4","z5","z6","z7","z8"]
  },
  "application/x400-bp": {
    "source": "iana"
  },
  "application/xacml+xml": {
    "source": "iana"
  },
  "application/xaml+xml": {
    "source": "apache",
    "extensions": ["xaml"]
  },
  "application/xcap-att+xml": {
    "source": "iana"
  },
  "application/xcap-caps+xml": {
    "source": "iana"
  },
  "application/xcap-diff+xml": {
    "source": "iana",
    "extensions": ["xdf"]
  },
  "application/xcap-el+xml": {
    "source": "iana"
  },
  "application/xcap-error+xml": {
    "source": "iana"
  },
  "application/xcap-ns+xml": {
    "source": "iana"
  },
  "application/xcon-conference-info+xml": {
    "source": "iana"
  },
  "application/xcon-conference-info-diff+xml": {
    "source": "iana"
  },
  "application/xenc+xml": {
    "source": "iana",
    "extensions": ["xenc"]
  },
  "application/xhtml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xhtml","xht"]
  },
  "application/xhtml-voice+xml": {
    "source": "apache"
  },
  "application/xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xml","xsl","xsd"]
  },
  "application/xml-dtd": {
    "source": "iana",
    "compressible": true,
    "extensions": ["dtd"]
  },
  "application/xml-external-parsed-entity": {
    "source": "iana"
  },
  "application/xml-patch+xml": {
    "source": "iana"
  },
  "application/xmpp+xml": {
    "source": "iana"
  },
  "application/xop+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xop"]
  },
  "application/xproc+xml": {
    "source": "apache",
    "extensions": ["xpl"]
  },
  "application/xslt+xml": {
    "source": "iana",
    "extensions": ["xslt"]
  },
  "application/xspf+xml": {
    "source": "apache",
    "extensions": ["xspf"]
  },
  "application/xv+xml": {
    "source": "iana",
    "extensions": ["mxml","xhvml","xvml","xvm"]
  },
  "application/yang": {
    "source": "iana",
    "extensions": ["yang"]
  },
  "application/yin+xml": {
    "source": "iana",
    "extensions": ["yin"]
  },
  "application/zip": {
    "source": "iana",
    "compressible": false,
    "extensions": ["zip"]
  },
  "application/zlib": {
    "source": "iana"
  },
  "audio/1d-interleaved-parityfec": {
    "source": "iana"
  },
  "audio/32kadpcm": {
    "source": "iana"
  },
  "audio/3gpp": {
    "source": "iana"
  },
  "audio/3gpp2": {
    "source": "iana"
  },
  "audio/ac3": {
    "source": "iana"
  },
  "audio/adpcm": {
    "source": "apache",
    "extensions": ["adp"]
  },
  "audio/amr": {
    "source": "iana"
  },
  "audio/amr-wb": {
    "source": "iana"
  },
  "audio/amr-wb+": {
    "source": "iana"
  },
  "audio/aptx": {
    "source": "iana"
  },
  "audio/asc": {
    "source": "iana"
  },
  "audio/atrac-advanced-lossless": {
    "source": "iana"
  },
  "audio/atrac-x": {
    "source": "iana"
  },
  "audio/atrac3": {
    "source": "iana"
  },
  "audio/basic": {
    "source": "iana",
    "compressible": false,
    "extensions": ["au","snd"]
  },
  "audio/bv16": {
    "source": "iana"
  },
  "audio/bv32": {
    "source": "iana"
  },
  "audio/clearmode": {
    "source": "iana"
  },
  "audio/cn": {
    "source": "iana"
  },
  "audio/dat12": {
    "source": "iana"
  },
  "audio/dls": {
    "source": "iana"
  },
  "audio/dsr-es201108": {
    "source": "iana"
  },
  "audio/dsr-es202050": {
    "source": "iana"
  },
  "audio/dsr-es202211": {
    "source": "iana"
  },
  "audio/dsr-es202212": {
    "source": "iana"
  },
  "audio/dv": {
    "source": "iana"
  },
  "audio/dvi4": {
    "source": "iana"
  },
  "audio/eac3": {
    "source": "iana"
  },
  "audio/encaprtp": {
    "source": "iana"
  },
  "audio/evrc": {
    "source": "iana"
  },
  "audio/evrc-qcp": {
    "source": "iana"
  },
  "audio/evrc0": {
    "source": "iana"
  },
  "audio/evrc1": {
    "source": "iana"
  },
  "audio/evrcb": {
    "source": "iana"
  },
  "audio/evrcb0": {
    "source": "iana"
  },
  "audio/evrcb1": {
    "source": "iana"
  },
  "audio/evrcnw": {
    "source": "iana"
  },
  "audio/evrcnw0": {
    "source": "iana"
  },
  "audio/evrcnw1": {
    "source": "iana"
  },
  "audio/evrcwb": {
    "source": "iana"
  },
  "audio/evrcwb0": {
    "source": "iana"
  },
  "audio/evrcwb1": {
    "source": "iana"
  },
  "audio/evs": {
    "source": "iana"
  },
  "audio/fwdred": {
    "source": "iana"
  },
  "audio/g711-0": {
    "source": "iana"
  },
  "audio/g719": {
    "source": "iana"
  },
  "audio/g722": {
    "source": "iana"
  },
  "audio/g7221": {
    "source": "iana"
  },
  "audio/g723": {
    "source": "iana"
  },
  "audio/g726-16": {
    "source": "iana"
  },
  "audio/g726-24": {
    "source": "iana"
  },
  "audio/g726-32": {
    "source": "iana"
  },
  "audio/g726-40": {
    "source": "iana"
  },
  "audio/g728": {
    "source": "iana"
  },
  "audio/g729": {
    "source": "iana"
  },
  "audio/g7291": {
    "source": "iana"
  },
  "audio/g729d": {
    "source": "iana"
  },
  "audio/g729e": {
    "source": "iana"
  },
  "audio/gsm": {
    "source": "iana"
  },
  "audio/gsm-efr": {
    "source": "iana"
  },
  "audio/gsm-hr-08": {
    "source": "iana"
  },
  "audio/ilbc": {
    "source": "iana"
  },
  "audio/ip-mr_v2.5": {
    "source": "iana"
  },
  "audio/isac": {
    "source": "apache"
  },
  "audio/l16": {
    "source": "iana"
  },
  "audio/l20": {
    "source": "iana"
  },
  "audio/l24": {
    "source": "iana",
    "compressible": false
  },
  "audio/l8": {
    "source": "iana"
  },
  "audio/lpc": {
    "source": "iana"
  },
  "audio/midi": {
    "source": "apache",
    "extensions": ["mid","midi","kar","rmi"]
  },
  "audio/mobile-xmf": {
    "source": "iana"
  },
  "audio/mp4": {
    "source": "iana",
    "compressible": false,
    "extensions": ["mp4a","m4a"]
  },
  "audio/mp4a-latm": {
    "source": "iana"
  },
  "audio/mpa": {
    "source": "iana"
  },
  "audio/mpa-robust": {
    "source": "iana"
  },
  "audio/mpeg": {
    "source": "iana",
    "compressible": false,
    "extensions": ["mpga","mp2","mp2a","mp3","m2a","m3a"]
  },
  "audio/mpeg4-generic": {
    "source": "iana"
  },
  "audio/musepack": {
    "source": "apache"
  },
  "audio/ogg": {
    "source": "iana",
    "compressible": false,
    "extensions": ["oga","ogg","spx"]
  },
  "audio/opus": {
    "source": "iana"
  },
  "audio/parityfec": {
    "source": "iana"
  },
  "audio/pcma": {
    "source": "iana"
  },
  "audio/pcma-wb": {
    "source": "iana"
  },
  "audio/pcmu": {
    "source": "iana"
  },
  "audio/pcmu-wb": {
    "source": "iana"
  },
  "audio/prs.sid": {
    "source": "iana"
  },
  "audio/qcelp": {
    "source": "iana"
  },
  "audio/raptorfec": {
    "source": "iana"
  },
  "audio/red": {
    "source": "iana"
  },
  "audio/rtp-enc-aescm128": {
    "source": "iana"
  },
  "audio/rtp-midi": {
    "source": "iana"
  },
  "audio/rtploopback": {
    "source": "iana"
  },
  "audio/rtx": {
    "source": "iana"
  },
  "audio/s3m": {
    "source": "apache",
    "extensions": ["s3m"]
  },
  "audio/silk": {
    "source": "apache",
    "extensions": ["sil"]
  },
  "audio/smv": {
    "source": "iana"
  },
  "audio/smv-qcp": {
    "source": "iana"
  },
  "audio/smv0": {
    "source": "iana"
  },
  "audio/sp-midi": {
    "source": "iana"
  },
  "audio/speex": {
    "source": "iana"
  },
  "audio/t140c": {
    "source": "iana"
  },
  "audio/t38": {
    "source": "iana"
  },
  "audio/telephone-event": {
    "source": "iana"
  },
  "audio/tone": {
    "source": "iana"
  },
  "audio/uemclip": {
    "source": "iana"
  },
  "audio/ulpfec": {
    "source": "iana"
  },
  "audio/vdvi": {
    "source": "iana"
  },
  "audio/vmr-wb": {
    "source": "iana"
  },
  "audio/vnd.3gpp.iufp": {
    "source": "iana"
  },
  "audio/vnd.4sb": {
    "source": "iana"
  },
  "audio/vnd.audiokoz": {
    "source": "iana"
  },
  "audio/vnd.celp": {
    "source": "iana"
  },
  "audio/vnd.cisco.nse": {
    "source": "iana"
  },
  "audio/vnd.cmles.radio-events": {
    "source": "iana"
  },
  "audio/vnd.cns.anp1": {
    "source": "iana"
  },
  "audio/vnd.cns.inf1": {
    "source": "iana"
  },
  "audio/vnd.dece.audio": {
    "source": "iana",
    "extensions": ["uva","uvva"]
  },
  "audio/vnd.digital-winds": {
    "source": "iana",
    "extensions": ["eol"]
  },
  "audio/vnd.dlna.adts": {
    "source": "iana"
  },
  "audio/vnd.dolby.heaac.1": {
    "source": "iana"
  },
  "audio/vnd.dolby.heaac.2": {
    "source": "iana"
  },
  "audio/vnd.dolby.mlp": {
    "source": "iana"
  },
  "audio/vnd.dolby.mps": {
    "source": "iana"
  },
  "audio/vnd.dolby.pl2": {
    "source": "iana"
  },
  "audio/vnd.dolby.pl2x": {
    "source": "iana"
  },
  "audio/vnd.dolby.pl2z": {
    "source": "iana"
  },
  "audio/vnd.dolby.pulse.1": {
    "source": "iana"
  },
  "audio/vnd.dra": {
    "source": "iana",
    "extensions": ["dra"]
  },
  "audio/vnd.dts": {
    "source": "iana",
    "extensions": ["dts"]
  },
  "audio/vnd.dts.hd": {
    "source": "iana",
    "extensions": ["dtshd"]
  },
  "audio/vnd.dvb.file": {
    "source": "iana"
  },
  "audio/vnd.everad.plj": {
    "source": "iana"
  },
  "audio/vnd.hns.audio": {
    "source": "iana"
  },
  "audio/vnd.lucent.voice": {
    "source": "iana",
    "extensions": ["lvp"]
  },
  "audio/vnd.ms-playready.media.pya": {
    "source": "iana",
    "extensions": ["pya"]
  },
  "audio/vnd.nokia.mobile-xmf": {
    "source": "iana"
  },
  "audio/vnd.nortel.vbk": {
    "source": "iana"
  },
  "audio/vnd.nuera.ecelp4800": {
    "source": "iana",
    "extensions": ["ecelp4800"]
  },
  "audio/vnd.nuera.ecelp7470": {
    "source": "iana",
    "extensions": ["ecelp7470"]
  },
  "audio/vnd.nuera.ecelp9600": {
    "source": "iana",
    "extensions": ["ecelp9600"]
  },
  "audio/vnd.octel.sbc": {
    "source": "iana"
  },
  "audio/vnd.qcelp": {
    "source": "iana"
  },
  "audio/vnd.rhetorex.32kadpcm": {
    "source": "iana"
  },
  "audio/vnd.rip": {
    "source": "iana",
    "extensions": ["rip"]
  },
  "audio/vnd.rn-realaudio": {
    "compressible": false
  },
  "audio/vnd.sealedmedia.softseal.mpeg": {
    "source": "iana"
  },
  "audio/vnd.vmx.cvsd": {
    "source": "iana"
  },
  "audio/vnd.wave": {
    "compressible": false
  },
  "audio/vorbis": {
    "source": "iana",
    "compressible": false
  },
  "audio/vorbis-config": {
    "source": "iana"
  },
  "audio/wav": {
    "compressible": false,
    "extensions": ["wav"]
  },
  "audio/wave": {
    "compressible": false,
    "extensions": ["wav"]
  },
  "audio/webm": {
    "source": "apache",
    "compressible": false,
    "extensions": ["weba"]
  },
  "audio/x-aac": {
    "source": "apache",
    "compressible": false,
    "extensions": ["aac"]
  },
  "audio/x-aiff": {
    "source": "apache",
    "extensions": ["aif","aiff","aifc"]
  },
  "audio/x-caf": {
    "source": "apache",
    "compressible": false,
    "extensions": ["caf"]
  },
  "audio/x-flac": {
    "source": "apache",
    "extensions": ["flac"]
  },
  "audio/x-m4a": {
    "source": "nginx",
    "extensions": ["m4a"]
  },
  "audio/x-matroska": {
    "source": "apache",
    "extensions": ["mka"]
  },
  "audio/x-mpegurl": {
    "source": "apache",
    "extensions": ["m3u"]
  },
  "audio/x-ms-wax": {
    "source": "apache",
    "extensions": ["wax"]
  },
  "audio/x-ms-wma": {
    "source": "apache",
    "extensions": ["wma"]
  },
  "audio/x-pn-realaudio": {
    "source": "apache",
    "extensions": ["ram","ra"]
  },
  "audio/x-pn-realaudio-plugin": {
    "source": "apache",
    "extensions": ["rmp"]
  },
  "audio/x-realaudio": {
    "source": "nginx",
    "extensions": ["ra"]
  },
  "audio/x-tta": {
    "source": "apache"
  },
  "audio/x-wav": {
    "source": "apache",
    "extensions": ["wav"]
  },
  "audio/xm": {
    "source": "apache",
    "extensions": ["xm"]
  },
  "chemical/x-cdx": {
    "source": "apache",
    "extensions": ["cdx"]
  },
  "chemical/x-cif": {
    "source": "apache",
    "extensions": ["cif"]
  },
  "chemical/x-cmdf": {
    "source": "apache",
    "extensions": ["cmdf"]
  },
  "chemical/x-cml": {
    "source": "apache",
    "extensions": ["cml"]
  },
  "chemical/x-csml": {
    "source": "apache",
    "extensions": ["csml"]
  },
  "chemical/x-pdb": {
    "source": "apache"
  },
  "chemical/x-xyz": {
    "source": "apache",
    "extensions": ["xyz"]
  },
  "font/opentype": {
    "compressible": true,
    "extensions": ["otf"]
  },
  "image/bmp": {
    "source": "apache",
    "compressible": true,
    "extensions": ["bmp"]
  },
  "image/cgm": {
    "source": "iana",
    "extensions": ["cgm"]
  },
  "image/fits": {
    "source": "iana"
  },
  "image/g3fax": {
    "source": "iana",
    "extensions": ["g3"]
  },
  "image/gif": {
    "source": "iana",
    "compressible": false,
    "extensions": ["gif"]
  },
  "image/ief": {
    "source": "iana",
    "extensions": ["ief"]
  },
  "image/jp2": {
    "source": "iana"
  },
  "image/jpeg": {
    "source": "iana",
    "compressible": false,
    "extensions": ["jpeg","jpg","jpe"]
  },
  "image/jpm": {
    "source": "iana"
  },
  "image/jpx": {
    "source": "iana"
  },
  "image/ktx": {
    "source": "iana",
    "extensions": ["ktx"]
  },
  "image/naplps": {
    "source": "iana"
  },
  "image/pjpeg": {
    "compressible": false
  },
  "image/png": {
    "source": "iana",
    "compressible": false,
    "extensions": ["png"]
  },
  "image/prs.btif": {
    "source": "iana",
    "extensions": ["btif"]
  },
  "image/prs.pti": {
    "source": "iana"
  },
  "image/pwg-raster": {
    "source": "iana"
  },
  "image/sgi": {
    "source": "apache",
    "extensions": ["sgi"]
  },
  "image/svg+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["svg","svgz"]
  },
  "image/t38": {
    "source": "iana"
  },
  "image/tiff": {
    "source": "iana",
    "compressible": false,
    "extensions": ["tiff","tif"]
  },
  "image/tiff-fx": {
    "source": "iana"
  },
  "image/vnd.adobe.photoshop": {
    "source": "iana",
    "compressible": true,
    "extensions": ["psd"]
  },
  "image/vnd.airzip.accelerator.azv": {
    "source": "iana"
  },
  "image/vnd.cns.inf2": {
    "source": "iana"
  },
  "image/vnd.dece.graphic": {
    "source": "iana",
    "extensions": ["uvi","uvvi","uvg","uvvg"]
  },
  "image/vnd.djvu": {
    "source": "iana",
    "extensions": ["djvu","djv"]
  },
  "image/vnd.dvb.subtitle": {
    "source": "iana",
    "extensions": ["sub"]
  },
  "image/vnd.dwg": {
    "source": "iana",
    "extensions": ["dwg"]
  },
  "image/vnd.dxf": {
    "source": "iana",
    "extensions": ["dxf"]
  },
  "image/vnd.fastbidsheet": {
    "source": "iana",
    "extensions": ["fbs"]
  },
  "image/vnd.fpx": {
    "source": "iana",
    "extensions": ["fpx"]
  },
  "image/vnd.fst": {
    "source": "iana",
    "extensions": ["fst"]
  },
  "image/vnd.fujixerox.edmics-mmr": {
    "source": "iana",
    "extensions": ["mmr"]
  },
  "image/vnd.fujixerox.edmics-rlc": {
    "source": "iana",
    "extensions": ["rlc"]
  },
  "image/vnd.globalgraphics.pgb": {
    "source": "iana"
  },
  "image/vnd.microsoft.icon": {
    "source": "iana"
  },
  "image/vnd.mix": {
    "source": "iana"
  },
  "image/vnd.mozilla.apng": {
    "source": "iana"
  },
  "image/vnd.ms-modi": {
    "source": "iana",
    "extensions": ["mdi"]
  },
  "image/vnd.ms-photo": {
    "source": "apache",
    "extensions": ["wdp"]
  },
  "image/vnd.net-fpx": {
    "source": "iana",
    "extensions": ["npx"]
  },
  "image/vnd.radiance": {
    "source": "iana"
  },
  "image/vnd.sealed.png": {
    "source": "iana"
  },
  "image/vnd.sealedmedia.softseal.gif": {
    "source": "iana"
  },
  "image/vnd.sealedmedia.softseal.jpg": {
    "source": "iana"
  },
  "image/vnd.svf": {
    "source": "iana"
  },
  "image/vnd.tencent.tap": {
    "source": "iana"
  },
  "image/vnd.valve.source.texture": {
    "source": "iana"
  },
  "image/vnd.wap.wbmp": {
    "source": "iana",
    "extensions": ["wbmp"]
  },
  "image/vnd.xiff": {
    "source": "iana",
    "extensions": ["xif"]
  },
  "image/vnd.zbrush.pcx": {
    "source": "iana"
  },
  "image/webp": {
    "source": "apache",
    "extensions": ["webp"]
  },
  "image/x-3ds": {
    "source": "apache",
    "extensions": ["3ds"]
  },
  "image/x-cmu-raster": {
    "source": "apache",
    "extensions": ["ras"]
  },
  "image/x-cmx": {
    "source": "apache",
    "extensions": ["cmx"]
  },
  "image/x-freehand": {
    "source": "apache",
    "extensions": ["fh","fhc","fh4","fh5","fh7"]
  },
  "image/x-icon": {
    "source": "apache",
    "compressible": true,
    "extensions": ["ico"]
  },
  "image/x-jng": {
    "source": "nginx",
    "extensions": ["jng"]
  },
  "image/x-mrsid-image": {
    "source": "apache",
    "extensions": ["sid"]
  },
  "image/x-ms-bmp": {
    "source": "nginx",
    "compressible": true,
    "extensions": ["bmp"]
  },
  "image/x-pcx": {
    "source": "apache",
    "extensions": ["pcx"]
  },
  "image/x-pict": {
    "source": "apache",
    "extensions": ["pic","pct"]
  },
  "image/x-portable-anymap": {
    "source": "apache",
    "extensions": ["pnm"]
  },
  "image/x-portable-bitmap": {
    "source": "apache",
    "extensions": ["pbm"]
  },
  "image/x-portable-graymap": {
    "source": "apache",
    "extensions": ["pgm"]
  },
  "image/x-portable-pixmap": {
    "source": "apache",
    "extensions": ["ppm"]
  },
  "image/x-rgb": {
    "source": "apache",
    "extensions": ["rgb"]
  },
  "image/x-tga": {
    "source": "apache",
    "extensions": ["tga"]
  },
  "image/x-xbitmap": {
    "source": "apache",
    "extensions": ["xbm"]
  },
  "image/x-xcf": {
    "compressible": false
  },
  "image/x-xpixmap": {
    "source": "apache",
    "extensions": ["xpm"]
  },
  "image/x-xwindowdump": {
    "source": "apache",
    "extensions": ["xwd"]
  },
  "message/cpim": {
    "source": "iana"
  },
  "message/delivery-status": {
    "source": "iana"
  },
  "message/disposition-notification": {
    "source": "iana"
  },
  "message/external-body": {
    "source": "iana"
  },
  "message/feedback-report": {
    "source": "iana"
  },
  "message/global": {
    "source": "iana"
  },
  "message/global-delivery-status": {
    "source": "iana"
  },
  "message/global-disposition-notification": {
    "source": "iana"
  },
  "message/global-headers": {
    "source": "iana"
  },
  "message/http": {
    "source": "iana",
    "compressible": false
  },
  "message/imdn+xml": {
    "source": "iana",
    "compressible": true
  },
  "message/news": {
    "source": "iana"
  },
  "message/partial": {
    "source": "iana",
    "compressible": false
  },
  "message/rfc822": {
    "source": "iana",
    "compressible": true,
    "extensions": ["eml","mime"]
  },
  "message/s-http": {
    "source": "iana"
  },
  "message/sip": {
    "source": "iana"
  },
  "message/sipfrag": {
    "source": "iana"
  },
  "message/tracking-status": {
    "source": "iana"
  },
  "message/vnd.si.simp": {
    "source": "iana"
  },
  "message/vnd.wfa.wsc": {
    "source": "iana"
  },
  "model/iges": {
    "source": "iana",
    "compressible": false,
    "extensions": ["igs","iges"]
  },
  "model/mesh": {
    "source": "iana",
    "compressible": false,
    "extensions": ["msh","mesh","silo"]
  },
  "model/vnd.collada+xml": {
    "source": "iana",
    "extensions": ["dae"]
  },
  "model/vnd.dwf": {
    "source": "iana",
    "extensions": ["dwf"]
  },
  "model/vnd.flatland.3dml": {
    "source": "iana"
  },
  "model/vnd.gdl": {
    "source": "iana",
    "extensions": ["gdl"]
  },
  "model/vnd.gs-gdl": {
    "source": "apache"
  },
  "model/vnd.gs.gdl": {
    "source": "iana"
  },
  "model/vnd.gtw": {
    "source": "iana",
    "extensions": ["gtw"]
  },
  "model/vnd.moml+xml": {
    "source": "iana"
  },
  "model/vnd.mts": {
    "source": "iana",
    "extensions": ["mts"]
  },
  "model/vnd.opengex": {
    "source": "iana"
  },
  "model/vnd.parasolid.transmit.binary": {
    "source": "iana"
  },
  "model/vnd.parasolid.transmit.text": {
    "source": "iana"
  },
  "model/vnd.valve.source.compiled-map": {
    "source": "iana"
  },
  "model/vnd.vtu": {
    "source": "iana",
    "extensions": ["vtu"]
  },
  "model/vrml": {
    "source": "iana",
    "compressible": false,
    "extensions": ["wrl","vrml"]
  },
  "model/x3d+binary": {
    "source": "apache",
    "compressible": false,
    "extensions": ["x3db","x3dbz"]
  },
  "model/x3d+fastinfoset": {
    "source": "iana"
  },
  "model/x3d+vrml": {
    "source": "apache",
    "compressible": false,
    "extensions": ["x3dv","x3dvz"]
  },
  "model/x3d+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["x3d","x3dz"]
  },
  "model/x3d-vrml": {
    "source": "iana"
  },
  "multipart/alternative": {
    "source": "iana",
    "compressible": false
  },
  "multipart/appledouble": {
    "source": "iana"
  },
  "multipart/byteranges": {
    "source": "iana"
  },
  "multipart/digest": {
    "source": "iana"
  },
  "multipart/encrypted": {
    "source": "iana",
    "compressible": false
  },
  "multipart/form-data": {
    "source": "iana",
    "compressible": false
  },
  "multipart/header-set": {
    "source": "iana"
  },
  "multipart/mixed": {
    "source": "iana",
    "compressible": false
  },
  "multipart/parallel": {
    "source": "iana"
  },
  "multipart/related": {
    "source": "iana",
    "compressible": false
  },
  "multipart/report": {
    "source": "iana"
  },
  "multipart/signed": {
    "source": "iana",
    "compressible": false
  },
  "multipart/voice-message": {
    "source": "iana"
  },
  "multipart/x-mixed-replace": {
    "source": "iana"
  },
  "text/1d-interleaved-parityfec": {
    "source": "iana"
  },
  "text/cache-manifest": {
    "source": "iana",
    "compressible": true,
    "extensions": ["appcache","manifest"]
  },
  "text/calendar": {
    "source": "iana",
    "extensions": ["ics","ifb"]
  },
  "text/calender": {
    "compressible": true
  },
  "text/cmd": {
    "compressible": true
  },
  "text/coffeescript": {
    "extensions": ["coffee","litcoffee"]
  },
  "text/css": {
    "source": "iana",
    "compressible": true,
    "extensions": ["css"]
  },
  "text/csv": {
    "source": "iana",
    "compressible": true,
    "extensions": ["csv"]
  },
  "text/csv-schema": {
    "source": "iana"
  },
  "text/directory": {
    "source": "iana"
  },
  "text/dns": {
    "source": "iana"
  },
  "text/ecmascript": {
    "source": "iana"
  },
  "text/encaprtp": {
    "source": "iana"
  },
  "text/enriched": {
    "source": "iana"
  },
  "text/fwdred": {
    "source": "iana"
  },
  "text/grammar-ref-list": {
    "source": "iana"
  },
  "text/hjson": {
    "extensions": ["hjson"]
  },
  "text/html": {
    "source": "iana",
    "compressible": true,
    "extensions": ["html","htm","shtml"]
  },
  "text/jade": {
    "extensions": ["jade"]
  },
  "text/javascript": {
    "source": "iana",
    "compressible": true
  },
  "text/jcr-cnd": {
    "source": "iana"
  },
  "text/jsx": {
    "compressible": true,
    "extensions": ["jsx"]
  },
  "text/less": {
    "extensions": ["less"]
  },
  "text/markdown": {
    "source": "iana"
  },
  "text/mathml": {
    "source": "nginx",
    "extensions": ["mml"]
  },
  "text/mizar": {
    "source": "iana"
  },
  "text/n3": {
    "source": "iana",
    "compressible": true,
    "extensions": ["n3"]
  },
  "text/parameters": {
    "source": "iana"
  },
  "text/parityfec": {
    "source": "iana"
  },
  "text/plain": {
    "source": "iana",
    "compressible": true,
    "extensions": ["txt","text","conf","def","list","log","in","ini"]
  },
  "text/provenance-notation": {
    "source": "iana"
  },
  "text/prs.fallenstein.rst": {
    "source": "iana"
  },
  "text/prs.lines.tag": {
    "source": "iana",
    "extensions": ["dsc"]
  },
  "text/raptorfec": {
    "source": "iana"
  },
  "text/red": {
    "source": "iana"
  },
  "text/rfc822-headers": {
    "source": "iana"
  },
  "text/richtext": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rtx"]
  },
  "text/rtf": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rtf"]
  },
  "text/rtp-enc-aescm128": {
    "source": "iana"
  },
  "text/rtploopback": {
    "source": "iana"
  },
  "text/rtx": {
    "source": "iana"
  },
  "text/sgml": {
    "source": "iana",
    "extensions": ["sgml","sgm"]
  },
  "text/stylus": {
    "extensions": ["stylus","styl"]
  },
  "text/t140": {
    "source": "iana"
  },
  "text/tab-separated-values": {
    "source": "iana",
    "compressible": true,
    "extensions": ["tsv"]
  },
  "text/troff": {
    "source": "iana",
    "extensions": ["t","tr","roff","man","me","ms"]
  },
  "text/turtle": {
    "source": "iana",
    "extensions": ["ttl"]
  },
  "text/ulpfec": {
    "source": "iana"
  },
  "text/uri-list": {
    "source": "iana",
    "compressible": true,
    "extensions": ["uri","uris","urls"]
  },
  "text/vcard": {
    "source": "iana",
    "compressible": true,
    "extensions": ["vcard"]
  },
  "text/vnd.a": {
    "source": "iana"
  },
  "text/vnd.abc": {
    "source": "iana"
  },
  "text/vnd.curl": {
    "source": "iana",
    "extensions": ["curl"]
  },
  "text/vnd.curl.dcurl": {
    "source": "apache",
    "extensions": ["dcurl"]
  },
  "text/vnd.curl.mcurl": {
    "source": "apache",
    "extensions": ["mcurl"]
  },
  "text/vnd.curl.scurl": {
    "source": "apache",
    "extensions": ["scurl"]
  },
  "text/vnd.debian.copyright": {
    "source": "iana"
  },
  "text/vnd.dmclientscript": {
    "source": "iana"
  },
  "text/vnd.dvb.subtitle": {
    "source": "iana",
    "extensions": ["sub"]
  },
  "text/vnd.esmertec.theme-descriptor": {
    "source": "iana"
  },
  "text/vnd.fly": {
    "source": "iana",
    "extensions": ["fly"]
  },
  "text/vnd.fmi.flexstor": {
    "source": "iana",
    "extensions": ["flx"]
  },
  "text/vnd.graphviz": {
    "source": "iana",
    "extensions": ["gv"]
  },
  "text/vnd.in3d.3dml": {
    "source": "iana",
    "extensions": ["3dml"]
  },
  "text/vnd.in3d.spot": {
    "source": "iana",
    "extensions": ["spot"]
  },
  "text/vnd.iptc.newsml": {
    "source": "iana"
  },
  "text/vnd.iptc.nitf": {
    "source": "iana"
  },
  "text/vnd.latex-z": {
    "source": "iana"
  },
  "text/vnd.motorola.reflex": {
    "source": "iana"
  },
  "text/vnd.ms-mediapackage": {
    "source": "iana"
  },
  "text/vnd.net2phone.commcenter.command": {
    "source": "iana"
  },
  "text/vnd.radisys.msml-basic-layout": {
    "source": "iana"
  },
  "text/vnd.si.uricatalogue": {
    "source": "iana"
  },
  "text/vnd.sun.j2me.app-descriptor": {
    "source": "iana",
    "extensions": ["jad"]
  },
  "text/vnd.trolltech.linguist": {
    "source": "iana"
  },
  "text/vnd.wap.si": {
    "source": "iana"
  },
  "text/vnd.wap.sl": {
    "source": "iana"
  },
  "text/vnd.wap.wml": {
    "source": "iana",
    "extensions": ["wml"]
  },
  "text/vnd.wap.wmlscript": {
    "source": "iana",
    "extensions": ["wmls"]
  },
  "text/vtt": {
    "charset": "UTF-8",
    "compressible": true,
    "extensions": ["vtt"]
  },
  "text/x-asm": {
    "source": "apache",
    "extensions": ["s","asm"]
  },
  "text/x-c": {
    "source": "apache",
    "extensions": ["c","cc","cxx","cpp","h","hh","dic"]
  },
  "text/x-component": {
    "source": "nginx",
    "extensions": ["htc"]
  },
  "text/x-fortran": {
    "source": "apache",
    "extensions": ["f","for","f77","f90"]
  },
  "text/x-gwt-rpc": {
    "compressible": true
  },
  "text/x-handlebars-template": {
    "extensions": ["hbs"]
  },
  "text/x-java-source": {
    "source": "apache",
    "extensions": ["java"]
  },
  "text/x-jquery-tmpl": {
    "compressible": true
  },
  "text/x-lua": {
    "extensions": ["lua"]
  },
  "text/x-markdown": {
    "compressible": true,
    "extensions": ["markdown","md","mkd"]
  },
  "text/x-nfo": {
    "source": "apache",
    "extensions": ["nfo"]
  },
  "text/x-opml": {
    "source": "apache",
    "extensions": ["opml"]
  },
  "text/x-pascal": {
    "source": "apache",
    "extensions": ["p","pas"]
  },
  "text/x-processing": {
    "compressible": true,
    "extensions": ["pde"]
  },
  "text/x-sass": {
    "extensions": ["sass"]
  },
  "text/x-scss": {
    "extensions": ["scss"]
  },
  "text/x-setext": {
    "source": "apache",
    "extensions": ["etx"]
  },
  "text/x-sfv": {
    "source": "apache",
    "extensions": ["sfv"]
  },
  "text/x-suse-ymp": {
    "compressible": true,
    "extensions": ["ymp"]
  },
  "text/x-uuencode": {
    "source": "apache",
    "extensions": ["uu"]
  },
  "text/x-vcalendar": {
    "source": "apache",
    "extensions": ["vcs"]
  },
  "text/x-vcard": {
    "source": "apache",
    "extensions": ["vcf"]
  },
  "text/xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xml"]
  },
  "text/xml-external-parsed-entity": {
    "source": "iana"
  },
  "text/yaml": {
    "extensions": ["yaml","yml"]
  },
  "video/1d-interleaved-parityfec": {
    "source": "apache"
  },
  "video/3gpp": {
    "source": "apache",
    "extensions": ["3gp","3gpp"]
  },
  "video/3gpp-tt": {
    "source": "apache"
  },
  "video/3gpp2": {
    "source": "apache",
    "extensions": ["3g2"]
  },
  "video/bmpeg": {
    "source": "apache"
  },
  "video/bt656": {
    "source": "apache"
  },
  "video/celb": {
    "source": "apache"
  },
  "video/dv": {
    "source": "apache"
  },
  "video/h261": {
    "source": "apache",
    "extensions": ["h261"]
  },
  "video/h263": {
    "source": "apache",
    "extensions": ["h263"]
  },
  "video/h263-1998": {
    "source": "apache"
  },
  "video/h263-2000": {
    "source": "apache"
  },
  "video/h264": {
    "source": "apache",
    "extensions": ["h264"]
  },
  "video/h264-rcdo": {
    "source": "apache"
  },
  "video/h264-svc": {
    "source": "apache"
  },
  "video/jpeg": {
    "source": "apache",
    "extensions": ["jpgv"]
  },
  "video/jpeg2000": {
    "source": "apache"
  },
  "video/jpm": {
    "source": "apache",
    "extensions": ["jpm","jpgm"]
  },
  "video/mj2": {
    "source": "apache",
    "extensions": ["mj2","mjp2"]
  },
  "video/mp1s": {
    "source": "apache"
  },
  "video/mp2p": {
    "source": "apache"
  },
  "video/mp2t": {
    "source": "apache",
    "extensions": ["ts"]
  },
  "video/mp4": {
    "source": "apache",
    "compressible": false,
    "extensions": ["mp4","mp4v","mpg4"]
  },
  "video/mp4v-es": {
    "source": "apache"
  },
  "video/mpeg": {
    "source": "apache",
    "compressible": false,
    "extensions": ["mpeg","mpg","mpe","m1v","m2v"]
  },
  "video/mpeg4-generic": {
    "source": "apache"
  },
  "video/mpv": {
    "source": "apache"
  },
  "video/nv": {
    "source": "apache"
  },
  "video/ogg": {
    "source": "apache",
    "compressible": false,
    "extensions": ["ogv"]
  },
  "video/parityfec": {
    "source": "apache"
  },
  "video/pointer": {
    "source": "apache"
  },
  "video/quicktime": {
    "source": "apache",
    "compressible": false,
    "extensions": ["qt","mov"]
  },
  "video/raw": {
    "source": "apache"
  },
  "video/rtp-enc-aescm128": {
    "source": "apache"
  },
  "video/rtx": {
    "source": "apache"
  },
  "video/smpte292m": {
    "source": "apache"
  },
  "video/ulpfec": {
    "source": "apache"
  },
  "video/vc1": {
    "source": "apache"
  },
  "video/vnd.cctv": {
    "source": "apache"
  },
  "video/vnd.dece.hd": {
    "source": "apache",
    "extensions": ["uvh","uvvh"]
  },
  "video/vnd.dece.mobile": {
    "source": "apache",
    "extensions": ["uvm","uvvm"]
  },
  "video/vnd.dece.mp4": {
    "source": "apache"
  },
  "video/vnd.dece.pd": {
    "source": "apache",
    "extensions": ["uvp","uvvp"]
  },
  "video/vnd.dece.sd": {
    "source": "apache",
    "extensions": ["uvs","uvvs"]
  },
  "video/vnd.dece.video": {
    "source": "apache",
    "extensions": ["uvv","uvvv"]
  },
  "video/vnd.directv.mpeg": {
    "source": "apache"
  },
  "video/vnd.directv.mpeg-tts": {
    "source": "apache"
  },
  "video/vnd.dlna.mpeg-tts": {
    "source": "apache"
  },
  "video/vnd.dvb.file": {
    "source": "apache",
    "extensions": ["dvb"]
  },
  "video/vnd.fvt": {
    "source": "apache",
    "extensions": ["fvt"]
  },
  "video/vnd.hns.video": {
    "source": "apache"
  },
  "video/vnd.iptvforum.1dparityfec-1010": {
    "source": "apache"
  },
  "video/vnd.iptvforum.1dparityfec-2005": {
    "source": "apache"
  },
  "video/vnd.iptvforum.2dparityfec-1010": {
    "source": "apache"
  },
  "video/vnd.iptvforum.2dparityfec-2005": {
    "source": "apache"
  },
  "video/vnd.iptvforum.ttsavc": {
    "source": "apache"
  },
  "video/vnd.iptvforum.ttsmpeg2": {
    "source": "apache"
  },
  "video/vnd.motorola.video": {
    "source": "apache"
  },
  "video/vnd.motorola.videop": {
    "source": "apache"
  },
  "video/vnd.mpegurl": {
    "source": "apache",
    "extensions": ["mxu","m4u"]
  },
  "video/vnd.ms-playready.media.pyv": {
    "source": "apache",
    "extensions": ["pyv"]
  },
  "video/vnd.nokia.interleaved-multimedia": {
    "source": "apache"
  },
  "video/vnd.nokia.videovoip": {
    "source": "apache"
  },
  "video/vnd.objectvideo": {
    "source": "apache"
  },
  "video/vnd.sealed.mpeg1": {
    "source": "apache"
  },
  "video/vnd.sealed.mpeg4": {
    "source": "apache"
  },
  "video/vnd.sealed.swf": {
    "source": "apache"
  },
  "video/vnd.sealedmedia.softseal.mov": {
    "source": "apache"
  },
  "video/vnd.uvvu.mp4": {
    "source": "apache",
    "extensions": ["uvu","uvvu"]
  },
  "video/vnd.vivo": {
    "source": "apache",
    "extensions": ["viv"]
  },
  "video/webm": {
    "source": "apache",
    "compressible": false,
    "extensions": ["webm"]
  },
  "video/x-f4v": {
    "source": "apache",
    "extensions": ["f4v"]
  },
  "video/x-fli": {
    "source": "apache",
    "extensions": ["fli"]
  },
  "video/x-flv": {
    "source": "apache",
    "compressible": false,
    "extensions": ["flv"]
  },
  "video/x-m4v": {
    "source": "apache",
    "extensions": ["m4v"]
  },
  "video/x-matroska": {
    "source": "apache",
    "compressible": false,
    "extensions": ["mkv","mk3d","mks"]
  },
  "video/x-mng": {
    "source": "apache",
    "extensions": ["mng"]
  },
  "video/x-ms-asf": {
    "source": "apache",
    "extensions": ["asf","asx"]
  },
  "video/x-ms-vob": {
    "source": "apache",
    "extensions": ["vob"]
  },
  "video/x-ms-wm": {
    "source": "apache",
    "extensions": ["wm"]
  },
  "video/x-ms-wmv": {
    "source": "apache",
    "compressible": false,
    "extensions": ["wmv"]
  },
  "video/x-ms-wmx": {
    "source": "apache",
    "extensions": ["wmx"]
  },
  "video/x-ms-wvx": {
    "source": "apache",
    "extensions": ["wvx"]
  },
  "video/x-msvideo": {
    "source": "apache",
    "extensions": ["avi"]
  },
  "video/x-sgi-movie": {
    "source": "apache",
    "extensions": ["movie"]
  },
  "video/x-smv": {
    "source": "apache",
    "extensions": ["smv"]
  },
  "x-conference/x-cooltalk": {
    "source": "apache",
    "extensions": ["ice"]
  },
  "x-shader/x-fragment": {
    "compressible": true
  },
  "x-shader/x-vertex": {
    "compressible": true
  }
}
},{}],217:[function(require,module,exports){
module["exports"] = [
  "ants",
  "bats",
  "bears",
  "bees",
  "birds",
  "buffalo",
  "cats",
  "chickens",
  "cattle",
  "dogs",
  "dolphins",
  "ducks",
  "elephants",
  "fishes",
  "foxes",
  "frogs",
  "geese",
  "goats",
  "horses",
  "kangaroos",
  "lions",
  "monkeys",
  "owls",
  "oxen",
  "penguins",
  "people",
  "pigs",
  "rabbits",
  "sheep",
  "tigers",
  "whales",
  "wolves",
  "zebras",
  "banshees",
  "crows",
  "black cats",
  "chimeras",
  "ghosts",
  "conspirators",
  "dragons",
  "dwarves",
  "elves",
  "enchanters",
  "exorcists",
  "sons",
  "foes",
  "giants",
  "gnomes",
  "goblins",
  "gooses",
  "griffins",
  "lycanthropes",
  "nemesis",
  "ogres",
  "oracles",
  "prophets",
  "sorcerors",
  "spiders",
  "spirits",
  "vampires",
  "warlocks",
  "vixens",
  "werewolves",
  "witches",
  "worshipers",
  "zombies",
  "druids"
];

},{}],218:[function(require,module,exports){
var team = {};
module['exports'] = team;
team.creature = require("./creature");
team.name = require("./name");

},{"./creature":217,"./name":219}],219:[function(require,module,exports){
module["exports"] = [
  "#{Address.state} #{creature}"
];

},{}],220:[function(require,module,exports){
module["exports"] = [
  "####",
  "###",
  "##"
];

},{}],221:[function(require,module,exports){
module["exports"] = [
  "Australia"
];

},{}],222:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.state_abbr = require("./state_abbr");
address.state = require("./state");
address.postcode = require("./postcode");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.default_country = require("./default_country");

},{"./building_number":220,"./default_country":221,"./postcode":223,"./state":224,"./state_abbr":225,"./street_suffix":226}],223:[function(require,module,exports){
module["exports"] = [
  "0###",
  "2###",
  "3###",
  "4###",
  "5###",
  "6###",
  "7###"
];

},{}],224:[function(require,module,exports){
module["exports"] = [
  "New South Wales",
  "Queensland",
  "Northern Territory",
  "South Australia",
  "Western Australia",
  "Tasmania",
  "Australian Capital Territory",
  "Victoria"
];

},{}],225:[function(require,module,exports){
module["exports"] = [
  "NSW",
  "QLD",
  "NT",
  "SA",
  "WA",
  "TAS",
  "ACT",
  "VIC"
];

},{}],226:[function(require,module,exports){
module["exports"] = [
  "Avenue",
  "Boulevard",
  "Circle",
  "Circuit",
  "Court",
  "Crescent",
  "Crest",
  "Drive",
  "Estate Dr",
  "Grove",
  "Hill",
  "Island",
  "Junction",
  "Knoll",
  "Lane",
  "Loop",
  "Mall",
  "Manor",
  "Meadow",
  "Mews",
  "Parade",
  "Parkway",
  "Pass",
  "Place",
  "Plaza",
  "Ridge",
  "Road",
  "Run",
  "Square",
  "Station St",
  "Street",
  "Summit",
  "Terrace",
  "Track",
  "Trail",
  "View Rd",
  "Way"
];

},{}],227:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");

},{"./suffix":228}],228:[function(require,module,exports){
module["exports"] = [
  "Pty Ltd",
  "and Sons",
  "Corp",
  "Group",
  "Brothers",
  "Partners"
];

},{}],229:[function(require,module,exports){
var en_AU = {};
module['exports'] = en_AU;
en_AU.title = "Australia (English)";
en_AU.name = require("./name");
en_AU.company = require("./company");
en_AU.internet = require("./internet");
en_AU.address = require("./address");
en_AU.phone_number = require("./phone_number");

},{"./address":222,"./company":227,"./internet":231,"./name":233,"./phone_number":236}],230:[function(require,module,exports){
module["exports"] = [
  "com.au",
  "com",
  "net.au",
  "net",
  "org.au",
  "org"
];

},{}],231:[function(require,module,exports){
arguments[4][124][0].apply(exports,arguments)
},{"./domain_suffix":230,"dup":124}],232:[function(require,module,exports){
module["exports"] = [
  "William",
  "Jack",
  "Oliver",
  "Joshua",
  "Thomas",
  "Lachlan",
  "Cooper",
  "Noah",
  "Ethan",
  "Lucas",
  "James",
  "Samuel",
  "Jacob",
  "Liam",
  "Alexander",
  "Benjamin",
  "Max",
  "Isaac",
  "Daniel",
  "Riley",
  "Ryan",
  "Charlie",
  "Tyler",
  "Jake",
  "Matthew",
  "Xavier",
  "Harry",
  "Jayden",
  "Nicholas",
  "Harrison",
  "Levi",
  "Luke",
  "Adam",
  "Henry",
  "Aiden",
  "Dylan",
  "Oscar",
  "Michael",
  "Jackson",
  "Logan",
  "Joseph",
  "Blake",
  "Nathan",
  "Connor",
  "Elijah",
  "Nate",
  "Archie",
  "Bailey",
  "Marcus",
  "Cameron",
  "Jordan",
  "Zachary",
  "Caleb",
  "Hunter",
  "Ashton",
  "Toby",
  "Aidan",
  "Hayden",
  "Mason",
  "Hamish",
  "Edward",
  "Angus",
  "Eli",
  "Sebastian",
  "Christian",
  "Patrick",
  "Andrew",
  "Anthony",
  "Luca",
  "Kai",
  "Beau",
  "Alex",
  "George",
  "Callum",
  "Finn",
  "Zac",
  "Mitchell",
  "Jett",
  "Jesse",
  "Gabriel",
  "Leo",
  "Declan",
  "Charles",
  "Jasper",
  "Jonathan",
  "Aaron",
  "Hugo",
  "David",
  "Christopher",
  "Chase",
  "Owen",
  "Justin",
  "Ali",
  "Darcy",
  "Lincoln",
  "Cody",
  "Phoenix",
  "Sam",
  "John",
  "Joel",
  "Isabella",
  "Ruby",
  "Chloe",
  "Olivia",
  "Charlotte",
  "Mia",
  "Lily",
  "Emily",
  "Ella",
  "Sienna",
  "Sophie",
  "Amelia",
  "Grace",
  "Ava",
  "Zoe",
  "Emma",
  "Sophia",
  "Matilda",
  "Hannah",
  "Jessica",
  "Lucy",
  "Georgia",
  "Sarah",
  "Abigail",
  "Zara",
  "Eva",
  "Scarlett",
  "Jasmine",
  "Chelsea",
  "Lilly",
  "Ivy",
  "Isla",
  "Evie",
  "Isabelle",
  "Maddison",
  "Layla",
  "Summer",
  "Annabelle",
  "Alexis",
  "Elizabeth",
  "Bella",
  "Holly",
  "Lara",
  "Madison",
  "Alyssa",
  "Maya",
  "Tahlia",
  "Claire",
  "Hayley",
  "Imogen",
  "Jade",
  "Ellie",
  "Sofia",
  "Addison",
  "Molly",
  "Phoebe",
  "Alice",
  "Savannah",
  "Gabriella",
  "Kayla",
  "Mikayla",
  "Abbey",
  "Eliza",
  "Willow",
  "Alexandra",
  "Poppy",
  "Samantha",
  "Stella",
  "Amy",
  "Amelie",
  "Anna",
  "Piper",
  "Gemma",
  "Isabel",
  "Victoria",
  "Stephanie",
  "Caitlin",
  "Heidi",
  "Paige",
  "Rose",
  "Amber",
  "Audrey",
  "Claudia",
  "Taylor",
  "Madeline",
  "Angelina",
  "Natalie",
  "Charli",
  "Lauren",
  "Ashley",
  "Violet",
  "Mackenzie",
  "Abby",
  "Skye",
  "Lillian",
  "Alana",
  "Lola",
  "Leah",
  "Eve",
  "Kiara"
];

},{}],233:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");

},{"./first_name":232,"./last_name":234}],234:[function(require,module,exports){
module["exports"] = [
  "Smith",
  "Jones",
  "Williams",
  "Brown",
  "Wilson",
  "Taylor",
  "Johnson",
  "White",
  "Martin",
  "Anderson",
  "Thompson",
  "Nguyen",
  "Thomas",
  "Walker",
  "Harris",
  "Lee",
  "Ryan",
  "Robinson",
  "Kelly",
  "King",
  "Davis",
  "Wright",
  "Evans",
  "Roberts",
  "Green",
  "Hall",
  "Wood",
  "Jackson",
  "Clarke",
  "Patel",
  "Khan",
  "Lewis",
  "James",
  "Phillips",
  "Mason",
  "Mitchell",
  "Rose",
  "Davies",
  "Rodriguez",
  "Cox",
  "Alexander",
  "Garden",
  "Campbell",
  "Johnston",
  "Moore",
  "Smyth",
  "O'neill",
  "Doherty",
  "Stewart",
  "Quinn",
  "Murphy",
  "Graham",
  "Mclaughlin",
  "Hamilton",
  "Murray",
  "Hughes",
  "Robertson",
  "Thomson",
  "Scott",
  "Macdonald",
  "Reid",
  "Clark",
  "Ross",
  "Young",
  "Watson",
  "Paterson",
  "Morrison",
  "Morgan",
  "Griffiths",
  "Edwards",
  "Rees",
  "Jenkins",
  "Owen",
  "Price",
  "Moss",
  "Richards",
  "Abbott",
  "Adams",
  "Armstrong",
  "Bahringer",
  "Bailey",
  "Barrows",
  "Bartell",
  "Bartoletti",
  "Barton",
  "Bauch",
  "Baumbach",
  "Bayer",
  "Beahan",
  "Beatty",
  "Becker",
  "Beier",
  "Berge",
  "Bergstrom",
  "Bode",
  "Bogan",
  "Borer",
  "Bosco",
  "Botsford",
  "Boyer",
  "Boyle",
  "Braun",
  "Bruen",
  "Carroll",
  "Carter",
  "Cartwright",
  "Casper",
  "Cassin",
  "Champlin",
  "Christiansen",
  "Cole",
  "Collier",
  "Collins",
  "Connelly",
  "Conroy",
  "Corkery",
  "Cormier",
  "Corwin",
  "Cronin",
  "Crooks",
  "Cruickshank",
  "Cummings",
  "D'amore",
  "Daniel",
  "Dare",
  "Daugherty",
  "Dickens",
  "Dickinson",
  "Dietrich",
  "Donnelly",
  "Dooley",
  "Douglas",
  "Doyle",
  "Durgan",
  "Ebert",
  "Emard",
  "Emmerich",
  "Erdman",
  "Ernser",
  "Fadel",
  "Fahey",
  "Farrell",
  "Fay",
  "Feeney",
  "Feil",
  "Ferry",
  "Fisher",
  "Flatley",
  "Gibson",
  "Gleason",
  "Glover",
  "Goldner",
  "Goodwin",
  "Grady",
  "Grant",
  "Greenfelder",
  "Greenholt",
  "Grimes",
  "Gutmann",
  "Hackett",
  "Hahn",
  "Haley",
  "Hammes",
  "Hand",
  "Hane",
  "Hansen",
  "Harber",
  "Hartmann",
  "Harvey",
  "Hayes",
  "Heaney",
  "Heathcote",
  "Heller",
  "Hermann",
  "Hermiston",
  "Hessel",
  "Hettinger",
  "Hickle",
  "Hill",
  "Hills",
  "Hoppe",
  "Howe",
  "Howell",
  "Hudson",
  "Huel",
  "Hyatt",
  "Jacobi",
  "Jacobs",
  "Jacobson",
  "Jerde",
  "Johns",
  "Keeling",
  "Kemmer",
  "Kessler",
  "Kiehn",
  "Kirlin",
  "Klein",
  "Koch",
  "Koelpin",
  "Kohler",
  "Koss",
  "Kovacek",
  "Kreiger",
  "Kris",
  "Kuhlman",
  "Kuhn",
  "Kulas",
  "Kunde",
  "Kutch",
  "Lakin",
  "Lang",
  "Langworth",
  "Larkin",
  "Larson",
  "Leannon",
  "Leffler",
  "Little",
  "Lockman",
  "Lowe",
  "Lynch",
  "Mann",
  "Marks",
  "Marvin",
  "Mayer",
  "Mccullough",
  "Mcdermott",
  "Mckenzie",
  "Miller",
  "Mills",
  "Monahan",
  "Morissette",
  "Mueller",
  "Muller",
  "Nader",
  "Nicolas",
  "Nolan",
  "O'connell",
  "O'conner",
  "O'hara",
  "O'keefe",
  "Olson",
  "O'reilly",
  "Parisian",
  "Parker",
  "Quigley",
  "Reilly",
  "Reynolds",
  "Rice",
  "Ritchie",
  "Rohan",
  "Rolfson",
  "Rowe",
  "Russel",
  "Rutherford",
  "Sanford",
  "Sauer",
  "Schmidt",
  "Schmitt",
  "Schneider",
  "Schroeder",
  "Schultz",
  "Shields",
  "Smitham",
  "Spencer",
  "Stanton",
  "Stark",
  "Stokes",
  "Swift",
  "Tillman",
  "Towne",
  "Tremblay",
  "Tromp",
  "Turcotte",
  "Turner",
  "Walsh",
  "Walter",
  "Ward",
  "Waters",
  "Weber",
  "Welch",
  "West",
  "Wilderman",
  "Wilkinson",
  "Williamson",
  "Windler",
  "Wolf"
];

},{}],235:[function(require,module,exports){
module["exports"] = [
  "0# #### ####",
  "+61 # #### ####",
  "04## ### ###",
  "+61 4## ### ###"
];

},{}],236:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":235,"dup":83}],237:[function(require,module,exports){
var en_BORK = {};
module['exports'] = en_BORK;
en_BORK.title = "Bork (English)";
en_BORK.lorem = require("./lorem");

},{"./lorem":238}],238:[function(require,module,exports){
arguments[4][74][0].apply(exports,arguments)
},{"./words":239,"dup":74}],239:[function(require,module,exports){
module["exports"] = [
  "Boot",
  "I",
  "Nu",
  "Nur",
  "Tu",
  "Um",
  "a",
  "becoose-a",
  "boot",
  "bork",
  "burn",
  "chuuses",
  "cumplete-a",
  "cun",
  "cunseqooences",
  "curcoomstunces",
  "dee",
  "deeslikes",
  "denuoonceeng",
  "desures",
  "du",
  "eccuoont",
  "ectooel",
  "edfuntege-a",
  "efueeds",
  "egeeen",
  "ell",
  "ere-a",
  "feend",
  "foolt",
  "frum",
  "geefe-a",
  "gesh",
  "greet",
  "heem",
  "heppeeness",
  "hes",
  "hoo",
  "hoomun",
  "idea",
  "ifer",
  "in",
  "incuoonter",
  "injuy",
  "itselff",
  "ixcept",
  "ixemple-a",
  "ixerceese-a",
  "ixpleeen",
  "ixplurer",
  "ixpuoond",
  "ixtremely",
  "knoo",
  "lebureeuoos",
  "lufes",
  "meestekee",
  "mester-booeelder",
  "moost",
  "mun",
  "nu",
  "nut",
  "oobteeen",
  "oocceseeunelly",
  "ooccoor",
  "ooff",
  "oone-a",
  "oor",
  "peeen",
  "peeenffool",
  "physeecel",
  "pleesoore-a",
  "poorsooe-a",
  "poorsooes",
  "preeesing",
  "prucoore-a",
  "prudooces",
  "reeght",
  "reshunelly",
  "resooltunt",
  "sume-a",
  "teecheengs",
  "teke-a",
  "thees",
  "thet",
  "thuse-a",
  "treefiel",
  "troot",
  "tu",
  "tueel",
  "und",
  "undertekes",
  "unnuyeeng",
  "uny",
  "unyune-a",
  "us",
  "veell",
  "veet",
  "ves",
  "vheech",
  "vhu",
  "yuoo",
  "zee",
  "zeere-a"
];

},{}],240:[function(require,module,exports){
module["exports"] = [
  "Canada"
];

},{}],241:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.default_country = require("./default_country");
address.postcode = require('./postcode.js');

},{"./default_country":240,"./postcode.js":242,"./state":243,"./state_abbr":244}],242:[function(require,module,exports){
module["exports"] = [
  "?#? #?#"
];

},{}],243:[function(require,module,exports){
module["exports"] = [
  "Alberta",
  "British Columbia",
  "Manitoba",
  "New Brunswick",
  "Newfoundland and Labrador",
  "Nova Scotia",
  "Northwest Territories",
  "Nunavut",
  "Ontario",
  "Prince Edward Island",
  "Quebec",
  "Saskatchewan",
  "Yukon"
];

},{}],244:[function(require,module,exports){
module["exports"] = [
  "AB",
  "BC",
  "MB",
  "NB",
  "NL",
  "NS",
  "NU",
  "NT",
  "ON",
  "PE",
  "QC",
  "SK",
  "YT"
];

},{}],245:[function(require,module,exports){
var en_CA = {};
module['exports'] = en_CA;
en_CA.title = "Canada (English)";
en_CA.address = require("./address");
en_CA.internet = require("./internet");
en_CA.phone_number = require("./phone_number");

},{"./address":241,"./internet":248,"./phone_number":250}],246:[function(require,module,exports){
module["exports"] = [
  "ca",
  "com",
  "biz",
  "info",
  "name",
  "net",
  "org"
];

},{}],247:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.ca",
  "hotmail.com"
];

},{}],248:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./domain_suffix":246,"./free_email":247,"dup":73}],249:[function(require,module,exports){
module["exports"] = [
  "###-###-####",
  "(###)###-####",
  "###.###.####",
  "1-###-###-####",
  "###-###-#### x###",
  "(###)###-#### x###",
  "1-###-###-#### x###",
  "###.###.#### x###",
  "###-###-#### x####",
  "(###)###-#### x####",
  "1-###-###-#### x####",
  "###.###.#### x####",
  "###-###-#### x#####",
  "(###)###-#### x#####",
  "1-###-###-#### x#####",
  "###.###.#### x#####"
];

},{}],250:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":249,"dup":83}],251:[function(require,module,exports){
module["exports"] = [
  "Avon",
  "Bedfordshire",
  "Berkshire",
  "Borders",
  "Buckinghamshire",
  "Cambridgeshire",
  "Central",
  "Cheshire",
  "Cleveland",
  "Clwyd",
  "Cornwall",
  "County Antrim",
  "County Armagh",
  "County Down",
  "County Fermanagh",
  "County Londonderry",
  "County Tyrone",
  "Cumbria",
  "Derbyshire",
  "Devon",
  "Dorset",
  "Dumfries and Galloway",
  "Durham",
  "Dyfed",
  "East Sussex",
  "Essex",
  "Fife",
  "Gloucestershire",
  "Grampian",
  "Greater Manchester",
  "Gwent",
  "Gwynedd County",
  "Hampshire",
  "Herefordshire",
  "Hertfordshire",
  "Highlands and Islands",
  "Humberside",
  "Isle of Wight",
  "Kent",
  "Lancashire",
  "Leicestershire",
  "Lincolnshire",
  "Lothian",
  "Merseyside",
  "Mid Glamorgan",
  "Norfolk",
  "North Yorkshire",
  "Northamptonshire",
  "Northumberland",
  "Nottinghamshire",
  "Oxfordshire",
  "Powys",
  "Rutland",
  "Shropshire",
  "Somerset",
  "South Glamorgan",
  "South Yorkshire",
  "Staffordshire",
  "Strathclyde",
  "Suffolk",
  "Surrey",
  "Tayside",
  "Tyne and Wear",
  "Warwickshire",
  "West Glamorgan",
  "West Midlands",
  "West Sussex",
  "West Yorkshire",
  "Wiltshire",
  "Worcestershire"
];

},{}],252:[function(require,module,exports){
module["exports"] = [
  "England",
  "Scotland",
  "Wales",
  "Northern Ireland"
];

},{}],253:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.county = require("./county");
address.uk_country = require("./uk_country");
address.default_country = require("./default_country");
address.postcode = require("./postcode");

},{"./county":251,"./default_country":252,"./postcode":254,"./uk_country":255}],254:[function(require,module,exports){
module["exports"] = [
  "??# #??",
  "??## #??",
];

},{}],255:[function(require,module,exports){
arguments[4][252][0].apply(exports,arguments)
},{"dup":252}],256:[function(require,module,exports){
module["exports"] = [
  "074## ######",
  "075## ######",
  "076## ######",
  "077## ######",
  "078## ######",
  "079## ######"
];

},{}],257:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"./formats":256,"dup":65}],258:[function(require,module,exports){
var en_GB = {};
module['exports'] = en_GB;
en_GB.title = "Great Britain (English)";
en_GB.address = require("./address");
en_GB.internet = require("./internet");
en_GB.phone_number = require("./phone_number");
en_GB.cell_phone = require("./cell_phone");

},{"./address":253,"./cell_phone":257,"./internet":260,"./phone_number":262}],259:[function(require,module,exports){
module["exports"] = [
  "co.uk",
  "com",
  "biz",
  "info",
  "name"
];

},{}],260:[function(require,module,exports){
arguments[4][124][0].apply(exports,arguments)
},{"./domain_suffix":259,"dup":124}],261:[function(require,module,exports){
module["exports"] = [
  "01#### #####",
  "01### ######",
  "01#1 ### ####",
  "011# ### ####",
  "02# #### ####",
  "03## ### ####",
  "055 #### ####",
  "056 #### ####",
  "0800 ### ####",
  "08## ### ####",
  "09## ### ####",
  "016977 ####",
  "01### #####",
  "0500 ######",
  "0800 ######"
];

},{}],262:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":261,"dup":83}],263:[function(require,module,exports){
module["exports"] = [
  "Carlow",
  "Cavan",
  "Clare",
  "Cork",
  "Donegal",
  "Dublin",
  "Galway",
  "Kerry",
  "Kildare",
  "Kilkenny",
  "Laois",
  "Leitrim",
  "Limerick",
  "Longford",
  "Louth",
  "Mayo",
  "Meath",
  "Monaghan",
  "Offaly",
  "Roscommon",
  "Sligo",
  "Tipperary",
  "Waterford",
  "Westmeath",
  "Wexford",
  "Wicklow"
];

},{}],264:[function(require,module,exports){
module["exports"] = [
  "Ireland"
];

},{}],265:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.county = require("./county");
address.default_country = require("./default_country");

},{"./county":263,"./default_country":264}],266:[function(require,module,exports){
module["exports"] = [
  "082 ### ####",
  "083 ### ####",
  "085 ### ####",
  "086 ### ####",
  "087 ### ####",
  "089 ### ####"
];

},{}],267:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"./formats":266,"dup":65}],268:[function(require,module,exports){
var en_IE = {};
module['exports'] = en_IE;
en_IE.title = "Ireland (English)";
en_IE.address = require("./address");
en_IE.internet = require("./internet");
en_IE.phone_number = require("./phone_number");
en_IE.cell_phone = require("./cell_phone");

},{"./address":265,"./cell_phone":267,"./internet":270,"./phone_number":272}],269:[function(require,module,exports){
module["exports"] = [
  "ie",
  "com",
  "net",
  "info",
  "eu"
];

},{}],270:[function(require,module,exports){
arguments[4][124][0].apply(exports,arguments)
},{"./domain_suffix":269,"dup":124}],271:[function(require,module,exports){
module["exports"] = [
  "01 #######",
  "021 #######",
  "022 #######",
  "023 #######",
  "024 #######",
  "025 #######",
  "026 #######",
  "027 #######",
  "028 #######",
  "029 #######",
  "0402 #######",
  "0404 #######",
  "041 #######",
  "042 #######",
  "043 #######",
  "044 #######",
  "045 #######",
  "046 #######",
  "047 #######",
  "049 #######",
  "0504 #######",
  "0505 #######",
  "051 #######",
  "052 #######",
  "053 #######",
  "056 #######",
  "057 #######",
  "058 #######",
  "059 #######",
  "061 #######",
  "062 #######",
  "063 #######",
  "064 #######",
  "065 #######",
  "066 #######",
  "067 #######",
  "068 #######",
  "069 #######",
  "071 #######",
  "074 #######",
  "090 #######",
  "091 #######",
  "093 #######",
  "094 #######",
  "095 #######",
  "096 #######",
  "097 #######",
  "098 #######",
  "099 #######"
];

},{}],272:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":271,"dup":83}],273:[function(require,module,exports){
module["exports"] = [
  "India",
  "Indian Republic",
  "Bharat",
  "Hindustan"
];

},{}],274:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.default_country = require("./default_country");

},{"./default_country":273,"./postcode":275,"./state":276,"./state_abbr":277}],275:[function(require,module,exports){
arguments[4][242][0].apply(exports,arguments)
},{"dup":242}],276:[function(require,module,exports){
module["exports"] = [
  "Andra Pradesh",
  "Arunachal Pradesh",
  "Assam",
  "Bihar",
  "Chhattisgarh",
  "Goa",
  "Gujarat",
  "Haryana",
  "Himachal Pradesh",
  "Jammu and Kashmir",
  "Jharkhand",
  "Karnataka",
  "Kerala",
  "Madya Pradesh",
  "Maharashtra",
  "Manipur",
  "Meghalaya",
  "Mizoram",
  "Nagaland",
  "Orissa",
  "Punjab",
  "Rajasthan",
  "Sikkim",
  "Tamil Nadu",
  "Tripura",
  "Uttaranchal",
  "Uttar Pradesh",
  "West Bengal",
  "Andaman and Nicobar Islands",
  "Chandigarh",
  "Dadar and Nagar Haveli",
  "Daman and Diu",
  "Delhi",
  "Lakshadweep",
  "Pondicherry"
];

},{}],277:[function(require,module,exports){
module["exports"] = [
  "AP",
  "AR",
  "AS",
  "BR",
  "CG",
  "DL",
  "GA",
  "GJ",
  "HR",
  "HP",
  "JK",
  "JS",
  "KA",
  "KL",
  "MP",
  "MH",
  "MN",
  "ML",
  "MZ",
  "NL",
  "OR",
  "PB",
  "RJ",
  "SK",
  "TN",
  "TR",
  "UK",
  "UP",
  "WB",
  "AN",
  "CH",
  "DN",
  "DD",
  "LD",
  "PY"
];

},{}],278:[function(require,module,exports){
arguments[4][227][0].apply(exports,arguments)
},{"./suffix":279,"dup":227}],279:[function(require,module,exports){
module["exports"] = [
  "Pvt Ltd",
  "Limited",
  "Ltd",
  "and Sons",
  "Corp",
  "Group",
  "Brothers"
];

},{}],280:[function(require,module,exports){
var en_IND = {};
module['exports'] = en_IND;
en_IND.title = "India (English)";
en_IND.name = require("./name");
en_IND.address = require("./address");
en_IND.internet = require("./internet");
en_IND.company = require("./company");
en_IND.phone_number = require("./phone_number");

},{"./address":274,"./company":278,"./internet":283,"./name":285,"./phone_number":288}],281:[function(require,module,exports){
module["exports"] = [
  "in",
  "com",
  "biz",
  "info",
  "name",
  "net",
  "org",
  "co.in"
];

},{}],282:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.co.in",
  "hotmail.com"
];

},{}],283:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./domain_suffix":281,"./free_email":282,"dup":73}],284:[function(require,module,exports){
module["exports"] = [
  "Aadrika",
  "Aanandinii",
  "Aaratrika",
  "Aarya",
  "Arya",
  "Aashritha",
  "Aatmaja",
  "Atmaja",
  "Abhaya",
  "Adwitiya",
  "Agrata",
  "Ahilya",
  "Ahalya",
  "Aishani",
  "Akshainie",
  "Akshata",
  "Akshita",
  "Akula",
  "Ambar",
  "Amodini",
  "Amrita",
  "Amritambu",
  "Anala",
  "Anamika",
  "Ananda",
  "Anandamayi",
  "Ananta",
  "Anila",
  "Anjali",
  "Anjushri",
  "Anjushree",
  "Annapurna",
  "Anshula",
  "Anuja",
  "Anusuya",
  "Anasuya",
  "Anasooya",
  "Anwesha",
  "Apsara",
  "Aruna",
  "Asha",
  "Aasa",
  "Aasha",
  "Aslesha",
  "Atreyi",
  "Atreyee",
  "Avani",
  "Abani",
  "Avantika",
  "Ayushmati",
  "Baidehi",
  "Vaidehi",
  "Bala",
  "Baala",
  "Balamani",
  "Basanti",
  "Vasanti",
  "Bela",
  "Bhadra",
  "Bhagirathi",
  "Bhagwanti",
  "Bhagwati",
  "Bhamini",
  "Bhanumati",
  "Bhaanumati",
  "Bhargavi",
  "Bhavani",
  "Bhilangana",
  "Bilwa",
  "Bilva",
  "Buddhana",
  "Chakrika",
  "Chanda",
  "Chandi",
  "Chandni",
  "Chandini",
  "Chandani",
  "Chandra",
  "Chandira",
  "Chandrabhaga",
  "Chandrakala",
  "Chandrakin",
  "Chandramani",
  "Chandrani",
  "Chandraprabha",
  "Chandraswaroopa",
  "Chandravati",
  "Chapala",
  "Charumati",
  "Charvi",
  "Chatura",
  "Chitrali",
  "Chitramala",
  "Chitrangada",
  "Daksha",
  "Dakshayani",
  "Damayanti",
  "Darshwana",
  "Deepali",
  "Dipali",
  "Deeptimoyee",
  "Deeptimayee",
  "Devangana",
  "Devani",
  "Devasree",
  "Devi",
  "Daevi",
  "Devika",
  "Daevika",
  "Dhaanyalakshmi",
  "Dhanalakshmi",
  "Dhana",
  "Dhanadeepa",
  "Dhara",
  "Dharani",
  "Dharitri",
  "Dhatri",
  "Diksha",
  "Deeksha",
  "Divya",
  "Draupadi",
  "Dulari",
  "Durga",
  "Durgeshwari",
  "Ekaparnika",
  "Elakshi",
  "Enakshi",
  "Esha",
  "Eshana",
  "Eshita",
  "Gautami",
  "Gayatri",
  "Geeta",
  "Geetanjali",
  "Gitanjali",
  "Gemine",
  "Gemini",
  "Girja",
  "Girija",
  "Gita",
  "Hamsini",
  "Harinakshi",
  "Harita",
  "Heema",
  "Himadri",
  "Himani",
  "Hiranya",
  "Indira",
  "Jaimini",
  "Jaya",
  "Jyoti",
  "Jyotsana",
  "Kali",
  "Kalinda",
  "Kalpana",
  "Kalyani",
  "Kama",
  "Kamala",
  "Kamla",
  "Kanchan",
  "Kanishka",
  "Kanti",
  "Kashyapi",
  "Kumari",
  "Kumuda",
  "Lakshmi",
  "Laxmi",
  "Lalita",
  "Lavanya",
  "Leela",
  "Lila",
  "Leela",
  "Madhuri",
  "Malti",
  "Malati",
  "Mandakini",
  "Mandaakin",
  "Mangala",
  "Mangalya",
  "Mani",
  "Manisha",
  "Manjusha",
  "Meena",
  "Mina",
  "Meenakshi",
  "Minakshi",
  "Menka",
  "Menaka",
  "Mohana",
  "Mohini",
  "Nalini",
  "Nikita",
  "Ojaswini",
  "Omana",
  "Oormila",
  "Urmila",
  "Opalina",
  "Opaline",
  "Padma",
  "Parvati",
  "Poornima",
  "Purnima",
  "Pramila",
  "Prasanna",
  "Preity",
  "Prema",
  "Priya",
  "Priyala",
  "Pushti",
  "Radha",
  "Rageswari",
  "Rageshwari",
  "Rajinder",
  "Ramaa",
  "Rati",
  "Rita",
  "Rohana",
  "Rukhmani",
  "Rukmin",
  "Rupinder",
  "Sanya",
  "Sarada",
  "Sharda",
  "Sarala",
  "Sarla",
  "Saraswati",
  "Sarisha",
  "Saroja",
  "Shakti",
  "Shakuntala",
  "Shanti",
  "Sharmila",
  "Shashi",
  "Shashikala",
  "Sheela",
  "Shivakari",
  "Shobhana",
  "Shresth",
  "Shresthi",
  "Shreya",
  "Shreyashi",
  "Shridevi",
  "Shrishti",
  "Shubha",
  "Shubhaprada",
  "Siddhi",
  "Sitara",
  "Sloka",
  "Smita",
  "Smriti",
  "Soma",
  "Subhashini",
  "Subhasini",
  "Sucheta",
  "Sudeva",
  "Sujata",
  "Sukanya",
  "Suma",
  "Suma",
  "Sumitra",
  "Sunita",
  "Suryakantam",
  "Sushma",
  "Swara",
  "Swarnalata",
  "Sweta",
  "Shwet",
  "Tanirika",
  "Tanushree",
  "Tanushri",
  "Tanushri",
  "Tanya",
  "Tara",
  "Trisha",
  "Uma",
  "Usha",
  "Vaijayanti",
  "Vaijayanthi",
  "Baijayanti",
  "Vaishvi",
  "Vaishnavi",
  "Vaishno",
  "Varalakshmi",
  "Vasudha",
  "Vasundhara",
  "Veda",
  "Vedanshi",
  "Vidya",
  "Vimala",
  "Vrinda",
  "Vrund",
  "Aadi",
  "Aadidev",
  "Aadinath",
  "Aaditya",
  "Aagam",
  "Aagney",
  "Aamod",
  "Aanandaswarup",
  "Anand Swarup",
  "Aanjaneya",
  "Anjaneya",
  "Aaryan",
  "Aryan",
  "Aatmaj",
  "Aatreya",
  "Aayushmaan",
  "Aayushman",
  "Abhaidev",
  "Abhaya",
  "Abhirath",
  "Abhisyanta",
  "Acaryatanaya",
  "Achalesvara",
  "Acharyanandana",
  "Acharyasuta",
  "Achintya",
  "Achyut",
  "Adheesh",
  "Adhiraj",
  "Adhrit",
  "Adikavi",
  "Adinath",
  "Aditeya",
  "Aditya",
  "Adityanandan",
  "Adityanandana",
  "Adripathi",
  "Advaya",
  "Agasti",
  "Agastya",
  "Agneya",
  "Aagneya",
  "Agnimitra",
  "Agniprava",
  "Agnivesh",
  "Agrata",
  "Ajit",
  "Ajeet",
  "Akroor",
  "Akshaj",
  "Akshat",
  "Akshayakeerti",
  "Alok",
  "Aalok",
  "Amaranaath",
  "Amarnath",
  "Amaresh",
  "Ambar",
  "Ameyatma",
  "Amish",
  "Amogh",
  "Amrit",
  "Anaadi",
  "Anagh",
  "Anal",
  "Anand",
  "Aanand",
  "Anang",
  "Anil",
  "Anilaabh",
  "Anilabh",
  "Anish",
  "Ankal",
  "Anunay",
  "Anurag",
  "Anuraag",
  "Archan",
  "Arindam",
  "Arjun",
  "Arnesh",
  "Arun",
  "Ashlesh",
  "Ashok",
  "Atmanand",
  "Atmananda",
  "Avadhesh",
  "Baalaaditya",
  "Baladitya",
  "Baalagopaal",
  "Balgopal",
  "Balagopal",
  "Bahula",
  "Bakula",
  "Bala",
  "Balaaditya",
  "Balachandra",
  "Balagovind",
  "Bandhu",
  "Bandhul",
  "Bankim",
  "Bankimchandra",
  "Bhadrak",
  "Bhadraksh",
  "Bhadran",
  "Bhagavaan",
  "Bhagvan",
  "Bharadwaj",
  "Bhardwaj",
  "Bharat",
  "Bhargava",
  "Bhasvan",
  "Bhaasvan",
  "Bhaswar",
  "Bhaaswar",
  "Bhaumik",
  "Bhaves",
  "Bheeshma",
  "Bhisham",
  "Bhishma",
  "Bhima",
  "Bhoj",
  "Bhramar",
  "Bhudev",
  "Bhudeva",
  "Bhupati",
  "Bhoopati",
  "Bhoopat",
  "Bhupen",
  "Bhushan",
  "Bhooshan",
  "Bhushit",
  "Bhooshit",
  "Bhuvanesh",
  "Bhuvaneshwar",
  "Bilva",
  "Bodhan",
  "Brahma",
  "Brahmabrata",
  "Brahmanandam",
  "Brahmaanand",
  "Brahmdev",
  "Brajendra",
  "Brajesh",
  "Brijesh",
  "Birjesh",
  "Budhil",
  "Chakor",
  "Chakradhar",
  "Chakravartee",
  "Chakravarti",
  "Chanakya",
  "Chaanakya",
  "Chandak",
  "Chandan",
  "Chandra",
  "Chandraayan",
  "Chandrabhan",
  "Chandradev",
  "Chandraketu",
  "Chandramauli",
  "Chandramohan",
  "Chandran",
  "Chandranath",
  "Chapal",
  "Charak",
  "Charuchandra",
  "Chaaruchandra",
  "Charuvrat",
  "Chatur",
  "Chaturaanan",
  "Chaturbhuj",
  "Chetan",
  "Chaten",
  "Chaitan",
  "Chetanaanand",
  "Chidaakaash",
  "Chidaatma",
  "Chidambar",
  "Chidambaram",
  "Chidananda",
  "Chinmayanand",
  "Chinmayananda",
  "Chiranjeev",
  "Chiranjeeve",
  "Chitraksh",
  "Daiwik",
  "Daksha",
  "Damodara",
  "Dandak",
  "Dandapaani",
  "Darshan",
  "Datta",
  "Dayaamay",
  "Dayamayee",
  "Dayaananda",
  "Dayaanidhi",
  "Kin",
  "Deenabandhu",
  "Deepan",
  "Deepankar",
  "Dipankar",
  "Deependra",
  "Dipendra",
  "Deepesh",
  "Dipesh",
  "Deeptanshu",
  "Deeptendu",
  "Diptendu",
  "Deeptiman",
  "Deeptimoy",
  "Deeptimay",
  "Dev",
  "Deb",
  "Devadatt",
  "Devagya",
  "Devajyoti",
  "Devak",
  "Devdan",
  "Deven",
  "Devesh",
  "Deveshwar",
  "Devi",
  "Devvrat",
  "Dhananjay",
  "Dhanapati",
  "Dhanpati",
  "Dhanesh",
  "Dhanu",
  "Dhanvin",
  "Dharmaketu",
  "Dhruv",
  "Dhyanesh",
  "Dhyaneshwar",
  "Digambar",
  "Digambara",
  "Dinakar",
  "Dinkar",
  "Dinesh",
  "Divaakar",
  "Divakar",
  "Deevakar",
  "Divjot",
  "Dron",
  "Drona",
  "Dwaipayan",
  "Dwaipayana",
  "Eekalabya",
  "Ekalavya",
  "Ekaksh",
  "Ekaaksh",
  "Ekaling",
  "Ekdant",
  "Ekadant",
  "Gajaadhar",
  "Gajadhar",
  "Gajbaahu",
  "Gajabahu",
  "Ganak",
  "Ganaka",
  "Ganapati",
  "Gandharv",
  "Gandharva",
  "Ganesh",
  "Gangesh",
  "Garud",
  "Garuda",
  "Gati",
  "Gatik",
  "Gaurang",
  "Gauraang",
  "Gauranga",
  "Gouranga",
  "Gautam",
  "Gautama",
  "Goutam",
  "Ghanaanand",
  "Ghanshyam",
  "Ghanashyam",
  "Giri",
  "Girik",
  "Girika",
  "Girindra",
  "Giriraaj",
  "Giriraj",
  "Girish",
  "Gopal",
  "Gopaal",
  "Gopi",
  "Gopee",
  "Gorakhnath",
  "Gorakhanatha",
  "Goswamee",
  "Goswami",
  "Gotum",
  "Gautam",
  "Govinda",
  "Gobinda",
  "Gudakesha",
  "Gudakesa",
  "Gurdev",
  "Guru",
  "Hari",
  "Harinarayan",
  "Harit",
  "Himadri",
  "Hiranmay",
  "Hiranmaya",
  "Hiranya",
  "Inder",
  "Indra",
  "Indra",
  "Jagadish",
  "Jagadisha",
  "Jagathi",
  "Jagdeep",
  "Jagdish",
  "Jagmeet",
  "Jahnu",
  "Jai",
  "Javas",
  "Jay",
  "Jitendra",
  "Jitender",
  "Jyotis",
  "Kailash",
  "Kama",
  "Kamalesh",
  "Kamlesh",
  "Kanak",
  "Kanaka",
  "Kannan",
  "Kannen",
  "Karan",
  "Karthik",
  "Kartik",
  "Karunanidhi",
  "Kashyap",
  "Kiran",
  "Kirti",
  "Keerti",
  "Krishna",
  "Krishnadas",
  "Krishnadasa",
  "Kumar",
  "Lai",
  "Lakshman",
  "Laxman",
  "Lakshmidhar",
  "Lakshminath",
  "Lal",
  "Laal",
  "Mahendra",
  "Mohinder",
  "Mahesh",
  "Maheswar",
  "Mani",
  "Manik",
  "Manikya",
  "Manoj",
  "Marut",
  "Mayoor",
  "Meghnad",
  "Meghnath",
  "Mohan",
  "Mukesh",
  "Mukul",
  "Nagabhushanam",
  "Nanda",
  "Narayan",
  "Narendra",
  "Narinder",
  "Naveen",
  "Navin",
  "Nawal",
  "Naval",
  "Nimit",
  "Niranjan",
  "Nirbhay",
  "Niro",
  "Param",
  "Paramartha",
  "Pran",
  "Pranay",
  "Prasad",
  "Prathamesh",
  "Prayag",
  "Prem",
  "Puneet",
  "Purushottam",
  "Rahul",
  "Raj",
  "Rajan",
  "Rajendra",
  "Rajinder",
  "Rajiv",
  "Rakesh",
  "Ramesh",
  "Rameshwar",
  "Ranjit",
  "Ranjeet",
  "Ravi",
  "Ritesh",
  "Rohan",
  "Rohit",
  "Rudra",
  "Sachin",
  "Sameer",
  "Samir",
  "Sanjay",
  "Sanka",
  "Sarvin",
  "Satish",
  "Satyen",
  "Shankar",
  "Shantanu",
  "Shashi",
  "Sher",
  "Shiv",
  "Siddarth",
  "Siddhran",
  "Som",
  "Somu",
  "Somnath",
  "Subhash",
  "Subodh",
  "Suman",
  "Suresh",
  "Surya",
  "Suryakant",
  "Suryakanta",
  "Sushil",
  "Susheel",
  "Swami",
  "Swapnil",
  "Tapan",
  "Tara",
  "Tarun",
  "Tej",
  "Tejas",
  "Trilochan",
  "Trilochana",
  "Trilok",
  "Trilokesh",
  "Triloki",
  "Triloki Nath",
  "Trilokanath",
  "Tushar",
  "Udai",
  "Udit",
  "Ujjawal",
  "Ujjwal",
  "Umang",
  "Upendra",
  "Uttam",
  "Vasudev",
  "Vasudeva",
  "Vedang",
  "Vedanga",
  "Vidhya",
  "Vidur",
  "Vidhur",
  "Vijay",
  "Vimal",
  "Vinay",
  "Vishnu",
  "Bishnu",
  "Vishwamitra",
  "Vyas",
  "Yogendra",
  "Yoginder",
  "Yogesh"
];

},{}],285:[function(require,module,exports){
arguments[4][233][0].apply(exports,arguments)
},{"./first_name":284,"./last_name":286,"dup":233}],286:[function(require,module,exports){
module["exports"] = [
  "Abbott",
  "Achari",
  "Acharya",
  "Adiga",
  "Agarwal",
  "Ahluwalia",
  "Ahuja",
  "Arora",
  "Asan",
  "Bandopadhyay",
  "Banerjee",
  "Bharadwaj",
  "Bhat",
  "Butt",
  "Bhattacharya",
  "Bhattathiri",
  "Chaturvedi",
  "Chattopadhyay",
  "Chopra",
  "Desai",
  "Deshpande",
  "Devar",
  "Dhawan",
  "Dubashi",
  "Dutta",
  "Dwivedi",
  "Embranthiri",
  "Ganaka",
  "Gandhi",
  "Gill",
  "Gowda",
  "Guha",
  "Guneta",
  "Gupta",
  "Iyer",
  "Iyengar",
  "Jain",
  "Jha",
  "Johar",
  "Joshi",
  "Kakkar",
  "Kaniyar",
  "Kapoor",
  "Kaul",
  "Kaur",
  "Khan",
  "Khanna",
  "Khatri",
  "Kocchar",
  "Mahajan",
  "Malik",
  "Marar",
  "Menon",
  "Mehra",
  "Mehrotra",
  "Mishra",
  "Mukhopadhyay",
  "Nayar",
  "Naik",
  "Nair",
  "Nambeesan",
  "Namboothiri",
  "Nehru",
  "Pandey",
  "Panicker",
  "Patel",
  "Patil",
  "Pilla",
  "Pillai",
  "Pothuvaal",
  "Prajapat",
  "Rana",
  "Reddy",
  "Saini",
  "Sethi",
  "Shah",
  "Sharma",
  "Shukla",
  "Singh",
  "Sinha",
  "Somayaji",
  "Tagore",
  "Talwar",
  "Tandon",
  "Trivedi",
  "Varrier",
  "Varma",
  "Varman",
  "Verma"
];

},{}],287:[function(require,module,exports){
module["exports"] = [
  "+91###-###-####",
  "+91##########",
  "+91-###-#######"
];

},{}],288:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":287,"dup":83}],289:[function(require,module,exports){
module["exports"] = [
  "United States",
  "United States of America",
  "USA"
];

},{}],290:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.default_country = require("./default_country");
address.postcode_by_state = require("./postcode_by_state");

},{"./default_country":289,"./postcode_by_state":291}],291:[function(require,module,exports){
module["exports"] = {
  "AL": "350##",
  "AK": "995##",
  "AS": "967##",
  "AZ": "850##",
  "AR": "717##",
  "CA": "900##",
  "CO": "800##",
  "CT": "061##",
  "DC": "204##",
  "DE": "198##",
  "FL": "322##",
  "GA": "301##",
  "HI": "967##",
  "ID": "832##",
  "IL": "600##",
  "IN": "463##",
  "IA": "510##",
  "KS": "666##",
  "KY": "404##",
  "LA": "701##",
  "ME": "042##",
  "MD": "210##",
  "MA": "026##",
  "MI": "480##",
  "MN": "555##",
  "MS": "387##",
  "MO": "650##",
  "MT": "590##",
  "NE": "688##",
  "NV": "898##",
  "NH": "036##",
  "NJ": "076##",
  "NM": "880##",
  "NY": "122##",
  "NC": "288##",
  "ND": "586##",
  "OH": "444##",
  "OK": "730##",
  "OR": "979##",
  "PA": "186##",
  "RI": "029##",
  "SC": "299##",
  "SD": "577##",
  "TN": "383##",
  "TX": "798##",
  "UT": "847##",
  "VT": "050##",
  "VA": "222##",
  "WA": "990##",
  "WV": "247##",
  "WI": "549##",
  "WY": "831##"
};

},{}],292:[function(require,module,exports){
var en_US = {};
module['exports'] = en_US;
en_US.title = "United States (English)";
en_US.internet = require("./internet");
en_US.address = require("./address");
en_US.phone_number = require("./phone_number");

},{"./address":290,"./internet":294,"./phone_number":297}],293:[function(require,module,exports){
module["exports"] = [
  "com",
  "us",
  "biz",
  "info",
  "name",
  "net",
  "org"
];

},{}],294:[function(require,module,exports){
arguments[4][124][0].apply(exports,arguments)
},{"./domain_suffix":293,"dup":124}],295:[function(require,module,exports){
module["exports"] = [
  "201",
  "202",
  "203",
  "205",
  "206",
  "207",
  "208",
  "209",
  "210",
  "212",
  "213",
  "214",
  "215",
  "216",
  "217",
  "218",
  "219",
  "224",
  "225",
  "227",
  "228",
  "229",
  "231",
  "234",
  "239",
  "240",
  "248",
  "251",
  "252",
  "253",
  "254",
  "256",
  "260",
  "262",
  "267",
  "269",
  "270",
  "276",
  "281",
  "283",
  "301",
  "302",
  "303",
  "304",
  "305",
  "307",
  "308",
  "309",
  "310",
  "312",
  "313",
  "314",
  "315",
  "316",
  "317",
  "318",
  "319",
  "320",
  "321",
  "323",
  "330",
  "331",
  "334",
  "336",
  "337",
  "339",
  "347",
  "351",
  "352",
  "360",
  "361",
  "386",
  "401",
  "402",
  "404",
  "405",
  "406",
  "407",
  "408",
  "409",
  "410",
  "412",
  "413",
  "414",
  "415",
  "417",
  "419",
  "423",
  "424",
  "425",
  "434",
  "435",
  "440",
  "443",
  "445",
  "464",
  "469",
  "470",
  "475",
  "478",
  "479",
  "480",
  "484",
  "501",
  "502",
  "503",
  "504",
  "505",
  "507",
  "508",
  "509",
  "510",
  "512",
  "513",
  "515",
  "516",
  "517",
  "518",
  "520",
  "530",
  "540",
  "541",
  "551",
  "557",
  "559",
  "561",
  "562",
  "563",
  "564",
  "567",
  "570",
  "571",
  "573",
  "574",
  "580",
  "585",
  "586",
  "601",
  "602",
  "603",
  "605",
  "606",
  "607",
  "608",
  "609",
  "610",
  "612",
  "614",
  "615",
  "616",
  "617",
  "618",
  "619",
  "620",
  "623",
  "626",
  "630",
  "631",
  "636",
  "641",
  "646",
  "650",
  "651",
  "660",
  "661",
  "662",
  "667",
  "678",
  "682",
  "701",
  "702",
  "703",
  "704",
  "706",
  "707",
  "708",
  "712",
  "713",
  "714",
  "715",
  "716",
  "717",
  "718",
  "719",
  "720",
  "724",
  "727",
  "731",
  "732",
  "734",
  "737",
  "740",
  "754",
  "757",
  "760",
  "763",
  "765",
  "770",
  "772",
  "773",
  "774",
  "775",
  "781",
  "785",
  "786",
  "801",
  "802",
  "803",
  "804",
  "805",
  "806",
  "808",
  "810",
  "812",
  "813",
  "814",
  "815",
  "816",
  "817",
  "818",
  "828",
  "830",
  "831",
  "832",
  "835",
  "843",
  "845",
  "847",
  "848",
  "850",
  "856",
  "857",
  "858",
  "859",
  "860",
  "862",
  "863",
  "864",
  "865",
  "870",
  "872",
  "878",
  "901",
  "903",
  "904",
  "906",
  "907",
  "908",
  "909",
  "910",
  "912",
  "913",
  "914",
  "915",
  "916",
  "917",
  "918",
  "919",
  "920",
  "925",
  "928",
  "931",
  "936",
  "937",
  "940",
  "941",
  "947",
  "949",
  "952",
  "954",
  "956",
  "959",
  "970",
  "971",
  "972",
  "973",
  "975",
  "978",
  "979",
  "980",
  "984",
  "985",
  "989"
];

},{}],296:[function(require,module,exports){
arguments[4][295][0].apply(exports,arguments)
},{"dup":295}],297:[function(require,module,exports){
var phone_number = {};
module['exports'] = phone_number;
phone_number.area_code = require("./area_code");
phone_number.exchange_code = require("./exchange_code");

},{"./area_code":295,"./exchange_code":296}],298:[function(require,module,exports){
arguments[4][220][0].apply(exports,arguments)
},{"dup":220}],299:[function(require,module,exports){
module["exports"] = [
  "#{city_prefix}"
];

},{}],300:[function(require,module,exports){
module["exports"] = [
  "Bondi",
  "Burleigh Heads",
  "Carlton",
  "Fitzroy",
  "Fremantle",
  "Glenelg",
  "Manly",
  "Noosa",
  "Stones Corner",
  "St Kilda",
  "Surry Hills",
  "Yarra Valley"
];

},{}],301:[function(require,module,exports){
arguments[4][221][0].apply(exports,arguments)
},{"dup":221}],302:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.street_root = require("./street_root");
address.street_name = require("./street_name");
address.city_prefix = require("./city_prefix");
address.city = require("./city");
address.state_abbr = require("./state_abbr");
address.region = require("./region");
address.state = require("./state");
address.postcode = require("./postcode");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.default_country = require("./default_country");

},{"./building_number":298,"./city":299,"./city_prefix":300,"./default_country":301,"./postcode":303,"./region":304,"./state":305,"./state_abbr":306,"./street_name":307,"./street_root":308,"./street_suffix":309}],303:[function(require,module,exports){
arguments[4][223][0].apply(exports,arguments)
},{"dup":223}],304:[function(require,module,exports){
module["exports"] = [
  "South East Queensland",
  "Wide Bay Burnett",
  "Margaret River",
  "Port Pirie",
  "Gippsland",
  "Elizabeth",
  "Barossa"
];

},{}],305:[function(require,module,exports){
arguments[4][224][0].apply(exports,arguments)
},{"dup":224}],306:[function(require,module,exports){
arguments[4][225][0].apply(exports,arguments)
},{"dup":225}],307:[function(require,module,exports){
arguments[4][62][0].apply(exports,arguments)
},{"dup":62}],308:[function(require,module,exports){
module["exports"] = [
  "Ramsay Street",
  "Bonnie Doon",
  "Cavill Avenue",
  "Queen Street"
];

},{}],309:[function(require,module,exports){
arguments[4][226][0].apply(exports,arguments)
},{"dup":226}],310:[function(require,module,exports){
arguments[4][227][0].apply(exports,arguments)
},{"./suffix":311,"dup":227}],311:[function(require,module,exports){
arguments[4][228][0].apply(exports,arguments)
},{"dup":228}],312:[function(require,module,exports){
var en_au_ocker = {};
module['exports'] = en_au_ocker;
en_au_ocker.title = "Australia Ocker (English)";
en_au_ocker.name = require("./name");
en_au_ocker.company = require("./company");
en_au_ocker.internet = require("./internet");
en_au_ocker.address = require("./address");
en_au_ocker.phone_number = require("./phone_number");

},{"./address":302,"./company":310,"./internet":314,"./name":316,"./phone_number":320}],313:[function(require,module,exports){
arguments[4][230][0].apply(exports,arguments)
},{"dup":230}],314:[function(require,module,exports){
arguments[4][124][0].apply(exports,arguments)
},{"./domain_suffix":313,"dup":124}],315:[function(require,module,exports){
module["exports"] = [
  "Charlotte",
  "Ava",
  "Chloe",
  "Emily",
  "Olivia",
  "Zoe",
  "Lily",
  "Sophie",
  "Amelia",
  "Sofia",
  "Ella",
  "Isabella",
  "Ruby",
  "Sienna",
  "Mia+3",
  "Grace",
  "Emma",
  "Ivy",
  "Layla",
  "Abigail",
  "Isla",
  "Hannah",
  "Zara",
  "Lucy",
  "Evie",
  "Annabelle",
  "Madison",
  "Alice",
  "Georgia",
  "Maya",
  "Madeline",
  "Audrey",
  "Scarlett",
  "Isabelle",
  "Chelsea",
  "Mila",
  "Holly",
  "Indiana",
  "Poppy",
  "Harper",
  "Sarah",
  "Alyssa",
  "Jasmine",
  "Imogen",
  "Hayley",
  "Pheobe",
  "Eva",
  "Evelyn",
  "Mackenzie",
  "Ayla",
  "Oliver",
  "Jack",
  "Jackson",
  "William",
  "Ethan",
  "Charlie",
  "Lucas",
  "Cooper",
  "Lachlan",
  "Noah",
  "Liam",
  "Alexander",
  "Max",
  "Isaac",
  "Thomas",
  "Xavier",
  "Oscar",
  "Benjamin",
  "Aiden",
  "Mason",
  "Samuel",
  "James",
  "Levi",
  "Riley",
  "Harrison",
  "Ryan",
  "Henry",
  "Jacob",
  "Joshua",
  "Leo",
  "Zach",
  "Harry",
  "Hunter",
  "Flynn",
  "Archie",
  "Tyler",
  "Elijah",
  "Hayden",
  "Jayden",
  "Blake",
  "Archer",
  "Ashton",
  "Sebastian",
  "Zachery",
  "Lincoln",
  "Mitchell",
  "Luca",
  "Nathan",
  "Kai",
  "Connor",
  "Tom",
  "Nigel",
  "Matt",
  "Sean"
];

},{}],316:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.ocker_first_name = require("./ocker_first_name");

},{"./first_name":315,"./last_name":317,"./ocker_first_name":318}],317:[function(require,module,exports){
module["exports"] = [
  "Smith",
  "Jones",
  "Williams",
  "Brown",
  "Wilson",
  "Taylor",
  "Morton",
  "White",
  "Martin",
  "Anderson",
  "Thompson",
  "Nguyen",
  "Thomas",
  "Walker",
  "Harris",
  "Lee",
  "Ryan",
  "Robinson",
  "Kelly",
  "King",
  "Rausch",
  "Ridge",
  "Connolly",
  "LeQuesne"
];

},{}],318:[function(require,module,exports){
module["exports"] = [
  "Bazza",
  "Bluey",
  "Davo",
  "Johno",
  "Shano",
  "Shazza"
];

},{}],319:[function(require,module,exports){
arguments[4][235][0].apply(exports,arguments)
},{"dup":235}],320:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":319,"dup":83}],321:[function(require,module,exports){
module["exports"] = [
  " s/n.",
  ", #",
  ", ##",
  " #",
  " ##"
];

},{}],322:[function(require,module,exports){
arguments[4][299][0].apply(exports,arguments)
},{"dup":299}],323:[function(require,module,exports){
module["exports"] = [
  "Parla",
  "Telde",
  "Baracaldo",
  "San Fernando",
  "Torrevieja",
  "Lugo",
  "Santiago de Compostela",
  "Gerona",
  "Cáceres",
  "Lorca",
  "Coslada",
  "Talavera de la Reina",
  "El Puerto de Santa María",
  "Cornellá de Llobregat",
  "Avilés",
  "Palencia",
  "Gecho",
  "Orihuela",
  "Pontevedra",
  "Pozuelo de Alarcón",
  "Toledo",
  "El Ejido",
  "Guadalajara",
  "Gandía",
  "Ceuta",
  "Ferrol",
  "Chiclana de la Frontera",
  "Manresa",
  "Roquetas de Mar",
  "Ciudad Real",
  "Rubí",
  "Benidorm",
  "San Sebastían de los Reyes",
  "Ponferrada",
  "Zamora",
  "Alcalá de Guadaira",
  "Fuengirola",
  "Mijas",
  "Sanlúcar de Barrameda",
  "La Línea de la Concepción",
  "Majadahonda",
  "Sagunto",
  "El Prat de LLobregat",
  "Viladecans",
  "Linares",
  "Alcoy",
  "Irún",
  "Estepona",
  "Torremolinos",
  "Rivas-Vaciamadrid",
  "Molina de Segura",
  "Paterna",
  "Granollers",
  "Santa Lucía de Tirajana",
  "Motril",
  "Cerdañola del Vallés",
  "Arrecife",
  "Segovia",
  "Torrelavega",
  "Elda",
  "Mérida",
  "Ávila",
  "Valdemoro",
  "Cuenta",
  "Collado Villalba",
  "Benalmádena",
  "Mollet del Vallés",
  "Puertollano",
  "Madrid",
  "Barcelona",
  "Valencia",
  "Sevilla",
  "Zaragoza",
  "Málaga",
  "Murcia",
  "Palma de Mallorca",
  "Las Palmas de Gran Canaria",
  "Bilbao",
  "Córdoba",
  "Alicante",
  "Valladolid",
  "Vigo",
  "Gijón",
  "Hospitalet de LLobregat",
  "La Coruña",
  "Granada",
  "Vitoria",
  "Elche",
  "Santa Cruz de Tenerife",
  "Oviedo",
  "Badalona",
  "Cartagena",
  "Móstoles",
  "Jerez de la Frontera",
  "Tarrasa",
  "Sabadell",
  "Alcalá de Henares",
  "Pamplona",
  "Fuenlabrada",
  "Almería",
  "San Sebastián",
  "Leganés",
  "Santander",
  "Burgos",
  "Castellón de la Plana",
  "Alcorcón",
  "Albacete",
  "Getafe",
  "Salamanca",
  "Huelva",
  "Logroño",
  "Badajoz",
  "San Cristróbal de la Laguna",
  "León",
  "Tarragona",
  "Cádiz",
  "Lérida",
  "Marbella",
  "Mataró",
  "Dos Hermanas",
  "Santa Coloma de Gramanet",
  "Jaén",
  "Algeciras",
  "Torrejón de Ardoz",
  "Orense",
  "Alcobendas",
  "Reus",
  "Calahorra",
  "Inca"
];

},{}],324:[function(require,module,exports){
module["exports"] = [
  "Afganistán",
  "Albania",
  "Argelia",
  "Andorra",
  "Angola",
  "Argentina",
  "Armenia",
  "Aruba",
  "Australia",
  "Austria",
  "Azerbayán",
  "Bahamas",
  "Barein",
  "Bangladesh",
  "Barbados",
  "Bielorusia",
  "Bélgica",
  "Belice",
  "Bermuda",
  "Bután",
  "Bolivia",
  "Bosnia Herzegovina",
  "Botswana",
  "Brasil",
  "Bulgaria",
  "Burkina Faso",
  "Burundi",
  "Camboya",
  "Camerún",
  "Canada",
  "Cabo Verde",
  "Islas Caimán",
  "Chad",
  "Chile",
  "China",
  "Isla de Navidad",
  "Colombia",
  "Comodos",
  "Congo",
  "Costa Rica",
  "Costa de Marfil",
  "Croacia",
  "Cuba",
  "Chipre",
  "República Checa",
  "Dinamarca",
  "Dominica",
  "República Dominicana",
  "Ecuador",
  "Egipto",
  "El Salvador",
  "Guinea Ecuatorial",
  "Eritrea",
  "Estonia",
  "Etiopía",
  "Islas Faro",
  "Fiji",
  "Finlandia",
  "Francia",
  "Gabón",
  "Gambia",
  "Georgia",
  "Alemania",
  "Ghana",
  "Grecia",
  "Groenlandia",
  "Granada",
  "Guadalupe",
  "Guam",
  "Guatemala",
  "Guinea",
  "Guinea-Bisau",
  "Guayana",
  "Haiti",
  "Honduras",
  "Hong Kong",
  "Hungria",
  "Islandia",
  "India",
  "Indonesia",
  "Iran",
  "Irak",
  "Irlanda",
  "Italia",
  "Jamaica",
  "Japón",
  "Jordania",
  "Kazajistan",
  "Kenia",
  "Kiribati",
  "Corea",
  "Kuwait",
  "Letonia",
  "Líbano",
  "Liberia",
  "Liechtenstein",
  "Lituania",
  "Luxemburgo",
  "Macao",
  "Macedonia",
  "Madagascar",
  "Malawi",
  "Malasia",
  "Maldivas",
  "Mali",
  "Malta",
  "Martinica",
  "Mauritania",
  "Méjico",
  "Micronesia",
  "Moldavia",
  "Mónaco",
  "Mongolia",
  "Montenegro",
  "Montserrat",
  "Marruecos",
  "Mozambique",
  "Namibia",
  "Nauru",
  "Nepal",
  "Holanda",
  "Nueva Zelanda",
  "Nicaragua",
  "Niger",
  "Nigeria",
  "Noruega",
  "Omán",
  "Pakistan",
  "Panamá",
  "Papúa Nueva Guinea",
  "Paraguay",
  "Perú",
  "Filipinas",
  "Poland",
  "Portugal",
  "Puerto Rico",
  "Rusia",
  "Ruanda",
  "Samoa",
  "San Marino",
  "Santo Tomé y Principe",
  "Arabia Saudí",
  "Senegal",
  "Serbia",
  "Seychelles",
  "Sierra Leona",
  "Singapur",
  "Eslovaquia",
  "Eslovenia",
  "Somalia",
  "España",
  "Sri Lanka",
  "Sudán",
  "Suriname",
  "Suecia",
  "Suiza",
  "Siria",
  "Taiwan",
  "Tajikistan",
  "Tanzania",
  "Tailandia",
  "Timor-Leste",
  "Togo",
  "Tonga",
  "Trinidad y Tobago",
  "Tunez",
  "Turquia",
  "Uganda",
  "Ucrania",
  "Emiratos Árabes Unidos",
  "Reino Unido",
  "Estados Unidos de América",
  "Uruguay",
  "Uzbekistan",
  "Vanuatu",
  "Venezuela",
  "Vietnam",
  "Yemen",
  "Zambia",
  "Zimbabwe"
];

},{}],325:[function(require,module,exports){
module["exports"] = [
  "España"
];

},{}],326:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.province = require("./province");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.time_zone = require("./time_zone");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":321,"./city":322,"./city_prefix":323,"./country":324,"./default_country":325,"./postcode":327,"./province":328,"./secondary_address":329,"./state":330,"./state_abbr":331,"./street_address":332,"./street_name":333,"./street_suffix":334,"./time_zone":335}],327:[function(require,module,exports){
module["exports"] = [
  "#####"
];

},{}],328:[function(require,module,exports){
module["exports"] = [
  "Álava",
  "Albacete",
  "Alicante",
  "Almería",
  "Asturias",
  "Ávila",
  "Badajoz",
  "Barcelona",
  "Burgos",
  "Cantabria",
  "Castellón",
  "Ciudad Real",
  "Cuenca",
  "Cáceres",
  "Cádiz",
  "Córdoba",
  "Gerona",
  "Granada",
  "Guadalajara",
  "Guipúzcoa",
  "Huelva",
  "Huesca",
  "Islas Baleares",
  "Jaén",
  "La Coruña",
  "La Rioja",
  "Las Palmas",
  "León",
  "Lugo",
  "lérida",
  "Madrid",
  "Murcia",
  "Málaga",
  "Navarra",
  "Orense",
  "Palencia",
  "Pontevedra",
  "Salamanca",
  "Santa Cruz de Tenerife",
  "Segovia",
  "Sevilla",
  "Soria",
  "Tarragona",
  "Teruel",
  "Toledo",
  "Valencia",
  "Valladolid",
  "Vizcaya",
  "Zamora",
  "Zaragoza"
];

},{}],329:[function(require,module,exports){
module["exports"] = [
  "Esc. ###",
  "Puerta ###"
];

},{}],330:[function(require,module,exports){
module["exports"] = [
  "Andalucía",
  "Aragón",
  "Principado de Asturias",
  "Baleares",
  "Canarias",
  "Cantabria",
  "Castilla-La Mancha",
  "Castilla y León",
  "Cataluña",
  "Comunidad Valenciana",
  "Extremadura",
  "Galicia",
  "La Rioja",
  "Comunidad de Madrid",
  "Navarra",
  "País Vasco",
  "Región de Murcia"
];

},{}],331:[function(require,module,exports){
module["exports"] = [
  "And",
  "Ara",
  "Ast",
  "Bal",
  "Can",
  "Cbr",
  "Man",
  "Leo",
  "Cat",
  "Com",
  "Ext",
  "Gal",
  "Rio",
  "Mad",
  "Nav",
  "Vas",
  "Mur"
];

},{}],332:[function(require,module,exports){
module["exports"] = [
  "#{street_name}#{building_number}",
  "#{street_name}#{building_number} #{secondary_address}"
];

},{}],333:[function(require,module,exports){
module["exports"] = [
  "#{street_suffix} #{Name.first_name}",
  "#{street_suffix} #{Name.first_name} #{Name.last_name}"
];

},{}],334:[function(require,module,exports){
module["exports"] = [
  "Aldea",
  "Apartamento",
  "Arrabal",
  "Arroyo",
  "Avenida",
  "Bajada",
  "Barranco",
  "Barrio",
  "Bloque",
  "Calle",
  "Calleja",
  "Camino",
  "Carretera",
  "Caserio",
  "Colegio",
  "Colonia",
  "Conjunto",
  "Cuesta",
  "Chalet",
  "Edificio",
  "Entrada",
  "Escalinata",
  "Explanada",
  "Extramuros",
  "Extrarradio",
  "Ferrocarril",
  "Glorieta",
  "Gran Subida",
  "Grupo",
  "Huerta",
  "Jardines",
  "Lado",
  "Lugar",
  "Manzana",
  "Masía",
  "Mercado",
  "Monte",
  "Muelle",
  "Municipio",
  "Parcela",
  "Parque",
  "Partida",
  "Pasaje",
  "Paseo",
  "Plaza",
  "Poblado",
  "Polígono",
  "Prolongación",
  "Puente",
  "Puerta",
  "Quinta",
  "Ramal",
  "Rambla",
  "Rampa",
  "Riera",
  "Rincón",
  "Ronda",
  "Rua",
  "Salida",
  "Sector",
  "Sección",
  "Senda",
  "Solar",
  "Subida",
  "Terrenos",
  "Torrente",
  "Travesía",
  "Urbanización",
  "Vía",
  "Vía Pública"
];

},{}],335:[function(require,module,exports){
module["exports"] = [
  "Pacífico/Midway",
  "Pacífico/Pago_Pago",
  "Pacífico/Honolulu",
  "America/Juneau",
  "America/Los_Angeles",
  "America/Tijuana",
  "America/Denver",
  "America/Phoenix",
  "America/Chihuahua",
  "America/Mazatlan",
  "America/Chicago",
  "America/Regina",
  "America/Mexico_City",
  "America/Mexico_City",
  "America/Monterrey",
  "America/Guatemala",
  "America/New_York",
  "America/Indiana/Indianapolis",
  "America/Bogota",
  "America/Lima",
  "America/Lima",
  "America/Halifax",
  "America/Caracas",
  "America/La_Paz",
  "America/Santiago",
  "America/St_Johns",
  "America/Sao_Paulo",
  "America/Argentina/Buenos_Aires",
  "America/Guyana",
  "America/Godthab",
  "Atlantic/South_Georgia",
  "Atlantic/Azores",
  "Atlantic/Cape_Verde",
  "Europa/Dublin",
  "Europa/London",
  "Europa/Lisbon",
  "Europa/London",
  "Africa/Casablanca",
  "Africa/Monrovia",
  "Etc/UTC",
  "Europa/Belgrade",
  "Europa/Bratislava",
  "Europa/Budapest",
  "Europa/Ljubljana",
  "Europa/Prague",
  "Europa/Sarajevo",
  "Europa/Skopje",
  "Europa/Warsaw",
  "Europa/Zagreb",
  "Europa/Brussels",
  "Europa/Copenhagen",
  "Europa/Madrid",
  "Europa/Paris",
  "Europa/Amsterdam",
  "Europa/Berlin",
  "Europa/Berlin",
  "Europa/Rome",
  "Europa/Stockholm",
  "Europa/Vienna",
  "Africa/Algiers",
  "Europa/Bucharest",
  "Africa/Cairo",
  "Europa/Helsinki",
  "Europa/Kiev",
  "Europa/Riga",
  "Europa/Sofia",
  "Europa/Tallinn",
  "Europa/Vilnius",
  "Europa/Athens",
  "Europa/Istanbul",
  "Europa/Minsk",
  "Asia/Jerusalen",
  "Africa/Harare",
  "Africa/Johannesburg",
  "Europa/Moscú",
  "Europa/Moscú",
  "Europa/Moscú",
  "Asia/Kuwait",
  "Asia/Riyadh",
  "Africa/Nairobi",
  "Asia/Baghdad",
  "Asia/Tehran",
  "Asia/Muscat",
  "Asia/Muscat",
  "Asia/Baku",
  "Asia/Tbilisi",
  "Asia/Yerevan",
  "Asia/Kabul",
  "Asia/Yekaterinburg",
  "Asia/Karachi",
  "Asia/Karachi",
  "Asia/Tashkent",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kathmandu",
  "Asia/Dhaka",
  "Asia/Dhaka",
  "Asia/Colombo",
  "Asia/Almaty",
  "Asia/Novosibirsk",
  "Asia/Rangoon",
  "Asia/Bangkok",
  "Asia/Bangkok",
  "Asia/Jakarta",
  "Asia/Krasnoyarsk",
  "Asia/Shanghai",
  "Asia/Chongqing",
  "Asia/Hong_Kong",
  "Asia/Urumqi",
  "Asia/Kuala_Lumpur",
  "Asia/Singapore",
  "Asia/Taipei",
  "Australia/Perth",
  "Asia/Irkutsk",
  "Asia/Ulaanbaatar",
  "Asia/Seoul",
  "Asia/Tokyo",
  "Asia/Tokyo",
  "Asia/Tokyo",
  "Asia/Yakutsk",
  "Australia/Darwin",
  "Australia/Adelaide",
  "Australia/Melbourne",
  "Australia/Melbourne",
  "Australia/Sydney",
  "Australia/Brisbane",
  "Australia/Hobart",
  "Asia/Vladivostok",
  "Pacífico/Guam",
  "Pacífico/Port_Moresby",
  "Asia/Magadan",
  "Asia/Magadan",
  "Pacífico/Noumea",
  "Pacífico/Fiji",
  "Asia/Kamchatka",
  "Pacífico/Majuro",
  "Pacífico/Auckland",
  "Pacífico/Auckland",
  "Pacífico/Tongatapu",
  "Pacífico/Fakaofo",
  "Pacífico/Apia"
];

},{}],336:[function(require,module,exports){
module["exports"] = [
  "6##-###-###",
  "6##.###.###",
  "6## ### ###",
  "6########"
];

},{}],337:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"./formats":336,"dup":65}],338:[function(require,module,exports){
module["exports"] = [
  "Adaptativo",
  "Avanzado",
  "Asimilado",
  "Automatizado",
  "Equilibrado",
  "Centrado en el negocio",
  "Centralizado",
  "Clonado",
  "Compatible",
  "Configurable",
  "Multi grupo",
  "Multi plataforma",
  "Centrado en el usuario",
  "Configurable",
  "Descentralizado",
  "Digitalizado",
  "Distribuido",
  "Diverso",
  "Reducido",
  "Mejorado",
  "Para toda la empresa",
  "Ergonomico",
  "Exclusivo",
  "Expandido",
  "Extendido",
  "Cara a cara",
  "Enfocado",
  "Totalmente configurable",
  "Fundamental",
  "Orígenes",
  "Horizontal",
  "Implementado",
  "Innovador",
  "Integrado",
  "Intuitivo",
  "Inverso",
  "Gestionado",
  "Obligatorio",
  "Monitorizado",
  "Multi canal",
  "Multi lateral",
  "Multi capa",
  "En red",
  "Orientado a objetos",
  "Open-source",
  "Operativo",
  "Optimizado",
  "Opcional",
  "Organico",
  "Organizado",
  "Perseverando",
  "Persistente",
  "en fases",
  "Polarizado",
  "Pre-emptivo",
  "Proactivo",
  "Enfocado a benficios",
  "Profundo",
  "Programable",
  "Progresivo",
  "Public-key",
  "Enfocado en la calidad",
  "Reactivo",
  "Realineado",
  "Re-contextualizado",
  "Re-implementado",
  "Reducido",
  "Ingenieria inversa",
  "Robusto",
  "Fácil",
  "Seguro",
  "Auto proporciona",
  "Compartible",
  "Intercambiable",
  "Sincronizado",
  "Orientado a equipos",
  "Total",
  "Universal",
  "Mejorado",
  "Actualizable",
  "Centrado en el usuario",
  "Amigable",
  "Versatil",
  "Virtual",
  "Visionario"
];

},{}],339:[function(require,module,exports){
module["exports"] = [
  "24 horas",
  "24/7",
  "3rd generación",
  "4th generación",
  "5th generación",
  "6th generación",
  "analizada",
  "asimétrica",
  "asíncrona",
  "monitorizada por red",
  "bidireccional",
  "bifurcada",
  "generada por el cliente",
  "cliente servidor",
  "coherente",
  "cohesiva",
  "compuesto",
  "sensible al contexto",
  "basado en el contexto",
  "basado en contenido",
  "dedicada",
  "generado por la demanda",
  "didactica",
  "direccional",
  "discreta",
  "dinámica",
  "potenciada",
  "acompasada",
  "ejecutiva",
  "explícita",
  "tolerante a fallos",
  "innovadora",
  "amplio ábanico",
  "global",
  "heurística",
  "alto nivel",
  "holística",
  "homogénea",
  "hibrida",
  "incremental",
  "intangible",
  "interactiva",
  "intermedia",
  "local",
  "logística",
  "maximizada",
  "metódica",
  "misión crítica",
  "móbil",
  "modular",
  "motivadora",
  "multimedia",
  "multiestado",
  "multitarea",
  "nacional",
  "basado en necesidades",
  "neutral",
  "nueva generación",
  "no-volátil",
  "orientado a objetos",
  "óptima",
  "optimizada",
  "radical",
  "tiempo real",
  "recíproca",
  "regional",
  "escalable",
  "secundaria",
  "orientada a soluciones",
  "estable",
  "estatica",
  "sistemática",
  "sistémica",
  "tangible",
  "terciaria",
  "transicional",
  "uniforme",
  "valor añadido",
  "vía web",
  "defectos cero",
  "tolerancia cero"
];

},{}],340:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.noun = require("./noun");
company.descriptor = require("./descriptor");
company.adjective = require("./adjective");
company.name = require("./name");

},{"./adjective":338,"./descriptor":339,"./name":341,"./noun":342,"./suffix":343}],341:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name} y #{Name.last_name}",
  "#{Name.last_name} #{Name.last_name} #{suffix}",
  "#{Name.last_name}, #{Name.last_name} y #{Name.last_name} Asociados"
];

},{}],342:[function(require,module,exports){
module["exports"] = [
  "habilidad",
  "acceso",
  "adaptador",
  "algoritmo",
  "alianza",
  "analista",
  "aplicación",
  "enfoque",
  "arquitectura",
  "archivo",
  "inteligencia artificial",
  "array",
  "actitud",
  "medición",
  "gestión presupuestaria",
  "capacidad",
  "desafío",
  "circuito",
  "colaboración",
  "complejidad",
  "concepto",
  "conglomeración",
  "contingencia",
  "núcleo",
  "fidelidad",
  "base de datos",
  "data-warehouse",
  "definición",
  "emulación",
  "codificar",
  "encriptar",
  "extranet",
  "firmware",
  "flexibilidad",
  "focus group",
  "previsión",
  "base de trabajo",
  "función",
  "funcionalidad",
  "Interfaz Gráfica",
  "groupware",
  "Interfaz gráfico de usuario",
  "hardware",
  "Soporte",
  "jerarquía",
  "conjunto",
  "implementación",
  "infraestructura",
  "iniciativa",
  "instalación",
  "conjunto de instrucciones",
  "interfaz",
  "intranet",
  "base del conocimiento",
  "red de area local",
  "aprovechar",
  "matrices",
  "metodologías",
  "middleware",
  "migración",
  "modelo",
  "moderador",
  "monitorizar",
  "arquitectura abierta",
  "sistema abierto",
  "orquestar",
  "paradigma",
  "paralelismo",
  "política",
  "portal",
  "estructura de precios",
  "proceso de mejora",
  "producto",
  "productividad",
  "proyecto",
  "proyección",
  "protocolo",
  "línea segura",
  "software",
  "solución",
  "estandardización",
  "estrategia",
  "estructura",
  "éxito",
  "superestructura",
  "soporte",
  "sinergia",
  "mediante",
  "marco de tiempo",
  "caja de herramientas",
  "utilización",
  "website",
  "fuerza de trabajo"
];

},{}],343:[function(require,module,exports){
module["exports"] = [
  "S.L.",
  "e Hijos",
  "S.A.",
  "Hermanos"
];

},{}],344:[function(require,module,exports){
var es = {};
module['exports'] = es;
es.title = "Spanish";
es.address = require("./address");
es.company = require("./company");
es.internet = require("./internet");
es.name = require("./name");
es.phone_number = require("./phone_number");
es.cell_phone = require("./cell_phone");

},{"./address":326,"./cell_phone":337,"./company":340,"./internet":347,"./name":349,"./phone_number":356}],345:[function(require,module,exports){
module["exports"] = [
  "com",
  "es",
  "info",
  "com.es",
  "org"
];

},{}],346:[function(require,module,exports){
arguments[4][72][0].apply(exports,arguments)
},{"dup":72}],347:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./domain_suffix":345,"./free_email":346,"dup":73}],348:[function(require,module,exports){
module["exports"] = [
  "Adán",
  "Agustín",
  "Alberto",
  "Alejandro",
  "Alfonso",
  "Alfredo",
  "Andrés",
  "Antonio",
  "Armando",
  "Arturo",
  "Benito",
  "Benjamín",
  "Bernardo",
  "Carlos",
  "César",
  "Claudio",
  "Clemente",
  "Cristian",
  "Cristobal",
  "Daniel",
  "David",
  "Diego",
  "Eduardo",
  "Emilio",
  "Enrique",
  "Ernesto",
  "Esteban",
  "Federico",
  "Felipe",
  "Fernando",
  "Francisco",
  "Gabriel",
  "Gerardo",
  "Germán",
  "Gilberto",
  "Gonzalo",
  "Gregorio",
  "Guillermo",
  "Gustavo",
  "Hernán",
  "Homero",
  "Horacio",
  "Hugo",
  "Ignacio",
  "Jacobo",
  "Jaime",
  "Javier",
  "Jerónimo",
  "Jesús",
  "Joaquín",
  "Jorge",
  "Jorge Luis",
  "José",
  "José Eduardo",
  "José Emilio",
  "José Luis",
  "José María",
  "Juan",
  "Juan Carlos",
  "Julio",
  "Julio César",
  "Lorenzo",
  "Lucas",
  "Luis",
  "Luis Miguel",
  "Manuel",
  "Marco Antonio",
  "Marcos",
  "Mariano",
  "Mario",
  "Martín",
  "Mateo",
  "Miguel",
  "Miguel Ángel",
  "Nicolás",
  "Octavio",
  "Óscar",
  "Pablo",
  "Patricio",
  "Pedro",
  "Rafael",
  "Ramiro",
  "Ramón",
  "Raúl",
  "Ricardo",
  "Roberto",
  "Rodrigo",
  "Rubén",
  "Salvador",
  "Samuel",
  "Sancho",
  "Santiago",
  "Sergio",
  "Teodoro",
  "Timoteo",
  "Tomás",
  "Vicente",
  "Víctor",
  "Adela",
  "Adriana",
  "Alejandra",
  "Alicia",
  "Amalia",
  "Ana",
  "Ana Luisa",
  "Ana María",
  "Andrea",
  "Anita",
  "Ángela",
  "Antonia",
  "Ariadna",
  "Barbara",
  "Beatriz",
  "Berta",
  "Blanca",
  "Caridad",
  "Carla",
  "Carlota",
  "Carmen",
  "Carolina",
  "Catalina",
  "Cecilia",
  "Clara",
  "Claudia",
  "Concepción",
  "Conchita",
  "Cristina",
  "Daniela",
  "Débora",
  "Diana",
  "Dolores",
  "Lola",
  "Dorotea",
  "Elena",
  "Elisa",
  "Eloisa",
  "Elsa",
  "Elvira",
  "Emilia",
  "Esperanza",
  "Estela",
  "Ester",
  "Eva",
  "Florencia",
  "Francisca",
  "Gabriela",
  "Gloria",
  "Graciela",
  "Guadalupe",
  "Guillermina",
  "Inés",
  "Irene",
  "Isabel",
  "Isabela",
  "Josefina",
  "Juana",
  "Julia",
  "Laura",
  "Leonor",
  "Leticia",
  "Lilia",
  "Lorena",
  "Lourdes",
  "Lucia",
  "Luisa",
  "Luz",
  "Magdalena",
  "Manuela",
  "Marcela",
  "Margarita",
  "María",
  "María del Carmen",
  "María Cristina",
  "María Elena",
  "María Eugenia",
  "María José",
  "María Luisa",
  "María Soledad",
  "María Teresa",
  "Mariana",
  "Maricarmen",
  "Marilu",
  "Marisol",
  "Marta",
  "Mayte",
  "Mercedes",
  "Micaela",
  "Mónica",
  "Natalia",
  "Norma",
  "Olivia",
  "Patricia",
  "Pilar",
  "Ramona",
  "Raquel",
  "Rebeca",
  "Reina",
  "Rocio",
  "Rosa",
  "Rosalia",
  "Rosario",
  "Sara",
  "Silvia",
  "Sofia",
  "Soledad",
  "Sonia",
  "Susana",
  "Teresa",
  "Verónica",
  "Victoria",
  "Virginia",
  "Yolanda"
];

},{}],349:[function(require,module,exports){
arguments[4][207][0].apply(exports,arguments)
},{"./first_name":348,"./last_name":350,"./name":351,"./prefix":352,"./suffix":353,"./title":354,"dup":207}],350:[function(require,module,exports){
module["exports"] = [
  "Abeyta",
  "Abrego",
  "Abreu",
  "Acevedo",
  "Acosta",
  "Acuña",
  "Adame",
  "Adorno",
  "Agosto",
  "Aguayo",
  "Águilar",
  "Aguilera",
  "Aguirre",
  "Alanis",
  "Alaniz",
  "Alarcón",
  "Alba",
  "Alcala",
  "Alcántar",
  "Alcaraz",
  "Alejandro",
  "Alemán",
  "Alfaro",
  "Alicea",
  "Almanza",
  "Almaraz",
  "Almonte",
  "Alonso",
  "Alonzo",
  "Altamirano",
  "Alva",
  "Alvarado",
  "Alvarez",
  "Amador",
  "Amaya",
  "Anaya",
  "Anguiano",
  "Angulo",
  "Aparicio",
  "Apodaca",
  "Aponte",
  "Aragón",
  "Araña",
  "Aranda",
  "Arce",
  "Archuleta",
  "Arellano",
  "Arenas",
  "Arevalo",
  "Arguello",
  "Arias",
  "Armas",
  "Armendáriz",
  "Armenta",
  "Armijo",
  "Arredondo",
  "Arreola",
  "Arriaga",
  "Arroyo",
  "Arteaga",
  "Atencio",
  "Ávalos",
  "Ávila",
  "Avilés",
  "Ayala",
  "Baca",
  "Badillo",
  "Báez",
  "Baeza",
  "Bahena",
  "Balderas",
  "Ballesteros",
  "Banda",
  "Bañuelos",
  "Barajas",
  "Barela",
  "Barragán",
  "Barraza",
  "Barrera",
  "Barreto",
  "Barrientos",
  "Barrios",
  "Batista",
  "Becerra",
  "Beltrán",
  "Benavides",
  "Benavídez",
  "Benítez",
  "Bermúdez",
  "Bernal",
  "Berríos",
  "Bétancourt",
  "Blanco",
  "Bonilla",
  "Borrego",
  "Botello",
  "Bravo",
  "Briones",
  "Briseño",
  "Brito",
  "Bueno",
  "Burgos",
  "Bustamante",
  "Bustos",
  "Caballero",
  "Cabán",
  "Cabrera",
  "Cadena",
  "Caldera",
  "Calderón",
  "Calvillo",
  "Camacho",
  "Camarillo",
  "Campos",
  "Canales",
  "Candelaria",
  "Cano",
  "Cantú",
  "Caraballo",
  "Carbajal",
  "Cardenas",
  "Cardona",
  "Carmona",
  "Carranza",
  "Carrasco",
  "Carrasquillo",
  "Carreón",
  "Carrera",
  "Carrero",
  "Carrillo",
  "Carrion",
  "Carvajal",
  "Casanova",
  "Casares",
  "Casárez",
  "Casas",
  "Casillas",
  "Castañeda",
  "Castellanos",
  "Castillo",
  "Castro",
  "Cavazos",
  "Cazares",
  "Ceballos",
  "Cedillo",
  "Ceja",
  "Centeno",
  "Cepeda",
  "Cerda",
  "Cervantes",
  "Cervántez",
  "Chacón",
  "Chapa",
  "Chavarría",
  "Chávez",
  "Cintrón",
  "Cisneros",
  "Collado",
  "Collazo",
  "Colón",
  "Colunga",
  "Concepción",
  "Contreras",
  "Cordero",
  "Córdova",
  "Cornejo",
  "Corona",
  "Coronado",
  "Corral",
  "Corrales",
  "Correa",
  "Cortés",
  "Cortez",
  "Cotto",
  "Covarrubias",
  "Crespo",
  "Cruz",
  "Cuellar",
  "Curiel",
  "Dávila",
  "de Anda",
  "de Jesús",
  "Delacrúz",
  "Delafuente",
  "Delagarza",
  "Delao",
  "Delapaz",
  "Delarosa",
  "Delatorre",
  "Deleón",
  "Delgadillo",
  "Delgado",
  "Delrío",
  "Delvalle",
  "Díaz",
  "Domínguez",
  "Domínquez",
  "Duarte",
  "Dueñas",
  "Duran",
  "Echevarría",
  "Elizondo",
  "Enríquez",
  "Escalante",
  "Escamilla",
  "Escobar",
  "Escobedo",
  "Esparza",
  "Espinal",
  "Espino",
  "Espinosa",
  "Espinoza",
  "Esquibel",
  "Esquivel",
  "Estévez",
  "Estrada",
  "Fajardo",
  "Farías",
  "Feliciano",
  "Fernández",
  "Ferrer",
  "Fierro",
  "Figueroa",
  "Flores",
  "Flórez",
  "Fonseca",
  "Franco",
  "Frías",
  "Fuentes",
  "Gaitán",
  "Galarza",
  "Galindo",
  "Gallardo",
  "Gallegos",
  "Galván",
  "Gálvez",
  "Gamboa",
  "Gamez",
  "Gaona",
  "Garay",
  "García",
  "Garibay",
  "Garica",
  "Garrido",
  "Garza",
  "Gastélum",
  "Gaytán",
  "Gil",
  "Girón",
  "Godínez",
  "Godoy",
  "Gómez",
  "Gonzales",
  "González",
  "Gollum",
  "Gracia",
  "Granado",
  "Granados",
  "Griego",
  "Grijalva",
  "Guajardo",
  "Guardado",
  "Guerra",
  "Guerrero",
  "Guevara",
  "Guillen",
  "Gurule",
  "Gutiérrez",
  "Guzmán",
  "Haro",
  "Henríquez",
  "Heredia",
  "Hernádez",
  "Hernandes",
  "Hernández",
  "Herrera",
  "Hidalgo",
  "Hinojosa",
  "Holguín",
  "Huerta",
  "Hurtado",
  "Ibarra",
  "Iglesias",
  "Irizarry",
  "Jaime",
  "Jaimes",
  "Jáquez",
  "Jaramillo",
  "Jasso",
  "Jiménez",
  "Jimínez",
  "Juárez",
  "Jurado",
  "Laboy",
  "Lara",
  "Laureano",
  "Leal",
  "Lebrón",
  "Ledesma",
  "Leiva",
  "Lemus",
  "León",
  "Lerma",
  "Leyva",
  "Limón",
  "Linares",
  "Lira",
  "Llamas",
  "Loera",
  "Lomeli",
  "Longoria",
  "López",
  "Lovato",
  "Loya",
  "Lozada",
  "Lozano",
  "Lucero",
  "Lucio",
  "Luevano",
  "Lugo",
  "Luna",
  "Macías",
  "Madera",
  "Madrid",
  "Madrigal",
  "Maestas",
  "Magaña",
  "Malave",
  "Maldonado",
  "Manzanares",
  "Mares",
  "Marín",
  "Márquez",
  "Marrero",
  "Marroquín",
  "Martínez",
  "Mascareñas",
  "Mata",
  "Mateo",
  "Matías",
  "Matos",
  "Maya",
  "Mayorga",
  "Medina",
  "Medrano",
  "Mejía",
  "Meléndez",
  "Melgar",
  "Mena",
  "Menchaca",
  "Méndez",
  "Mendoza",
  "Menéndez",
  "Meraz",
  "Mercado",
  "Merino",
  "Mesa",
  "Meza",
  "Miramontes",
  "Miranda",
  "Mireles",
  "Mojica",
  "Molina",
  "Mondragón",
  "Monroy",
  "Montalvo",
  "Montañez",
  "Montaño",
  "Montemayor",
  "Montenegro",
  "Montero",
  "Montes",
  "Montez",
  "Montoya",
  "Mora",
  "Morales",
  "Moreno",
  "Mota",
  "Moya",
  "Munguía",
  "Muñiz",
  "Muñoz",
  "Murillo",
  "Muro",
  "Nájera",
  "Naranjo",
  "Narváez",
  "Nava",
  "Navarrete",
  "Navarro",
  "Nazario",
  "Negrete",
  "Negrón",
  "Nevárez",
  "Nieto",
  "Nieves",
  "Niño",
  "Noriega",
  "Núñez",
  "Ocampo",
  "Ocasio",
  "Ochoa",
  "Ojeda",
  "Olivares",
  "Olivárez",
  "Olivas",
  "Olivera",
  "Olivo",
  "Olmos",
  "Olvera",
  "Ontiveros",
  "Oquendo",
  "Ordóñez",
  "Orellana",
  "Ornelas",
  "Orosco",
  "Orozco",
  "Orta",
  "Ortega",
  "Ortiz",
  "Osorio",
  "Otero",
  "Ozuna",
  "Pabón",
  "Pacheco",
  "Padilla",
  "Padrón",
  "Páez",
  "Pagan",
  "Palacios",
  "Palomino",
  "Palomo",
  "Pantoja",
  "Paredes",
  "Parra",
  "Partida",
  "Patiño",
  "Paz",
  "Pedraza",
  "Pedroza",
  "Pelayo",
  "Peña",
  "Perales",
  "Peralta",
  "Perea",
  "Peres",
  "Pérez",
  "Pichardo",
  "Piña",
  "Pineda",
  "Pizarro",
  "Polanco",
  "Ponce",
  "Porras",
  "Portillo",
  "Posada",
  "Prado",
  "Preciado",
  "Prieto",
  "Puente",
  "Puga",
  "Pulido",
  "Quesada",
  "Quezada",
  "Quiñones",
  "Quiñónez",
  "Quintana",
  "Quintanilla",
  "Quintero",
  "Quiroz",
  "Rael",
  "Ramírez",
  "Ramón",
  "Ramos",
  "Rangel",
  "Rascón",
  "Raya",
  "Razo",
  "Regalado",
  "Rendón",
  "Rentería",
  "Reséndez",
  "Reyes",
  "Reyna",
  "Reynoso",
  "Rico",
  "Rincón",
  "Riojas",
  "Ríos",
  "Rivas",
  "Rivera",
  "Rivero",
  "Robledo",
  "Robles",
  "Rocha",
  "Rodarte",
  "Rodrígez",
  "Rodríguez",
  "Rodríquez",
  "Rojas",
  "Rojo",
  "Roldán",
  "Rolón",
  "Romero",
  "Romo",
  "Roque",
  "Rosado",
  "Rosales",
  "Rosario",
  "Rosas",
  "Roybal",
  "Rubio",
  "Ruelas",
  "Ruiz",
  "Saavedra",
  "Sáenz",
  "Saiz",
  "Salas",
  "Salazar",
  "Salcedo",
  "Salcido",
  "Saldaña",
  "Saldivar",
  "Salgado",
  "Salinas",
  "Samaniego",
  "Sanabria",
  "Sanches",
  "Sánchez",
  "Sandoval",
  "Santacruz",
  "Santana",
  "Santiago",
  "Santillán",
  "Sarabia",
  "Sauceda",
  "Saucedo",
  "Sedillo",
  "Segovia",
  "Segura",
  "Sepúlveda",
  "Serna",
  "Serrano",
  "Serrato",
  "Sevilla",
  "Sierra",
  "Sisneros",
  "Solano",
  "Solís",
  "Soliz",
  "Solorio",
  "Solorzano",
  "Soria",
  "Sosa",
  "Sotelo",
  "Soto",
  "Suárez",
  "Tafoya",
  "Tamayo",
  "Tamez",
  "Tapia",
  "Tejada",
  "Tejeda",
  "Téllez",
  "Tello",
  "Terán",
  "Terrazas",
  "Tijerina",
  "Tirado",
  "Toledo",
  "Toro",
  "Torres",
  "Tórrez",
  "Tovar",
  "Trejo",
  "Treviño",
  "Trujillo",
  "Ulibarri",
  "Ulloa",
  "Urbina",
  "Ureña",
  "Urías",
  "Uribe",
  "Urrutia",
  "Vaca",
  "Valadez",
  "Valdés",
  "Valdez",
  "Valdivia",
  "Valencia",
  "Valentín",
  "Valenzuela",
  "Valladares",
  "Valle",
  "Vallejo",
  "Valles",
  "Valverde",
  "Vanegas",
  "Varela",
  "Vargas",
  "Vásquez",
  "Vázquez",
  "Vega",
  "Vela",
  "Velasco",
  "Velásquez",
  "Velázquez",
  "Vélez",
  "Véliz",
  "Venegas",
  "Vera",
  "Verdugo",
  "Verduzco",
  "Vergara",
  "Viera",
  "Vigil",
  "Villa",
  "Villagómez",
  "Villalobos",
  "Villalpando",
  "Villanueva",
  "Villareal",
  "Villarreal",
  "Villaseñor",
  "Villegas",
  "Yáñez",
  "Ybarra",
  "Zambrano",
  "Zamora",
  "Zamudio",
  "Zapata",
  "Zaragoza",
  "Zarate",
  "Zavala",
  "Zayas",
  "Zelaya",
  "Zepeda",
  "Zúñiga"
];

},{}],351:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}"
];

},{}],352:[function(require,module,exports){
module["exports"] = [
  "Sr.",
  "Sra.",
  "Sta."
];

},{}],353:[function(require,module,exports){
arguments[4][211][0].apply(exports,arguments)
},{"dup":211}],354:[function(require,module,exports){
module["exports"] = {
  "descriptor": [
    "Jefe",
    "Senior",
    "Directo",
    "Corporativo",
    "Dinánmico",
    "Futuro",
    "Producto",
    "Nacional",
    "Regional",
    "Distrito",
    "Central",
    "Global",
    "Cliente",
    "Inversor",
    "International",
    "Heredado",
    "Adelante",
    "Interno",
    "Humano",
    "Gerente",
    "Director"
  ],
  "level": [
    "Soluciones",
    "Programa",
    "Marca",
    "Seguridada",
    "Investigación",
    "Marketing",
    "Normas",
    "Implementación",
    "Integración",
    "Funcionalidad",
    "Respuesta",
    "Paradigma",
    "Tácticas",
    "Identidad",
    "Mercados",
    "Grupo",
    "División",
    "Aplicaciones",
    "Optimización",
    "Operaciones",
    "Infraestructura",
    "Intranet",
    "Comunicaciones",
    "Web",
    "Calidad",
    "Seguro",
    "Mobilidad",
    "Cuentas",
    "Datos",
    "Creativo",
    "Configuración",
    "Contabilidad",
    "Interacciones",
    "Factores",
    "Usabilidad",
    "Métricas"
  ],
  "job": [
    "Supervisor",
    "Asociado",
    "Ejecutivo",
    "Relacciones",
    "Oficial",
    "Gerente",
    "Ingeniero",
    "Especialista",
    "Director",
    "Coordinador",
    "Administrador",
    "Arquitecto",
    "Analista",
    "Diseñador",
    "Planificador",
    "Técnico",
    "Funcionario",
    "Desarrollador",
    "Productor",
    "Consultor",
    "Asistente",
    "Facilitador",
    "Agente",
    "Representante",
    "Estratega"
  ]
};

},{}],355:[function(require,module,exports){
module["exports"] = [
  "9##-###-###",
  "9##.###.###",
  "9## ### ###",
  "9########"
];

},{}],356:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":355,"dup":83}],357:[function(require,module,exports){
module["exports"] = [
  " s/n.",
  ", #",
  ", ##",
  " #",
  " ##",
  " ###",
  " ####"
];

},{}],358:[function(require,module,exports){
arguments[4][299][0].apply(exports,arguments)
},{"dup":299}],359:[function(require,module,exports){
module["exports"] = [
  "Aguascalientes",
  "Apodaca",
  "Buenavista",
  "Campeche",
  "Cancún",
  "Cárdenas",
  "Celaya",
  "Chalco",
  "Chetumal",
  "Chicoloapan",
  "Chignahuapan",
  "Chihuahua",
  "Chilpancingo",
  "Chimalhuacán",
  "Ciudad Acuña",
  "Ciudad de México",
  "Ciudad del Carmen",
  "Ciudad López Mateos",
  "Ciudad Madero",
  "Ciudad Obregón",
  "Ciudad Valles",
  "Ciudad Victoria",
  "Coatzacoalcos",
  "Colima-Villa de Álvarez",
  "Comitán de Dominguez",
  "Córdoba",
  "Cuautitlán Izcalli",
  "Cuautla",
  "Cuernavaca",
  "Culiacán",
  "Delicias",
  "Durango",
  "Ensenada",
  "Fresnillo",
  "General Escobedo",
  "Gómez Palacio",
  "Guadalajara",
  "Guadalupe",
  "Guanajuato",
  "Guaymas",
  "Hermosillo",
  "Hidalgo del Parral",
  "Iguala",
  "Irapuato",
  "Ixtapaluca",
  "Jiutepec",
  "Juárez",
  "La Laguna",
  "La Paz",
  "La Piedad-Pénjamo",
  "León",
  "Los Cabos",
  "Los Mochis",
  "Manzanillo",
  "Matamoros",
  "Mazatlán",
  "Mérida",
  "Mexicali",
  "Minatitlán",
  "Miramar",
  "Monclova",
  "Monclova-Frontera",
  "Monterrey",
  "Morelia",
  "Naucalpan de Juárez",
  "Navojoa",
  "Nezahualcóyotl",
  "Nogales",
  "Nuevo Laredo",
  "Oaxaca",
  "Ocotlán",
  "Ojo de agua",
  "Orizaba",
  "Pachuca",
  "Piedras Negras",
  "Poza Rica",
  "Puebla",
  "Puerto Vallarta",
  "Querétaro",
  "Reynosa-Río Bravo",
  "Rioverde-Ciudad Fernández",
  "Salamanca",
  "Saltillo",
  "San Cristobal de las Casas",
  "San Francisco Coacalco",
  "San Francisco del Rincón",
  "San Juan Bautista Tuxtepec",
  "San Juan del Río",
  "San Luis Potosí-Soledad",
  "San Luis Río Colorado",
  "San Nicolás de los Garza",
  "San Pablo de las Salinas",
  "San Pedro Garza García",
  "Santa Catarina",
  "Soledad de Graciano Sánchez",
  "Tampico-Pánuco",
  "Tapachula",
  "Tecomán",
  "Tehuacán",
  "Tehuacán",
  "Tehuantepec-Salina Cruz",
  "Tepexpan",
  "Tepic",
  "Tetela de Ocampo",
  "Texcoco de Mora",
  "Tijuana",
  "Tlalnepantla",
  "Tlaquepaque",
  "Tlaxcala-Apizaco",
  "Toluca",
  "Tonalá",
  "Torreón",
  "Tula",
  "Tulancingo",
  "Tulancingo de Bravo",
  "Tuxtla Gutiérrez",
  "Uruapan",
  "Uruapan del Progreso",
  "Valle de México",
  "Veracruz",
  "Villa de Álvarez",
  "Villa Nicolás Romero",
  "Villahermosa",
  "Xalapa",
  "Zacatecas-Guadalupe",
  "Zacatlan",
  "Zacatzingo",
  "Zamora-Jacona",
  "Zapopan",
  "Zitacuaro"
];

},{}],360:[function(require,module,exports){
arguments[4][135][0].apply(exports,arguments)
},{"dup":135}],361:[function(require,module,exports){
module["exports"] = [
  "Afganistán",
  "Albania",
  "Argelia",
  "Andorra",
  "Angola",
  "Argentina",
  "Armenia",
  "Aruba",
  "Australia",
  "Austria",
  "Azerbayán",
  "Bahamas",
  "Barein",
  "Bangladesh",
  "Barbados",
  "Bielorusia",
  "Bélgica",
  "Belice",
  "Bermuda",
  "Bután",
  "Bolivia",
  "Bosnia Herzegovina",
  "Botswana",
  "Brasil",
  "Bulgaria",
  "Burkina Faso",
  "Burundi",
  "Camboya",
  "Camerún",
  "Canada",
  "Cabo Verde",
  "Islas Caimán",
  "Chad",
  "Chile",
  "China",
  "Isla de Navidad",
  "Colombia",
  "Comodos",
  "Congo",
  "Costa Rica",
  "Costa de Marfil",
  "Croacia",
  "Cuba",
  "Chipre",
  "República Checa",
  "Dinamarca",
  "Dominica",
  "República Dominicana",
  "Ecuador",
  "Egipto",
  "El Salvador",
  "Guinea Ecuatorial",
  "Eritrea",
  "Estonia",
  "Etiopía",
  "Islas Faro",
  "Fiji",
  "Finlandia",
  "Francia",
  "Gabón",
  "Gambia",
  "Georgia",
  "Alemania",
  "Ghana",
  "Grecia",
  "Groenlandia",
  "Granada",
  "Guadalupe",
  "Guam",
  "Guatemala",
  "Guinea",
  "Guinea-Bisau",
  "Guayana",
  "Haiti",
  "Honduras",
  "Hong Kong",
  "Hungria",
  "Islandia",
  "India",
  "Indonesia",
  "Iran",
  "Irak",
  "Irlanda",
  "Italia",
  "Jamaica",
  "Japón",
  "Jordania",
  "Kazajistan",
  "Kenia",
  "Kiribati",
  "Corea",
  "Kuwait",
  "Letonia",
  "Líbano",
  "Liberia",
  "Liechtenstein",
  "Lituania",
  "Luxemburgo",
  "Macao",
  "Macedonia",
  "Madagascar",
  "Malawi",
  "Malasia",
  "Maldivas",
  "Mali",
  "Malta",
  "Martinica",
  "Mauritania",
  "México",
  "Micronesia",
  "Moldavia",
  "Mónaco",
  "Mongolia",
  "Montenegro",
  "Montserrat",
  "Marruecos",
  "Mozambique",
  "Namibia",
  "Nauru",
  "Nepal",
  "Holanda",
  "Nueva Zelanda",
  "Nicaragua",
  "Niger",
  "Nigeria",
  "Noruega",
  "Omán",
  "Pakistan",
  "Panamá",
  "Papúa Nueva Guinea",
  "Paraguay",
  "Perú",
  "Filipinas",
  "Poland",
  "Portugal",
  "Puerto Rico",
  "Rusia",
  "Ruanda",
  "Samoa",
  "San Marino",
  "Santo Tomé y Principe",
  "Arabia Saudí",
  "Senegal",
  "Serbia",
  "Seychelles",
  "Sierra Leona",
  "Singapur",
  "Eslovaquia",
  "Eslovenia",
  "Somalia",
  "España",
  "Sri Lanka",
  "Sudán",
  "Suriname",
  "Suecia",
  "Suiza",
  "Siria",
  "Taiwan",
  "Tajikistan",
  "Tanzania",
  "Tailandia",
  "Timor-Leste",
  "Togo",
  "Tonga",
  "Trinidad y Tobago",
  "Tunez",
  "Turquia",
  "Uganda",
  "Ucrania",
  "Emiratos Árabes Unidos",
  "Reino Unido",
  "Estados Unidos de América",
  "Uruguay",
  "Uzbekistan",
  "Vanuatu",
  "Venezuela",
  "Vietnam",
  "Yemen",
  "Zambia",
  "Zimbabwe"
];

},{}],362:[function(require,module,exports){
module["exports"] = [
  "México"
];

},{}],363:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.time_zone = require("./time_zone");
address.city = require("./city");
address.street = require("./street");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");
},{"./building_number":357,"./city":358,"./city_prefix":359,"./city_suffix":360,"./country":361,"./default_country":362,"./postcode":364,"./secondary_address":365,"./state":366,"./state_abbr":367,"./street":368,"./street_address":369,"./street_name":370,"./street_suffix":371,"./time_zone":372}],364:[function(require,module,exports){
arguments[4][327][0].apply(exports,arguments)
},{"dup":327}],365:[function(require,module,exports){
module["exports"] = [
  "Esc. ###",
  "Puerta ###",
  "Edificio #"
];

},{}],366:[function(require,module,exports){
module["exports"] = [
  "Aguascalientes",
  "Baja California Norte",
  "Baja California Sur",
  'Estado de México',
  "Campeche",
  "Chiapas",
  "Chihuahua",
  "Coahuila",
  "Colima",
  "Durango",
  "Guanajuato",
  "Guerrero",
  "Hidalgo",
  "Jalisco",
  "Michoacan",
  "Morelos",
  "Nayarit",
  'Nuevo León',
  "Oaxaca",
  "Puebla",
  "Querétaro",
  "Quintana Roo",
  "San Luis Potosí",
  "Sinaloa",
  "Sonora",
  "Tabasco",
  "Tamaulipas",
  "Tlaxcala",
  "Veracruz",
  "Yucatán",
  "Zacatecas"
];

},{}],367:[function(require,module,exports){
module["exports"] = [
  "AS",
  "BC",
  "BS",
  "CC",
  "CS",
  "CH",
  "CL",
  "CM",
  "DF",
  "DG",
  "GT",
  "GR",
  "HG",
  "JC",
  "MC",
  "MN",
  "MS",
  "NT",
  "NL",
  "OC",
  "PL",
  "QT",
  "QR",
  "SP",
  "SL",
  "SR",
  "TC",
  "TS",
  "TL",
  "VZ",
  "YN",
  "ZS"
];

},{}],368:[function(require,module,exports){
module["exports"] = [
	"20 de Noviembre",
	"Cinco de Mayo",
	"Cuahutemoc",
	"Manzanares",
	"Donceles",
	"Francisco I. Madero",
	"Juárez",
	"Repúplica de Cuba",
	"Repúplica de Chile",
	"Repúplica de Argentina",
	"Repúplica de Uruguay",
	"Isabel la Católica",
	"Izazaga",
	"Eje Central",
	"Eje 6",
	"Eje 5",
	"La viga",
	"Aniceto Ortega",
	"Miguel Ángel de Quevedo",
	"Amores",
	"Coyoacán",
	"Coruña",
	"Batalla de Naco",
	"La otra banda",
	"Piedra del Comal",
	"Balcón de los edecanes",
	"Barrio la Lonja",
	"Jicolapa",
	"Zacatlán",
	"Zapata",
	"Polotitlan",
	"Calimaya",
	"Flor Marina",
	"Flor Solvestre",
	"San Miguel",
	"Naranjo",
	"Cedro",
	"Jalisco",
	"Avena"
];
},{}],369:[function(require,module,exports){
arguments[4][332][0].apply(exports,arguments)
},{"dup":332}],370:[function(require,module,exports){
module["exports"] = [
  "#{street_suffix} #{Name.first_name}",
  "#{street_suffix} #{Name.first_name} #{Name.last_name}",
  "#{street_suffix} #{street}",
  "#{street_suffix} #{street}",
  "#{street_suffix} #{street}",
  "#{street_suffix} #{street}"

];

},{}],371:[function(require,module,exports){
arguments[4][334][0].apply(exports,arguments)
},{"dup":334}],372:[function(require,module,exports){
module["exports"] = [
  "Pacífico/Midway",
  "Pacífico/Pago_Pago",
  "Pacífico/Honolulu",
  "America/Juneau",
  "America/Los_Angeles",
  "America/Tijuana",
  "America/Denver",
  "America/Phoenix",
  "America/Chihuahua",
  "America/Mazatlan",
  "America/Chicago",
  "America/Regina",
  "America/Mexico_City",
  "America/Monterrey",
  "America/Guatemala",
  "America/New_York",
  "America/Indiana/Indianapolis",
  "America/Bogota",
  "America/Lima",
  "America/Lima",
  "America/Halifax",
  "America/Caracas",
  "America/La_Paz",
  "America/Santiago",
  "America/St_Johns",
  "America/Sao_Paulo",
  "America/Argentina/Buenos_Aires",
  "America/Guyana",
  "America/Godthab",
  "Atlantic/South_Georgia",
  "Atlantic/Azores",
  "Atlantic/Cape_Verde",
  "Europa/Dublin",
  "Europa/London",
  "Europa/Lisbon",
  "Europa/London",
  "Africa/Casablanca",
  "Africa/Monrovia",
  "Etc/UTC",
  "Europa/Belgrade",
  "Europa/Bratislava",
  "Europa/Budapest",
  "Europa/Ljubljana",
  "Europa/Prague",
  "Europa/Sarajevo",
  "Europa/Skopje",
  "Europa/Warsaw",
  "Europa/Zagreb",
  "Europa/Brussels",
  "Europa/Copenhagen",
  "Europa/Madrid",
  "Europa/Paris",
  "Europa/Amsterdam",
  "Europa/Berlin",
  "Europa/Berlin",
  "Europa/Rome",
  "Europa/Stockholm",
  "Europa/Vienna",
  "Africa/Algiers",
  "Europa/Bucharest",
  "Africa/Cairo",
  "Europa/Helsinki",
  "Europa/Kiev",
  "Europa/Riga",
  "Europa/Sofia",
  "Europa/Tallinn",
  "Europa/Vilnius",
  "Europa/Athens",
  "Europa/Istanbul",
  "Europa/Minsk",
  "Asia/Jerusalen",
  "Africa/Harare",
  "Africa/Johannesburg",
  "Europa/Moscú",
  "Europa/Moscú",
  "Europa/Moscú",
  "Asia/Kuwait",
  "Asia/Riyadh",
  "Africa/Nairobi",
  "Asia/Baghdad",
  "Asia/Tehran",
  "Asia/Muscat",
  "Asia/Muscat",
  "Asia/Baku",
  "Asia/Tbilisi",
  "Asia/Yerevan",
  "Asia/Kabul",
  "Asia/Yekaterinburg",
  "Asia/Karachi",
  "Asia/Karachi",
  "Asia/Tashkent",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kathmandu",
  "Asia/Dhaka",
  "Asia/Dhaka",
  "Asia/Colombo",
  "Asia/Almaty",
  "Asia/Novosibirsk",
  "Asia/Rangoon",
  "Asia/Bangkok",
  "Asia/Bangkok",
  "Asia/Jakarta",
  "Asia/Krasnoyarsk",
  "Asia/Shanghai",
  "Asia/Chongqing",
  "Asia/Hong_Kong",
  "Asia/Urumqi",
  "Asia/Kuala_Lumpur",
  "Asia/Singapore",
  "Asia/Taipei",
  "Australia/Perth",
  "Asia/Irkutsk",
  "Asia/Ulaanbaatar",
  "Asia/Seoul",
  "Asia/Tokyo",
  "Asia/Tokyo",
  "Asia/Tokyo",
  "Asia/Yakutsk",
  "Australia/Darwin",
  "Australia/Adelaide",
  "Australia/Melbourne",
  "Australia/Melbourne",
  "Australia/Sydney",
  "Australia/Brisbane",
  "Australia/Hobart",
  "Asia/Vladivostok",
  "Pacífico/Guam",
  "Pacífico/Port_Moresby",
  "Asia/Magadan",
  "Asia/Magadan",
  "Pacífico/Noumea",
  "Pacífico/Fiji",
  "Asia/Kamchatka",
  "Pacífico/Majuro",
  "Pacífico/Auckland",
  "Pacífico/Auckland",
  "Pacífico/Tongatapu",
  "Pacífico/Fakaofo",
  "Pacífico/Apia"
];

},{}],373:[function(require,module,exports){
module["exports"] = [
  "5##-###-###",
  "5##.###.###",
  "5## ### ###",
  "5########"
];

},{}],374:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"./formats":373,"dup":65}],375:[function(require,module,exports){
module["exports"] = [
   "rojo",
   "verde",
   "azul",
   "amarillo",
   "morado",
   "Menta verde",
   "teal",
   "blanco",
   "negro",
   "Naranja",
   "Rosa",
   "gris",
   "marrón",
   "violeta",
   "turquesa",
   "tan",
   "cielo azul",
   "salmón",
   "ciruela",
   "orquídea",
   "aceituna",
   "magenta",
   "Lima",
   "marfil",
   "índigo",
   "oro",
   "fucsia",
   "cian",
   "azul",
   "lavanda",
   "plata"
];

},{}],376:[function(require,module,exports){
module["exports"] = [
   "Libros",
   "Películas",
   "Música",
   "Juegos",
   "Electrónica",
   "Ordenadores",
   "Hogar",
   "Jardín",
   "Herramientas",
   "Ultramarinos",
   "Salud",
   "Belleza",
   "Juguetes",
   "Kids",
   "Baby",
   "Ropa",
   "Zapatos",
   "Joyería",
   "Deportes",
   "Aire libre",
   "Automoción",
   "Industrial"
];

},{}],377:[function(require,module,exports){
arguments[4][162][0].apply(exports,arguments)
},{"./color":375,"./department":376,"./product_name":378,"dup":162}],378:[function(require,module,exports){
module["exports"] = {
"adjective": [
     "Pequeño",
     "Ergonómico",
     "Rústico",
     "Inteligente",
     "Gorgeous",
     "Increíble",
     "Fantástico",
     "Práctica",
     "Elegante",
     "Increíble",
     "Genérica",
     "Artesanal",
     "Hecho a mano",
     "Licencia",
     "Refinado",
     "Sin marca",
     "Sabrosa"
   ],
"material": [
     "Acero",
     "Madera",
     "Hormigón",
     "Plástico",
     "Cotton",
     "Granito",
     "Caucho",
     "Metal",
     "Soft",
     "Fresco",
     "Frozen"
   ],
"product": [
     "Presidente",
     "Auto",
     "Computadora",
     "Teclado",
     "Ratón",
     "Bike",
     "Pelota",
     "Guantes",
     "Pantalones",
     "Camisa",
     "Mesa",
     "Zapatos",
     "Sombrero",
     "Toallas",
     "Jabón",
     "Tuna",
     "Pollo",
     "Pescado",
     "Queso",
     "Tocino",
     "Pizza",
     "Ensalada",
     "Embutidos"
  ]
};

},{}],379:[function(require,module,exports){
arguments[4][338][0].apply(exports,arguments)
},{"dup":338}],380:[function(require,module,exports){
module["exports"] = [
  "Clics y mortero",
  "Valor añadido",
  "Vertical",
  "Proactivo",
  "Robusto",
  "Revolucionario",
  "Escalable",
  "De vanguardia",
  "Innovador",
  "Intuitivo",
  "Estratégico",
  "E-business",
  "Misión crítica",
  "Pegajosa",
  "Doce y cincuenta y nueve de la noche",
  "24/7",
  "De extremo a extremo",
  "Global",
  "B2B",
  "B2C",
  "Granular",
  "Fricción",
  "Virtual",
  "Viral",
  "Dinámico",
  "24/365",
  "Mejor de su clase",
  "Asesino",
  "Magnética",
  "Filo sangriento",
  "Habilitado web",
  "Interactiva",
  "Punto com",
  "Sexy",
  "Back-end",
  "Tiempo real",
  "Eficiente",
  "Frontal",
  "Distribuida",
  "Sin costura",
  "Extensible",
  "Llave en mano",
  "Clase mundial",
  "Código abierto",
  "Multiplataforma",
  "Cross-media",
  "Sinérgico",
  "ladrillos y clics",
  "Fuera de la caja",
  "Empresa",
  "Integrado",
  "Impactante",
  "Inalámbrico",
  "Transparente",
  "Próxima generación",
  "Innovador",
  "User-centric",
  "Visionario",
  "A medida",
  "Ubicua",
  "Enchufa y juega",
  "Colaboración",
  "Convincente",
  "Holístico",
  "Ricos"
];

},{}],381:[function(require,module,exports){
module["exports"] = [
   "sinergias",
   "web-readiness",
   "paradigmas",
   "mercados",
   "asociaciones",
   "infraestructuras",
   "plataformas",
   "iniciativas",
   "canales",
   "ojos",
   "comunidades",
   "ROI",
   "soluciones",
   "minoristas electrónicos",
   "e-servicios",
   "elementos de acción",
   "portales",
   "nichos",
   "tecnologías",
   "contenido",
   "vortales",
   "cadenas de suministro",
   "convergencia",
   "relaciones",
   "arquitecturas",
   "interfaces",
   "mercados electrónicos",
   "e-commerce",
   "sistemas",
   "ancho de banda",
   "infomediarios",
   "modelos",
   "Mindshare",
   "entregables",
   "usuarios",
   "esquemas",
   "redes",
   "aplicaciones",
   "métricas",
   "e-business",
   "funcionalidades",
   "experiencias",
   "servicios web",
   "metodologías"
];

},{}],382:[function(require,module,exports){
module["exports"] = [
   "poner en práctica",
   "utilizar",
   "integrar",
   "racionalizar",
   "optimizar",
   "evolucionar",
   "transformar",
   "abrazar",
   "habilitar",
   "orquestar",
   "apalancamiento",
   "reinventar",
   "agregado",
   "arquitecto",
   "mejorar",
   "incentivar",
   "transformarse",
   "empoderar",
   "Envisioneer",
   "monetizar",
   "arnés",
   "facilitar",
   "aprovechar",
   "desintermediar",
   "sinergia",
   "estrategias",
   "desplegar",
   "marca",
   "crecer",
   "objetivo",
   "sindicato",
   "sintetizar",
   "entregue",
   "malla",
   "incubar",
   "enganchar",
   "maximizar",
   "punto de referencia",
   "acelerar",
   "reintermediate",
   "pizarra",
   "visualizar",
   "reutilizar",
   "innovar",
   "escala",
   "desatar",
   "conducir",
   "extender",
   "ingeniero",
   "revolucionar",
   "generar",
   "explotar",
   "transición",
   "e-enable",
   "repetir",
   "cultivar",
   "matriz",
   "productize",
   "redefinir",
   "recontextualizar"
]

},{}],383:[function(require,module,exports){
arguments[4][339][0].apply(exports,arguments)
},{"dup":339}],384:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.adjective = require("./adjective");
company.descriptor = require("./descriptor");
company.noun = require("./noun");
company.bs_verb = require("./bs_verb");
company.name = require("./name");
company.bs_adjective = require("./bs_adjective");
company.bs_noun = require("./bs_noun");

},{"./adjective":379,"./bs_adjective":380,"./bs_noun":381,"./bs_verb":382,"./descriptor":383,"./name":385,"./noun":386,"./suffix":387}],385:[function(require,module,exports){
arguments[4][341][0].apply(exports,arguments)
},{"dup":341}],386:[function(require,module,exports){
arguments[4][342][0].apply(exports,arguments)
},{"dup":342}],387:[function(require,module,exports){
arguments[4][343][0].apply(exports,arguments)
},{"dup":343}],388:[function(require,module,exports){
var es_MX = {};
module['exports'] = es_MX;
es_MX.title = "Spanish Mexico";
es_MX.separator = " & ";
es_MX.name = require("./name");
es_MX.address = require("./address");
es_MX.company = require("./company");
es_MX.internet = require("./internet");
es_MX.phone_number = require("./phone_number");
es_MX.cell_phone = require("./cell_phone");
es_MX.lorem = require("./lorem");
es_MX.commerce = require("./commerce");
es_MX.team = require("./team");
},{"./address":363,"./cell_phone":374,"./commerce":377,"./company":384,"./internet":391,"./lorem":392,"./name":396,"./phone_number":403,"./team":405}],389:[function(require,module,exports){
module["exports"] = [
  "com",
  "mx",
  "info",
  "com.mx",
  "org",
  "gob.mx"
];

},{}],390:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.com",
  "hotmail.com",
  "nearbpo.com",
  "corpfolder.com"
];

},{}],391:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./domain_suffix":389,"./free_email":390,"dup":73}],392:[function(require,module,exports){
arguments[4][203][0].apply(exports,arguments)
},{"./supplemental":393,"./words":394,"dup":203}],393:[function(require,module,exports){
arguments[4][204][0].apply(exports,arguments)
},{"dup":204}],394:[function(require,module,exports){
module["exports"] = [
"Abacalero",
"Abacería",
"Abacero",
"Abacial",
"Abaco",
"Abacora",
"Abacorar",
"Abad",
"Abada",
"Abadejo",
"Abadengo",
"Abadernar",
"Abadesa",
"Abadí",
"Abadía",
"Abadiado",
"Abadiato",
"Abajadero",
"Abajamiento",
"Abajar",
"Abajeño",
"Abajera",
"Abajo",
"Abalada",
"Abalanzar",
"Abalar",
"Abalaustrado",
"Abaldonadamente",
"Abaldonamiento",
"Bastonada",
"Bastonazo",
"Bastoncillo",
"Bastonear",
"Bastonero",
"Bástulo",
"Basura",
"Basural",
"Basurear",
"Basurero",
"Bata",
"Batacazo",
"Batahola",
"Batalán",
"Batalla",
"Batallador",
"Batallar",
"Batallaroso",
"Batallola",
"Batallón",
"Batallona",
"Batalloso",
"Batán",
"Batanar",
"Batanear",
"Batanero",
"Batanga",
"Bataola",
"Batata",
"Batatazo",
"Batato",
"Batavia",
"Bátavo",
"Batayola",
"Batazo",
"Bate",
"Batea",
"Bateador",
"Bateaguas",
"Cenagar",
"Cenagoso",
"Cenal",
"Cenaoscuras",
"Ceñar",
"Cenata",
"Cenca",
"Cencapa",
"Cencellada",
"Cenceñada",
"Cenceño",
"Cencero",
"Cencerra",
"Cencerrada",
"Cencerrado",
"Cencerrear",
"Cencerreo",
"Cencerril",
"Cencerrillas",
"Cencerro",
"Cencerrón",
"Cencha",
"Cencido",
"Cencío",
"Cencivera",
"Cenco",
"Cencuate",
"Cendal",
"Cendalí",
"Céndea",
"Cendolilla",
"Cendra",
"Cendrada",
"Cendradilla",
"Cendrado",
"Cendrar",
"Cendrazo",
"Cenefa",
"Cenegar",
"Ceneque",
"Cenero",
"Cenestesia",
"Desceñir",
"Descensión",
"Descenso",
"Descentrado",
"Descentralización",
"Descentralizador",
"Descentralizar",
"Descentrar",
"Descepar",
"Descerar",
"Descercado",
"Descercador",
"Descercar",
"Descerco",
"Descerebración",
"Descerebrado",
"Descerebrar",
"Descerezar",
"Descerrajado",
"Descerrajadura",
"Descerrajar",
"Descerrar",
"Descerrumarse",
"Descervigamiento",
"Descervigar",
"Deschapar",
"Descharchar",
"Deschavetado",
"Deschavetarse",
"Deschuponar",
"Descifrable",
"Descifrador",
"Desciframiento",
"Descifrar",
"Descifre",
"Descimbramiento",
"Descimbrar",
"Engarbarse",
"Engarberar",
"Engarbullar",
"Engarce",
"Engarfiar",
"Engargantadura",
"Engargantar",
"Engargante",
"Engargolado",
"Engargolar",
"Engaritar",
"Engarmarse",
"Engarnio",
"Engarrafador",
"Engarrafar",
"Engarrar",
"Engarro",
"Engarronar",
"Engarrotar",
"Engarzador",
"Engarzadura",
"Engarzar",
"Engasgarse",
"Engastador",
"Engastadura",
"Engastar",
"Engaste",
"Ficción",
"Fice",
"Ficha",
"Fichaje",
"Fichar",
"Fichero",
"Ficoideo",
"Ficticio",
"Fidalgo",
"Fidecomiso",
"Fidedigno",
"Fideero",
"Fideicomisario",
"Fideicomiso",
"Fideicomitente",
"Fideísmo",
"Fidelidad",
"Fidelísimo",
"Fideo",
"Fido",
"Fiducia",
"Geminación",
"Geminado",
"Geminar",
"Géminis",
"Gémino",
"Gemíparo",
"Gemiquear",
"Gemiqueo",
"Gemir",
"Gemología",
"Gemológico",
"Gemólogo",
"Gemonias",
"Gemoso",
"Gemoterapia",
"Gen",
"Genciana",
"Gencianáceo",
"Gencianeo",
"Gendarme",
"Gendarmería",
"Genealogía",
"Genealógico",
"Genealogista",
"Genearca",
"Geneático",
"Generable",
"Generación",
"Generacional",
"Generador",
"General",
"Generala",
"Generalato",
"Generalidad",
"Generalísimo",
"Incordio",
"Incorporación",
"Incorporal",
"Incorporalmente",
"Incorporar",
"Incorporeidad",
"Incorpóreo",
"Incorporo",
"Incorrección",
"Incorrectamente",
"Incorrecto",
"Incorregibilidad",
"Incorregible",
"Incorregiblemente",
"Incorrupción",
"Incorruptamente",
"Incorruptibilidad",
"Incorruptible",
"Incorrupto",
"Incrasar",
"Increado",
"Incredibilidad",
"Incrédulamente",
"Incredulidad",
"Incrédulo",
"Increíble",
"Increíblemente",
"Incrementar",
"Incremento",
"Increpación",
"Increpador",
"Increpar",
"Incriminación",
"Incriminar",
"Incristalizable",
"Incruentamente",
"Incruento",
"Incrustación"
];

},{}],395:[function(require,module,exports){
module["exports"] = [
"Aarón",
"Abraham",
"Adán",
"Agustín",
"Alan",
"Alberto",
"Alejandro",
"Alexander",
"Alexis",
"Alfonso",
"Alfredo",
"Andrés",
"Ángel Daniel",
"Ángel Gabriel",
"Antonio",
"Armando",
"Arturo",
"Axel",
"Benito",
"Benjamín",
"Bernardo",
"Brandon",
"Brayan",
"Carlos",
"César",
"Claudio",
"Clemente",
"Cristian",
"Cristobal",
"Damián",
"Daniel",
"David",
"Diego",
"Eduardo",
"Elías",
"Emiliano",
"Emilio",
"Emilio",
"Emmanuel",
"Enrique",
"Erick",
"Ernesto",
"Esteban",
"Federico",
"Felipe",
"Fernando",
"Fernando Javier",
"Francisco",
"Francisco Javier",
"Gabriel",
"Gael",
"Gerardo",
"Germán",
"Gilberto",
"Gonzalo",
"Gregorio",
"Guillermo",
"Gustavo",
"Hernán",
"Homero",
"Horacio",
"Hugo",
"Ignacio",
"Iker",
"Isaac",
"Isaias",
"Israel",
"Ivan",
"Jacobo",
"Jaime",
"Javier",
"Jerónimo",
"Jesús",
"Joaquín",
"Jorge",
"Jorge Luis",
"José",
"José Antonio",
"Jose Daniel",
"José Eduardo",
"José Emilio",
"José Luis",
"José María",
"José Miguel",
"Juan",
"Juan Carlos",
"Juan Manuel",
"Juan Pablo",
"Julio",
"Julio César",
"Kevin",
"Leonardo",
"Lorenzo",
"Lucas",
"Luis",
"Luis Ángel",
"Luis Fernando",
"Luis Gabino",
"Luis Miguel",
"Manuel",
"Marco Antonio",
"Marcos",
"Mariano",
"Mario",
"Martín",
"Mateo",
"Matías",
"Mauricio",
"Maximiliano",
"Miguel",
"Miguel Ángel",
"Nicolás",
"Octavio",
"Óscar",
"Pablo",
"Patricio",
"Pedro",
"Rafael",
"Ramiro",
"Ramón",
"Raúl",
"Ricardo",
"Roberto",
"Rodrigo",
"Rubén",
"Salvador",
"Samuel",
"Sancho",
"Santiago",
"Saúl",
"Sebastian",
"Sergio",
"Tadeo",
"Teodoro",
"Timoteo",
"Tomás",
"Uriel",
"Vicente",
"Víctor",
"Victor Manuel",
"Adriana",
"Alejandra",
"Alicia",
"Amalia",
"Ana",
"Ana Luisa",
"Ana María",
"Andrea",
"Ángela",
"Anita",
"Antonia",
"Araceli",
"Ariadna",
"Barbara",
"Beatriz",
"Berta",
"Blanca",
"Caridad",
"Carla",
"Carlota",
"Carmen",
"Carolina",
"Catalina",
"Cecilia",
"Clara",
"Claudia",
"Concepción",
"Conchita",
"Cristina",
"Daniela",
"Débora",
"Diana",
"Dolores",
"Dorotea",
"Elena",
"Elisa",
"Elizabeth",
"Eloisa",
"Elsa",
"Elvira",
"Emilia",
"Esperanza",
"Estela",
"Ester",
"Eva",
"Florencia",
"Francisca",
"Gabriela",
"Gloria",
"Graciela",
"Guadalupe",
"Guillermina",
"Inés",
"Irene",
"Isabel",
"Isabela",
"Josefina",
"Juana",
"Julia",
"Laura",
"Leonor",
"Leticia",
"Lilia",
"Lola",
"Lorena",
"Lourdes",
"Lucia",
"Luisa",
"Luz",
"Magdalena",
"Manuela",
"Marcela",
"Margarita",
"María",
"María Cristina",
"María de Jesús",
"María de los Ángeles",
"María del Carmen",
"María Elena",
"María Eugenia",
"María Guadalupe",
"María José",
"María Luisa",
"María Soledad",
"María Teresa",
"Mariana",
"Maricarmen",
"Marilu",
"Marisol",
"Marta",
"Mayte",
"Mercedes",
"Micaela",
"Mónica",
"Natalia",
"Norma",
"Olivia",
"Patricia",
"Pilar",
"Ramona",
"Raquel",
"Rebeca",
"Reina",
"Rocio",
"Rosa",
"Rosa María",
"Rosalia",
"Rosario",
"Sara",
"Silvia",
"Sofia",
"Soledad",
"Sonia",
"Susana",
"Teresa",
"Verónica",
"Victoria",
"Virginia",
"Xochitl",
"Yolanda",
"Abigail",
"Abril",
"Adela",
"Alexa",
"Alondra Romina",
"Ana Sofía",
"Ana Victoria",
"Camila",
"Carolina",
"Daniela",
"Dulce María",
"Emily",
"Esmeralda",
"Estefanía",
"Evelyn",
"Fatima",
"Ivanna",
"Jazmin",
"Jennifer",
"Jimena",
"Julieta",
"Kimberly",
"Liliana",
"Lizbeth",
"María Fernanda",
"Melany",
"Melissa",
"Miranda",
"Monserrat",
"Naomi",
"Natalia",
"Nicole",
"Paola",
"Paulina",
"Regina",
"Renata",
"Valentina",
"Valeria",
"Vanessa",
"Ximena",
"Ximena Guadalupe",
"Yamileth",
"Yaretzi",
"Zoe"
]
},{}],396:[function(require,module,exports){
arguments[4][207][0].apply(exports,arguments)
},{"./first_name":395,"./last_name":397,"./name":398,"./prefix":399,"./suffix":400,"./title":401,"dup":207}],397:[function(require,module,exports){
module["exports"] = [
  "Abeyta",
"Abrego",
"Abreu",
"Acevedo",
"Acosta",
"Acuña",
"Adame",
"Adorno",
"Agosto",
"Aguayo",
"Águilar",
"Aguilera",
"Aguirre",
"Alanis",
"Alaniz",
"Alarcón",
"Alba",
"Alcala",
"Alcántar",
"Alcaraz",
"Alejandro",
"Alemán",
"Alfaro",
"Alicea",
"Almanza",
"Almaraz",
"Almonte",
"Alonso",
"Alonzo",
"Altamirano",
"Alva",
"Alvarado",
"Alvarez",
"Amador",
"Amaya",
"Anaya",
"Anguiano",
"Angulo",
"Aparicio",
"Apodaca",
"Aponte",
"Aragón",
"Aranda",
"Araña",
"Arce",
"Archuleta",
"Arellano",
"Arenas",
"Arevalo",
"Arguello",
"Arias",
"Armas",
"Armendáriz",
"Armenta",
"Armijo",
"Arredondo",
"Arreola",
"Arriaga",
"Arroyo",
"Arteaga",
"Atencio",
"Ávalos",
"Ávila",
"Avilés",
"Ayala",
"Baca",
"Badillo",
"Báez",
"Baeza",
"Bahena",
"Balderas",
"Ballesteros",
"Banda",
"Bañuelos",
"Barajas",
"Barela",
"Barragán",
"Barraza",
"Barrera",
"Barreto",
"Barrientos",
"Barrios",
"Batista",
"Becerra",
"Beltrán",
"Benavides",
"Benavídez",
"Benítez",
"Bermúdez",
"Bernal",
"Berríos",
"Bétancourt",
"Blanco",
"Bonilla",
"Borrego",
"Botello",
"Bravo",
"Briones",
"Briseño",
"Brito",
"Bueno",
"Burgos",
"Bustamante",
"Bustos",
"Caballero",
"Cabán",
"Cabrera",
"Cadena",
"Caldera",
"Calderón",
"Calvillo",
"Camacho",
"Camarillo",
"Campos",
"Canales",
"Candelaria",
"Cano",
"Cantú",
"Caraballo",
"Carbajal",
"Cardenas",
"Cardona",
"Carmona",
"Carranza",
"Carrasco",
"Carrasquillo",
"Carreón",
"Carrera",
"Carrero",
"Carrillo",
"Carrion",
"Carvajal",
"Casanova",
"Casares",
"Casárez",
"Casas",
"Casillas",
"Castañeda",
"Castellanos",
"Castillo",
"Castro",
"Cavazos",
"Cazares",
"Ceballos",
"Cedillo",
"Ceja",
"Centeno",
"Cepeda",
"Cerda",
"Cervantes",
"Cervántez",
"Chacón",
"Chapa",
"Chavarría",
"Chávez",
"Cintrón",
"Cisneros",
"Collado",
"Collazo",
"Colón",
"Colunga",
"Concepción",
"Contreras",
"Cordero",
"Córdova",
"Cornejo",
"Corona",
"Coronado",
"Corral",
"Corrales",
"Correa",
"Cortés",
"Cortez",
"Cotto",
"Covarrubias",
"Crespo",
"Cruz",
"Cuellar",
"Curiel",
"Dávila",
"de Anda",
"de Jesús",
"Delacrúz",
"Delafuente",
"Delagarza",
"Delao",
"Delapaz",
"Delarosa",
"Delatorre",
"Deleón",
"Delgadillo",
"Delgado",
"Delrío",
"Delvalle",
"Díaz",
"Domínguez",
"Domínquez",
"Duarte",
"Dueñas",
"Duran",
"Echevarría",
"Elizondo",
"Enríquez",
"Escalante",
"Escamilla",
"Escobar",
"Escobedo",
"Esparza",
"Espinal",
"Espino",
"Espinosa",
"Espinoza",
"Esquibel",
"Esquivel",
"Estévez",
"Estrada",
"Fajardo",
"Farías",
"Feliciano",
"Fernández",
"Ferrer",
"Fierro",
"Figueroa",
"Flores",
"Flórez",
"Fonseca",
"Franco",
"Frías",
"Fuentes",
"Gaitán",
"Galarza",
"Galindo",
"Gallardo",
"Gallegos",
"Galván",
"Gálvez",
"Gamboa",
"Gamez",
"Gaona",
"Garay",
"García",
"Garibay",
"Garica",
"Garrido",
"Garza",
"Gastélum",
"Gaytán",
"Gil",
"Girón",
"Godínez",
"Godoy",
"Gollum",
"Gómez",
"Gonzales",
"González",
"Gracia",
"Granado",
"Granados",
"Griego",
"Grijalva",
"Guajardo",
"Guardado",
"Guerra",
"Guerrero",
"Guevara",
"Guillen",
"Gurule",
"Gutiérrez",
"Guzmán",
"Haro",
"Henríquez",
"Heredia",
"Hernádez",
"Hernandes",
"Hernández",
"Herrera",
"Hidalgo",
"Hinojosa",
"Holguín",
"Huerta",
"Huixtlacatl",
"Hurtado",
"Ibarra",
"Iglesias",
"Irizarry",
"Jaime",
"Jaimes",
"Jáquez",
"Jaramillo",
"Jasso",
"Jiménez",
"Jimínez",
"Juárez",
"Jurado",
"Kadar rodriguez",
"Kamal",
"Kamat",
"Kanaria",
"Kanea",
"Kanimal",
"Kano",
"Kanzaki",
"Kaplan",
"Kara",
"Karam",
"Karan",
"Kardache soto",
"Karem",
"Karen",
"Khalid",
"Kindelan",
"Koenig",
"Korta",
"Korta hernandez",
"Kortajarena",
"Kranz sans",
"Krasnova",
"Krauel natera",
"Kuzmina",
"Kyra",
"Laboy",
"Lara",
"Laureano",
"Leal",
"Lebrón",
"Ledesma",
"Leiva",
"Lemus",
"León",
"Lerma",
"Leyva",
"Limón",
"Linares",
"Lira",
"Llamas",
"Loera",
"Lomeli",
"Longoria",
"López",
"Lovato",
"Loya",
"Lozada",
"Lozano",
"Lucero",
"Lucio",
"Luevano",
"Lugo",
"Luna",
"Macías",
"Madera",
"Madrid",
"Madrigal",
"Maestas",
"Magaña",
"Malave",
"Maldonado",
"Manzanares",
"Mares",
"Marín",
"Márquez",
"Marrero",
"Marroquín",
"Martínez",
"Mascareñas",
"Mata",
"Mateo",
"Matías",
"Matos",
"Maya",
"Mayorga",
"Medina",
"Medrano",
"Mejía",
"Meléndez",
"Melgar",
"Mena",
"Menchaca",
"Méndez",
"Mendoza",
"Menéndez",
"Meraz",
"Mercado",
"Merino",
"Mesa",
"Meza",
"Miramontes",
"Miranda",
"Mireles",
"Mojica",
"Molina",
"Mondragón",
"Monroy",
"Montalvo",
"Montañez",
"Montaño",
"Montemayor",
"Montenegro",
"Montero",
"Montes",
"Montez",
"Montoya",
"Mora",
"Morales",
"Moreno",
"Mota",
"Moya",
"Munguía",
"Muñiz",
"Muñoz",
"Murillo",
"Muro",
"Nájera",
"Naranjo",
"Narváez",
"Nava",
"Navarrete",
"Navarro",
"Nazario",
"Negrete",
"Negrón",
"Nevárez",
"Nieto",
"Nieves",
"Niño",
"Noriega",
"Núñez",
"Ñañez",
"Ocampo",
"Ocasio",
"Ochoa",
"Ojeda",
"Olivares",
"Olivárez",
"Olivas",
"Olivera",
"Olivo",
"Olmos",
"Olvera",
"Ontiveros",
"Oquendo",
"Ordóñez",
"Orellana",
"Ornelas",
"Orosco",
"Orozco",
"Orta",
"Ortega",
"Ortiz",
"Osorio",
"Otero",
"Ozuna",
"Pabón",
"Pacheco",
"Padilla",
"Padrón",
"Páez",
"Pagan",
"Palacios",
"Palomino",
"Palomo",
"Pantoja",
"Paredes",
"Parra",
"Partida",
"Patiño",
"Paz",
"Pedraza",
"Pedroza",
"Pelayo",
"Peña",
"Perales",
"Peralta",
"Perea",
"Peres",
"Pérez",
"Pichardo",
"Pineda",
"Piña",
"Pizarro",
"Polanco",
"Ponce",
"Porras",
"Portillo",
"Posada",
"Prado",
"Preciado",
"Prieto",
"Puente",
"Puga",
"Pulido",
"Quesada",
"Quevedo",
"Quezada",
"Quinta",
"Quintairos",
"Quintana",
"Quintanilla",
"Quintero",
"Quintero cruz",
"Quintero de la cruz",
"Quiñones",
"Quiñónez",
"Quiros",
"Quiroz",
"Rael",
"Ramírez",
"Ramón",
"Ramos",
"Rangel",
"Rascón",
"Raya",
"Razo",
"Regalado",
"Rendón",
"Rentería",
"Reséndez",
"Reyes",
"Reyna",
"Reynoso",
"Rico",
"Rincón",
"Riojas",
"Ríos",
"Rivas",
"Rivera",
"Rivero",
"Robledo",
"Robles",
"Rocha",
"Rodarte",
"Rodrígez",
"Rodríguez",
"Rodríquez",
"Rojas",
"Rojo",
"Roldán",
"Rolón",
"Romero",
"Romo",
"Roque",
"Rosado",
"Rosales",
"Rosario",
"Rosas",
"Roybal",
"Rubio",
"Ruelas",
"Ruiz",
"Saavedra",
"Sáenz",
"Saiz",
"Salas",
"Salazar",
"Salcedo",
"Salcido",
"Saldaña",
"Saldivar",
"Salgado",
"Salinas",
"Samaniego",
"Sanabria",
"Sanches",
"Sánchez",
"Sandoval",
"Santacruz",
"Santana",
"Santiago",
"Santillán",
"Sarabia",
"Sauceda",
"Saucedo",
"Sedillo",
"Segovia",
"Segura",
"Sepúlveda",
"Serna",
"Serrano",
"Serrato",
"Sevilla",
"Sierra",
"Sisneros",
"Solano",
"Solís",
"Soliz",
"Solorio",
"Solorzano",
"Soria",
"Sosa",
"Sotelo",
"Soto",
"Suárez",
"Tafoya",
"Tamayo",
"Tamez",
"Tapia",
"Tejada",
"Tejeda",
"Téllez",
"Tello",
"Terán",
"Terrazas",
"Tijerina",
"Tirado",
"Toledo",
"Toro",
"Torres",
"Tórrez",
"Tovar",
"Trejo",
"Treviño",
"Trujillo",
"Ulibarri",
"Ulloa",
"Urbina",
"Ureña",
"Urías",
"Uribe",
"Urrutia",
"Vaca",
"Valadez",
"Valdés",
"Valdez",
"Valdivia",
"Valencia",
"Valentín",
"Valenzuela",
"Valladares",
"Valle",
"Vallejo",
"Valles",
"Valverde",
"Vanegas",
"Varela",
"Vargas",
"Vásquez",
"Vázquez",
"Vega",
"Vela",
"Velasco",
"Velásquez",
"Velázquez",
"Vélez",
"Véliz",
"Venegas",
"Vera",
"Verdugo",
"Verduzco",
"Vergara",
"Viera",
"Vigil",
"Villa",
"Villagómez",
"Villalobos",
"Villalpando",
"Villanueva",
"Villareal",
"Villarreal",
"Villaseñor",
"Villegas",
"Xacon",
"Xairo Belmonte",
"Xana",
"Xenia",
"Xiana",
"Xicoy",
"Yago",
"Yami",
"Yanes",
"Yáñez",
"Ybarra",
"Yebra",
"Yunta",
"Zabaleta",
"Zamarreno",
"Zamarripa",
"Zambrana",
"Zambrano",
"Zamora",
"Zamudio",
"Zapata",
"Zaragoza",
"Zarate",
"Zavala",
"Zayas",
"Zelaya",
"Zepeda",
"Zúñiga"
];

},{}],398:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} de #{last_name}",
  "#{suffix} #{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}"
];

},{}],399:[function(require,module,exports){
arguments[4][352][0].apply(exports,arguments)
},{"dup":352}],400:[function(require,module,exports){
module["exports"] = [
  "Jr.",
  "Sr.",
  "I",
  "II",
  "III",
  "IV",
  "V",
  "MD",
  "DDS",
  "PhD",
  "DVM",
  "Ing.",
  "Lic.",
  "Dr.",
  "Mtro."
];

},{}],401:[function(require,module,exports){
 module["exports"] = {
  "descriptor": [
    "Jefe",
    "Senior",
    "Directo",
    "Corporativo",
    "Dinánmico",
    "Futuro",
    "Producto",
    "Nacional",
    "Regional",
    "Distrito",
    "Central",
    "Global",
    "Cliente",
    "Inversor",
    "International",
    "Heredado",
    "Adelante",
    "Interno",
    "Humano",
    "Gerente",
    "SubGerente",
    "Director"
  ],
  "level": [
    "Soluciones",
    "Programa",
    "Marca",
    "Seguridad",
    "Investigación",
    "Marketing",
    "Normas",
    "Implementación",
    "Integración",
    "Funcionalidad",
    "Respuesta",
    "Paradigma",
    "Tácticas",
    "Identidad",
    "Mercados",
    "Grupo",
    "División",
    "Aplicaciones",
    "Optimización",
    "Operaciones",
    "Infraestructura",
    "Intranet",
    "Comunicaciones",
    "Web",
    "Calidad",
    "Seguro",
    "Mobilidad",
    "Cuentas",
    "Datos",
    "Creativo",
    "Configuración",
    "Contabilidad",
    "Interacciones",
    "Factores",
    "Usabilidad",
    "Métricas",
  ],
  "job": [
    "Supervisor",
    "Asociado",
    "Ejecutivo",
    "Relacciones",
    "Oficial",
    "Gerente",
    "Ingeniero",
    "Especialista",
    "Director",
    "Coordinador",
    "Administrador",
    "Arquitecto",
    "Analista",
    "Diseñador",
    "Planificador",
    "Técnico",
    "Funcionario",
    "Desarrollador",
    "Productor",
    "Consultor",
    "Asistente",
    "Facilitador",
    "Agente",
    "Representante",
    "Estratega",
    "Scrum Master",
    "Scrum Owner",
    "Product Owner",
    "Scrum Developer"
  ]
};

},{}],402:[function(require,module,exports){
module["exports"] = [
  "5###-###-###",
  "5##.###.###",
  "5## ### ###",
  "5########"
];

},{}],403:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":402,"dup":83}],404:[function(require,module,exports){
module["exports"] = [
  "hormigas",
   "murciélagos",
   "osos",
   "abejas",
   "pájaros",
   "búfalo",
   "gatos",
   "pollos",
   "ganado",
   "perros",
   "delfines",
   "patos",
   "elefantes",
   "peces",
   "zorros",
   "ranas",
   "gansos",
   "cabras",
   "caballos",
   "canguros",
   "leones",
   "monos",
   "búhos",
   "bueyes",
   "pingüinos",
   "pueblo",
   "cerdos",
   "conejos",
   "ovejas",
   "tigres",
   "ballenas",
   "lobos",
   "cebras",
   "almas en pena",
   "cuervos",
   "gatos negros",
   "quimeras",
   "fantasmas",
   "conspiradores",
   "dragones",
   "enanos",
   "duendes",
   "encantadores",
   "exorcistas",
   "hijos",
   "enemigos",
   "gigantes",
   "gnomos",
   "duendes",
   "gansos",
   "grifos",
   "licántropos",
   "némesis",
   "ogros",
   "oráculos",
   "profetas",
   "hechiceros",
   "arañas",
   "espíritus",
   "vampiros",
   "brujos",
   "zorras",
   "hombres lobo",
   "brujas",
   "adoradores",
   "zombies",
   "druidas"
];

},{}],405:[function(require,module,exports){
arguments[4][218][0].apply(exports,arguments)
},{"./creature":404,"./name":406,"dup":218}],406:[function(require,module,exports){
arguments[4][219][0].apply(exports,arguments)
},{"dup":219}],407:[function(require,module,exports){
var fa = {};
module['exports'] = fa;
fa.title = "Farsi";
fa.name = require("./name");

},{"./name":409}],408:[function(require,module,exports){
module["exports"] = [
  "آبان دخت",
  "آبتین",
  "آتوسا",
  "آفر",
  "آفره دخت",
  "آذرنوش‌",
  "آذین",
  "آراه",
  "آرزو",
  "آرش",
  "آرتین",
  "آرتام",
  "آرتمن",
  "آرشام",
  "آرمان",
  "آرمین",
  "آرمیتا",
  "آریا فر",
  "آریا",
  "آریا مهر",
  "آرین",
  "آزاده",
  "آزرم",
  "آزرمدخت",
  "آزیتا",
  "آناهیتا",
  "آونگ",
  "آهو",
  "آیدا",
  "اتسز",
  "اختر",
  "ارد",
  "ارد شیر",
  "اردوان",
  "ارژن",
  "ارژنگ",
  "ارسلان",
  "ارغوان",
  "ارمغان",
  "ارنواز",
  "اروانه",
  "استر",
  "اسفندیار",
  "اشکان",
  "اشکبوس",
  "افسانه",
  "افسون",
  "افشین",
  "امید",
  "انوش (‌ آنوشا )",
  "انوشروان",
  "اورنگ",
  "اوژن",
  "اوستا",
  "اهورا",
  "ایاز",
  "ایران",
  "ایراندخت",
  "ایرج",
  "ایزدیار",
  "بابک",
  "باپوک",
  "باربد",
  "بارمان",
  "بامداد",
  "بامشاد",
  "بانو",
  "بختیار",
  "برانوش",
  "بردیا",
  "برزو",
  "برزویه",
  "برزین",
  "برمک",
  "بزرگمهر",
  "بنفشه",
  "بوژان",
  "بویان",
  "بهار",
  "بهارک",
  "بهاره",
  "بهتاش",
  "بهداد",
  "بهرام",
  "بهدیس",
  "بهرخ",
  "بهرنگ",
  "بهروز",
  "بهزاد",
  "بهشاد",
  "بهمن",
  "بهناز",
  "بهنام",
  "بهنود",
  "بهنوش",
  "بیتا",
  "بیژن",
  "پارسا",
  "پاکان",
  "پاکتن",
  "پاکدخت",
  "پانته آ",
  "پدرام",
  "پرتو",
  "پرشنگ",
  "پرتو",
  "پرستو",
  "پرویز",
  "پردیس",
  "پرهام",
  "پژمان",
  "پژوا",
  "پرنیا",
  "پشنگ",
  "پروانه",
  "پروین",
  "پری",
  "پریچهر",
  "پریدخت",
  "پریسا",
  "پرناز",
  "پریوش",
  "پریا",
  "پوپک",
  "پوران",
  "پوراندخت",
  "پوریا",
  "پولاد",
  "پویا",
  "پونه",
  "پیام",
  "پیروز",
  "پیمان",
  "تابان",
  "تاباندخت",
  "تاجی",
  "تارا",
  "تاویار",
  "ترانه",
  "تناز",
  "توران",
  "توراندخت",
  "تورج",
  "تورتک",
  "توفان",
  "توژال",
  "تیر داد",
  "تینا",
  "تینو",
  "جابان",
  "جامین",
  "جاوید",
  "جریره",
  "جمشید",
  "جوان",
  "جویا",
  "جهان",
  "جهانبخت",
  "جهانبخش",
  "جهاندار",
  "جهانگیر",
  "جهان بانو",
  "جهاندخت",
  "جهان ناز",
  "جیران",
  "چابک",
  "چالاک",
  "چاوش",
  "چترا",
  "چوبین",
  "چهرزاد",
  "خاوردخت",
  "خداداد",
  "خدایار",
  "خرم",
  "خرمدخت",
  "خسرو",
  "خشایار",
  "خورشید",
  "دادمهر",
  "دارا",
  "داراب",
  "داریا",
  "داریوش",
  "دانوش",
  "داور‌",
  "دایان",
  "دریا",
  "دل آرا",
  "دل آویز",
  "دلارام",
  "دل انگیز",
  "دلبر",
  "دلبند",
  "دلربا",
  "دلشاد",
  "دلکش",
  "دلناز",
  "دلنواز",
  "دورشاسب",
  "دنیا",
  "دیااکو",
  "دیانوش",
  "دیبا",
  "دیبا دخت",
  "رابو",
  "رابین",
  "رادبانو",
  "رادمان",
  "رازبان",
  "راژانه",
  "راسا",
  "رامتین",
  "رامش",
  "رامشگر",
  "رامونا",
  "رامیار",
  "رامیلا",
  "رامین",
  "راویار",
  "رژینا",
  "رخپاک",
  "رخسار",
  "رخشانه",
  "رخشنده",
  "رزمیار",
  "رستم",
  "رکسانا",
  "روبینا",
  "رودابه",
  "روزبه",
  "روشنک",
  "روناک",
  "رهام",
  "رهی",
  "ریبار",
  "راسپینا",
  "زادبخت",
  "زاد به",
  "زاد چهر",
  "زاد فر",
  "زال",
  "زادماسب",
  "زاوا",
  "زردشت",
  "زرنگار",
  "زری",
  "زرین",
  "زرینه",
  "زمانه",
  "زونا",
  "زیبا",
  "زیبار",
  "زیما",
  "زینو",
  "ژاله",
  "ژالان",
  "ژیار",
  "ژینا",
  "ژیوار",
  "سارا",
  "سارک",
  "سارنگ",
  "ساره",
  "ساسان",
  "ساغر",
  "سام",
  "سامان",
  "سانا",
  "ساناز",
  "سانیار",
  "ساویز",
  "ساهی",
  "ساینا",
  "سایه",
  "سپنتا",
  "سپند",
  "سپهر",
  "سپهرداد",
  "سپیدار",
  "سپید بانو",
  "سپیده",
  "ستاره",
  "ستی",
  "سرافراز",
  "سرور",
  "سروش",
  "سرور",
  "سوبا",
  "سوبار",
  "سنبله",
  "سودابه",
  "سوری",
  "سورن",
  "سورنا",
  "سوزان",
  "سوزه",
  "سوسن",
  "سومار",
  "سولان",
  "سولماز",
  "سوگند",
  "سهراب",
  "سهره",
  "سهند",
  "سیامک",
  "سیاوش",
  "سیبوبه ‌",
  "سیما",
  "سیمدخت",
  "سینا",
  "سیمین",
  "سیمین دخت",
  "شاپرک",
  "شادی",
  "شادمهر",
  "شاران",
  "شاهپور",
  "شاهدخت",
  "شاهرخ",
  "شاهین",
  "شاهیندخت",
  "شایسته",
  "شباهنگ",
  "شب بو",
  "شبدیز",
  "شبنم",
  "شراره",
  "شرمین",
  "شروین",
  "شکوفه",
  "شکفته",
  "شمشاد",
  "شمین",
  "شوان",
  "شمیلا",
  "شورانگیز",
  "شوری",
  "شهاب",
  "شهبار",
  "شهباز",
  "شهبال",
  "شهپر",
  "شهداد",
  "شهرآرا",
  "شهرام",
  "شهربانو",
  "شهرزاد",
  "شهرناز",
  "شهرنوش",
  "شهره",
  "شهریار",
  "شهرزاد",
  "شهلا",
  "شهنواز",
  "شهین",
  "شیبا",
  "شیدا",
  "شیده",
  "شیردل",
  "شیرزاد",
  "شیرنگ",
  "شیرو",
  "شیرین دخت",
  "شیما",
  "شینا",
  "شیرین",
  "شیوا",
  "طوس",
  "طوطی",
  "طهماسب",
  "طهمورث",
  "غوغا",
  "غنچه",
  "فتانه",
  "فدا",
  "فراز",
  "فرامرز",
  "فرانک",
  "فراهان",
  "فربد",
  "فربغ",
  "فرجاد",
  "فرخ",
  "فرخ پی",
  "فرخ داد",
  "فرخ رو",
  "فرخ زاد",
  "فرخ لقا",
  "فرخ مهر",
  "فرداد",
  "فردیس",
  "فرین",
  "فرزاد",
  "فرزام",
  "فرزان",
  "فرزانه",
  "فرزین",
  "فرشاد",
  "فرشته",
  "فرشید",
  "فرمان",
  "فرناز",
  "فرنگیس",
  "فرنود",
  "فرنوش",
  "فرنیا",
  "فروتن",
  "فرود",
  "فروز",
  "فروزان",
  "فروزش",
  "فروزنده",
  "فروغ",
  "فرهاد",
  "فرهنگ",
  "فرهود",
  "فربار",
  "فریبا",
  "فرید",
  "فریدخت",
  "فریدون",
  "فریمان",
  "فریناز",
  "فرینوش",
  "فریوش",
  "فیروز",
  "فیروزه",
  "قابوس",
  "قباد",
  "قدسی",
  "کابان",
  "کابوک",
  "کارا",
  "کارو",
  "کاراکو",
  "کامبخت",
  "کامبخش",
  "کامبیز",
  "کامجو",
  "کامدین",
  "کامران",
  "کامراوا",
  "کامک",
  "کامنوش",
  "کامیار",
  "کانیار",
  "کاووس",
  "کاوه",
  "کتایون",
  "کرشمه",
  "کسری",
  "کلاله",
  "کمبوجیه",
  "کوشا",
  "کهبد",
  "کهرام",
  "کهزاد",
  "کیارش",
  "کیان",
  "کیانا",
  "کیانچهر",
  "کیاندخت",
  "کیانوش",
  "کیاوش",
  "کیخسرو",
  "کیقباد",
  "کیکاووس",
  "کیوان",
  "کیوان دخت",
  "کیومرث",
  "کیهان",
  "کیاندخت",
  "کیهانه",
  "گرد آفرید",
  "گردان",
  "گرشا",
  "گرشاسب",
  "گرشین",
  "گرگین",
  "گزل",
  "گشتاسب",
  "گشسب",
  "گشسب بانو",
  "گل",
  "گل آذین",
  "گل آرا‌",
  "گلاره",
  "گل افروز",
  "گلاله",
  "گل اندام",
  "گلاویز",
  "گلباد",
  "گلبار",
  "گلبام",
  "گلبان",
  "گلبانو",
  "گلبرگ",
  "گلبو",
  "گلبهار",
  "گلبیز",
  "گلپاره",
  "گلپر",
  "گلپری",
  "گلپوش",
  "گل پونه",
  "گلچین",
  "گلدخت",
  "گلدیس",
  "گلربا",
  "گلرخ",
  "گلرنگ",
  "گلرو",
  "گلشن",
  "گلریز",
  "گلزاد",
  "گلزار",
  "گلسا",
  "گلشید",
  "گلنار",
  "گلناز",
  "گلنسا",
  "گلنواز",
  "گلنوش",
  "گلی",
  "گودرز",
  "گوماتو",
  "گهر چهر",
  "گوهر ناز",
  "گیتی",
  "گیسو",
  "گیلدا",
  "گیو",
  "لادن",
  "لاله",
  "لاله رخ",
  "لاله دخت",
  "لبخند",
  "لقاء",
  "لومانا",
  "لهراسب",
  "مارال",
  "ماری",
  "مازیار",
  "ماکان",
  "مامک",
  "مانا",
  "ماندانا",
  "مانوش",
  "مانی",
  "مانیا",
  "ماهان",
  "ماهاندخت",
  "ماه برزین",
  "ماه جهان",
  "ماهچهر",
  "ماهدخت",
  "ماهور",
  "ماهرخ",
  "ماهزاد",
  "مردآویز",
  "مرداس",
  "مرزبان",
  "مرمر",
  "مزدک",
  "مژده",
  "مژگان",
  "مستان",
  "مستانه",
  "مشکاندخت",
  "مشکناز",
  "مشکین دخت",
  "منیژه",
  "منوچهر",
  "مهبانو",
  "مهبد",
  "مه داد",
  "مهتاب",
  "مهدیس",
  "مه جبین",
  "مه دخت",
  "مهر آذر",
  "مهر آرا",
  "مهر آسا",
  "مهر آفاق",
  "مهر افرین",
  "مهرآب",
  "مهرداد",
  "مهر افزون",
  "مهرام",
  "مهران",
  "مهراندخت",
  "مهراندیش",
  "مهرانفر",
  "مهرانگیز",
  "مهرداد",
  "مهر دخت",
  "مهرزاده ‌",
  "مهرناز",
  "مهرنوش",
  "مهرنکار",
  "مهرنیا",
  "مهروز",
  "مهری",
  "مهریار",
  "مهسا",
  "مهستی",
  "مه سیما",
  "مهشاد",
  "مهشید",
  "مهنام",
  "مهناز",
  "مهنوش",
  "مهوش",
  "مهیار",
  "مهین",
  "مهین دخت",
  "میترا",
  "میخک",
  "مینا",
  "مینا دخت",
  "مینو",
  "مینودخت",
  "مینو فر",
  "نادر",
  "ناز آفرین",
  "نازبانو",
  "نازپرور",
  "نازچهر",
  "نازفر",
  "نازلی",
  "نازی",
  "نازیدخت",
  "نامور",
  "ناهید",
  "ندا",
  "نرسی",
  "نرگس",
  "نرمک",
  "نرمین",
  "نریمان",
  "نسترن",
  "نسرین",
  "نسرین دخت",
  "نسرین نوش",
  "نکیسا",
  "نگار",
  "نگاره",
  "نگارین",
  "نگین",
  "نوا",
  "نوش",
  "نوش آذر",
  "نوش آور",
  "نوشا",
  "نوش آفرین",
  "نوشدخت",
  "نوشروان",
  "نوشفر",
  "نوشناز",
  "نوشین",
  "نوید",
  "نوین",
  "نوین دخت",
  "نیش ا",
  "نیک بین",
  "نیک پی",
  "نیک چهر",
  "نیک خواه",
  "نیکداد",
  "نیکدخت",
  "نیکدل",
  "نیکزاد",
  "نیلوفر",
  "نیما",
  "وامق",
  "ورجاوند",
  "وریا",
  "وشمگیر",
  "وهرز",
  "وهسودان",
  "ویدا",
  "ویس",
  "ویشتاسب",
  "ویگن",
  "هژیر",
  "هخامنش",
  "هربد( هیربد )",
  "هرمز",
  "همایون",
  "هما",
  "همادخت",
  "همدم",
  "همراز",
  "همراه",
  "هنگامه",
  "هوتن",
  "هور",
  "هورتاش",
  "هورچهر",
  "هورداد",
  "هوردخت",
  "هورزاد",
  "هورمند",
  "هوروش",
  "هوشنگ",
  "هوشیار",
  "هومان",
  "هومن",
  "هونام",
  "هویدا",
  "هیتاسب",
  "هیرمند",
  "هیما",
  "هیوا",
  "یادگار",
  "یاسمن ( یاسمین )",
  "یاشار",
  "یاور",
  "یزدان",
  "یگانه",
  "یوشیتا"
];

},{}],409:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");

},{"./first_name":408,"./last_name":410,"./prefix":411}],410:[function(require,module,exports){
module["exports"] = [
  "عارف",
  "عاشوری",
  "عالی",
  "عبادی",
  "عبدالکریمی",
  "عبدالملکی",
  "عراقی",
  "عزیزی",
  "عصار",
  "عقیلی",
  "علم",
  "علم‌الهدی",
  "علی عسگری",
  "علی‌آبادی",
  "علیا",
  "علی‌پور",
  "علی‌زمانی",
  "عنایت",
  "غضنفری",
  "غنی",
  "فارسی",
  "فاطمی",
  "فانی",
  "فتاحی",
  "فرامرزی",
  "فرج",
  "فرشیدورد",
  "فرمانفرمائیان",
  "فروتن",
  "فرهنگ",
  "فریاد",
  "فنایی",
  "فنی‌زاده",
  "فولادوند",
  "فهمیده",
  "قاضی",
  "قانعی",
  "قانونی",
  "قمیشی",
  "قنبری",
  "قهرمان",
  "قهرمانی",
  "قهرمانیان",
  "قهستانی",
  "کاشی",
  "کاکاوند",
  "کامکار",
  "کاملی",
  "کاویانی",
  "کدیور",
  "کردبچه",
  "کرمانی",
  "کریمی",
  "کلباسی",
  "کمالی",
  "کوشکی",
  "کهنمویی",
  "کیان",
  "کیانی (نام خانوادگی)",
  "کیمیایی",
  "گل محمدی",
  "گلپایگانی",
  "گنجی",
  "لاجوردی",
  "لاچینی",
  "لاهوتی",
  "لنکرانی",
  "لوکس",
  "مجاهد",
  "مجتبایی",
  "مجتبوی",
  "مجتهد شبستری",
  "مجتهدی",
  "مجرد",
  "محجوب",
  "محجوبی",
  "محدثی",
  "محمدرضایی",
  "محمدی",
  "مددی",
  "مرادخانی",
  "مرتضوی",
  "مستوفی",
  "مشا",
  "مصاحب",
  "مصباح",
  "مصباح‌زاده",
  "مطهری",
  "مظفر",
  "معارف",
  "معروف",
  "معین",
  "مفتاح",
  "مفتح",
  "مقدم",
  "ملایری",
  "ملک",
  "ملکیان",
  "منوچهری",
  "موحد",
  "موسوی",
  "موسویان",
  "مهاجرانی",
  "مهدی‌پور",
  "میرباقری",
  "میردامادی",
  "میرزاده",
  "میرسپاسی",
  "میزبانی",
  "ناظری",
  "نامور",
  "نجفی",
  "ندوشن",
  "نراقی",
  "نعمت‌زاده",
  "نقدی",
  "نقیب‌زاده",
  "نواب",
  "نوبخت",
  "نوبختی",
  "نهاوندی",
  "نیشابوری",
  "نیلوفری",
  "واثقی",
  "واعظ",
  "واعظ‌زاده",
  "واعظی",
  "وکیلی",
  "هاشمی",
  "هاشمی رفسنجانی",
  "هاشمیان",
  "هامون",
  "هدایت",
  "هراتی",
  "هروی",
  "همایون",
  "همت",
  "همدانی",
  "هوشیار",
  "هومن",
  "یاحقی",
  "یادگار",
  "یثربی",
  "یلدا"
];

},{}],411:[function(require,module,exports){
module["exports"] = [
  "آقای",
  "خانم",
  "دکتر"
];

},{}],412:[function(require,module,exports){
module["exports"] = [
  "####",
  "###",
  "##",
  "#"
];

},{}],413:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"dup":85}],414:[function(require,module,exports){
module["exports"] = [
  "Paris",
  "Marseille",
  "Lyon",
  "Toulouse",
  "Nice",
  "Nantes",
  "Strasbourg",
  "Montpellier",
  "Bordeaux",
  "Lille13",
  "Rennes",
  "Reims",
  "Le Havre",
  "Saint-Étienne",
  "Toulon",
  "Grenoble",
  "Dijon",
  "Angers",
  "Saint-Denis",
  "Villeurbanne",
  "Le Mans",
  "Aix-en-Provence",
  "Brest",
  "Nîmes",
  "Limoges",
  "Clermont-Ferrand",
  "Tours",
  "Amiens",
  "Metz",
  "Perpignan",
  "Besançon",
  "Orléans",
  "Boulogne-Billancourt",
  "Mulhouse",
  "Rouen",
  "Caen",
  "Nancy",
  "Saint-Denis",
  "Saint-Paul",
  "Montreuil",
  "Argenteuil",
  "Roubaix",
  "Dunkerque14",
  "Tourcoing",
  "Nanterre",
  "Avignon",
  "Créteil",
  "Poitiers",
  "Fort-de-France",
  "Courbevoie",
  "Versailles",
  "Vitry-sur-Seine",
  "Colombes",
  "Pau",
  "Aulnay-sous-Bois",
  "Asnières-sur-Seine",
  "Rueil-Malmaison",
  "Saint-Pierre",
  "Antibes",
  "Saint-Maur-des-Fossés",
  "Champigny-sur-Marne",
  "La Rochelle",
  "Aubervilliers",
  "Calais",
  "Cannes",
  "Le Tampon",
  "Béziers",
  "Colmar",
  "Bourges",
  "Drancy",
  "Mérignac",
  "Saint-Nazaire",
  "Valence",
  "Ajaccio",
  "Issy-les-Moulineaux",
  "Villeneuve-d'Ascq",
  "Levallois-Perret",
  "Noisy-le-Grand",
  "Quimper",
  "La Seyne-sur-Mer",
  "Antony",
  "Troyes",
  "Neuilly-sur-Seine",
  "Sarcelles",
  "Les Abymes",
  "Vénissieux",
  "Clichy",
  "Lorient",
  "Pessac",
  "Ivry-sur-Seine",
  "Cergy",
  "Cayenne",
  "Niort",
  "Chambéry",
  "Montauban",
  "Saint-Quentin",
  "Villejuif",
  "Hyères",
  "Beauvais",
  "Cholet"
];

},{}],415:[function(require,module,exports){
module["exports"] = [
  "France"
];

},{}],416:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.building_number = require("./building_number");
address.street_prefix = require("./street_prefix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.city_name = require("./city_name");
address.city = require("./city");
address.street_suffix = require("./street_suffix");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":412,"./city":413,"./city_name":414,"./default_country":415,"./postcode":417,"./secondary_address":418,"./state":419,"./street_address":420,"./street_name":421,"./street_prefix":422,"./street_suffix":423}],417:[function(require,module,exports){
arguments[4][327][0].apply(exports,arguments)
},{"dup":327}],418:[function(require,module,exports){
module["exports"] = [
  "Apt. ###",
  "# étage"
];

},{}],419:[function(require,module,exports){
module["exports"] = [
  "Alsace",
  "Aquitaine",
  "Auvergne",
  "Basse-Normandie",
  "Bourgogne",
  "Bretagne",
  "Centre",
  "Champagne-Ardenne",
  "Corse",
  "Franche-Comté",
  "Haute-Normandie",
  "Île-de-France",
  "Languedoc-Roussillon",
  "Limousin",
  "Lorraine",
  "Midi-Pyrénées",
  "Nord-Pas-de-Calais",
  "Pays de la Loire",
  "Picardie",
  "Poitou-Charentes",
  "Provence-Alpes-Côte d'Azur",
  "Rhône-Alpes"
];

},{}],420:[function(require,module,exports){
arguments[4][146][0].apply(exports,arguments)
},{"dup":146}],421:[function(require,module,exports){
module["exports"] = [
  "#{street_prefix} #{street_suffix}"
];

},{}],422:[function(require,module,exports){
module["exports"] = [
  "Allée, Voie",
  "Rue",
  "Avenue",
  "Boulevard",
  "Quai",
  "Passage",
  "Impasse",
  "Place"
];

},{}],423:[function(require,module,exports){
module["exports"] = [
  "de l'Abbaye",
  "Adolphe Mille",
  "d'Alésia",
  "d'Argenteuil",
  "d'Assas",
  "du Bac",
  "de Paris",
  "La Boétie",
  "Bonaparte",
  "de la Bûcherie",
  "de Caumartin",
  "Charlemagne",
  "du Chat-qui-Pêche",
  "de la Chaussée-d'Antin",
  "du Dahomey",
  "Dauphine",
  "Delesseux",
  "du Faubourg Saint-Honoré",
  "du Faubourg-Saint-Denis",
  "de la Ferronnerie",
  "des Francs-Bourgeois",
  "des Grands Augustins",
  "de la Harpe",
  "du Havre",
  "de la Huchette",
  "Joubert",
  "Laffitte",
  "Lepic",
  "des Lombards",
  "Marcadet",
  "Molière",
  "Monsieur-le-Prince",
  "de Montmorency",
  "Montorgueil",
  "Mouffetard",
  "de Nesle",
  "Oberkampf",
  "de l'Odéon",
  "d'Orsel",
  "de la Paix",
  "des Panoramas",
  "Pastourelle",
  "Pierre Charron",
  "de la Pompe",
  "de Presbourg",
  "de Provence",
  "de Richelieu",
  "de Rivoli",
  "des Rosiers",
  "Royale",
  "d'Abbeville",
  "Saint-Honoré",
  "Saint-Bernard",
  "Saint-Denis",
  "Saint-Dominique",
  "Saint-Jacques",
  "Saint-Séverin",
  "des Saussaies",
  "de Seine",
  "de Solférino",
  "Du Sommerard",
  "de Tilsitt",
  "Vaneau",
  "de Vaugirard",
  "de la Victoire",
  "Zadkine"
];

},{}],424:[function(require,module,exports){
arguments[4][164][0].apply(exports,arguments)
},{"dup":164}],425:[function(require,module,exports){
arguments[4][165][0].apply(exports,arguments)
},{"dup":165}],426:[function(require,module,exports){
arguments[4][166][0].apply(exports,arguments)
},{"dup":166}],427:[function(require,module,exports){
arguments[4][167][0].apply(exports,arguments)
},{"dup":167}],428:[function(require,module,exports){
arguments[4][168][0].apply(exports,arguments)
},{"dup":168}],429:[function(require,module,exports){
arguments[4][169][0].apply(exports,arguments)
},{"./adjective":424,"./bs_adjective":425,"./bs_noun":426,"./bs_verb":427,"./descriptor":428,"./name":430,"./noun":431,"./suffix":432,"dup":169}],430:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name} et #{Name.last_name}"
];

},{}],431:[function(require,module,exports){
arguments[4][171][0].apply(exports,arguments)
},{"dup":171}],432:[function(require,module,exports){
module["exports"] = [
  "SARL",
  "SA",
  "EURL",
  "SAS",
  "SEM",
  "SCOP",
  "GIE",
  "EI"
];

},{}],433:[function(require,module,exports){
var fr = {};
module['exports'] = fr;
fr.title = "French";
fr.address = require("./address");
fr.company = require("./company");
fr.internet = require("./internet");
fr.lorem = require("./lorem");
fr.name = require("./name");
fr.phone_number = require("./phone_number");

},{"./address":416,"./company":429,"./internet":436,"./lorem":437,"./name":441,"./phone_number":447}],434:[function(require,module,exports){
module["exports"] = [
  "com",
  "fr",
  "eu",
  "info",
  "name",
  "net",
  "org"
];

},{}],435:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.fr",
  "hotmail.fr"
];

},{}],436:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./domain_suffix":434,"./free_email":435,"dup":73}],437:[function(require,module,exports){
arguments[4][203][0].apply(exports,arguments)
},{"./supplemental":438,"./words":439,"dup":203}],438:[function(require,module,exports){
arguments[4][204][0].apply(exports,arguments)
},{"dup":204}],439:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"dup":75}],440:[function(require,module,exports){
module["exports"] = [
  "Enzo",
  "Lucas",
  "Mathis",
  "Nathan",
  "Thomas",
  "Hugo",
  "Théo",
  "Tom",
  "Louis",
  "Raphaël",
  "Clément",
  "Léo",
  "Mathéo",
  "Maxime",
  "Alexandre",
  "Antoine",
  "Yanis",
  "Paul",
  "Baptiste",
  "Alexis",
  "Gabriel",
  "Arthur",
  "Jules",
  "Ethan",
  "Noah",
  "Quentin",
  "Axel",
  "Evan",
  "Mattéo",
  "Romain",
  "Valentin",
  "Maxence",
  "Noa",
  "Adam",
  "Nicolas",
  "Julien",
  "Mael",
  "Pierre",
  "Rayan",
  "Victor",
  "Mohamed",
  "Adrien",
  "Kylian",
  "Sacha",
  "Benjamin",
  "Léa",
  "Clara",
  "Manon",
  "Chloé",
  "Camille",
  "Ines",
  "Sarah",
  "Jade",
  "Lola",
  "Anaïs",
  "Lucie",
  "Océane",
  "Lilou",
  "Marie",
  "Eva",
  "Romane",
  "Lisa",
  "Zoe",
  "Julie",
  "Mathilde",
  "Louise",
  "Juliette",
  "Clémence",
  "Célia",
  "Laura",
  "Lena",
  "Maëlys",
  "Charlotte",
  "Ambre",
  "Maeva",
  "Pauline",
  "Lina",
  "Jeanne",
  "Lou",
  "Noémie",
  "Justine",
  "Louna",
  "Elisa",
  "Alice",
  "Emilie",
  "Carla",
  "Maëlle",
  "Alicia",
  "Mélissa"
];

},{}],441:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.title = require("./title");
name.name = require("./name");

},{"./first_name":440,"./last_name":442,"./name":443,"./prefix":444,"./title":445}],442:[function(require,module,exports){
module["exports"] = [
  "Martin",
  "Bernard",
  "Dubois",
  "Thomas",
  "Robert",
  "Richard",
  "Petit",
  "Durand",
  "Leroy",
  "Moreau",
  "Simon",
  "Laurent",
  "Lefebvre",
  "Michel",
  "Garcia",
  "David",
  "Bertrand",
  "Roux",
  "Vincent",
  "Fournier",
  "Morel",
  "Girard",
  "Andre",
  "Lefevre",
  "Mercier",
  "Dupont",
  "Lambert",
  "Bonnet",
  "Francois",
  "Martinez",
  "Legrand",
  "Garnier",
  "Faure",
  "Rousseau",
  "Blanc",
  "Guerin",
  "Muller",
  "Henry",
  "Roussel",
  "Nicolas",
  "Perrin",
  "Morin",
  "Mathieu",
  "Clement",
  "Gauthier",
  "Dumont",
  "Lopez",
  "Fontaine",
  "Chevalier",
  "Robin",
  "Masson",
  "Sanchez",
  "Gerard",
  "Nguyen",
  "Boyer",
  "Denis",
  "Lemaire",
  "Duval",
  "Joly",
  "Gautier",
  "Roger",
  "Roche",
  "Roy",
  "Noel",
  "Meyer",
  "Lucas",
  "Meunier",
  "Jean",
  "Perez",
  "Marchand",
  "Dufour",
  "Blanchard",
  "Marie",
  "Barbier",
  "Brun",
  "Dumas",
  "Brunet",
  "Schmitt",
  "Leroux",
  "Colin",
  "Fernandez",
  "Pierre",
  "Renard",
  "Arnaud",
  "Rolland",
  "Caron",
  "Aubert",
  "Giraud",
  "Leclerc",
  "Vidal",
  "Bourgeois",
  "Renaud",
  "Lemoine",
  "Picard",
  "Gaillard",
  "Philippe",
  "Leclercq",
  "Lacroix",
  "Fabre",
  "Dupuis",
  "Olivier",
  "Rodriguez",
  "Da silva",
  "Hubert",
  "Louis",
  "Charles",
  "Guillot",
  "Riviere",
  "Le gall",
  "Guillaume",
  "Adam",
  "Rey",
  "Moulin",
  "Gonzalez",
  "Berger",
  "Lecomte",
  "Menard",
  "Fleury",
  "Deschamps",
  "Carpentier",
  "Julien",
  "Benoit",
  "Paris",
  "Maillard",
  "Marchal",
  "Aubry",
  "Vasseur",
  "Le roux",
  "Renault",
  "Jacquet",
  "Collet",
  "Prevost",
  "Poirier",
  "Charpentier",
  "Royer",
  "Huet",
  "Baron",
  "Dupuy",
  "Pons",
  "Paul",
  "Laine",
  "Carre",
  "Breton",
  "Remy",
  "Schneider",
  "Perrot",
  "Guyot",
  "Barre",
  "Marty",
  "Cousin"
];

},{}],443:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{last_name} #{first_name}"
];

},{}],444:[function(require,module,exports){
module["exports"] = [
  "M",
  "Mme",
  "Mlle",
  "Dr",
  "Prof"
];

},{}],445:[function(require,module,exports){
module["exports"] = {
  "job": [
    "Superviseur",
    "Executif",
    "Manager",
    "Ingenieur",
    "Specialiste",
    "Directeur",
    "Coordinateur",
    "Administrateur",
    "Architecte",
    "Analyste",
    "Designer",
    "Technicien",
    "Developpeur",
    "Producteur",
    "Consultant",
    "Assistant",
    "Agent",
    "Stagiaire"
  ]
};

},{}],446:[function(require,module,exports){
module["exports"] = [
  "01########",
  "02########",
  "03########",
  "04########",
  "05########",
  "06########",
  "07########",
  "+33 1########",
  "+33 2########",
  "+33 3########",
  "+33 4########",
  "+33 5########",
  "+33 6########",
  "+33 7########"
];

},{}],447:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":446,"dup":83}],448:[function(require,module,exports){
arguments[4][240][0].apply(exports,arguments)
},{"dup":240}],449:[function(require,module,exports){
arguments[4][274][0].apply(exports,arguments)
},{"./default_country":448,"./postcode":450,"./state":451,"./state_abbr":452,"dup":274}],450:[function(require,module,exports){
arguments[4][242][0].apply(exports,arguments)
},{"dup":242}],451:[function(require,module,exports){
module["exports"] = [
  "Alberta",
  "Colombie-Britannique",
  "Manitoba",
  "Nouveau-Brunswick",
  "Terre-Neuve-et-Labrador",
  "Nouvelle-Écosse",
  "Territoires du Nord-Ouest",
  "Nunavut",
  "Ontario",
  "Île-du-Prince-Édouard",
  "Québec",
  "Saskatchewan",
  "Yukon"
];

},{}],452:[function(require,module,exports){
module["exports"] = [
  "AB",
  "BC",
  "MB",
  "NB",
  "NL",
  "NS",
  "NU",
  "NT",
  "ON",
  "PE",
  "QC",
  "SK",
  "YK"
];

},{}],453:[function(require,module,exports){
var fr_CA = {};
module['exports'] = fr_CA;
fr_CA.title = "Canada (French)";
fr_CA.address = require("./address");
fr_CA.internet = require("./internet");
fr_CA.phone_number = require("./phone_number");

},{"./address":449,"./internet":456,"./phone_number":458}],454:[function(require,module,exports){
module["exports"] = [
  "qc.ca",
  "ca",
  "com",
  "biz",
  "info",
  "name",
  "net",
  "org"
];

},{}],455:[function(require,module,exports){
arguments[4][247][0].apply(exports,arguments)
},{"dup":247}],456:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./domain_suffix":454,"./free_email":455,"dup":73}],457:[function(require,module,exports){
module["exports"] = [
  "### ###-####",
  "1 ### ###-####",
  "### ###-####, poste ###"
];

},{}],458:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":457,"dup":83}],459:[function(require,module,exports){
module["exports"] = [
  "###",
  "##",
  "#"
];

},{}],460:[function(require,module,exports){
module["exports"] = [
  "#{city_prefix} #{Name.first_name}#{city_suffix}",
  "#{city_prefix} #{Name.first_name}",
  "#{Name.first_name}#{city_suffix}",
  "#{Name.first_name}#{city_suffix}",
  "#{Name.last_name}#{city_suffix}",
  "#{Name.last_name}#{city_suffix}"
];

},{}],461:[function(require,module,exports){
module["exports"] = [
  "აბასთუმანი",
  "აბაშა",
  "ადიგენი",
  "ამბროლაური",
  "ანაკლია",
  "ასპინძა",
  "ახალგორი",
  "ახალქალაქი",
  "ახალციხე",
  "ახმეტა",
  "ბათუმი",
  "ბაკურიანი",
  "ბაღდათი",
  "ბახმარო",
  "ბოლნისი",
  "ბორჯომი",
  "გარდაბანი",
  "გონიო",
  "გორი",
  "გრიგოლეთი",
  "გუდაური",
  "გურჯაანი",
  "დედოფლისწყარო",
  "დმანისი",
  "დუშეთი",
  "ვანი",
  "ზესტაფონი",
  "ზუგდიდი",
  "თბილისი",
  "თეთრიწყარო",
  "თელავი",
  "თერჯოლა",
  "თიანეთი",
  "კასპი",
  "კვარიათი",
  "კიკეთი",
  "კოჯორი",
  "ლაგოდეხი",
  "ლანჩხუთი",
  "ლენტეხი",
  "მარნეული",
  "მარტვილი",
  "მესტია",
  "მცხეთა",
  "მწვანე კონცხი",
  "ნინოწმინდა",
  "ოზურგეთი",
  "ონი",
  "რუსთავი",
  "საგარეჯო",
  "საგურამო",
  "საირმე",
  "სამტრედია",
  "სარფი",
  "საჩხერე",
  "სენაკი",
  "სიღნაღი",
  "სტეფანწმინდა",
  "სურამი",
  "ტაბახმელა",
  "ტყიბული",
  "ურეკი",
  "ფოთი",
  "ქარელი",
  "ქედა",
  "ქობულეთი",
  "ქუთაისი",
  "ყვარელი",
  "შუახევი",
  "ჩაქვი",
  "ჩოხატაური",
  "ცაგერი",
  "ცხოროჭყუ",
  "წავკისი",
  "წალენჯიხა",
  "წალკა",
  "წაღვერი",
  "წეროვანი",
  "წნორი",
  "წყალტუბო",
  "წყნეთი",
  "ჭიათურა",
  "ხარაგაული",
  "ხაშური",
  "ხელვაჩაური",
  "ხობი",
  "ხონი",
  "ხულო"
];

},{}],462:[function(require,module,exports){
module["exports"] = [
  "ახალი",
  "ძველი",
  "ზემო",
  "ქვემო"
];

},{}],463:[function(require,module,exports){
module["exports"] = [
  "სოფელი",
  "ძირი",
  "სკარი",
  "დაბა"
];

},{}],464:[function(require,module,exports){
module["exports"] = [
  "ავსტრალია",
  "ავსტრია",
  "ავღანეთი",
  "აზავადი",
  "აზერბაიჯანი",
  "აზიაში",
  "აზიის",
  "ალბანეთი",
  "ალჟირი",
  "ამაღლება და ტრისტანი-და-კუნია",
  "ამერიკის ვირჯინიის კუნძულები",
  "ამერიკის სამოა",
  "ამერიკის შეერთებული შტატები",
  "ამერიკის",
  "ანგილია",
  "ანგოლა",
  "ანდორა",
  "ანტიგუა და ბარბუდა",
  "არაბეთის საემიროები",
  "არაბთა გაერთიანებული საამიროები",
  "არაბული ქვეყნების ლიგის",
  "არგენტინა",
  "არუბა",
  "არცნობილი ქვეყნების სია",
  "აფრიკაში",
  "აფრიკაშია",
  "აღდგომის კუნძული",
  "აღმ. ტიმორი",
  "აღმოსავლეთი აფრიკა",
  "აღმოსავლეთი ტიმორი",
  "აშშ",
  "აშშ-ის ვირჯინის კუნძულები",
  "ახალი ზელანდია",
  "ახალი კალედონია",
  "ბანგლადეში",
  "ბარბადოსი",
  "ბაჰამის კუნძულები",
  "ბაჰრეინი",
  "ბელარუსი",
  "ბელგია",
  "ბელიზი",
  "ბენინი",
  "ბერმუდა",
  "ბერმუდის კუნძულები",
  "ბოლივია",
  "ბოსნია და ჰერცეგოვინა",
  "ბოტსვანა",
  "ბრაზილია",
  "ბრიტანეთის ვირჯინიის კუნძულები",
  "ბრიტანეთის ვირჯინის კუნძულები",
  "ბრიტანეთის ინდოეთის ოკეანის ტერიტორია",
  "ბრუნეი",
  "ბულგარეთი",
  "ბურკინა ფასო",
  "ბურკინა-ფასო",
  "ბურუნდი",
  "ბჰუტანი",
  "გაბონი",
  "გაერთიანებული სამეფო",
  "გაეროს",
  "გაიანა",
  "გამბია",
  "განა",
  "გერმანია",
  "გვადელუპა",
  "გვატემალა",
  "გვინეა",
  "გვინეა-ბისაუ",
  "გიბრალტარი",
  "გრენადა",
  "გრენლანდია",
  "გუამი",
  "დამოკიდებული ტერ.",
  "დამოკიდებული ტერიტორია",
  "დამოკიდებული",
  "დანია",
  "დასავლეთი აფრიკა",
  "დასავლეთი საჰარა",
  "დიდი ბრიტანეთი",
  "დომინიკა",
  "დომინიკელთა რესპუბლიკა",
  "ეგვიპტე",
  "ევროკავშირის",
  "ევროპასთან",
  "ევროპაშია",
  "ევროპის ქვეყნები",
  "ეთიოპია",
  "ეკვადორი",
  "ეკვატორული გვინეა",
  "ეპარსეს კუნძული",
  "ერაყი",
  "ერიტრეა",
  "ესპანეთი",
  "ესპანეთის სუვერენული ტერიტორიები",
  "ესტონეთი",
  "ეშმორის და კარტიეს კუნძულები",
  "ვანუატუ",
  "ვატიკანი",
  "ვენესუელა",
  "ვიეტნამი",
  "ზამბია",
  "ზიმბაბვე",
  "თურქეთი",
  "თურქმენეთი",
  "იამაიკა",
  "იან მაიენი",
  "იაპონია",
  "იემენი",
  "ინდოეთი",
  "ინდონეზია",
  "იორდანია",
  "ირანი",
  "ირლანდია",
  "ისლანდია",
  "ისრაელი",
  "იტალია",
  "კაბო-ვერდე",
  "კაიმანის კუნძულები",
  "კამბოჯა",
  "კამერუნი",
  "კანადა",
  "კანარის კუნძულები",
  "კარიბის ზღვის",
  "კატარი",
  "კენია",
  "კვიპროსი",
  "კინგმენის რიფი",
  "კირიბატი",
  "კლიპერტონი",
  "კოლუმბია",
  "კომორი",
  "კომორის კუნძულები",
  "კონგოს დემოკრატიული რესპუბლიკა",
  "კონგოს რესპუბლიკა",
  "კორეის რესპუბლიკა",
  "კოსტა-რიკა",
  "კოტ-დ’ივუარი",
  "კუბა",
  "კუკის კუნძულები",
  "ლაოსი",
  "ლატვია",
  "ლესოთო",
  "ლიბანი",
  "ლიბერია",
  "ლიბია",
  "ლიტვა",
  "ლიხტენშტაინი",
  "ლუქსემბურგი",
  "მადაგასკარი",
  "მადეირა",
  "მავრიკი",
  "მავრიტანია",
  "მაიოტა",
  "მაკაო",
  "მაკედონია",
  "მალავი",
  "მალაიზია",
  "მალდივი",
  "მალდივის კუნძულები",
  "მალი",
  "მალტა",
  "მაროკო",
  "მარტინიკა",
  "მარშალის კუნძულები",
  "მარჯნის ზღვის კუნძულები",
  "მელილია",
  "მექსიკა",
  "მიანმარი",
  "მიკრონეზია",
  "მიკრონეზიის ფედერაციული შტატები",
  "მიმდებარე კუნძულები",
  "მოზამბიკი",
  "მოლდოვა",
  "მონაკო",
  "მონსერატი",
  "მონღოლეთი",
  "ნამიბია",
  "ნაურუ",
  "ნაწილობრივ აფრიკაში",
  "ნეპალი",
  "ნიგერი",
  "ნიგერია",
  "ნიდერლანდი",
  "ნიდერლანდის ანტილები",
  "ნიკარაგუა",
  "ნიუე",
  "ნორვეგია",
  "ნორფოლკის კუნძული",
  "ოკეანეთის",
  "ოკეანიას",
  "ომანი",
  "პაკისტანი",
  "პალაუ",
  "პალესტინა",
  "პალმირა (ატოლი)",
  "პანამა",
  "პანტელერია",
  "პაპუა-ახალი გვინეა",
  "პარაგვაი",
  "პერუ",
  "პიტკერნის კუნძულები",
  "პოლონეთი",
  "პორტუგალია",
  "პრინც-ედუარდის კუნძული",
  "პუერტო-რიკო",
  "რეუნიონი",
  "როტუმა",
  "რუანდა",
  "რუმინეთი",
  "რუსეთი",
  "საბერძნეთი",
  "სადავო ტერიტორიები",
  "სალვადორი",
  "სამოა",
  "სამხ. კორეა",
  "სამხრეთ ამერიკაშია",
  "სამხრეთ ამერიკის",
  "სამხრეთ აფრიკის რესპუბლიკა",
  "სამხრეთი აფრიკა",
  "სამხრეთი გეორგია და სამხრეთ სენდვიჩის კუნძულები",
  "სამხრეთი სუდანი",
  "სან-მარინო",
  "სან-ტომე და პრინსიპი",
  "საუდის არაბეთი",
  "საფრანგეთი",
  "საფრანგეთის გვიანა",
  "საფრანგეთის პოლინეზია",
  "საქართველო",
  "საჰარის არაბთა დემოკრატიული რესპუბლიკა",
  "სეიშელის კუნძულები",
  "სენ-ბართელმი",
  "სენ-მარტენი",
  "სენ-პიერი და მიკელონი",
  "სენეგალი",
  "სენტ-ვინსენტი და გრენადინები",
  "სენტ-კიტსი და ნევისი",
  "სენტ-ლუსია",
  "სერბეთი",
  "სეუტა",
  "სვაზილენდი",
  "სვალბარდი",
  "სიერა-ლეონე",
  "სინგაპური",
  "სირია",
  "სლოვაკეთი",
  "სლოვენია",
  "სოკოტრა",
  "სოლომონის კუნძულები",
  "სომალი",
  "სომალილენდი",
  "სომხეთი",
  "სუდანი",
  "სუვერენული სახელმწიფოები",
  "სურინამი",
  "ტაივანი",
  "ტაილანდი",
  "ტანზანია",
  "ტაჯიკეთი",
  "ტერიტორიები",
  "ტერქსისა და კაიკოსის კუნძულები",
  "ტოგო",
  "ტოკელაუ",
  "ტონგა",
  "ტრანსკონტინენტური ქვეყანა",
  "ტრინიდადი და ტობაგო",
  "ტუვალუ",
  "ტუნისი",
  "უგანდა",
  "უზბეკეთი",
  "უკრაინა",
  "უნგრეთი",
  "უოლისი და ფუტუნა",
  "ურუგვაი",
  "ფარერის კუნძულები",
  "ფილიპინები",
  "ფინეთი",
  "ფიჯი",
  "ფოლკლენდის კუნძულები",
  "ქვეყნები",
  "ქოქოსის კუნძულები",
  "ქუვეითი",
  "ღაზის სექტორი",
  "ყაზახეთი",
  "ყირგიზეთი",
  "შვედეთი",
  "შვეიცარია",
  "შობის კუნძული",
  "შრი-ლანკა",
  "ჩადი",
  "ჩერნოგორია",
  "ჩეჩნეთის რესპუბლიკა იჩქერია",
  "ჩეხეთი",
  "ჩილე",
  "ჩინეთი",
  "ჩრდ. კორეა",
  "ჩრდილოეთ ამერიკის",
  "ჩრდილოეთ მარიანას კუნძულები",
  "ჩრდილოეთი აფრიკა",
  "ჩრდილოეთი კორეა",
  "ჩრდილოეთი მარიანას კუნძულები",
  "ცენტრალური აფრიკა",
  "ცენტრალური აფრიკის რესპუბლიკა",
  "წევრები",
  "წმინდა ელენე",
  "წმინდა ელენეს კუნძული",
  "ხორვატია",
  "ჯერსი",
  "ჯიბუტი",
  "ჰავაი",
  "ჰაიტი",
  "ჰერდი და მაკდონალდის კუნძულები",
  "ჰონდურასი",
  "ჰონკონგი"
];

},{}],465:[function(require,module,exports){
module["exports"] = [
  "საქართველო"
];

},{}],466:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.city = require("./city");
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.city_name = require("./city_name");
address.street_title = require("./street_title");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":459,"./city":460,"./city_name":461,"./city_prefix":462,"./city_suffix":463,"./country":464,"./default_country":465,"./postcode":467,"./secondary_address":468,"./street_address":469,"./street_name":470,"./street_suffix":471,"./street_title":472}],467:[function(require,module,exports){
module["exports"] = [
  "01##"
];

},{}],468:[function(require,module,exports){
module["exports"] = [
  "კორპ. ##",
  "შენობა ###"
];

},{}],469:[function(require,module,exports){
arguments[4][61][0].apply(exports,arguments)
},{"dup":61}],470:[function(require,module,exports){
module["exports"] = [
  "#{street_title} #{street_suffix}"
];

},{}],471:[function(require,module,exports){
module["exports"] = [
  "გამზ.",
  "გამზირი",
  "ქ.",
  "ქუჩა",
  "ჩიხი",
  "ხეივანი"
];

},{}],472:[function(require,module,exports){
module["exports"] = [
  "აბაშიძის",
  "აბესაძის",
  "აბულაძის",
  "აგლაძის",
  "ადლერის",
  "ავიაქიმიის",
  "ავლაბრის",
  "ათარბეგოვის",
  "ათონელის",
  "ალავერდოვის",
  "ალექსიძის",
  "ალილუევის",
  "ალმასიანის",
  "ამაღლების",
  "ამირეჯიბის",
  "ანაგის",
  "ანდრონიკაშვილის",
  "ანთელავას",
  "ანჯაფარიძის",
  "არაგვის",
  "არდონის",
  "არეშიძის",
  "ასათიანის",
  "ასკურავას",
  "ასლანიდის",
  "ატენის",
  "აფხაზი",
  "აღმაშენებლის",
  "ახალშენის",
  "ახვლედიანის",
  "ბააზოვის",
  "ბაბისხევის",
  "ბაბუშკინის",
  "ბაგრატიონის",
  "ბალანჩივაძეების",
  "ბალანჩივაძის",
  "ბალანჩინის",
  "ბალმაშევის",
  "ბარამიძის",
  "ბარნოვის",
  "ბაშალეიშვილის",
  "ბევრეთის",
  "ბელინსკის",
  "ბელოსტოკის",
  "ბენაშვილის",
  "ბეჟანიშვილის",
  "ბერიძის",
  "ბოლქვაძის",
  "ბოცვაძის",
  "ბოჭორიშვილის",
  "ბოჭორიძის",
  "ბუაჩიძის",
  "ბუდაპეშტის",
  "ბურკიაშვილის",
  "ბურძგლას",
  "გაბესკირიას",
  "გაგარინის",
  "გაზაფხულის",
  "გამრეკელის",
  "გამსახურდიას",
  "გარეჯელის",
  "გეგეჭკორის",
  "გედაურის",
  "გელოვანი",
  "გელოვანის",
  "გერცენის",
  "გლდანის",
  "გოგებაშვილის",
  "გოგიბერიძის",
  "გოგოლის",
  "გონაშვილის",
  "გორგასლის",
  "გრანელის",
  "გრიზოდუბოვას",
  "გრინევიცკის",
  "გრომოვას",
  "გრუზინსკის",
  "გუდიაშვილის",
  "გულრიფშის",
  "გულუას",
  "გურამიშვილის",
  "გურგენიძის",
  "დადიანის",
  "დავითაშვილის",
  "დამაკავშირებელი",
  "დარიალის",
  "დედოფლისწყაროს",
  "დეპუტატის",
  "დიდგორის",
  "დიდი",
  "დიდუბის",
  "დიუმას",
  "დიღმის",
  "დიღომში",
  "დოლიძის",
  "დუნდუას",
  "დურმიშიძის",
  "ელიავას",
  "ენგელსის",
  "ენგურის",
  "ეპისკოპოსის",
  "ერისთავი",
  "ერისთავის",
  "ვაზისუბნის",
  "ვაკელის",
  "ვართაგავას",
  "ვატუტინის",
  "ვაჩნაძის",
  "ვაცეკის",
  "ვეკუას",
  "ვეშაპურის",
  "ვირსალაძის",
  "ვოლოდარსკის",
  "ვორონინის",
  "ზაარბრიუკენის",
  "ზაზიაშვილის",
  "ზაზიშვილის",
  "ზაკომოლდინის",
  "ზანდუკელის",
  "ზაქარაიას",
  "ზაქარიაძის",
  "ზახაროვის",
  "ზაჰესის",
  "ზნაურის",
  "ზურაბაშვილის",
  "ზღვის",
  "თაბუკაშვილის",
  "თავაძის",
  "თავისუფლების",
  "თამარაშვილის",
  "თაქთაქიშვილის",
  "თბილელის",
  "თელიას",
  "თორაძის",
  "თოფურიძის",
  "იალბუზის",
  "იამანიძის",
  "იაშვილის",
  "იბერიის",
  "იერუსალიმის",
  "ივანიძის",
  "ივერიელის",
  "იზაშვილის",
  "ილურიძის",
  "იმედაშვილის",
  "იმედაძის",
  "იმედის",
  "ინანიშვილის",
  "ინგოროყვას",
  "ინდუსტრიალიზაციის",
  "ინჟინრის",
  "ინწკირველის",
  "ირბახის",
  "ირემაშვილის",
  "ისაკაძის",
  "ისპასჰანლის",
  "იტალიის",
  "იუნკერთა",
  "კათალიკოსის",
  "კაიროს",
  "კაკაბაძის",
  "კაკაბეთის",
  "კაკლიანის",
  "კალანდაძის",
  "კალიაევის",
  "კალინინის",
  "კამალოვის",
  "კამოს",
  "კაშენის",
  "კახოვკის",
  "კედიას",
  "კელაპტრიშვილის",
  "კერესელიძის",
  "კეცხოველის",
  "კიბალჩიჩის",
  "კიკნაძის",
  "კიროვის",
  "კობარეთის",
  "კოლექტივიზაციის",
  "კოლმეურნეობის",
  "კოლხეთის",
  "კომკავშირის",
  "კომუნისტური",
  "კონსტიტუციის",
  "კოოპერაციის",
  "კოსტავას",
  "კოტეტიშვილის",
  "კოჩეტკოვის",
  "კოჯრის",
  "კრონშტადტის",
  "კროპოტკინის",
  "კრუპსკაიას",
  "კუიბიშევის",
  "კურნატოვსკის",
  "კურტანოვსკის",
  "კუტუზოვის",
  "ლაღიძის",
  "ლელაშვილის",
  "ლენინაშენის",
  "ლენინგრადის",
  "ლენინის",
  "ლენის",
  "ლეონიძის",
  "ლვოვის",
  "ლორთქიფანიძის",
  "ლოტკინის",
  "ლუბლიანის",
  "ლუბოვსკის",
  "ლუნაჩარსკის",
  "ლუქსემბურგის",
  "მაგნიტოგორსკის",
  "მაზნიაშვილის",
  "მაისურაძის",
  "მამარდაშვილის",
  "მამაცაშვილის",
  "მანაგაძის",
  "მანჯგალაძის",
  "მარის",
  "მარუაშვილის",
  "მარქსის",
  "მარჯანის",
  "მატროსოვის",
  "მაჭავარიანი",
  "მახალდიანის",
  "მახარაძის",
  "მებაღიშვილის",
  "მეგობრობის",
  "მელაანის",
  "მერკვილაძის",
  "მესხიას",
  "მესხის",
  "მეტეხის",
  "მეტრეველი",
  "მეჩნიკოვის",
  "მთავარანგელოზის",
  "მიასნიკოვის",
  "მილორავას",
  "მიმინოშვილის",
  "მიროტაძის",
  "მიქატაძის",
  "მიქელაძის",
  "მონტინის",
  "მორეტის",
  "მოსკოვის",
  "მრევლიშვილის",
  "მუშკორის",
  "მუჯირიშვილის",
  "მშვიდობის",
  "მცხეთის",
  "ნადირაძის",
  "ნაკაშიძის",
  "ნარიმანოვის",
  "ნასიძის",
  "ნაფარეულის",
  "ნეკრასოვის",
  "ნიაღვრის",
  "ნინიძის",
  "ნიშნიანიძის",
  "ობოლაძის",
  "ონიანის",
  "ოჟიოს",
  "ორახელაშვილის",
  "ორბელიანის",
  "ორჯონიკიძის",
  "ოქტომბრის",
  "ოცდაექვსი",
  "პავლოვის",
  "პარალელურის",
  "პარიზის",
  "პეკინის",
  "პეროვსკაიას",
  "პეტეფის",
  "პიონერის",
  "პირველი",
  "პისარევის",
  "პლეხანოვის",
  "პრავდის",
  "პროლეტარიატის",
  "ჟელიაბოვის",
  "ჟვანიას",
  "ჟორდანიას",
  "ჟღენტი",
  "ჟღენტის",
  "რადიანის",
  "რამიშვილი",
  "რასკოვას",
  "რენინგერის",
  "რინგის",
  "რიჟინაშვილის",
  "რობაქიძის",
  "რობესპიერის",
  "რუსის",
  "რუხაძის",
  "რჩეულიშვილის",
  "სააკაძის",
  "საბადურის",
  "საბაშვილის",
  "საბურთალოს",
  "საბჭოს",
  "საგურამოს",
  "სამრეკლოს",
  "სამღერეთის",
  "სანაკოევის",
  "სარაჯიშვილის",
  "საჯაიას",
  "სევასტოპოლის",
  "სერგი",
  "სვანიძის",
  "სვერდლოვის",
  "სტახანოვის",
  "სულთნიშნის",
  "სურგულაძის",
  "სხირტლაძის",
  "ტაბიძის",
  "ტატიშვილის",
  "ტელმანის",
  "ტერევერკოს",
  "ტეტელაშვილის",
  "ტოვსტონოგოვის",
  "ტოროშელიძის",
  "ტრაქტორის",
  "ტრიკოტაჟის",
  "ტურბინის",
  "უბილავას",
  "უბინაშვილის",
  "უზნაძის",
  "უკლებას",
  "ულიანოვის",
  "ურიდიას",
  "ფაბრიციუსის",
  "ფაღავას",
  "ფერისცვალების",
  "ფიგნერის",
  "ფიზკულტურის",
  "ფიოლეტოვის",
  "ფიფიების",
  "ფოცხიშვილის",
  "ქართველიშვილის",
  "ქართლელიშვილის",
  "ქინქლაძის",
  "ქიქოძის",
  "ქსოვრელის",
  "ქუთათელაძის",
  "ქუთათელის",
  "ქურდიანის",
  "ღოღობერიძის",
  "ღუდუშაურის",
  "ყავლაშვილის",
  "ყაზბეგის",
  "ყარყარაშვილის",
  "ყიფიანის",
  "ყუშიტაშვილის",
  "შანიძის",
  "შარტავას",
  "შატილოვის",
  "შაუმიანის",
  "შენგელაიას",
  "შერვაშიძის",
  "შეროზიას",
  "შირშოვის",
  "შმიდტის",
  "შრომის",
  "შუშინის",
  "შჩორსის",
  "ჩალაუბნის",
  "ჩანტლაძის",
  "ჩაპაევის",
  "ჩაჩავას",
  "ჩელუსკინელების",
  "ჩერნიახოვსკის",
  "ჩერქეზიშვილი",
  "ჩერქეზიშვილის",
  "ჩვიდმეტი",
  "ჩიტაიას",
  "ჩიტაძის",
  "ჩიქვანაიას",
  "ჩიქობავას",
  "ჩიხლაძის",
  "ჩოდრიშვილის",
  "ჩოლოყაშვილის",
  "ჩუღურეთის",
  "ცაბაძის",
  "ცაგარელის",
  "ცეტკინის",
  "ცინცაძის",
  "ცისკარიშვილის",
  "ცურტაველის",
  "ცქიტიშვილის",
  "ცხაკაიას",
  "ძმობის",
  "ძნელაძის",
  "წერეთლის",
  "წითელი",
  "წითელწყაროს",
  "წინამძღვრიშვილის",
  "წულაძის",
  "წულუკიძის",
  "ჭაბუკიანის",
  "ჭავჭავაძის",
  "ჭანტურიას",
  "ჭოველიძის",
  "ჭონქაძის",
  "ჭყონდიდელის",
  "ხანძთელის",
  "ხვამლის",
  "ხვინგიას",
  "ხვიჩიას",
  "ხიმშიაშვილის",
  "ხმელნიცკის",
  "ხორნაბუჯის",
  "ხრამჰესის",
  "ხუციშვილის",
  "ჯავახიშვილის",
  "ჯაფარიძის",
  "ჯიბლაძის",
  "ჯორჯიაშვილის"
];

},{}],473:[function(require,module,exports){
module["exports"] = [
  "(+995 32) 2-##-##-##",
  "032-2-##-##-##",
  "032-2-######",
  "032-2-###-###",
  "032 2 ## ## ##",
  "032 2 ######",
  "2 ## ## ##",
  "2######",
  "2 ### ###"
];

},{}],474:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"./formats":473,"dup":65}],475:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.prefix = require("./prefix");
company.suffix = require("./suffix");
company.name = require("./name");

},{"./name":476,"./prefix":477,"./suffix":478}],476:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{Name.first_name}",
  "#{prefix} #{Name.last_name}",
  "#{prefix} #{Name.last_name} #{suffix}",
  "#{prefix} #{Name.first_name} #{suffix}",
  "#{prefix} #{Name.last_name}-#{Name.last_name}"
];

},{}],477:[function(require,module,exports){
module["exports"] = [
  "შპს",
  "სს",
  "ააიპ",
  "სსიპ"
];

},{}],478:[function(require,module,exports){
module["exports"] = [
  "ჯგუფი",
  "და კომპანია",
  "სტუდია",
  "გრუპი"
];

},{}],479:[function(require,module,exports){
var ge = {};
module['exports'] = ge;
ge.title = "Georgian";
ge.separator = " და ";
ge.name = require("./name");
ge.address = require("./address");
ge.internet = require("./internet");
ge.company = require("./company");
ge.phone_number = require("./phone_number");
ge.cell_phone = require("./cell_phone");

},{"./address":466,"./cell_phone":474,"./company":475,"./internet":482,"./name":484,"./phone_number":490}],480:[function(require,module,exports){
module["exports"] = [
  "ge",
  "com",
  "net",
  "org",
  "com.ge",
  "org.ge"
];

},{}],481:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.com",
  "posta.ge"
];

},{}],482:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./domain_suffix":480,"./free_email":481,"dup":73}],483:[function(require,module,exports){
module["exports"] = [
  "აგული",
  "აგუნა",
  "ადოლა",
  "ავთანდილ",
  "ავთო",
  "აკაკი",
  "აკო",
  "ალეკო",
  "ალექსანდრე",
  "ალექსი",
  "ალიო",
  "ამირან",
  "ანა",
  "ანანო",
  "ანზორ",
  "ანნა",
  "ანუკა",
  "ანუკი",
  "არჩილ",
  "ასკილა",
  "ასლანაზ",
  "აჩიკო",
  "ბადრი",
  "ბაია",
  "ბარბარე",
  "ბაქარ",
  "ბაჩა",
  "ბაჩანა",
  "ბაჭუა",
  "ბაჭუკი",
  "ბახვა",
  "ბელა",
  "ბერა",
  "ბერდია",
  "ბესიკ",
  "ბესიკ",
  "ბესო",
  "ბექა",
  "ბიძინა",
  "ბიჭიკო",
  "ბოჩია",
  "ბოცო",
  "ბროლა",
  "ბუბუ",
  "ბუდუ",
  "ბუხუტი",
  "გაგა",
  "გაგი",
  "გახა",
  "გეგა",
  "გეგი",
  "გედია",
  "გელა",
  "გენადი",
  "გვადი",
  "გვანცა",
  "გვანჯი",
  "გვიტია",
  "გვრიტა",
  "გია",
  "გიგა",
  "გიგი",
  "გიგილო",
  "გიგლა",
  "გიგოლი",
  "გივი",
  "გივიკო",
  "გიორგი",
  "გოგი",
  "გოგიტა",
  "გოგიჩა",
  "გოგოთურ",
  "გოგოლა",
  "გოდერძი",
  "გოლა",
  "გოჩა",
  "გრიგოლ",
  "გუგა",
  "გუგუ",
  "გუგულა",
  "გუგული",
  "გუგუნა",
  "გუკა",
  "გულარისა",
  "გულვარდი",
  "გულვარდისა",
  "გულთამზე",
  "გულია",
  "გულიკო",
  "გულისა",
  "გულნარა",
  "გურამ",
  "დავით",
  "დალი",
  "დარეჯან",
  "დიანა",
  "დიმიტრი",
  "დოდო",
  "დუტუ",
  "ეთერ",
  "ეთო",
  "ეკა",
  "ეკატერინე",
  "ელგუჯა",
  "ელენა",
  "ელენე",
  "ელზა",
  "ელიკო",
  "ელისო",
  "ემზარ",
  "ეშხა",
  "ვალენტინა",
  "ვალერი",
  "ვანო",
  "ვაჟა",
  "ვაჟა",
  "ვარდო",
  "ვარსკვლავისა",
  "ვასიკო",
  "ვასილ",
  "ვატო",
  "ვახო",
  "ვახტანგ",
  "ვენერა",
  "ვერა",
  "ვერიკო",
  "ზაზა",
  "ზაირა",
  "ზაურ",
  "ზეზვა",
  "ზვიად",
  "ზინა",
  "ზოია",
  "ზუკა",
  "ზურა",
  "ზურაბ",
  "ზურია",
  "ზურიკო",
  "თაზო",
  "თათა",
  "თათია",
  "თათული",
  "თაია",
  "თაკო",
  "თალიკო",
  "თამაზ",
  "თამარ",
  "თამარა",
  "თამთა",
  "თამთიკე",
  "თამი",
  "თამილა",
  "თამრიკო",
  "თამრო",
  "თამუნა",
  "თამჩო",
  "თანანა",
  "თანდილა",
  "თაყა",
  "თეა",
  "თებრონე",
  "თეიმურაზ",
  "თემურ",
  "თენგიზ",
  "თენგო",
  "თეონა",
  "თიკა",
  "თიკო",
  "თიკუნა",
  "თინა",
  "თინათინ",
  "თინიკო",
  "თმაგიშერა",
  "თორნიკე",
  "თუთა",
  "თუთია",
  "ია",
  "იათამზე",
  "იამზე",
  "ივანე",
  "ივერი",
  "ივქირიონ",
  "იზოლდა",
  "ილია",
  "ილიკო",
  "იმედა",
  "ინგა",
  "იოსებ",
  "ირაკლი",
  "ირინა",
  "ირინე",
  "ირინკა",
  "ირმა",
  "იური",
  "კაკო",
  "კალე",
  "კატო",
  "კახა",
  "კახაბერ",
  "კეკელა",
  "კესანე",
  "კესო",
  "კვირია",
  "კიტა",
  "კობა",
  "კოკა",
  "კონსტანტინე",
  "კოსტა",
  "კოტე",
  "კუკური",
  "ლადო",
  "ლალი",
  "ლამაზა",
  "ლამარა",
  "ლამზირა",
  "ლაშა",
  "ლევან",
  "ლეილა",
  "ლელა",
  "ლენა",
  "ლერწამისა",
  "ლექსო",
  "ლია",
  "ლიანა",
  "ლიზა",
  "ლიზიკო",
  "ლილე",
  "ლილი",
  "ლილიკო",
  "ლომია",
  "ლუიზა",
  "მაგული",
  "მადონა",
  "მათიკო",
  "მაია",
  "მაიკო",
  "მაისა",
  "მაკა",
  "მაკო",
  "მაკუნა",
  "მალხაზ",
  "მამამზე",
  "მამია",
  "მამისა",
  "მამისთვალი",
  "მამისიმედი",
  "მამუკა",
  "მამულა",
  "მანანა",
  "მანჩო",
  "მარადი",
  "მარი",
  "მარია",
  "მარიამი",
  "მარიკა",
  "მარინა",
  "მარინე",
  "მარიტა",
  "მაყვალა",
  "მაყვალა",
  "მაშიკო",
  "მაშო",
  "მაცაცო",
  "მგელია",
  "მგელიკა",
  "მედეა",
  "მეკაშო",
  "მელანო",
  "მერაბ",
  "მერი",
  "მეტია",
  "მზაღო",
  "მზევინარ",
  "მზეთამზე",
  "მზეთვალა",
  "მზეონა",
  "მზექალა",
  "მზეხა",
  "მზეხათუნი",
  "მზია",
  "მზირა",
  "მზისადარ",
  "მზისთანადარი",
  "მზიულა",
  "მთვარისა",
  "მინდია",
  "მიშა",
  "მიშიკო",
  "მიხეილ",
  "მნათობი",
  "მნათობისა",
  "მოგელი",
  "მონავარდისა",
  "მურმან",
  "მუხრან",
  "ნაზი",
  "ნაზიკო",
  "ნათელა",
  "ნათია",
  "ნაირა",
  "ნანა",
  "ნანი",
  "ნანიკო",
  "ნანუკა",
  "ნანული",
  "ნარგიზი",
  "ნასყიდა",
  "ნატალია",
  "ნატო",
  "ნელი",
  "ნენე",
  "ნესტან",
  "ნია",
  "ნიაკო",
  "ნიკა",
  "ნიკოლოზ",
  "ნინა",
  "ნინაკა",
  "ნინი",
  "ნინიკო",
  "ნინო",
  "ნინუკა",
  "ნინუცა",
  "ნოდარ",
  "ნოდო",
  "ნონა",
  "ნორა",
  "ნუგზარ",
  "ნუგო",
  "ნუკა",
  "ნუკი",
  "ნუკრი",
  "ნუნუ",
  "ნუნუ",
  "ნუნუკა",
  "ნუცა",
  "ნუცი",
  "ოთარ",
  "ოთია",
  "ოთო",
  "ომარ",
  "ორბელ",
  "ოტია",
  "ოქროპირ",
  "პაატა",
  "პაპუნა",
  "პატარკაცი",
  "პატარქალი",
  "პეპელა",
  "პირვარდისა",
  "პირიმზე",
  "ჟამიერა",
  "ჟამიტა",
  "ჟამუტა",
  "ჟუჟუნა",
  "რამაზ",
  "რევაზ",
  "რეზი",
  "რეზო",
  "როზა",
  "რომან",
  "რუსკა",
  "რუსუდან",
  "საბა",
  "სალი",
  "სალომე",
  "სანათა",
  "სანდრო",
  "სერგო",
  "სესია",
  "სეხნია",
  "სვეტლანა",
  "სიხარულა",
  "სოსო",
  "სოფიკო",
  "სოფიო",
  "სოფო",
  "სულა",
  "სულიკო",
  "ტარიელ",
  "ტასიკო",
  "ტასო",
  "ტატიანა",
  "ტატო",
  "ტეტია",
  "ტურია",
  "უმანკო",
  "უტა",
  "უჩა",
  "ფაქიზო",
  "ფაცია",
  "ფეფელა",
  "ფეფენა",
  "ფეფიკო",
  "ფეფო",
  "ფოსო",
  "ფოფო",
  "ქაბატო",
  "ქავთარი",
  "ქალია",
  "ქართლოს",
  "ქეთათო",
  "ქეთევან",
  "ქეთი",
  "ქეთინო",
  "ქეთო",
  "ქველი",
  "ქიტესა",
  "ქიშვარდი",
  "ქობული",
  "ქრისტესია",
  "ქტისტეფორე",
  "ქურციკა",
  "ღარიბა",
  "ღვთისავარი",
  "ღვთისია",
  "ღვთისო",
  "ღვინია",
  "ღუღუნა",
  "ყაითამზა",
  "ყაყიტა",
  "ყვარყვარე",
  "ყიასა",
  "შაბური",
  "შაკო",
  "შალვა",
  "შალიკო",
  "შანშე",
  "შარია",
  "შაქარა",
  "შაქრო",
  "შოთა",
  "შორენა",
  "შოშია",
  "შუქია",
  "ჩიორა",
  "ჩიტო",
  "ჩიტო",
  "ჩოყოლა",
  "ცაგო",
  "ცაგული",
  "ცანგალა",
  "ცარო",
  "ცაცა",
  "ცაცო",
  "ციალა",
  "ციკო",
  "ცინარა",
  "ცირა",
  "ცისანა",
  "ცისია",
  "ცისკარა",
  "ცისკარი",
  "ცისმარა",
  "ცისმარი",
  "ციური",
  "ციცი",
  "ციცია",
  "ციცინო",
  "ცოტნე",
  "ცოქალა",
  "ცუცა",
  "ცხვარი",
  "ძაბული",
  "ძამისა",
  "ძაღინა",
  "ძიძია",
  "წათე",
  "წყალობა",
  "ჭაბუკა",
  "ჭიაბერ",
  "ჭიკჭიკა",
  "ჭიჭია",
  "ჭიჭიკო",
  "ჭოლა",
  "ხათუნა",
  "ხარება",
  "ხატია",
  "ხახულა",
  "ხახუტა",
  "ხეჩუა",
  "ხვიჩა",
  "ხიზანა",
  "ხირხელა",
  "ხობელასი",
  "ხოხია",
  "ხოხიტა",
  "ხუტა",
  "ხუცია",
  "ჯაბა",
  "ჯავახი",
  "ჯარჯი",
  "ჯემალ",
  "ჯონდო",
  "ჯოტო",
  "ჯუბი",
  "ჯულიეტა",
  "ჯუმბერ",
  "ჰამლეტ"
];

},{}],484:[function(require,module,exports){
arguments[4][441][0].apply(exports,arguments)
},{"./first_name":483,"./last_name":485,"./name":486,"./prefix":487,"./title":488,"dup":441}],485:[function(require,module,exports){
module["exports"] = [
  "აბაზაძე",
  "აბაშიძე",
  "აბრამაშვილი",
  "აბუსერიძე",
  "აბშილავა",
  "ავაზნელი",
  "ავალიშვილი",
  "ამილახვარი",
  "ანთაძე",
  "ასლამაზიშვილი",
  "ასპანიძე",
  "აშკარელი",
  "ახალბედაშვილი",
  "ახალკაცი",
  "ახვლედიანი",
  "ბარათაშვილი",
  "ბარდაველიძე",
  "ბახტაძე",
  "ბედიანიძე",
  "ბერიძე",
  "ბერუაშვილი",
  "ბეჟანიშვილი",
  "ბოგველიშვილი",
  "ბოტკოველი",
  "გაბრიჩიძე",
  "გაგნიძე",
  "გამრეკელი",
  "გელაშვილი",
  "გზირიშვილი",
  "გიგაური",
  "გურამიშვილი",
  "გურგენიძე",
  "დადიანი",
  "დავითიშვილი",
  "დათუაშვილი",
  "დარბაისელი",
  "დეკანოიძე",
  "დვალი",
  "დოლაბერიძე",
  "ედიშერაშვილი",
  "ელიზბარაშვილი",
  "ელიოზაშვილი",
  "ერისთავი",
  "ვარამაშვილი",
  "ვარდიაშვილი",
  "ვაჩნაძე",
  "ვარდანიძე",
  "ველიაშვილი",
  "ველიჯანაშვილი",
  "ზარანდია",
  "ზარიძე",
  "ზედგინიძე",
  "ზუბიაშვილი",
  "თაბაგარი",
  "თავდგირიძე",
  "თათარაშვილი",
  "თამაზაშვილი",
  "თამარაშვილი",
  "თაქთაქიშვილი",
  "თაყაიშვილი",
  "თბილელი",
  "თუხარელი",
  "იაშვილი",
  "იგითხანიშვილი",
  "ინასარიძე",
  "იშხნელი",
  "კანდელაკი",
  "კაცია",
  "კერესელიძე",
  "კვირიკაშვილი",
  "კიკნაძე",
  "კლდიაშვილი",
  "კოვზაძე",
  "კოპაძე",
  "კოპტონაშვილი",
  "კოშკელაშვილი",
  "ლაბაძე",
  "ლეკიშვილი",
  "ლიქოკელი",
  "ლოლაძე",
  "ლურსმანაშვილი",
  "მაისურაძე",
  "მარტოლეკი",
  "მაღალაძე",
  "მახარაშვილი",
  "მგალობლიშვილი",
  "მეგრელიშვილი",
  "მელაშვილი",
  "მელიქიძე",
  "მერაბიშვილი",
  "მეფარიშვილი",
  "მუჯირი",
  "მჭედლიძე",
  "მხეიძე",
  "ნათაძე",
  "ნაჭყებია",
  "ნოზაძე",
  "ოდიშვილი",
  "ონოფრიშვილი",
  "პარეხელაშვილი",
  "პეტრიაშვილი",
  "სააკაძე",
  "სააკაშვილი",
  "საგინაშვილი",
  "სადუნიშვილი",
  "საძაგლიშვილი",
  "სებისკვერიძე",
  "სეთური",
  "სუთიაშვილი",
  "სულაშვილი",
  "ტაბაღუა",
  "ტყეშელაშვილი",
  "ულუმბელაშვილი",
  "უნდილაძე",
  "ქავთარაძე",
  "ქართველიშვილი",
  "ყაზბეგი",
  "ყაუხჩიშვილი",
  "შავლაშვილი",
  "შალიკაშვილი",
  "შონია",
  "ჩიბუხაშვილი",
  "ჩიხრაძე",
  "ჩიქოვანი",
  "ჩუბინიძე",
  "ჩოლოყაშვილი",
  "ჩოხელი",
  "ჩხვიმიანი",
  "ცალუღელაშვილი",
  "ცაძიკიძე",
  "ციციშვილი",
  "ციხელაშვილი",
  "ციხისთავი",
  "ცხოვრებაძე",
  "ცხომარია",
  "წამალაიძე",
  "წერეთელი",
  "წიკლაური",
  "წიფურია",
  "ჭაბუკაშვილი",
  "ჭავჭავაძე",
  "ჭანტურია",
  "ჭარელიძე",
  "ჭიორელი",
  "ჭუმბურიძე",
  "ხაბაზი",
  "ხარაძე",
  "ხარატიშვილი",
  "ხარატასშვილი",
  "ხარისჭირაშვილი",
  "ხარხელაური",
  "ხაშმელაშვილი",
  "ხეთაგური",
  "ხიზამბარელი",
  "ხიზანიშვილი",
  "ხიმშიაშვილი",
  "ხოსრუაშვილი",
  "ხოჯივანიშვილი",
  "ხუციშვილი",
  "ჯაბადარი",
  "ჯავახი",
  "ჯავახიშვილი",
  "ჯანელიძე",
  "ჯაფარიძე",
  "ჯაყელი",
  "ჯაჯანიძე",
  "ჯვარელია",
  "ჯინიუზაშვილი",
  "ჯუღაშვილი"
];

},{}],486:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}"
];

},{}],487:[function(require,module,exports){
module["exports"] = [
  "ბ-ნი",
  "ბატონი",
  "ქ-ნი",
  "ქალბატონი"
];

},{}],488:[function(require,module,exports){
module["exports"] = {
  "descriptor": [
    "გენერალური",
    "მთავარი",
    "სტაჟიორ",
    "უმცროსი",
    "ყოფილი",
    "წამყვანი"
  ],
  "level": [
    "აღრიცხვების",
    "ბრენდინგის",
    "ბრენიდს",
    "ბუღალტერიის",
    "განყოფილების",
    "გაყიდვების",
    "გუნდის",
    "დახმარების",
    "დიზაინის",
    "თავდაცვის",
    "ინფორმაციის",
    "კვლევების",
    "კომუნიკაციების",
    "მარკეტინგის",
    "ოპერაციათა",
    "ოპტიმიზაციების",
    "პიარ",
    "პროგრამის",
    "საქმეთა",
    "ტაქტიკური",
    "უსაფრთხოების",
    "ფინანსთა",
    "ქსელის",
    "ხარისხის",
    "ჯგუფის"
  ],
  "job": [
    "აგენტი",
    "ადვოკატი",
    "ადმინისტრატორი",
    "არქიტექტორი",
    "ასისტენტი",
    "აღმასრულებელი დირექტორი",
    "დეველოპერი",
    "დეკანი",
    "დიზაინერი",
    "დირექტორი",
    "ელექტრიკოსი",
    "ექსპერტი",
    "ინჟინერი",
    "იურისტი",
    "კონსტრუქტორი",
    "კონსულტანტი",
    "კოორდინატორი",
    "ლექტორი",
    "მასაჟისტი",
    "მემანქანე",
    "მენეჯერი",
    "მძღოლი",
    "მწვრთნელი",
    "ოპერატორი",
    "ოფიცერი",
    "პედაგოგი",
    "პოლიციელი",
    "პროგრამისტი",
    "პროდიუსერი",
    "პრორექტორი",
    "ჟურნალისტი",
    "რექტორი",
    "სპეციალისტი",
    "სტრატეგისტი",
    "ტექნიკოსი",
    "ფოტოგრაფი",
    "წარმომადგენელი"
  ]
};

},{}],489:[function(require,module,exports){
module["exports"] = [
  "5##-###-###",
  "5########",
  "5## ## ## ##",
  "5## ######",
  "5## ### ###",
  "995 5##-###-###",
  "995 5########",
  "995 5## ## ## ##",
  "995 5## ######",
  "995 5## ### ###",
  "+995 5##-###-###",
  "+995 5########",
  "+995 5## ## ## ##",
  "+995 5## ######",
  "+995 5## ### ###",
  "(+995) 5##-###-###",
  "(+995) 5########",
  "(+995) 5## ## ## ##",
  "(+995) 5## ######",
  "(+995) 5## ### ###"
];

},{}],490:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":489,"dup":83}],491:[function(require,module,exports){
module["exports"] = [  
  "##",
  "#"
];

},{}],492:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"dup":85}],493:[function(require,module,exports){
module["exports"] = [
  "Airmadidi",
  "Ampana",
  "Amurang",
  "Andolo",
  "Banggai",
  "Bantaeng",
  "Barru",
  "Bau-Bau",
  "Benteng",
  "Bitung",
  "Bolaang Uki",
  "Boroko",
  "Bulukumba",
  "Bungku",
  "Buol",
  "Buranga",
  "Donggala",
  "Enrekang",
  "Gorontalo",
  "Jeneponto",
  "Kawangkoan",
  "Kendari",
  "Kolaka",
  "Kotamobagu",
  "Kota Raha",
  "Kwandang",
  "Lasusua",
  "Luwuk",
  "Majene",
  "Makale",
  "Makassar",
  "Malili",
  "Mamasa",
  "Mamuju",
  "Manado",
  "Marisa",
  "Maros",
  "Masamba",
  "Melonguane",
  "Ondong Siau",
  "Palopo",
  "Palu",
  "Pangkajene",
  "Pare-Pare",
  "Parigi",
  "Pasangkayu",
  "Pinrang",
  "Polewali",
  "Poso",
  "Rantepao",
  "Ratahan",
  "Rumbia",
  "Sengkang",
  "Sidenreng",
  "Sigi Biromaru",
  "Sinjai",
  "Sunggu Minasa",
  "Suwawa",
  "Tahuna",
  "Takalar",
  "Tilamuta",
  "Toli Toli",
  "Tomohon",
  "Tondano",
  "Tutuyan",
  "Unaaha",
  "Wangi Wangi",
  "Wanggudu",
  "Watampone",
  "Watan Soppeng",
  "Ambarawa",
  "Anyer",
  "Bandung",
  "Bangil",
  "Banjar (Jawa Barat)",
  "Banjarnegara",
  "Bangkalan",
  "Bantul",
  "Banyumas",
  "Banyuwangi",
  "Batang",
  "Batu",
  "Bekasi",
  "Blitar",
  "Blora",
  "Bogor",
  "Bojonegoro",
  "Bondowoso",
  "Boyolali",
  "Bumiayu",
  "Brebes",
  "Caruban",
  "Cianjur",
  "Ciamis",
  "Cibinong",
  "Cikampek",
  "Cikarang",
  "Cilacap",
  "Cilegon",
  "Cirebon",
  "Demak",
  "Depok",
  "Garut",
  "Gresik",
  "Indramayu",
  "Jakarta",
  "Jember",
  "Jepara",
  "Jombang",
  "Kajen",
  "Karanganyar",
  "Kebumen",
  "Kediri",
  "Kendal",
  "Kepanjen",
  "Klaten",
  "Pelabuhan Ratu",
  "Kraksaan",
  "Kudus",
  "Kuningan",
  "Lamongan",
  "Lumajang",
  "Madiun",
  "Magelang",
  "Magetan",
  "Majalengka",
  "Malang",
  "Mojokerto",
  "Mojosari",
  "Mungkid",
  "Ngamprah",
  "Nganjuk",
  "Ngawi",
  "Pacitan",
  "Pamekasan",
  "Pandeglang",
  "Pare",
  "Pati",
  "Pasuruan",
  "Pekalongan",
  "Pemalang",
  "Ponorogo",
  "Probolinggo",
  "Purbalingga",
  "Purwakarta",
  "Purwodadi",
  "Purwokerto",
  "Purworejo",
  "Rangkasbitung",
  "Rembang",
  "Salatiga",
  "Sampang",
  "Semarang",
  "Serang",
  "Sidayu",
  "Sidoarjo",
  "Singaparna",
  "Situbondo",
  "Slawi",
  "Sleman",
  "Soreang",
  "Sragen",
  "Subang",
  "Sukabumi",
  "Sukoharjo",
  "Sumber",
  "Sumedang",
  "Sumenep",
  "Surabaya",
  "Surakarta",
  "Tasikmalaya",
  "Tangerang",
  "Tangerang Selatan",
  "Tegal",
  "Temanggung",
  "Tigaraksa",
  "Trenggalek",
  "Tuban",
  "Tulungagung",
  "Ungaran",
  "Wates",
  "Wlingi",
  "Wonogiri",
  "Wonosari",
  "Wonosobo",
  "Yogyakarta",
  "Atambua",
  "Baa",
  "Badung",
  "Bajawa",
  "Bangli",
  "Bima",
  "Denpasar",
  "Dompu",
  "Ende",
  "Gianyar",
  "Kalabahi",
  "Karangasem",
  "Kefamenanu",
  "Klungkung",
  "Kupang",
  "Labuhan Bajo",
  "Larantuka",
  "Lewoleba",
  "Maumere",
  "Mataram",
  "Mbay",
  "Negara",
  "Praya",
  "Raba",
  "Ruteng",
  "Selong",
  "Singaraja",
  "Soe",
  "Sumbawa Besar",
  "Tabanan",
  "Taliwang",
  "Tambolaka",
  "Tanjung",
  "Waibakul",
  "Waikabubak",
  "Waingapu",
  "Denpasar",
  "Negara,Bali",
  "Singaraja",
  "Tabanan",
  "Bangli"
];
},{}],494:[function(require,module,exports){
module["exports"] = [
  "Indonesia"
];

},{}],495:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.building_number = require("./building_number");
address.postcode = require("./postcode");
address.state = require("./state");
address.city_name = require("./city_name");
address.city = require("./city");
address.street_prefix = require("./street_prefix");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":491,"./city":492,"./city_name":493,"./default_country":494,"./postcode":496,"./state":497,"./street_address":498,"./street_name":499,"./street_prefix":500}],496:[function(require,module,exports){
module["exports"] = [
  "#####"
];
},{}],497:[function(require,module,exports){
module["exports"] = [
  "Aceh",
  "Sumatera Utara",
  "Sumatera Barat",
  "Jambi",
  "Bangka Belitung",
  "Riau",
  "Kepulauan Riau",
  "Bengkulu",
  "Sumatera Selatan",
  "Lampung",
  "Banten",
  "DKI Jakarta",
  "Jawa Barat",
  "Jawa Tengah",
  "Jawa Timur",
  "Nusa Tenggara Timur",
  "DI Yogyakarta",
  "Bali",
  "Nusa Tenggara Barat",
  "Kalimantan Barat",
  "Kalimantan Tengah",
  "Kalimantan Selatan",
  "Kalimantan Timur",
  "Kalimantan Utara",
  "Sulawesi Selatan",
  "Sulawesi Utara",
  "Gorontalo",
  "Sulawesi Tengah",
  "Sulawesi Barat",
  "Sulawesi Tenggara",
  "Maluku",
  "Maluku Utara",
  "Papua Barat",
  "Papua"
];
},{}],498:[function(require,module,exports){
module["exports"] = [
  "#{street_name} no #{building_number}"
];
},{}],499:[function(require,module,exports){
module["exports"] = [
  "#{street_prefix} #{Name.first_name}",
  "#{street_prefix} #{Name.last_name}"
];
},{}],500:[function(require,module,exports){
module["exports"] = [
  "Ds.",
  "Dk.",
  "Gg.",
  "Jln.",
  "Jr.",
  "Kpg.",
  "Ki.",
  "Psr."
];
},{}],501:[function(require,module,exports){
arguments[4][475][0].apply(exports,arguments)
},{"./name":502,"./prefix":503,"./suffix":504,"dup":475}],502:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{Name.last_name}",
  "#{Name.last_name} #{suffix}",
  "#{prefix} #{Name.last_name} #{suffix}"
];

},{}],503:[function(require,module,exports){
module["exports"] = [
  "PT",
  "CV",
  "UD",
  "PD",
  "Perum"
];
},{}],504:[function(require,module,exports){
module["exports"] = [
  "(Persero) Tbk",
  "Tbk"
];
},{}],505:[function(require,module,exports){
arguments[4][184][0].apply(exports,arguments)
},{"./month":506,"./weekday":507,"dup":184}],506:[function(require,module,exports){
module["exports"] = {
  wide: [
    "Januari",
    "Februari",
    "Maret",
    "April",
    "Mei",
    "Juni",
    "Juli",
    "Agustus",
    "September",
    "Oktober",
    "November",
    "Desember"
  ],
  wide_context: [
    "Januari",
    "Februari",
    "Maret",
    "April",
    "Mei",
    "Juni",
    "Juli",
    "Agustus",
    "September",
    "Oktober",
    "November",
    "Desember"
  ],
  abbr: [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "Mei",
    "Jun",
    "Jul",
    "Ags",
    "Sep",
    "Okt",
    "Nov",
    "Des"
  ],
  abbr_context: [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "Mei",
    "Jun",
    "Jul",
    "Ags",
    "Sep",
    "Okt",
    "Nov",
    "Des"
  ]
};

},{}],507:[function(require,module,exports){
module["exports"] = {
  wide: [
    "Minggu",
    "Senin",
    "Selasa",
    "Rabu",
    "Kamis",
    "Jumat",
    "Sabtu"
  ],
  wide_context: [
    "Minggu",
    "Senin",
    "Selasa",
    "Rabu",
    "Kamis",
    "Jumat",
    "Sabtu"
  ],
  abbr: [
    "Min",
    "Sen",
    "Sel",
    "Rab",
    "Kam",
    "Jum",
    "Sab"
  ],
  abbr_context: [
    "Min",
    "Sen",
    "Sel",
    "Rab",
    "Kam",
    "Jum",
    "Sab"
  ]
};

},{}],508:[function(require,module,exports){
var id = {};
module['exports'] = id;
id.title = "Indonesia";
id.address = require("./address");
id.company = require("./company");
id.internet = require("./internet");
id.date = require("./date");
id.name = require("./name");
id.phone_number = require("./phone_number");

},{"./address":495,"./company":501,"./date":505,"./internet":511,"./name":514,"./phone_number":521}],509:[function(require,module,exports){
module["exports"] = [
  "com",
  "net",
  "org",
  "asia",
  "tv",
  "biz",
  "info",
  "in",
  "name",
  "co",
  "ac.id",
  "sch.id",
  "go.id",
  "mil.id",
  "co.id",
  "or.id",
  "web.id",
  "my.id",
  "biz.id",
  "desa.id"
];
},{}],510:[function(require,module,exports){
module["exports"] = [
  'gmail.com',
  'yahoo.com',
  'gmail.co.id',
  'yahoo.co.id'
];
},{}],511:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./domain_suffix":509,"./free_email":510,"dup":73}],512:[function(require,module,exports){
module["exports"] = [
  "Ade",
  "Agnes",
  "Ajeng",
  "Amalia",
  "Anita",
  "Ayu",
  "Aisyah",
  "Ana",
  "Ami",
  "Ani",
  "Azalea",
  "Aurora",
  "Alika",
  "Anastasia",
  "Amelia",
  "Almira",
  "Bella",
  "Betania",
  "Belinda",
  "Citra",
  "Cindy",
  "Chelsea",
  "Clara",
  "Cornelia",
  "Cinta",
  "Cinthia",
  "Ciaobella",
  "Cici",
  "Carla",
  "Calista",
  "Devi",
  "Dewi","Dian",
  "Diah",
  "Diana",
  "Dina",
  "Dinda",
  "Dalima",
  "Eka",
  "Eva",
  "Endah",
  "Elisa",
  "Eli",
  "Ella",
  "Ellis",
  "Elma",
  "Elvina",
  "Fitria",
  "Fitriani",
  "Febi",
  "Faizah",
  "Farah",
  "Farhunnisa",
  "Fathonah",
  "Gabriella",
  "Gasti",
  "Gawati",
  "Genta",
  "Ghaliyati",
  "Gina",
  "Gilda",
  "Halima",
  "Hesti",
  "Hilda",
  "Hafshah",
  "Hamima",
  "Hana",
  "Hani",
  "Hasna",
  "Humaira",
  "Ika",
  "Indah",
  "Intan",
  "Irma",
  "Icha",
  "Ida",
  "Ifa",
  "Ilsa",
  "Ina",
  "Ira",
  "Iriana",
  "Jamalia",
  "Janet",
  "Jane",
  "Julia",
  "Juli",
  "Jessica",
  "Jasmin",
  "Jelita",
  "Kamaria",
  "Kamila",
  "Kani",
  "Karen",
  "Karimah",
  "Kartika",
  "Kasiyah",
  "Keisha",
  "Kezia",
  "Kiandra",
  "Kayla",
  "Kania",
  "Lala",
  "Lalita",
  "Latika",
  "Laila",
  "Laras",
  "Lidya",
  "Lili",
  "Lintang",
  "Maria",
  "Mala",
  "Maya",
  "Maida",
  "Maimunah",
  "Melinda",
  "Mila",
  "Mutia",
  "Michelle",
  "Malika",
  "Nadia",
  "Nadine",
  "Nabila",
  "Natalia",
  "Novi",
  "Nova",
  "Nurul",
  "Nilam",
  "Najwa",
  "Olivia",
  "Ophelia",
  "Oni",
  "Oliva",
  "Padma",
  "Putri",
  "Paramita",
  "Paris",
  "Patricia",
  "Paulin",
  "Puput",
  "Puji",
  "Pia",
  "Puspa",
  "Puti",
  "Putri",
  "Padmi",
  "Qori",
  "Queen",
  "Ratih",
  "Ratna",
  "Restu",
  "Rini",
  "Rika",
  "Rina",
  "Rahayu",
  "Rahmi",
  "Rachel",
  "Rahmi",
  "Raisa",
  "Raina",
  "Sarah",
  "Sari",
  "Siti",
  "Siska",
  "Suci",
  "Syahrini",
  "Septi",
  "Sadina",
  "Safina",
  "Sakura",
  "Salimah",
  "Salwa",
  "Salsabila",
  "Samiah",
  "Shania",
  "Sabrina",
  "Silvia",
  "Shakila",
  "Talia",
  "Tami",
  "Tira",
  "Tiara",
  "Titin",
  "Tania",
  "Tina",
  "Tantri",
  "Tari",
  "Titi",
  "Uchita",
  "Unjani",
  "Ulya",
  "Uli",
  "Ulva",
  "Umi",
  "Usyi",
  "Vanya",
  "Vanesa",
  "Vivi",
  "Vera",
  "Vicky",
  "Victoria",
  "Violet",
  "Winda",
  "Widya",
  "Wulan",
  "Wirda",
  "Wani",
  "Yani",
  "Yessi",
  "Yulia",
  "Yuliana",
  "Yuni",
  "Yunita",
  "Yance",
  "Zahra",
  "Zalindra",
  "Zaenab",
  "Zulfa",
  "Zizi",
  "Zulaikha",
  "Zamira",
  "Zelda",
  "Zelaya"
];
},{}],513:[function(require,module,exports){
module["exports"] = [
  "Agustina",
  "Andriani",
  "Anggraini",
  "Aryani",
  "Astuti",
  "Fujiati",
  "Farida",
  "Handayani",
  "Hassanah",
  "Hartati",
  "Hasanah",
  "Haryanti",
  "Hariyah",
  "Hastuti",
  "Halimah",
  "Kusmawati",
  "Kuswandari",
  "Laksmiwati",
  "Laksita",
  "Lestari",
  "Lailasari",
  "Mandasari",
  "Mardhiyah",
  "Mayasari",
  "Melani",
  "Mulyani",
  "Maryati",
  "Nurdiyanti",
  "Novitasari",
  "Nuraini",
  "Nasyidah",
  "Nasyiah",
  "Namaga",
  "Palastri",
  "Pudjiastuti",
  "Puspasari",
  "Puspita",
  "Purwanti",
  "Pratiwi",
  "Purnawati",
  "Pertiwi",
  "Permata",
  "Prastuti",
  "Padmasari",
  "Rahmawati",
  "Rahayu",
  "Riyanti",
  "Rahimah",
  "Suartini",
  "Sudiati",
  "Suryatmi",
  "Susanti",
  "Safitri",
  "Oktaviani",
  "Utami",
  "Usamah",
  "Usada",
  "Uyainah",
  "Yuniar",
  "Yuliarti",
  "Yulianti",
  "Yolanda",
  "Wahyuni",
  "Wijayanti",
  "Widiastuti",
  "Winarsih",
  "Wulandari",
  "Wastuti",
  "Zulaika"
];
},{}],514:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.male_first_name = require("./male_first_name");
name.male_last_name = require("./male_last_name");
name.female_first_name = require("./female_first_name");
name.female_last_name = require("./female_last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.name = require("./name");

},{"./female_first_name":512,"./female_last_name":513,"./male_first_name":515,"./male_last_name":516,"./name":517,"./prefix":518,"./suffix":519}],515:[function(require,module,exports){
module["exports"] = [
  "Abyasa",
  "Ade",
  "Adhiarja",
  "Adiarja",
  "Adika",
  "Adikara",
  "Adinata",
  "Aditya",
  "Agus",
  "Ajiman",
  "Ajimat",
  "Ajimin",
  "Ajiono",
  "Akarsana",
  "Alambana",
  "Among",
  "Anggabaya",
  "Anom",
  "Argono",
  "Aris",
  "Arta",
  "Artanto",
  "Artawan",
  "Arsipatra",
  "Asirwada",
  "Asirwanda",
  "Aslijan",
  "Asmadi",
  "Asman",
  "Asmianto",
  "Asmuni",
  "Aswani",
  "Atma",
  "Atmaja",
  "Bagas",
  "Bagiya",
  "Bagus",
  "Bagya",
  "Bahuraksa",
  "Bahuwarna",
  "Bahuwirya",
  "Bajragin",
  "Bakda",
  "Bakiadi",
  "Bakianto",
  "Bakidin",
  "Bakijan",
  "Bakiman",
  "Bakiono",
  "Bakti",
  "Baktiadi",
  "Baktianto",
  "Baktiono",
  "Bala",
  "Balamantri",
  "Balangga",
  "Balapati",
  "Balidin",
  "Balijan",
  "Bambang",
  "Banara",
  "Banawa",
  "Banawi",
  "Bancar",
  "Budi",
  "Cagak",
  "Cager",
  "Cahyadi",
  "Cahyanto",
  "Cahya",
  "Cahyo",
  "Cahyono",
  "Caket",
  "Cakrabirawa",
  "Cakrabuana",
  "Cakrajiya",
  "Cakrawala",
  "Cakrawangsa",
  "Candra",
  "Chandra",
  "Candrakanta",
  "Capa",
  "Caraka",
  "Carub",
  "Catur",
  "Caturangga",
  "Cawisadi",
  "Cawisono",
  "Cawuk",
  "Cayadi",
  "Cecep",
  "Cemani",
  "Cemeti",
  "Cemplunk",
  "Cengkal",
  "Cengkir",
  "Dacin",
  "Dadap",
  "Dadi",
  "Dagel",
  "Daliman",
  "Dalimin",
  "Daliono",
  "Damar",
  "Damu",
  "Danang",
  "Daniswara",
  "Danu",
  "Danuja",
  "Dariati",
  "Darijan",
  "Darimin",
  "Darmaji",
  "Darman",
  "Darmana",
  "Darmanto",
  "Darsirah",
  "Dartono",
  "Daru",
  "Daruna",
  "Daryani",
  "Dasa",
  "Digdaya",
  "Dimas",
  "Dimaz",
  "Dipa",
  "Dirja",
  "Drajat",
  "Dwi",
  "Dono",
  "Dodo",
  "Edi",
  "Eka",
  "Elon",
  "Eluh",
  "Eman",
  "Emas",
  "Embuh",
  "Emong",
  "Empluk",
  "Endra",
  "Enteng",
  "Estiawan",
  "Estiono",
  "Eko",
  "Edi",
  "Edison",
  "Edward",
  "Elvin",
  "Erik",
  "Emil",
  "Ega",
  "Emin",
  "Eja",
  "Gada",
  "Gadang",
  "Gaduh",
  "Gaiman",
  "Galak",
  "Galang",
  "Galar",
  "Galih",
  "Galiono",
  "Galuh",
  "Galur",
  "Gaman",
  "Gamani",
  "Gamanto",
  "Gambira",
  "Gamblang",
  "Ganda",
  "Gandewa",
  "Gandi",
  "Gandi",
  "Ganep",
  "Gangsa",
  "Gangsar",
  "Ganjaran",
  "Gantar",
  "Gara",
  "Garan",
  "Garang",
  "Garda",
  "Gatot",
  "Gatra",
  "Gilang",
  "Galih",
  "Ghani",
  "Gading",
  "Hairyanto",
  "Hardana",
  "Hardi",
  "Harimurti",
  "Harja",
  "Harjasa",
  "Harjaya",
  "Harjo",
  "Harsana",
  "Harsanto",
  "Harsaya",
  "Hartaka",
  "Hartana",
  "Harto",
  "Hasta",
  "Heru",
  "Himawan",
  "Hadi",
  "Halim",
  "Hasim",
  "Hasan",
  "Hendra",
  "Hendri",
  "Heryanto",
  "Hamzah",
  "Hari",
  "Imam",
  "Indra",
  "Irwan",
  "Irsad",
  "Ikhsan",
  "Irfan",
  "Ian",
  "Ibrahim",
  "Ibrani",
  "Ismail",
  "Irnanto",
  "Ilyas",
  "Ibun",
  "Ivan",
  "Ikin",
  "Ihsan",
  "Jabal",
  "Jaeman",
  "Jaga",
  "Jagapati",
  "Jagaraga",
  "Jail",
  "Jaiman",
  "Jaka",
  "Jarwa",
  "Jarwadi",
  "Jarwi",
  "Jasmani",
  "Jaswadi",
  "Jati",
  "Jatmiko",
  "Jaya",
  "Jayadi",
  "Jayeng",
  "Jinawi",
  "Jindra",
  "Joko",
  "Jumadi",
  "Jumari",
  "Jamal",
  "Jamil",
  "Jais",
  "Jefri",
  "Johan",
  "Jono",
  "Kacung",
  "Kajen",
  "Kambali",
  "Kamidin",
  "Kariman",
  "Karja",
  "Karma",
  "Karman",
  "Karna",
  "Karsa",
  "Karsana",
  "Karta",
  "Kasiran",
  "Kasusra",
  "Kawaca",
  "Kawaya",
  "Kayun",
  "Kemba",
  "Kenari",
  "Kenes",
  "Kuncara",
  "Kunthara",
  "Kusuma",
  "Kadir",
  "Kala",
  "Kalim",
  "Kurnia",
  "Kanda",
  "Kardi",
  "Karya",
  "Kasim",
  "Kairav",
  "Kenzie",
  "Kemal",
  "Kamal",
  "Koko",
  "Labuh",
  "Laksana",
  "Lamar",
  "Lanang",
  "Langgeng",
  "Lanjar",
  "Lantar",
  "Lega",
  "Legawa",
  "Lembah",
  "Liman",
  "Limar",
  "Luhung",
  "Lukita",
  "Luluh",
  "Lulut",
  "Lurhur",
  "Luwar",
  "Luwes",
  "Latif",
  "Lasmanto",
  "Lukman",
  "Luthfi",
  "Leo",
  "Luis",
  "Lutfan",
  "Lasmono",
  "Laswi",
  "Mahesa",
  "Makara",
  "Makuta",
  "Manah",
  "Maras",
  "Margana",
  "Mariadi",
  "Marsudi",
  "Martaka",
  "Martana",
  "Martani",
  "Marwata",
  "Maryadi",
  "Maryanto",
  "Mitra",
  "Mujur",
  "Mulya",
  "Mulyanto",
  "Mulyono",
  "Mumpuni",
  "Muni",
  "Mursita",
  "Murti",
  "Mustika",
  "Maman",
  "Mahmud",
  "Mahdi",
  "Mahfud",
  "Malik",
  "Muhammad",
  "Mustofa",
  "Marsito",
  "Mursinin",
  "Nalar",
  "Naradi",
  "Nardi",
  "Niyaga",
  "Nrima",
  "Nugraha",
  "Nyana",
  "Narji",
  "Nasab",
  "Nasrullah",
  "Nasim",
  "Najib",
  "Najam",
  "Nyoman",
  "Olga",
  "Ozy",
  "Omar",
  "Opan",
  "Oskar",
  "Oman",
  "Okto",
  "Okta",
  "Opung",
  "Paiman",
  "Panca",
  "Pangeran",
  "Pangestu",
  "Pardi",
  "Parman",
  "Perkasa",
  "Praba",
  "Prabu",
  "Prabawa",
  "Prabowo",
  "Prakosa",
  "Pranata",
  "Pranawa",
  "Prasetya",
  "Prasetyo",
  "Prayitna",
  "Prayoga",
  "Prayogo",
  "Purwadi",
  "Purwa",
  "Purwanto",
  "Panji",
  "Pandu",
  "Paiman",
  "Prima",
  "Putu",
  "Raden",
  "Raditya",
  "Raharja",
  "Rama",
  "Rangga",
  "Reksa",
  "Respati",
  "Rusman",
  "Rosman",
  "Rahmat",
  "Rahman",
  "Rendy",
  "Reza",
  "Rizki",
  "Ridwan",
  "Rudi",
  "Raden",
  "Radit",
  "Radika",
  "Rafi",
  "Rafid",
  "Raihan",
  "Salman",
  "Saadat",
  "Saiful",
  "Surya",
  "Slamet",
  "Samsul",
  "Soleh",
  "Simon",
  "Sabar",
  "Sabri",
  "Sidiq",
  "Satya",
  "Setya",
  "Saka",
  "Sakti",
  "Taswir",
  "Tedi",
  "Teddy",
  "Taufan",
  "Taufik",
  "Tomi",
  "Tasnim",
  "Teguh",
  "Tasdik",
  "Timbul",
  "Tirta",
  "Tirtayasa",
  "Tri",
  "Tugiman",
  "Umar",
  "Usman",
  "Uda",
  "Umay",
  "Unggul",
  "Utama",
  "Umaya",
  "Upik",
  "Viktor",
  "Vino",
  "Vinsen",
  "Vero",
  "Vega",
  "Viman",
  "Virman",
  "Wahyu",
  "Wira",
  "Wisnu",
  "Wadi",
  "Wardi",
  "Warji",
  "Waluyo",
  "Wakiman",
  "Wage",
  "Wardaya",
  "Warsa",
  "Warsita",
  "Warta",
  "Wasis",
  "Wawan",
  "Xanana",
  "Yahya",
  "Yusuf",
  "Yosef",
  "Yono",
  "Yoga"
];
},{}],516:[function(require,module,exports){
module["exports"] = [
  "Adriansyah",
  "Ardianto",
  "Anggriawan",
  "Budiman",
  "Budiyanto",
  "Damanik",
  "Dongoran",
  "Dabukke",
  "Firmansyah",
  "Firgantoro",
  "Gunarto",
  "Gunawan",
  "Hardiansyah",
  "Habibi",
  "Hakim",
  "Halim",
  "Haryanto",
  "Hidayat",
  "Hidayanto",
  "Hutagalung",
  "Hutapea",
  "Hutasoit",
  "Irawan",
  "Iswahyudi",
  "Kuswoyo",
  "Januar",
  "Jailani",
  "Kurniawan",
  "Kusumo",
  "Latupono",
  "Lazuardi",
  "Maheswara",
  "Mahendra",
  "Mustofa",
  "Mansur",
  "Mandala",
  "Megantara",
  "Maulana",
  "Maryadi",
  "Mangunsong",
  "Manullang",
  "Marpaung",
  "Marbun",
  "Narpati",
  "Natsir",
  "Nugroho",
  "Najmudin",
  "Nashiruddin",
  "Nainggolan",
  "Nababan",
  "Napitupulu",
  "Pangestu",
  "Putra",
  "Pranowo",
  "Prabowo",
  "Pratama",
  "Prasetya",
  "Prasetyo",
  "Pradana",
  "Pradipta",
  "Prakasa",
  "Permadi",
  "Prasasta",
  "Prayoga",
  "Ramadan",
  "Rajasa",
  "Rajata",
  "Saptono",
  "Santoso",
  "Saputra",
  "Saefullah",
  "Setiawan",
  "Suryono",
  "Suwarno",
  "Siregar",
  "Sihombing",
  "Salahudin",
  "Sihombing",
  "Samosir",
  "Saragih",
  "Sihotang",
  "Simanjuntak",
  "Sinaga",
  "Simbolon",
  "Sitompul",
  "Sitorus",
  "Sirait",
  "Siregar",
  "Situmorang",
  "Tampubolon",
  "Thamrin",
  "Tamba",
  "Tarihoran",
  "Utama",
  "Uwais",
  "Wahyudin",
  "Waluyo",
  "Wibowo",
  "Winarno",
  "Wibisono",
  "Wijaya",
  "Widodo",
  "Wacana",
  "Waskita",
  "Wasita",
  "Zulkarnain"
];
},{}],517:[function(require,module,exports){
module["exports"] = [
  "#{male_first_name} #{male_last_name}",
  "#{male_last_name} #{male_first_name}",
  "#{male_first_name} #{male_first_name} #{male_last_name}",
  "#{female_first_name} #{female_last_name}",
  "#{female_first_name} #{male_last_name}",
  "#{female_last_name} #{female_first_name}",
  "#{female_first_name} #{female_first_name} #{female_last_name}"
];

},{}],518:[function(require,module,exports){
module["exports"] = [];
},{}],519:[function(require,module,exports){
module["exports"] = [
  "S.Ked",
  "S.Gz",
  "S.Pt",
  "S.IP",
  "S.E.I",
  "S.E.",
  "S.Kom",
  "S.H.",
  "S.T.",
  "S.Pd",
  "S.Psi",
  "S.I.Kom",
  "S.Sos",
  "S.Farm",
  "M.M.",
  "M.Kom.",
  "M.TI.",
  "M.Pd",
  "M.Farm",
  "M.Ak"
];
},{}],520:[function(require,module,exports){
module["exports"] = [
  "02# #### ###",
  "02## #### ###",
  "03## #### ###",
  "04## #### ###",
  "05## #### ###",
  "06## #### ###",
  "07## #### ###",
  "09## #### ###",
  "02# #### ####",
  "02## #### ####",
  "03## #### ####",
  "04## #### ####",
  "05## #### ####",
  "06## #### ####",
  "07## #### ####",
  "09## #### ####",
  "08## ### ###",
  "08## #### ###",
  "08## #### ####",
  "(+62) 8## ### ###",
  "(+62) 2# #### ###",
  "(+62) 2## #### ###",
  "(+62) 3## #### ###",
  "(+62) 4## #### ###",
  "(+62) 5## #### ###",
  "(+62) 6## #### ###",
  "(+62) 7## #### ###",
  "(+62) 8## #### ###",
  "(+62) 9## #### ###",
  "(+62) 2# #### ####",
  "(+62) 2## #### ####",
  "(+62) 3## #### ####",
  "(+62) 4## #### ####",
  "(+62) 5## #### ####",
  "(+62) 6## #### ####",
  "(+62) 7## #### ####",
  "(+62) 8## #### ####",
  "(+62) 9## #### ####"
];
},{}],521:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":520,"dup":83}],522:[function(require,module,exports){
arguments[4][459][0].apply(exports,arguments)
},{"dup":459}],523:[function(require,module,exports){
module["exports"] = [
  "#{city_prefix} #{Name.first_name} #{city_suffix}",
  "#{city_prefix} #{Name.first_name}",
  "#{Name.first_name} #{city_suffix}",
  "#{Name.last_name} #{city_suffix}"
];

},{}],524:[function(require,module,exports){
module["exports"] = [
  "San",
  "Borgo",
  "Sesto",
  "Quarto",
  "Settimo"
];

},{}],525:[function(require,module,exports){
module["exports"] = [
  "a mare",
  "lido",
  "ligure",
  "del friuli",
  "salentino",
  "calabro",
  "veneto",
  "nell'emilia",
  "umbro",
  "laziale",
  "terme",
  "sardo"
];

},{}],526:[function(require,module,exports){
module["exports"] = [
  "Afghanistan",
  "Albania",
  "Algeria",
  "American Samoa",
  "Andorra",
  "Angola",
  "Anguilla",
  "Antartide (territori a sud del 60° parallelo)",
  "Antigua e Barbuda",
  "Argentina",
  "Armenia",
  "Aruba",
  "Australia",
  "Austria",
  "Azerbaijan",
  "Bahamas",
  "Bahrain",
  "Bangladesh",
  "Barbados",
  "Bielorussia",
  "Belgio",
  "Belize",
  "Benin",
  "Bermuda",
  "Bhutan",
  "Bolivia",
  "Bosnia e Herzegovina",
  "Botswana",
  "Bouvet Island (Bouvetoya)",
  "Brasile",
  "Territorio dell'arcipelago indiano",
  "Isole Vergini Britanniche",
  "Brunei Darussalam",
  "Bulgaria",
  "Burkina Faso",
  "Burundi",
  "Cambogia",
  "Cameroon",
  "Canada",
  "Capo Verde",
  "Isole Cayman",
  "Repubblica Centrale Africana",
  "Chad",
  "Cile",
  "Cina",
  "Isola di Pasqua",
  "Isola di Cocos (Keeling)",
  "Colombia",
  "Comoros",
  "Congo",
  "Isole Cook",
  "Costa Rica",
  "Costa d'Avorio",
  "Croazia",
  "Cuba",
  "Cipro",
  "Repubblica Ceca",
  "Danimarca",
  "Gibuti",
  "Repubblica Dominicana",
  "Equador",
  "Egitto",
  "El Salvador",
  "Guinea Equatoriale",
  "Eritrea",
  "Estonia",
  "Etiopia",
  "Isole Faroe",
  "Isole Falkland (Malvinas)",
  "Fiji",
  "Finlandia",
  "Francia",
  "Guyana Francese",
  "Polinesia Francese",
  "Territori Francesi del sud",
  "Gabon",
  "Gambia",
  "Georgia",
  "Germania",
  "Ghana",
  "Gibilterra",
  "Grecia",
  "Groenlandia",
  "Grenada",
  "Guadalupa",
  "Guam",
  "Guatemala",
  "Guernsey",
  "Guinea",
  "Guinea-Bissau",
  "Guyana",
  "Haiti",
  "Heard Island and McDonald Islands",
  "Città del Vaticano",
  "Honduras",
  "Hong Kong",
  "Ungheria",
  "Islanda",
  "India",
  "Indonesia",
  "Iran",
  "Iraq",
  "Irlanda",
  "Isola di Man",
  "Israele",
  "Italia",
  "Giamaica",
  "Giappone",
  "Jersey",
  "Giordania",
  "Kazakhstan",
  "Kenya",
  "Kiribati",
  "Korea",
  "Kuwait",
  "Republicca Kirgiza",
  "Repubblica del Laos",
  "Latvia",
  "Libano",
  "Lesotho",
  "Liberia",
  "Libyan Arab Jamahiriya",
  "Liechtenstein",
  "Lituania",
  "Lussemburgo",
  "Macao",
  "Macedonia",
  "Madagascar",
  "Malawi",
  "Malesia",
  "Maldive",
  "Mali",
  "Malta",
  "Isole Marshall",
  "Martinica",
  "Mauritania",
  "Mauritius",
  "Mayotte",
  "Messico",
  "Micronesia",
  "Moldova",
  "Principato di Monaco",
  "Mongolia",
  "Montenegro",
  "Montserrat",
  "Marocco",
  "Mozambico",
  "Myanmar",
  "Namibia",
  "Nauru",
  "Nepal",
  "Antille Olandesi",
  "Olanda",
  "Nuova Caledonia",
  "Nuova Zelanda",
  "Nicaragua",
  "Niger",
  "Nigeria",
  "Niue",
  "Isole Norfolk",
  "Northern Mariana Islands",
  "Norvegia",
  "Oman",
  "Pakistan",
  "Palau",
  "Palestina",
  "Panama",
  "Papua Nuova Guinea",
  "Paraguay",
  "Peru",
  "Filippine",
  "Pitcairn Islands",
  "Polonia",
  "Portogallo",
  "Porto Rico",
  "Qatar",
  "Reunion",
  "Romania",
  "Russia",
  "Rwanda",
  "San Bartolomeo",
  "Sant'Elena",
  "Saint Kitts and Nevis",
  "Saint Lucia",
  "Saint Martin",
  "Saint Pierre and Miquelon",
  "Saint Vincent and the Grenadines",
  "Samoa",
  "San Marino",
  "Sao Tome and Principe",
  "Arabia Saudita",
  "Senegal",
  "Serbia",
  "Seychelles",
  "Sierra Leone",
  "Singapore",
  "Slovenia",
  "Isole Solomon",
  "Somalia",
  "Sud Africa",
  "Georgia del sud e South Sandwich Islands",
  "Spagna",
  "Sri Lanka",
  "Sudan",
  "Suriname",
  "Svalbard & Jan Mayen Islands",
  "Swaziland",
  "Svezia",
  "Svizzera",
  "Siria",
  "Taiwan",
  "Tajikistan",
  "Tanzania",
  "Tailandia",
  "Timor-Leste",
  "Togo",
  "Tokelau",
  "Tonga",
  "Trinidad e Tobago",
  "Tunisia",
  "Turchia",
  "Turkmenistan",
  "Isole di Turks and Caicos",
  "Tuvalu",
  "Uganda",
  "Ucraina",
  "Emirati Arabi Uniti",
  "Regno Unito",
  "Stati Uniti d'America",
  "United States Minor Outlying Islands",
  "Isole Vergini Statunitensi",
  "Uruguay",
  "Uzbekistan",
  "Vanuatu",
  "Venezuela",
  "Vietnam",
  "Wallis and Futuna",
  "Western Sahara",
  "Yemen",
  "Zambia",
  "Zimbabwe"
];

},{}],527:[function(require,module,exports){
module["exports"] = [
  "Italia"
];

},{}],528:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":522,"./city":523,"./city_prefix":524,"./city_suffix":525,"./country":526,"./default_country":527,"./postcode":529,"./secondary_address":530,"./state":531,"./state_abbr":532,"./street_address":533,"./street_name":534,"./street_suffix":535}],529:[function(require,module,exports){
arguments[4][327][0].apply(exports,arguments)
},{"dup":327}],530:[function(require,module,exports){
module["exports"] = [
  "Appartamento ##",
  "Piano #"
];

},{}],531:[function(require,module,exports){
module["exports"] = [
  "Agrigento",
  "Alessandria",
  "Ancona",
  "Aosta",
  "Arezzo",
  "Ascoli Piceno",
  "Asti",
  "Avellino",
  "Bari",
  "Barletta-Andria-Trani",
  "Belluno",
  "Benevento",
  "Bergamo",
  "Biella",
  "Bologna",
  "Bolzano",
  "Brescia",
  "Brindisi",
  "Cagliari",
  "Caltanissetta",
  "Campobasso",
  "Carbonia-Iglesias",
  "Caserta",
  "Catania",
  "Catanzaro",
  "Chieti",
  "Como",
  "Cosenza",
  "Cremona",
  "Crotone",
  "Cuneo",
  "Enna",
  "Fermo",
  "Ferrara",
  "Firenze",
  "Foggia",
  "Forlì-Cesena",
  "Frosinone",
  "Genova",
  "Gorizia",
  "Grosseto",
  "Imperia",
  "Isernia",
  "La Spezia",
  "L'Aquila",
  "Latina",
  "Lecce",
  "Lecco",
  "Livorno",
  "Lodi",
  "Lucca",
  "Macerata",
  "Mantova",
  "Massa-Carrara",
  "Matera",
  "Messina",
  "Milano",
  "Modena",
  "Monza e della Brianza",
  "Napoli",
  "Novara",
  "Nuoro",
  "Olbia-Tempio",
  "Oristano",
  "Padova",
  "Palermo",
  "Parma",
  "Pavia",
  "Perugia",
  "Pesaro e Urbino",
  "Pescara",
  "Piacenza",
  "Pisa",
  "Pistoia",
  "Pordenone",
  "Potenza",
  "Prato",
  "Ragusa",
  "Ravenna",
  "Reggio Calabria",
  "Reggio Emilia",
  "Rieti",
  "Rimini",
  "Roma",
  "Rovigo",
  "Salerno",
  "Medio Campidano",
  "Sassari",
  "Savona",
  "Siena",
  "Siracusa",
  "Sondrio",
  "Taranto",
  "Teramo",
  "Terni",
  "Torino",
  "Ogliastra",
  "Trapani",
  "Trento",
  "Treviso",
  "Trieste",
  "Udine",
  "Varese",
  "Venezia",
  "Verbano-Cusio-Ossola",
  "Vercelli",
  "Verona",
  "Vibo Valentia",
  "Vicenza",
  "Viterbo"
];

},{}],532:[function(require,module,exports){
module["exports"] = [
  "AG",
  "AL",
  "AN",
  "AO",
  "AR",
  "AP",
  "AT",
  "AV",
  "BA",
  "BT",
  "BL",
  "BN",
  "BG",
  "BI",
  "BO",
  "BZ",
  "BS",
  "BR",
  "CA",
  "CL",
  "CB",
  "CI",
  "CE",
  "CT",
  "CZ",
  "CH",
  "CO",
  "CS",
  "CR",
  "KR",
  "CN",
  "EN",
  "FM",
  "FE",
  "FI",
  "FG",
  "FC",
  "FR",
  "GE",
  "GO",
  "GR",
  "IM",
  "IS",
  "SP",
  "AQ",
  "LT",
  "LE",
  "LC",
  "LI",
  "LO",
  "LU",
  "MC",
  "MN",
  "MS",
  "MT",
  "ME",
  "MI",
  "MO",
  "MB",
  "NA",
  "NO",
  "NU",
  "OT",
  "OR",
  "PD",
  "PA",
  "PR",
  "PV",
  "PG",
  "PU",
  "PE",
  "PC",
  "PI",
  "PT",
  "PN",
  "PZ",
  "PO",
  "RG",
  "RA",
  "RC",
  "RE",
  "RI",
  "RN",
  "RM",
  "RO",
  "SA",
  "VS",
  "SS",
  "SV",
  "SI",
  "SR",
  "SO",
  "TA",
  "TE",
  "TR",
  "TO",
  "OG",
  "TP",
  "TN",
  "TV",
  "TS",
  "UD",
  "VA",
  "VE",
  "VB",
  "VC",
  "VR",
  "VV",
  "VI",
  "VT"
];

},{}],533:[function(require,module,exports){
module["exports"] = [
  "#{street_name} #{building_number}",
  "#{street_name} #{building_number}, #{secondary_address}"
];

},{}],534:[function(require,module,exports){
module["exports"] = [
  "#{street_suffix} #{Name.first_name}",
  "#{street_suffix} #{Name.last_name}"
];

},{}],535:[function(require,module,exports){
module["exports"] = [
  "Piazza",
  "Strada",
  "Via",
  "Borgo",
  "Contrada",
  "Rotonda",
  "Incrocio"
];

},{}],536:[function(require,module,exports){
module["exports"] = [
  "24 ore",
  "24/7",
  "terza generazione",
  "quarta generazione",
  "quinta generazione",
  "sesta generazione",
  "asimmetrica",
  "asincrona",
  "background",
  "bi-direzionale",
  "biforcata",
  "bottom-line",
  "coerente",
  "coesiva",
  "composita",
  "sensibile al contesto",
  "basta sul contesto",
  "basata sul contenuto",
  "dedicata",
  "didattica",
  "direzionale",
  "discreta",
  "dinamica",
  "eco-centrica",
  "esecutiva",
  "esplicita",
  "full-range",
  "globale",
  "euristica",
  "alto livello",
  "olistica",
  "omogenea",
  "ibrida",
  "impattante",
  "incrementale",
  "intangibile",
  "interattiva",
  "intermediaria",
  "locale",
  "logistica",
  "massimizzata",
  "metodica",
  "mission-critical",
  "mobile",
  "modulare",
  "motivazionale",
  "multimedia",
  "multi-tasking",
  "nazionale",
  "neutrale",
  "nextgeneration",
  "non-volatile",
  "object-oriented",
  "ottima",
  "ottimizzante",
  "radicale",
  "real-time",
  "reciproca",
  "regionale",
  "responsiva",
  "scalabile",
  "secondaria",
  "stabile",
  "statica",
  "sistematica",
  "sistemica",
  "tangibile",
  "terziaria",
  "uniforme",
  "valore aggiunto"
];

},{}],537:[function(require,module,exports){
module["exports"] = [
  "valore aggiunto",
  "verticalizzate",
  "proattive",
  "forti",
  "rivoluzionari",
  "scalabili",
  "innovativi",
  "intuitivi",
  "strategici",
  "e-business",
  "mission-critical",
  "24/7",
  "globali",
  "B2B",
  "B2C",
  "granulari",
  "virtuali",
  "virali",
  "dinamiche",
  "magnetiche",
  "web",
  "interattive",
  "sexy",
  "back-end",
  "real-time",
  "efficienti",
  "front-end",
  "distributivi",
  "estensibili",
  "mondiali",
  "open-source",
  "cross-platform",
  "sinergiche",
  "out-of-the-box",
  "enterprise",
  "integrate",
  "di impatto",
  "wireless",
  "trasparenti",
  "next-generation",
  "cutting-edge",
  "visionari",
  "plug-and-play",
  "collaborative",
  "olistiche",
  "ricche"
];

},{}],538:[function(require,module,exports){
module["exports"] = [
  "partnerships",
  "comunità",
  "ROI",
  "soluzioni",
  "e-services",
  "nicchie",
  "tecnologie",
  "contenuti",
  "supply-chains",
  "convergenze",
  "relazioni",
  "architetture",
  "interfacce",
  "mercati",
  "e-commerce",
  "sistemi",
  "modelli",
  "schemi",
  "reti",
  "applicazioni",
  "metriche",
  "e-business",
  "funzionalità",
  "esperienze",
  "webservices",
  "metodologie"
];

},{}],539:[function(require,module,exports){
module["exports"] = [
  "implementate",
  "utilizzo",
  "integrate",
  "ottimali",
  "evolutive",
  "abilitate",
  "reinventate",
  "aggregate",
  "migliorate",
  "incentivate",
  "monetizzate",
  "sinergizzate",
  "strategiche",
  "deploy",
  "marchi",
  "accrescitive",
  "target",
  "sintetizzate",
  "spedizioni",
  "massimizzate",
  "innovazione",
  "guida",
  "estensioni",
  "generate",
  "exploit",
  "transizionali",
  "matrici",
  "ricontestualizzate"
];

},{}],540:[function(require,module,exports){
module["exports"] = [
  "adattiva",
  "avanzata",
  "migliorata",
  "assimilata",
  "automatizzata",
  "bilanciata",
  "centralizzata",
  "compatibile",
  "configurabile",
  "cross-platform",
  "decentralizzata",
  "digitalizzata",
  "distribuita",
  "piccola",
  "ergonomica",
  "esclusiva",
  "espansa",
  "estesa",
  "configurabile",
  "fondamentale",
  "orizzontale",
  "implementata",
  "innovativa",
  "integrata",
  "intuitiva",
  "inversa",
  "gestita",
  "obbligatoria",
  "monitorata",
  "multi-canale",
  "multi-laterale",
  "open-source",
  "operativa",
  "ottimizzata",
  "organica",
  "persistente",
  "polarizzata",
  "proattiva",
  "programmabile",
  "progressiva",
  "reattiva",
  "riallineata",
  "ricontestualizzata",
  "ridotta",
  "robusta",
  "sicura",
  "condivisibile",
  "stand-alone",
  "switchabile",
  "sincronizzata",
  "sinergica",
  "totale",
  "universale",
  "user-friendly",
  "versatile",
  "virtuale",
  "visionaria"
];

},{}],541:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.noun = require("./noun");
company.descriptor = require("./descriptor");
company.adjective = require("./adjective");
company.bs_noun = require("./bs_noun");
company.bs_verb = require("./bs_verb");
company.bs_adjective = require("./bs_adjective");
company.name = require("./name");

},{"./adjective":536,"./bs_adjective":537,"./bs_noun":538,"./bs_verb":539,"./descriptor":540,"./name":542,"./noun":543,"./suffix":544}],542:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name}-#{Name.last_name} #{suffix}",
  "#{Name.last_name}, #{Name.last_name} e #{Name.last_name} #{suffix}"
];

},{}],543:[function(require,module,exports){
module["exports"] = [
  "Abilità",
  "Access",
  "Adattatore",
  "Algoritmo",
  "Alleanza",
  "Analizzatore",
  "Applicazione",
  "Approccio",
  "Architettura",
  "Archivio",
  "Intelligenza artificiale",
  "Array",
  "Attitudine",
  "Benchmark",
  "Capacità",
  "Sfida",
  "Circuito",
  "Collaborazione",
  "Complessità",
  "Concetto",
  "Conglomerato",
  "Contingenza",
  "Core",
  "Database",
  "Data-warehouse",
  "Definizione",
  "Emulazione",
  "Codifica",
  "Criptazione",
  "Firmware",
  "Flessibilità",
  "Previsione",
  "Frame",
  "framework",
  "Funzione",
  "Funzionalità",
  "Interfaccia grafica",
  "Hardware",
  "Help-desk",
  "Gerarchia",
  "Hub",
  "Implementazione",
  "Infrastruttura",
  "Iniziativa",
  "Installazione",
  "Set di istruzioni",
  "Interfaccia",
  "Soluzione internet",
  "Intranet",
  "Conoscenza base",
  "Matrici",
  "Matrice",
  "Metodologia",
  "Middleware",
  "Migrazione",
  "Modello",
  "Moderazione",
  "Monitoraggio",
  "Moratoria",
  "Rete",
  "Architettura aperta",
  "Sistema aperto",
  "Orchestrazione",
  "Paradigma",
  "Parallelismo",
  "Policy",
  "Portale",
  "Struttura di prezzo",
  "Prodotto",
  "Produttività",
  "Progetto",
  "Proiezione",
  "Protocollo",
  "Servizio clienti",
  "Software",
  "Soluzione",
  "Standardizzazione",
  "Strategia",
  "Struttura",
  "Successo",
  "Sovrastruttura",
  "Supporto",
  "Sinergia",
  "Task-force",
  "Finestra temporale",
  "Strumenti",
  "Utilizzazione",
  "Sito web",
  "Forza lavoro"
];

},{}],544:[function(require,module,exports){
module["exports"] = [
  "SPA",
  "e figli",
  "Group",
  "s.r.l."
];

},{}],545:[function(require,module,exports){
var it = {};
module['exports'] = it;
it.title = "Italian";
it.address = require("./address");
it.company = require("./company");
it.internet = require("./internet");
it.name = require("./name");
it.phone_number = require("./phone_number");

},{"./address":528,"./company":541,"./internet":548,"./name":550,"./phone_number":556}],546:[function(require,module,exports){
module["exports"] = [
  "com",
  "com",
  "com",
  "net",
  "org",
  "it",
  "it",
  "it"
];

},{}],547:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.com",
  "hotmail.com",
  "email.it",
  "libero.it",
  "yahoo.it"
];

},{}],548:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./domain_suffix":546,"./free_email":547,"dup":73}],549:[function(require,module,exports){
module["exports"] = [
  "Aaron",
  "Akira",
  "Alberto",
  "Alessandro",
  "Alighieri",
  "Amedeo",
  "Amos",
  "Anselmo",
  "Antonino",
  "Arcibaldo",
  "Armando",
  "Artes",
  "Audenico",
  "Ausonio",
  "Bacchisio",
  "Battista",
  "Bernardo",
  "Boris",
  "Caio",
  "Carlo",
  "Cecco",
  "Cirino",
  "Cleros",
  "Costantino",
  "Damiano",
  "Danny",
  "Davide",
  "Demian",
  "Dimitri",
  "Domingo",
  "Dylan",
  "Edilio",
  "Egidio",
  "Elio",
  "Emanuel",
  "Enrico",
  "Ercole",
  "Ermes",
  "Ethan",
  "Eusebio",
  "Evangelista",
  "Fabiano",
  "Ferdinando",
  "Fiorentino",
  "Flavio",
  "Fulvio",
  "Gabriele",
  "Gastone",
  "Germano",
  "Giacinto",
  "Gianantonio",
  "Gianleonardo",
  "Gianmarco",
  "Gianriccardo",
  "Gioacchino",
  "Giordano",
  "Giuliano",
  "Graziano",
  "Guido",
  "Harry",
  "Iacopo",
  "Ilario",
  "Ione",
  "Italo",
  "Jack",
  "Jari",
  "Joey",
  "Joseph",
  "Kai",
  "Kociss",
  "Laerte",
  "Lauro",
  "Leonardo",
  "Liborio",
  "Lorenzo",
  "Ludovico",
  "Maggiore",
  "Manuele",
  "Mariano",
  "Marvin",
  "Matteo",
  "Mauro",
  "Michael",
  "Mirco",
  "Modesto",
  "Muzio",
  "Nabil",
  "Nathan",
  "Nick",
  "Noah",
  "Odino",
  "Olo",
  "Oreste",
  "Osea",
  "Pablo",
  "Patrizio",
  "Piererminio",
  "Pierfrancesco",
  "Piersilvio",
  "Priamo",
  "Quarto",
  "Quirino",
  "Radames",
  "Raniero",
  "Renato",
  "Rocco",
  "Romeo",
  "Rosalino",
  "Rudy",
  "Sabatino",
  "Samuel",
  "Santo",
  "Sebastian",
  "Serse",
  "Silvano",
  "Sirio",
  "Tancredi",
  "Terzo",
  "Timoteo",
  "Tolomeo",
  "Trevis",
  "Ubaldo",
  "Ulrico",
  "Valdo",
  "Neri",
  "Vinicio",
  "Walter",
  "Xavier",
  "Yago",
  "Zaccaria",
  "Abramo",
  "Adriano",
  "Alan",
  "Albino",
  "Alessio",
  "Alighiero",
  "Amerigo",
  "Anastasio",
  "Antimo",
  "Antonio",
  "Arduino",
  "Aroldo",
  "Arturo",
  "Augusto",
  "Avide",
  "Baldassarre",
  "Bettino",
  "Bortolo",
  "Caligola",
  "Carmelo",
  "Celeste",
  "Ciro",
  "Costanzo",
  "Dante",
  "Danthon",
  "Davis",
  "Demis",
  "Dindo",
  "Domiziano",
  "Edipo",
  "Egisto",
  "Eliziario",
  "Emidio",
  "Enzo",
  "Eriberto",
  "Erminio",
  "Ettore",
  "Eustachio",
  "Fabio",
  "Fernando",
  "Fiorenzo",
  "Folco",
  "Furio",
  "Gaetano",
  "Gavino",
  "Gerlando",
  "Giacobbe",
  "Giancarlo",
  "Gianmaria",
  "Giobbe",
  "Giorgio",
  "Giulio",
  "Gregorio",
  "Hector",
  "Ian",
  "Ippolito",
  "Ivano",
  "Jacopo",
  "Jarno",
  "Joannes",
  "Joshua",
  "Karim",
  "Kris",
  "Lamberto",
  "Lazzaro",
  "Leone",
  "Lino",
  "Loris",
  "Luigi",
  "Manfredi",
  "Marco",
  "Marino",
  "Marzio",
  "Mattia",
  "Max",
  "Michele",
  "Mirko",
  "Moreno",
  "Nadir",
  "Nazzareno",
  "Nestore",
  "Nico",
  "Noel",
  "Odone",
  "Omar",
  "Orfeo",
  "Osvaldo",
  "Pacifico",
  "Pericle",
  "Pietro",
  "Primo",
  "Quasimodo",
  "Radio",
  "Raoul",
  "Renzo",
  "Rodolfo",
  "Romolo",
  "Rosolino",
  "Rufo",
  "Sabino",
  "Sandro",
  "Sasha",
  "Secondo",
  "Sesto",
  "Silverio",
  "Siro",
  "Tazio",
  "Teseo",
  "Timothy",
  "Tommaso",
  "Tristano",
  "Umberto",
  "Ariel",
  "Artemide",
  "Assia",
  "Azue",
  "Benedetta",
  "Bibiana",
  "Brigitta",
  "Carmela",
  "Cassiopea",
  "Cesidia",
  "Cira",
  "Clea",
  "Cleopatra",
  "Clodovea",
  "Concetta",
  "Cosetta",
  "Cristyn",
  "Damiana",
  "Danuta",
  "Deborah",
  "Demi",
  "Diamante",
  "Diana",
  "Donatella",
  "Doriana",
  "Edvige",
  "Elda",
  "Elga",
  "Elsa",
  "Emilia",
  "Enrica",
  "Erminia",
  "Eufemia",
  "Evita",
  "Fatima",
  "Felicia",
  "Filomena",
  "Flaviana",
  "Fortunata",
  "Gelsomina",
  "Genziana",
  "Giacinta",
  "Gilda",
  "Giovanna",
  "Giulietta",
  "Grazia",
  "Guendalina",
  "Helga",
  "Ileana",
  "Ingrid",
  "Irene",
  "Isabel",
  "Isira",
  "Ivonne",
  "Jelena",
  "Jole",
  "Claudia",
  "Kayla",
  "Kristel",
  "Laura",
  "Lucia",
  "Lia",
  "Lidia",
  "Lisa",
  "Loredana",
  "Loretta",
  "Luce",
  "Lucrezia",
  "Luna",
  "Maika",
  "Marcella",
  "Maria",
  "Mariagiulia",
  "Marianita",
  "Mariapia",
  "Marieva",
  "Marina",
  "Maristella",
  "Maruska",
  "Matilde",
  "Mecren",
  "Mercedes",
  "Mietta",
  "Miriana",
  "Miriam",
  "Monia",
  "Morgana",
  "Naomi",
  "Nayade",
  "Nicoletta",
  "Ninfa",
  "Noemi",
  "Nunzia",
  "Olimpia",
  "Oretta",
  "Ortensia",
  "Penelope",
  "Piccarda",
  "Prisca",
  "Rebecca",
  "Rita",
  "Rosalba",
  "Rosaria",
  "Rosita",
  "Ruth",
  "Samira",
  "Sarita",
  "Selvaggia",
  "Shaira",
  "Sibilla",
  "Soriana",
  "Thea",
  "Tosca",
  "Ursula",
  "Vania",
  "Vera",
  "Vienna",
  "Violante",
  "Vitalba",
  "Zelida"
];

},{}],550:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.name = require("./name");

},{"./first_name":549,"./last_name":551,"./name":552,"./prefix":553,"./suffix":554}],551:[function(require,module,exports){
module["exports"] = [
  "Amato",
  "Barbieri",
  "Barone",
  "Basile",
  "Battaglia",
  "Bellini",
  "Benedetti",
  "Bernardi",
  "Bianc",
  "Bianchi",
  "Bruno",
  "Caputo",
  "Carbon",
  "Caruso",
  "Cattaneo",
  "Colombo",
  "Cont",
  "Conte",
  "Coppola",
  "Costa",
  "Costantin",
  "D'amico",
  "D'angelo",
  "Damico",
  "De Angelis",
  "De luca",
  "De rosa",
  "De Santis",
  "Donati",
  "Esposito",
  "Fabbri",
  "Farin",
  "Ferrara",
  "Ferrari",
  "Ferraro",
  "Ferretti",
  "Ferri",
  "Fior",
  "Fontana",
  "Galli",
  "Gallo",
  "Gatti",
  "Gentile",
  "Giordano",
  "Giuliani",
  "Grassi",
  "Grasso",
  "Greco",
  "Guerra",
  "Leone",
  "Lombardi",
  "Lombardo",
  "Longo",
  "Mancini",
  "Marchetti",
  "Marian",
  "Marini",
  "Marino",
  "Martinelli",
  "Martini",
  "Martino",
  "Mazza",
  "Messina",
  "Milani",
  "Montanari",
  "Monti",
  "Morelli",
  "Moretti",
  "Negri",
  "Neri",
  "Orlando",
  "Pagano",
  "Palmieri",
  "Palumbo",
  "Parisi",
  "Pellegrini",
  "Pellegrino",
  "Piras",
  "Ricci",
  "Rinaldi",
  "Riva",
  "Rizzi",
  "Rizzo",
  "Romano",
  "Ross",
  "Rossetti",
  "Ruggiero",
  "Russo",
  "Sala",
  "Sanna",
  "Santoro",
  "Sartori",
  "Serr",
  "Silvestri",
  "Sorrentino",
  "Testa",
  "Valentini",
  "Villa",
  "Vitale",
  "Vitali"
];

},{}],552:[function(require,module,exports){
arguments[4][486][0].apply(exports,arguments)
},{"dup":486}],553:[function(require,module,exports){
module["exports"] = [
  "Sig.",
  "Dott.",
  "Dr.",
  "Ing."
];

},{}],554:[function(require,module,exports){
module["exports"] = [];

},{}],555:[function(require,module,exports){
module["exports"] = [
  "+## ### ## ## ####",
  "+## ## #######",
  "+## ## ########",
  "+## ### #######",
  "+## ### ########",
  "+## #### #######",
  "+## #### ########",
  "0## ### ####",
  "+39 0## ### ###",
  "3## ### ###",
  "+39 3## ### ###"
];

},{}],556:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":555,"dup":83}],557:[function(require,module,exports){
module["exports"] = [
  "#{city_prefix}#{Name.first_name}#{city_suffix}",
  "#{Name.first_name}#{city_suffix}",
  "#{city_prefix}#{Name.last_name}#{city_suffix}",
  "#{Name.last_name}#{city_suffix}"
];

},{}],558:[function(require,module,exports){
module["exports"] = [
  "北",
  "東",
  "西",
  "南",
  "新",
  "湖",
  "港"
];

},{}],559:[function(require,module,exports){
module["exports"] = [
  "市",
  "区",
  "町",
  "村"
];

},{}],560:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.city = require("./city");
address.street_name = require("./street_name");

},{"./city":557,"./city_prefix":558,"./city_suffix":559,"./postcode":561,"./state":562,"./state_abbr":563,"./street_name":564}],561:[function(require,module,exports){
module["exports"] = [
  "###-####"
];

},{}],562:[function(require,module,exports){
module["exports"] = [
  "北海道",
  "青森県",
  "岩手県",
  "宮城県",
  "秋田県",
  "山形県",
  "福島県",
  "茨城県",
  "栃木県",
  "群馬県",
  "埼玉県",
  "千葉県",
  "東京都",
  "神奈川県",
  "新潟県",
  "富山県",
  "石川県",
  "福井県",
  "山梨県",
  "長野県",
  "岐阜県",
  "静岡県",
  "愛知県",
  "三重県",
  "滋賀県",
  "京都府",
  "大阪府",
  "兵庫県",
  "奈良県",
  "和歌山県",
  "鳥取県",
  "島根県",
  "岡山県",
  "広島県",
  "山口県",
  "徳島県",
  "香川県",
  "愛媛県",
  "高知県",
  "福岡県",
  "佐賀県",
  "長崎県",
  "熊本県",
  "大分県",
  "宮崎県",
  "鹿児島県",
  "沖縄県"
];

},{}],563:[function(require,module,exports){
module["exports"] = [
  "1",
  "2",
  "3",
  "4",
  "5",
  "6",
  "7",
  "8",
  "9",
  "10",
  "11",
  "12",
  "13",
  "14",
  "15",
  "16",
  "17",
  "18",
  "19",
  "20",
  "21",
  "22",
  "23",
  "24",
  "25",
  "26",
  "27",
  "28",
  "29",
  "30",
  "31",
  "32",
  "33",
  "34",
  "35",
  "36",
  "37",
  "38",
  "39",
  "40",
  "41",
  "42",
  "43",
  "44",
  "45",
  "46",
  "47"
];

},{}],564:[function(require,module,exports){
module["exports"] = [
  "#{Name.first_name}#{street_suffix}",
  "#{Name.last_name}#{street_suffix}"
];

},{}],565:[function(require,module,exports){
module["exports"] = [
  "090-####-####",
  "080-####-####",
  "070-####-####"
];

},{}],566:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"./formats":565,"dup":65}],567:[function(require,module,exports){
var ja = {};
module['exports'] = ja;
ja.title = "Japanese";
ja.address = require("./address");
ja.phone_number = require("./phone_number");
ja.cell_phone = require("./cell_phone");
ja.name = require("./name");

},{"./address":560,"./cell_phone":566,"./name":569,"./phone_number":573}],568:[function(require,module,exports){
module["exports"] = [
  "大翔",
  "蓮",
  "颯太",
  "樹",
  "大和",
  "陽翔",
  "陸斗",
  "太一",
  "海翔",
  "蒼空",
  "翼",
  "陽菜",
  "結愛",
  "結衣",
  "杏",
  "莉子",
  "美羽",
  "結菜",
  "心愛",
  "愛菜",
  "美咲"
];

},{}],569:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.last_name = require("./last_name");
name.first_name = require("./first_name");
name.name = require("./name");

},{"./first_name":568,"./last_name":570,"./name":571}],570:[function(require,module,exports){
module["exports"] = [
  "佐藤",
  "鈴木",
  "高橋",
  "田中",
  "渡辺",
  "伊藤",
  "山本",
  "中村",
  "小林",
  "加藤",
  "吉田",
  "山田",
  "佐々木",
  "山口",
  "斎藤",
  "松本",
  "井上",
  "木村",
  "林",
  "清水"
];

},{}],571:[function(require,module,exports){
module["exports"] = [
  "#{last_name} #{first_name}"
];

},{}],572:[function(require,module,exports){
module["exports"] = [
  "0####-#-####",
  "0###-##-####",
  "0##-###-####",
  "0#-####-####"
];

},{}],573:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":572,"dup":83}],574:[function(require,module,exports){
module["exports"] = [
  "#{city_name}#{city_suffix}"
];

},{}],575:[function(require,module,exports){
module["exports"] = [
  "강릉",
  "양양",
  "인제",
  "광주",
  "구리",
  "부천",
  "밀양",
  "통영",
  "창원",
  "거창",
  "고성",
  "양산",
  "김천",
  "구미",
  "영주",
  "광산",
  "남",
  "북",
  "고창",
  "군산",
  "남원",
  "동작",
  "마포",
  "송파",
  "용산",
  "부평",
  "강화",
  "수성"
];

},{}],576:[function(require,module,exports){
module["exports"] = [
  "구",
  "시",
  "군"
];

},{}],577:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city_suffix = require("./city_suffix");
address.city_name = require("./city_name");
address.city = require("./city");
address.street_root = require("./street_root");
address.street_suffix = require("./street_suffix");
address.street_name = require("./street_name");

},{"./city":574,"./city_name":575,"./city_suffix":576,"./postcode":578,"./state":579,"./state_abbr":580,"./street_name":581,"./street_root":582,"./street_suffix":583}],578:[function(require,module,exports){
module["exports"] = [
  "###-###"
];

},{}],579:[function(require,module,exports){
module["exports"] = [
  "강원",
  "경기",
  "경남",
  "경북",
  "광주",
  "대구",
  "대전",
  "부산",
  "서울",
  "울산",
  "인천",
  "전남",
  "전북",
  "제주",
  "충남",
  "충북",
  "세종"
];

},{}],580:[function(require,module,exports){
arguments[4][579][0].apply(exports,arguments)
},{"dup":579}],581:[function(require,module,exports){
module["exports"] = [
  "#{street_root}#{street_suffix}"
];

},{}],582:[function(require,module,exports){
module["exports"] = [
  "상계",
  "화곡",
  "신정",
  "목",
  "잠실",
  "면목",
  "주안",
  "안양",
  "중",
  "정왕",
  "구로",
  "신월",
  "연산",
  "부평",
  "창",
  "만수",
  "중계",
  "검단",
  "시흥",
  "상도",
  "방배",
  "장유",
  "상",
  "광명",
  "신길",
  "행신",
  "대명",
  "동탄"
];

},{}],583:[function(require,module,exports){
module["exports"] = [
  "읍",
  "면",
  "동"
];

},{}],584:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.prefix = require("./prefix");
company.name = require("./name");

},{"./name":585,"./prefix":586,"./suffix":587}],585:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{Name.first_name}",
  "#{Name.first_name} #{suffix}"
];

},{}],586:[function(require,module,exports){
module["exports"] = [
  "주식회사",
  "한국"
];

},{}],587:[function(require,module,exports){
module["exports"] = [
  "연구소",
  "게임즈",
  "그룹",
  "전자",
  "물산",
  "코리아"
];

},{}],588:[function(require,module,exports){
var ko = {};
module['exports'] = ko;
ko.title = "Korean";
ko.address = require("./address");
ko.phone_number = require("./phone_number");
ko.company = require("./company");
ko.internet = require("./internet");
ko.lorem = require("./lorem");
ko.name = require("./name");

},{"./address":577,"./company":584,"./internet":591,"./lorem":592,"./name":595,"./phone_number":599}],589:[function(require,module,exports){
module["exports"] = [
  "co.kr",
  "com",
  "biz",
  "info",
  "ne.kr",
  "net",
  "or.kr",
  "org"
];

},{}],590:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.co.kr",
  "hanmail.net",
  "naver.com"
];

},{}],591:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./domain_suffix":589,"./free_email":590,"dup":73}],592:[function(require,module,exports){
arguments[4][74][0].apply(exports,arguments)
},{"./words":593,"dup":74}],593:[function(require,module,exports){
module["exports"] = [
  "국가는",
  "법률이",
  "정하는",
  "바에",
  "의하여",
  "재외국민을",
  "보호할",
  "의무를",
  "진다.",
  "모든",
  "국민은",
  "신체의",
  "자유를",
  "가진다.",
  "국가는",
  "전통문화의",
  "계승·발전과",
  "민족문화의",
  "창달에",
  "노력하여야",
  "한다.",
  "통신·방송의",
  "시설기준과",
  "신문의",
  "기능을",
  "보장하기",
  "위하여",
  "필요한",
  "사항은",
  "법률로",
  "정한다.",
  "헌법에",
  "의하여",
  "체결·공포된",
  "조약과",
  "일반적으로",
  "승인된",
  "국제법규는",
  "국내법과",
  "같은",
  "효력을",
  "가진다.",
  "다만,",
  "현행범인인",
  "경우와",
  "장기",
  "3년",
  "이상의",
  "형에",
  "해당하는",
  "죄를",
  "범하고",
  "도피",
  "또는",
  "증거인멸의",
  "염려가",
  "있을",
  "때에는",
  "사후에",
  "영장을",
  "청구할",
  "수",
  "있다.",
  "저작자·발명가·과학기술자와",
  "예술가의",
  "권리는",
  "법률로써",
  "보호한다.",
  "형사피고인은",
  "유죄의",
  "판결이",
  "확정될",
  "때까지는",
  "무죄로",
  "추정된다.",
  "모든",
  "국민은",
  "행위시의",
  "법률에",
  "의하여",
  "범죄를",
  "구성하지",
  "아니하는",
  "행위로",
  "소추되지",
  "아니하며,",
  "동일한",
  "범죄에",
  "대하여",
  "거듭",
  "처벌받지",
  "아니한다.",
  "국가는",
  "평생교육을",
  "진흥하여야",
  "한다.",
  "모든",
  "국민은",
  "사생활의",
  "비밀과",
  "자유를",
  "침해받지",
  "아니한다.",
  "의무교육은",
  "무상으로",
  "한다.",
  "저작자·발명가·과학기술자와",
  "예술가의",
  "권리는",
  "법률로써",
  "보호한다.",
  "국가는",
  "모성의",
  "보호를",
  "위하여",
  "노력하여야",
  "한다.",
  "헌법에",
  "의하여",
  "체결·공포된",
  "조약과",
  "일반적으로",
  "승인된",
  "국제법규는",
  "국내법과",
  "같은",
  "효력을",
  "가진다."
];

},{}],594:[function(require,module,exports){
module["exports"] = [
  "서연",
  "민서",
  "서현",
  "지우",
  "서윤",
  "지민",
  "수빈",
  "하은",
  "예은",
  "윤서",
  "민준",
  "지후",
  "지훈",
  "준서",
  "현우",
  "예준",
  "건우",
  "현준",
  "민재",
  "우진",
  "은주"
];

},{}],595:[function(require,module,exports){
arguments[4][569][0].apply(exports,arguments)
},{"./first_name":594,"./last_name":596,"./name":597,"dup":569}],596:[function(require,module,exports){
module["exports"] = [
  "김",
  "이",
  "박",
  "최",
  "정",
  "강",
  "조",
  "윤",
  "장",
  "임",
  "오",
  "한",
  "신",
  "서",
  "권",
  "황",
  "안",
  "송",
  "류",
  "홍"
];

},{}],597:[function(require,module,exports){
arguments[4][571][0].apply(exports,arguments)
},{"dup":571}],598:[function(require,module,exports){
module["exports"] = [
  "0#-#####-####",
  "0##-###-####",
  "0##-####-####"
];

},{}],599:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":598,"dup":83}],600:[function(require,module,exports){
module["exports"] = [
  "#",
  "##"
];

},{}],601:[function(require,module,exports){
module["exports"] = [
  "#{city_root}#{city_suffix}"
];

},{}],602:[function(require,module,exports){
module["exports"] = [
  "Fet",
  "Gjes",
  "Høy",
  "Inn",
  "Fager",
  "Lille",
  "Lo",
  "Mal",
  "Nord",
  "Nær",
  "Sand",
  "Sme",
  "Stav",
  "Stor",
  "Tand",
  "Ut",
  "Vest"
];

},{}],603:[function(require,module,exports){
module["exports"] = [
  "berg",
  "borg",
  "by",
  "bø",
  "dal",
  "eid",
  "fjell",
  "fjord",
  "foss",
  "grunn",
  "hamn",
  "havn",
  "helle",
  "mark",
  "nes",
  "odden",
  "sand",
  "sjøen",
  "stad",
  "strand",
  "strøm",
  "sund",
  "vik",
  "vær",
  "våg",
  "ø",
  "øy",
  "ås"
];

},{}],604:[function(require,module,exports){
module["exports"] = [
  "sgate",
  "svei",
  "s Gate",
  "s Vei",
  "gata",
  "veien"
];

},{}],605:[function(require,module,exports){
module["exports"] = [
  "Norge"
];

},{}],606:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_root = require("./city_root");
address.city_suffix = require("./city_suffix");
address.street_prefix = require("./street_prefix");
address.street_root = require("./street_root");
address.street_suffix = require("./street_suffix");
address.common_street_suffix = require("./common_street_suffix");
address.building_number = require("./building_number");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":600,"./city":601,"./city_root":602,"./city_suffix":603,"./common_street_suffix":604,"./default_country":605,"./postcode":607,"./secondary_address":608,"./state":609,"./street_address":610,"./street_name":611,"./street_prefix":612,"./street_root":613,"./street_suffix":614}],607:[function(require,module,exports){
module["exports"] = [
  "####",
  "####",
  "####",
  "0###"
];

},{}],608:[function(require,module,exports){
module["exports"] = [
  "Leil. ###",
  "Oppgang A",
  "Oppgang B"
];

},{}],609:[function(require,module,exports){
module["exports"] = [
  ""
];

},{}],610:[function(require,module,exports){
arguments[4][61][0].apply(exports,arguments)
},{"dup":61}],611:[function(require,module,exports){
module["exports"] = [
  "#{street_root}#{street_suffix}",
  "#{street_prefix} #{street_root}#{street_suffix}",
  "#{Name.first_name}#{common_street_suffix}",
  "#{Name.last_name}#{common_street_suffix}"
];

},{}],612:[function(require,module,exports){
module["exports"] = [
  "Øvre",
  "Nedre",
  "Søndre",
  "Gamle",
  "Østre",
  "Vestre"
];

},{}],613:[function(require,module,exports){
module["exports"] = [
  "Eike",
  "Bjørke",
  "Gran",
  "Vass",
  "Furu",
  "Litj",
  "Lille",
  "Høy",
  "Fosse",
  "Elve",
  "Ku",
  "Konvall",
  "Soldugg",
  "Hestemyr",
  "Granitt",
  "Hegge",
  "Rogne",
  "Fiol",
  "Sol",
  "Ting",
  "Malm",
  "Klokker",
  "Preste",
  "Dam",
  "Geiterygg",
  "Bekke",
  "Berg",
  "Kirke",
  "Kors",
  "Bru",
  "Blåveis",
  "Torg",
  "Sjø"
];

},{}],614:[function(require,module,exports){
module["exports"] = [
  "alléen",
  "bakken",
  "berget",
  "bråten",
  "eggen",
  "engen",
  "ekra",
  "faret",
  "flata",
  "gata",
  "gjerdet",
  "grenda",
  "gropa",
  "hagen",
  "haugen",
  "havna",
  "holtet",
  "høgda",
  "jordet",
  "kollen",
  "kroken",
  "lia",
  "lunden",
  "lyngen",
  "løkka",
  "marka",
  "moen",
  "myra",
  "plassen",
  "ringen",
  "roa",
  "røa",
  "skogen",
  "skrenten",
  "spranget",
  "stien",
  "stranda",
  "stubben",
  "stykket",
  "svingen",
  "tjernet",
  "toppen",
  "tunet",
  "vollen",
  "vika",
  "åsen"
];

},{}],615:[function(require,module,exports){
arguments[4][119][0].apply(exports,arguments)
},{"./name":616,"./suffix":617,"dup":119}],616:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name}-#{Name.last_name}",
  "#{Name.last_name}, #{Name.last_name} og #{Name.last_name}"
];

},{}],617:[function(require,module,exports){
module["exports"] = [
  "Gruppen",
  "AS",
  "ASA",
  "BA",
  "RFH",
  "og Sønner"
];

},{}],618:[function(require,module,exports){
var nb_NO = {};
module['exports'] = nb_NO;
nb_NO.title = "Norwegian";
nb_NO.address = require("./address");
nb_NO.company = require("./company");
nb_NO.internet = require("./internet");
nb_NO.name = require("./name");
nb_NO.phone_number = require("./phone_number");

},{"./address":606,"./company":615,"./internet":620,"./name":623,"./phone_number":630}],619:[function(require,module,exports){
module["exports"] = [
  "no",
  "com",
  "net",
  "org"
];

},{}],620:[function(require,module,exports){
arguments[4][124][0].apply(exports,arguments)
},{"./domain_suffix":619,"dup":124}],621:[function(require,module,exports){
module["exports"] = [
  "Emma",
  "Sara",
  "Thea",
  "Ida",
  "Julie",
  "Nora",
  "Emilie",
  "Ingrid",
  "Hanna",
  "Maria",
  "Sofie",
  "Anna",
  "Malin",
  "Amalie",
  "Vilde",
  "Frida",
  "Andrea",
  "Tuva",
  "Victoria",
  "Mia",
  "Karoline",
  "Mathilde",
  "Martine",
  "Linnea",
  "Marte",
  "Hedda",
  "Marie",
  "Helene",
  "Silje",
  "Leah",
  "Maja",
  "Elise",
  "Oda",
  "Kristine",
  "Aurora",
  "Kaja",
  "Camilla",
  "Mari",
  "Maren",
  "Mina",
  "Selma",
  "Jenny",
  "Celine",
  "Eline",
  "Sunniva",
  "Natalie",
  "Tiril",
  "Synne",
  "Sandra",
  "Madeleine"
];

},{}],622:[function(require,module,exports){
module["exports"] = [
  "Emma",
  "Sara",
  "Thea",
  "Ida",
  "Julie",
  "Nora",
  "Emilie",
  "Ingrid",
  "Hanna",
  "Maria",
  "Sofie",
  "Anna",
  "Malin",
  "Amalie",
  "Vilde",
  "Frida",
  "Andrea",
  "Tuva",
  "Victoria",
  "Mia",
  "Karoline",
  "Mathilde",
  "Martine",
  "Linnea",
  "Marte",
  "Hedda",
  "Marie",
  "Helene",
  "Silje",
  "Leah",
  "Maja",
  "Elise",
  "Oda",
  "Kristine",
  "Aurora",
  "Kaja",
  "Camilla",
  "Mari",
  "Maren",
  "Mina",
  "Selma",
  "Jenny",
  "Celine",
  "Eline",
  "Sunniva",
  "Natalie",
  "Tiril",
  "Synne",
  "Sandra",
  "Madeleine",
  "Markus",
  "Mathias",
  "Kristian",
  "Jonas",
  "Andreas",
  "Alexander",
  "Martin",
  "Sander",
  "Daniel",
  "Magnus",
  "Henrik",
  "Tobias",
  "Kristoffer",
  "Emil",
  "Adrian",
  "Sebastian",
  "Marius",
  "Elias",
  "Fredrik",
  "Thomas",
  "Sondre",
  "Benjamin",
  "Jakob",
  "Oliver",
  "Lucas",
  "Oskar",
  "Nikolai",
  "Filip",
  "Mats",
  "William",
  "Erik",
  "Simen",
  "Ole",
  "Eirik",
  "Isak",
  "Kasper",
  "Noah",
  "Lars",
  "Joakim",
  "Johannes",
  "Håkon",
  "Sindre",
  "Jørgen",
  "Herman",
  "Anders",
  "Jonathan",
  "Even",
  "Theodor",
  "Mikkel",
  "Aksel"
];

},{}],623:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.feminine_name = require("./feminine_name");
name.masculine_name = require("./masculine_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.name = require("./name");

},{"./feminine_name":621,"./first_name":622,"./last_name":624,"./masculine_name":625,"./name":626,"./prefix":627,"./suffix":628}],624:[function(require,module,exports){
module["exports"] = [
  "Johansen",
  "Hansen",
  "Andersen",
  "Kristiansen",
  "Larsen",
  "Olsen",
  "Solberg",
  "Andresen",
  "Pedersen",
  "Nilsen",
  "Berg",
  "Halvorsen",
  "Karlsen",
  "Svendsen",
  "Jensen",
  "Haugen",
  "Martinsen",
  "Eriksen",
  "Sørensen",
  "Johnsen",
  "Myhrer",
  "Johannessen",
  "Nielsen",
  "Hagen",
  "Pettersen",
  "Bakke",
  "Skuterud",
  "Løken",
  "Gundersen",
  "Strand",
  "Jørgensen",
  "Kvarme",
  "Røed",
  "Sæther",
  "Stensrud",
  "Moe",
  "Kristoffersen",
  "Jakobsen",
  "Holm",
  "Aas",
  "Lie",
  "Moen",
  "Andreassen",
  "Vedvik",
  "Nguyen",
  "Jacobsen",
  "Torgersen",
  "Ruud",
  "Krogh",
  "Christiansen",
  "Bjerke",
  "Aalerud",
  "Borge",
  "Sørlie",
  "Berge",
  "Østli",
  "Ødegård",
  "Torp",
  "Henriksen",
  "Haukelidsæter",
  "Fjeld",
  "Danielsen",
  "Aasen",
  "Fredriksen",
  "Dahl",
  "Berntsen",
  "Arnesen",
  "Wold",
  "Thoresen",
  "Solheim",
  "Skoglund",
  "Bakken",
  "Amundsen",
  "Solli",
  "Smogeli",
  "Kristensen",
  "Glosli",
  "Fossum",
  "Evensen",
  "Eide",
  "Carlsen",
  "Østby",
  "Vegge",
  "Tangen",
  "Smedsrud",
  "Olstad",
  "Lunde",
  "Kleven",
  "Huseby",
  "Bjørnstad",
  "Ryan",
  "Rasmussen",
  "Nygård",
  "Nordskaug",
  "Nordby",
  "Mathisen",
  "Hopland",
  "Gran",
  "Finstad",
  "Edvardsen"
];

},{}],625:[function(require,module,exports){
module["exports"] = [
  "Markus",
  "Mathias",
  "Kristian",
  "Jonas",
  "Andreas",
  "Alexander",
  "Martin",
  "Sander",
  "Daniel",
  "Magnus",
  "Henrik",
  "Tobias",
  "Kristoffer",
  "Emil",
  "Adrian",
  "Sebastian",
  "Marius",
  "Elias",
  "Fredrik",
  "Thomas",
  "Sondre",
  "Benjamin",
  "Jakob",
  "Oliver",
  "Lucas",
  "Oskar",
  "Nikolai",
  "Filip",
  "Mats",
  "William",
  "Erik",
  "Simen",
  "Ole",
  "Eirik",
  "Isak",
  "Kasper",
  "Noah",
  "Lars",
  "Joakim",
  "Johannes",
  "Håkon",
  "Sindre",
  "Jørgen",
  "Herman",
  "Anders",
  "Jonathan",
  "Even",
  "Theodor",
  "Mikkel",
  "Aksel"
];

},{}],626:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name}",
  "#{first_name} #{last_name} #{suffix}",
  "#{feminine_name} #{feminine_name} #{last_name}",
  "#{masculine_name} #{masculine_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name}"
];

},{}],627:[function(require,module,exports){
module["exports"] = [
  "Dr.",
  "Prof."
];

},{}],628:[function(require,module,exports){
module["exports"] = [
  "Jr.",
  "Sr.",
  "I",
  "II",
  "III",
  "IV",
  "V"
];

},{}],629:[function(require,module,exports){
module["exports"] = [
  "########",
  "## ## ## ##",
  "### ## ###",
  "+47 ## ## ## ##"
];

},{}],630:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":629,"dup":83}],631:[function(require,module,exports){
module["exports"] = [
  "Bhaktapur",
  "Biratnagar",
  "Birendranagar",
  "Birgunj",
  "Butwal",
  "Damak",
  "Dharan",
  "Gaur",
  "Gorkha",
  "Hetauda",
  "Itahari",
  "Janakpur",
  "Kathmandu",
  "Lahan",
  "Nepalgunj",
  "Pokhara"
];

},{}],632:[function(require,module,exports){
module["exports"] = [
  "Nepal"
];

},{}],633:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.postcode = require("./postcode");
address.state = require("./state");
address.city = require("./city");
address.default_country = require("./default_country");

},{"./city":631,"./default_country":632,"./postcode":634,"./state":635}],634:[function(require,module,exports){
module["exports"] = [
  0
];

},{}],635:[function(require,module,exports){
module["exports"] = [
  "Baglung",
  "Banke",
  "Bara",
  "Bardiya",
  "Bhaktapur",
  "Bhojupu",
  "Chitwan",
  "Dailekh",
  "Dang",
  "Dhading",
  "Dhankuta",
  "Dhanusa",
  "Dolakha",
  "Dolpha",
  "Gorkha",
  "Gulmi",
  "Humla",
  "Ilam",
  "Jajarkot",
  "Jhapa",
  "Jumla",
  "Kabhrepalanchok",
  "Kalikot",
  "Kapilvastu",
  "Kaski",
  "Kathmandu",
  "Lalitpur",
  "Lamjung",
  "Manang",
  "Mohottari",
  "Morang",
  "Mugu",
  "Mustang",
  "Myagdi",
  "Nawalparasi",
  "Nuwakot",
  "Palpa",
  "Parbat",
  "Parsa",
  "Ramechhap",
  "Rauswa",
  "Rautahat",
  "Rolpa",
  "Rupandehi",
  "Sankhuwasabha",
  "Sarlahi",
  "Sindhuli",
  "Sindhupalchok",
  "Sunsari",
  "Surket",
  "Syangja",
  "Tanahu",
  "Terhathum"
];

},{}],636:[function(require,module,exports){
arguments[4][227][0].apply(exports,arguments)
},{"./suffix":637,"dup":227}],637:[function(require,module,exports){
module["exports"] = [
  "Pvt Ltd",
  "Group",
  "Ltd",
  "Limited"
];

},{}],638:[function(require,module,exports){
var nep = {};
module['exports'] = nep;
nep.title = "Nepalese";
nep.name = require("./name");
nep.address = require("./address");
nep.internet = require("./internet");
nep.company = require("./company");
nep.phone_number = require("./phone_number");

},{"./address":633,"./company":636,"./internet":641,"./name":643,"./phone_number":646}],639:[function(require,module,exports){
module["exports"] = [
  "np",
  "com",
  "info",
  "net",
  "org"
];

},{}],640:[function(require,module,exports){
module["exports"] = [
  "worldlink.com.np",
  "gmail.com",
  "yahoo.com",
  "hotmail.com"
];

},{}],641:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./domain_suffix":639,"./free_email":640,"dup":73}],642:[function(require,module,exports){
module["exports"] = [
  "Aarav",
  "Ajita",
  "Amit",
  "Amita",
  "Amrit",
  "Arijit",
  "Ashmi",
  "Asmita",
  "Bibek",
  "Bijay",
  "Bikash",
  "Bina",
  "Bishal",
  "Bishnu",
  "Buddha",
  "Deepika",
  "Dipendra",
  "Gagan",
  "Ganesh",
  "Khem",
  "Krishna",
  "Laxmi",
  "Manisha",
  "Nabin",
  "Nikita",
  "Niraj",
  "Nischal",
  "Padam",
  "Pooja",
  "Prabin",
  "Prakash",
  "Prashant",
  "Prem",
  "Purna",
  "Rajendra",
  "Rajina",
  "Raju",
  "Rakesh",
  "Ranjan",
  "Ratna",
  "Sagar",
  "Sandeep",
  "Sanjay",
  "Santosh",
  "Sarita",
  "Shilpa",
  "Shirisha",
  "Shristi",
  "Siddhartha",
  "Subash",
  "Sumeet",
  "Sunita",
  "Suraj",
  "Susan",
  "Sushant"
];

},{}],643:[function(require,module,exports){
arguments[4][233][0].apply(exports,arguments)
},{"./first_name":642,"./last_name":644,"dup":233}],644:[function(require,module,exports){
module["exports"] = [
  "Adhikari",
  "Aryal",
  "Baral",
  "Basnet",
  "Bastola",
  "Basynat",
  "Bhandari",
  "Bhattarai",
  "Chettri",
  "Devkota",
  "Dhakal",
  "Dongol",
  "Ghale",
  "Gurung",
  "Gyawali",
  "Hamal",
  "Jung",
  "KC",
  "Kafle",
  "Karki",
  "Khadka",
  "Koirala",
  "Lama",
  "Limbu",
  "Magar",
  "Maharjan",
  "Niroula",
  "Pandey",
  "Pradhan",
  "Rana",
  "Raut",
  "Sai",
  "Shai",
  "Shakya",
  "Sherpa",
  "Shrestha",
  "Subedi",
  "Tamang",
  "Thapa"
];

},{}],645:[function(require,module,exports){
module["exports"] = [
  "##-#######",
  "+977-#-#######",
  "+977########"
];

},{}],646:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":645,"dup":83}],647:[function(require,module,exports){
module["exports"] = [
  "#",
  "##",
  "###",
  "###a",
  "###b",
  "###c",
  "### I",
  "### II",
  "### III"
];

},{}],648:[function(require,module,exports){
module["exports"] = [
  "#{Name.first_name}#{city_suffix}",
  "#{Name.last_name}#{city_suffix}",
  "#{city_prefix} #{Name.first_name}#{city_suffix}",
  "#{city_prefix} #{Name.last_name}#{city_suffix}"
];

},{}],649:[function(require,module,exports){
module["exports"] = [
  "Noord",
  "Oost",
  "West",
  "Zuid",
  "Nieuw",
  "Oud"
];

},{}],650:[function(require,module,exports){
module["exports"] = [
  "dam",
  "berg",
  " aan de Rijn",
  " aan de IJssel",
  "swaerd",
  "endrecht",
  "recht",
  "ambacht",
  "enmaes",
  "wijk",
  "sland",
  "stroom",
  "sluus",
  "dijk",
  "dorp",
  "burg",
  "veld",
  "sluis",
  "koop",
  "lek",
  "hout",
  "geest",
  "kerk",
  "woude",
  "hoven",
  "hoten",
  "ingen",
  "plas",
  "meer"
];

},{}],651:[function(require,module,exports){
module["exports"] = [
  "Afghanistan",
  "Akrotiri",
  "Albanië",
  "Algerije",
  "Amerikaanse Maagdeneilanden",
  "Amerikaans-Samoa",
  "Andorra",
  "Angola",
  "Anguilla",
  "Antarctica",
  "Antigua en Barbuda",
  "Arctic Ocean",
  "Argentinië",
  "Armenië",
  "Aruba",
  "Ashmore and Cartier Islands",
  "Atlantic Ocean",
  "Australië",
  "Azerbeidzjan",
  "Bahama's",
  "Bahrein",
  "Bangladesh",
  "Barbados",
  "Belarus",
  "België",
  "Belize",
  "Benin",
  "Bermuda",
  "Bhutan",
  "Bolivië",
  "Bosnië-Herzegovina",
  "Botswana",
  "Bouvet Island",
  "Brazilië",
  "British Indian Ocean Territory",
  "Britse Maagdeneilanden",
  "Brunei",
  "Bulgarije",
  "Burkina Faso",
  "Burundi",
  "Cambodja",
  "Canada",
  "Caymaneilanden",
  "Centraal-Afrikaanse Republiek",
  "Chili",
  "China",
  "Christmas Island",
  "Clipperton Island",
  "Cocos (Keeling) Islands",
  "Colombia",
  "Comoren (Unie)",
  "Congo (Democratische Republiek)",
  "Congo (Volksrepubliek)",
  "Cook",
  "Coral Sea Islands",
  "Costa Rica",
  "Cuba",
  "Cyprus",
  "Denemarken",
  "Dhekelia",
  "Djibouti",
  "Dominica",
  "Dominicaanse Republiek",
  "Duitsland",
  "Ecuador",
  "Egypte",
  "El Salvador",
  "Equatoriaal-Guinea",
  "Eritrea",
  "Estland",
  "Ethiopië",
  "European Union",
  "Falkland",
  "Faroe Islands",
  "Fiji",
  "Filipijnen",
  "Finland",
  "Frankrijk",
  "Frans-Polynesië",
  "French Southern and Antarctic Lands",
  "Gabon",
  "Gambia",
  "Gaza Strip",
  "Georgië",
  "Ghana",
  "Gibraltar",
  "Grenada",
  "Griekenland",
  "Groenland",
  "Guam",
  "Guatemala",
  "Guernsey",
  "Guinea",
  "Guinee-Bissau",
  "Guyana",
  "Haïti",
  "Heard Island and McDonald Islands",
  "Heilige Stoel",
  "Honduras",
  "Hongarije",
  "Hongkong",
  "Ierland",
  "IJsland",
  "India",
  "Indian Ocean",
  "Indonesië",
  "Irak",
  "Iran",
  "Isle of Man",
  "Israël",
  "Italië",
  "Ivoorkust",
  "Jamaica",
  "Jan Mayen",
  "Japan",
  "Jemen",
  "Jersey",
  "Jordanië",
  "Kaapverdië",
  "Kameroen",
  "Kazachstan",
  "Kenia",
  "Kirgizstan",
  "Kiribati",
  "Koeweit",
  "Kroatië",
  "Laos",
  "Lesotho",
  "Letland",
  "Libanon",
  "Liberia",
  "Libië",
  "Liechtenstein",
  "Litouwen",
  "Luxemburg",
  "Macao",
  "Macedonië",
  "Madagaskar",
  "Malawi",
  "Maldiven",
  "Maleisië",
  "Mali",
  "Malta",
  "Marokko",
  "Marshall Islands",
  "Mauritanië",
  "Mauritius",
  "Mayotte",
  "Mexico",
  "Micronesia, Federated States of",
  "Moldavië",
  "Monaco",
  "Mongolië",
  "Montenegro",
  "Montserrat",
  "Mozambique",
  "Myanmar",
  "Namibië",
  "Nauru",
  "Navassa Island",
  "Nederland",
  "Nederlandse Antillen",
  "Nepal",
  "Ngwane",
  "Nicaragua",
  "Nieuw-Caledonië",
  "Nieuw-Zeeland",
  "Niger",
  "Nigeria",
  "Niue",
  "Noordelijke Marianen",
  "Noord-Korea",
  "Noorwegen",
  "Norfolk Island",
  "Oekraïne",
  "Oezbekistan",
  "Oman",
  "Oostenrijk",
  "Pacific Ocean",
  "Pakistan",
  "Palau",
  "Panama",
  "Papoea-Nieuw-Guinea",
  "Paracel Islands",
  "Paraguay",
  "Peru",
  "Pitcairn",
  "Polen",
  "Portugal",
  "Puerto Rico",
  "Qatar",
  "Roemenië",
  "Rusland",
  "Rwanda",
  "Saint Helena",
  "Saint Lucia",
  "Saint Vincent en de Grenadines",
  "Saint-Pierre en Miquelon",
  "Salomon",
  "Samoa",
  "San Marino",
  "São Tomé en Principe",
  "Saudi-Arabië",
  "Senegal",
  "Servië",
  "Seychellen",
  "Sierra Leone",
  "Singapore",
  "Sint-Kitts en Nevis",
  "Slovenië",
  "Slowakije",
  "Soedan",
  "Somalië",
  "South Georgia and the South Sandwich Islands",
  "Southern Ocean",
  "Spanje",
  "Spratly Islands",
  "Sri Lanka",
  "Suriname",
  "Svalbard",
  "Syrië",
  "Tadzjikistan",
  "Taiwan",
  "Tanzania",
  "Thailand",
  "Timor Leste",
  "Togo",
  "Tokelau",
  "Tonga",
  "Trinidad en Tobago",
  "Tsjaad",
  "Tsjechië",
  "Tunesië",
  "Turkije",
  "Turkmenistan",
  "Turks-en Caicoseilanden",
  "Tuvalu",
  "Uganda",
  "Uruguay",
  "Vanuatu",
  "Venezuela",
  "Verenigd Koninkrijk",
  "Verenigde Arabische Emiraten",
  "Verenigde Staten van Amerika",
  "Vietnam",
  "Wake Island",
  "Wallis en Futuna",
  "Wereld",
  "West Bank",
  "Westelijke Sahara",
  "Zambia",
  "Zimbabwe",
  "Zuid-Afrika",
  "Zuid-Korea",
  "Zweden",
  "Zwitserland"
];

},{}],652:[function(require,module,exports){
module["exports"] = [
  "Nederland"
];

},{}],653:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.city = require("./city");
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.default_country = require("./default_country");

},{"./building_number":647,"./city":648,"./city_prefix":649,"./city_suffix":650,"./country":651,"./default_country":652,"./postcode":654,"./secondary_address":655,"./state":656,"./street_address":657,"./street_name":658,"./street_suffix":659}],654:[function(require,module,exports){
module["exports"] = [
  "#### ??"
];

},{}],655:[function(require,module,exports){
module["exports"] = [
  "1 hoog",
  "2 hoog",
  "3 hoog"
];

},{}],656:[function(require,module,exports){
module["exports"] = [
  "Noord-Holland",
  "Zuid-Holland",
  "Utrecht",
  "Zeeland",
  "Overijssel",
  "Gelderland",
  "Drenthe",
  "Friesland",
  "Groningen",
  "Noord-Brabant",
  "Limburg",
  "Flevoland"
];

},{}],657:[function(require,module,exports){
arguments[4][61][0].apply(exports,arguments)
},{"dup":61}],658:[function(require,module,exports){
arguments[4][564][0].apply(exports,arguments)
},{"dup":564}],659:[function(require,module,exports){
module["exports"] = [
  "straat",
  "laan",
  "weg",
  "plantsoen",
  "park"
];

},{}],660:[function(require,module,exports){
arguments[4][227][0].apply(exports,arguments)
},{"./suffix":661,"dup":227}],661:[function(require,module,exports){
module["exports"] = [
  "BV",
  "V.O.F.",
  "Group",
  "en Zonen"
];

},{}],662:[function(require,module,exports){
var nl = {};
module['exports'] = nl;
nl.title = "Dutch";
nl.address = require("./address");
nl.company = require("./company");
nl.internet = require("./internet");
nl.lorem = require("./lorem");
nl.name = require("./name");
nl.phone_number = require("./phone_number");

},{"./address":653,"./company":660,"./internet":665,"./lorem":666,"./name":670,"./phone_number":677}],663:[function(require,module,exports){
module["exports"] = [
  "nl",
  "com",
  "net",
  "org"
];

},{}],664:[function(require,module,exports){
arguments[4][72][0].apply(exports,arguments)
},{"dup":72}],665:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./domain_suffix":663,"./free_email":664,"dup":73}],666:[function(require,module,exports){
arguments[4][203][0].apply(exports,arguments)
},{"./supplemental":667,"./words":668,"dup":203}],667:[function(require,module,exports){
arguments[4][204][0].apply(exports,arguments)
},{"dup":204}],668:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"dup":75}],669:[function(require,module,exports){
module["exports"] = [
  "Amber",
  "Anna",
  "Anne",
  "Anouk",
  "Bas",
  "Bram",
  "Britt",
  "Daan",
  "Emma",
  "Eva",
  "Femke",
  "Finn",
  "Fleur",
  "Iris",
  "Isa",
  "Jan",
  "Jasper",
  "Jayden",
  "Jesse",
  "Johannes",
  "Julia",
  "Julian",
  "Kevin",
  "Lars",
  "Lieke",
  "Lisa",
  "Lotte",
  "Lucas",
  "Luuk",
  "Maud",
  "Max",
  "Mike",
  "Milan",
  "Nick",
  "Niels",
  "Noa",
  "Rick",
  "Roos",
  "Ruben",
  "Sander",
  "Sanne",
  "Sem",
  "Sophie",
  "Stijn",
  "Sven",
  "Thijs",
  "Thijs",
  "Thomas",
  "Tim",
  "Tom"
];

},{}],670:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.tussenvoegsel = require("./tussenvoegsel");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.name = require("./name");

},{"./first_name":669,"./last_name":671,"./name":672,"./prefix":673,"./suffix":674,"./tussenvoegsel":675}],671:[function(require,module,exports){
module["exports"] = [
  "Bakker",
  "Beek",
  "Berg",
  "Boer",
  "Bos",
  "Bosch",
  "Brink",
  "Broek",
  "Brouwer",
  "Bruin",
  "Dam",
  "Dekker",
  "Dijk",
  "Dijkstra",
  "Graaf",
  "Groot",
  "Haan",
  "Hendriks",
  "Heuvel",
  "Hoek",
  "Jacobs",
  "Jansen",
  "Janssen",
  "Jong",
  "Klein",
  "Kok",
  "Koning",
  "Koster",
  "Leeuwen",
  "Linden",
  "Maas",
  "Meer",
  "Meijer",
  "Mulder",
  "Peters",
  "Ruiter",
  "Schouten",
  "Smit",
  "Smits",
  "Stichting",
  "Veen",
  "Ven",
  "Vermeulen",
  "Visser",
  "Vliet",
  "Vos",
  "Vries",
  "Wal",
  "Willems",
  "Wit"
];

},{}],672:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name}",
  "#{first_name} #{last_name} #{suffix}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{tussenvoegsel} #{last_name}",
  "#{first_name} #{tussenvoegsel} #{last_name}"
];

},{}],673:[function(require,module,exports){
module["exports"] = [
  "Dhr.",
  "Mevr. Dr.",
  "Bsc",
  "Msc",
  "Prof."
];

},{}],674:[function(require,module,exports){
arguments[4][628][0].apply(exports,arguments)
},{"dup":628}],675:[function(require,module,exports){
module["exports"] = [
  "van",
  "van de",
  "van den",
  "van 't",
  "van het",
  "de",
  "den"
];

},{}],676:[function(require,module,exports){
module["exports"] = [
  "(####) ######",
  "##########",
  "06########",
  "06 #### ####"
];

},{}],677:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":676,"dup":83}],678:[function(require,module,exports){
arguments[4][132][0].apply(exports,arguments)
},{"dup":132}],679:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"dup":85}],680:[function(require,module,exports){
module["exports"] = [
  "Aleksandrów Kujawski",
  "Aleksandrów Łódzki",
  "Alwernia",
  "Andrychów",
  "Annopol",
  "Augustów",
  "Babimost",
  "Baborów",
  "Baranów Sandomierski",
  "Barcin",
  "Barczewo",
  "Bardo",
  "Barlinek",
  "Bartoszyce",
  "Barwice",
  "Bełchatów",
  "Bełżyce",
  "Będzin",
  "Biała",
  "Biała Piska",
  "Biała Podlaska",
  "Biała Rawska",
  "Białobrzegi",
  "Białogard",
  "Biały Bór",
  "Białystok",
  "Biecz",
  "Bielawa",
  "Bielsk Podlaski",
  "Bielsko-Biała",
  "Bieruń",
  "Bierutów",
  "Bieżuń",
  "Biłgoraj",
  "Biskupiec",
  "Bisztynek",
  "Blachownia",
  "Błaszki",
  "Błażowa",
  "Błonie",
  "Bobolice",
  "Bobowa",
  "Bochnia",
  "Bodzentyn",
  "Bogatynia",
  "Boguchwała",
  "Boguszów-Gorce",
  "Bojanowo",
  "Bolesławiec",
  "Bolków",
  "Borek Wielkopolski",
  "Borne Sulinowo",
  "Braniewo",
  "Brańsk",
  "Brodnica",
  "Brok",
  "Brusy",
  "Brwinów",
  "Brzeg",
  "Brzeg Dolny",
  "Brzesko",
  "Brzeszcze",
  "Brześć Kujawski",
  "Brzeziny",
  "Brzostek",
  "Brzozów",
  "Buk",
  "Bukowno",
  "Busko-Zdrój",
  "Bychawa",
  "Byczyna",
  "Bydgoszcz",
  "Bystrzyca Kłodzka",
  "Bytom",
  "Bytom Odrzański",
  "Bytów",
  "Cedynia",
  "Chełm",
  "Chełmek",
  "Chełmno",
  "Chełmża",
  "Chęciny",
  "Chmielnik",
  "Chocianów",
  "Chociwel",
  "Chodecz",
  "Chodzież",
  "Chojna",
  "Chojnice",
  "Chojnów",
  "Choroszcz",
  "Chorzele",
  "Chorzów",
  "Choszczno",
  "Chrzanów",
  "Ciechanowiec",
  "Ciechanów",
  "Ciechocinek",
  "Cieszanów",
  "Cieszyn",
  "Ciężkowice",
  "Cybinka",
  "Czaplinek",
  "Czarna Białostocka",
  "Czarna Woda",
  "Czarne",
  "Czarnków",
  "Czchów",
  "Czechowice-Dziedzice",
  "Czeladź",
  "Czempiń",
  "Czerniejewo",
  "Czersk",
  "Czerwieńsk",
  "Czerwionka-Leszczyny",
  "Częstochowa",
  "Człopa",
  "Człuchów",
  "Czyżew",
  "Ćmielów",
  "Daleszyce",
  "Darłowo",
  "Dąbie",
  "Dąbrowa Białostocka",
  "Dąbrowa Górnicza",
  "Dąbrowa Tarnowska",
  "Debrzno",
  "Dębica",
  "Dęblin",
  "Dębno",
  "Dobczyce",
  "Dobiegniew",
  "Dobra (powiat łobeski)",
  "Dobra (powiat turecki)",
  "Dobre Miasto",
  "Dobrodzień",
  "Dobrzany",
  "Dobrzyń nad Wisłą",
  "Dolsk",
  "Drawno",
  "Drawsko Pomorskie",
  "Drezdenko",
  "Drobin",
  "Drohiczyn",
  "Drzewica",
  "Dukla",
  "Duszniki-Zdrój",
  "Dynów",
  "Działdowo",
  "Działoszyce",
  "Działoszyn",
  "Dzierzgoń",
  "Dzierżoniów",
  "Dziwnów",
  "Elbląg",
  "Ełk",
  "Frampol",
  "Frombork",
  "Garwolin",
  "Gąbin",
  "Gdańsk",
  "Gdynia",
  "Giżycko",
  "Glinojeck",
  "Gliwice",
  "Głogów",
  "Głogów Małopolski",
  "Głogówek",
  "Głowno",
  "Głubczyce",
  "Głuchołazy",
  "Głuszyca",
  "Gniew",
  "Gniewkowo",
  "Gniezno",
  "Gogolin",
  "Golczewo",
  "Goleniów",
  "Golina",
  "Golub-Dobrzyń",
  "Gołańcz",
  "Gołdap",
  "Goniądz",
  "Gorlice",
  "Gorzów Śląski",
  "Gorzów Wielkopolski",
  "Gostynin",
  "Gostyń",
  "Gościno",
  "Gozdnica",
  "Góra",
  "Góra Kalwaria",
  "Górowo Iławeckie",
  "Górzno",
  "Grabów nad Prosną",
  "Grajewo",
  "Grodków",
  "Grodzisk Mazowiecki",
  "Grodzisk Wielkopolski",
  "Grójec",
  "Grudziądz",
  "Grybów",
  "Gryfice",
  "Gryfino",
  "Gryfów Śląski",
  "Gubin",
  "Hajnówka",
  "Halinów",
  "Hel",
  "Hrubieszów",
  "Iława",
  "Iłowa",
  "Iłża",
  "Imielin",
  "Inowrocław",
  "Ińsko",
  "Iwonicz-Zdrój",
  "Izbica Kujawska",
  "Jabłonowo Pomorskie",
  "Janikowo",
  "Janowiec Wielkopolski",
  "Janów Lubelski",
  "Jarocin",
  "Jarosław",
  "Jasień",
  "Jasło",
  "Jastarnia",
  "Jastrowie",
  "Jastrzębie-Zdrój",
  "Jawor",
  "Jaworzno",
  "Jaworzyna Śląska",
  "Jedlicze",
  "Jedlina-Zdrój",
  "Jedwabne",
  "Jelcz-Laskowice",
  "Jelenia Góra",
  "Jeziorany",
  "Jędrzejów",
  "Jordanów",
  "Józefów (powiat biłgorajski)",
  "Józefów (powiat otwocki)",
  "Jutrosin",
  "Kalety",
  "Kalisz",
  "Kalisz Pomorski",
  "Kalwaria Zebrzydowska",
  "Kałuszyn",
  "Kamienna Góra",
  "Kamień Krajeński",
  "Kamień Pomorski",
  "Kamieńsk",
  "Kańczuga",
  "Karczew",
  "Kargowa",
  "Karlino",
  "Karpacz",
  "Kartuzy",
  "Katowice",
  "Kazimierz Dolny",
  "Kazimierza Wielka",
  "Kąty Wrocławskie",
  "Kcynia",
  "Kędzierzyn-Koźle",
  "Kępice",
  "Kępno",
  "Kętrzyn",
  "Kęty",
  "Kielce",
  "Kietrz",
  "Kisielice",
  "Kleczew",
  "Kleszczele",
  "Kluczbork",
  "Kłecko",
  "Kłobuck",
  "Kłodawa",
  "Kłodzko",
  "Knurów",
  "Knyszyn",
  "Kobylin",
  "Kobyłka",
  "Kock",
  "Kolbuszowa",
  "Kolno",
  "Kolonowskie",
  "Koluszki",
  "Kołaczyce",
  "Koło",
  "Kołobrzeg",
  "Koniecpol",
  "Konin",
  "Konstancin-Jeziorna",
  "Konstantynów Łódzki",
  "Końskie",
  "Koprzywnica",
  "Korfantów",
  "Koronowo",
  "Korsze",
  "Kosów Lacki",
  "Kostrzyn",
  "Kostrzyn nad Odrą",
  "Koszalin",
  "Kościan",
  "Kościerzyna",
  "Kowal",
  "Kowalewo Pomorskie",
  "Kowary",
  "Koziegłowy",
  "Kozienice",
  "Koźmin Wielkopolski",
  "Kożuchów",
  "Kórnik",
  "Krajenka",
  "Kraków",
  "Krapkowice",
  "Krasnobród",
  "Krasnystaw",
  "Kraśnik",
  "Krobia",
  "Krosno",
  "Krosno Odrzańskie",
  "Krośniewice",
  "Krotoszyn",
  "Kruszwica",
  "Krynica Morska",
  "Krynica-Zdrój",
  "Krynki",
  "Krzanowice",
  "Krzepice",
  "Krzeszowice",
  "Krzywiń",
  "Krzyż Wielkopolski",
  "Książ Wielkopolski",
  "Kudowa-Zdrój",
  "Kunów",
  "Kutno",
  "Kuźnia Raciborska",
  "Kwidzyn",
  "Lądek-Zdrój",
  "Legionowo",
  "Legnica",
  "Lesko",
  "Leszno",
  "Leśna",
  "Leśnica",
  "Lewin Brzeski",
  "Leżajsk",
  "Lębork",
  "Lędziny",
  "Libiąż",
  "Lidzbark",
  "Lidzbark Warmiński",
  "Limanowa",
  "Lipiany",
  "Lipno",
  "Lipsk",
  "Lipsko",
  "Lubaczów",
  "Lubań",
  "Lubartów",
  "Lubawa",
  "Lubawka",
  "Lubień Kujawski",
  "Lubin",
  "Lublin",
  "Lubliniec",
  "Lubniewice",
  "Lubomierz",
  "Luboń",
  "Lubraniec",
  "Lubsko",
  "Lwówek",
  "Lwówek Śląski",
  "Łabiszyn",
  "Łańcut",
  "Łapy",
  "Łasin",
  "Łask",
  "Łaskarzew",
  "Łaszczów",
  "Łaziska Górne",
  "Łazy",
  "Łeba",
  "Łęczna",
  "Łęczyca",
  "Łęknica",
  "Łobez",
  "Łobżenica",
  "Łochów",
  "Łomianki",
  "Łomża",
  "Łosice",
  "Łowicz",
  "Łódź",
  "Łuków",
  "Maków Mazowiecki",
  "Maków Podhalański",
  "Malbork",
  "Małogoszcz",
  "Małomice",
  "Margonin",
  "Marki",
  "Maszewo",
  "Miasteczko Śląskie",
  "Miastko",
  "Michałowo",
  "Miechów",
  "Miejska Górka",
  "Mielec",
  "Mieroszów",
  "Mieszkowice",
  "Międzybórz",
  "Międzychód",
  "Międzylesie",
  "Międzyrzec Podlaski",
  "Międzyrzecz",
  "Międzyzdroje",
  "Mikołajki",
  "Mikołów",
  "Mikstat",
  "Milanówek",
  "Milicz",
  "Miłakowo",
  "Miłomłyn",
  "Miłosław",
  "Mińsk Mazowiecki",
  "Mirosławiec",
  "Mirsk",
  "Mława",
  "Młynary",
  "Mogielnica",
  "Mogilno",
  "Mońki",
  "Morąg",
  "Mordy",
  "Moryń",
  "Mosina",
  "Mrągowo",
  "Mrocza",
  "Mszana Dolna",
  "Mszczonów",
  "Murowana Goślina",
  "Muszyna",
  "Mysłowice",
  "Myszków",
  "Myszyniec",
  "Myślenice",
  "Myślibórz",
  "Nakło nad Notecią",
  "Nałęczów",
  "Namysłów",
  "Narol",
  "Nasielsk",
  "Nekla",
  "Nidzica",
  "Niemcza",
  "Niemodlin",
  "Niepołomice",
  "Nieszawa",
  "Nisko",
  "Nowa Dęba",
  "Nowa Ruda",
  "Nowa Sarzyna",
  "Nowa Sól",
  "Nowe",
  "Nowe Brzesko",
  "Nowe Miasteczko",
  "Nowe Miasto Lubawskie",
  "Nowe Miasto nad Pilicą",
  "Nowe Skalmierzyce",
  "Nowe Warpno",
  "Nowogard",
  "Nowogrodziec",
  "Nowogród",
  "Nowogród Bobrzański",
  "Nowy Dwór Gdański",
  "Nowy Dwór Mazowiecki",
  "Nowy Sącz",
  "Nowy Staw",
  "Nowy Targ",
  "Nowy Tomyśl",
  "Nowy Wiśnicz",
  "Nysa",
  "Oborniki",
  "Oborniki Śląskie",
  "Obrzycko",
  "Odolanów",
  "Ogrodzieniec",
  "Okonek",
  "Olecko",
  "Olesno",
  "Oleszyce",
  "Oleśnica",
  "Olkusz",
  "Olsztyn",
  "Olsztynek",
  "Olszyna",
  "Oława",
  "Opalenica",
  "Opatów",
  "Opoczno",
  "Opole",
  "Opole Lubelskie",
  "Orneta",
  "Orzesze",
  "Orzysz",
  "Osieczna",
  "Osiek",
  "Ostrołęka",
  "Ostroróg",
  "Ostrowiec Świętokrzyski",
  "Ostróda",
  "Ostrów Lubelski",
  "Ostrów Mazowiecka",
  "Ostrów Wielkopolski",
  "Ostrzeszów",
  "Ośno Lubuskie",
  "Oświęcim",
  "Otmuchów",
  "Otwock",
  "Ozimek",
  "Ozorków",
  "Ożarów",
  "Ożarów Mazowiecki",
  "Pabianice",
  "Paczków",
  "Pajęczno",
  "Pakość",
  "Parczew",
  "Pasłęk",
  "Pasym",
  "Pelplin",
  "Pełczyce",
  "Piaseczno",
  "Piaski",
  "Piastów",
  "Piechowice",
  "Piekary Śląskie",
  "Pieniężno",
  "Pieńsk",
  "Pieszyce",
  "Pilawa",
  "Pilica",
  "Pilzno",
  "Piła",
  "Piława Górna",
  "Pińczów",
  "Pionki",
  "Piotrków Kujawski",
  "Piotrków Trybunalski",
  "Pisz",
  "Piwniczna-Zdrój",
  "Pleszew",
  "Płock",
  "Płońsk",
  "Płoty",
  "Pniewy",
  "Pobiedziska",
  "Poddębice",
  "Podkowa Leśna",
  "Pogorzela",
  "Polanica-Zdrój",
  "Polanów",
  "Police",
  "Polkowice",
  "Połaniec",
  "Połczyn-Zdrój",
  "Poniatowa",
  "Poniec",
  "Poręba",
  "Poznań",
  "Prabuty",
  "Praszka",
  "Prochowice",
  "Proszowice",
  "Prószków",
  "Pruchnik",
  "Prudnik",
  "Prusice",
  "Pruszcz Gdański",
  "Pruszków",
  "Przasnysz",
  "Przecław",
  "Przedbórz",
  "Przedecz",
  "Przemków",
  "Przemyśl",
  "Przeworsk",
  "Przysucha",
  "Pszczyna",
  "Pszów",
  "Puck",
  "Puławy",
  "Pułtusk",
  "Puszczykowo",
  "Pyrzyce",
  "Pyskowice",
  "Pyzdry",
  "Rabka-Zdrój",
  "Raciąż",
  "Racibórz",
  "Radków",
  "Radlin",
  "Radłów",
  "Radom",
  "Radomsko",
  "Radomyśl Wielki",
  "Radymno",
  "Radziejów",
  "Radzionków",
  "Radzymin",
  "Radzyń Chełmiński",
  "Radzyń Podlaski",
  "Rajgród",
  "Rakoniewice",
  "Raszków",
  "Rawa Mazowiecka",
  "Rawicz",
  "Recz",
  "Reda",
  "Rejowiec Fabryczny",
  "Resko",
  "Reszel",
  "Rogoźno",
  "Ropczyce",
  "Różan",
  "Ruciane-Nida",
  "Ruda Śląska",
  "Rudnik nad Sanem",
  "Rumia",
  "Rybnik",
  "Rychwał",
  "Rydułtowy",
  "Rydzyna",
  "Ryglice",
  "Ryki",
  "Rymanów",
  "Ryn",
  "Rypin",
  "Rzepin",
  "Rzeszów",
  "Rzgów",
  "Sandomierz",
  "Sanok",
  "Sejny",
  "Serock",
  "Sędziszów",
  "Sędziszów Małopolski",
  "Sępopol",
  "Sępólno Krajeńskie",
  "Sianów",
  "Siechnice",
  "Siedlce",
  "Siemianowice Śląskie",
  "Siemiatycze",
  "Sieniawa",
  "Sieradz",
  "Sieraków",
  "Sierpc",
  "Siewierz",
  "Skalbmierz",
  "Skała",
  "Skarszewy",
  "Skaryszew",
  "Skarżysko-Kamienna",
  "Skawina",
  "Skępe",
  "Skierniewice",
  "Skoczów",
  "Skoki",
  "Skórcz",
  "Skwierzyna",
  "Sława",
  "Sławków",
  "Sławno",
  "Słomniki",
  "Słubice",
  "Słupca",
  "Słupsk",
  "Sobótka",
  "Sochaczew",
  "Sokołów Małopolski",
  "Sokołów Podlaski",
  "Sokółka",
  "Solec Kujawski",
  "Sompolno",
  "Sopot",
  "Sosnowiec",
  "Sośnicowice",
  "Stalowa Wola",
  "Starachowice",
  "Stargard Szczeciński",
  "Starogard Gdański",
  "Stary Sącz",
  "Staszów",
  "Stawiski",
  "Stawiszyn",
  "Stąporków",
  "Stęszew",
  "Stoczek Łukowski",
  "Stronie Śląskie",
  "Strumień",
  "Stryków",
  "Strzegom",
  "Strzelce Krajeńskie",
  "Strzelce Opolskie",
  "Strzelin",
  "Strzelno",
  "Strzyżów",
  "Sucha Beskidzka",
  "Suchań",
  "Suchedniów",
  "Suchowola",
  "Sulechów",
  "Sulejów",
  "Sulejówek",
  "Sulęcin",
  "Sulmierzyce",
  "Sułkowice",
  "Supraśl",
  "Suraż",
  "Susz",
  "Suwałki",
  "Swarzędz",
  "Syców",
  "Szadek",
  "Szamocin",
  "Szamotuły",
  "Szczawnica",
  "Szczawno-Zdrój",
  "Szczebrzeszyn",
  "Szczecin",
  "Szczecinek",
  "Szczekociny",
  "Szczucin",
  "Szczuczyn",
  "Szczyrk",
  "Szczytna",
  "Szczytno",
  "Szepietowo",
  "Szklarska Poręba",
  "Szlichtyngowa",
  "Szprotawa",
  "Sztum",
  "Szubin",
  "Szydłowiec",
  "Ścinawa",
  "Ślesin",
  "Śmigiel",
  "Śrem",
  "Środa Śląska",
  "Środa Wielkopolska",
  "Świątniki Górne",
  "Świdnica",
  "Świdnik",
  "Świdwin",
  "Świebodzice",
  "Świebodzin",
  "Świecie",
  "Świeradów-Zdrój",
  "Świerzawa",
  "Świętochłowice",
  "Świnoujście",
  "Tarczyn",
  "Tarnobrzeg",
  "Tarnogród",
  "Tarnowskie Góry",
  "Tarnów",
  "Tczew",
  "Terespol",
  "Tłuszcz",
  "Tolkmicko",
  "Tomaszów Lubelski",
  "Tomaszów Mazowiecki",
  "Toruń",
  "Torzym",
  "Toszek",
  "Trzcianka",
  "Trzciel",
  "Trzcińsko-Zdrój",
  "Trzebiatów",
  "Trzebinia",
  "Trzebnica",
  "Trzemeszno",
  "Tuchola",
  "Tuchów",
  "Tuczno",
  "Tuliszków",
  "Turek",
  "Tuszyn",
  "Twardogóra",
  "Tychowo",
  "Tychy",
  "Tyczyn",
  "Tykocin",
  "Tyszowce",
  "Ujazd",
  "Ujście",
  "Ulanów",
  "Uniejów",
  "Ustka",
  "Ustroń",
  "Ustrzyki Dolne",
  "Wadowice",
  "Wałbrzych",
  "Wałcz",
  "Warka",
  "Warszawa",
  "Warta",
  "Wasilków",
  "Wąbrzeźno",
  "Wąchock",
  "Wągrowiec",
  "Wąsosz",
  "Wejherowo",
  "Węgliniec",
  "Węgorzewo",
  "Węgorzyno",
  "Węgrów",
  "Wiązów",
  "Wieleń",
  "Wielichowo",
  "Wieliczka",
  "Wieluń",
  "Wieruszów",
  "Więcbork",
  "Wilamowice",
  "Wisła",
  "Witkowo",
  "Witnica",
  "Wleń",
  "Władysławowo",
  "Włocławek",
  "Włodawa",
  "Włoszczowa",
  "Wodzisław Śląski",
  "Wojcieszów",
  "Wojkowice",
  "Wojnicz",
  "Wolbórz",
  "Wolbrom",
  "Wolin",
  "Wolsztyn",
  "Wołczyn",
  "Wołomin",
  "Wołów",
  "Woźniki",
  "Wrocław",
  "Wronki",
  "Września",
  "Wschowa",
  "Wyrzysk",
  "Wysoka",
  "Wysokie Mazowieckie",
  "Wyszków",
  "Wyszogród",
  "Wyśmierzyce",
  "Zabłudów",
  "Zabrze",
  "Zagórów",
  "Zagórz",
  "Zakliczyn",
  "Zakopane",
  "Zakroczym",
  "Zalewo",
  "Zambrów",
  "Zamość",
  "Zator",
  "Zawadzkie",
  "Zawichost",
  "Zawidów",
  "Zawiercie",
  "Ząbki",
  "Ząbkowice Śląskie",
  "Zbąszynek",
  "Zbąszyń",
  "Zduny",
  "Zduńska Wola",
  "Zdzieszowice",
  "Zelów",
  "Zgierz",
  "Zgorzelec",
  "Zielona Góra",
  "Zielonka",
  "Ziębice",
  "Złocieniec",
  "Złoczew",
  "Złotoryja",
  "Złotów",
  "Złoty Stok",
  "Zwierzyniec",
  "Zwoleń",
  "Żabno",
  "Żagań",
  "Żarki",
  "Żarów",
  "Żary",
  "Żelechów",
  "Żerków",
  "Żmigród",
  "Żnin",
  "Żory",
  "Żukowo",
  "Żuromin",
  "Żychlin",
  "Żyrardów",
  "Żywiec"
];

},{}],681:[function(require,module,exports){
module["exports"] = [
  "Afganistan",
  "Albania",
  "Algieria",
  "Andora",
  "Angola",
  "Antigua i Barbuda",
  "Arabia Saudyjska",
  "Argentyna",
  "Armenia",
  "Australia",
  "Austria",
  "Azerbejdżan",
  "Bahamy",
  "Bahrajn",
  "Bangladesz",
  "Barbados",
  "Belgia",
  "Belize",
  "Benin",
  "Bhutan",
  "Białoruś",
  "Birma",
  "Boliwia",
  "Sucre",
  "Bośnia i Hercegowina",
  "Botswana",
  "Brazylia",
  "Brunei",
  "Bułgaria",
  "Burkina Faso",
  "Burundi",
  "Chile",
  "Chiny",
  "Chorwacja",
  "Cypr",
  "Czad",
  "Czarnogóra",
  "Czechy",
  "Dania",
  "Demokratyczna Republika Konga",
  "Dominika",
  "Dominikana",
  "Dżibuti",
  "Egipt",
  "Ekwador",
  "Erytrea",
  "Estonia",
  "Etiopia",
  "Fidżi",
  "Filipiny",
  "Finlandia",
  "Francja",
  "Gabon",
  "Gambia",
  "Ghana",
  "Grecja",
  "Grenada",
  "Gruzja",
  "Gujana",
  "Gwatemala",
  "Gwinea",
  "Gwinea Bissau",
  "Gwinea Równikowa",
  "Haiti",
  "Hiszpania",
  "Holandia",
  "Haga",
  "Honduras",
  "Indie",
  "Indonezja",
  "Irak",
  "Iran",
  "Irlandia",
  "Islandia",
  "Izrael",
  "Jamajka",
  "Japonia",
  "Jemen",
  "Jordania",
  "Kambodża",
  "Kamerun",
  "Kanada",
  "Katar",
  "Kazachstan",
  "Kenia",
  "Kirgistan",
  "Kiribati",
  "Kolumbia",
  "Komory",
  "Kongo",
  "Korea Południowa",
  "Korea Północna",
  "Kostaryka",
  "Kuba",
  "Kuwejt",
  "Laos",
  "Lesotho",
  "Liban",
  "Liberia",
  "Libia",
  "Liechtenstein",
  "Litwa",
  "Luksemburg",
  "Łotwa",
  "Macedonia",
  "Madagaskar",
  "Malawi",
  "Malediwy",
  "Malezja",
  "Mali",
  "Malta",
  "Maroko",
  "Mauretania",
  "Mauritius",
  "Meksyk",
  "Mikronezja",
  "Mołdawia",
  "Monako",
  "Mongolia",
  "Mozambik",
  "Namibia",
  "Nauru",
  "Nepal",
  "Niemcy",
  "Niger",
  "Nigeria",
  "Nikaragua",
  "Norwegia",
  "Nowa Zelandia",
  "Oman",
  "Pakistan",
  "Palau",
  "Panama",
  "Papua-Nowa Gwinea",
  "Paragwaj",
  "Peru",
  "Polska",
  "322 575",
  "Portugalia",
  "Republika Południowej Afryki",
  "Republika Środkowoafrykańska",
  "Republika Zielonego Przylądka",
  "Rosja",
  "Rumunia",
  "Rwanda",
  "Saint Kitts i Nevis",
  "Saint Lucia",
  "Saint Vincent i Grenadyny",
  "Salwador",
  "Samoa",
  "San Marino",
  "Senegal",
  "Serbia",
  "Seszele",
  "Sierra Leone",
  "Singapur",
  "Słowacja",
  "Słowenia",
  "Somalia",
  "Sri Lanka",
  "Stany Zjednoczone",
  "Suazi",
  "Sudan",
  "Sudan Południowy",
  "Surinam",
  "Syria",
  "Szwajcaria",
  "Szwecja",
  "Tadżykistan",
  "Tajlandia",
  "Tanzania",
  "Timor Wschodni",
  "Togo",
  "Tonga",
  "Trynidad i Tobago",
  "Tunezja",
  "Turcja",
  "Turkmenistan",
  "Tuvalu",
  "Funafuti",
  "Uganda",
  "Ukraina",
  "Urugwaj",
  2008,
  "Uzbekistan",
  "Vanuatu",
  "Watykan",
  "Wenezuela",
  "Węgry",
  "Wielka Brytania",
  "Wietnam",
  "Włochy",
  "Wybrzeże Kości Słoniowej",
  "Wyspy Marshalla",
  "Wyspy Salomona",
  "Wyspy Świętego Tomasza i Książęca",
  "Zambia",
  "Zimbabwe",
  "Zjednoczone Emiraty Arabskie"
];

},{}],682:[function(require,module,exports){
module["exports"] = [
  "Polska"
];

},{}],683:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.country = require("./country");
address.building_number = require("./building_number");
address.street_prefix = require("./street_prefix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city_name = require("./city_name");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":678,"./city":679,"./city_name":680,"./country":681,"./default_country":682,"./postcode":684,"./secondary_address":685,"./state":686,"./state_abbr":687,"./street_address":688,"./street_name":689,"./street_prefix":690}],684:[function(require,module,exports){
module["exports"] = [
  "##-###"
];

},{}],685:[function(require,module,exports){
arguments[4][143][0].apply(exports,arguments)
},{"dup":143}],686:[function(require,module,exports){
module["exports"] = [
  "Dolnośląskie",
  "Kujawsko-pomorskie",
  "Lubelskie",
  "Lubuskie",
  "Łódzkie",
  "Małopolskie",
  "Mazowieckie",
  "Opolskie",
  "Podkarpackie",
  "Podlaskie",
  "Pomorskie",
  "Śląskie",
  "Świętokrzyskie",
  "Warmińsko-mazurskie",
  "Wielkopolskie",
  "Zachodniopomorskie"
];

},{}],687:[function(require,module,exports){
module["exports"] = [
  "DŚ",
  "KP",
  "LB",
  "LS",
  "ŁD",
  "MP",
  "MZ",
  "OP",
  "PK",
  "PL",
  "PM",
  "ŚL",
  "ŚK",
  "WM",
  "WP",
  "ZP"
];

},{}],688:[function(require,module,exports){
arguments[4][61][0].apply(exports,arguments)
},{"dup":61}],689:[function(require,module,exports){
module["exports"] = [
  "#{street_prefix} #{Name.last_name}"
];

},{}],690:[function(require,module,exports){
module["exports"] = [
  "ul.",
  "al."
];

},{}],691:[function(require,module,exports){
module["exports"] = [
  "50-###-##-##",
  "51-###-##-##",
  "53-###-##-##",
  "57-###-##-##",
  "60-###-##-##",
  "66-###-##-##",
  "69-###-##-##",
  "72-###-##-##",
  "73-###-##-##",
  "78-###-##-##",
  "79-###-##-##",
  "88-###-##-##"
];

},{}],692:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"./formats":691,"dup":65}],693:[function(require,module,exports){
arguments[4][164][0].apply(exports,arguments)
},{"dup":164}],694:[function(require,module,exports){
arguments[4][165][0].apply(exports,arguments)
},{"dup":165}],695:[function(require,module,exports){
arguments[4][166][0].apply(exports,arguments)
},{"dup":166}],696:[function(require,module,exports){
arguments[4][167][0].apply(exports,arguments)
},{"dup":167}],697:[function(require,module,exports){
arguments[4][168][0].apply(exports,arguments)
},{"dup":168}],698:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.adjetive = require("./adjetive");
company.descriptor = require("./descriptor");
company.noun = require("./noun");
company.bs_verb = require("./bs_verb");
company.bs_adjective = require("./bs_adjective");
company.bs_noun = require("./bs_noun");
company.name = require("./name");

},{"./adjetive":693,"./bs_adjective":694,"./bs_noun":695,"./bs_verb":696,"./descriptor":697,"./name":699,"./noun":700,"./suffix":701}],699:[function(require,module,exports){
arguments[4][170][0].apply(exports,arguments)
},{"dup":170}],700:[function(require,module,exports){
arguments[4][171][0].apply(exports,arguments)
},{"dup":171}],701:[function(require,module,exports){
arguments[4][172][0].apply(exports,arguments)
},{"dup":172}],702:[function(require,module,exports){
var pl = {};
module['exports'] = pl;
pl.title = "Polish";
pl.name = require("./name");
pl.address = require("./address");
pl.company = require("./company");
pl.internet = require("./internet");
pl.lorem = require("./lorem");
pl.phone_number = require("./phone_number");
pl.cell_phone = require("./cell_phone");

},{"./address":683,"./cell_phone":692,"./company":698,"./internet":705,"./lorem":706,"./name":710,"./phone_number":716}],703:[function(require,module,exports){
module["exports"] = [
  "com",
  "pl",
  "com.pl",
  "net",
  "org"
];

},{}],704:[function(require,module,exports){
arguments[4][72][0].apply(exports,arguments)
},{"dup":72}],705:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./domain_suffix":703,"./free_email":704,"dup":73}],706:[function(require,module,exports){
arguments[4][203][0].apply(exports,arguments)
},{"./supplemental":707,"./words":708,"dup":203}],707:[function(require,module,exports){
arguments[4][204][0].apply(exports,arguments)
},{"dup":204}],708:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"dup":75}],709:[function(require,module,exports){
module["exports"] = [
  "Aaron",
  "Abraham",
  "Adam",
  "Adrian",
  "Atanazy",
  "Agaton",
  "Alan",
  "Albert",
  "Aleksander",
  "Aleksy",
  "Alfred",
  "Alwar",
  "Ambroży",
  "Anatol",
  "Andrzej",
  "Antoni",
  "Apollinary",
  "Apollo",
  "Arkady",
  "Arkadiusz",
  "Archibald",
  "Arystarch",
  "Arnold",
  "Arseniusz",
  "Artur",
  "August",
  "Baldwin",
  "Bazyli",
  "Benedykt",
  "Beniamin",
  "Bernard",
  "Bertrand",
  "Bertram",
  "Borys",
  "Brajan",
  "Bruno",
  "Cezary",
  "Cecyliusz",
  "Karol",
  "Krystian",
  "Krzysztof",
  "Klarencjusz",
  "Klaudiusz",
  "Klemens",
  "Konrad",
  "Konstanty",
  "Konstantyn",
  "Kornel",
  "Korneliusz",
  "Korneli",
  "Cyryl",
  "Cyrus",
  "Damian",
  "Daniel",
  "Dariusz",
  "Dawid",
  "Dionizy",
  "Demetriusz",
  "Dominik",
  "Donald",
  "Dorian",
  "Edgar",
  "Edmund",
  "Edward",
  "Edwin",
  "Efrem",
  "Efraim",
  "Eliasz",
  "Eleazar",
  "Emil",
  "Emanuel",
  "Erast",
  "Ernest",
  "Eugeniusz",
  "Eustracjusz",
  "Fabian",
  "Feliks",
  "Florian",
  "Franciszek",
  "Fryderyk",
  "Gabriel",
  "Gedeon",
  "Galfryd",
  "Jerzy",
  "Gerald",
  "Gerazym",
  "Gilbert",
  "Gonsalwy",
  "Grzegorz",
  "Gwido",
  "Harald",
  "Henryk",
  "Herbert",
  "Herman",
  "Hilary",
  "Horacy",
  "Hubert",
  "Hugo",
  "Ignacy",
  "Igor",
  "Hilarion",
  "Innocenty",
  "Hipolit",
  "Ireneusz",
  "Erwin",
  "Izaak",
  "Izajasz",
  "Izydor",
  "Jakub",
  "Jeremi",
  "Jeremiasz",
  "Hieronim",
  "Gerald",
  "Joachim",
  "Jan",
  "Janusz",
  "Jonatan",
  "Józef",
  "Jozue",
  "Julian",
  "Juliusz",
  "Justyn",
  "Kalistrat",
  "Kazimierz",
  "Wawrzyniec",
  "Laurenty",
  "Laurencjusz",
  "Łazarz",
  "Leon",
  "Leonard",
  "Leonid",
  "Leon",
  "Ludwik",
  "Łukasz",
  "Lucjan",
  "Magnus",
  "Makary",
  "Marceli",
  "Marek",
  "Marcin",
  "Mateusz",
  "Maurycy",
  "Maksym",
  "Maksymilian",
  "Michał",
  "Miron",
  "Modest",
  "Mojżesz",
  "Natan",
  "Natanael",
  "Nazariusz",
  "Nazary",
  "Nestor",
  "Mikołaj",
  "Nikodem",
  "Olaf",
  "Oleg",
  "Oliwier",
  "Onufry",
  "Orestes",
  "Oskar",
  "Ansgary",
  "Osmund",
  "Pankracy",
  "Pantaleon",
  "Patryk",
  "Patrycjusz",
  "Patrycy",
  "Paweł",
  "Piotr",
  "Filemon",
  "Filip",
  "Platon",
  "Polikarp",
  "Porfiry",
  "Porfiriusz",
  "Prokles",
  "Prokul",
  "Prokop",
  "Kwintyn",
  "Randolf",
  "Rafał",
  "Rajmund",
  "Reginald",
  "Rajnold",
  "Ryszard",
  "Robert",
  "Roderyk",
  "Roger",
  "Roland",
  "Roman",
  "Romeo",
  "Reginald",
  "Rudolf",
  "Samson",
  "Samuel",
  "Salwator",
  "Sebastian",
  "Serafin",
  "Sergiusz",
  "Seweryn",
  "Zygmunt",
  "Sylwester",
  "Szymon",
  "Salomon",
  "Spirydion",
  "Stanisław",
  "Szczepan",
  "Stefan",
  "Terencjusz",
  "Teodor",
  "Tomasz",
  "Tymoteusz",
  "Tobiasz",
  "Walenty",
  "Walentyn",
  "Walerian",
  "Walery",
  "Wiktor",
  "Wincenty",
  "Witalis",
  "Włodzimierz",
  "Władysław",
  "Błażej",
  "Walter",
  "Walgierz",
  "Wacław",
  "Wilfryd",
  "Wilhelm",
  "Ksawery",
  "Ksenofont",
  "Jerzy",
  "Zachariasz",
  "Zachary",
  "Ada",
  "Adelajda",
  "Agata",
  "Agnieszka",
  "Agrypina",
  "Aida",
  "Aleksandra",
  "Alicja",
  "Alina",
  "Amanda",
  "Anastazja",
  "Angela",
  "Andżelika",
  "Angelina",
  "Anna",
  "Hanna",
  "—",
  "Antonina",
  "Ariadna",
  "Aurora",
  "Barbara",
  "Beatrycze",
  "Berta",
  "Brygida",
  "Kamila",
  "Karolina",
  "Karolina",
  "Kornelia",
  "Katarzyna",
  "Cecylia",
  "Karolina",
  "Chloe",
  "Krystyna",
  "Klara",
  "Klaudia",
  "Klementyna",
  "Konstancja",
  "Koralia",
  "Daria",
  "Diana",
  "Dina",
  "Dorota",
  "Edyta",
  "Eleonora",
  "Eliza",
  "Elżbieta",
  "Izabela",
  "Elwira",
  "Emilia",
  "Estera",
  "Eudoksja",
  "Eudokia",
  "Eugenia",
  "Ewa",
  "Ewelina",
  "Ferdynanda",
  "Florencja",
  "Franciszka",
  "Gabriela",
  "Gertruda",
  "Gloria",
  "Gracja",
  "Jadwiga",
  "Helena",
  "Henryka",
  "Nadzieja",
  "Ida",
  "Ilona",
  "Helena",
  "Irena",
  "Irma",
  "Izabela",
  "Izolda",
  "Jakubina",
  "Joanna",
  "Janina",
  "Żaneta",
  "Joanna",
  "Ginewra",
  "Józefina",
  "Judyta",
  "Julia",
  "Julia",
  "Julita",
  "Justyna",
  "Kira",
  "Cyra",
  "Kleopatra",
  "Larysa",
  "Laura",
  "Laurencja",
  "Laurentyna",
  "Lea",
  "Leila",
  "Eleonora",
  "Liliana",
  "Lilianna",
  "Lilia",
  "Lilla",
  "Liza",
  "Eliza",
  "Laura",
  "Ludwika",
  "Luiza",
  "Łucja",
  "Lucja",
  "Lidia",
  "Amabela",
  "Magdalena",
  "Malwina",
  "Małgorzata",
  "Greta",
  "Marianna",
  "Maryna",
  "Marta",
  "Martyna",
  "Maria",
  "Matylda",
  "Maja",
  "Maja",
  "Melania",
  "Michalina",
  "Monika",
  "Nadzieja",
  "Noemi",
  "Natalia",
  "Nikola",
  "Nina",
  "Olga",
  "Olimpia",
  "Oliwia",
  "Ofelia",
  "Patrycja",
  "Paula",
  "Pelagia",
  "Penelopa",
  "Filipa",
  "Paulina",
  "Rachela",
  "Rebeka",
  "Regina",
  "Renata",
  "Rozalia",
  "Róża",
  "Roksana",
  "Rufina",
  "Ruta",
  "Sabina",
  "Sara",
  "Serafina",
  "Sybilla",
  "Sylwia",
  "Zofia",
  "Stella",
  "Stefania",
  "Zuzanna",
  "Tamara",
  "Tacjana",
  "Tekla",
  "Teodora",
  "Teresa",
  "Walentyna",
  "Waleria",
  "Wanesa",
  "Wiara",
  "Weronika",
  "Wiktoria",
  "Wirginia",
  "Bibiana",
  "Bibianna",
  "Wanda",
  "Wilhelmina",
  "Ksawera",
  "Ksenia",
  "Zoe"
];

},{}],710:[function(require,module,exports){
arguments[4][441][0].apply(exports,arguments)
},{"./first_name":709,"./last_name":711,"./name":712,"./prefix":713,"./title":714,"dup":441}],711:[function(require,module,exports){
module["exports"] = [
  "Adamczak",
  "Adamczyk",
  "Adamek",
  "Adamiak",
  "Adamiec",
  "Adamowicz",
  "Adamski",
  "Adamus",
  "Aleksandrowicz",
  "Andrzejczak",
  "Andrzejewski",
  "Antczak",
  "Augustyn",
  "Augustyniak",
  "Bagiński",
  "Balcerzak",
  "Banach",
  "Banasiak",
  "Banasik",
  "Banaś",
  "Baran",
  "Baranowski",
  "Barański",
  "Bartczak",
  "Bartkowiak",
  "Bartnik",
  "Bartosik",
  "Bednarczyk",
  "Bednarek",
  "Bednarski",
  "Bednarz",
  "Białas",
  "Białek",
  "Białkowski",
  "Bielak",
  "Bielawski",
  "Bielecki",
  "Bielski",
  "Bieniek",
  "Biernacki",
  "Biernat",
  "Bieńkowski",
  "Bilski",
  "Bober",
  "Bochenek",
  "Bogucki",
  "Bogusz",
  "Borek",
  "Borkowski",
  "Borowiec",
  "Borowski",
  "Bożek",
  "Broda",
  "Brzeziński",
  "Brzozowski",
  "Buczek",
  "Buczkowski",
  "Buczyński",
  "Budziński",
  "Budzyński",
  "Bujak",
  "Bukowski",
  "Burzyński",
  "Bąk",
  "Bąkowski",
  "Błaszczak",
  "Błaszczyk",
  "Cebula",
  "Chmiel",
  "Chmielewski",
  "Chmura",
  "Chojnacki",
  "Chojnowski",
  "Cholewa",
  "Chrzanowski",
  "Chudzik",
  "Cichocki",
  "Cichoń",
  "Cichy",
  "Ciesielski",
  "Cieśla",
  "Cieślak",
  "Cieślik",
  "Ciszewski",
  "Cybulski",
  "Cygan",
  "Czaja",
  "Czajka",
  "Czajkowski",
  "Czapla",
  "Czarnecki",
  "Czech",
  "Czechowski",
  "Czekaj",
  "Czerniak",
  "Czerwiński",
  "Czyż",
  "Czyżewski",
  "Dec",
  "Dobosz",
  "Dobrowolski",
  "Dobrzyński",
  "Domagała",
  "Domański",
  "Dominiak",
  "Drabik",
  "Drozd",
  "Drozdowski",
  "Drzewiecki",
  "Dróżdż",
  "Dubiel",
  "Duda",
  "Dudek",
  "Dudziak",
  "Dudzik",
  "Dudziński",
  "Duszyński",
  "Dziedzic",
  "Dziuba",
  "Dąbek",
  "Dąbkowski",
  "Dąbrowski",
  "Dębowski",
  "Dębski",
  "Długosz",
  "Falkowski",
  "Fijałkowski",
  "Filipek",
  "Filipiak",
  "Filipowicz",
  "Flak",
  "Flis",
  "Florczak",
  "Florek",
  "Frankowski",
  "Frąckowiak",
  "Frączek",
  "Frątczak",
  "Furman",
  "Gadomski",
  "Gajda",
  "Gajewski",
  "Gaweł",
  "Gawlik",
  "Gawron",
  "Gawroński",
  "Gałka",
  "Gałązka",
  "Gil",
  "Godlewski",
  "Golec",
  "Gołąb",
  "Gołębiewski",
  "Gołębiowski",
  "Grabowski",
  "Graczyk",
  "Grochowski",
  "Grudzień",
  "Gruszczyński",
  "Gruszka",
  "Grzegorczyk",
  "Grzelak",
  "Grzesiak",
  "Grzesik",
  "Grześkowiak",
  "Grzyb",
  "Grzybowski",
  "Grzywacz",
  "Gutowski",
  "Guzik",
  "Gwóźdź",
  "Góra",
  "Góral",
  "Górecki",
  "Górka",
  "Górniak",
  "Górny",
  "Górski",
  "Gąsior",
  "Gąsiorowski",
  "Głogowski",
  "Głowacki",
  "Głąb",
  "Hajduk",
  "Herman",
  "Iwański",
  "Izdebski",
  "Jabłoński",
  "Jackowski",
  "Jagielski",
  "Jagiełło",
  "Jagodziński",
  "Jakubiak",
  "Jakubowski",
  "Janas",
  "Janiak",
  "Janicki",
  "Janik",
  "Janiszewski",
  "Jankowiak",
  "Jankowski",
  "Janowski",
  "Janus",
  "Janusz",
  "Januszewski",
  "Jaros",
  "Jarosz",
  "Jarząbek",
  "Jasiński",
  "Jastrzębski",
  "Jaworski",
  "Jaśkiewicz",
  "Jezierski",
  "Jurek",
  "Jurkiewicz",
  "Jurkowski",
  "Juszczak",
  "Jóźwiak",
  "Jóźwik",
  "Jędrzejczak",
  "Jędrzejczyk",
  "Jędrzejewski",
  "Kacprzak",
  "Kaczmarczyk",
  "Kaczmarek",
  "Kaczmarski",
  "Kaczor",
  "Kaczorowski",
  "Kaczyński",
  "Kaleta",
  "Kalinowski",
  "Kalisz",
  "Kamiński",
  "Kania",
  "Kaniewski",
  "Kapusta",
  "Karaś",
  "Karczewski",
  "Karpiński",
  "Karwowski",
  "Kasperek",
  "Kasprzak",
  "Kasprzyk",
  "Kaszuba",
  "Kawa",
  "Kawecki",
  "Kałuża",
  "Kaźmierczak",
  "Kiełbasa",
  "Kisiel",
  "Kita",
  "Klimczak",
  "Klimek",
  "Kmiecik",
  "Kmieć",
  "Knapik",
  "Kobus",
  "Kogut",
  "Kolasa",
  "Komorowski",
  "Konieczna",
  "Konieczny",
  "Konopka",
  "Kopczyński",
  "Koper",
  "Kopeć",
  "Korzeniowski",
  "Kos",
  "Kosiński",
  "Kosowski",
  "Kostecki",
  "Kostrzewa",
  "Kot",
  "Kotowski",
  "Kowal",
  "Kowalczuk",
  "Kowalczyk",
  "Kowalewski",
  "Kowalik",
  "Kowalski",
  "Koza",
  "Kozak",
  "Kozieł",
  "Kozioł",
  "Kozłowski",
  "Kołakowski",
  "Kołodziej",
  "Kołodziejczyk",
  "Kołodziejski",
  "Krajewski",
  "Krakowiak",
  "Krawczyk",
  "Krawiec",
  "Kruk",
  "Krukowski",
  "Krupa",
  "Krupiński",
  "Kruszewski",
  "Krysiak",
  "Krzemiński",
  "Krzyżanowski",
  "Król",
  "Królikowski",
  "Książek",
  "Kubacki",
  "Kubiak",
  "Kubica",
  "Kubicki",
  "Kubik",
  "Kuc",
  "Kucharczyk",
  "Kucharski",
  "Kuchta",
  "Kuciński",
  "Kuczyński",
  "Kujawa",
  "Kujawski",
  "Kula",
  "Kulesza",
  "Kulig",
  "Kulik",
  "Kuliński",
  "Kurek",
  "Kurowski",
  "Kuś",
  "Kwaśniewski",
  "Kwiatkowski",
  "Kwiecień",
  "Kwieciński",
  "Kędzierski",
  "Kędziora",
  "Kępa",
  "Kłos",
  "Kłosowski",
  "Lach",
  "Laskowski",
  "Lasota",
  "Lech",
  "Lenart",
  "Lesiak",
  "Leszczyński",
  "Lewandowski",
  "Lewicki",
  "Leśniak",
  "Leśniewski",
  "Lipiński",
  "Lipka",
  "Lipski",
  "Lis",
  "Lisiecki",
  "Lisowski",
  "Maciejewski",
  "Maciąg",
  "Mackiewicz",
  "Madej",
  "Maj",
  "Majcher",
  "Majchrzak",
  "Majewski",
  "Majka",
  "Makowski",
  "Malec",
  "Malicki",
  "Malinowski",
  "Maliszewski",
  "Marchewka",
  "Marciniak",
  "Marcinkowski",
  "Marczak",
  "Marek",
  "Markiewicz",
  "Markowski",
  "Marszałek",
  "Marzec",
  "Masłowski",
  "Matusiak",
  "Matuszak",
  "Matuszewski",
  "Matysiak",
  "Mazur",
  "Mazurek",
  "Mazurkiewicz",
  "Maćkowiak",
  "Małecki",
  "Małek",
  "Maślanka",
  "Michalak",
  "Michalczyk",
  "Michalik",
  "Michalski",
  "Michałek",
  "Michałowski",
  "Mielczarek",
  "Mierzejewski",
  "Mika",
  "Mikołajczak",
  "Mikołajczyk",
  "Mikulski",
  "Milczarek",
  "Milewski",
  "Miller",
  "Misiak",
  "Misztal",
  "Miśkiewicz",
  "Modzelewski",
  "Molenda",
  "Morawski",
  "Motyka",
  "Mroczek",
  "Mroczkowski",
  "Mrozek",
  "Mróz",
  "Mucha",
  "Murawski",
  "Musiał",
  "Muszyński",
  "Młynarczyk",
  "Napierała",
  "Nawrocki",
  "Nawrot",
  "Niedziela",
  "Niedzielski",
  "Niedźwiecki",
  "Niemczyk",
  "Niemiec",
  "Niewiadomski",
  "Noga",
  "Nowacki",
  "Nowaczyk",
  "Nowak",
  "Nowakowski",
  "Nowicki",
  "Nowiński",
  "Olczak",
  "Olejniczak",
  "Olejnik",
  "Olszewski",
  "Orzechowski",
  "Orłowski",
  "Osiński",
  "Ossowski",
  "Ostrowski",
  "Owczarek",
  "Paczkowski",
  "Pająk",
  "Pakuła",
  "Paluch",
  "Panek",
  "Partyka",
  "Pasternak",
  "Paszkowski",
  "Pawelec",
  "Pawlak",
  "Pawlicki",
  "Pawlik",
  "Pawlikowski",
  "Pawłowski",
  "Pałka",
  "Piasecki",
  "Piechota",
  "Piekarski",
  "Pietras",
  "Pietruszka",
  "Pietrzak",
  "Pietrzyk",
  "Pilarski",
  "Pilch",
  "Piotrowicz",
  "Piotrowski",
  "Piwowarczyk",
  "Piórkowski",
  "Piątek",
  "Piątkowski",
  "Piłat",
  "Pluta",
  "Podgórski",
  "Polak",
  "Popławski",
  "Porębski",
  "Prokop",
  "Prus",
  "Przybylski",
  "Przybysz",
  "Przybył",
  "Przybyła",
  "Ptak",
  "Puchalski",
  "Pytel",
  "Płonka",
  "Raczyński",
  "Radecki",
  "Radomski",
  "Rak",
  "Rakowski",
  "Ratajczak",
  "Robak",
  "Rogala",
  "Rogalski",
  "Rogowski",
  "Rojek",
  "Romanowski",
  "Rosa",
  "Rosiak",
  "Rosiński",
  "Ruciński",
  "Rudnicki",
  "Rudziński",
  "Rudzki",
  "Rusin",
  "Rutkowski",
  "Rybak",
  "Rybarczyk",
  "Rybicki",
  "Rzepka",
  "Różański",
  "Różycki",
  "Sadowski",
  "Sawicki",
  "Serafin",
  "Siedlecki",
  "Sienkiewicz",
  "Sieradzki",
  "Sikora",
  "Sikorski",
  "Sitek",
  "Siwek",
  "Skalski",
  "Skiba",
  "Skibiński",
  "Skoczylas",
  "Skowron",
  "Skowronek",
  "Skowroński",
  "Skrzypczak",
  "Skrzypek",
  "Skóra",
  "Smoliński",
  "Sobczak",
  "Sobczyk",
  "Sobieraj",
  "Sobolewski",
  "Socha",
  "Sochacki",
  "Sokołowski",
  "Sokół",
  "Sosnowski",
  "Sowa",
  "Sowiński",
  "Sołtys",
  "Sołtysiak",
  "Sroka",
  "Stachowiak",
  "Stachowicz",
  "Stachura",
  "Stachurski",
  "Stanek",
  "Staniszewski",
  "Stanisławski",
  "Stankiewicz",
  "Stasiak",
  "Staszewski",
  "Stawicki",
  "Stec",
  "Stefaniak",
  "Stefański",
  "Stelmach",
  "Stolarczyk",
  "Stolarski",
  "Strzelczyk",
  "Strzelecki",
  "Stępień",
  "Stępniak",
  "Surma",
  "Suski",
  "Szafrański",
  "Szatkowski",
  "Szczepaniak",
  "Szczepanik",
  "Szczepański",
  "Szczerba",
  "Szcześniak",
  "Szczygieł",
  "Szczęsna",
  "Szczęsny",
  "Szeląg",
  "Szewczyk",
  "Szostak",
  "Szulc",
  "Szwarc",
  "Szwed",
  "Szydłowski",
  "Szymański",
  "Szymczak",
  "Szymczyk",
  "Szymkowiak",
  "Szyszka",
  "Sławiński",
  "Słowik",
  "Słowiński",
  "Tarnowski",
  "Tkaczyk",
  "Tokarski",
  "Tomala",
  "Tomaszewski",
  "Tomczak",
  "Tomczyk",
  "Tracz",
  "Trojanowski",
  "Trzciński",
  "Trzeciak",
  "Turek",
  "Twardowski",
  "Urban",
  "Urbanek",
  "Urbaniak",
  "Urbanowicz",
  "Urbańczyk",
  "Urbański",
  "Walczak",
  "Walkowiak",
  "Warchoł",
  "Wasiak",
  "Wasilewski",
  "Wawrzyniak",
  "Wesołowski",
  "Wieczorek",
  "Wierzbicki",
  "Wilczek",
  "Wilczyński",
  "Wilk",
  "Winiarski",
  "Witczak",
  "Witek",
  "Witkowski",
  "Wiącek",
  "Więcek",
  "Więckowski",
  "Wiśniewski",
  "Wnuk",
  "Wojciechowski",
  "Wojtas",
  "Wojtasik",
  "Wojtczak",
  "Wojtkowiak",
  "Wolak",
  "Woliński",
  "Wolny",
  "Wolski",
  "Woś",
  "Woźniak",
  "Wrona",
  "Wroński",
  "Wróbel",
  "Wróblewski",
  "Wypych",
  "Wysocki",
  "Wyszyński",
  "Wójcicki",
  "Wójcik",
  "Wójtowicz",
  "Wąsik",
  "Węgrzyn",
  "Włodarczyk",
  "Włodarski",
  "Zaborowski",
  "Zabłocki",
  "Zagórski",
  "Zając",
  "Zajączkowski",
  "Zakrzewski",
  "Zalewski",
  "Zaremba",
  "Zarzycki",
  "Zaręba",
  "Zawada",
  "Zawadzki",
  "Zdunek",
  "Zieliński",
  "Zielonka",
  "Ziółkowski",
  "Zięba",
  "Ziętek",
  "Zwoliński",
  "Zych",
  "Zygmunt",
  "Łapiński",
  "Łuczak",
  "Łukasiewicz",
  "Łukasik",
  "Łukaszewski",
  "Śliwa",
  "Śliwiński",
  "Ślusarczyk",
  "Świderski",
  "Świerczyński",
  "Świątek",
  "Żak",
  "Żebrowski",
  "Żmuda",
  "Żuk",
  "Żukowski",
  "Żurawski",
  "Żurek",
  "Żyła"
];

},{}],712:[function(require,module,exports){
arguments[4][486][0].apply(exports,arguments)
},{"dup":486}],713:[function(require,module,exports){
module["exports"] = [
  "Pan",
  "Pani"
];

},{}],714:[function(require,module,exports){
arguments[4][212][0].apply(exports,arguments)
},{"dup":212}],715:[function(require,module,exports){
module["exports"] = [
  "12-###-##-##",
  "13-###-##-##",
  "14-###-##-##",
  "15-###-##-##",
  "16-###-##-##",
  "17-###-##-##",
  "18-###-##-##",
  "22-###-##-##",
  "23-###-##-##",
  "24-###-##-##",
  "25-###-##-##",
  "29-###-##-##",
  "32-###-##-##",
  "33-###-##-##",
  "34-###-##-##",
  "41-###-##-##",
  "42-###-##-##",
  "43-###-##-##",
  "44-###-##-##",
  "46-###-##-##",
  "48-###-##-##",
  "52-###-##-##",
  "54-###-##-##",
  "55-###-##-##",
  "56-###-##-##",
  "58-###-##-##",
  "59-###-##-##",
  "61-###-##-##",
  "62-###-##-##",
  "63-###-##-##",
  "65-###-##-##",
  "67-###-##-##",
  "68-###-##-##",
  "71-###-##-##",
  "74-###-##-##",
  "75-###-##-##",
  "76-###-##-##",
  "77-###-##-##",
  "81-###-##-##",
  "82-###-##-##",
  "83-###-##-##",
  "84-###-##-##",
  "85-###-##-##",
  "86-###-##-##",
  "87-###-##-##",
  "89-###-##-##",
  "91-###-##-##",
  "94-###-##-##",
  "95-###-##-##"
];

},{}],716:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":715,"dup":83}],717:[function(require,module,exports){
arguments[4][132][0].apply(exports,arguments)
},{"dup":132}],718:[function(require,module,exports){
module["exports"] = [
  "Nova",
  "Velha",
  "Grande",
  "Vila",
  "Município de"
];

},{}],719:[function(require,module,exports){
module["exports"] = [
  "do Descoberto",
  "de Nossa Senhora",
  "do Norte",
  "do Sul"
];

},{}],720:[function(require,module,exports){
module["exports"] = [
  "Afeganistão",
  "Albânia",
  "Algéria",
  "Samoa",
  "Andorra",
  "Angola",
  "Anguilla",
  "Antigua and Barbada",
  "Argentina",
  "Armênia",
  "Aruba",
  "Austrália",
  "Áustria",
  "Alzerbajão",
  "Bahamas",
  "Barém",
  "Bangladesh",
  "Barbado",
  "Belgrado",
  "Bélgica",
  "Belize",
  "Benin",
  "Bermuda",
  "Bhutan",
  "Bolívia",
  "Bôsnia",
  "Botuasuna",
  "Bouvetoia",
  "Brasil",
  "Arquipélago de Chagos",
  "Ilhas Virgens",
  "Brunei",
  "Bulgária",
  "Burkina Faso",
  "Burundi",
  "Cambójia",
  "Camarões",
  "Canadá",
  "Cabo Verde",
  "Ilhas Caiman",
  "República da África Central",
  "Chad",
  "Chile",
  "China",
  "Ilhas Natal",
  "Ilhas Cocos",
  "Colômbia",
  "Comoros",
  "Congo",
  "Ilhas Cook",
  "Costa Rica",
  "Costa do Marfim",
  "Croácia",
  "Cuba",
  "Cyprus",
  "República Tcheca",
  "Dinamarca",
  "Djibouti",
  "Dominica",
  "República Dominicana",
  "Equador",
  "Egito",
  "El Salvador",
  "Guiné Equatorial",
  "Eritrea",
  "Estônia",
  "Etiópia",
  "Ilhas Faroe",
  "Malvinas",
  "Fiji",
  "Finlândia",
  "França",
  "Guiné Francesa",
  "Polinésia Francesa",
  "Gabão",
  "Gâmbia",
  "Georgia",
  "Alemanha",
  "Gana",
  "Gibraltar",
  "Grécia",
  "Groelândia",
  "Granada",
  "Guadalupe",
  "Guano",
  "Guatemala",
  "Guernsey",
  "Guiné",
  "Guiné-Bissau",
  "Guiana",
  "Haiti",
  "Heard Island and McDonald Islands",
  "Vaticano",
  "Honduras",
  "Hong Kong",
  "Hungria",
  "Iceland",
  "Índia",
  "Indonésia",
  "Irã",
  "Iraque",
  "Irlanda",
  "Ilha de Man",
  "Israel",
  "Itália",
  "Jamaica",
  "Japão",
  "Jersey",
  "Jordânia",
  "Cazaquistão",
  "Quênia",
  "Kiribati",
  "Coreia do Norte",
  "Coreia do Sul",
  "Kuwait",
  "Kyrgyz Republic",
  "República Democrática de Lao People",
  "Latvia",
  "Líbano",
  "Lesotho",
  "Libéria",
  "Libyan Arab Jamahiriya",
  "Liechtenstein",
  "Lituânia",
  "Luxemburgo",
  "Macao",
  "Macedônia",
  "Madagascar",
  "Malawi",
  "Malásia",
  "Maldives",
  "Mali",
  "Malta",
  "Ilhas Marshall",
  "Martinica",
  "Mauritânia",
  "Mauritius",
  "Mayotte",
  "México",
  "Micronésia",
  "Moldova",
  "Mônaco",
  "Mongólia",
  "Montenegro",
  "Montserrat",
  "Marrocos",
  "Moçambique",
  "Myanmar",
  "Namibia",
  "Nauru",
  "Nepal",
  "Antilhas Holandesas",
  "Holanda",
  "Nova Caledonia",
  "Nova Zelândia",
  "Nicarágua",
  "Nigéria",
  "Niue",
  "Ilha Norfolk",
  "Northern Mariana Islands",
  "Noruega",
  "Oman",
  "Paquistão",
  "Palau",
  "Território da Palestina",
  "Panamá",
  "Nova Guiné Papua",
  "Paraguai",
  "Peru",
  "Filipinas",
  "Polônia",
  "Portugal",
  "Puerto Rico",
  "Qatar",
  "Romênia",
  "Rússia",
  "Ruanda",
  "São Bartolomeu",
  "Santa Helena",
  "Santa Lúcia",
  "Saint Martin",
  "Saint Pierre and Miquelon",
  "Saint Vincent and the Grenadines",
  "Samoa",
  "San Marino",
  "Sao Tomé e Príncipe",
  "Arábia Saudita",
  "Senegal",
  "Sérvia",
  "Seychelles",
  "Serra Leoa",
  "Singapura",
  "Eslováquia",
  "Eslovênia",
  "Ilhas Salomão",
  "Somália",
  "África do Sul",
  "South Georgia and the South Sandwich Islands",
  "Spanha",
  "Sri Lanka",
  "Sudão",
  "Suriname",
  "Svalbard & Jan Mayen Islands",
  "Swaziland",
  "Suécia",
  "Suíça",
  "Síria",
  "Taiwan",
  "Tajiquistão",
  "Tanzânia",
  "Tailândia",
  "Timor-Leste",
  "Togo",
  "Tokelau",
  "Tonga",
  "Trinidá e Tobago",
  "Tunísia",
  "Turquia",
  "Turcomenistão",
  "Turks and Caicos Islands",
  "Tuvalu",
  "Uganda",
  "Ucrânia",
  "Emirados Árabes Unidos",
  "Reino Unido",
  "Estados Unidos da América",
  "Estados Unidos das Ilhas Virgens",
  "Uruguai",
  "Uzbequistão",
  "Vanuatu",
  "Venezuela",
  "Vietnã",
  "Wallis and Futuna",
  "Sahara",
  "Yemen",
  "Zâmbia",
  "Zimbábue"
];

},{}],721:[function(require,module,exports){
module["exports"] = [
  "Brasil"
];

},{}],722:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.default_country = require("./default_country");

},{"./building_number":717,"./city_prefix":718,"./city_suffix":719,"./country":720,"./default_country":721,"./postcode":723,"./secondary_address":724,"./state":725,"./state_abbr":726,"./street_suffix":727}],723:[function(require,module,exports){
module["exports"] = [
  "#####",
  "#####-###"
];

},{}],724:[function(require,module,exports){
module["exports"] = [
  "Apto. ###",
  "Sobrado ##",
  "Casa #",
  "Lote ##",
  "Quadra ##"
];

},{}],725:[function(require,module,exports){
module["exports"] = [
  "Acre",
  "Alagoas",
  "Amapá",
  "Amazonas",
  "Bahia",
  "Ceará",
  "Distrito Federal",
  "Espírito Santo",
  "Goiás",
  "Maranhão",
  "Mato Grosso",
  "Mato Grosso do Sul",
  "Minas Gerais",
  "Pará",
  "Paraíba",
  "Paraná",
  "Pernambuco",
  "Piauí",
  "Rio de Janeiro",
  "Rio Grande do Norte",
  "Rio Grande do Sul",
  "Rondônia",
  "Roraima",
  "Santa Catarina",
  "São Paulo",
  "Sergipe",
  "Tocantins"
];

},{}],726:[function(require,module,exports){
module["exports"] = [
  "AC",
  "AL",
  "AP",
  "AM",
  "BA",
  "CE",
  "DF",
  "ES",
  "GO",
  "MA",
  "MT",
  "MS",
  "PA",
  "PB",
  "PR",
  "PE",
  "PI",
  "RJ",
  "RN",
  "RS",
  "RO",
  "RR",
  "SC",
  "SP"
];

},{}],727:[function(require,module,exports){
module["exports"] = [
  "Rua",
  "Avenida",
  "Travessa",
  "Ponte",
  "Alameda",
  "Marginal",
  "Viela",
  "Rodovia"
];

},{}],728:[function(require,module,exports){
arguments[4][119][0].apply(exports,arguments)
},{"./name":729,"./suffix":730,"dup":119}],729:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name}-#{Name.last_name}",
  "#{Name.last_name}, #{Name.last_name} e #{Name.last_name}"
];

},{}],730:[function(require,module,exports){
module["exports"] = [
  "S.A.",
  "LTDA",
  "e Associados",
  "Comércio"
];

},{}],731:[function(require,module,exports){
var pt_BR = {};
module['exports'] = pt_BR;
pt_BR.title = "Portuguese (Brazil)";
pt_BR.address = require("./address");
pt_BR.company = require("./company");
pt_BR.internet = require("./internet");
pt_BR.lorem = require("./lorem");
pt_BR.name = require("./name");
pt_BR.phone_number = require("./phone_number");

},{"./address":722,"./company":728,"./internet":734,"./lorem":735,"./name":738,"./phone_number":743}],732:[function(require,module,exports){
module["exports"] = [
  "br",
  "com",
  "biz",
  "info",
  "name",
  "net",
  "org"
];

},{}],733:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.com",
  "hotmail.com",
  "live.com",
  "bol.com.br"
];

},{}],734:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./domain_suffix":732,"./free_email":733,"dup":73}],735:[function(require,module,exports){
arguments[4][74][0].apply(exports,arguments)
},{"./words":736,"dup":74}],736:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"dup":75}],737:[function(require,module,exports){
module["exports"] = [
  "Alessandro",
  "Alessandra",
  "Alexandre",
  "Aline",
  "Antônio",
  "Breno",
  "Bruna",
  "Carlos",
  "Carla",
  "Célia",
  "Cecília",
  "César",
  "Danilo",
  "Dalila",
  "Deneval",
  "Eduardo",
  "Eduarda",
  "Esther",
  "Elísio",
  "Fábio",
  "Fabrício",
  "Fabrícia",
  "Félix",
  "Felícia",
  "Feliciano",
  "Frederico",
  "Fabiano",
  "Gustavo",
  "Guilherme",
  "Gúbio",
  "Heitor",
  "Hélio",
  "Hugo",
  "Isabel",
  "Isabela",
  "Ígor",
  "João",
  "Joana",
  "Júlio César",
  "Júlio",
  "Júlia",
  "Janaína",
  "Karla",
  "Kléber",
  "Lucas",
  "Lorena",
  "Lorraine",
  "Larissa",
  "Ladislau",
  "Marcos",
  "Meire",
  "Marcelo",
  "Marcela",
  "Margarida",
  "Mércia",
  "Márcia",
  "Marli",
  "Morgana",
  "Maria",
  "Norberto",
  "Natália",
  "Nataniel",
  "Núbia",
  "Ofélia",
  "Paulo",
  "Paula",
  "Pablo",
  "Pedro",
  "Raul",
  "Rafael",
  "Rafaela",
  "Ricardo",
  "Roberto",
  "Roberta",
  "Sílvia",
  "Sílvia",
  "Silas",
  "Suélen",
  "Sara",
  "Salvador",
  "Sirineu",
  "Talita",
  "Tertuliano",
  "Vicente",
  "Víctor",
  "Vitória",
  "Yango",
  "Yago",
  "Yuri",
  "Washington",
  "Warley"
];

},{}],738:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");

},{"./first_name":737,"./last_name":739,"./prefix":740,"./suffix":741}],739:[function(require,module,exports){
module["exports"] = [
  "Silva",
  "Souza",
  "Carvalho",
  "Santos",
  "Reis",
  "Xavier",
  "Franco",
  "Braga",
  "Macedo",
  "Batista",
  "Barros",
  "Moraes",
  "Costa",
  "Pereira",
  "Carvalho",
  "Melo",
  "Saraiva",
  "Nogueira",
  "Oliveira",
  "Martins",
  "Moreira",
  "Albuquerque"
];

},{}],740:[function(require,module,exports){
module["exports"] = [
  "Sr.",
  "Sra.",
  "Srta.",
  "Dr."
];

},{}],741:[function(require,module,exports){
module["exports"] = [
  "Jr.",
  "Neto",
  "Filho"
];

},{}],742:[function(require,module,exports){
module["exports"] = [
  "(##) ####-####",
  "+55 (##) ####-####",
  "(##) #####-####"
];

},{}],743:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":742,"dup":83}],744:[function(require,module,exports){
module["exports"] = [
  "###"
];

},{}],745:[function(require,module,exports){
module["exports"] = [
  "#{Address.city_name}"
];

},{}],746:[function(require,module,exports){
module["exports"] = [
  "Москва",
  "Владимир",
  "Санкт-Петербург",
  "Новосибирск",
  "Екатеринбург",
  "Нижний Новгород",
  "Самара",
  "Казань",
  "Омск",
  "Челябинск",
  "Ростов-на-Дону",
  "Уфа",
  "Волгоград",
  "Пермь",
  "Красноярск",
  "Воронеж",
  "Саратов",
  "Краснодар",
  "Тольятти",
  "Ижевск",
  "Барнаул",
  "Ульяновск",
  "Тюмень",
  "Иркутск",
  "Владивосток",
  "Ярославль",
  "Хабаровск",
  "Махачкала",
  "Оренбург",
  "Новокузнецк",
  "Томск",
  "Кемерово",
  "Рязань",
  "Астрахань",
  "Пенза",
  "Липецк",
  "Тула",
  "Киров",
  "Чебоксары",
  "Курск",
  "Брянскm Магнитогорск",
  "Иваново",
  "Тверь",
  "Ставрополь",
  "Белгород",
  "Сочи"
];

},{}],747:[function(require,module,exports){
module["exports"] = [
  "Австралия",
  "Австрия",
  "Азербайджан",
  "Албания",
  "Алжир",
  "Американское Самоа (не признана)",
  "Ангилья",
  "Ангола",
  "Андорра",
  "Антарктика (не признана)",
  "Антигуа и Барбуда",
  "Антильские Острова (не признана)",
  "Аомынь (не признана)",
  "Аргентина",
  "Армения",
  "Афганистан",
  "Багамские Острова",
  "Бангладеш",
  "Барбадос",
  "Бахрейн",
  "Беларусь",
  "Белиз",
  "Бельгия",
  "Бенин",
  "Болгария",
  "Боливия",
  "Босния и Герцеговина",
  "Ботсвана",
  "Бразилия",
  "Бруней",
  "Буркина-Фасо",
  "Бурунди",
  "Бутан",
  "Вануату",
  "Ватикан",
  "Великобритания",
  "Венгрия",
  "Венесуэла",
  "Восточный Тимор",
  "Вьетнам",
  "Габон",
  "Гаити",
  "Гайана",
  "Гамбия",
  "Гана",
  "Гваделупа (не признана)",
  "Гватемала",
  "Гвиана (не признана)",
  "Гвинея",
  "Гвинея-Бисау",
  "Германия",
  "Гондурас",
  "Гренада",
  "Греция",
  "Грузия",
  "Дания",
  "Джибути",
  "Доминика",
  "Доминиканская Республика",
  "Египет",
  "Замбия",
  "Зимбабве",
  "Израиль",
  "Индия",
  "Индонезия",
  "Иордания",
  "Ирак",
  "Иран",
  "Ирландия",
  "Исландия",
  "Испания",
  "Италия",
  "Йемен",
  "Кабо-Верде",
  "Казахстан",
  "Камбоджа",
  "Камерун",
  "Канада",
  "Катар",
  "Кения",
  "Кипр",
  "Кирибати",
  "Китай",
  "Колумбия",
  "Коморские Острова",
  "Конго",
  "Демократическая Республика",
  "Корея (Северная)",
  "Корея (Южная)",
  "Косово",
  "Коста-Рика",
  "Кот-д'Ивуар",
  "Куба",
  "Кувейт",
  "Кука острова",
  "Кыргызстан",
  "Лаос",
  "Латвия",
  "Лесото",
  "Либерия",
  "Ливан",
  "Ливия",
  "Литва",
  "Лихтенштейн",
  "Люксембург",
  "Маврикий",
  "Мавритания",
  "Мадагаскар",
  "Македония",
  "Малави",
  "Малайзия",
  "Мали",
  "Мальдивы",
  "Мальта",
  "Маршалловы Острова",
  "Мексика",
  "Микронезия",
  "Мозамбик",
  "Молдова",
  "Монако",
  "Монголия",
  "Марокко",
  "Мьянма",
  "Намибия",
  "Науру",
  "Непал",
  "Нигер",
  "Нигерия",
  "Нидерланды",
  "Никарагуа",
  "Новая Зеландия",
  "Норвегия",
  "Объединенные Арабские Эмираты",
  "Оман",
  "Пакистан",
  "Палау",
  "Панама",
  "Папуа — Новая Гвинея",
  "Парагвай",
  "Перу",
  "Польша",
  "Португалия",
  "Республика Конго",
  "Россия",
  "Руанда",
  "Румыния",
  "Сальвадор",
  "Самоа",
  "Сан-Марино",
  "Сан-Томе и Принсипи",
  "Саудовская Аравия",
  "Свазиленд",
  "Сейшельские острова",
  "Сенегал",
  "Сент-Винсент и Гренадины",
  "Сент-Киттс и Невис",
  "Сент-Люсия",
  "Сербия",
  "Сингапур",
  "Сирия",
  "Словакия",
  "Словения",
  "Соединенные Штаты Америки",
  "Соломоновы Острова",
  "Сомали",
  "Судан",
  "Суринам",
  "Сьерра-Леоне",
  "Таджикистан",
  "Таиланд",
  "Тайвань (не признана)",
  "Тамил-Илам (не признана)",
  "Танзания",
  "Тёркс и Кайкос (не признана)",
  "Того",
  "Токелау (не признана)",
  "Тонга",
  "Тринидад и Тобаго",
  "Тувалу",
  "Тунис",
  "Турецкая Республика Северного Кипра (не признана)",
  "Туркменистан",
  "Турция",
  "Уганда",
  "Узбекистан",
  "Украина",
  "Уругвай",
  "Фарерские Острова (не признана)",
  "Фиджи",
  "Филиппины",
  "Финляндия",
  "Франция",
  "Французская Полинезия (не признана)",
  "Хорватия",
  "Центральноафриканская Республика",
  "Чад",
  "Черногория",
  "Чехия",
  "Чили",
  "Швейцария",
  "Швеция",
  "Шри-Ланка",
  "Эквадор",
  "Экваториальная Гвинея",
  "Эритрея",
  "Эстония",
  "Эфиопия",
  "Южно-Африканская Республика",
  "Ямайка",
  "Япония"
];

},{}],748:[function(require,module,exports){
module["exports"] = [
  "Россия"
];

},{}],749:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.street_title = require("./street_title");
address.city_name = require("./city_name");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":744,"./city":745,"./city_name":746,"./country":747,"./default_country":748,"./postcode":750,"./secondary_address":751,"./state":752,"./street_address":753,"./street_name":754,"./street_suffix":755,"./street_title":756}],750:[function(require,module,exports){
module["exports"] = [
  "######"
];

},{}],751:[function(require,module,exports){
module["exports"] = [
  "кв. ###"
];

},{}],752:[function(require,module,exports){
module["exports"] = [
  "Республика Адыгея",
  "Республика Башкортостан",
  "Республика Бурятия",
  "Республика Алтай Республика Дагестан",
  "Республика Ингушетия",
  "Кабардино-Балкарская Республика",
  "Республика Калмыкия",
  "Республика Карачаево-Черкессия",
  "Республика Карелия",
  "Республика Коми",
  "Республика Марий Эл",
  "Республика Мордовия",
  "Республика Саха (Якутия)",
  "Республика Северная Осетия-Алания",
  "Республика Татарстан",
  "Республика Тыва",
  "Удмуртская Республика",
  "Республика Хакасия",
  "Чувашская Республика",
  "Алтайский край",
  "Краснодарский край",
  "Красноярский край",
  "Приморский край",
  "Ставропольский край",
  "Хабаровский край",
  "Амурская область",
  "Архангельская область",
  "Астраханская область",
  "Белгородская область",
  "Брянская область",
  "Владимирская область",
  "Волгоградская область",
  "Вологодская область",
  "Воронежская область",
  "Ивановская область",
  "Иркутская область",
  "Калиниградская область",
  "Калужская область",
  "Камчатская область",
  "Кемеровская область",
  "Кировская область",
  "Костромская область",
  "Курганская область",
  "Курская область",
  "Ленинградская область",
  "Липецкая область",
  "Магаданская область",
  "Московская область",
  "Мурманская область",
  "Нижегородская область",
  "Новгородская область",
  "Новосибирская область",
  "Омская область",
  "Оренбургская область",
  "Орловская область",
  "Пензенская область",
  "Пермская область",
  "Псковская область",
  "Ростовская область",
  "Рязанская область",
  "Самарская область",
  "Саратовская область",
  "Сахалинская область",
  "Свердловская область",
  "Смоленская область",
  "Тамбовская область",
  "Тверская область",
  "Томская область",
  "Тульская область",
  "Тюменская область",
  "Ульяновская область",
  "Челябинская область",
  "Читинская область",
  "Ярославская область",
  "Еврейская автономная область",
  "Агинский Бурятский авт. округ",
  "Коми-Пермяцкий автономный округ",
  "Корякский автономный округ",
  "Ненецкий автономный округ",
  "Таймырский (Долгано-Ненецкий) автономный округ",
  "Усть-Ордынский Бурятский автономный округ",
  "Ханты-Мансийский автономный округ",
  "Чукотский автономный округ",
  "Эвенкийский автономный округ",
  "Ямало-Ненецкий автономный округ",
  "Чеченская Республика"
];

},{}],753:[function(require,module,exports){
module["exports"] = [
  "#{street_name}, #{building_number}"
];

},{}],754:[function(require,module,exports){
module["exports"] = [
  "#{street_suffix} #{Address.street_title}",
  "#{Address.street_title} #{street_suffix}"
];

},{}],755:[function(require,module,exports){
module["exports"] = [
  "ул.",
  "улица",
  "проспект",
  "пр.",
  "площадь",
  "пл."
];

},{}],756:[function(require,module,exports){
module["exports"] = [
  "Советская",
  "Молодежная",
  "Центральная",
  "Школьная",
  "Новая",
  "Садовая",
  "Лесная",
  "Набережная",
  "Ленина",
  "Мира",
  "Октябрьская",
  "Зеленая",
  "Комсомольская",
  "Заречная",
  "Первомайская",
  "Гагарина",
  "Полевая",
  "Луговая",
  "Пионерская",
  "Кирова",
  "Юбилейная",
  "Северная",
  "Пролетарская",
  "Степная",
  "Пушкина",
  "Калинина",
  "Южная",
  "Колхозная",
  "Рабочая",
  "Солнечная",
  "Железнодорожная",
  "Восточная",
  "Заводская",
  "Чапаева",
  "Нагорная",
  "Строителей",
  "Береговая",
  "Победы",
  "Горького",
  "Кооперативная",
  "Красноармейская",
  "Совхозная",
  "Речная",
  "Школьный",
  "Спортивная",
  "Озерная",
  "Строительная",
  "Парковая",
  "Чкалова",
  "Мичурина",
  "речень улиц",
  "Подгорная",
  "Дружбы",
  "Почтовая",
  "Партизанская",
  "Вокзальная",
  "Лермонтова",
  "Свободы",
  "Дорожная",
  "Дачная",
  "Маяковского",
  "Западная",
  "Фрунзе",
  "Дзержинского",
  "Московская",
  "Свердлова",
  "Некрасова",
  "Гоголя",
  "Красная",
  "Трудовая",
  "Шоссейная",
  "Чехова",
  "Коммунистическая",
  "Труда",
  "Комарова",
  "Матросова",
  "Островского",
  "Сосновая",
  "Клубная",
  "Куйбышева",
  "Крупской",
  "Березовая",
  "Карла Маркса",
  "8 Марта",
  "Больничная",
  "Садовый",
  "Интернациональная",
  "Суворова",
  "Цветочная",
  "Трактовая",
  "Ломоносова",
  "Горная",
  "Космонавтов",
  "Энергетиков",
  "Шевченко",
  "Весенняя",
  "Механизаторов",
  "Коммунальная",
  "Лесной",
  "40 лет Победы",
  "Майская"
];

},{}],757:[function(require,module,exports){
module["exports"] = [
  "красный",
  "зеленый",
  "синий",
  "желтый",
  "багровый",
  "мятный",
  "зеленовато-голубой",
  "белый",
  "черный",
  "оранжевый",
  "розовый",
  "серый",
  "красно-коричневый",
  "фиолетовый",
  "бирюзовый",
  "желто-коричневый",
  "небесно голубой",
  "оранжево-розовый",
  "темно-фиолетовый",
  "орхидный",
  "оливковый",
  "пурпурный",
  "лимонный",
  "кремовый",
  "сине-фиолетовый",
  "золотой",
  "красно-пурпурный",
  "голубой",
  "лазурный",
  "лиловый",
  "серебряный"
];

},{}],758:[function(require,module,exports){
module["exports"] = [
  "Книги",
  "Фильмы",
  "музыка",
  "игры",
  "Электроника",
  "компьютеры",
  "Дом",
  "садинструмент",
  "Бакалея",
  "здоровье",
  "красота",
  "Игрушки",
  "детское",
  "для малышей",
  "Одежда",
  "обувь",
  "украшения",
  "Спорт",
  "туризм",
  "Автомобильное",
  "промышленное"
];

},{}],759:[function(require,module,exports){
arguments[4][162][0].apply(exports,arguments)
},{"./color":757,"./department":758,"./product_name":760,"dup":162}],760:[function(require,module,exports){
module["exports"] = {
  "adjective": [
    "Маленький",
    "Эргономичный",
    "Грубый",
    "Интеллектуальный",
    "Великолепный",
    "Невероятный",
    "Фантастический",
    "Практчиный",
    "Лоснящийся",
    "Потрясающий"
  ],
  "material": [
    "Стальной",
    "Деревянный",
    "Бетонный",
    "Пластиковый",
    "Хлопковый",
    "Гранитный",
    "Резиновый"
  ],
  "product": [
    "Стул",
    "Автомобиль",
    "Компьютер",
    "Берет",
    "Кулон",
    "Стол",
    "Свитер",
    "Ремень",
    "Ботинок"
  ]
};

},{}],761:[function(require,module,exports){
arguments[4][475][0].apply(exports,arguments)
},{"./name":762,"./prefix":763,"./suffix":764,"dup":475}],762:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{Name.female_first_name}",
  "#{prefix} #{Name.male_first_name}",
  "#{prefix} #{Name.male_last_name}",
  "#{prefix} #{suffix}#{suffix}",
  "#{prefix} #{suffix}#{suffix}#{suffix}",
  "#{prefix} #{Address.city_name}#{suffix}",
  "#{prefix} #{Address.city_name}#{suffix}#{suffix}",
  "#{prefix} #{Address.city_name}#{suffix}#{suffix}#{suffix}"
];

},{}],763:[function(require,module,exports){
module["exports"] = [
  "ИП",
  "ООО",
  "ЗАО",
  "ОАО",
  "НКО",
  "ТСЖ",
  "ОП"
];

},{}],764:[function(require,module,exports){
module["exports"] = [
  "Снаб",
  "Торг",
  "Пром",
  "Трейд",
  "Сбыт"
];

},{}],765:[function(require,module,exports){
arguments[4][184][0].apply(exports,arguments)
},{"./month":766,"./weekday":767,"dup":184}],766:[function(require,module,exports){
// source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/ru.xml#L1734
module["exports"] = {
  wide: [
    "январь",
    "февраль",
    "март",
    "апрель",
    "май",
    "июнь",
    "июль",
    "август",
    "сентябрь",
    "октябрь",
    "ноябрь",
    "декабрь"
  ],
  wide_context: [
    "января",
    "февраля",
    "марта",
    "апреля",
    "мая",
    "июня",
    "июля",
    "августа",
    "сентября",
    "октября",
    "ноября",
    "декабря"
  ],
  abbr: [
    "янв.",
    "февр.",
    "март",
    "апр.",
    "май",
    "июнь",
    "июль",
    "авг.",
    "сент.",
    "окт.",
    "нояб.",
    "дек."
  ],
  abbr_context: [
    "янв.",
    "февр.",
    "марта",
    "апр.",
    "мая",
    "июня",
    "июля",
    "авг.",
    "сент.",
    "окт.",
    "нояб.",
    "дек."
  ]
};

},{}],767:[function(require,module,exports){
// source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/ru.xml#L1825
module["exports"] = {
  wide: [
    "Воскресенье",
    "Понедельник",
    "Вторник",
    "Среда",
    "Четверг",
    "Пятница",
    "Суббота"
  ],
  wide_context: [
    "воскресенье",
    "понедельник",
    "вторник",
    "среда",
    "четверг",
    "пятница",
    "суббота"
  ],
  abbr: [
    "Вс",
    "Пн",
    "Вт",
    "Ср",
    "Чт",
    "Пт",
    "Сб"
  ],
  abbr_context: [
    "вс",
    "пн",
    "вт",
    "ср",
    "чт",
    "пт",
    "сб"
  ]
};

},{}],768:[function(require,module,exports){
var ru = {};
module['exports'] = ru;
ru.title = "Russian";
ru.separator = " и ";
ru.address = require("./address");
ru.internet = require("./internet");
ru.name = require("./name");
ru.phone_number = require("./phone_number");
ru.commerce = require("./commerce");
ru.company = require("./company");
ru.date = require("./date");

},{"./address":749,"./commerce":759,"./company":761,"./date":765,"./internet":771,"./name":775,"./phone_number":783}],769:[function(require,module,exports){
module["exports"] = [
  "com",
  "ru",
  "info",
  "рф",
  "net",
  "org"
];

},{}],770:[function(require,module,exports){
module["exports"] = [
  "yandex.ru",
  "ya.ru",
  "mail.ru",
  "gmail.com",
  "yahoo.com",
  "hotmail.com"
];

},{}],771:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./domain_suffix":769,"./free_email":770,"dup":73}],772:[function(require,module,exports){
module["exports"] = [
  "Анна",
  "Алёна",
  "Алевтина",
  "Александра",
  "Алина",
  "Алла",
  "Анастасия",
  "Ангелина",
  "Анжела",
  "Анжелика",
  "Антонида",
  "Антонина",
  "Анфиса",
  "Арина",
  "Валентина",
  "Валерия",
  "Варвара",
  "Василиса",
  "Вера",
  "Вероника",
  "Виктория",
  "Галина",
  "Дарья",
  "Евгения",
  "Екатерина",
  "Елена",
  "Елизавета",
  "Жанна",
  "Зинаида",
  "Зоя",
  "Ирина",
  "Кира",
  "Клавдия",
  "Ксения",
  "Лариса",
  "Лидия",
  "Любовь",
  "Людмила",
  "Маргарита",
  "Марина",
  "Мария",
  "Надежда",
  "Наталья",
  "Нина",
  "Оксана",
  "Ольга",
  "Раиса",
  "Регина",
  "Римма",
  "Светлана",
  "София",
  "Таисия",
  "Тамара",
  "Татьяна",
  "Ульяна",
  "Юлия"
];

},{}],773:[function(require,module,exports){
module["exports"] = [
  "Смирнова",
  "Иванова",
  "Кузнецова",
  "Попова",
  "Соколова",
  "Лебедева",
  "Козлова",
  "Новикова",
  "Морозова",
  "Петрова",
  "Волкова",
  "Соловьева",
  "Васильева",
  "Зайцева",
  "Павлова",
  "Семенова",
  "Голубева",
  "Виноградова",
  "Богданова",
  "Воробьева",
  "Федорова",
  "Михайлова",
  "Беляева",
  "Тарасова",
  "Белова",
  "Комарова",
  "Орлова",
  "Киселева",
  "Макарова",
  "Андреева",
  "Ковалева",
  "Ильина",
  "Гусева",
  "Титова",
  "Кузьмина",
  "Кудрявцева",
  "Баранова",
  "Куликова",
  "Алексеева",
  "Степанова",
  "Яковлева",
  "Сорокина",
  "Сергеева",
  "Романова",
  "Захарова",
  "Борисова",
  "Королева",
  "Герасимова",
  "Пономарева",
  "Григорьева",
  "Лазарева",
  "Медведева",
  "Ершова",
  "Никитина",
  "Соболева",
  "Рябова",
  "Полякова",
  "Цветкова",
  "Данилова",
  "Жукова",
  "Фролова",
  "Журавлева",
  "Николаева",
  "Крылова",
  "Максимова",
  "Сидорова",
  "Осипова",
  "Белоусова",
  "Федотова",
  "Дорофеева",
  "Егорова",
  "Матвеева",
  "Боброва",
  "Дмитриева",
  "Калинина",
  "Анисимова",
  "Петухова",
  "Антонова",
  "Тимофеева",
  "Никифорова",
  "Веселова",
  "Филиппова",
  "Маркова",
  "Большакова",
  "Суханова",
  "Миронова",
  "Ширяева",
  "Александрова",
  "Коновалова",
  "Шестакова",
  "Казакова",
  "Ефимова",
  "Денисова",
  "Громова",
  "Фомина",
  "Давыдова",
  "Мельникова",
  "Щербакова",
  "Блинова",
  "Колесникова",
  "Карпова",
  "Афанасьева",
  "Власова",
  "Маслова",
  "Исакова",
  "Тихонова",
  "Аксенова",
  "Гаврилова",
  "Родионова",
  "Котова",
  "Горбунова",
  "Кудряшова",
  "Быкова",
  "Зуева",
  "Третьякова",
  "Савельева",
  "Панова",
  "Рыбакова",
  "Суворова",
  "Абрамова",
  "Воронова",
  "Мухина",
  "Архипова",
  "Трофимова",
  "Мартынова",
  "Емельянова",
  "Горшкова",
  "Чернова",
  "Овчинникова",
  "Селезнева",
  "Панфилова",
  "Копылова",
  "Михеева",
  "Галкина",
  "Назарова",
  "Лобанова",
  "Лукина",
  "Белякова",
  "Потапова",
  "Некрасова",
  "Хохлова",
  "Жданова",
  "Наумова",
  "Шилова",
  "Воронцова",
  "Ермакова",
  "Дроздова",
  "Игнатьева",
  "Савина",
  "Логинова",
  "Сафонова",
  "Капустина",
  "Кириллова",
  "Моисеева",
  "Елисеева",
  "Кошелева",
  "Костина",
  "Горбачева",
  "Орехова",
  "Ефремова",
  "Исаева",
  "Евдокимова",
  "Калашникова",
  "Кабанова",
  "Носкова",
  "Юдина",
  "Кулагина",
  "Лапина",
  "Прохорова",
  "Нестерова",
  "Харитонова",
  "Агафонова",
  "Муравьева",
  "Ларионова",
  "Федосеева",
  "Зимина",
  "Пахомова",
  "Шубина",
  "Игнатова",
  "Филатова",
  "Крюкова",
  "Рогова",
  "Кулакова",
  "Терентьева",
  "Молчанова",
  "Владимирова",
  "Артемьева",
  "Гурьева",
  "Зиновьева",
  "Гришина",
  "Кононова",
  "Дементьева",
  "Ситникова",
  "Симонова",
  "Мишина",
  "Фадеева",
  "Комиссарова",
  "Мамонтова",
  "Носова",
  "Гуляева",
  "Шарова",
  "Устинова",
  "Вишнякова",
  "Евсеева",
  "Лаврентьева",
  "Брагина",
  "Константинова",
  "Корнилова",
  "Авдеева",
  "Зыкова",
  "Бирюкова",
  "Шарапова",
  "Никонова",
  "Щукина",
  "Дьячкова",
  "Одинцова",
  "Сазонова",
  "Якушева",
  "Красильникова",
  "Гордеева",
  "Самойлова",
  "Князева",
  "Беспалова",
  "Уварова",
  "Шашкова",
  "Бобылева",
  "Доронина",
  "Белозерова",
  "Рожкова",
  "Самсонова",
  "Мясникова",
  "Лихачева",
  "Бурова",
  "Сысоева",
  "Фомичева",
  "Русакова",
  "Стрелкова",
  "Гущина",
  "Тетерина",
  "Колобова",
  "Субботина",
  "Фокина",
  "Блохина",
  "Селиверстова",
  "Пестова",
  "Кондратьева",
  "Силина",
  "Меркушева",
  "Лыткина",
  "Турова"
];

},{}],774:[function(require,module,exports){
module["exports"] = [
  "Александровна",
  "Алексеевна",
  "Альбертовна",
  "Анатольевна",
  "Андреевна",
  "Антоновна",
  "Аркадьевна",
  "Арсеньевна",
  "Артёмовна",
  "Борисовна",
  "Вадимовна",
  "Валентиновна",
  "Валерьевна",
  "Васильевна",
  "Викторовна",
  "Витальевна",
  "Владимировна",
  "Владиславовна",
  "Вячеславовна",
  "Геннадьевна",
  "Георгиевна",
  "Германовна",
  "Григорьевна",
  "Данииловна",
  "Денисовна",
  "Дмитриевна",
  "Евгеньевна",
  "Егоровна",
  "Ивановна",
  "Игнатьевна",
  "Игоревна",
  "Ильинична",
  "Константиновна",
  "Лаврентьевна",
  "Леонидовна",
  "Макаровна",
  "Максимовна",
  "Матвеевна",
  "Михайловна",
  "Никитична",
  "Николаевна",
  "Олеговна",
  "Романовна",
  "Семёновна",
  "Сергеевна",
  "Станиславовна",
  "Степановна",
  "Фёдоровна",
  "Эдуардовна",
  "Юрьевна",
  "Ярославовна"
];

},{}],775:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.male_first_name = require("./male_first_name");
name.male_middle_name = require("./male_middle_name");
name.male_last_name = require("./male_last_name");
name.female_first_name = require("./female_first_name");
name.female_middle_name = require("./female_middle_name");
name.female_last_name = require("./female_last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.name = require("./name");

},{"./female_first_name":772,"./female_last_name":773,"./female_middle_name":774,"./male_first_name":776,"./male_last_name":777,"./male_middle_name":778,"./name":779,"./prefix":780,"./suffix":781}],776:[function(require,module,exports){
module["exports"] = [
  "Александр",
  "Алексей",
  "Альберт",
  "Анатолий",
  "Андрей",
  "Антон",
  "Аркадий",
  "Арсений",
  "Артём",
  "Борис",
  "Вадим",
  "Валентин",
  "Валерий",
  "Василий",
  "Виктор",
  "Виталий",
  "Владимир",
  "Владислав",
  "Вячеслав",
  "Геннадий",
  "Георгий",
  "Герман",
  "Григорий",
  "Даниил",
  "Денис",
  "Дмитрий",
  "Евгений",
  "Егор",
  "Иван",
  "Игнатий",
  "Игорь",
  "Илья",
  "Константин",
  "Лаврентий",
  "Леонид",
  "Лука",
  "Макар",
  "Максим",
  "Матвей",
  "Михаил",
  "Никита",
  "Николай",
  "Олег",
  "Роман",
  "Семён",
  "Сергей",
  "Станислав",
  "Степан",
  "Фёдор",
  "Эдуард",
  "Юрий",
  "Ярослав"
];

},{}],777:[function(require,module,exports){
module["exports"] = [
  "Смирнов",
  "Иванов",
  "Кузнецов",
  "Попов",
  "Соколов",
  "Лебедев",
  "Козлов",
  "Новиков",
  "Морозов",
  "Петров",
  "Волков",
  "Соловьев",
  "Васильев",
  "Зайцев",
  "Павлов",
  "Семенов",
  "Голубев",
  "Виноградов",
  "Богданов",
  "Воробьев",
  "Федоров",
  "Михайлов",
  "Беляев",
  "Тарасов",
  "Белов",
  "Комаров",
  "Орлов",
  "Киселев",
  "Макаров",
  "Андреев",
  "Ковалев",
  "Ильин",
  "Гусев",
  "Титов",
  "Кузьмин",
  "Кудрявцев",
  "Баранов",
  "Куликов",
  "Алексеев",
  "Степанов",
  "Яковлев",
  "Сорокин",
  "Сергеев",
  "Романов",
  "Захаров",
  "Борисов",
  "Королев",
  "Герасимов",
  "Пономарев",
  "Григорьев",
  "Лазарев",
  "Медведев",
  "Ершов",
  "Никитин",
  "Соболев",
  "Рябов",
  "Поляков",
  "Цветков",
  "Данилов",
  "Жуков",
  "Фролов",
  "Журавлев",
  "Николаев",
  "Крылов",
  "Максимов",
  "Сидоров",
  "Осипов",
  "Белоусов",
  "Федотов",
  "Дорофеев",
  "Егоров",
  "Матвеев",
  "Бобров",
  "Дмитриев",
  "Калинин",
  "Анисимов",
  "Петухов",
  "Антонов",
  "Тимофеев",
  "Никифоров",
  "Веселов",
  "Филиппов",
  "Марков",
  "Большаков",
  "Суханов",
  "Миронов",
  "Ширяев",
  "Александров",
  "Коновалов",
  "Шестаков",
  "Казаков",
  "Ефимов",
  "Денисов",
  "Громов",
  "Фомин",
  "Давыдов",
  "Мельников",
  "Щербаков",
  "Блинов",
  "Колесников",
  "Карпов",
  "Афанасьев",
  "Власов",
  "Маслов",
  "Исаков",
  "Тихонов",
  "Аксенов",
  "Гаврилов",
  "Родионов",
  "Котов",
  "Горбунов",
  "Кудряшов",
  "Быков",
  "Зуев",
  "Третьяков",
  "Савельев",
  "Панов",
  "Рыбаков",
  "Суворов",
  "Абрамов",
  "Воронов",
  "Мухин",
  "Архипов",
  "Трофимов",
  "Мартынов",
  "Емельянов",
  "Горшков",
  "Чернов",
  "Овчинников",
  "Селезнев",
  "Панфилов",
  "Копылов",
  "Михеев",
  "Галкин",
  "Назаров",
  "Лобанов",
  "Лукин",
  "Беляков",
  "Потапов",
  "Некрасов",
  "Хохлов",
  "Жданов",
  "Наумов",
  "Шилов",
  "Воронцов",
  "Ермаков",
  "Дроздов",
  "Игнатьев",
  "Савин",
  "Логинов",
  "Сафонов",
  "Капустин",
  "Кириллов",
  "Моисеев",
  "Елисеев",
  "Кошелев",
  "Костин",
  "Горбачев",
  "Орехов",
  "Ефремов",
  "Исаев",
  "Евдокимов",
  "Калашников",
  "Кабанов",
  "Носков",
  "Юдин",
  "Кулагин",
  "Лапин",
  "Прохоров",
  "Нестеров",
  "Харитонов",
  "Агафонов",
  "Муравьев",
  "Ларионов",
  "Федосеев",
  "Зимин",
  "Пахомов",
  "Шубин",
  "Игнатов",
  "Филатов",
  "Крюков",
  "Рогов",
  "Кулаков",
  "Терентьев",
  "Молчанов",
  "Владимиров",
  "Артемьев",
  "Гурьев",
  "Зиновьев",
  "Гришин",
  "Кононов",
  "Дементьев",
  "Ситников",
  "Симонов",
  "Мишин",
  "Фадеев",
  "Комиссаров",
  "Мамонтов",
  "Носов",
  "Гуляев",
  "Шаров",
  "Устинов",
  "Вишняков",
  "Евсеев",
  "Лаврентьев",
  "Брагин",
  "Константинов",
  "Корнилов",
  "Авдеев",
  "Зыков",
  "Бирюков",
  "Шарапов",
  "Никонов",
  "Щукин",
  "Дьячков",
  "Одинцов",
  "Сазонов",
  "Якушев",
  "Красильников",
  "Гордеев",
  "Самойлов",
  "Князев",
  "Беспалов",
  "Уваров",
  "Шашков",
  "Бобылев",
  "Доронин",
  "Белозеров",
  "Рожков",
  "Самсонов",
  "Мясников",
  "Лихачев",
  "Буров",
  "Сысоев",
  "Фомичев",
  "Русаков",
  "Стрелков",
  "Гущин",
  "Тетерин",
  "Колобов",
  "Субботин",
  "Фокин",
  "Блохин",
  "Селиверстов",
  "Пестов",
  "Кондратьев",
  "Силин",
  "Меркушев",
  "Лыткин",
  "Туров"
];

},{}],778:[function(require,module,exports){
module["exports"] = [
  "Александрович",
  "Алексеевич",
  "Альбертович",
  "Анатольевич",
  "Андреевич",
  "Антонович",
  "Аркадьевич",
  "Арсеньевич",
  "Артёмович",
  "Борисович",
  "Вадимович",
  "Валентинович",
  "Валерьевич",
  "Васильевич",
  "Викторович",
  "Витальевич",
  "Владимирович",
  "Владиславович",
  "Вячеславович",
  "Геннадьевич",
  "Георгиевич",
  "Германович",
  "Григорьевич",
  "Даниилович",
  "Денисович",
  "Дмитриевич",
  "Евгеньевич",
  "Егорович",
  "Иванович",
  "Игнатьевич",
  "Игоревич",
  "Ильич",
  "Константинович",
  "Лаврентьевич",
  "Леонидович",
  "Лукич",
  "Макарович",
  "Максимович",
  "Матвеевич",
  "Михайлович",
  "Никитич",
  "Николаевич",
  "Олегович",
  "Романович",
  "Семёнович",
  "Сергеевич",
  "Станиславович",
  "Степанович",
  "Фёдорович",
  "Эдуардович",
  "Юрьевич",
  "Ярославович"
];

},{}],779:[function(require,module,exports){
module["exports"] = [
  "#{male_first_name} #{male_last_name}",
  "#{male_last_name} #{male_first_name}",
  "#{male_first_name} #{male_middle_name} #{male_last_name}",
  "#{male_last_name} #{male_first_name} #{male_middle_name}",
  "#{female_first_name} #{female_last_name}",
  "#{female_last_name} #{female_first_name}",
  "#{female_first_name} #{female_middle_name} #{female_last_name}",
  "#{female_last_name} #{female_first_name} #{female_middle_name}"
];

},{}],780:[function(require,module,exports){
arguments[4][554][0].apply(exports,arguments)
},{"dup":554}],781:[function(require,module,exports){
arguments[4][554][0].apply(exports,arguments)
},{"dup":554}],782:[function(require,module,exports){
module["exports"] = [
  "(9##)###-##-##"
];

},{}],783:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":782,"dup":83}],784:[function(require,module,exports){
module["exports"] = [
  "#",
  "##",
  "###"
];

},{}],785:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"dup":85}],786:[function(require,module,exports){
module["exports"] = [
  "Bánovce nad Bebravou",
  "Banská Bystrica",
  "Banská Štiavnica",
  "Bardejov",
  "Bratislava I",
  "Bratislava II",
  "Bratislava III",
  "Bratislava IV",
  "Bratislava V",
  "Brezno",
  "Bytča",
  "Čadca",
  "Detva",
  "Dolný Kubín",
  "Dunajská Streda",
  "Galanta",
  "Gelnica",
  "Hlohovec",
  "Humenné",
  "Ilava",
  "Kežmarok",
  "Komárno",
  "Košice I",
  "Košice II",
  "Košice III",
  "Košice IV",
  "Košice-okolie",
  "Krupina",
  "Kysucké Nové Mesto",
  "Levice",
  "Levoča",
  "Liptovský Mikuláš",
  "Lučenec",
  "Malacky",
  "Martin",
  "Medzilaborce",
  "Michalovce",
  "Myjava",
  "Námestovo",
  "Nitra",
  "Nové Mesto n.Váhom",
  "Nové Zámky",
  "Partizánske",
  "Pezinok",
  "Piešťany",
  "Poltár",
  "Poprad",
  "Považská Bystrica",
  "Prešov",
  "Prievidza",
  "Púchov",
  "Revúca",
  "Rimavská Sobota",
  "Rožňava",
  "Ružomberok",
  "Sabinov",
  "Šaľa",
  "Senec",
  "Senica",
  "Skalica",
  "Snina",
  "Sobrance",
  "Spišská Nová Ves",
  "Stará Ľubovňa",
  "Stropkov",
  "Svidník",
  "Topoľčany",
  "Trebišov",
  "Trenčín",
  "Trnava",
  "Turčianske Teplice",
  "Tvrdošín",
  "Veľký Krtíš",
  "Vranov nad Topľou",
  "Žarnovica",
  "Žiar nad Hronom",
  "Žilina",
  "Zlaté Moravce",
  "Zvolen"
];

},{}],787:[function(require,module,exports){
arguments[4][134][0].apply(exports,arguments)
},{"dup":134}],788:[function(require,module,exports){
arguments[4][135][0].apply(exports,arguments)
},{"dup":135}],789:[function(require,module,exports){
module["exports"] = [
  "Afganistan",
  "Afgánsky islamský štát",
  "Albánsko",
  "Albánska republika",
  "Alžírsko",
  "Alžírska demokratická ľudová republika",
  "Andorra",
  "Andorrské kniežatsvo",
  "Angola",
  "Angolská republika",
  "Antigua a Barbuda",
  "Antigua a Barbuda",
  "Argentína",
  "Argentínska republika",
  "Arménsko",
  "Arménska republika",
  "Austrália",
  "Austrálsky zväz",
  "Azerbajdžan",
  "Azerbajdžanská republika",
  "Bahamy",
  "Bahamské spoločenstvo",
  "Bahrajn",
  "Bahrajnské kráľovstvo",
  "Bangladéš",
  "Bangladéšska ľudová republika",
  "Barbados",
  "Barbados",
  "Belgicko",
  "Belgické kráľovstvo",
  "Belize",
  "Belize",
  "Benin",
  "Beninská republika",
  "Bhután",
  "Bhutánske kráľovstvo",
  "Bielorusko",
  "Bieloruská republika",
  "Bolívia",
  "Bolívijská republika",
  "Bosna a Hercegovina",
  "Republika Bosny a Hercegoviny",
  "Botswana",
  "Botswanská republika",
  "Brazília",
  "Brazílska federatívna republika",
  "Brunej",
  "Brunejský sultanát",
  "Bulharsko",
  "Bulharská republika",
  "Burkina Faso",
  "Burkina Faso",
  "Burundi",
  "Burundská republika",
  "Cyprus",
  "Cyperská republika",
  "Čad",
  "Republika Čad",
  "Česko",
  "Česká republika",
  "Čína",
  "Čínska ľudová republika",
  "Dánsko",
  "Dánsko kráľovstvo",
  "Dominika",
  "Spoločenstvo Dominika",
  "Dominikánska republika",
  "Dominikánska republika",
  "Džibutsko",
  "Džibutská republika",
  "Egypt",
  "Egyptská arabská republika",
  "Ekvádor",
  "Ekvádorská republika",
  "Eritrea",
  "Eritrejský štát",
  "Estónsko",
  "Estónska republika",
  "Etiópia",
  "Etiópska federatívna demokratická republika",
  "Fidži",
  "Republika ostrovy Fidži",
  "Filipíny",
  "Filipínska republika",
  "Fínsko",
  "Fínska republika",
  "Francúzsko",
  "Francúzska republika",
  "Gabon",
  "Gabonská republika",
  "Gambia",
  "Gambijská republika",
  "Ghana",
  "Ghanská republika",
  "Grécko",
  "Helénska republika",
  "Grenada",
  "Grenada",
  "Gruzínsko",
  "Gruzínsko",
  "Guatemala",
  "Guatemalská republika",
  "Guinea",
  "Guinejská republika",
  "Guinea-Bissau",
  "Republika Guinea-Bissau",
  "Guayana",
  "Guayanská republika",
  "Haiti",
  "Republika Haiti",
  "Holandsko",
  "Holandské kráľovstvo",
  "Honduras",
  "Honduraská republika",
  "Chile",
  "Čílska republika",
  "Chorvátsko",
  "Chorvátska republika",
  "India",
  "Indická republika",
  "Indonézia",
  "Indonézska republika",
  "Irak",
  "Iracká republika",
  "Irán",
  "Iránska islamská republika",
  "Island",
  "Islandská republika",
  "Izrael",
  "Štát Izrael",
  "Írsko",
  "Írska republika",
  "Jamajka",
  "Jamajka",
  "Japonsko",
  "Japonsko",
  "Jemen",
  "Jemenská republika",
  "Jordánsko",
  "Jordánske hášimovské kráľovstvo",
  "Južná Afrika",
  "Juhoafrická republika",
  "Kambodža",
  "Kambodžské kráľovstvo",
  "Kamerun",
  "Kamerunská republika",
  "Kanada",
  "Kanada",
  "Kapverdy",
  "Kapverdská republika",
  "Katar",
  "Štát Katar",
  "Kazachstan",
  "Kazašská republika",
  "Keňa",
  "Kenská republika",
  "Kirgizsko",
  "Kirgizská republika",
  "Kiribati",
  "Kiribatská republika",
  "Kolumbia",
  "Kolumbijská republika",
  "Komory",
  "Komorská únia",
  "Kongo",
  "Konžská demokratická republika",
  "Kongo (\"Brazzaville\")",
  "Konžská republika",
  "Kórea (\"Južná\")",
  "Kórejská republika",
  "Kórea (\"Severná\")",
  "Kórejská ľudovodemokratická republika",
  "Kostarika",
  "Kostarická republika",
  "Kuba",
  "Kubánska republika",
  "Kuvajt",
  "Kuvajtský štát",
  "Laos",
  "Laoská ľudovodemokratická republika",
  "Lesotho",
  "Lesothské kráľovstvo",
  "Libanon",
  "Libanonská republika",
  "Libéria",
  "Libérijská republika",
  "Líbya",
  "Líbyjská arabská ľudová socialistická džamáhírija",
  "Lichtenštajnsko",
  "Lichtenštajnské kniežatstvo",
  "Litva",
  "Litovská republika",
  "Lotyšsko",
  "Lotyšská republika",
  "Luxembursko",
  "Luxemburské veľkovojvodstvo",
  "Macedónsko",
  "Macedónska republika",
  "Madagaskar",
  "Madagaskarská republika",
  "Maďarsko",
  "Maďarská republika",
  "Malajzia",
  "Malajzia",
  "Malawi",
  "Malawijská republika",
  "Maldivy",
  "Maldivská republika",
  "Mali",
  "Malijská republika",
  "Malta",
  "Malta",
  "Maroko",
  "Marocké kráľovstvo",
  "Marshallove ostrovy",
  "Republika Marshallových ostrovy",
  "Mauritánia",
  "Mauritánska islamská republika",
  "Maurícius",
  "Maurícijská republika",
  "Mexiko",
  "Spojené štáty mexické",
  "Mikronézia",
  "Mikronézske federatívne štáty",
  "Mjanmarsko",
  "Mjanmarský zväz",
  "Moldavsko",
  "Moldavská republika",
  "Monako",
  "Monacké kniežatstvo",
  "Mongolsko",
  "Mongolsko",
  "Mozambik",
  "Mozambická republika",
  "Namíbia",
  "Namíbijská republika",
  "Nauru",
  "Naurská republika",
  "Nemecko",
  "Nemecká spolková republika",
  "Nepál",
  "Nepálske kráľovstvo",
  "Niger",
  "Nigerská republika",
  "Nigéria",
  "Nigérijská federatívna republika",
  "Nikaragua",
  "Nikaragujská republika",
  "Nový Zéland",
  "Nový Zéland",
  "Nórsko",
  "Nórske kráľovstvo",
  "Omán",
  "Ománsky sultanát",
  "Pakistan",
  "Pakistanská islamská republika",
  "Palau",
  "Palauská republika",
  "Panama",
  "Panamská republika",
  "Papua-Nová Guinea",
  "Nezávislý štát Papua-Nová Guinea",
  "Paraguaj",
  "Paraguajská republika",
  "Peru",
  "Peruánska republika",
  "Pobrežie Slonoviny",
  "Republika Pobrežie Slonoviny",
  "Poľsko",
  "Poľská republika",
  "Portugalsko",
  "Portugalská republika",
  "Rakúsko",
  "Rakúska republika",
  "Rovníková Guinea",
  "Republika Rovníková Guinea",
  "Rumunsko",
  "Rumunsko",
  "Rusko",
  "Ruská federácia",
  "Rwanda",
  "Rwandská republika",
  "Salvádor",
  "Salvádorská republika",
  "Samoa",
  "Nezávislý štát Samoa",
  "San Maríno",
  "Sanmarínska republika",
  "Saudská Arábia",
  "Kráľovstvo Saudskej Arábie",
  "Senegal",
  "Senegalská republika",
  "Seychely",
  "Seychelská republika",
  "Sierra Leone",
  "Republika Sierra Leone",
  "Singapur",
  "Singapurska republika",
  "Slovensko",
  "Slovenská republika",
  "Slovinsko",
  "Slovinská republika",
  "Somálsko",
  "Somálska demokratická republika",
  "Spojené arabské emiráty",
  "Spojené arabské emiráty",
  "Spojené štáty americké",
  "Spojené štáty americké",
  "Srbsko a Čierna Hora",
  "Srbsko a Čierna Hora",
  "Srí Lanka",
  "Demokratická socialistická republika Srí Lanka",
  "Stredoafrická republika",
  "Stredoafrická republika",
  "Sudán",
  "Sudánska republika",
  "Surinam",
  "Surinamská republika",
  "Svazijsko",
  "Svazijské kráľovstvo",
  "Svätá Lucia",
  "Svätá Lucia",
  "Svätý Krištof a Nevis",
  "Federácia Svätý Krištof a Nevis",
  "Sv. Tomáš a Princov Ostrov",
  "Demokratická republika Svätý Tomáš a Princov Ostrov",
  "Sv. Vincent a Grenadíny",
  "Svätý Vincent a Grenadíny",
  "Sýria",
  "Sýrska arabská republika",
  "Šalamúnove ostrovy",
  "Šalamúnove ostrovy",
  "Španielsko",
  "Španielske kráľovstvo",
  "Švajčiarsko",
  "Švajčiarska konfederácia",
  "Švédsko",
  "Švédske kráľovstvo",
  "Tadžikistan",
  "Tadžická republika",
  "Taliansko",
  "Talianska republika",
  "Tanzánia",
  "Tanzánijská zjednotená republika",
  "Thajsko",
  "Thajské kráľovstvo",
  "Togo",
  "Tožská republika",
  "Tonga",
  "Tonžské kráľovstvo",
  "Trinidad a Tobago",
  "Republika Trinidad a Tobago",
  "Tunisko",
  "Tuniská republika",
  "Turecko",
  "Turecká republika",
  "Turkménsko",
  "Turkménsko",
  "Tuvalu",
  "Tuvalu",
  "Uganda",
  "Ugandská republika",
  "Ukrajina",
  "Uruguaj",
  "Uruguajská východná republika",
  "Uzbekistan",
  "Vanuatu",
  "Vanuatská republika",
  "Vatikán",
  "Svätá Stolica",
  "Veľká Británia",
  "Spojené kráľovstvo Veľkej Británie a Severného Írska",
  "Venezuela",
  "Venezuelská bolívarovská republika",
  "Vietnam",
  "Vietnamská socialistická republika",
  "Východný Timor",
  "Demokratická republika Východný Timor",
  "Zambia",
  "Zambijská republika",
  "Zimbabwe",
  "Zimbabwianska republika"
];

},{}],790:[function(require,module,exports){
module["exports"] = [
  "Slovensko"
];

},{}],791:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.country = require("./country");
address.building_number = require("./building_number");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.time_zone = require("./time_zone");
address.city_name = require("./city_name");
address.city = require("./city");
address.street = require("./street");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":784,"./city":785,"./city_name":786,"./city_prefix":787,"./city_suffix":788,"./country":789,"./default_country":790,"./postcode":792,"./secondary_address":793,"./state":794,"./state_abbr":795,"./street":796,"./street_address":797,"./street_name":798,"./time_zone":799}],792:[function(require,module,exports){
module["exports"] = [
  "#####",
  "### ##",
  "## ###"
];

},{}],793:[function(require,module,exports){
arguments[4][143][0].apply(exports,arguments)
},{"dup":143}],794:[function(require,module,exports){
arguments[4][554][0].apply(exports,arguments)
},{"dup":554}],795:[function(require,module,exports){
arguments[4][554][0].apply(exports,arguments)
},{"dup":554}],796:[function(require,module,exports){
module["exports"] = [
  "Adámiho",
  "Ahoj",
  "Albína Brunovského",
  "Albrechtova",
  "Alejová",
  "Alešova",
  "Alibernetová",
  "Alžbetínska",
  "Alžbety Gwerkovej",
  "Ambroseho",
  "Ambrušova",
  "Americká",
  "Americké námestie",
  "Americké námestie",
  "Andreja Mráza",
  "Andreja Plávku",
  "Andrusovova",
  "Anenská",
  "Anenská",
  "Antolská",
  "Astronomická",
  "Astrová",
  "Azalková",
  "Azovská",
  "Babuškova",
  "Bachova",
  "Bajkalská",
  "Bajkalská",
  "Bajkalská",
  "Bajkalská",
  "Bajkalská",
  "Bajkalská",
  "Bajzova",
  "Bancíkovej",
  "Banícka",
  "Baníkova",
  "Banskobystrická",
  "Banšelova",
  "Bardejovská",
  "Bartókova",
  "Bartoňova",
  "Bartoškova",
  "Baštová",
  "Bazová",
  "Bažantia",
  "Beblavého",
  "Beckovská",
  "Bedľová",
  "Belániková",
  "Belehradská",
  "Belinského",
  "Belopotockého",
  "Beňadická",
  "Bencúrova",
  "Benediktiho",
  "Beniakova",
  "Bernolákova",
  "Beskydská",
  "Betliarska",
  "Bezručova",
  "Biela",
  "Bielkova",
  "Björnsonova",
  "Blagoevova",
  "Blatnická",
  "Blumentálska",
  "Blyskáčová",
  "Bočná",
  "Bohrova",
  "Bohúňova",
  "Bojnická",
  "Borodáčova",
  "Borská",
  "Bosákova",
  "Botanická",
  "Bottova",
  "Boženy Němcovej",
  "Bôrik",
  "Bradáčova",
  "Bradlianska",
  "Brančská",
  "Bratská",
  "Brestová",
  "Brezovská",
  "Briežky",
  "Brnianska",
  "Brodná",
  "Brodská",
  "Broskyňová",
  "Břeclavská",
  "Budatínska",
  "Budatínska",
  "Budatínska",
  "Búdkova  cesta",
  "Budovateľská",
  "Budyšínska",
  "Budyšínska",
  "Buková",
  "Bukureštská",
  "Bulharská",
  "Bulíkova",
  "Bystrého",
  "Bzovícka",
  "Cablkova",
  "Cesta na Červený most",
  "Cesta na Červený most",
  "Cesta na Senec",
  "Cikkerova",
  "Cintorínska",
  "Cintulova",
  "Cukrová",
  "Cyrilova",
  "Čajakova",
  "Čajkovského",
  "Čaklovská",
  "Čalovská",
  "Čapajevova",
  "Čapkova",
  "Čárskeho",
  "Čavojského",
  "Čečinová",
  "Čelakovského",
  "Čerešňová",
  "Černyševského",
  "Červeňova",
  "Česká",
  "Československých par",
  "Čipkárska",
  "Čmelíkova",
  "Čmeľovec",
  "Čulenova",
  "Daliborovo námestie",
  "Dankovského",
  "Dargovská",
  "Ďatelinová",
  "Daxnerovo námestie",
  "Devínska cesta",
  "Dlhé diely I.",
  "Dlhé diely II.",
  "Dlhé diely III.",
  "Dobrovičova",
  "Dobrovičova",
  "Dobrovského",
  "Dobšinského",
  "Dohnalova",
  "Dohnányho",
  "Doležalova",
  "Dolná",
  "Dolnozemská cesta",
  "Domkárska",
  "Domové role",
  "Donnerova",
  "Donovalova",
  "Dostojevského rad",
  "Dr. Vladimíra Clemen",
  "Drevená",
  "Drieňová",
  "Drieňová",
  "Drieňová",
  "Drotárska cesta",
  "Drotárska cesta",
  "Drotárska cesta",
  "Družicová",
  "Družstevná",
  "Dubnická",
  "Dubová",
  "Dúbravská cesta",
  "Dudova",
  "Dulovo námestie",
  "Dulovo námestie",
  "Dunajská",
  "Dvořákovo nábrežie",
  "Edisonova",
  "Einsteinova",
  "Elektrárenská",
  "Exnárova",
  "F. Kostku",
  "Fadruszova",
  "Fajnorovo nábrežie",
  "Fándlyho",
  "Farebná",
  "Farská",
  "Farského",
  "Fazuľová",
  "Fedinova",
  "Ferienčíkova",
  "Fialkové údolie",
  "Fibichova",
  "Filiálne nádražie",
  "Flöglova",
  "Floriánske námestie",
  "Fraňa Kráľa",
  "Francisciho",
  "Francúzskych partizá",
  "Františkánska",
  "Františkánske námest",
  "Furdekova",
  "Furdekova",
  "Gabčíkova",
  "Gagarinova",
  "Gagarinova",
  "Gagarinova",
  "Gajova",
  "Galaktická",
  "Galandova",
  "Gallova",
  "Galvaniho",
  "Gašparíkova",
  "Gaštanová",
  "Gavlovičova",
  "Gemerská",
  "Gercenova",
  "Gessayova",
  "Gettingová",
  "Godrova",
  "Gogoľova",
  "Goláňova",
  "Gondova",
  "Goralská",
  "Gorazdova",
  "Gorkého",
  "Gregorovej",
  "Grösslingova",
  "Gruzínska",
  "Gunduličova",
  "Gusevova",
  "Haanova",
  "Haburská",
  "Halašova",
  "Hálkova",
  "Hálova",
  "Hamuliakova",
  "Hanácka",
  "Handlovská",
  "Hany Meličkovej",
  "Harmanecká",
  "Hasičská",
  "Hattalova",
  "Havlíčkova",
  "Havrania",
  "Haydnova",
  "Herlianska",
  "Herlianska",
  "Heydukova",
  "Hlaváčikova",
  "Hlavatého",
  "Hlavné námestie",
  "Hlboká cesta",
  "Hlboká cesta",
  "Hlivová",
  "Hlučínska",
  "Hodálova",
  "Hodžovo námestie",
  "Holekova",
  "Holíčska",
  "Hollého",
  "Holubyho",
  "Hontianska",
  "Horárska",
  "Horné Židiny",
  "Horská",
  "Horská",
  "Hrad",
  "Hradné údolie",
  "Hrachová",
  "Hraničná",
  "Hrebendova",
  "Hríbová",
  "Hriňovská",
  "Hrobákova",
  "Hrobárska",
  "Hroboňova",
  "Hudecova",
  "Humenské námestie",
  "Hummelova",
  "Hurbanovo námestie",
  "Hurbanovo námestie",
  "Hviezdoslavovo námes",
  "Hýrošova",
  "Chalupkova",
  "Chemická",
  "Chlumeckého",
  "Chorvátska",
  "Chorvátska",
  "Iľjušinova",
  "Ilkovičova",
  "Inovecká",
  "Inovecká",
  "Iskerníková",
  "Ivana Horvátha",
  "Ivánska cesta",
  "J.C.Hronského",
  "Jabloňová",
  "Jadrová",
  "Jakabova",
  "Jakubovo námestie",
  "Jamnického",
  "Jána Stanislava",
  "Janáčkova",
  "Jančova",
  "Janíkove role",
  "Jankolova",
  "Jánošíkova",
  "Jánoškova",
  "Janotova",
  "Jánska",
  "Jantárová cesta",
  "Jarabinková",
  "Jarná",
  "Jaroslavova",
  "Jarošova",
  "Jaseňová",
  "Jasná",
  "Jasovská",
  "Jastrabia",
  "Jašíkova",
  "Javorinská",
  "Javorová",
  "Jazdecká",
  "Jedlíkova",
  "Jégého",
  "Jelačičova",
  "Jelenia",
  "Jesenná",
  "Jesenského",
  "Jiráskova",
  "Jiskrova",
  "Jozefská",
  "Junácka",
  "Jungmannova",
  "Jurigovo námestie",
  "Jurovského",
  "Jurská",
  "Justičná",
  "K lomu",
  "K Železnej studienke",
  "Kalinčiakova",
  "Kamenárska",
  "Kamenné námestie",
  "Kapicova",
  "Kapitulská",
  "Kapitulský dvor",
  "Kapucínska",
  "Kapušianska",
  "Karadžičova",
  "Karadžičova",
  "Karadžičova",
  "Karadžičova",
  "Karloveská",
  "Karloveské rameno",
  "Karpatská",
  "Kašmírska",
  "Kaštielska",
  "Kaukazská",
  "Kempelenova",
  "Kežmarské námestie",
  "Kladnianska",
  "Klariská",
  "Kláštorská",
  "Klatovská",
  "Klatovská",
  "Klemensova",
  "Klincová",
  "Klobučnícka",
  "Klokočova",
  "Kľukatá",
  "Kmeťovo námestie",
  "Koceľova",
  "Kočánkova",
  "Kohútova",
  "Kolárska",
  "Kolískova",
  "Kollárovo námestie",
  "Kollárovo námestie",
  "Kolmá",
  "Komárňanská",
  "Komárnická",
  "Komárnická",
  "Komenského námestie",
  "Kominárska",
  "Komonicová",
  "Konopná",
  "Konvalinková",
  "Konventná",
  "Kopanice",
  "Kopčianska",
  "Koperníkova",
  "Korabinského",
  "Koreničova",
  "Kostlivého",
  "Kostolná",
  "Košická",
  "Košická",
  "Košická",
  "Kováčska",
  "Kovorobotnícka",
  "Kozia",
  "Koziarka",
  "Kozmonautická",
  "Krajná",
  "Krakovská",
  "Kráľovské údolie",
  "Krasinského",
  "Kraskova",
  "Krásna",
  "Krásnohorská",
  "Krasovského",
  "Krátka",
  "Krčméryho",
  "Kremnická",
  "Kresánkova",
  "Krivá",
  "Križkova",
  "Krížna",
  "Krížna",
  "Krížna",
  "Krížna",
  "Krmanova",
  "Krompašská",
  "Krupinská",
  "Krupkova",
  "Kubániho",
  "Kubínska",
  "Kuklovská",
  "Kukučínova",
  "Kukuričná",
  "Kulíškova",
  "Kultúrna",
  "Kupeckého",
  "Kúpeľná",
  "Kutlíkova",
  "Kutuzovova",
  "Kuzmányho",
  "Kvačalova",
  "Kvetná",
  "Kýčerského",
  "Kyjevská",
  "Kysucká",
  "Laborecká",
  "Lackova",
  "Ladislava Sáru",
  "Ľadová",
  "Lachova",
  "Ľaliová",
  "Lamačská cesta",
  "Lamačská cesta",
  "Lamanského",
  "Landererova",
  "Langsfeldova",
  "Ľanová",
  "Laskomerského",
  "Laučekova",
  "Laurinská",
  "Lazaretská",
  "Lazaretská",
  "Legerského",
  "Legionárska",
  "Legionárska",
  "Lehockého",
  "Lehockého",
  "Lenardova",
  "Lermontovova",
  "Lesná",
  "Leškova",
  "Letecká",
  "Letisko M.R.Štefánik",
  "Letná",
  "Levárska",
  "Levická",
  "Levočská",
  "Lidická",
  "Lietavská",
  "Lichardova",
  "Lipová",
  "Lipovinová",
  "Liptovská",
  "Listová",
  "Líščie nivy",
  "Líščie údolie",
  "Litovská",
  "Lodná",
  "Lombardiniho",
  "Lomonosovova",
  "Lopenícka",
  "Lovinského",
  "Ľubietovská",
  "Ľubinská",
  "Ľubľanská",
  "Ľubochnianska",
  "Ľubovnianska",
  "Lúčna",
  "Ľudové námestie",
  "Ľudovíta Fullu",
  "Luhačovická",
  "Lužická",
  "Lužná",
  "Lýcejná",
  "Lykovcová",
  "M. Hella",
  "Magnetová",
  "Macharova",
  "Majakovského",
  "Majerníkova",
  "Májkova",
  "Májová",
  "Makovického",
  "Malá",
  "Malé pálenisko",
  "Malinová",
  "Malý Draždiak",
  "Malý trh",
  "Mamateyova",
  "Mamateyova",
  "Mánesovo námestie",
  "Mariánska",
  "Marie Curie-Sklodows",
  "Márie Medveďovej",
  "Markova",
  "Marótyho",
  "Martákovej",
  "Martinčekova",
  "Martinčekova",
  "Martinengova",
  "Martinská",
  "Mateja Bela",
  "Matejkova",
  "Matičná",
  "Matúšova",
  "Medená",
  "Medzierka",
  "Medzilaborecká",
  "Merlotová",
  "Mesačná",
  "Mestská",
  "Meteorová",
  "Metodova",
  "Mickiewiczova",
  "Mierová",
  "Michalská",
  "Mikovíniho",
  "Mikulášska",
  "Miletičova",
  "Miletičova",
  "Mišíkova",
  "Mišíkova",
  "Mišíkova",
  "Mliekárenská",
  "Mlynarovičova",
  "Mlynská dolina",
  "Mlynská dolina",
  "Mlynská dolina",
  "Mlynské luhy",
  "Mlynské nivy",
  "Mlynské nivy",
  "Mlynské nivy",
  "Mlynské nivy",
  "Mlynské nivy",
  "Mlyny",
  "Modranská",
  "Mojmírova",
  "Mokráň záhon",
  "Mokrohájska cesta",
  "Moldavská",
  "Molecova",
  "Moravská",
  "Moskovská",
  "Most SNP",
  "Mostová",
  "Mošovského",
  "Motýlia",
  "Moyzesova",
  "Mozartova",
  "Mraziarenská",
  "Mudroňova",
  "Mudroňova",
  "Mudroňova",
  "Muchovo námestie",
  "Murgašova",
  "Muškátová",
  "Muštová",
  "Múzejná",
  "Myjavská",
  "Mýtna",
  "Mýtna",
  "Na Baránku",
  "Na Brezinách",
  "Na Hrebienku",
  "Na Kalvárii",
  "Na Kampárke",
  "Na kopci",
  "Na križovatkách",
  "Na lánoch",
  "Na paši",
  "Na piesku",
  "Na Riviére",
  "Na Sitine",
  "Na Slavíne",
  "Na stráni",
  "Na Štyridsiatku",
  "Na úvrati",
  "Na vŕšku",
  "Na výslní",
  "Nábělkova",
  "Nábrežie arm. gen. L",
  "Nábrežná",
  "Nad Dunajom",
  "Nad lomom",
  "Nad lúčkami",
  "Nad lúčkami",
  "Nad ostrovom",
  "Nad Sihoťou",
  "Námestie 1. mája",
  "Námestie Alexandra D",
  "Námestie Biely kríž",
  "Námestie Hraničiarov",
  "Námestie Jána Pavla",
  "Námestie Ľudovíta Št",
  "Námestie Martina Ben",
  "Nám. M.R.Štefánika",
  "Námestie slobody",
  "Námestie slobody",
  "Námestie SNP",
  "Námestie SNP",
  "Námestie sv. Františ",
  "Narcisová",
  "Nedbalova",
  "Nekrasovova",
  "Neronetová",
  "Nerudova",
  "Nevädzová",
  "Nezábudková",
  "Niťová",
  "Nitrianska",
  "Nížinná",
  "Nobelova",
  "Nobelovo námestie",
  "Nová",
  "Nová Rožňavská",
  "Novackého",
  "Nové pálenisko",
  "Nové záhrady I",
  "Nové záhrady II",
  "Nové záhrady III",
  "Nové záhrady IV",
  "Nové záhrady V",
  "Nové záhrady VI",
  "Nové záhrady VII",
  "Novinárska",
  "Novobanská",
  "Novohradská",
  "Novosvetská",
  "Novosvetská",
  "Novosvetská",
  "Obežná",
  "Obchodná",
  "Očovská",
  "Odbojárov",
  "Odborárska",
  "Odborárske námestie",
  "Odborárske námestie",
  "Ohnicová",
  "Okánikova",
  "Okružná",
  "Olbrachtova",
  "Olejkárska",
  "Ondavská",
  "Ondrejovova",
  "Oravská",
  "Orechová cesta",
  "Orechový rad",
  "Oriešková",
  "Ormisova",
  "Osadná",
  "Ostravská",
  "Ostredková",
  "Osuského",
  "Osvetová",
  "Otonelská",
  "Ovručská",
  "Ovsištské námestie",
  "Pajštúnska",
  "Palackého",
  "Palárikova",
  "Palárikova",
  "Pálavská",
  "Palisády",
  "Palisády",
  "Palisády",
  "Palkovičova",
  "Panenská",
  "Pankúchova",
  "Panónska cesta",
  "Panská",
  "Papánkovo námestie",
  "Papraďová",
  "Páričkova",
  "Parková",
  "Partizánska",
  "Pasienky",
  "Paulínyho",
  "Pavlovičova",
  "Pavlovova",
  "Pavlovská",
  "Pažického",
  "Pažítková",
  "Pečnianska",
  "Pernecká",
  "Pestovateľská",
  "Peterská",
  "Petzvalova",
  "Pezinská",
  "Piesočná",
  "Piešťanská",
  "Pifflova",
  "Pilárikova",
  "Pionierska",
  "Pivoňková",
  "Planckova",
  "Planét",
  "Plátenícka",
  "Pluhová",
  "Plynárenská",
  "Plzenská",
  "Pobrežná",
  "Pod Bôrikom",
  "Pod Kalváriou",
  "Pod lesom",
  "Pod Rovnicami",
  "Pod vinicami",
  "Podhorského",
  "Podjavorinskej",
  "Podlučinského",
  "Podniková",
  "Podtatranského",
  "Pohronská",
  "Polárna",
  "Poloreckého",
  "Poľná",
  "Poľská",
  "Poludníková",
  "Porubského",
  "Poštová",
  "Považská",
  "Povraznícka",
  "Povraznícka",
  "Pražská",
  "Predstaničné námesti",
  "Prepoštská",
  "Prešernova",
  "Prešovská",
  "Prešovská",
  "Prešovská",
  "Pri Bielom kríži",
  "Pri dvore",
  "Pri Dynamitke",
  "Pri Habánskom mlyne",
  "Pri hradnej studni",
  "Pri seči",
  "Pri Starej Prachárni",
  "Pri Starom háji",
  "Pri Starom Mýte",
  "Pri strelnici",
  "Pri Suchom mlyne",
  "Pri zvonici",
  "Pribinova",
  "Pribinova",
  "Pribinova",
  "Pribišova",
  "Pribylinská",
  "Priečna",
  "Priekopy",
  "Priemyselná",
  "Priemyselná",
  "Prievozská",
  "Prievozská",
  "Prievozská",
  "Príkopova",
  "Primaciálne námestie",
  "Prístav",
  "Prístavná",
  "Prokofievova",
  "Prokopa Veľkého",
  "Prokopova",
  "Prúdová",
  "Prvosienková",
  "Púpavová",
  "Pustá",
  "Puškinova",
  "Račianska",
  "Račianska",
  "Račianske mýto",
  "Radarová",
  "Rádiová",
  "Radlinského",
  "Radničná",
  "Radničné námestie",
  "Radvanská",
  "Rajská",
  "Raketová",
  "Rákosová",
  "Rastislavova",
  "Rázusovo nábrežie",
  "Repná",
  "Rešetkova",
  "Revolučná",
  "Révová",
  "Revúcka",
  "Rezedová",
  "Riazanská",
  "Riazanská",
  "Ribayová",
  "Riečna",
  "Rigeleho",
  "Rízlingová",
  "Riznerova",
  "Robotnícka",
  "Romanova",
  "Röntgenova",
  "Rosná",
  "Rovná",
  "Rovniankova",
  "Rovníková",
  "Rozmarínová",
  "Rožňavská",
  "Rožňavská",
  "Rožňavská",
  "Rubinsteinova",
  "Rudnayovo námestie",
  "Rumančeková",
  "Rusovská cesta",
  "Ružičková",
  "Ružinovská",
  "Ružinovská",
  "Ružinovská",
  "Ružomberská",
  "Ružová dolina",
  "Ružová dolina",
  "Rybárska brána",
  "Rybné námestie",
  "Rýdziková",
  "Sabinovská",
  "Sabinovská",
  "Sad Janka Kráľa",
  "Sadová",
  "Sartorisova",
  "Sasinkova",
  "Seberíniho",
  "Sečovská",
  "Sedlárska",
  "Sedmokrásková",
  "Segnerova",
  "Sekulská",
  "Semianova",
  "Senická",
  "Senná",
  "Schillerova",
  "Schody pri starej vo",
  "Sibírska",
  "Sienkiewiczova",
  "Silvánska",
  "Sinokvetná",
  "Skalická cesta",
  "Skalná",
  "Sklenárova",
  "Sklenárska",
  "Sládkovičova",
  "Sladová",
  "Slávičie údolie",
  "Slavín",
  "Slepá",
  "Sliačska",
  "Sliezska",
  "Slivková",
  "Slnečná",
  "Slovanská",
  "Slovinská",
  "Slovnaftská",
  "Slowackého",
  "Smetanova",
  "Smikova",
  "Smolenická",
  "Smolnícka",
  "Smrečianska",
  "Soferove schody",
  "Socháňova",
  "Sokolská",
  "Solivarská",
  "Sološnická",
  "Somolického",
  "Somolického",
  "Sosnová",
  "Spišská",
  "Spojná",
  "Spoločenská",
  "Sputniková",
  "Sreznevského",
  "Srnčia",
  "Stachanovská",
  "Stálicová",
  "Staničná",
  "Stará Černicová",
  "Stará Ivánska cesta",
  "Stará Prievozská",
  "Stará Vajnorská",
  "Stará vinárska",
  "Staré Grunty",
  "Staré ihrisko",
  "Staré záhrady",
  "Starhradská",
  "Starohájska",
  "Staromestská",
  "Staroturský chodník",
  "Staviteľská",
  "Stodolova",
  "Stoklasová",
  "Strakova",
  "Strážnická",
  "Strážny dom",
  "Strečnianska",
  "Stredná",
  "Strelecká",
  "Strmá cesta",
  "Strojnícka",
  "Stropkovská",
  "Struková",
  "Studená",
  "Stuhová",
  "Súbežná",
  "Súhvezdná",
  "Suché mýto",
  "Suchohradská",
  "Súkennícka",
  "Súľovská",
  "Sumbalova",
  "Súmračná",
  "Súťažná",
  "Svätého Vincenta",
  "Svätoplukova",
  "Svätoplukova",
  "Svätovojtešská",
  "Svetlá",
  "Svíbová",
  "Svidnícka",
  "Svoradova",
  "Svrčia",
  "Syslia",
  "Šafárikovo námestie",
  "Šafárikovo námestie",
  "Šafránová",
  "Šagátova",
  "Šalviová",
  "Šancová",
  "Šancová",
  "Šancová",
  "Šancová",
  "Šándorova",
  "Šarišská",
  "Šášovská",
  "Šaštínska",
  "Ševčenkova",
  "Šintavská",
  "Šípková",
  "Škarniclova",
  "Školská",
  "Škovránčia",
  "Škultétyho",
  "Šoltésovej",
  "Špieszova",
  "Špitálska",
  "Športová",
  "Šrobárovo námestie",
  "Šťastná",
  "Štedrá",
  "Štefánikova",
  "Štefánikova",
  "Štefánikova",
  "Štefanovičova",
  "Štefunkova",
  "Štetinova",
  "Štiavnická",
  "Štúrova",
  "Štyndlova",
  "Šulekova",
  "Šulekova",
  "Šulekova",
  "Šumavská",
  "Šuňavcova",
  "Šustekova",
  "Švabinského",
  "Tabaková",
  "Tablicova",
  "Táborská",
  "Tajovského",
  "Tallerova",
  "Tehelná",
  "Technická",
  "Tekovská",
  "Telocvičná",
  "Tematínska",
  "Teplická",
  "Terchovská",
  "Teslova",
  "Tetmayerova",
  "Thurzova",
  "Tichá",
  "Tilgnerova",
  "Timravina",
  "Tobrucká",
  "Tokajícka",
  "Tolstého",
  "Tománkova",
  "Tomášikova",
  "Tomášikova",
  "Tomášikova",
  "Tomášikova",
  "Tomášikova",
  "Topoľčianska",
  "Topoľová",
  "Továrenská",
  "Trebišovská",
  "Trebišovská",
  "Trebišovská",
  "Trenčianska",
  "Treskoňova",
  "Trnavská cesta",
  "Trnavská cesta",
  "Trnavská cesta",
  "Trnavská cesta",
  "Trnavská cesta",
  "Trnavské mýto",
  "Tŕňová",
  "Trojdomy",
  "Tučkova",
  "Tupolevova",
  "Turbínova",
  "Turčianska",
  "Turnianska",
  "Tvarožkova",
  "Tylova",
  "Tyršovo nábrežie",
  "Údernícka",
  "Údolná",
  "Uhorková",
  "Ukrajinská",
  "Ulica 29. augusta",
  "Ulica 29. augusta",
  "Ulica 29. augusta",
  "Ulica 29. augusta",
  "Ulica Imricha Karvaš",
  "Ulica Jozefa Krónera",
  "Ulica Viktora Tegelh",
  "Úprkova",
  "Úradnícka",
  "Uránová",
  "Urbánkova",
  "Ursínyho",
  "Uršulínska",
  "Úzka",
  "V záhradách",
  "Vajanského nábrežie",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Valašská",
  "Valchárska",
  "Vansovej",
  "Vápenná",
  "Varínska",
  "Varšavská",
  "Varšavská",
  "Vavilovova",
  "Vavrínova",
  "Vazovova",
  "Včelárska",
  "Velehradská",
  "Veltlínska",
  "Ventúrska",
  "Veterná",
  "Veternicová",
  "Vetvová",
  "Viedenská cesta",
  "Viedenská cesta",
  "Vietnamská",
  "Vígľašská",
  "Vihorlatská",
  "Viktorínova",
  "Vilová",
  "Vincenta Hložníka",
  "Vínna",
  "Vlastenecké námestie",
  "Vlčkova",
  "Vlčkova",
  "Vlčkova",
  "Vodný vrch",
  "Votrubova",
  "Vrábeľská",
  "Vrakunská cesta",
  "Vranovská",
  "Vretenová",
  "Vrchná",
  "Vrútocká",
  "Vyhliadka",
  "Vyhnianska cesta",
  "Vysoká",
  "Vyšehradská",
  "Vyšná",
  "Wattova",
  "Wilsonova",
  "Wolkrova",
  "Za Kasárňou",
  "Za sokolovňou",
  "Za Stanicou",
  "Za tehelňou",
  "Záborského",
  "Zadunajská cesta",
  "Záhorácka",
  "Záhradnícka",
  "Záhradnícka",
  "Záhradnícka",
  "Záhradnícka",
  "Záhrebská",
  "Záhrebská",
  "Zálužická",
  "Zámocká",
  "Zámocké schody",
  "Zámočnícka",
  "Západná",
  "Západný rad",
  "Záporožská",
  "Zátišie",
  "Závodníkova",
  "Zelená",
  "Zelinárska",
  "Zimná",
  "Zlaté piesky",
  "Zlaté schody",
  "Znievska",
  "Zohorská",
  "Zochova",
  "Zrinského",
  "Zvolenská",
  "Žabí majer",
  "Žabotova",
  "Žehrianska",
  "Železná",
  "Železničiarska",
  "Žellova",
  "Žiarska",
  "Židovská",
  "Žilinská",
  "Žilinská",
  "Živnostenská",
  "Žižkova",
  "Župné námestie"
];

},{}],797:[function(require,module,exports){
arguments[4][61][0].apply(exports,arguments)
},{"dup":61}],798:[function(require,module,exports){
module["exports"] = [
  "#{street}"
];

},{}],799:[function(require,module,exports){
arguments[4][149][0].apply(exports,arguments)
},{"dup":149}],800:[function(require,module,exports){
arguments[4][164][0].apply(exports,arguments)
},{"dup":164}],801:[function(require,module,exports){
module["exports"] = [
  "clicks-and-mortar",
  "value-added",
  "vertical",
  "proactive",
  "robust",
  "revolutionary",
  "scalable",
  "leading-edge",
  "innovative",
  "intuitive",
  "strategic",
  "e-business",
  "mission-critical",
  "sticky",
  "one-to-one",
  "24/7",
  "end-to-end",
  "global",
  "B2B",
  "B2C",
  "granular",
  "frictionless",
  "virtual",
  "viral",
  "dynamic",
  "24/365",
  "best-of-breed",
  "killer",
  "magnetic",
  "bleeding-edge",
  "web-enabled",
  "interactive",
  "dot-com",
  "sexy",
  "back-end",
  "real-time",
  "efficient",
  "front-end",
  "distributed",
  "seamless",
  "extensible",
  "turn-key",
  "world-class",
  "open-source",
  "cross-platform",
  "cross-media",
  "synergistic",
  "bricks-and-clicks",
  "out-of-the-box",
  "enterprise",
  "integrated",
  "impactful",
  "wireless",
  "transparent",
  "next-generation",
  "cutting-edge",
  "user-centric",
  "visionary",
  "customized",
  "ubiquitous",
  "plug-and-play",
  "collaborative",
  "compelling",
  "holistic",
  "rich",
  "synergies",
  "web-readiness",
  "paradigms",
  "markets",
  "partnerships",
  "infrastructures",
  "platforms",
  "initiatives",
  "channels",
  "eyeballs",
  "communities",
  "ROI",
  "solutions",
  "e-tailers",
  "e-services",
  "action-items",
  "portals",
  "niches",
  "technologies",
  "content",
  "vortals",
  "supply-chains",
  "convergence",
  "relationships",
  "architectures",
  "interfaces",
  "e-markets",
  "e-commerce",
  "systems",
  "bandwidth",
  "infomediaries",
  "models",
  "mindshare",
  "deliverables",
  "users",
  "schemas",
  "networks",
  "applications",
  "metrics",
  "e-business",
  "functionalities",
  "experiences",
  "web services",
  "methodologies"
];

},{}],802:[function(require,module,exports){
arguments[4][167][0].apply(exports,arguments)
},{"dup":167}],803:[function(require,module,exports){
arguments[4][168][0].apply(exports,arguments)
},{"dup":168}],804:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.adjective = require("./adjective");
company.descriptor = require("./descriptor");
company.noun = require("./noun");
company.bs_verb = require("./bs_verb");
company.bs_noun = require("./bs_noun");
company.name = require("./name");

},{"./adjective":800,"./bs_noun":801,"./bs_verb":802,"./descriptor":803,"./name":805,"./noun":806,"./suffix":807}],805:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name} #{suffix}",
  "#{Name.man_last_name} a #{Name.man_last_name} #{suffix}"
];

},{}],806:[function(require,module,exports){
arguments[4][171][0].apply(exports,arguments)
},{"dup":171}],807:[function(require,module,exports){
module["exports"] = [
  "s.r.o.",
  "a.s.",
  "v.o.s."
];

},{}],808:[function(require,module,exports){
var sk = {};
module['exports'] = sk;
sk.title = "Slovakian";
sk.address = require("./address");
sk.company = require("./company");
sk.internet = require("./internet");
sk.lorem = require("./lorem");
sk.name = require("./name");
sk.phone_number = require("./phone_number");

},{"./address":791,"./company":804,"./internet":811,"./lorem":812,"./name":817,"./phone_number":825}],809:[function(require,module,exports){
module["exports"] = [
  "sk",
  "com",
  "net",
  "eu",
  "org"
];

},{}],810:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "zoznam.sk",
  "azet.sk"
];

},{}],811:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./domain_suffix":809,"./free_email":810,"dup":73}],812:[function(require,module,exports){
arguments[4][203][0].apply(exports,arguments)
},{"./supplemental":813,"./words":814,"dup":203}],813:[function(require,module,exports){
arguments[4][204][0].apply(exports,arguments)
},{"dup":204}],814:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"dup":75}],815:[function(require,module,exports){
module["exports"] = [
  "Alexandra",
  "Karina",
  "Daniela",
  "Andrea",
  "Antónia",
  "Bohuslava",
  "Dáša",
  "Malvína",
  "Kristína",
  "Nataša",
  "Bohdana",
  "Drahomíra",
  "Sára",
  "Zora",
  "Tamara",
  "Ema",
  "Tatiana",
  "Erika",
  "Veronika",
  "Agáta",
  "Dorota",
  "Vanda",
  "Zoja",
  "Gabriela",
  "Perla",
  "Ida",
  "Liana",
  "Miloslava",
  "Vlasta",
  "Lívia",
  "Eleonóra",
  "Etela",
  "Romana",
  "Zlatica",
  "Anežka",
  "Bohumila",
  "Františka",
  "Angela",
  "Matilda",
  "Svetlana",
  "Ľubica",
  "Alena",
  "Soňa",
  "Vieroslava",
  "Zita",
  "Miroslava",
  "Irena",
  "Milena",
  "Estera",
  "Justína",
  "Dana",
  "Danica",
  "Jela",
  "Jaroslava",
  "Jarmila",
  "Lea",
  "Anastázia",
  "Galina",
  "Lesana",
  "Hermína",
  "Monika",
  "Ingrida",
  "Viktória",
  "Blažena",
  "Žofia",
  "Sofia",
  "Gizela",
  "Viola",
  "Gertrúda",
  "Zina",
  "Júlia",
  "Juliana",
  "Želmíra",
  "Ela",
  "Vanesa",
  "Iveta",
  "Vilma",
  "Petronela",
  "Žaneta",
  "Xénia",
  "Karolína",
  "Lenka",
  "Laura",
  "Stanislava",
  "Margaréta",
  "Dobroslava",
  "Blanka",
  "Valéria",
  "Paulína",
  "Sidónia",
  "Adriána",
  "Beáta",
  "Petra",
  "Melánia",
  "Diana",
  "Berta",
  "Patrícia",
  "Lujza",
  "Amália",
  "Milota",
  "Nina",
  "Margita",
  "Kamila",
  "Dušana",
  "Magdaléna",
  "Oľga",
  "Anna",
  "Hana",
  "Božena",
  "Marta",
  "Libuša",
  "Božidara",
  "Dominika",
  "Hortenzia",
  "Jozefína",
  "Štefánia",
  "Ľubomíra",
  "Zuzana",
  "Darina",
  "Marcela",
  "Milica",
  "Elena",
  "Helena",
  "Lýdia",
  "Anabela",
  "Jana",
  "Silvia",
  "Nikola",
  "Ružena",
  "Nora",
  "Drahoslava",
  "Linda",
  "Melinda",
  "Rebeka",
  "Rozália",
  "Regína",
  "Alica",
  "Marianna",
  "Miriama",
  "Martina",
  "Mária",
  "Jolana",
  "Ľudomila",
  "Ľudmila",
  "Olympia",
  "Eugénia",
  "Ľuboslava",
  "Zdenka",
  "Edita",
  "Michaela",
  "Stela",
  "Viera",
  "Natália",
  "Eliška",
  "Brigita",
  "Valentína",
  "Terézia",
  "Vladimíra",
  "Hedviga",
  "Uršuľa",
  "Alojza",
  "Kvetoslava",
  "Sabína",
  "Dobromila",
  "Klára",
  "Simona",
  "Aurélia",
  "Denisa",
  "Renáta",
  "Irma",
  "Agnesa",
  "Klaudia",
  "Alžbeta",
  "Elvíra",
  "Cecília",
  "Emília",
  "Katarína",
  "Henrieta",
  "Bibiána",
  "Barbora",
  "Marína",
  "Izabela",
  "Hilda",
  "Otília",
  "Lucia",
  "Branislava",
  "Bronislava",
  "Ivica",
  "Albína",
  "Kornélia",
  "Sláva",
  "Slávka",
  "Judita",
  "Dagmara",
  "Adela",
  "Nadežda",
  "Eva",
  "Filoména",
  "Ivana",
  "Milada"
];

},{}],816:[function(require,module,exports){
module["exports"] = [
  "Antalová",
  "Babková",
  "Bahnová",
  "Balážová",
  "Baranová",
  "Baranková",
  "Bartovičová",
  "Bartošová",
  "Bačová",
  "Bernoláková",
  "Beňová",
  "Biceková",
  "Bieliková",
  "Blahová",
  "Bondrová",
  "Bosáková",
  "Bošková",
  "Brezinová",
  "Bukovská",
  "Chalupková",
  "Chudíková",
  "Cibulová",
  "Cibulková",
  "Cyprichová",
  "Cígerová",
  "Danková",
  "Daňková",
  "Daňová",
  "Debnárová",
  "Dejová",
  "Dekýšová",
  "Doležalová",
  "Dočolomanská",
  "Droppová",
  "Dubovská",
  "Dudeková",
  "Dulová",
  "Dullová",
  "Dusíková",
  "Dvončová",
  "Dzurjaninová",
  "Dávidová",
  "Fabianová",
  "Fabiánová",
  "Fajnorová",
  "Farkašovská",
  "Ficová",
  "Filcová",
  "Filipová",
  "Finková",
  "Ftoreková",
  "Gašparová",
  "Gašparovičová",
  "Gocníková",
  "Gregorová",
  "Gregušová",
  "Grznárová",
  "Habláková",
  "Habšudová",
  "Haldová",
  "Halušková",
  "Haláková",
  "Hanková",
  "Hanzalová",
  "Haščáková",
  "Heretiková",
  "Hečková",
  "Hlaváčeková",
  "Hlinková",
  "Holubová",
  "Holubyová",
  "Hossová",
  "Hozová",
  "Hrašková",
  "Hricová",
  "Hrmová",
  "Hrušovská",
  "Hubová",
  "Ihnačáková",
  "Janečeková",
  "Janošková",
  "Jantošovičová",
  "Janíková",
  "Jančeková",
  "Jedľovská",
  "Jendeková",
  "Jonatová",
  "Jurinová",
  "Jurkovičová",
  "Juríková",
  "Jánošíková",
  "Kafendová",
  "Kaliská",
  "Karulová",
  "Kenížová",
  "Klapková",
  "Kmeťová",
  "Kolesárová",
  "Kollárová",
  "Kolniková",
  "Kolníková",
  "Kolárová",
  "Korecová",
  "Kostkaová",
  "Kostrecová",
  "Kováčová",
  "Kováčiková",
  "Kozová",
  "Kočišová",
  "Krajíčeková",
  "Krajčová",
  "Krajčovičová",
  "Krajčírová",
  "Králiková",
  "Krúpová",
  "Kubíková",
  "Kyseľová",
  "Kállayová",
  "Labudová",
  "Lepšíková",
  "Liptáková",
  "Lisická",
  "Lubinová",
  "Lukáčová",
  "Luptáková",
  "Líšková",
  "Madejová",
  "Majeská",
  "Malachovská",
  "Malíšeková",
  "Mamojková",
  "Marcinková",
  "Mariánová",
  "Masaryková",
  "Maslová",
  "Matiašková",
  "Medveďová",
  "Melcerová",
  "Mečiarová",
  "Michalíková",
  "Mihaliková",
  "Mihálová",
  "Miháliková",
  "Miklošková",
  "Mikulíková",
  "Mikušová",
  "Mikúšová",
  "Milotová",
  "Mináčová",
  "Mišíková",
  "Mojžišová",
  "Mokrošová",
  "Morová",
  "Moravčíková",
  "Mydlová",
  "Nemcová",
  "Nováková",
  "Obšutová",
  "Ondrušová",
  "Otčenášová",
  "Pauková",
  "Pavlikovská",
  "Pavúková",
  "Pašeková",
  "Pašková",
  "Pelikánová",
  "Petrovická",
  "Petrušková",
  "Pešková",
  "Plchová",
  "Plekanecová",
  "Podhradská",
  "Podkonická",
  "Poliaková",
  "Pupáková",
  "Raková",
  "Repiská",
  "Romančíková",
  "Rusová",
  "Ružičková",
  "Rybníčeková",
  "Rybárová",
  "Rybáriková",
  "Samsonová",
  "Sedliaková",
  "Senková",
  "Sklenková",
  "Skokanová",
  "Skutecká",
  "Slašťanová",
  "Slobodová",
  "Slobodníková",
  "Slotová",
  "Slováková",
  "Smreková",
  "Stodolová",
  "Straková",
  "Strnisková",
  "Svrbíková",
  "Sámelová",
  "Sýkorová",
  "Tatarová",
  "Tatarková",
  "Tatárová",
  "Tatárkaová",
  "Thomková",
  "Tomečeková",
  "Tomková",
  "Trubenová",
  "Turčoková",
  "Uramová",
  "Urblíková",
  "Vajcíková",
  "Vajdová",
  "Valachová",
  "Valachovičová",
  "Valentová",
  "Valušková",
  "Vaneková",
  "Veselová",
  "Vicenová",
  "Višňovská",
  "Vlachová",
  "Vojteková",
  "Vydarená",
  "Zajacová",
  "Zimová",
  "Zimková",
  "Záborská",
  "Zúbriková",
  "Čapkovičová",
  "Čaplovičová",
  "Čarnogurská",
  "Čierná",
  "Čobrdová",
  "Ďaďová",
  "Ďuricová",
  "Ďurišová",
  "Šidlová",
  "Šimonovičová",
  "Škriniarová",
  "Škultétyová",
  "Šmajdová",
  "Šoltésová",
  "Šoltýsová",
  "Štefanová",
  "Štefanková",
  "Šulcová",
  "Šurková",
  "Švehlová",
  "Šťastná"
];

},{}],817:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.male_first_name = require("./male_first_name");
name.female_first_name = require("./female_first_name");
name.male_last_name = require("./male_last_name");
name.female_last_name = require("./female_last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.title = require("./title");
name.name = require("./name");

},{"./female_first_name":815,"./female_last_name":816,"./male_first_name":818,"./male_last_name":819,"./name":820,"./prefix":821,"./suffix":822,"./title":823}],818:[function(require,module,exports){
module["exports"] = [
  "Drahoslav",
  "Severín",
  "Alexej",
  "Ernest",
  "Rastislav",
  "Radovan",
  "Dobroslav",
  "Dalibor",
  "Vincent",
  "Miloš",
  "Timotej",
  "Gejza",
  "Bohuš",
  "Alfonz",
  "Gašpar",
  "Emil",
  "Erik",
  "Blažej",
  "Zdenko",
  "Dezider",
  "Arpád",
  "Valentín",
  "Pravoslav",
  "Jaromír",
  "Roman",
  "Matej",
  "Frederik",
  "Viktor",
  "Alexander",
  "Radomír",
  "Albín",
  "Bohumil",
  "Kazimír",
  "Fridrich",
  "Radoslav",
  "Tomáš",
  "Alan",
  "Branislav",
  "Bruno",
  "Gregor",
  "Vlastimil",
  "Boleslav",
  "Eduard",
  "Jozef",
  "Víťazoslav",
  "Blahoslav",
  "Beňadik",
  "Adrián",
  "Gabriel",
  "Marián",
  "Emanuel",
  "Miroslav",
  "Benjamín",
  "Hugo",
  "Richard",
  "Izidor",
  "Zoltán",
  "Albert",
  "Igor",
  "Július",
  "Aleš",
  "Fedor",
  "Rudolf",
  "Valér",
  "Marcel",
  "Ervín",
  "Slavomír",
  "Vojtech",
  "Juraj",
  "Marek",
  "Jaroslav",
  "Žigmund",
  "Florián",
  "Roland",
  "Pankrác",
  "Servác",
  "Bonifác",
  "Svetozár",
  "Bernard",
  "Júlia",
  "Urban",
  "Dušan",
  "Viliam",
  "Ferdinand",
  "Norbert",
  "Róbert",
  "Medard",
  "Zlatko",
  "Anton",
  "Vasil",
  "Vít",
  "Adolf",
  "Vratislav",
  "Alfréd",
  "Alojz",
  "Ján",
  "Tadeáš",
  "Ladislav",
  "Peter",
  "Pavol",
  "Miloslav",
  "Prokop",
  "Cyril",
  "Metod",
  "Patrik",
  "Oliver",
  "Ivan",
  "Kamil",
  "Henrich",
  "Drahomír",
  "Bohuslav",
  "Iľja",
  "Daniel",
  "Vladimír",
  "Jakub",
  "Krištof",
  "Ignác",
  "Gustáv",
  "Jerguš",
  "Dominik",
  "Oskar",
  "Vavrinec",
  "Ľubomír",
  "Mojmír",
  "Leonard",
  "Tichomír",
  "Filip",
  "Bartolomej",
  "Ľudovít",
  "Samuel",
  "Augustín",
  "Belo",
  "Oleg",
  "Bystrík",
  "Ctibor",
  "Ľudomil",
  "Konštantín",
  "Ľuboslav",
  "Matúš",
  "Móric",
  "Ľuboš",
  "Ľubor",
  "Vladislav",
  "Cyprián",
  "Václav",
  "Michal",
  "Jarolím",
  "Arnold",
  "Levoslav",
  "František",
  "Dionýz",
  "Maximilián",
  "Koloman",
  "Boris",
  "Lukáš",
  "Kristián",
  "Vendelín",
  "Sergej",
  "Aurel",
  "Demeter",
  "Denis",
  "Hubert",
  "Karol",
  "Imrich",
  "René",
  "Bohumír",
  "Teodor",
  "Tibor",
  "Maroš",
  "Martin",
  "Svätopluk",
  "Stanislav",
  "Leopold",
  "Eugen",
  "Félix",
  "Klement",
  "Kornel",
  "Milan",
  "Vratko",
  "Ondrej",
  "Andrej",
  "Edmund",
  "Oldrich",
  "Oto",
  "Mikuláš",
  "Ambróz",
  "Radúz",
  "Bohdan",
  "Adam",
  "Štefan",
  "Dávid",
  "Silvester"
];

},{}],819:[function(require,module,exports){
module["exports"] = [
  "Antal",
  "Babka",
  "Bahna",
  "Bahno",
  "Baláž",
  "Baran",
  "Baranka",
  "Bartovič",
  "Bartoš",
  "Bača",
  "Bernolák",
  "Beňo",
  "Bicek",
  "Bielik",
  "Blaho",
  "Bondra",
  "Bosák",
  "Boška",
  "Brezina",
  "Bukovský",
  "Chalupka",
  "Chudík",
  "Cibula",
  "Cibulka",
  "Cibuľa",
  "Cyprich",
  "Cíger",
  "Danko",
  "Daňko",
  "Daňo",
  "Debnár",
  "Dej",
  "Dekýš",
  "Doležal",
  "Dočolomanský",
  "Droppa",
  "Dubovský",
  "Dudek",
  "Dula",
  "Dulla",
  "Dusík",
  "Dvonč",
  "Dzurjanin",
  "Dávid",
  "Fabian",
  "Fabián",
  "Fajnor",
  "Farkašovský",
  "Fico",
  "Filc",
  "Filip",
  "Finka",
  "Ftorek",
  "Gašpar",
  "Gašparovič",
  "Gocník",
  "Gregor",
  "Greguš",
  "Grznár",
  "Hablák",
  "Habšuda",
  "Halda",
  "Haluška",
  "Halák",
  "Hanko",
  "Hanzal",
  "Haščák",
  "Heretik",
  "Hečko",
  "Hlaváček",
  "Hlinka",
  "Holub",
  "Holuby",
  "Hossa",
  "Hoza",
  "Hraško",
  "Hric",
  "Hrmo",
  "Hrušovský",
  "Huba",
  "Ihnačák",
  "Janeček",
  "Janoška",
  "Jantošovič",
  "Janík",
  "Janček",
  "Jedľovský",
  "Jendek",
  "Jonata",
  "Jurina",
  "Jurkovič",
  "Jurík",
  "Jánošík",
  "Kafenda",
  "Kaliský",
  "Karul",
  "Keníž",
  "Klapka",
  "Kmeť",
  "Kolesár",
  "Kollár",
  "Kolnik",
  "Kolník",
  "Kolár",
  "Korec",
  "Kostka",
  "Kostrec",
  "Kováč",
  "Kováčik",
  "Koza",
  "Kočiš",
  "Krajíček",
  "Krajči",
  "Krajčo",
  "Krajčovič",
  "Krajčír",
  "Králik",
  "Krúpa",
  "Kubík",
  "Kyseľ",
  "Kállay",
  "Labuda",
  "Lepšík",
  "Lipták",
  "Lisický",
  "Lubina",
  "Lukáč",
  "Lupták",
  "Líška",
  "Madej",
  "Majeský",
  "Malachovský",
  "Malíšek",
  "Mamojka",
  "Marcinko",
  "Marián",
  "Masaryk",
  "Maslo",
  "Matiaško",
  "Medveď",
  "Melcer",
  "Mečiar",
  "Michalík",
  "Mihalik",
  "Mihál",
  "Mihálik",
  "Mikloško",
  "Mikulík",
  "Mikuš",
  "Mikúš",
  "Milota",
  "Mináč",
  "Mišík",
  "Mojžiš",
  "Mokroš",
  "Mora",
  "Moravčík",
  "Mydlo",
  "Nemec",
  "Nitra",
  "Novák",
  "Obšut",
  "Ondruš",
  "Otčenáš",
  "Pauko",
  "Pavlikovský",
  "Pavúk",
  "Pašek",
  "Paška",
  "Paško",
  "Pelikán",
  "Petrovický",
  "Petruška",
  "Peško",
  "Plch",
  "Plekanec",
  "Podhradský",
  "Podkonický",
  "Poliak",
  "Pupák",
  "Rak",
  "Repiský",
  "Romančík",
  "Rus",
  "Ružička",
  "Rybníček",
  "Rybár",
  "Rybárik",
  "Samson",
  "Sedliak",
  "Senko",
  "Sklenka",
  "Skokan",
  "Skutecký",
  "Slašťan",
  "Sloboda",
  "Slobodník",
  "Slota",
  "Slovák",
  "Smrek",
  "Stodola",
  "Straka",
  "Strnisko",
  "Svrbík",
  "Sámel",
  "Sýkora",
  "Tatar",
  "Tatarka",
  "Tatár",
  "Tatárka",
  "Thomka",
  "Tomeček",
  "Tomka",
  "Tomko",
  "Truben",
  "Turčok",
  "Uram",
  "Urblík",
  "Vajcík",
  "Vajda",
  "Valach",
  "Valachovič",
  "Valent",
  "Valuška",
  "Vanek",
  "Vesel",
  "Vicen",
  "Višňovský",
  "Vlach",
  "Vojtek",
  "Vydarený",
  "Zajac",
  "Zima",
  "Zimka",
  "Záborský",
  "Zúbrik",
  "Čapkovič",
  "Čaplovič",
  "Čarnogurský",
  "Čierny",
  "Čobrda",
  "Ďaďo",
  "Ďurica",
  "Ďuriš",
  "Šidlo",
  "Šimonovič",
  "Škriniar",
  "Škultéty",
  "Šmajda",
  "Šoltés",
  "Šoltýs",
  "Štefan",
  "Štefanka",
  "Šulc",
  "Šurka",
  "Švehla",
  "Šťastný"
];

},{}],820:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{man_first_name} #{man_last_name}",
  "#{prefix} #{woman_first_name} #{woman_last_name}",
  "#{man_first_name} #{man_last_name} #{suffix}",
  "#{woman_first_name} #{woman_last_name} #{suffix}",
  "#{man_first_name} #{man_last_name}",
  "#{man_first_name} #{man_last_name}",
  "#{man_first_name} #{man_last_name}",
  "#{woman_first_name} #{woman_last_name}",
  "#{woman_first_name} #{woman_last_name}",
  "#{woman_first_name} #{woman_last_name}"
];

},{}],821:[function(require,module,exports){
module["exports"] = [
  "Ing.",
  "Mgr.",
  "JUDr.",
  "MUDr."
];

},{}],822:[function(require,module,exports){
module["exports"] = [
  "Phd."
];

},{}],823:[function(require,module,exports){
arguments[4][212][0].apply(exports,arguments)
},{"dup":212}],824:[function(require,module,exports){
module["exports"] = [
  "09## ### ###",
  "0## #### ####",
  "0# #### ####",
  "+421 ### ### ###"
];

},{}],825:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":824,"dup":83}],826:[function(require,module,exports){
arguments[4][459][0].apply(exports,arguments)
},{"dup":459}],827:[function(require,module,exports){
module["exports"] = [
  "#{city_prefix}#{city_suffix}"
];

},{}],828:[function(require,module,exports){
module["exports"] = [
  "Söder",
  "Norr",
  "Väst",
  "Öster",
  "Aling",
  "Ar",
  "Av",
  "Bo",
  "Br",
  "Bå",
  "Ek",
  "En",
  "Esk",
  "Fal",
  "Gäv",
  "Göte",
  "Ha",
  "Helsing",
  "Karl",
  "Krist",
  "Kram",
  "Kung",
  "Kö",
  "Lyck",
  "Ny"
];

},{}],829:[function(require,module,exports){
module["exports"] = [
  "stad",
  "land",
  "sås",
  "ås",
  "holm",
  "tuna",
  "sta",
  "berg",
  "löv",
  "borg",
  "mora",
  "hamn",
  "fors",
  "köping",
  "by",
  "hult",
  "torp",
  "fred",
  "vik"
];

},{}],830:[function(require,module,exports){
module["exports"] = [
  "s Väg",
  "s Gata"
];

},{}],831:[function(require,module,exports){
module["exports"] = [
  "Ryssland",
  "Kanada",
  "Kina",
  "USA",
  "Brasilien",
  "Australien",
  "Indien",
  "Argentina",
  "Kazakstan",
  "Algeriet",
  "DR Kongo",
  "Danmark",
  "Färöarna",
  "Grönland",
  "Saudiarabien",
  "Mexiko",
  "Indonesien",
  "Sudan",
  "Libyen",
  "Iran",
  "Mongoliet",
  "Peru",
  "Tchad",
  "Niger",
  "Angola",
  "Mali",
  "Sydafrika",
  "Colombia",
  "Etiopien",
  "Bolivia",
  "Mauretanien",
  "Egypten",
  "Tanzania",
  "Nigeria",
  "Venezuela",
  "Namibia",
  "Pakistan",
  "Moçambique",
  "Turkiet",
  "Chile",
  "Zambia",
  "Marocko",
  "Västsahara",
  "Burma",
  "Afghanistan",
  "Somalia",
  "Centralafrikanska republiken",
  "Sydsudan",
  "Ukraina",
  "Botswana",
  "Madagaskar",
  "Kenya",
  "Frankrike",
  "Franska Guyana",
  "Jemen",
  "Thailand",
  "Spanien",
  "Turkmenistan",
  "Kamerun",
  "Papua Nya Guinea",
  "Sverige",
  "Uzbekistan",
  "Irak",
  "Paraguay",
  "Zimbabwe",
  "Japan",
  "Tyskland",
  "Kongo",
  "Finland",
  "Malaysia",
  "Vietnam",
  "Norge",
  "Svalbard",
  "Jan Mayen",
  "Elfenbenskusten",
  "Polen",
  "Italien",
  "Filippinerna",
  "Ecuador",
  "Burkina Faso",
  "Nya Zeeland",
  "Gabon",
  "Guinea",
  "Storbritannien",
  "Ghana",
  "Rumänien",
  "Laos",
  "Uganda",
  "Guyana",
  "Oman",
  "Vitryssland",
  "Kirgizistan",
  "Senegal",
  "Syrien",
  "Kambodja",
  "Uruguay",
  "Tunisien",
  "Surinam",
  "Nepal",
  "Bangladesh",
  "Tadzjikistan",
  "Grekland",
  "Nicaragua",
  "Eritrea",
  "Nordkorea",
  "Malawi",
  "Benin",
  "Honduras",
  "Liberia",
  "Bulgarien",
  "Kuba",
  "Guatemala",
  "Island",
  "Sydkorea",
  "Ungern",
  "Portugal",
  "Jordanien",
  "Serbien",
  "Azerbajdzjan",
  "Österrike",
  "Förenade Arabemiraten",
  "Tjeckien",
  "Panama",
  "Sierra Leone",
  "Irland",
  "Georgien",
  "Sri Lanka",
  "Litauen",
  "Lettland",
  "Togo",
  "Kroatien",
  "Bosnien och Hercegovina",
  "Costa Rica",
  "Slovakien",
  "Dominikanska republiken",
  "Bhutan",
  "Estland",
  "Danmark",
  "Färöarna",
  "Grönland",
  "Nederländerna",
  "Schweiz",
  "Guinea-Bissau",
  "Taiwan",
  "Moldavien",
  "Belgien",
  "Lesotho",
  "Armenien",
  "Albanien",
  "Salomonöarna",
  "Ekvatorialguinea",
  "Burundi",
  "Haiti",
  "Rwanda",
  "Makedonien",
  "Djibouti",
  "Belize",
  "Israel",
  "El Salvador",
  "Slovenien",
  "Fiji",
  "Kuwait",
  "Swaziland",
  "Timor-Leste",
  "Montenegro",
  "Bahamas",
  "Vanuatu",
  "Qatar",
  "Gambia",
  "Jamaica",
  "Kosovo",
  "Libanon",
  "Cypern",
  "Brunei",
  "Trinidad och Tobago",
  "Kap Verde",
  "Samoa",
  "Luxemburg",
  "Komorerna",
  "Mauritius",
  "São Tomé och Príncipe",
  "Kiribati",
  "Dominica",
  "Tonga",
  "Mikronesiens federerade stater",
  "Singapore",
  "Bahrain",
  "Saint Lucia",
  "Andorra",
  "Palau",
  "Seychellerna",
  "Antigua och Barbuda",
  "Barbados",
  "Saint Vincent och Grenadinerna",
  "Grenada",
  "Malta",
  "Maldiverna",
  "Saint Kitts och Nevis",
  "Marshallöarna",
  "Liechtenstein",
  "San Marino",
  "Tuvalu",
  "Nauru",
  "Monaco",
  "Vatikanstaten"
];

},{}],832:[function(require,module,exports){
module["exports"] = [
  "Sverige"
];

},{}],833:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.country = require("./country");
address.common_street_suffix = require("./common_street_suffix");
address.street_prefix = require("./street_prefix");
address.street_root = require("./street_root");
address.street_suffix = require("./street_suffix");
address.state = require("./state");
address.city = require("./city");
address.street_name = require("./street_name");
address.postcode = require("./postcode");
address.building_number = require("./building_number");
address.secondary_address = require("./secondary_address");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":826,"./city":827,"./city_prefix":828,"./city_suffix":829,"./common_street_suffix":830,"./country":831,"./default_country":832,"./postcode":834,"./secondary_address":835,"./state":836,"./street_address":837,"./street_name":838,"./street_prefix":839,"./street_root":840,"./street_suffix":841}],834:[function(require,module,exports){
arguments[4][327][0].apply(exports,arguments)
},{"dup":327}],835:[function(require,module,exports){
module["exports"] = [
  "Lgh. ###",
  "Hus ###"
];

},{}],836:[function(require,module,exports){
module["exports"] = [
  "Blekinge",
  "Dalarna",
  "Gotland",
  "Gävleborg",
  "Göteborg",
  "Halland",
  "Jämtland",
  "Jönköping",
  "Kalmar",
  "Kronoberg",
  "Norrbotten",
  "Skaraborg",
  "Skåne",
  "Stockholm",
  "Södermanland",
  "Uppsala",
  "Värmland",
  "Västerbotten",
  "Västernorrland",
  "Västmanland",
  "Älvsborg",
  "Örebro",
  "Östergötland"
];

},{}],837:[function(require,module,exports){
arguments[4][61][0].apply(exports,arguments)
},{"dup":61}],838:[function(require,module,exports){
arguments[4][611][0].apply(exports,arguments)
},{"dup":611}],839:[function(require,module,exports){
module["exports"] = [
  "Västra",
  "Östra",
  "Norra",
  "Södra",
  "Övre",
  "Undre"
];

},{}],840:[function(require,module,exports){
module["exports"] = [
  "Björk",
  "Järnvägs",
  "Ring",
  "Skol",
  "Skogs",
  "Ny",
  "Gran",
  "Idrotts",
  "Stor",
  "Kyrk",
  "Industri",
  "Park",
  "Strand",
  "Skol",
  "Trädgård",
  "Ängs",
  "Kyrko",
  "Villa",
  "Ek",
  "Kvarn",
  "Stations",
  "Back",
  "Furu",
  "Gen",
  "Fabriks",
  "Åker",
  "Bäck",
  "Asp"
];

},{}],841:[function(require,module,exports){
module["exports"] = [
  "vägen",
  "gatan",
  "gränden",
  "gärdet",
  "allén"
];

},{}],842:[function(require,module,exports){
module["exports"] = [
  56,
  62,
  59
];

},{}],843:[function(require,module,exports){
module["exports"] = [
  "#{common_cell_prefix}-###-####"
];

},{}],844:[function(require,module,exports){
var cell_phone = {};
module['exports'] = cell_phone;
cell_phone.common_cell_prefix = require("./common_cell_prefix");
cell_phone.formats = require("./formats");

},{"./common_cell_prefix":842,"./formats":843}],845:[function(require,module,exports){
module["exports"] = [
  "vit",
  "silver",
  "grå",
  "svart",
  "röd",
  "grön",
  "blå",
  "gul",
  "lila",
  "indigo",
  "guld",
  "brun",
  "rosa",
  "purpur",
  "korall"
];

},{}],846:[function(require,module,exports){
module["exports"] = [
  "Böcker",
  "Filmer",
  "Musik",
  "Spel",
  "Elektronik",
  "Datorer",
  "Hem",
  "Trädgård",
  "Verktyg",
  "Livsmedel",
  "Hälsa",
  "Skönhet",
  "Leksaker",
  "Klädsel",
  "Skor",
  "Smycken",
  "Sport"
];

},{}],847:[function(require,module,exports){
arguments[4][162][0].apply(exports,arguments)
},{"./color":845,"./department":846,"./product_name":848,"dup":162}],848:[function(require,module,exports){
module["exports"] = {
  "adjective": [
    "Liten",
    "Ergonomisk",
    "Robust",
    "Intelligent",
    "Söt",
    "Otrolig",
    "Fatastisk",
    "Praktisk",
    "Slimmad",
    "Grym"
  ],
  "material": [
    "Stål",
    "Metall",
    "Trä",
    "Betong",
    "Plast",
    "Bomul",
    "Grnit",
    "Gummi",
    "Latex"
  ],
  "product": [
    "Stol",
    "Bil",
    "Dator",
    "Handskar",
    "Pants",
    "Shirt",
    "Table",
    "Shoes",
    "Hat"
  ]
};

},{}],849:[function(require,module,exports){
arguments[4][119][0].apply(exports,arguments)
},{"./name":850,"./suffix":851,"dup":119}],850:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name}-#{Name.last_name}",
  "#{Name.last_name}, #{Name.last_name} #{suffix}"
];

},{}],851:[function(require,module,exports){
module["exports"] = [
  "Gruppen",
  "AB",
  "HB",
  "Group",
  "Investment",
  "Kommanditbolag",
  "Aktiebolag"
];

},{}],852:[function(require,module,exports){
arguments[4][184][0].apply(exports,arguments)
},{"./month":853,"./weekday":854,"dup":184}],853:[function(require,module,exports){
// Source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/en.xml#L1799
module["exports"] = {
  wide: [
    "januari",
    "februari",
    "mars",
    "april",
    "maj",
    "juni",
    "juli",
    "augusti",
    "september",
    "oktober",
    "november",
    "december"
  ],
  abbr: [
    "jan",
    "feb",
    "mar",
    "apr",
    "maj",
    "jun",
    "jul",
    "aug",
    "sep",
    "okt",
    "nov",
    "dec"
  ]
};

},{}],854:[function(require,module,exports){
// Source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/en.xml#L1847
module["exports"] = {
  wide: [
    "söndag",
    "måndag",
    "tisdag",
    "onsdag",
    "torsdag",
    "fredag",
    "lördag"
  ],
  abbr: [
    "sön",
    "mån",
    "tis",
    "ons",
    "tor",
    "fre",
    "lör"
  ]
};

},{}],855:[function(require,module,exports){
var sv = {};
module['exports'] = sv;
sv.title = "Swedish";
sv.address = require("./address");
sv.company = require("./company");
sv.internet = require("./internet");
sv.name = require("./name");
sv.phone_number = require("./phone_number");
sv.cell_phone = require("./cell_phone");
sv.commerce = require("./commerce");
sv.team = require("./team");
sv.date = require("./date");

},{"./address":833,"./cell_phone":844,"./commerce":847,"./company":849,"./date":852,"./internet":857,"./name":860,"./phone_number":866,"./team":867}],856:[function(require,module,exports){
module["exports"] = [
  "se",
  "nu",
  "info",
  "com",
  "org"
];

},{}],857:[function(require,module,exports){
arguments[4][124][0].apply(exports,arguments)
},{"./domain_suffix":856,"dup":124}],858:[function(require,module,exports){
module["exports"] = [
  "Erik",
  "Lars",
  "Karl",
  "Anders",
  "Per",
  "Johan",
  "Nils",
  "Lennart",
  "Emil",
  "Hans"
];

},{}],859:[function(require,module,exports){
module["exports"] = [
  "Maria",
  "Anna",
  "Margareta",
  "Elisabeth",
  "Eva",
  "Birgitta",
  "Kristina",
  "Karin",
  "Elisabet",
  "Marie"
];

},{}],860:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name_women = require("./first_name_women");
name.first_name_men = require("./first_name_men");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.title = require("./title");
name.name = require("./name");

},{"./first_name_men":858,"./first_name_women":859,"./last_name":861,"./name":862,"./prefix":863,"./title":864}],861:[function(require,module,exports){
module["exports"] = [
  "Johansson",
  "Andersson",
  "Karlsson",
  "Nilsson",
  "Eriksson",
  "Larsson",
  "Olsson",
  "Persson",
  "Svensson",
  "Gustafsson"
];

},{}],862:[function(require,module,exports){
module["exports"] = [
  "#{first_name_women} #{last_name}",
  "#{first_name_men} #{last_name}",
  "#{first_name_women} #{last_name}",
  "#{first_name_men} #{last_name}",
  "#{first_name_women} #{last_name}",
  "#{first_name_men} #{last_name}",
  "#{prefix} #{first_name_men} #{last_name}",
  "#{prefix} #{first_name_women} #{last_name}"
];

},{}],863:[function(require,module,exports){
module["exports"] = [
  "Dr.",
  "Prof.",
  "PhD."
];

},{}],864:[function(require,module,exports){
arguments[4][212][0].apply(exports,arguments)
},{"dup":212}],865:[function(require,module,exports){
module["exports"] = [
  "####-#####",
  "####-######"
];

},{}],866:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":865,"dup":83}],867:[function(require,module,exports){
var team = {};
module['exports'] = team;
team.suffix = require("./suffix");
team.name = require("./name");

},{"./name":868,"./suffix":869}],868:[function(require,module,exports){
module["exports"] = [
  "#{Address.city} #{suffix}"
];

},{}],869:[function(require,module,exports){
module["exports"] = [
  "IF",
  "FF",
  "BK",
  "HK",
  "AIF",
  "SK",
  "FC",
  "SK",
  "BoIS",
  "FK",
  "BIS",
  "FIF",
  "IK"
];

},{}],870:[function(require,module,exports){
arguments[4][50][0].apply(exports,arguments)
},{"dup":50}],871:[function(require,module,exports){
module["exports"] = [
  "Adana",
  "Adıyaman",
  "Afyon",
  "Ağrı",
  "Amasya",
  "Ankara",
  "Antalya",
  "Artvin",
  "Aydın",
  "Balıkesir",
  "Bilecik",
  "Bingöl",
  "Bitlis",
  "Bolu",
  "Burdur",
  "Bursa",
  "Çanakkale",
  "Çankırı",
  "Çorum",
  "Denizli",
  "Diyarbakır",
  "Edirne",
  "Elazığ",
  "Erzincan",
  "Erzurum",
  "Eskişehir",
  "Gaziantep",
  "Giresun",
  "Gümüşhane",
  "Hakkari",
  "Hatay",
  "Isparta",
  "İçel (Mersin)",
  "İstanbul",
  "İzmir",
  "Kars",
  "Kastamonu",
  "Kayseri",
  "Kırklareli",
  "Kırşehir",
  "Kocaeli",
  "Konya",
  "Kütahya",
  "Malatya",
  "Manisa",
  "K.maraş",
  "Mardin",
  "Muğla",
  "Muş",
  "Nevşehir",
  "Niğde",
  "Ordu",
  "Rize",
  "Sakarya",
  "Samsun",
  "Siirt",
  "Sinop",
  "Sivas",
  "Tekirdağ",
  "Tokat",
  "Trabzon",
  "Tunceli",
  "Şanlıurfa",
  "Uşak",
  "Van",
  "Yozgat",
  "Zonguldak",
  "Aksaray",
  "Bayburt",
  "Karaman",
  "Kırıkkale",
  "Batman",
  "Şırnak",
  "Bartın",
  "Ardahan",
  "Iğdır",
  "Yalova",
  "Karabük",
  "Kilis",
  "Osmaniye",
  "Düzce"
];

},{}],872:[function(require,module,exports){
module["exports"] = [
  "Afganistan",
  "Almanya",
  "Amerika Birleşik Devletleri",
  "Amerikan Samoa",
  "Andorra",
  "Angola",
  "Anguilla, İngiltere",
  "Antigua ve Barbuda",
  "Arjantin",
  "Arnavutluk",
  "Aruba, Hollanda",
  "Avustralya",
  "Avusturya",
  "Azerbaycan",
  "Bahama Adaları",
  "Bahreyn",
  "Bangladeş",
  "Barbados",
  "Belçika",
  "Belize",
  "Benin",
  "Bermuda, İngiltere",
  "Beyaz Rusya",
  "Bhutan",
  "Birleşik Arap Emirlikleri",
  "Birmanya (Myanmar)",
  "Bolivya",
  "Bosna Hersek",
  "Botswana",
  "Brezilya",
  "Brunei",
  "Bulgaristan",
  "Burkina Faso",
  "Burundi",
  "Cape Verde",
  "Cayman Adaları, İngiltere",
  "Cebelitarık, İngiltere",
  "Cezayir",
  "Christmas Adası , Avusturalya",
  "Cibuti",
  "Çad",
  "Çek Cumhuriyeti",
  "Çin",
  "Danimarka",
  "Doğu Timor",
  "Dominik Cumhuriyeti",
  "Dominika",
  "Ekvator",
  "Ekvator Ginesi",
  "El Salvador",
  "Endonezya",
  "Eritre",
  "Ermenistan",
  "Estonya",
  "Etiyopya",
  "Fas",
  "Fiji",
  "Fildişi Sahili",
  "Filipinler",
  "Filistin",
  "Finlandiya",
  "Folkland Adaları, İngiltere",
  "Fransa",
  "Fransız Guyanası",
  "Fransız Güney Eyaletleri (Kerguelen Adaları)",
  "Fransız Polinezyası",
  "Gabon",
  "Galler",
  "Gambiya",
  "Gana",
  "Gine",
  "Gine-Bissau",
  "Grenada",
  "Grönland",
  "Guadalup, Fransa",
  "Guam, Amerika",
  "Guatemala",
  "Guyana",
  "Güney Afrika",
  "Güney Georgia ve Güney Sandviç Adaları, İngiltere",
  "Güney Kıbrıs Rum Yönetimi",
  "Güney Kore",
  "Gürcistan H",
  "Haiti",
  "Hırvatistan",
  "Hindistan",
  "Hollanda",
  "Hollanda Antilleri",
  "Honduras",
  "Irak",
  "İngiltere",
  "İran",
  "İrlanda",
  "İspanya",
  "İsrail",
  "İsveç",
  "İsviçre",
  "İtalya",
  "İzlanda",
  "Jamaika",
  "Japonya",
  "Johnston Atoll, Amerika",
  "K.K.T.C.",
  "Kamboçya",
  "Kamerun",
  "Kanada",
  "Kanarya Adaları",
  "Karadağ",
  "Katar",
  "Kazakistan",
  "Kenya",
  "Kırgızistan",
  "Kiribati",
  "Kolombiya",
  "Komorlar",
  "Kongo",
  "Kongo Demokratik Cumhuriyeti",
  "Kosova",
  "Kosta Rika",
  "Kuveyt",
  "Kuzey İrlanda",
  "Kuzey Kore",
  "Kuzey Maryana Adaları",
  "Küba",
  "Laos",
  "Lesotho",
  "Letonya",
  "Liberya",
  "Libya",
  "Liechtenstein",
  "Litvanya",
  "Lübnan",
  "Lüksemburg",
  "Macaristan",
  "Madagaskar",
  "Makau (Makao)",
  "Makedonya",
  "Malavi",
  "Maldiv Adaları",
  "Malezya",
  "Mali",
  "Malta",
  "Marşal Adaları",
  "Martinik, Fransa",
  "Mauritius",
  "Mayotte, Fransa",
  "Meksika",
  "Mısır",
  "Midway Adaları, Amerika",
  "Mikronezya",
  "Moğolistan",
  "Moldavya",
  "Monako",
  "Montserrat",
  "Moritanya",
  "Mozambik",
  "Namibia",
  "Nauru",
  "Nepal",
  "Nijer",
  "Nijerya",
  "Nikaragua",
  "Niue, Yeni Zelanda",
  "Norveç",
  "Orta Afrika Cumhuriyeti",
  "Özbekistan",
  "Pakistan",
  "Palau Adaları",
  "Palmyra Atoll, Amerika",
  "Panama",
  "Papua Yeni Gine",
  "Paraguay",
  "Peru",
  "Polonya",
  "Portekiz",
  "Porto Riko, Amerika",
  "Reunion, Fransa",
  "Romanya",
  "Ruanda",
  "Rusya Federasyonu",
  "Saint Helena, İngiltere",
  "Saint Martin, Fransa",
  "Saint Pierre ve Miquelon, Fransa",
  "Samoa",
  "San Marino",
  "Santa Kitts ve Nevis",
  "Santa Lucia",
  "Santa Vincent ve Grenadinler",
  "Sao Tome ve Principe",
  "Senegal",
  "Seyşeller",
  "Sırbistan",
  "Sierra Leone",
  "Singapur",
  "Slovakya",
  "Slovenya",
  "Solomon Adaları",
  "Somali",
  "Sri Lanka",
  "Sudan",
  "Surinam",
  "Suriye",
  "Suudi Arabistan",
  "Svalbard, Norveç",
  "Svaziland",
  "Şili",
  "Tacikistan",
  "Tanzanya",
  "Tayland",
  "Tayvan",
  "Togo",
  "Tonga",
  "Trinidad ve Tobago",
  "Tunus",
  "Turks ve Caicos Adaları, İngiltere",
  "Tuvalu",
  "Türkiye",
  "Türkmenistan",
  "Uganda",
  "Ukrayna",
  "Umman",
  "Uruguay",
  "Ürdün",
  "Vallis ve Futuna, Fransa",
  "Vanuatu",
  "Venezuela",
  "Vietnam",
  "Virgin Adaları, Amerika",
  "Virgin Adaları, İngiltere",
  "Wake Adaları, Amerika",
  "Yemen",
  "Yeni Kaledonya, Fransa",
  "Yeni Zelanda",
  "Yunanistan",
  "Zambiya",
  "Zimbabve"
];

},{}],873:[function(require,module,exports){
module["exports"] = [
  "Türkiye"
];

},{}],874:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city = require("./city");
address.street_root = require("./street_root");
address.country = require("./country");
address.postcode = require("./postcode");
address.default_country = require("./default_country");
address.building_number = require("./building_number");
address.street_name = require("./street_name");
address.street_address = require("./street_address");

},{"./building_number":870,"./city":871,"./country":872,"./default_country":873,"./postcode":875,"./street_address":876,"./street_name":877,"./street_root":878}],875:[function(require,module,exports){
arguments[4][327][0].apply(exports,arguments)
},{"dup":327}],876:[function(require,module,exports){
arguments[4][61][0].apply(exports,arguments)
},{"dup":61}],877:[function(require,module,exports){
arguments[4][62][0].apply(exports,arguments)
},{"dup":62}],878:[function(require,module,exports){
module["exports"] = [
  "Atatürk Bulvarı",
  "Alparslan Türkeş Bulvarı",
  "Ali Çetinkaya Caddesi",
  "Tevfik Fikret Caddesi",
  "Kocatepe Caddesi",
  "İsmet Paşa Caddesi",
  "30 Ağustos Caddesi",
  "İsmet Attila Caddesi",
  "Namık Kemal Caddesi",
  "Lütfi Karadirek Caddesi",
  "Sarıkaya Caddesi",
  "Yunus Emre Sokak",
  "Dar Sokak",
  "Fatih Sokak ",
  "Harman Yolu Sokak ",
  "Ergenekon Sokak  ",
  "Ülkü Sokak",
  "Sağlık Sokak",
  "Okul Sokak",
  "Harman Altı Sokak",
  "Kaldırım Sokak",
  "Mevlana Sokak",
  "Gül Sokak",
  "Sıran Söğüt Sokak",
  "Güven Yaka Sokak",
  "Saygılı Sokak",
  "Menekşe Sokak",
  "Dağınık Evler Sokak",
  "Sevgi Sokak",
  "Afyon Kaya Sokak",
  "Oğuzhan Sokak",
  "İbn-i Sina Sokak",
  "Okul Sokak",
  "Bahçe Sokak",
  "Köypınar Sokak",
  "Kekeçoğlu Sokak",
  "Barış Sokak",
  "Bayır Sokak",
  "Kerimoğlu Sokak",
  "Nalbant Sokak",
  "Bandak Sokak"
];

},{}],879:[function(require,module,exports){
module["exports"] = [
  "+90-53#-###-##-##",
  "+90-54#-###-##-##",
  "+90-55#-###-##-##",
  "+90-50#-###-##-##"
];

},{}],880:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"./formats":879,"dup":65}],881:[function(require,module,exports){
var tr = {};
module['exports'] = tr;
tr.title = "Turkish";
tr.address = require("./address");
tr.internet = require("./internet");
tr.lorem = require("./lorem");
tr.phone_number = require("./phone_number");
tr.cell_phone = require("./cell_phone");
tr.name = require("./name");

},{"./address":874,"./cell_phone":880,"./internet":883,"./lorem":884,"./name":887,"./phone_number":893}],882:[function(require,module,exports){
module["exports"] = [
  "com.tr",
  "com",
  "biz",
  "info",
  "name",
  "gov.tr"
];

},{}],883:[function(require,module,exports){
arguments[4][124][0].apply(exports,arguments)
},{"./domain_suffix":882,"dup":124}],884:[function(require,module,exports){
arguments[4][74][0].apply(exports,arguments)
},{"./words":885,"dup":74}],885:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"dup":75}],886:[function(require,module,exports){
module["exports"] = [
  "Aba",
  "Abak",
  "Abaka",
  "Abakan",
  "Abakay",
  "Abar",
  "Abay",
  "Abı",
  "Abılay",
  "Abluç",
  "Abşar",
  "Açığ",
  "Açık",
  "Açuk",
  "Adalan",
  "Adaldı",
  "Adalmış",
  "Adar",
  "Adaş",
  "Adberilgen",
  "Adıgüzel",
  "Adık",
  "Adıkutlu",
  "Adıkutlutaş",
  "Adlı",
  "Adlıbeğ",
  "Adraman",
  "Adsız",
  "Afşar",
  "Afşın",
  "Ağabay",
  "Ağakağan",
  "Ağalak",
  "Ağlamış",
  "Ak",
  "Akaş",
  "Akata",
  "Akbaş",
  "Akbay",
  "Akboğa",
  "Akbörü",
  "Akbudak",
  "Akbuğra",
  "Akbulak",
  "Akça",
  "Akçakoca",
  "Akçora",
  "Akdemir",
  "Akdoğan",
  "Akı",
  "Akıbudak",
  "Akım",
  "Akın",
  "Akınçı",
  "Akkun",
  "Akkunlu",
  "Akkurt",
  "Akkuş",
  "Akpıra",
  "Aksungur",
  "Aktan",
  "Al",
  "Ala",
  "Alaban",
  "Alabörü",
  "Aladağ",
  "Aladoğan",
  "Alakurt",
  "Alayunt",
  "Alayuntlu",
  "Aldemir",
  "Aldıgerey",
  "Aldoğan",
  "Algu",
  "Alımga",
  "Alka",
  "Alkabölük",
  "Alkaevli",
  "Alkan",
  "Alkaşı",
  "Alkış",
  "Alp",
  "Alpagut",
  "Alpamış",
  "Alparsbeğ",
  "Alparslan",
  "Alpata",
  "Alpay",
  "Alpaya",
  "Alpaykağan",
  "Alpbamsı",
  "Alpbilge",
  "Alpdirek",
  "Alpdoğan",
  "Alper",
  "Alperen",
  "Alpertunga",
  "Alpgerey",
  "Alpış",
  "Alpilig",
  "Alpkara",
  "Alpkutlu",
  "Alpkülük",
  "Alpşalçı",
  "Alptegin",
  "Alptuğrul",
  "Alptunga",
  "Alpturan",
  "Alptutuk",
  "Alpuluğ",
  "Alpurungu",
  "Alpurungututuk",
  "Alpyörük",
  "Altan",
  "Altankağan",
  "Altankan",
  "Altay",
  "Altın",
  "Altınkağan",
  "Altınkan",
  "Altınoba",
  "Altıntamgan",
  "Altıntamgantarkan",
  "Altıntarkan",
  "Altıntay",
  "Altmışkara",
  "Altuga",
  "Amaç",
  "Amrak",
  "Amul",
  "Ançuk",
  "Andarıman",
  "Anıl",
  "Ant",
  "Apa",
  "Apak",
  "Apatarkan",
  "Aprançur",
  "Araboğa",
  "Arademir",
  "Aral",
  "Arbay",
  "Arbuz",
  "Arçuk",
  "Ardıç",
  "Argıl",
  "Argu",
  "Argun",
  "Arı",
  "Arıboğa",
  "Arık",
  "Arıkağan",
  "Arıkdoruk",
  "Arınç",
  "Arkın",
  "Arkış",
  "Armağan",
  "Arnaç",
  "Arpat",
  "Arsal",
  "Arsıl",
  "Arslan",
  "Arslanargun",
  "Arslanbörü",
  "Arslansungur",
  "Arslantegin",
  "Arslanyabgu",
  "Arşun",
  "Artıınal",
  "Artuk",
  "Artukaç",
  "Artut",
  "Aruk",
  "Asartegin",
  "Asığ",
  "Asrı",
  "Asuğ",
  "Aşan",
  "Aşanboğa",
  "Aşantuğrul",
  "Aşantudun",
  "Aşıkbulmuş",
  "Aşkın",
  "Aştaloğul",
  "Aşuk",
  "Ataç",
  "Atakağan",
  "Atakan",
  "Atalan",
  "Ataldı",
  "Atalmış",
  "Ataman",
  "Atasagun",
  "Atasu",
  "Atberilgen",
  "Atıgay",
  "Atıkutlu",
  "Atıkutlutaş",
  "Atıla",
  "Atılgan",
  "Atım",
  "Atımer",
  "Atış",
  "Atlı",
  "Atlıbeğ",
  "Atlıkağan",
  "Atmaca",
  "Atsız",
  "Atunçu",
  "Avar",
  "Avluç",
  "Avşar",
  "Ay",
  "Ayaçı",
  "Ayas",
  "Ayaş",
  "Ayaz",
  "Aybalta",
  "Ayban",
  "Aybars",
  "Aybeğ",
  "Aydarkağan",
  "Aydemir",
  "Aydın",
  "Aydınalp",
  "Aydoğan",
  "Aydoğdu",
  "Aydoğmuş",
  "Aygırak",
  "Ayıtmış",
  "Ayız",
  "Ayızdağ",
  "Aykağan",
  "Aykan",
  "Aykurt",
  "Ayluç",
  "Ayluçtarkan",
  "Ayma",
  "Ayruk",
  "Aysılığ",
  "Aytak",
  "Ayyıldız",
  "Azak",
  "Azban",
  "Azgan",
  "Azganaz",
  "Azıl",
  "Babır",
  "Babur",
  "Baçara",
  "Baççayman",
  "Baçman",
  "Badabul",
  "Badruk",
  "Badur",
  "Bağa",
  "Bağaalp",
  "Bağaışbara",
  "Bağan",
  "Bağaşatulu",
  "Bağatarkan",
  "Bağatengrikağan",
  "Bağatur",
  "Bağaturçigşi",
  "Bağaturgerey",
  "Bağaturipi",
  "Bağatursepi",
  "Bağış",
  "Bağtaş",
  "Bakağul",
  "Bakır",
  "Bakırsokum",
  "Baksı",
  "Bakşı",
  "Balaban",
  "Balaka",
  "Balakatay",
  "Balamır",
  "Balçar",
  "Baldu",
  "Balkık",
  "Balta",
  "Baltacı",
  "Baltar",
  "Baltır",
  "Baltur",
  "Bamsı",
  "Bangu",
  "Barak",
  "Baraktöre",
  "Baran",
  "Barbeğ",
  "Barboğa",
  "Barbol",
  "Barbulsun",
  "Barça",
  "Barçadoğdu",
  "Barçadoğmuş",
  "Barçadurdu",
  "Barçadurmuş",
  "Barçan",
  "Barçatoyun",
  "Bardıbay",
  "Bargan",
  "Barımtay",
  "Barın",
  "Barkan",
  "Barkdoğdu",
  "Barkdoğmuş",
  "Barkdurdu",
  "Barkdurmuş",
  "Barkın",
  "Barlas",
  "Barlıbay",
  "Barmaklak",
  "Barmaklı",
  "Barman",
  "Bars",
  "Barsbeğ",
  "Barsboğa",
  "Barsgan",
  "Barskan",
  "Barsurungu",
  "Bartu",
  "Basademir",
  "Basan",
  "Basanyalavaç",
  "Basar",
  "Basat",
  "Baskın",
  "Basmıl",
  "Bastı",
  "Bastuğrul",
  "Basu",
  "Basut",
  "Başak",
  "Başbuğ",
  "Başçı",
  "Başgan",
  "Başkırt",
  "Başkurt",
  "Baştar",
  "Batrak",
  "Batu",
  "Batuk",
  "Batur",
  "Baturalp",
  "Bay",
  "Bayançar",
  "Bayankağan",
  "Bayat",
  "Bayazıt",
  "Baybars",
  "Baybayık",
  "Baybiçen",
  "Bayboğa",
  "Baybora",
  "Baybüre",
  "Baydar",
  "Baydemir",
  "Baydur",
  "Bayık",
  "Bayınçur",
  "Bayındır",
  "Baykal",
  "Baykara",
  "Baykoca",
  "Baykuzu",
  "Baymünke",
  "Bayna",
  "Baynal",
  "Baypüre",
  "Bayrı",
  "Bayraç",
  "Bayrak",
  "Bayram",
  "Bayrın",
  "Bayruk",
  "Baysungur",
  "Baytara",
  "Baytaş",
  "Bayunçur",
  "Bayur",
  "Bayurku",
  "Bayutmuş",
  "Bayuttu",
  "Bazır",
  "Beçeapa",
  "Beçkem",
  "Beğ",
  "Beğarslan",
  "Beğbars",
  "Beğbilgeçikşin",
  "Beğboğa",
  "Beğçur",
  "Beğdemir",
  "Beğdilli",
  "Beğdurmuş",
  "Beğkulu",
  "Beğtaş",
  "Beğtegin",
  "Beğtüzün",
  "Begi",
  "Begil",
  "Begine",
  "Begitutuk",
  "Beglen",
  "Begni",
  "Bek",
  "Bekazıl",
  "Bekbekeç",
  "Bekeç",
  "Bekeçarslan",
  "Bekeçarslantegin",
  "Bekeçtegin",
  "Beker",
  "Beklemiş",
  "Bektür",
  "Belçir",
  "Belek",
  "Belgi",
  "Belgüc",
  "Beltir",
  "Bengi",
  "Bengü",
  "Benlidemir",
  "Berdibeğ",
  "Berendey",
  "Bergü",
  "Berginsenge",
  "Berk",
  "Berke",
  "Berkiş",
  "Berkyaruk",
  "Bermek",
  "Besentegin",
  "Betemir",
  "Beyizçi",
  "Beyrek",
  "Beyrem",
  "Bıçkı",
  "Bıçkıcı",
  "Bıdın",
  "Bıtaybıkı",
  "Bıtrı",
  "Biçek",
  "Bilge",
  "Bilgebayunçur",
  "Bilgebeğ",
  "Bilgeçikşin",
  "Bilgeışbara",
  "Bilgeışbaratamgan",
  "Bilgekağan",
  "Bilgekan",
  "Bilgekutluk",
  "Bilgekülüçur",
  "Bilgetaçam",
  "Bilgetamgacı",
  "Bilgetardu",
  "Bilgetegin",
  "Bilgetonyukuk",
  "Bilgez",
  "Bilgiç",
  "Bilgin",
  "Bilig",
  "Biligköngülsengün",
  "Bilik",
  "Binbeği",
  "Bindir",
  "Boğa",
  "Boğaç",
  "Boğaçuk",
  "Boldaz",
  "Bolmuş",
  "Bolsun",
  "Bolun",
  "Boncuk",
  "Bongul",
  "Bongulboğa",
  "Bora",
  "Boran",
  "Borçul",
  "Borlukçu",
  "Bornak",
  "Boyan",
  "Boyankulu",
  "Boylabağa",
  "Boylabağatarkan",
  "Boylakutlutarkan",
  "Bozan",
  "Bozbörü",
  "Bozdoğan",
  "Bozkurt",
  "Bozkuş",
  "Bozok",
  "Bögde",
  "Böge",
  "Bögü",
  "Bökde",
  "Bökde",
  "Böke",
  "Bölen",
  "Bölükbaşı",
  "Bönek",
  "Bönge",
  "Börü",
  "Börübars",
  "Börüsengün",
  "Börteçine",
  "Buçan",
  "Buçur",
  "Budağ",
  "Budak",
  "Budunlu",
  "Buğday",
  "Buğra",
  "Buğrakarakağan",
  "Bukak",
  "Bukaktutuk",
  "Bulaçapan",
  "Bulak",
  "Bulan",
  "Buldur",
  "Bulgak",
  "Bulmaz",
  "Bulmuş",
  "Buluç",
  "Buluğ",
  "Buluk",
  "Buluş",
  "Bulut",
  "Bumın",
  "Bunsuz",
  "Burçak",
  "Burguçan",
  "Burkay",
  "Burslan",
  "Burulday",
  "Burulgu",
  "Burunduk",
  "Buşulgan",
  "Butak",
  "Butuk",
  "Buyan",
  "Buyançuk",
  "Buyandemir",
  "Buyankara",
  "Buyat",
  "Buyraç",
  "Buyruç",
  "Buyruk",
  "Buzaç",
  "Buzaçtutuk",
  "Büdüs",
  "Büdüstudun",
  "Bügü",
  "Bügdüz",
  "Bügdüzemen",
  "Büge",
  "Büğübilge",
  "Bükdüz",
  "Büke",
  "Bükebuyraç",
  "Bükebuyruç",
  "Bükey",
  "Büktegin",
  "Büküşboğa",
  "Bümen",
  "Bünül",
  "Büre",
  "Bürgüt",
  "Bürkek",
  "Bürküt",
  "Bürlük",
  "Cebe",
  "Ceyhun",
  "Cılasun",
  "Çaba",
  "Çabdar",
  "Çablı",
  "Çabuş",
  "Çağan",
  "Çağatay",
  "Çağlar",
  "Çağlayan",
  "Çağrı",
  "Çağrıbeğ",
  "Çağrıtegin",
  "Çağru",
  "Çalapkulu",
  "Çankız",
  "Çemen",
  "Çemgen",
  "Çeykün",
  "Çıngır",
  "Çiçek",
  "Çiçem",
  "Çiğdem",
  "Çilenti",
  "Çimen",
  "Çobulmak",
  "Çocukbörü",
  "Çokramayul",
  "Çolman",
  "Çolpan",
  "Çölü",
  "Damla",
  "Deniz",
  "Dilek",
  "Diri",
  "Dizik",
  "Duru",
  "Dururbunsuz",
  "Duygu",
  "Ebin",
  "Ebkızı",
  "Ebren",
  "Edil",
  "Ediz",
  "Egemen",
  "Eğrim",
  "Ekeç",
  "Ekim",
  "Ekin",
  "Elkin",
  "Elti",
  "Engin",
  "Erdem",
  "Erdeni",
  "Erdeniözük",
  "Erdenikatun",
  "Erentüz",
  "Ergene",
  "Ergenekatun",
  "Erinç",
  "Erke",
  "Ermen",
  "Erten",
  "Ertenözük",
  "Esen",
  "Esenbike",
  "Eser",
  "Esin",
  "Etil",
  "Evin",
  "Eyiz",
  "Gelin",
  "Gelincik",
  "Gökbörü",
  "Gökçe",
  "Gökçegöl",
  "Gökçen",
  "Gökçiçek",
  "Gökşin",
  "Gönül",
  "Görün",
  "Gözde",
  "Gülegen",
  "Gülemen",
  "Güler",
  "Gülümser",
  "Gümüş",
  "Gün",
  "Günay",
  "Günçiçek",
  "Gündoğdu",
  "Gündoğmuş",
  "Güneş",
  "Günyaruk",
  "Gürbüz",
  "Güvercin",
  "Güzey",
  "Işığ",
  "Işık",
  "Işıl",
  "Işılay",
  "Ila",
  "Ilaçın",
  "Ilgın",
  "Inanç",
  "Irmak",
  "Isığ",
  "Isık",
  "Iyık",
  "Iyıktağ",
  "İdil",
  "İkeme",
  "İkiçitoyun",
  "İlbilge",
  "İldike",
  "İlgegü",
  "İmrem",
  "İnci",
  "İnç",
  "İrinç",
  "İrinçköl",
  "İrtiş",
  "İtil",
  "Kancı",
  "Kançı",
  "Kapgar",
  "Karaca",
  "Karaça",
  "Karak",
  "Kargılaç",
  "Karlıgaç",
  "Katun",
  "Katunkız",
  "Kayacık",
  "Kayaçık",
  "Kayça",
  "Kaynak",
  "Kazanç",
  "Kazkatun",
  "Kekik",
  "Keklik",
  "Kepez",
  "Kesme",
  "Keyken",
  "Kezlik",
  "Kımız",
  "Kımızın",
  "Kımızalma",
  "Kımızalmıla",
  "Kırçiçek",
  "Kırgavul",
  "Kırlangıç",
  "Kıvanç",
  "Kıvılcım",
  "Kızdurmuş",
  "Kızılalma"
];

},{}],887:[function(require,module,exports){
arguments[4][126][0].apply(exports,arguments)
},{"./first_name":886,"./last_name":888,"./name":889,"./prefix":890,"dup":126}],888:[function(require,module,exports){
module["exports"] = [
  "Abacı",
  "Abadan",
  "Aclan",
  "Adal",
  "Adan",
  "Adıvar",
  "Akal",
  "Akan",
  "Akar ",
  "Akay",
  "Akaydın",
  "Akbulut",
  "Akgül",
  "Akışık",
  "Akman",
  "Akyürek",
  "Akyüz",
  "Akşit",
  "Alnıaçık",
  "Alpuğan",
  "Alyanak",
  "Arıcan",
  "Arslanoğlu",
  "Atakol",
  "Atan",
  "Avan",
  "Ayaydın",
  "Aybar",
  "Aydan",
  "Aykaç",
  "Ayverdi",
  "Ağaoğlu",
  "Aşıkoğlu",
  "Babacan",
  "Babaoğlu",
  "Bademci",
  "Bakırcıoğlu",
  "Balaban",
  "Balcı",
  "Barbarosoğlu",
  "Baturalp",
  "Baykam",
  "Başoğlu",
  "Berberoğlu",
  "Beşerler",
  "Beşok",
  "Biçer",
  "Bolatlı",
  "Dalkıran",
  "Dağdaş",
  "Dağlaroğlu",
  "Demirbaş",
  "Demirel",
  "Denkel",
  "Dizdar ",
  "Doğan ",
  "Durak ",
  "Durmaz",
  "Duygulu",
  "Düşenkalkar",
  "Egeli",
  "Ekici",
  "Ekşioğlu",
  "Eliçin",
  "Elmastaşoğlu",
  "Elçiboğa",
  "Erbay",
  "Erberk",
  "Erbulak",
  "Erdoğan",
  "Erez",
  "Erginsoy",
  "Erkekli",
  "Eronat",
  "Ertepınar",
  "Ertürk",
  "Erçetin",
  "Evliyaoğlu",
  "Gönültaş",
  "Gümüşpala",
  "Günday",
  "Gürmen",
  "Hakyemez",
  "Hamzaoğlu",
  "Ilıcalı",
  "Kahveci",
  "Kaplangı",
  "Karabulut",
  "Karaböcek",
  "Karadaş",
  "Karaduman",
  "Karaer",
  "Kasapoğlu",
  "Kavaklıoğlu",
  "Kaya ",
  "Keseroğlu",
  "Keçeci",
  "Kılıççı",
  "Kıraç ",
  "Kocabıyık",
  "Korol",
  "Koyuncu",
  "Koç",
  "Koçoğlu",
  "Koçyiğit",
  "Kuday",
  "Kulaksızoğlu",
  "Kumcuoğlu",
  "Kunt",
  "Kunter",
  "Kurutluoğlu",
  "Kutlay",
  "Kuzucu",
  "Körmükçü",
  "Köybaşı",
  "Köylüoğlu",
  "Küçükler",
  "Limoncuoğlu",
  "Mayhoş",
  "Menemencioğlu",
  "Mertoğlu",
  "Nalbantoğlu",
  "Nebioğlu",
  "Numanoğlu",
  "Okumuş",
  "Okur",
  "Oraloğlu",
  "Orbay",
  "Ozansoy",
  "Paksüt",
  "Pekkan",
  "Pektemek",
  "Polat",
  "Poyrazoğlu",
  "Poçan",
  "Sadıklar",
  "Samancı",
  "Sandalcı",
  "Sarıoğlu",
  "Saygıner",
  "Sepetçi",
  "Sezek",
  "Sinanoğlu",
  "Solmaz",
  "Sözeri",
  "Süleymanoğlu",
  "Tahincioğlu",
  "Tanrıkulu",
  "Tazegül",
  "Taşlı",
  "Taşçı",
  "Tekand",
  "Tekelioğlu",
  "Tokatlıoğlu",
  "Tokgöz",
  "Topaloğlu",
  "Topçuoğlu",
  "Toraman",
  "Tunaboylu",
  "Tunçeri",
  "Tuğlu",
  "Tuğluk",
  "Türkdoğan",
  "Türkyılmaz",
  "Tütüncü",
  "Tüzün",
  "Uca",
  "Uluhan",
  "Velioğlu",
  "Yalçın",
  "Yazıcı",
  "Yetkiner",
  "Yeşilkaya",
  "Yıldırım ",
  "Yıldızoğlu",
  "Yılmazer",
  "Yorulmaz",
  "Çamdalı",
  "Çapanoğlu",
  "Çatalbaş",
  "Çağıran",
  "Çetin",
  "Çetiner",
  "Çevik",
  "Çörekçi",
  "Önür",
  "Örge",
  "Öymen",
  "Özberk",
  "Özbey",
  "Özbir",
  "Özdenak",
  "Özdoğan",
  "Özgörkey",
  "Özkara",
  "Özkök ",
  "Öztonga",
  "Öztuna"
];

},{}],889:[function(require,module,exports){
arguments[4][486][0].apply(exports,arguments)
},{"dup":486}],890:[function(require,module,exports){
module["exports"] = [
  "Bay",
  "Bayan",
  "Dr.",
  "Prof. Dr."
];

},{}],891:[function(require,module,exports){
module["exports"] = [
  "392",
  "510",
  "512",
  "522",
  "562",
  "564",
  "592",
  "594",
  "800",
  "811",
  "822",
  "850",
  "888",
  "898",
  "900",
  "322",
  "416",
  "272",
  "472",
  "382",
  "358",
  "312",
  "242",
  "478",
  "466",
  "256",
  "266",
  "378",
  "488",
  "458",
  "228",
  "426",
  "434",
  "374",
  "248",
  "224",
  "286",
  "376",
  "364",
  "258",
  "412",
  "380",
  "284",
  "424",
  "446",
  "442",
  "222",
  "342",
  "454",
  "456",
  "438",
  "326",
  "476",
  "246",
  "216",
  "212",
  "232",
  "344",
  "370",
  "338",
  "474",
  "366",
  "352",
  "318",
  "288",
  "386",
  "348",
  "262",
  "332",
  "274",
  "422",
  "236",
  "482",
  "324",
  "252",
  "436",
  "384",
  "388",
  "452",
  "328",
  "464",
  "264",
  "362",
  "484",
  "368",
  "346",
  "414",
  "486",
  "282",
  "356",
  "462",
  "428",
  "276",
  "432",
  "226",
  "354",
  "372"
];

},{}],892:[function(require,module,exports){
module["exports"] = [
  "+90-###-###-##-##",
  "+90-###-###-#-###"
];

},{}],893:[function(require,module,exports){
var phone_number = {};
module['exports'] = phone_number;
phone_number.area_code = require("./area_code");
phone_number.formats = require("./formats");

},{"./area_code":891,"./formats":892}],894:[function(require,module,exports){
arguments[4][784][0].apply(exports,arguments)
},{"dup":784}],895:[function(require,module,exports){
module["exports"] = [
  "#{city_name}",
  "#{city_prefix} #{Name.male_first_name}"
];

},{}],896:[function(require,module,exports){
module["exports"] = [
  "Алчевськ",
  "Артемівськ",
  "Бердичів",
  "Бердянськ",
  "Біла Церква",
  "Бровари",
  "Вінниця",
  "Горлівка",
  "Дніпродзержинськ",
  "Дніпропетровськ",
  "Донецьк",
  "Євпаторія",
  "Єнакієве",
  "Житомир",
  "Запоріжжя",
  "Івано-Франківськ",
  "Ізмаїл",
  "Кам’янець-Подільський",
  "Керч",
  "Київ",
  "Кіровоград",
  "Конотоп",
  "Краматорськ",
  "Красний Луч",
  "Кременчук",
  "Кривий Ріг",
  "Лисичанськ",
  "Луганськ",
  "Луцьк",
  "Львів",
  "Макіївка",
  "Маріуполь",
  "Мелітополь",
  "Миколаїв",
  "Мукачеве",
  "Нікополь",
  "Одеса",
  "Олександрія",
  "Павлоград",
  "Полтава",
  "Рівне",
  "Севастополь",
  "Сєвєродонецьк",
  "Сімферополь",
  "Слов’янськ",
  "Суми",
  "Тернопіль",
  "Ужгород",
  "Умань",
  "Харків",
  "Херсон",
  "Хмельницький",
  "Черкаси",
  "Чернівці",
  "Чернігів",
  "Шостка",
  "Ялта"
];

},{}],897:[function(require,module,exports){
module["exports"] = [
  "Південний",
  "Північний",
  "Східний",
  "Західний"
];

},{}],898:[function(require,module,exports){
module["exports"] = [
  "град"
];

},{}],899:[function(require,module,exports){
module["exports"] = [
  "Австралія",
  "Австрія",
  "Азербайджан",
  "Албанія",
  "Алжир",
  "Ангола",
  "Андорра",
  "Антигуа і Барбуда",
  "Аргентина",
  "Афганістан",
  "Багамські Острови",
  "Бангладеш",
  "Барбадос",
  "Бахрейн",
  "Беліз",
  "Бельгія",
  "Бенін",
  "Білорусь",
  "Болгарія",
  "Болівія",
  "Боснія і Герцеговина",
  "Ботсвана",
  "Бразилія",
  "Бруней",
  "Буркіна-Фасо",
  "Бурунді",
  "Бутан",
  "В’єтнам",
  "Вануату",
  "Ватикан",
  "Велика Британія",
  "Венесуела",
  "Вірменія",
  "Габон",
  "Гаїті",
  "Гайана",
  "Гамбія",
  "Гана",
  "Гватемала",
  "Гвінея",
  "Гвінея-Бісау",
  "Гондурас",
  "Гренада",
  "Греція",
  "Грузія",
  "Данія",
  "Демократична Республіка Конго",
  "Джибуті",
  "Домініка",
  "Домініканська Республіка",
  "Еквадор",
  "Екваторіальна Гвінея",
  "Еритрея",
  "Естонія",
  "Ефіопія",
  "Єгипет",
  "Ємен",
  "Замбія",
  "Зімбабве",
  "Ізраїль",
  "Індія",
  "Індонезія",
  "Ірак",
  "Іран",
  "Ірландія",
  "Ісландія",
  "Іспанія",
  "Італія",
  "Йорданія",
  "Кабо-Верде",
  "Казахстан",
  "Камбоджа",
  "Камерун",
  "Канада",
  "Катар",
  "Кенія",
  "Киргизстан",
  "Китай",
  "Кіпр",
  "Кірибаті",
  "Колумбія",
  "Коморські Острови",
  "Конго",
  "Коста-Рика",
  "Кот-д’Івуар",
  "Куба",
  "Кувейт",
  "Лаос",
  "Латвія",
  "Лесото",
  "Литва",
  "Ліберія",
  "Ліван",
  "Лівія",
  "Ліхтенштейн",
  "Люксембург",
  "Маврикій",
  "Мавританія",
  "Мадаґаскар",
  "Македонія",
  "Малаві",
  "Малайзія",
  "Малі",
  "Мальдіви",
  "Мальта",
  "Марокко",
  "Маршаллові Острови",
  "Мексика",
  "Мозамбік",
  "Молдова",
  "Монако",
  "Монголія",
  "Намібія",
  "Науру",
  "Непал",
  "Нігер",
  "Нігерія",
  "Нідерланди",
  "Нікарагуа",
  "Німеччина",
  "Нова Зеландія",
  "Норвегія",
  "Об’єднані Арабські Емірати",
  "Оман",
  "Пакистан",
  "Палау",
  "Панама",
  "Папуа-Нова Гвінея",
  "Парагвай",
  "Перу",
  "Південна Корея",
  "Південний Судан",
  "Південно-Африканська Республіка",
  "Північна Корея",
  "Польща",
  "Португалія",
  "Російська Федерація",
  "Руанда",
  "Румунія",
  "Сальвадор",
  "Самоа",
  "Сан-Марино",
  "Сан-Томе і Принсіпі",
  "Саудівська Аравія",
  "Свазіленд",
  "Сейшельські Острови",
  "Сенеґал",
  "Сент-Вінсент і Гренадини",
  "Сент-Кітс і Невіс",
  "Сент-Люсія",
  "Сербія",
  "Сирія",
  "Сінгапур",
  "Словаччина",
  "Словенія",
  "Соломонові Острови",
  "Сомалі",
  "Судан",
  "Суринам",
  "Східний Тимор",
  "США",
  "Сьєрра-Леоне",
  "Таджикистан",
  "Таїланд",
  "Танзанія",
  "Того",
  "Тонга",
  "Тринідад і Тобаго",
  "Тувалу",
  "Туніс",
  "Туреччина",
  "Туркменістан",
  "Уганда",
  "Угорщина",
  "Узбекистан",
  "Україна",
  "Уругвай",
  "Федеративні Штати Мікронезії",
  "Фіджі",
  "Філіппіни",
  "Фінляндія",
  "Франція",
  "Хорватія",
  "Центральноафриканська Республіка",
  "Чад",
  "Чехія",
  "Чилі",
  "Чорногорія",
  "Швейцарія",
  "Швеція",
  "Шрі-Ланка",
  "Ямайка",
  "Японія"
];

},{}],900:[function(require,module,exports){
module["exports"] = [
  "Україна"
];

},{}],901:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.country = require("./country");
address.building_number = require("./building_number");
address.street_prefix = require("./street_prefix");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.street_title = require("./street_title");
address.city_name = require("./city_name");
address.city = require("./city");
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":894,"./city":895,"./city_name":896,"./city_prefix":897,"./city_suffix":898,"./country":899,"./default_country":900,"./postcode":902,"./secondary_address":903,"./state":904,"./street_address":905,"./street_name":906,"./street_prefix":907,"./street_suffix":908,"./street_title":909}],902:[function(require,module,exports){
arguments[4][327][0].apply(exports,arguments)
},{"dup":327}],903:[function(require,module,exports){
arguments[4][751][0].apply(exports,arguments)
},{"dup":751}],904:[function(require,module,exports){
module["exports"] = [
  "АР Крим",
  "Вінницька область",
  "Волинська область",
  "Дніпропетровська область",
  "Донецька область",
  "Житомирська область",
  "Закарпатська область",
  "Запорізька область",
  "Івано-Франківська область",
  "Київська область",
  "Кіровоградська область",
  "Луганська область",
  "Львівська область",
  "Миколаївська область",
  "Одеська область",
  "Полтавська область",
  "Рівненська область",
  "Сумська область",
  "Тернопільська область",
  "Харківська область",
  "Херсонська область",
  "Хмельницька область",
  "Черкаська область",
  "Чернівецька область",
  "Чернігівська область",
  "Київ",
  "Севастополь"
];

},{}],905:[function(require,module,exports){
arguments[4][753][0].apply(exports,arguments)
},{"dup":753}],906:[function(require,module,exports){
module["exports"] = [
  "#{street_prefix} #{Address.street_title}",
  "#{Address.street_title} #{street_suffix}"
];

},{}],907:[function(require,module,exports){
module["exports"] = [
  "вул.",
  "вулиця",
  "пр.",
  "проспект",
  "пл.",
  "площа",
  "пров.",
  "провулок"
];

},{}],908:[function(require,module,exports){
module["exports"] = [
  "майдан"
];

},{}],909:[function(require,module,exports){
module["exports"] = [
  "Зелена",
  "Молодіжна",
  "Городоцька",
  "Стрийська",
  "Вузька",
  "Нижанківського",
  "Староміська",
  "Ліста",
  "Вічева",
  "Брюховичів",
  "Винників",
  "Рудного",
  "Коліївщини"
];

},{}],910:[function(require,module,exports){
arguments[4][475][0].apply(exports,arguments)
},{"./name":911,"./prefix":912,"./suffix":913,"dup":475}],911:[function(require,module,exports){
arguments[4][762][0].apply(exports,arguments)
},{"dup":762}],912:[function(require,module,exports){
module["exports"] = [
  "ТОВ",
  "ПАТ",
  "ПрАТ",
  "ТДВ",
  "КТ",
  "ПТ",
  "ДП",
  "ФОП"
];

},{}],913:[function(require,module,exports){
module["exports"] = [
  "Постач",
  "Торг",
  "Пром",
  "Трейд",
  "Збут"
];

},{}],914:[function(require,module,exports){
var uk = {};
module['exports'] = uk;
uk.title = "Ukrainian";
uk.address = require("./address");
uk.company = require("./company");
uk.internet = require("./internet");
uk.name = require("./name");
uk.phone_number = require("./phone_number");

},{"./address":901,"./company":910,"./internet":917,"./name":921,"./phone_number":930}],915:[function(require,module,exports){
module["exports"] = [
  "cherkassy.ua",
  "cherkasy.ua",
  "ck.ua",
  "cn.ua",
  "com.ua",
  "crimea.ua",
  "cv.ua",
  "dn.ua",
  "dnepropetrovsk.ua",
  "dnipropetrovsk.ua",
  "donetsk.ua",
  "dp.ua",
  "if.ua",
  "in.ua",
  "ivano-frankivsk.ua",
  "kh.ua",
  "kharkiv.ua",
  "kharkov.ua",
  "kherson.ua",
  "khmelnitskiy.ua",
  "kiev.ua",
  "kirovograd.ua",
  "km.ua",
  "kr.ua",
  "ks.ua",
  "lg.ua",
  "lt.ua",
  "lugansk.ua",
  "lutsk.ua",
  "lutsk.net",
  "lviv.ua",
  "mk.ua",
  "net.ua",
  "nikolaev.ua",
  "od.ua",
  "odessa.ua",
  "org.ua",
  "pl.ua",
  "pl.ua",
  "poltava.ua",
  "rovno.ua",
  "rv.ua",
  "sebastopol.ua",
  "sm.ua",
  "sumy.ua",
  "te.ua",
  "ternopil.ua",
  "ua",
  "uz.ua",
  "uzhgorod.ua",
  "vinnica.ua",
  "vn.ua",
  "volyn.net",
  "volyn.ua",
  "yalta.ua",
  "zaporizhzhe.ua",
  "zhitomir.ua",
  "zp.ua",
  "zt.ua",
  "укр"
];

},{}],916:[function(require,module,exports){
module["exports"] = [
  "ukr.net",
  "ex.ua",
  "e-mail.ua",
  "i.ua",
  "meta.ua",
  "yandex.ua",
  "gmail.com"
];

},{}],917:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./domain_suffix":915,"./free_email":916,"dup":73}],918:[function(require,module,exports){
module["exports"] = [
  "Аврелія",
  "Аврора",
  "Агапія",
  "Агата",
  "Агафія",
  "Агнеса",
  "Агнія",
  "Агрипина",
  "Ада",
  "Аделаїда",
  "Аделіна",
  "Адріана",
  "Азалія",
  "Алевтина",
  "Аліна",
  "Алла",
  "Альбіна",
  "Альвіна",
  "Анастасія",
  "Анастасія",
  "Анатолія",
  "Ангеліна",
  "Анжела",
  "Анна",
  "Антонида",
  "Антоніна",
  "Антонія",
  "Анфіса",
  "Аполлінарія",
  "Аполлонія",
  "Аркадія",
  "Артемія",
  "Афанасія",
  "Білослава",
  "Біляна",
  "Благовіста",
  "Богдана",
  "Богуслава",
  "Божена",
  "Болеслава",
  "Борислава",
  "Броніслава",
  "В’ячеслава",
  "Валентина",
  "Валерія",
  "Варвара",
  "Василина",
  "Вікторія",
  "Вілена",
  "Віленіна",
  "Віліна",
  "Віола",
  "Віолетта",
  "Віра",
  "Віргінія",
  "Віта",
  "Віталіна",
  "Влада",
  "Владислава",
  "Власта",
  "Всеслава",
  "Галина",
  "Ганна",
  "Гелена",
  "Далеслава",
  "Дана",
  "Дарина",
  "Дарислава",
  "Діана",
  "Діяна",
  "Добринка",
  "Добромила",
  "Добромира",
  "Добромисла",
  "Доброслава",
  "Долеслава",
  "Доляна",
  "Жанна",
  "Жозефіна",
  "Забава",
  "Звенислава",
  "Зінаїда",
  "Злата",
  "Зореслава",
  "Зорина",
  "Зоряна",
  "Зоя",
  "Іванна",
  "Ілона",
  "Інна",
  "Іннеса",
  "Ірина",
  "Ірма",
  "Калина",
  "Каріна",
  "Катерина",
  "Квітка",
  "Квітослава",
  "Клавдія",
  "Крентта",
  "Ксенія",
  "Купава",
  "Лада",
  "Лариса",
  "Леся",
  "Ликера",
  "Лідія",
  "Лілія",
  "Любава",
  "Любислава",
  "Любов",
  "Любомила",
  "Любомира",
  "Люборада",
  "Любослава",
  "Людмила",
  "Людомила",
  "Майя",
  "Мальва",
  "Мар’яна",
  "Марина",
  "Марічка",
  "Марія",
  "Марта",
  "Меланія",
  "Мечислава",
  "Милодара",
  "Милослава",
  "Мирослава",
  "Мілана",
  "Мокрина",
  "Мотря",
  "Мстислава",
  "Надія",
  "Наталія",
  "Неля",
  "Немира",
  "Ніна",
  "Огняна",
  "Оксана",
  "Олександра",
  "Олена",
  "Олеся",
  "Ольга",
  "Ореста",
  "Орина",
  "Орислава",
  "Орися",
  "Оріяна",
  "Павліна",
  "Палажка",
  "Пелагея",
  "Пелагія",
  "Поліна",
  "Поляна",
  "Потішана",
  "Радміла",
  "Радослава",
  "Раїна",
  "Раїса",
  "Роксолана",
  "Ромена",
  "Ростислава",
  "Руслана",
  "Світлана",
  "Святослава",
  "Слава",
  "Сміяна",
  "Сніжана",
  "Соломія",
  "Соня",
  "Софія",
  "Станислава",
  "Сюзана",
  "Таїсія",
  "Тамара",
  "Тетяна",
  "Устина",
  "Фаїна",
  "Февронія",
  "Федора",
  "Феодосія",
  "Харитина",
  "Христина",
  "Христя",
  "Юліанна",
  "Юлія",
  "Юстина",
  "Юхима",
  "Юхимія",
  "Яна",
  "Ярина",
  "Ярослава"
];

},{}],919:[function(require,module,exports){
module["exports"] = [
  "Андрухович",
  "Бабух",
  "Балабан",
  "Балабуха",
  "Балакун",
  "Балицька",
  "Бамбула",
  "Бандера",
  "Барановська",
  "Бачей",
  "Башук",
  "Бердник",
  "Білич",
  "Бондаренко",
  "Борецька",
  "Боровська",
  "Борочко",
  "Боярчук",
  "Брицька",
  "Бурмило",
  "Бутько",
  "Василишина",
  "Васильківська",
  "Вергун",
  "Вередун",
  "Верещук",
  "Витребенько",
  "Вітряк",
  "Волощук",
  "Гайдук",
  "Гайова",
  "Гайчук",
  "Галаєнко",
  "Галатей",
  "Галаціон",
  "Гаман",
  "Гамула",
  "Ганич",
  "Гарай",
  "Гарун",
  "Гладківська",
  "Гладух",
  "Глинська",
  "Гнатишина",
  "Гойко",
  "Головець",
  "Горбач",
  "Гордійчук",
  "Горова",
  "Городоцька",
  "Гречко",
  "Григоришина",
  "Гриневецька",
  "Гриневська",
  "Гришко",
  "Громико",
  "Данилишина",
  "Данилко",
  "Демків",
  "Демчишина",
  "Дзюб’як",
  "Дзюба",
  "Дідух",
  "Дмитришина",
  "Дмитрук",
  "Довгалевська",
  "Дурдинець",
  "Євенко",
  "Євпак",
  "Ємець",
  "Єрмак",
  "Забіла",
  "Зварич",
  "Зінкевич",
  "Зленко",
  "Іванишина",
  "Калач",
  "Кандиба",
  "Карпух",
  "Кивач",
  "Коваленко",
  "Ковальська",
  "Коломієць",
  "Коман",
  "Компанієць",
  "Кононець",
  "Кордун",
  "Корецька",
  "Корнїйчук",
  "Коров’як",
  "Коцюбинська",
  "Кулинич",
  "Кульчицька",
  "Лагойда",
  "Лазірко",
  "Ланова",
  "Латан",
  "Латанська",
  "Лахман",
  "Левадовська",
  "Ликович",
  "Линдик",
  "Ліхно",
  "Лобачевська",
  "Ломова",
  "Лугова",
  "Луцька",
  "Луцьків",
  "Лученко",
  "Лучко",
  "Люта",
  "Лящук",
  "Магера",
  "Мазайло",
  "Мазило",
  "Мазун",
  "Майборода",
  "Майстренко",
  "Маковецька",
  "Малкович",
  "Мамій",
  "Маринич",
  "Марієвська",
  "Марків",
  "Махно",
  "Миклашевська",
  "Миклухо",
  "Милославська",
  "Михайлюк",
  "Міняйло",
  "Могилевська",
  "Москаль",
  "Москалюк",
  "Мотрієнко",
  "Негода",
  "Ногачевська",
  "Опенько",
  "Осадко",
  "Павленко",
  "Павлишина",
  "Павлів",
  "Пагутяк",
  "Паламарчук",
  "Палій",
  "Паращук",
  "Пасічник",
  "Пендик",
  "Петик",
  "Петлюра",
  "Петренко",
  "Петрина",
  "Петришина",
  "Петрів",
  "Плаксій",
  "Погиба",
  "Поліщук",
  "Пономарів",
  "Поривай",
  "Поривайло",
  "Потебенько",
  "Потоцька",
  "Пригода",
  "Приймак",
  "Притула",
  "Прядун",
  "Розпутня",
  "Романишина",
  "Ромей",
  "Роменець",
  "Ромочко",
  "Савицька",
  "Саєнко",
  "Свидригайло",
  "Семеночко",
  "Семещук",
  "Сердюк",
  "Силецька",
  "Сідлецька",
  "Сідляк",
  "Сірко",
  "Скиба",
  "Скоропадська",
  "Слободян",
  "Сосюра",
  "Сплюха",
  "Спотикач",
  "Степанець",
  "Стигайло",
  "Сторожук",
  "Сторчак",
  "Стоян",
  "Сучак",
  "Сушко",
  "Тарасюк",
  "Тиндарей",
  "Ткаченко",
  "Третяк",
  "Троян",
  "Трублаєвська",
  "Трясило",
  "Трясун",
  "Уманець",
  "Унич",
  "Усич",
  "Федоришина",
  "Цушко",
  "Червоній",
  "Шамрило",
  "Шевченко",
  "Шестак",
  "Шиндарей",
  "Шиян",
  "Шкараба",
  "Шудрик",
  "Шумило",
  "Шупик",
  "Шухевич",
  "Щербак",
  "Юрчишина",
  "Юхно",
  "Ющик",
  "Ющук",
  "Яворівська",
  "Ялова",
  "Ялюк",
  "Янюк",
  "Ярмак",
  "Яцишина",
  "Яцьків",
  "Ящук"
];

},{}],920:[function(require,module,exports){
module["exports"] = [
  "Адамівна",
  "Азарівна",
  "Алевтинівна",
  "Альбертівна",
  "Анастасівна",
  "Анатоліївна",
  "Андріївна",
  "Антонівна",
  "Аркадіївна",
  "Арсенівна",
  "Арсеніївна",
  "Артемівна",
  "Архипівна",
  "Аскольдівна",
  "Афанасіївна",
  "Білославівна",
  "Богданівна",
  "Божемирівна",
  "Боженівна",
  "Болеславівна",
  "Боримирівна",
  "Борисівна",
  "Бориславівна",
  "Братиславівна",
  "В’ячеславівна",
  "Вадимівна",
  "Валентинівна",
  "Валеріївна",
  "Василівна",
  "Вікторівна",
  "Віталіївна",
  "Владиславівна",
  "Володимирівна",
  "Всеволодівна",
  "Всеславівна",
  "Гаврилівна",
  "Гарасимівна",
  "Георгіївна",
  "Гнатівна",
  "Гордіївна",
  "Григоріївна",
  "Данилівна",
  "Даромирівна",
  "Денисівна",
  "Дмитрівна",
  "Добромирівна",
  "Доброславівна",
  "Євгенівна",
  "Захарівна",
  "Захаріївна",
  "Збориславівна",
  "Звенимирівна",
  "Звениславівна",
  "Зеновіївна",
  "Зиновіївна",
  "Златомирівна",
  "Зореславівна",
  "Іванівна",
  "Ігорівна",
  "Ізяславівна",
  "Корнеліївна",
  "Корнилівна",
  "Корніївна",
  "Костянтинівна",
  "Лаврентіївна",
  "Любомирівна",
  "Макарівна",
  "Максимівна",
  "Марківна",
  "Маркіянівна",
  "Матвіївна",
  "Мечиславівна",
  "Микитівна",
  "Миколаївна",
  "Миронівна",
  "Мирославівна",
  "Михайлівна",
  "Мстиславівна",
  "Назарівна",
  "Назаріївна",
  "Натанівна",
  "Немирівна",
  "Несторівна",
  "Олегівна",
  "Олександрівна",
  "Олексіївна",
  "Олельківна",
  "Омелянівна",
  "Орестівна",
  "Орхипівна",
  "Остапівна",
  "Охрімівна",
  "Павлівна",
  "Панасівна",
  "Пантелеймонівна",
  "Петрівна",
  "Пилипівна",
  "Радимирівна",
  "Радимівна",
  "Родіонівна",
  "Романівна",
  "Ростиславівна",
  "Русланівна",
  "Святославівна",
  "Сергіївна",
  "Славутівна",
  "Станіславівна",
  "Степанівна",
  "Стефаніївна",
  "Тарасівна",
  "Тимофіївна",
  "Тихонівна",
  "Устимівна",
  "Юріївна",
  "Юхимівна",
  "Ярославівна"
];

},{}],921:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.male_first_name = require("./male_first_name");
name.male_middle_name = require("./male_middle_name");
name.male_last_name = require("./male_last_name");
name.female_first_name = require("./female_first_name");
name.female_middle_name = require("./female_middle_name");
name.female_last_name = require("./female_last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.title = require("./title");
name.name = require("./name");

},{"./female_first_name":918,"./female_last_name":919,"./female_middle_name":920,"./male_first_name":922,"./male_last_name":923,"./male_middle_name":924,"./name":925,"./prefix":926,"./suffix":927,"./title":928}],922:[function(require,module,exports){
module["exports"] = [
  "Августин",
  "Аврелій",
  "Адам",
  "Адріян",
  "Азарій",
  "Алевтин",
  "Альберт",
  "Анастас",
  "Анастасій",
  "Анатолій",
  "Андрій",
  "Антін",
  "Антон",
  "Антоній",
  "Аркадій",
  "Арсен",
  "Арсеній",
  "Артем",
  "Архип",
  "Аскольд",
  "Афанасій",
  "Біломир",
  "Білослав",
  "Богдан",
  "Божемир",
  "Божен",
  "Болеслав",
  "Боримир",
  "Боримисл",
  "Борис",
  "Борислав",
  "Братимир",
  "Братислав",
  "Братомил",
  "Братослав",
  "Брячислав",
  "Будимир",
  "Буйтур",
  "Буревіст",
  "В’ячеслав",
  "Вадим",
  "Валентин",
  "Валерій",
  "Василь",
  "Велемир",
  "Віктор",
  "Віталій",
  "Влад",
  "Владислав",
  "Володимир",
  "Володислав",
  "Всевлад",
  "Всеволод",
  "Всеслав",
  "Гаврило",
  "Гарнослав",
  "Геннадій",
  "Георгій",
  "Герасим",
  "Гліб",
  "Гнат",
  "Гордій",
  "Горимир",
  "Горислав",
  "Градимир",
  "Григорій",
  "Далемир",
  "Данило",
  "Дарій",
  "Даромир",
  "Денис",
  "Дмитро",
  "Добромир",
  "Добромисл",
  "Доброслав",
  "Євген",
  "Єремій",
  "Захар",
  "Захарій",
  "Зборислав",
  "Звенигор",
  "Звенимир",
  "Звенислав",
  "Земислав",
  "Зеновій",
  "Зиновій",
  "Злат",
  "Златомир",
  "Зоремир",
  "Зореслав",
  "Зорян",
  "Іван",
  "Ігор",
  "Ізяслав",
  "Ілля",
  "Кий",
  "Корнелій",
  "Корнилій",
  "Корнило",
  "Корній",
  "Костянтин",
  "Кузьма",
  "Лаврентій",
  "Лаврін",
  "Лад",
  "Ладислав",
  "Ладо",
  "Ладомир",
  "Левко",
  "Листвич",
  "Лук’ян",
  "Любодар",
  "Любозар",
  "Любомир",
  "Макар",
  "Максим",
  "Мар’ян",
  "Маркіян",
  "Марко",
  "Матвій",
  "Мечислав",
  "Микита",
  "Микола",
  "Мирон",
  "Мирослав",
  "Михайло",
  "Мстислав",
  "Мусій",
  "Назар",
  "Назарій",
  "Натан",
  "Немир",
  "Нестор",
  "Олег",
  "Олександр",
  "Олексій",
  "Олелько",
  "Олесь",
  "Омелян",
  "Орест",
  "Орхип",
  "Остап",
  "Охрім",
  "Павло",
  "Панас",
  "Пантелеймон",
  "Петро",
  "Пилип",
  "Подолян",
  "Потап",
  "Радим",
  "Радимир",
  "Ратибор",
  "Ратимир",
  "Родіон",
  "Родослав",
  "Роксолан",
  "Роман",
  "Ростислав",
  "Руслан",
  "Святополк",
  "Святослав",
  "Семибор",
  "Сергій",
  "Синьоок",
  "Славолюб",
  "Славомир",
  "Славута",
  "Сніжан",
  "Сологуб",
  "Станіслав",
  "Степан",
  "Стефаній",
  "Стожар",
  "Тарас",
  "Тиміш",
  "Тимофій",
  "Тихон",
  "Тур",
  "Устим",
  "Хвалимир",
  "Хорив",
  "Чорнота",
  "Щастислав",
  "Щек",
  "Юліан",
  "Юрій",
  "Юхим",
  "Ян",
  "Ярема",
  "Яровид",
  "Яромил",
  "Яромир",
  "Ярополк",
  "Ярослав"
];

},{}],923:[function(require,module,exports){
module["exports"] = [
  "Андрухович",
  "Бабух",
  "Балабан",
  "Балабух",
  "Балакун",
  "Балицький",
  "Бамбула",
  "Бандера",
  "Барановський",
  "Бачей",
  "Башук",
  "Бердник",
  "Білич",
  "Бондаренко",
  "Борецький",
  "Боровський",
  "Борочко",
  "Боярчук",
  "Брицький",
  "Бурмило",
  "Бутько",
  "Василин",
  "Василишин",
  "Васильківський",
  "Вергун",
  "Вередун",
  "Верещук",
  "Витребенько",
  "Вітряк",
  "Волощук",
  "Гайдук",
  "Гайовий",
  "Гайчук",
  "Галаєнко",
  "Галатей",
  "Галаціон",
  "Гаман",
  "Гамула",
  "Ганич",
  "Гарай",
  "Гарун",
  "Гладківський",
  "Гладух",
  "Глинський",
  "Гнатишин",
  "Гойко",
  "Головець",
  "Горбач",
  "Гордійчук",
  "Горовий",
  "Городоцький",
  "Гречко",
  "Григоришин",
  "Гриневецький",
  "Гриневський",
  "Гришко",
  "Громико",
  "Данилишин",
  "Данилко",
  "Демків",
  "Демчишин",
  "Дзюб’як",
  "Дзюба",
  "Дідух",
  "Дмитришин",
  "Дмитрук",
  "Довгалевський",
  "Дурдинець",
  "Євенко",
  "Євпак",
  "Ємець",
  "Єрмак",
  "Забіла",
  "Зварич",
  "Зінкевич",
  "Зленко",
  "Іванишин",
  "Іванів",
  "Іванців",
  "Калач",
  "Кандиба",
  "Карпух",
  "Каськів",
  "Кивач",
  "Коваленко",
  "Ковальський",
  "Коломієць",
  "Коман",
  "Компанієць",
  "Кононець",
  "Кордун",
  "Корецький",
  "Корнїйчук",
  "Коров’як",
  "Коцюбинський",
  "Кулинич",
  "Кульчицький",
  "Лагойда",
  "Лазірко",
  "Лановий",
  "Латаний",
  "Латанський",
  "Лахман",
  "Левадовський",
  "Ликович",
  "Линдик",
  "Ліхно",
  "Лобачевський",
  "Ломовий",
  "Луговий",
  "Луцький",
  "Луцьків",
  "Лученко",
  "Лучко",
  "Лютий",
  "Лящук",
  "Магера",
  "Мазайло",
  "Мазило",
  "Мазун",
  "Майборода",
  "Майстренко",
  "Маковецький",
  "Малкович",
  "Мамій",
  "Маринич",
  "Марієвський",
  "Марків",
  "Махно",
  "Миклашевський",
  "Миклухо",
  "Милославський",
  "Михайлюк",
  "Міняйло",
  "Могилевський",
  "Москаль",
  "Москалюк",
  "Мотрієнко",
  "Негода",
  "Ногачевський",
  "Опенько",
  "Осадко",
  "Павленко",
  "Павлишин",
  "Павлів",
  "Пагутяк",
  "Паламарчук",
  "Палій",
  "Паращук",
  "Пасічник",
  "Пендик",
  "Петик",
  "Петлюра",
  "Петренко",
  "Петрин",
  "Петришин",
  "Петрів",
  "Плаксій",
  "Погиба",
  "Поліщук",
  "Пономарів",
  "Поривай",
  "Поривайло",
  "Потебенько",
  "Потоцький",
  "Пригода",
  "Приймак",
  "Притула",
  "Прядун",
  "Розпутній",
  "Романишин",
  "Романів",
  "Ромей",
  "Роменець",
  "Ромочко",
  "Савицький",
  "Саєнко",
  "Свидригайло",
  "Семеночко",
  "Семещук",
  "Сердюк",
  "Силецький",
  "Сідлецький",
  "Сідляк",
  "Сірко",
  "Скиба",
  "Скоропадський",
  "Слободян",
  "Сосюра",
  "Сплюх",
  "Спотикач",
  "Стахів",
  "Степанець",
  "Стецьків",
  "Стигайло",
  "Сторожук",
  "Сторчак",
  "Стоян",
  "Сучак",
  "Сушко",
  "Тарасюк",
  "Тиндарей",
  "Ткаченко",
  "Третяк",
  "Троян",
  "Трублаєвський",
  "Трясило",
  "Трясун",
  "Уманець",
  "Унич",
  "Усич",
  "Федоришин",
  "Хитрово",
  "Цимбалістий",
  "Цушко",
  "Червоній",
  "Шамрило",
  "Шевченко",
  "Шестак",
  "Шиндарей",
  "Шиян",
  "Шкараба",
  "Шудрик",
  "Шумило",
  "Шупик",
  "Шухевич",
  "Щербак",
  "Юрчишин",
  "Юхно",
  "Ющик",
  "Ющук",
  "Яворівський",
  "Яловий",
  "Ялюк",
  "Янюк",
  "Ярмак",
  "Яцишин",
  "Яцьків",
  "Ящук"
];

},{}],924:[function(require,module,exports){
module["exports"] = [
  "Адамович",
  "Азарович",
  "Алевтинович",
  "Альбертович",
  "Анастасович",
  "Анатолійович",
  "Андрійович",
  "Антонович",
  "Аркадійович",
  "Арсенійович",
  "Арсенович",
  "Артемович",
  "Архипович",
  "Аскольдович",
  "Афанасійович",
  "Білославович",
  "Богданович",
  "Божемирович",
  "Боженович",
  "Болеславович",
  "Боримирович",
  "Борисович",
  "Бориславович",
  "Братиславович",
  "В’ячеславович",
  "Вадимович",
  "Валентинович",
  "Валерійович",
  "Васильович",
  "Вікторович",
  "Віталійович",
  "Владиславович",
  "Володимирович",
  "Всеволодович",
  "Всеславович",
  "Гаврилович",
  "Герасимович",
  "Георгійович",
  "Гнатович",
  "Гордійович",
  "Григорійович",
  "Данилович",
  "Даромирович",
  "Денисович",
  "Дмитрович",
  "Добромирович",
  "Доброславович",
  "Євгенович",
  "Захарович",
  "Захарійович",
  "Збориславович",
  "Звенимирович",
  "Звениславович",
  "Зеновійович",
  "Зиновійович",
  "Златомирович",
  "Зореславович",
  "Іванович",
  "Ігорович",
  "Ізяславович",
  "Корнелійович",
  "Корнилович",
  "Корнійович",
  "Костянтинович",
  "Лаврентійович",
  "Любомирович",
  "Макарович",
  "Максимович",
  "Маркович",
  "Маркіянович",
  "Матвійович",
  "Мечиславович",
  "Микитович",
  "Миколайович",
  "Миронович",
  "Мирославович",
  "Михайлович",
  "Мстиславович",
  "Назарович",
  "Назарійович",
  "Натанович",
  "Немирович",
  "Несторович",
  "Олегович",
  "Олександрович",
  "Олексійович",
  "Олелькович",
  "Омелянович",
  "Орестович",
  "Орхипович",
  "Остапович",
  "Охрімович",
  "Павлович",
  "Панасович",
  "Пантелеймонович",
  "Петрович",
  "Пилипович",
  "Радимирович",
  "Радимович",
  "Родіонович",
  "Романович",
  "Ростиславович",
  "Русланович",
  "Святославович",
  "Сергійович",
  "Славутович",
  "Станіславович",
  "Степанович",
  "Стефанович",
  "Тарасович",
  "Тимофійович",
  "Тихонович",
  "Устимович",
  "Юрійович",
  "Юхимович",
  "Ярославович"
];

},{}],925:[function(require,module,exports){
arguments[4][779][0].apply(exports,arguments)
},{"dup":779}],926:[function(require,module,exports){
module["exports"] = [
  "Пан",
  "Пані"
];

},{}],927:[function(require,module,exports){
module["exports"] = [
  "проф.",
  "доц.",
  "докт. пед. наук",
  "докт. політ. наук",
  "докт. філол. наук",
  "докт. філос. наук",
  "докт. і. наук",
  "докт. юрид. наук",
  "докт. техн. наук",
  "докт. психол. наук",
  "канд. пед. наук",
  "канд. політ. наук",
  "канд. філол. наук",
  "канд. філос. наук",
  "канд. і. наук",
  "канд. юрид. наук",
  "канд. техн. наук",
  "канд. психол. наук"
];

},{}],928:[function(require,module,exports){
module["exports"] = {
  "descriptor": [
    "Головний",
    "Генеральний",
    "Провідний",
    "Національний",
    "Регіональний",
    "Обласний",
    "Районний",
    "Глобальний",
    "Міжнародний",
    "Центральний"
  ],
  "level": [
    "маркетинговий",
    "оптимізаційний",
    "страховий",
    "функціональний",
    "інтеграційний",
    "логістичний"
  ],
  "job": [
    "інженер",
    "агент",
    "адміністратор",
    "аналітик",
    "архітектор",
    "дизайнер",
    "керівник",
    "консультант",
    "координатор",
    "менеджер",
    "планувальник",
    "помічник",
    "розробник",
    "спеціаліст",
    "співробітник",
    "технік"
  ]
};

},{}],929:[function(require,module,exports){
module["exports"] = [
  "(044) ###-##-##",
  "(050) ###-##-##",
  "(063) ###-##-##",
  "(066) ###-##-##",
  "(073) ###-##-##",
  "(091) ###-##-##",
  "(092) ###-##-##",
  "(093) ###-##-##",
  "(094) ###-##-##",
  "(095) ###-##-##",
  "(096) ###-##-##",
  "(097) ###-##-##",
  "(098) ###-##-##",
  "(099) ###-##-##"
];

},{}],930:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":929,"dup":83}],931:[function(require,module,exports){
module["exports"] = [
  "#{city_root}"
];

},{}],932:[function(require,module,exports){
module["exports"] = [
  "Bắc Giang",
  "Bắc Kạn",
  "Bắc Ninh",
  "Cao Bằng",
  "Điện Biên",
  "Hà Giang",
  "Hà Nam",
  "Hà Tây",
  "Hải Dương",
  "TP Hải Phòng",
  "Hòa Bình",
  "Hưng Yên",
  "Lai Châu",
  "Lào Cai",
  "Lạng Sơn",
  "Nam Định",
  "Ninh Bình",
  "Phú Thọ",
  "Quảng Ninh",
  "Sơn La",
  "Thái Bình",
  "Thái Nguyên",
  "Tuyên Quang",
  "Vĩnh Phúc",
  "Yên Bái",
  "TP Đà Nẵng",
  "Bình Định",
  "Đắk Lắk",
  "Đắk Nông",
  "Gia Lai",
  "Hà Tĩnh",
  "Khánh Hòa",
  "Kon Tum",
  "Nghệ An",
  "Phú Yên",
  "Quảng Bình",
  "Quảng Nam",
  "Quảng Ngãi",
  "Quảng Trị",
  "Thanh Hóa",
  "Thừa Thiên Huế",
  "TP TP. Hồ Chí Minh",
  "An Giang",
  "Bà Rịa Vũng Tàu",
  "Bạc Liêu",
  "Bến Tre",
  "Bình Dương",
  "Bình Phước",
  "Bình Thuận",
  "Cà Mau",
  "TP Cần Thơ",
  "Đồng Nai",
  "Đồng Tháp",
  "Hậu Giang",
  "Kiên Giang",
  "Lâm Đồng",
  "Long An",
  "Ninh Thuận",
  "Sóc Trăng",
  "Tây Ninh",
  "Tiền Giang",
  "Trà Vinh",
  "Vĩnh Long"
];

},{}],933:[function(require,module,exports){
module["exports"] = [
  "Avon",
  "Bedfordshire",
  "Berkshire",
  "Borders",
  "Buckinghamshire",
  "Cambridgeshire",
  "Central",
  "Cheshire",
  "Cleveland",
  "Clwyd",
  "Cornwall",
  "County Antrim",
  "County Armagh",
  "County Down",
  "County Fermanagh",
  "County Londonderry",
  "County Tyrone",
  "Cumbria",
  "Derbyshire",
  "Devon",
  "Dorset",
  "Dumfries and Galloway",
  "Durham",
  "Dyfed",
  "East Sussex",
  "Essex",
  "Fife",
  "Gloucestershire",
  "Grampian",
  "Greater Manchester",
  "Gwent",
  "Gwynedd County",
  "Hampshire",
  "Herefordshire",
  "Hertfordshire",
  "Highlands and Islands",
  "Humberside",
  "Isle of Wight",
  "Kent",
  "Lancashire",
  "Leicestershire",
  "Lincolnshire",
  "Lothian",
  "Merseyside",
  "Mid Glamorgan",
  "Norfolk",
  "North Yorkshire",
  "Northamptonshire",
  "Northumberland",
  "Nottinghamshire",
  "Oxfordshire",
  "Powys",
  "Rutland",
  "Shropshire",
  "Somerset",
  "South Glamorgan",
  "South Yorkshire",
  "Staffordshire",
  "Strathclyde",
  "Suffolk",
  "Surrey",
  "Tayside",
  "Tyne and Wear",
  "Việt Nam",
  "Warwickshire",
  "West Glamorgan",
  "West Midlands",
  "West Sussex",
  "West Yorkshire",
  "Wiltshire",
  "Worcestershire"
];

},{}],934:[function(require,module,exports){
module["exports"] = [
  "Việt Nam"
];

},{}],935:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_root = require("./city_root");
address.city = require("./city");
address.county = require("./county");
address.default_country = require("./default_country");

},{"./city":931,"./city_root":932,"./county":933,"./default_country":934}],936:[function(require,module,exports){
arguments[4][256][0].apply(exports,arguments)
},{"dup":256}],937:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"./formats":936,"dup":65}],938:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.prefix = require("./prefix");
company.name = require("./name");

},{"./name":939,"./prefix":940}],939:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{Name.last_name}"
];

},{}],940:[function(require,module,exports){
module["exports"] = [
  "Công ty",
  "Cty TNHH",
  "Cty",
  "Cửa hàng",
  "Trung tâm",
  "Chi nhánh"
];

},{}],941:[function(require,module,exports){
var vi = {};
module['exports'] = vi;
vi.title = "Vietnamese";
vi.address = require("./address");
vi.internet = require("./internet");
vi.phone_number = require("./phone_number");
vi.cell_phone = require("./cell_phone");
vi.name = require("./name");
vi.company = require("./company");
vi.lorem = require("./lorem");

},{"./address":935,"./cell_phone":937,"./company":938,"./internet":943,"./lorem":944,"./name":947,"./phone_number":951}],942:[function(require,module,exports){
module["exports"] = [
  "com",
  "net",
  "info",
  "vn",
  "com.vn"
];

},{}],943:[function(require,module,exports){
arguments[4][124][0].apply(exports,arguments)
},{"./domain_suffix":942,"dup":124}],944:[function(require,module,exports){
arguments[4][74][0].apply(exports,arguments)
},{"./words":945,"dup":74}],945:[function(require,module,exports){
module["exports"] = [
  "đã",
  "đang",
  "ừ",
  "ờ",
  "á",
  "không",
  "biết",
  "gì",
  "hết",
  "đâu",
  "nha",
  "thế",
  "thì",
  "là",
  "đánh",
  "đá",
  "đập",
  "phá",
  "viết",
  "vẽ",
  "tô",
  "thuê",
  "mướn",
  "mượn",
  "mua",
  "một",
  "hai",
  "ba",
  "bốn",
  "năm",
  "sáu",
  "bảy",
  "tám",
  "chín",
  "mười",
  "thôi",
  "việc",
  "nghỉ",
  "làm",
  "nhà",
  "cửa",
  "xe",
  "đạp",
  "ác",
  "độc",
  "khoảng",
  "khoan",
  "thuyền",
  "tàu",
  "bè",
  "lầu",
  "xanh",
  "đỏ",
  "tím",
  "vàng",
  "kim",
  "chỉ",
  "khâu",
  "may",
  "vá",
  "em",
  "anh",
  "yêu",
  "thương",
  "thích",
  "con",
  "cái",
  "bàn",
  "ghế",
  "tủ",
  "quần",
  "áo",
  "nón",
  "dép",
  "giày",
  "lỗi",
  "được",
  "ghét",
  "giết",
  "chết",
  "hết",
  "tôi",
  "bạn",
  "tui",
  "trời",
  "trăng",
  "mây",
  "gió",
  "máy",
  "hàng",
  "hóa",
  "leo",
  "núi",
  "bơi",
  "biển",
  "chìm",
  "xuồng",
  "nước",
  "ngọt",
  "ruộng",
  "đồng",
  "quê",
  "hương"
];

},{}],946:[function(require,module,exports){
module["exports"] = [
  "Phạm",
  "Nguyễn",
  "Trần",
  "Lê",
  "Lý",
  "Hoàng",
  "Phan",
  "Vũ",
  "Tăng",
  "Đặng",
  "Bùi",
  "Đỗ",
  "Hồ",
  "Ngô",
  "Dương",
  "Đào",
  "Đoàn",
  "Vương",
  "Trịnh",
  "Đinh",
  "Lâm",
  "Phùng",
  "Mai",
  "Tô",
  "Trương",
  "Hà"
];

},{}],947:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.name = require("./name");

},{"./first_name":946,"./last_name":948,"./name":949}],948:[function(require,module,exports){
module["exports"] = [
  "Nam",
  "Trung",
  "Thanh",
  "Thị",
  "Văn",
  "Dương",
  "Tăng",
  "Quốc",
  "Như",
  "Phạm",
  "Nguyễn",
  "Trần",
  "Lê",
  "Lý",
  "Hoàng",
  "Phan",
  "Vũ",
  "Tăng",
  "Đặng",
  "Bùi",
  "Đỗ",
  "Hồ",
  "Ngô",
  "Dương",
  "Đào",
  "Đoàn",
  "Vương",
  "Trịnh",
  "Đinh",
  "Lâm",
  "Phùng",
  "Mai",
  "Tô",
  "Trương",
  "Hà",
  "Vinh",
  "Nhung",
  "Hòa",
  "Tiến",
  "Tâm",
  "Bửu",
  "Loan",
  "Hiền",
  "Hải",
  "Vân",
  "Kha",
  "Minh",
  "Nhân",
  "Triệu",
  "Tuân",
  "Hữu",
  "Đức",
  "Phú",
  "Khoa",
  "Thắgn",
  "Sơn",
  "Dung",
  "Tú",
  "Trinh",
  "Thảo",
  "Sa",
  "Kim",
  "Long",
  "Thi",
  "Cường",
  "Ngọc",
  "Sinh",
  "Khang",
  "Phong",
  "Thắm",
  "Thu",
  "Thủy",
  "Nhàn"
];

},{}],949:[function(require,module,exports){
module["exports"] = [
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name} #{last_name}"
];

},{}],950:[function(require,module,exports){
arguments[4][261][0].apply(exports,arguments)
},{"dup":261}],951:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":950,"dup":83}],952:[function(require,module,exports){
module["exports"] = [
  "#####",
  "####",
  "###",
  "##",
  "#"
];

},{}],953:[function(require,module,exports){
arguments[4][827][0].apply(exports,arguments)
},{"dup":827}],954:[function(require,module,exports){
module["exports"] = [
  "长",
  "上",
  "南",
  "西",
  "北",
  "诸",
  "宁",
  "珠",
  "武",
  "衡",
  "成",
  "福",
  "厦",
  "贵",
  "吉",
  "海",
  "太",
  "济",
  "安",
  "吉",
  "包"
];

},{}],955:[function(require,module,exports){
module["exports"] = [
  "沙市",
  "京市",
  "宁市",
  "安市",
  "乡县",
  "海市",
  "码市",
  "汉市",
  "阳市",
  "都市",
  "州市",
  "门市",
  "阳市",
  "口市",
  "原市",
  "南市",
  "徽市",
  "林市",
  "头市"
];

},{}],956:[function(require,module,exports){
module["exports"] = [
  "中国"
];

},{}],957:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":952,"./city":953,"./city_prefix":954,"./city_suffix":955,"./default_country":956,"./postcode":958,"./state":959,"./state_abbr":960,"./street_address":961,"./street_name":962,"./street_suffix":963}],958:[function(require,module,exports){
arguments[4][750][0].apply(exports,arguments)
},{"dup":750}],959:[function(require,module,exports){
module["exports"] = [
  "北京市",
  "上海市",
  "天津市",
  "重庆市",
  "黑龙江省",
  "吉林省",
  "辽宁省",
  "内蒙古",
  "河北省",
  "新疆",
  "甘肃省",
  "青海省",
  "陕西省",
  "宁夏",
  "河南省",
  "山东省",
  "山西省",
  "安徽省",
  "湖北省",
  "湖南省",
  "江苏省",
  "四川省",
  "贵州省",
  "云南省",
  "广西省",
  "西藏",
  "浙江省",
  "江西省",
  "广东省",
  "福建省",
  "台湾省",
  "海南省",
  "香港",
  "澳门"
];

},{}],960:[function(require,module,exports){
module["exports"] = [
  "京",
  "沪",
  "津",
  "渝",
  "黑",
  "吉",
  "辽",
  "蒙",
  "冀",
  "新",
  "甘",
  "青",
  "陕",
  "宁",
  "豫",
  "鲁",
  "晋",
  "皖",
  "鄂",
  "湘",
  "苏",
  "川",
  "黔",
  "滇",
  "桂",
  "藏",
  "浙",
  "赣",
  "粤",
  "闽",
  "台",
  "琼",
  "港",
  "澳"
];

},{}],961:[function(require,module,exports){
module["exports"] = [
  "#{street_name}#{building_number}号"
];

},{}],962:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name}#{street_suffix}"
];

},{}],963:[function(require,module,exports){
module["exports"] = [
  "巷",
  "街",
  "路",
  "桥",
  "侬",
  "旁",
  "中心",
  "栋"
];

},{}],964:[function(require,module,exports){
var zh_CN = {};
module['exports'] = zh_CN;
zh_CN.title = "Chinese";
zh_CN.address = require("./address");
zh_CN.name = require("./name");
zh_CN.phone_number = require("./phone_number");

},{"./address":957,"./name":966,"./phone_number":970}],965:[function(require,module,exports){
module["exports"] = [
  "王",
  "李",
  "张",
  "刘",
  "陈",
  "杨",
  "黄",
  "吴",
  "赵",
  "周",
  "徐",
  "孙",
  "马",
  "朱",
  "胡",
  "林",
  "郭",
  "何",
  "高",
  "罗",
  "郑",
  "梁",
  "谢",
  "宋",
  "唐",
  "许",
  "邓",
  "冯",
  "韩",
  "曹",
  "曾",
  "彭",
  "萧",
  "蔡",
  "潘",
  "田",
  "董",
  "袁",
  "于",
  "余",
  "叶",
  "蒋",
  "杜",
  "苏",
  "魏",
  "程",
  "吕",
  "丁",
  "沈",
  "任",
  "姚",
  "卢",
  "傅",
  "钟",
  "姜",
  "崔",
  "谭",
  "廖",
  "范",
  "汪",
  "陆",
  "金",
  "石",
  "戴",
  "贾",
  "韦",
  "夏",
  "邱",
  "方",
  "侯",
  "邹",
  "熊",
  "孟",
  "秦",
  "白",
  "江",
  "阎",
  "薛",
  "尹",
  "段",
  "雷",
  "黎",
  "史",
  "龙",
  "陶",
  "贺",
  "顾",
  "毛",
  "郝",
  "龚",
  "邵",
  "万",
  "钱",
  "严",
  "赖",
  "覃",
  "洪",
  "武",
  "莫",
  "孔"
];

},{}],966:[function(require,module,exports){
arguments[4][947][0].apply(exports,arguments)
},{"./first_name":965,"./last_name":967,"./name":968,"dup":947}],967:[function(require,module,exports){
module["exports"] = [
  "绍齐",
  "博文",
  "梓晨",
  "胤祥",
  "瑞霖",
  "明哲",
  "天翊",
  "凯瑞",
  "健雄",
  "耀杰",
  "潇然",
  "子涵",
  "越彬",
  "钰轩",
  "智辉",
  "致远",
  "俊驰",
  "雨泽",
  "烨磊",
  "晟睿",
  "文昊",
  "修洁",
  "黎昕",
  "远航",
  "旭尧",
  "鸿涛",
  "伟祺",
  "荣轩",
  "越泽",
  "浩宇",
  "瑾瑜",
  "皓轩",
  "擎苍",
  "擎宇",
  "志泽",
  "子轩",
  "睿渊",
  "弘文",
  "哲瀚",
  "雨泽",
  "楷瑞",
  "建辉",
  "晋鹏",
  "天磊",
  "绍辉",
  "泽洋",
  "鑫磊",
  "鹏煊",
  "昊强",
  "伟宸",
  "博超",
  "君浩",
  "子骞",
  "鹏涛",
  "炎彬",
  "鹤轩",
  "越彬",
  "风华",
  "靖琪",
  "明辉",
  "伟诚",
  "明轩",
  "健柏",
  "修杰",
  "志泽",
  "弘文",
  "峻熙",
  "嘉懿",
  "煜城",
  "懿轩",
  "烨伟",
  "苑博",
  "伟泽",
  "熠彤",
  "鸿煊",
  "博涛",
  "烨霖",
  "烨华",
  "煜祺",
  "智宸",
  "正豪",
  "昊然",
  "明杰",
  "立诚",
  "立轩",
  "立辉",
  "峻熙",
  "弘文",
  "熠彤",
  "鸿煊",
  "烨霖",
  "哲瀚",
  "鑫鹏",
  "昊天",
  "思聪",
  "展鹏",
  "笑愚",
  "志强",
  "炫明",
  "雪松",
  "思源",
  "智渊",
  "思淼",
  "晓啸",
  "天宇",
  "浩然",
  "文轩",
  "鹭洋",
  "振家",
  "乐驹",
  "晓博",
  "文博",
  "昊焱",
  "立果",
  "金鑫",
  "锦程",
  "嘉熙",
  "鹏飞",
  "子默",
  "思远",
  "浩轩",
  "语堂",
  "聪健",
  "明",
  "文",
  "果",
  "思",
  "鹏",
  "驰",
  "涛",
  "琪",
  "浩",
  "航",
  "彬"
];

},{}],968:[function(require,module,exports){
module["exports"] = [
  "#{first_name}#{last_name}"
];

},{}],969:[function(require,module,exports){
module["exports"] = [
  "###-########",
  "####-########",
  "###########"
];

},{}],970:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":969,"dup":83}],971:[function(require,module,exports){
arguments[4][412][0].apply(exports,arguments)
},{"dup":412}],972:[function(require,module,exports){
arguments[4][827][0].apply(exports,arguments)
},{"dup":827}],973:[function(require,module,exports){
module["exports"] = [
  "臺北",
  "新北",
  "桃園",
  "臺中",
  "臺南",
  "高雄",
  "基隆",
  "新竹",
  "嘉義",
  "苗栗",
  "彰化",
  "南投",
  "雲林",
  "屏東",
  "宜蘭",
  "花蓮",
  "臺東",
  "澎湖",
  "金門",
  "連江"
];

},{}],974:[function(require,module,exports){
module["exports"] = [
  "縣",
  "市"
];

},{}],975:[function(require,module,exports){
module["exports"] = [
  "Taiwan (R.O.C.)"
];

},{}],976:[function(require,module,exports){
arguments[4][957][0].apply(exports,arguments)
},{"./building_number":971,"./city":972,"./city_prefix":973,"./city_suffix":974,"./default_country":975,"./postcode":977,"./state":978,"./state_abbr":979,"./street_address":980,"./street_name":981,"./street_suffix":982,"dup":957}],977:[function(require,module,exports){
arguments[4][750][0].apply(exports,arguments)
},{"dup":750}],978:[function(require,module,exports){
module["exports"] = [
  "福建省",
  "台灣省"
];

},{}],979:[function(require,module,exports){
module["exports"] = [
  "北",
  "新北",
  "桃",
  "中",
  "南",
  "高",
  "基",
  "竹市",
  "嘉市",
  "竹縣",
  "苗",
  "彰",
  "投",
  "雲",
  "嘉縣",
  "宜",
  "花",
  "東",
  "澎",
  "金",
  "馬"
];

},{}],980:[function(require,module,exports){
module["exports"] = [
  "#{street_name}#{building_number}號"
];

},{}],981:[function(require,module,exports){
arguments[4][962][0].apply(exports,arguments)
},{"dup":962}],982:[function(require,module,exports){
module["exports"] = [
  "街",
  "路",
  "北路",
  "南路",
  "東路",
  "西路"
];

},{}],983:[function(require,module,exports){
var zh_TW = {};
module['exports'] = zh_TW;
zh_TW.title = "Chinese (Taiwan)";
zh_TW.address = require("./address");
zh_TW.name = require("./name");
zh_TW.phone_number = require("./phone_number");

},{"./address":976,"./name":985,"./phone_number":989}],984:[function(require,module,exports){
module["exports"] = [
  "王",
  "李",
  "張",
  "劉",
  "陳",
  "楊",
  "黃",
  "吳",
  "趙",
  "週",
  "徐",
  "孫",
  "馬",
  "朱",
  "胡",
  "林",
  "郭",
  "何",
  "高",
  "羅",
  "鄭",
  "梁",
  "謝",
  "宋",
  "唐",
  "許",
  "鄧",
  "馮",
  "韓",
  "曹",
  "曾",
  "彭",
  "蕭",
  "蔡",
  "潘",
  "田",
  "董",
  "袁",
  "於",
  "餘",
  "葉",
  "蔣",
  "杜",
  "蘇",
  "魏",
  "程",
  "呂",
  "丁",
  "沈",
  "任",
  "姚",
  "盧",
  "傅",
  "鐘",
  "姜",
  "崔",
  "譚",
  "廖",
  "範",
  "汪",
  "陸",
  "金",
  "石",
  "戴",
  "賈",
  "韋",
  "夏",
  "邱",
  "方",
  "侯",
  "鄒",
  "熊",
  "孟",
  "秦",
  "白",
  "江",
  "閻",
  "薛",
  "尹",
  "段",
  "雷",
  "黎",
  "史",
  "龍",
  "陶",
  "賀",
  "顧",
  "毛",
  "郝",
  "龔",
  "邵",
  "萬",
  "錢",
  "嚴",
  "賴",
  "覃",
  "洪",
  "武",
  "莫",
  "孔"
];

},{}],985:[function(require,module,exports){
arguments[4][947][0].apply(exports,arguments)
},{"./first_name":984,"./last_name":986,"./name":987,"dup":947}],986:[function(require,module,exports){
module["exports"] = [
  "紹齊",
  "博文",
  "梓晨",
  "胤祥",
  "瑞霖",
  "明哲",
  "天翊",
  "凱瑞",
  "健雄",
  "耀傑",
  "瀟然",
  "子涵",
  "越彬",
  "鈺軒",
  "智輝",
  "致遠",
  "俊馳",
  "雨澤",
  "燁磊",
  "晟睿",
  "文昊",
  "修潔",
  "黎昕",
  "遠航",
  "旭堯",
  "鴻濤",
  "偉祺",
  "榮軒",
  "越澤",
  "浩宇",
  "瑾瑜",
  "皓軒",
  "擎蒼",
  "擎宇",
  "志澤",
  "子軒",
  "睿淵",
  "弘文",
  "哲瀚",
  "雨澤",
  "楷瑞",
  "建輝",
  "晉鵬",
  "天磊",
  "紹輝",
  "澤洋",
  "鑫磊",
  "鵬煊",
  "昊強",
  "偉宸",
  "博超",
  "君浩",
  "子騫",
  "鵬濤",
  "炎彬",
  "鶴軒",
  "越彬",
  "風華",
  "靖琪",
  "明輝",
  "偉誠",
  "明軒",
  "健柏",
  "修傑",
  "志澤",
  "弘文",
  "峻熙",
  "嘉懿",
  "煜城",
  "懿軒",
  "燁偉",
  "苑博",
  "偉澤",
  "熠彤",
  "鴻煊",
  "博濤",
  "燁霖",
  "燁華",
  "煜祺",
  "智宸",
  "正豪",
  "昊然",
  "明杰",
  "立誠",
  "立軒",
  "立輝",
  "峻熙",
  "弘文",
  "熠彤",
  "鴻煊",
  "燁霖",
  "哲瀚",
  "鑫鵬",
  "昊天",
  "思聰",
  "展鵬",
  "笑愚",
  "志強",
  "炫明",
  "雪松",
  "思源",
  "智淵",
  "思淼",
  "曉嘯",
  "天宇",
  "浩然",
  "文軒",
  "鷺洋",
  "振家",
  "樂駒",
  "曉博",
  "文博",
  "昊焱",
  "立果",
  "金鑫",
  "錦程",
  "嘉熙",
  "鵬飛",
  "子默",
  "思遠",
  "浩軒",
  "語堂",
  "聰健"
];

},{}],987:[function(require,module,exports){
arguments[4][968][0].apply(exports,arguments)
},{"dup":968}],988:[function(require,module,exports){
module["exports"] = [
  "0#-#######",
  "02-########",
  "09##-######"
];

},{}],989:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./formats":988,"dup":83}],990:[function(require,module,exports){

/**
 *
 * @namespace faker.lorem
 */
var Lorem = function (faker) {
  var self = this;
  var Helpers = faker.helpers;

  /**
   * word
   *
   * @method faker.lorem.word
   * @param {number} num
   */
  self.word = function (num) {
    return faker.random.arrayElement(faker.definitions.lorem.words);
  };

  /**
   * generates a space separated list of words
   *
   * @method faker.lorem.words
   * @param {number} num number of words, defaults to 3
   */
  self.words = function (num) {
      if (typeof num == 'undefined') { num = 3; }
      var words = [];
      for (var i = 0; i < num; i++) {
        words.push(faker.lorem.word());
      }
      return words.join(' ');
  };

  /**
   * sentence
   *
   * @method faker.lorem.sentence
   * @param {number} wordCount defaults to a random number between 3 and 10
   * @param {number} range
   */
  self.sentence = function (wordCount, range) {
      if (typeof wordCount == 'undefined') { wordCount = faker.random.number({ min: 3, max: 10 }); }
      // if (typeof range == 'undefined') { range = 7; }

      // strange issue with the node_min_test failing for captialize, please fix and add faker.lorem.back
      //return  faker.lorem.words(wordCount + Helpers.randomNumber(range)).join(' ').capitalize();

      var sentence = faker.lorem.words(wordCount);
      return sentence.charAt(0).toUpperCase() + sentence.slice(1) + '.';
  };

  /**
   * sentences
   *
   * @method faker.lorem.sentences
   * @param {number} sentenceCount defautls to a random number between 2 and 6
   * @param {string} separator defaults to `' '`
   */
  self.sentences = function (sentenceCount, separator) {
      if (typeof sentenceCount === 'undefined') { sentenceCount = faker.random.number({ min: 2, max: 6 });}
      if (typeof separator == 'undefined') { separator = " "; }
      var sentences = [];
      for (sentenceCount; sentenceCount > 0; sentenceCount--) {
        sentences.push(faker.lorem.sentence());
      }
      return sentences.join(separator);
  };

  /**
   * paragraph
   *
   * @method faker.lorem.paragraph
   * @param {number} sentenceCount defaults to 3
   */
  self.paragraph = function (sentenceCount) {
      if (typeof sentenceCount == 'undefined') { sentenceCount = 3; }
      return faker.lorem.sentences(sentenceCount + faker.random.number(3));
  };

  /**
   * paragraphs
   *
   * @method faker.lorem.paragraphs
   * @param {number} paragraphCount defaults to 3
   * @param {string} separatora defaults to `'\n \r'`
   */
  self.paragraphs = function (paragraphCount, separator) {
    if (typeof separator === "undefined") {
      separator = "\n \r";
    }
    if (typeof paragraphCount == 'undefined') { paragraphCount = 3; }
    var paragraphs = [];
    for (paragraphCount; paragraphCount > 0; paragraphCount--) {
        paragraphs.push(faker.lorem.paragraph());
    }
    return paragraphs.join(separator);
  }

  /**
   * returns random text based on a random lorem method
   *
   * @method faker.lorem.text
   * @param {number} times
   */
  self.text = function loremText (times) {
    var loremMethods = ['lorem.word', 'lorem.words', 'lorem.sentence', 'lorem.sentences', 'lorem.paragraph', 'lorem.paragraphs', 'lorem.lines'];
    var randomLoremMethod = faker.random.arrayElement(loremMethods);
    return faker.fake('{{' + randomLoremMethod + '}}');
  };

  /**
   * returns lines of lorem separated by `'\n'`
   *
   * @method faker.lorem.lines
   * @param {number} lineCount defaults to a random number between 1 and 5
   */
  self.lines = function lines (lineCount) {
    if (typeof lineCount === 'undefined') { lineCount = faker.random.number({ min: 1, max: 5 });}
    return faker.lorem.sentences(lineCount, '\n')
  };

  return self;
};


module["exports"] = Lorem;

},{}],991:[function(require,module,exports){
/**
 *
 * @namespace faker.name
 */
function Name (faker) {

  /**
   * firstName
   *
   * @method firstName
   * @param {mixed} gender
   * @memberof faker.name
   */
  this.firstName = function (gender) {
    if (typeof faker.definitions.name.male_first_name !== "undefined" && typeof faker.definitions.name.female_first_name !== "undefined") {
      // some locale datasets ( like ru ) have first_name split by gender. since the name.first_name field does not exist in these datasets,
      // we must randomly pick a name from either gender array so faker.name.firstName will return the correct locale data ( and not fallback )
      if (typeof gender !== 'number') {
        gender = faker.random.number(1);
      }
      if (gender === 0) {
        return faker.random.arrayElement(faker.locales[faker.locale].name.male_first_name)
      } else {
        return faker.random.arrayElement(faker.locales[faker.locale].name.female_first_name);
      }
    }
    return faker.random.arrayElement(faker.definitions.name.first_name);
  };

  /**
   * lastName
   *
   * @method lastName
   * @param {mixed} gender
   * @memberof faker.name
   */
  this.lastName = function (gender) {
    if (typeof faker.definitions.name.male_last_name !== "undefined" && typeof faker.definitions.name.female_last_name !== "undefined") {
      // some locale datasets ( like ru ) have last_name split by gender. i have no idea how last names can have genders, but also i do not speak russian
      // see above comment of firstName method
      if (typeof gender !== 'number') {
        gender = faker.random.number(1);
      }
      if (gender === 0) {
        return faker.random.arrayElement(faker.locales[faker.locale].name.male_last_name);
      } else {
        return faker.random.arrayElement(faker.locales[faker.locale].name.female_last_name);
      }
    }
    return faker.random.arrayElement(faker.definitions.name.last_name);
  };

  /**
   * findName
   *
   * @method findName
   * @param {string} firstName
   * @param {string} lastName
   * @param {mixed} gender
   * @memberof faker.name
   */
  this.findName = function (firstName, lastName, gender) {
      var r = faker.random.number(8);
      var prefix, suffix;
      // in particular locales first and last names split by gender,
      // thus we keep consistency by passing 0 as male and 1 as female
      if (typeof gender !== 'number') {
        gender = faker.random.number(1);
      }
      firstName = firstName || faker.name.firstName(gender);
      lastName = lastName || faker.name.lastName(gender);
      switch (r) {
      case 0:
          prefix = faker.name.prefix(gender);
          if (prefix) {
              return prefix + " " + firstName + " " + lastName;
          }
      case 1:
          suffix = faker.name.suffix(gender);
          if (suffix) {
              return firstName + " " + lastName + " " + suffix;
          }
      }

      return firstName + " " + lastName;
  };

  /**
   * jobTitle
   *
   * @method jobTitle
   * @memberof faker.name
   */
  this.jobTitle = function () {
    return  faker.name.jobDescriptor() + " " +
      faker.name.jobArea() + " " +
      faker.name.jobType();
  };
  
  /**
   * prefix
   *
   * @method prefix
   * @param {mixed} gender
   * @memberof faker.name
   */
  this.prefix = function (gender) {
    if (typeof faker.definitions.name.male_prefix !== "undefined" && typeof faker.definitions.name.female_prefix !== "undefined") {
      if (typeof gender !== 'number') {
        gender = faker.random.number(1);
      }
      if (gender === 0) {
        return faker.random.arrayElement(faker.locales[faker.locale].name.male_prefix);
      } else {
        return faker.random.arrayElement(faker.locales[faker.locale].name.female_prefix);
      }
    }
    return faker.random.arrayElement(faker.definitions.name.prefix);
  };

  /**
   * suffix
   *
   * @method suffix
   * @memberof faker.name
   */
  this.suffix = function () {
      return faker.random.arrayElement(faker.definitions.name.suffix);
  };

  /**
   * title
   *
   * @method title
   * @memberof faker.name
   */
  this.title = function() {
      var descriptor  = faker.random.arrayElement(faker.definitions.name.title.descriptor),
          level       = faker.random.arrayElement(faker.definitions.name.title.level),
          job         = faker.random.arrayElement(faker.definitions.name.title.job);

      return descriptor + " " + level + " " + job;
  };

  /**
   * jobDescriptor
   *
   * @method jobDescriptor
   * @memberof faker.name
   */
  this.jobDescriptor = function () {
    return faker.random.arrayElement(faker.definitions.name.title.descriptor);
  };

  /**
   * jobArea
   *
   * @method jobArea
   * @memberof faker.name
   */
  this.jobArea = function () {
    return faker.random.arrayElement(faker.definitions.name.title.level);
  };

  /**
   * jobType
   *
   * @method jobType
   * @memberof faker.name
   */
  this.jobType = function () {
    return faker.random.arrayElement(faker.definitions.name.title.job);
  };

}

module['exports'] = Name;

},{}],992:[function(require,module,exports){
/**
 *
 * @namespace faker.phone
 */
var Phone = function (faker) {
  var self = this;

  /**
   * phoneNumber
   *
   * @method faker.phone.phoneNumber
   * @param {string} format
   */
  self.phoneNumber = function (format) {
      format = format || faker.phone.phoneFormats();
      return faker.helpers.replaceSymbolWithNumber(format);
  };

  // FIXME: this is strange passing in an array index.
  /**
   * phoneNumberFormat
   *
   * @method faker.phone.phoneFormatsArrayIndex
   * @param phoneFormatsArrayIndex
   */
  self.phoneNumberFormat = function (phoneFormatsArrayIndex) {
      phoneFormatsArrayIndex = phoneFormatsArrayIndex || 0;
      return faker.helpers.replaceSymbolWithNumber(faker.definitions.phone_number.formats[phoneFormatsArrayIndex]);
  };

  /**
   * phoneFormats
   *
   * @method faker.phone.phoneFormats
   */
  self.phoneFormats = function () {
    return faker.random.arrayElement(faker.definitions.phone_number.formats);
  };
  
  return self;

};

module['exports'] = Phone;
},{}],993:[function(require,module,exports){
var mersenne = require('../vendor/mersenne');

/**
 *
 * @namespace faker.random
 */
function Random (faker, seed) {
  // Use a user provided seed if it exists
  if (seed) {
    if (Array.isArray(seed) && seed.length) {
      mersenne.seed_array(seed);
    }
    else {
      mersenne.seed(seed);
    }
  }
  /**
   * returns a single random number based on a max number or range
   *
   * @method faker.random.number
   * @param {mixed} options
   */
  this.number = function (options) {

    if (typeof options === "number") {
      options = {
        max: options
      };
    }

    options = options || {};

    if (typeof options.min === "undefined") {
      options.min = 0;
    }

    if (typeof options.max === "undefined") {
      options.max = 99999;
    }
    if (typeof options.precision === "undefined") {
      options.precision = 1;
    }

    // Make the range inclusive of the max value
    var max = options.max;
    if (max >= 0) {
      max += options.precision;
    }

    var randomNumber = options.precision * Math.floor(
      mersenne.rand(max / options.precision, options.min / options.precision));

    return randomNumber;

  }

  /**
   * takes an array and returns a random element of the array
   *
   * @method faker.random.arrayElement
   * @param {array} array
   */
  this.arrayElement = function (array) {
      array = array || ["a", "b", "c"];
      var r = faker.random.number({ max: array.length - 1 });
      return array[r];
  }

  /**
   * takes an object and returns the randomly key or value
   *
   * @method faker.random.objectElement
   * @param {object} object
   * @param {mixed} field
   */
  this.objectElement = function (object, field) {
      object = object || { "foo": "bar", "too": "car" };
      var array = Object.keys(object);
      var key = faker.random.arrayElement(array);

      return field === "key" ? key : object[key];
  }

  /**
   * uuid
   *
   * @method faker.random.uuid
   */
  this.uuid = function () {
      var self = this;
      var RFC4122_TEMPLATE = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';
      var replacePlaceholders = function (placeholder) {
          var random = self.number({ min: 0, max: 15 });
          var value = placeholder == 'x' ? random : (random &0x3 | 0x8);
          return value.toString(16);
      };
      return RFC4122_TEMPLATE.replace(/[xy]/g, replacePlaceholders);
  }

  /**
   * boolean
   *
   * @method faker.random.boolean
   */
  this.boolean = function () {
      return !!faker.random.number(1)
  }

  // TODO: have ability to return specific type of word? As in: noun, adjective, verb, etc
  /**
   * word
   *
   * @method faker.random.word
   * @param {string} type
   */
  this.word = function randomWord (type) {

    var wordMethods = [
    'commerce.department',
    'commerce.productName',
    'commerce.productAdjective',
    'commerce.productMaterial',
    'commerce.product',
    'commerce.color',

    'company.catchPhraseAdjective',
    'company.catchPhraseDescriptor',
    'company.catchPhraseNoun',
    'company.bsAdjective',
    'company.bsBuzz',
    'company.bsNoun',
    'address.streetSuffix',
    'address.county',
    'address.country',
    'address.state',

    'finance.accountName',
    'finance.transactionType',
    'finance.currencyName',

    'hacker.noun',
    'hacker.verb',
    'hacker.adjective',
    'hacker.ingverb',
    'hacker.abbreviation',

    'name.jobDescriptor',
    'name.jobArea',
    'name.jobType'];

    // randomly pick from the many faker methods that can generate words
    var randomWordMethod = faker.random.arrayElement(wordMethods);
    return faker.fake('{{' + randomWordMethod + '}}');

  }

  /**
   * randomWords
   *
   * @method faker.random.words
   * @param {number} count defaults to a random value between 1 and 3
   */
  this.words = function randomWords (count) {
    var words = [];
    if (typeof count === "undefined") {
      count = faker.random.number({min:1, max: 3});
    }
    for (var i = 0; i<count; i++) {
      words.push(faker.random.word());
    }
    return words.join(' ');
  }

  /**
   * locale
   *
   * @method faker.random.image
   */
  this.image = function randomImage () {
    return faker.image.image();
  }

  /**
   * locale
   *
   * @method faker.random.locale
   */
  this.locale = function randomLocale () {
    return faker.random.arrayElement(Object.keys(faker.locales));
  };

  /**
   * alphaNumeric
   *
   * @method faker.random.alphaNumeric
   */
  this.alphaNumeric = function alphaNumeric() {
    return faker.random.arrayElement(["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"]);
  }

  return this;

}

module['exports'] = Random;

},{"../vendor/mersenne":995}],994:[function(require,module,exports){
// generates fake data for many computer systems properties

/**
 *
 * @namespace faker.system
 */
function System (faker) {

  /**
   * generates a file name with extension or optional type
   *
   * @method faker.system.fileName
   * @param {string} ext
   * @param {string} type
   */
  this.fileName = function (ext, type) {
    var str = faker.fake("{{random.words}}.{{system.fileExt}}");
    str = str.replace(/ /g, '_');
    str = str.replace(/\,/g, '_');
    str = str.replace(/\-/g, '_');
    str = str.replace(/\\/g, '_');
    str = str.toLowerCase();
    return str;
  };

  /**
   * commonFileName
   *
   * @method faker.system.commonFileName
   * @param {string} ext
   * @param {string} type
   */
  this.commonFileName = function (ext, type) {
    var str = faker.random.words() + "." + (ext || faker.system.commonFileExt());
    str = str.replace(/ /g, '_');
    str = str.replace(/\,/g, '_');
    str = str.replace(/\-/g, '_');
    str = str.replace(/\\/g, '_');
    str = str.toLowerCase();
    return str;
  };

  /**
   * mimeType
   *
   * @method faker.system.mimeType
   */
  this.mimeType = function () {
    return faker.random.arrayElement(Object.keys(faker.definitions.system.mimeTypes));
  };

  /**
   * returns a commonly used file type
   *
   * @method faker.system.commonFileType
   */
  this.commonFileType = function () {
    var types = ['video', 'audio', 'image', 'text', 'application'];
    return faker.random.arrayElement(types)
  };

  /**
   * returns a commonly used file extension based on optional type
   *
   * @method faker.system.commonFileExt
   * @param {string} type
   */
  this.commonFileExt = function (type) {
    var types = [
      'application/pdf',
      'audio/mpeg',
      'audio/wav',
      'image/png',
      'image/jpeg',
      'image/gif',
      'video/mp4',
      'video/mpeg',
      'text/html'
    ];
    return faker.system.fileExt(faker.random.arrayElement(types));
  };


  /**
   * returns any file type available as mime-type
   *
   * @method faker.system.fileType
   */
  this.fileType = function () {
    var types = [];
    var mimes = faker.definitions.system.mimeTypes;
    Object.keys(mimes).forEach(function(m){
      var parts = m.split('/');
      if (types.indexOf(parts[0]) === -1) {
        types.push(parts[0]);
      }
    });
    return faker.random.arrayElement(types);
  };

  /**
   * fileExt
   *
   * @method faker.system.fileExt
   * @param {string} mimeType
   */
  this.fileExt = function (mimeType) {
    var exts = [];
    var mimes = faker.definitions.system.mimeTypes;

    // get specific ext by mime-type
    if (typeof mimes[mimeType] === "object") {
      return faker.random.arrayElement(mimes[mimeType].extensions);
    }

    // reduce mime-types to those with file-extensions
    Object.keys(mimes).forEach(function(m){
      if (mimes[m].extensions instanceof Array) {
        mimes[m].extensions.forEach(function(ext){
          exts.push(ext)
        });
      }
    });
    return faker.random.arrayElement(exts);
  };

  /**
   * not yet implemented
   *
   * @method faker.system.directoryPath
   */
  this.directoryPath = function () {
    // TODO
  };

  /**
   * not yet implemented
   *
   * @method faker.system.filePath
   */
  this.filePath = function () {
    // TODO
  };

  /**
   * semver
   *
   * @method faker.system.semver
   */
  this.semver = function () {
      return [faker.random.number(9),
              faker.random.number(9),
              faker.random.number(9)].join('.');
  }

}

module['exports'] = System;
},{}],995:[function(require,module,exports){
// this program is a JavaScript version of Mersenne Twister, with concealment and encapsulation in class,
// an almost straight conversion from the original program, mt19937ar.c,
// translated by y. okada on July 17, 2006.
// and modified a little at july 20, 2006, but there are not any substantial differences.
// in this program, procedure descriptions and comments of original source code were not removed.
// lines commented with //c// were originally descriptions of c procedure. and a few following lines are appropriate JavaScript descriptions.
// lines commented with /* and */ are original comments.
// lines commented with // are additional comments in this JavaScript version.
// before using this version, create at least one instance of MersenneTwister19937 class, and initialize the each state, given below in c comments, of all the instances.
/*
   A C-program for MT19937, with initialization improved 2002/1/26.
   Coded by Takuji Nishimura and Makoto Matsumoto.

   Before using, initialize the state by using init_genrand(seed)
   or init_by_array(init_key, key_length).

   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,
   All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

     1. Redistributions of source code must retain the above copyright
        notice, this list of conditions and the following disclaimer.

     2. Redistributions in binary form must reproduce the above copyright
        notice, this list of conditions and the following disclaimer in the
        documentation and/or other materials provided with the distribution.

     3. The names of its contributors may not be used to endorse or promote
        products derived from this software without specific prior written
        permission.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


   Any feedback is very welcome.
   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html
   email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)
*/

function MersenneTwister19937()
{
	/* constants should be scoped inside the class */
	var N, M, MATRIX_A, UPPER_MASK, LOWER_MASK;
	/* Period parameters */
	//c//#define N 624
	//c//#define M 397
	//c//#define MATRIX_A 0x9908b0dfUL   /* constant vector a */
	//c//#define UPPER_MASK 0x80000000UL /* most significant w-r bits */
	//c//#define LOWER_MASK 0x7fffffffUL /* least significant r bits */
	N = 624;
	M = 397;
	MATRIX_A = 0x9908b0df;   /* constant vector a */
	UPPER_MASK = 0x80000000; /* most significant w-r bits */
	LOWER_MASK = 0x7fffffff; /* least significant r bits */
	//c//static unsigned long mt[N]; /* the array for the state vector  */
	//c//static int mti=N+1; /* mti==N+1 means mt[N] is not initialized */
	var mt = new Array(N);   /* the array for the state vector  */
	var mti = N+1;           /* mti==N+1 means mt[N] is not initialized */

	function unsigned32 (n1) // returns a 32-bits unsiged integer from an operand to which applied a bit operator.
	{
		return n1 < 0 ? (n1 ^ UPPER_MASK) + UPPER_MASK : n1;
	}

	function subtraction32 (n1, n2) // emulates lowerflow of a c 32-bits unsiged integer variable, instead of the operator -. these both arguments must be non-negative integers expressible using unsigned 32 bits.
	{
		return n1 < n2 ? unsigned32((0x100000000 - (n2 - n1)) & 0xffffffff) : n1 - n2;
	}

	function addition32 (n1, n2) // emulates overflow of a c 32-bits unsiged integer variable, instead of the operator +. these both arguments must be non-negative integers expressible using unsigned 32 bits.
	{
		return unsigned32((n1 + n2) & 0xffffffff)
	}

	function multiplication32 (n1, n2) // emulates overflow of a c 32-bits unsiged integer variable, instead of the operator *. these both arguments must be non-negative integers expressible using unsigned 32 bits.
	{
		var sum = 0;
		for (var i = 0; i < 32; ++i){
			if ((n1 >>> i) & 0x1){
				sum = addition32(sum, unsigned32(n2 << i));
			}
		}
		return sum;
	}

	/* initializes mt[N] with a seed */
	//c//void init_genrand(unsigned long s)
	this.init_genrand = function (s)
	{
		//c//mt[0]= s & 0xffffffff;
		mt[0]= unsigned32(s & 0xffffffff);
		for (mti=1; mti<N; mti++) {
			mt[mti] =
			//c//(1812433253 * (mt[mti-1] ^ (mt[mti-1] >> 30)) + mti);
			addition32(multiplication32(1812433253, unsigned32(mt[mti-1] ^ (mt[mti-1] >>> 30))), mti);
			/* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */
			/* In the previous versions, MSBs of the seed affect   */
			/* only MSBs of the array mt[].                        */
			/* 2002/01/09 modified by Makoto Matsumoto             */
			//c//mt[mti] &= 0xffffffff;
			mt[mti] = unsigned32(mt[mti] & 0xffffffff);
			/* for >32 bit machines */
		}
	}

	/* initialize by an array with array-length */
	/* init_key is the array for initializing keys */
	/* key_length is its length */
	/* slight change for C++, 2004/2/26 */
	//c//void init_by_array(unsigned long init_key[], int key_length)
	this.init_by_array = function (init_key, key_length)
	{
		//c//int i, j, k;
		var i, j, k;
		//c//init_genrand(19650218);
		this.init_genrand(19650218);
		i=1; j=0;
		k = (N>key_length ? N : key_length);
		for (; k; k--) {
			//c//mt[i] = (mt[i] ^ ((mt[i-1] ^ (mt[i-1] >> 30)) * 1664525))
			//c//	+ init_key[j] + j; /* non linear */
			mt[i] = addition32(addition32(unsigned32(mt[i] ^ multiplication32(unsigned32(mt[i-1] ^ (mt[i-1] >>> 30)), 1664525)), init_key[j]), j);
			mt[i] =
			//c//mt[i] &= 0xffffffff; /* for WORDSIZE > 32 machines */
			unsigned32(mt[i] & 0xffffffff);
			i++; j++;
			if (i>=N) { mt[0] = mt[N-1]; i=1; }
			if (j>=key_length) j=0;
		}
		for (k=N-1; k; k--) {
			//c//mt[i] = (mt[i] ^ ((mt[i-1] ^ (mt[i-1] >> 30)) * 1566083941))
			//c//- i; /* non linear */
			mt[i] = subtraction32(unsigned32((dbg=mt[i]) ^ multiplication32(unsigned32(mt[i-1] ^ (mt[i-1] >>> 30)), 1566083941)), i);
			//c//mt[i] &= 0xffffffff; /* for WORDSIZE > 32 machines */
			mt[i] = unsigned32(mt[i] & 0xffffffff);
			i++;
			if (i>=N) { mt[0] = mt[N-1]; i=1; }
		}
		mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */
	}

    /* moved outside of genrand_int32() by jwatte 2010-11-17; generate less garbage */
    var mag01 = [0x0, MATRIX_A];

	/* generates a random number on [0,0xffffffff]-interval */
	//c//unsigned long genrand_int32(void)
	this.genrand_int32 = function ()
	{
		//c//unsigned long y;
		//c//static unsigned long mag01[2]={0x0UL, MATRIX_A};
		var y;
		/* mag01[x] = x * MATRIX_A  for x=0,1 */

		if (mti >= N) { /* generate N words at one time */
			//c//int kk;
			var kk;

			if (mti == N+1)   /* if init_genrand() has not been called, */
				//c//init_genrand(5489); /* a default initial seed is used */
				this.init_genrand(5489); /* a default initial seed is used */

			for (kk=0;kk<N-M;kk++) {
				//c//y = (mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK);
				//c//mt[kk] = mt[kk+M] ^ (y >> 1) ^ mag01[y & 0x1];
				y = unsigned32((mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK));
				mt[kk] = unsigned32(mt[kk+M] ^ (y >>> 1) ^ mag01[y & 0x1]);
			}
			for (;kk<N-1;kk++) {
				//c//y = (mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK);
				//c//mt[kk] = mt[kk+(M-N)] ^ (y >> 1) ^ mag01[y & 0x1];
				y = unsigned32((mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK));
				mt[kk] = unsigned32(mt[kk+(M-N)] ^ (y >>> 1) ^ mag01[y & 0x1]);
			}
			//c//y = (mt[N-1]&UPPER_MASK)|(mt[0]&LOWER_MASK);
			//c//mt[N-1] = mt[M-1] ^ (y >> 1) ^ mag01[y & 0x1];
			y = unsigned32((mt[N-1]&UPPER_MASK)|(mt[0]&LOWER_MASK));
			mt[N-1] = unsigned32(mt[M-1] ^ (y >>> 1) ^ mag01[y & 0x1]);
			mti = 0;
		}

		y = mt[mti++];

		/* Tempering */
		//c//y ^= (y >> 11);
		//c//y ^= (y << 7) & 0x9d2c5680;
		//c//y ^= (y << 15) & 0xefc60000;
		//c//y ^= (y >> 18);
		y = unsigned32(y ^ (y >>> 11));
		y = unsigned32(y ^ ((y << 7) & 0x9d2c5680));
		y = unsigned32(y ^ ((y << 15) & 0xefc60000));
		y = unsigned32(y ^ (y >>> 18));

		return y;
	}

	/* generates a random number on [0,0x7fffffff]-interval */
	//c//long genrand_int31(void)
	this.genrand_int31 = function ()
	{
		//c//return (genrand_int32()>>1);
		return (this.genrand_int32()>>>1);
	}

	/* generates a random number on [0,1]-real-interval */
	//c//double genrand_real1(void)
	this.genrand_real1 = function ()
	{
		//c//return genrand_int32()*(1.0/4294967295.0);
		return this.genrand_int32()*(1.0/4294967295.0);
		/* divided by 2^32-1 */
	}

	/* generates a random number on [0,1)-real-interval */
	//c//double genrand_real2(void)
	this.genrand_real2 = function ()
	{
		//c//return genrand_int32()*(1.0/4294967296.0);
		return this.genrand_int32()*(1.0/4294967296.0);
		/* divided by 2^32 */
	}

	/* generates a random number on (0,1)-real-interval */
	//c//double genrand_real3(void)
	this.genrand_real3 = function ()
	{
		//c//return ((genrand_int32()) + 0.5)*(1.0/4294967296.0);
		return ((this.genrand_int32()) + 0.5)*(1.0/4294967296.0);
		/* divided by 2^32 */
	}

	/* generates a random number on [0,1) with 53-bit resolution*/
	//c//double genrand_res53(void)
	this.genrand_res53 = function ()
	{
		//c//unsigned long a=genrand_int32()>>5, b=genrand_int32()>>6;
		var a=this.genrand_int32()>>>5, b=this.genrand_int32()>>>6;
		return(a*67108864.0+b)*(1.0/9007199254740992.0);
	}
	/* These real versions are due to Isaku Wada, 2002/01/09 added */
}

//  Exports: Public API

//  Export the twister class
exports.MersenneTwister19937 = MersenneTwister19937;

//  Export a simplified function to generate random numbers
var gen = new MersenneTwister19937;
gen.init_genrand((new Date).getTime() % 1000000000);

// Added max, min range functionality, Marak Squires Sept 11 2014
exports.rand = function(max, min) {
    if (max === undefined)
        {
        min = 0;
        max = 32768;
        }
    return Math.floor(gen.genrand_real2() * (max - min) + min);
}
exports.seed = function(S) {
    if (typeof(S) != 'number')
        {
        throw new Error("seed(S) must take numeric argument; is " + typeof(S));
        }
    gen.init_genrand(S);
}
exports.seed_array = function(A) {
    if (typeof(A) != 'object')
        {
        throw new Error("seed_array(A) must take array of numbers; is " + typeof(A));
        }
    gen.init_by_array(A);
}

},{}],996:[function(require,module,exports){
/*
 * password-generator
 * Copyright(c) 2011-2013 Bermi Ferrer <bermi@bermilabs.com>
 * MIT Licensed
 */
(function (root) {

  var localName, consonant, letter, password, vowel;
  letter = /[a-zA-Z]$/;
  vowel = /[aeiouAEIOU]$/;
  consonant = /[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]$/;


  // Defines the name of the local variable the passwordGenerator library will use
  // this is specially useful if window.passwordGenerator is already being used
  // by your application and you want a different name. For example:
  //    // Declare before including the passwordGenerator library
  //    var localPasswordGeneratorLibraryName = 'pass';
  localName = root.localPasswordGeneratorLibraryName || "generatePassword",

  password = function (length, memorable, pattern, prefix) {
    var char, n;
    if (length == null) {
      length = 10;
    }
    if (memorable == null) {
      memorable = true;
    }
    if (pattern == null) {
      pattern = /\w/;
    }
    if (prefix == null) {
      prefix = '';
    }
    if (prefix.length >= length) {
      return prefix;
    }
    if (memorable) {
      if (prefix.match(consonant)) {
        pattern = vowel;
      } else {
        pattern = consonant;
      }
    }
    n = Math.floor(Math.random() * 94) + 33;
    char = String.fromCharCode(n);
    if (memorable) {
      char = char.toLowerCase();
    }
    if (!char.match(pattern)) {
      return password(length, memorable, pattern, prefix);
    }
    return password(length, memorable, pattern, "" + prefix + char);
  };


  ((typeof exports !== 'undefined') ? exports : root)[localName] = password;
  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      module.exports = password;
    }
  }

  // Establish the root object, `window` in the browser, or `global` on the server.
}(this));
},{}],997:[function(require,module,exports){
/*

Copyright (c) 2012-2014 Jeffrey Mealo

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
documentation files (the "Software"), to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and
to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

------------------------------------------------------------------------------------------------------------------------

Based loosely on Luka Pusic's PHP Script: http://360percents.com/posts/php-random-user-agent-generator/

The license for that script is as follows:

"THE BEER-WARE LICENSE" (Revision 42):

<pusic93@gmail.com> wrote this file. As long as you retain this notice you can do whatever you want with this stuff.
If we meet some day, and you think this stuff is worth it, you can buy me a beer in return. Luka Pusic
*/

function rnd(a, b) {
    //calling rnd() with no arguments is identical to rnd(0, 100)
    a = a || 0;
    b = b || 100;

    if (typeof b === 'number' && typeof a === 'number') {
        //rnd(int min, int max) returns integer between min, max
        return (function (min, max) {
            if (min > max) {
                throw new RangeError('expected min <= max; got min = ' + min + ', max = ' + max);
            }
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }(a, b));
    }

    if (Object.prototype.toString.call(a) === "[object Array]") {
        //returns a random element from array (a), even weighting
        return a[Math.floor(Math.random() * a.length)];
    }

    if (a && typeof a === 'object') {
        //returns a random key from the passed object; keys are weighted by the decimal probability in their value
        return (function (obj) {
            var rand = rnd(0, 100) / 100, min = 0, max = 0, key, return_val;

            for (key in obj) {
                if (obj.hasOwnProperty(key)) {
                    max = obj[key] + min;
                    return_val = key;
                    if (rand >= min && rand <= max) {
                        break;
                    }
                    min = min + obj[key];
                }
            }

            return return_val;
        }(a));
    }

    throw new TypeError('Invalid arguments passed to rnd. (' + (b ? a + ', ' + b : a) + ')');
}

function randomLang() {
    return rnd(['AB', 'AF', 'AN', 'AR', 'AS', 'AZ', 'BE', 'BG', 'BN', 'BO', 'BR', 'BS', 'CA', 'CE', 'CO', 'CS',
                'CU', 'CY', 'DA', 'DE', 'EL', 'EN', 'EO', 'ES', 'ET', 'EU', 'FA', 'FI', 'FJ', 'FO', 'FR', 'FY',
                'GA', 'GD', 'GL', 'GV', 'HE', 'HI', 'HR', 'HT', 'HU', 'HY', 'ID', 'IS', 'IT', 'JA', 'JV', 'KA',
                'KG', 'KO', 'KU', 'KW', 'KY', 'LA', 'LB', 'LI', 'LN', 'LT', 'LV', 'MG', 'MK', 'MN', 'MO', 'MS',
                'MT', 'MY', 'NB', 'NE', 'NL', 'NN', 'NO', 'OC', 'PL', 'PT', 'RM', 'RO', 'RU', 'SC', 'SE', 'SK',
                'SL', 'SO', 'SQ', 'SR', 'SV', 'SW', 'TK', 'TR', 'TY', 'UK', 'UR', 'UZ', 'VI', 'VO', 'YI', 'ZH']);
}

function randomBrowserAndOS() {
    var browser = rnd({
        chrome:    .45132810566,
        iexplorer: .27477061836,
        firefox:   .19384170608,
        safari:    .06186781118,
        opera:     .01574236955
    }),
    os = {
        chrome:  {win: .89,  mac: .09 , lin: .02},
        firefox: {win: .83,  mac: .16,  lin: .01},
        opera:   {win: .91,  mac: .03 , lin: .06},
        safari:  {win: .04 , mac: .96  },
        iexplorer: ['win']
    };

    return [browser, rnd(os[browser])];
}

function randomProc(arch) {
    var procs = {
        lin:['i686', 'x86_64'],
        mac: {'Intel' : .48, 'PPC': .01, 'U; Intel':.48, 'U; PPC' :.01},
        win:['', 'WOW64', 'Win64; x64']
    };
    return rnd(procs[arch]);
}

function randomRevision(dots) {
    var return_val = '';
    //generate a random revision
    //dots = 2 returns .x.y where x & y are between 0 and 9
    for (var x = 0; x < dots; x++) {
        return_val += '.' + rnd(0, 9);
    }
    return return_val;
}

var version_string = {
    net: function () {
        return [rnd(1, 4), rnd(0, 9), rnd(10000, 99999), rnd(0, 9)].join('.');
    },
    nt: function () {
        return rnd(5, 6) + '.' + rnd(0, 3);
    },
    ie: function () {
        return rnd(7, 11);
    },
    trident: function () {
        return rnd(3, 7) + '.' + rnd(0, 1);
    },
    osx: function (delim) {
        return [10, rnd(5, 10), rnd(0, 9)].join(delim || '.');
    },
    chrome: function () {
        return [rnd(13, 39), 0, rnd(800, 899), 0].join('.');
    },
    presto: function () {
        return '2.9.' + rnd(160, 190);
    },
    presto2: function () {
        return rnd(10, 12) + '.00';
    },
    safari: function () {
        return rnd(531, 538) + '.' + rnd(0, 2) + '.' + rnd(0,2);
    }
};

var browser = {
    firefox: function firefox(arch) {
        //https://developer.mozilla.org/en-US/docs/Gecko_user_agent_string_reference
        var firefox_ver = rnd(5, 15) + randomRevision(2),
            gecko_ver = 'Gecko/20100101 Firefox/' + firefox_ver,
            proc = randomProc(arch),
            os_ver = (arch === 'win') ? '(Windows NT ' + version_string.nt() + ((proc) ? '; ' + proc : '')
            : (arch === 'mac') ? '(Macintosh; ' + proc + ' Mac OS X ' + version_string.osx()
            : '(X11; Linux ' + proc;

        return 'Mozilla/5.0 ' + os_ver + '; rv:' + firefox_ver.slice(0, -2) + ') ' + gecko_ver;
    },

    iexplorer: function iexplorer() {
        var ver = version_string.ie();

        if (ver >= 11) {
            //http://msdn.microsoft.com/en-us/library/ie/hh869301(v=vs.85).aspx
            return 'Mozilla/5.0 (Windows NT 6.' + rnd(1,3) + '; Trident/7.0; ' + rnd(['Touch; ', '']) + 'rv:11.0) like Gecko';
        }

        //http://msdn.microsoft.com/en-us/library/ie/ms537503(v=vs.85).aspx
        return 'Mozilla/5.0 (compatible; MSIE ' + ver + '.0; Windows NT ' + version_string.nt() + '; Trident/' +
            version_string.trident() + ((rnd(0, 1) === 1) ? '; .NET CLR ' + version_string.net() : '') + ')';
    },

    opera: function opera(arch) {
        //http://www.opera.com/docs/history/
        var presto_ver = ' Presto/' + version_string.presto() + ' Version/' + version_string.presto2() + ')',
            os_ver = (arch === 'win') ? '(Windows NT ' + version_string.nt() + '; U; ' + randomLang() + presto_ver
            : (arch === 'lin') ? '(X11; Linux ' + randomProc(arch) + '; U; ' + randomLang() + presto_ver
            : '(Macintosh; Intel Mac OS X ' + version_string.osx() + ' U; ' + randomLang() + ' Presto/' +
            version_string.presto() + ' Version/' + version_string.presto2() + ')';

        return 'Opera/' + rnd(9, 14) + '.' + rnd(0, 99) + ' ' + os_ver;
    },

    safari: function safari(arch) {
        var safari = version_string.safari(),
            ver = rnd(4, 7) + '.' + rnd(0,1) + '.' + rnd(0,10),
            os_ver = (arch === 'mac') ? '(Macintosh; ' + randomProc('mac') + ' Mac OS X '+ version_string.osx('_') + ' rv:' + rnd(2, 6) + '.0; '+ randomLang() + ') '
            : '(Windows; U; Windows NT ' + version_string.nt() + ')';

        return 'Mozilla/5.0 ' + os_ver + 'AppleWebKit/' + safari + ' (KHTML, like Gecko) Version/' + ver + ' Safari/' + safari;
    },

    chrome: function chrome(arch) {
        var safari = version_string.safari(),
            os_ver = (arch === 'mac') ? '(Macintosh; ' + randomProc('mac') + ' Mac OS X ' + version_string.osx('_') + ') '
            : (arch === 'win') ? '(Windows; U; Windows NT ' + version_string.nt() + ')'
            : '(X11; Linux ' + randomProc(arch);

        return 'Mozilla/5.0 ' + os_ver + ' AppleWebKit/' + safari + ' (KHTML, like Gecko) Chrome/' + version_string.chrome() + ' Safari/' + safari;
    }
};

exports.generate = function generate() {
    var random = randomBrowserAndOS();
    return browser[random[0]](random[1]);
};

},{}],998:[function(require,module,exports){
var ret = require('ret');
var DRange = require('discontinuous-range');
var types = ret.types;


/**
 * If code is alphabetic, converts to other case.
 * If not alphabetic, returns back code.
 *
 * @param {Number} code
 * @return {Number}
 */
function toOtherCase(code) {
  return code + (97 <= code && code <= 122 ? -32 :
                 65 <= code && code <= 90  ?  32 : 0);
}


/**
 * Randomly returns a true or false value.
 *
 * @return {Boolean}
 */
function randBool() {
  return !this.randInt(0, 1);
}


/**
 * Randomly selects and returns a value from the array.
 *
 * @param {Array.<Object>} arr
 * @return {Object}
 */
function randSelect(arr) {
  if (arr instanceof DRange) {
    return arr.index(this.randInt(0, arr.length - 1));
  }
  return arr[this.randInt(0, arr.length - 1)];
}


/**
 * expands a token to a DiscontinuousRange of characters which has a
 * length and an index function (for random selecting)
 *
 * @param {Object} token
 * @return {DiscontinuousRange}
 */
function expand(token) {
  if (token.type === ret.types.CHAR) {
    return new DRange(token.value);
  } else if (token.type === ret.types.RANGE) {
    return new DRange(token.from, token.to);
  } else {
    var drange = new DRange();
    for (var i = 0; i < token.set.length; i++) {
      var subrange = expand.call(this, token.set[i]);
      drange.add(subrange);
      if (this.ignoreCase) {
        for (var j = 0; j < subrange.length; j++) {
          var code = subrange.index(j);
          var otherCaseCode = toOtherCase(code);
          if (code !== otherCaseCode) {
            drange.add(otherCaseCode);
          }
        }
      }
    }
    if (token.not) {
      return this.defaultRange.clone().subtract(drange);
    } else {
      return drange;
    }
  }
}


/**
 * Checks if some custom properties have been set for this regexp.
 *
 * @param {RandExp} randexp
 * @param {RegExp} regexp
 */
function checkCustom(randexp, regexp) {
  if (typeof regexp.max === 'number') {
    randexp.max = regexp.max;
  }
  if (regexp.defaultRange instanceof DRange) {
    randexp.defaultRange = regexp.defaultRange;
  }
  if (typeof regexp.randInt === 'function') {
    randexp.randInt = regexp.randInt;
  }
}


/**
 * @constructor
 * @param {RegExp|String} regexp
 * @param {String} m
 */
var RandExp = module.exports = function(regexp, m) {
  this.defaultRange = this.defaultRange.clone();
  if (regexp instanceof RegExp) {
    this.ignoreCase = regexp.ignoreCase;
    this.multiline = regexp.multiline;
    checkCustom(this, regexp);
    regexp = regexp.source;

  } else if (typeof regexp === 'string') {
    this.ignoreCase = m && m.indexOf('i') !== -1;
    this.multiline = m && m.indexOf('m') !== -1;
  } else {
    throw new Error('Expected a regexp or string');
  }

  this.tokens = ret(regexp);
};


// When a repetitional token has its max set to Infinite,
// randexp won't actually generate a random amount between min and Infinite
// instead it will see Infinite as min + 100.
RandExp.prototype.max = 100;


// Generates the random string.
RandExp.prototype.gen = function() {
  return gen.call(this, this.tokens, []);
};


// Enables use of randexp with a shorter call.
RandExp.randexp = function(regexp, m) {
  var randexp;
  if (regexp._randexp === undefined) {
    randexp = new RandExp(regexp, m);
    regexp._randexp = randexp;
  } else {
    randexp = regexp._randexp;
  }
  checkCustom(randexp, regexp);
  return randexp.gen();
};


// This enables sugary /regexp/.gen syntax.
RandExp.sugar = function() {
  /* jshint freeze:false */
  RegExp.prototype.gen = function() {
    return RandExp.randexp(this);
  };
};

// This allows expanding to include additional characters
// for instance: RandExp.defaultRange.add(0, 65535);
RandExp.prototype.defaultRange = new DRange(32, 126);


/**
 * Randomly generates and returns a number between a and b (inclusive).
 *
 * @param {Number} a
 * @param {Number} b
 * @return {Number}
 */
RandExp.prototype.randInt = function(a, b) {
  return a + Math.floor(Math.random() * (1 + b - a));
};


/**
 * Generate random string modeled after given tokens.
 *
 * @param {Object} token
 * @param {Array.<String>} groups
 * @return {String}
 */
function gen(token, groups) {
  var stack, str, n, i, l;

  switch (token.type) {


    case types.ROOT:
    case types.GROUP:
      // Ignore lookaheads for now.
      if (token.followedBy || token.notFollowedBy) { return ''; }

      // Insert placeholder until group string is generated.
      if (token.remember && token.groupNumber === undefined) {
        token.groupNumber = groups.push(null) - 1;
      }

      stack = token.options ?
        randSelect.call(this, token.options) : token.stack;

      str = '';
      for (i = 0, l = stack.length; i < l; i++) {
        str += gen.call(this, stack[i], groups);
      }

      if (token.remember) {
        groups[token.groupNumber] = str;
      }
      return str;


    case types.POSITION:
      // Do nothing for now.
      return '';


    case types.SET:
      var expandedSet = expand.call(this, token);
      if (!expandedSet.length) { return ''; }
      return String.fromCharCode(randSelect.call(this, expandedSet));


    case types.REPETITION:
      // Randomly generate number between min and max.
      n = this.randInt(token.min,
              token.max === Infinity ? token.min + this.max : token.max);

      str = '';
      for (i = 0; i < n; i++) {
        str += gen.call(this, token.value, groups);
      }

      return str;


    case types.REFERENCE:
      return groups[token.value - 1] || '';


    case types.CHAR:
      var code = this.ignoreCase && randBool.call(this) ?
        toOtherCase(token.value) : token.value;
      return String.fromCharCode(code);
  }
}



},{"discontinuous-range":999,"ret":1000}],999:[function(require,module,exports){
//protected helper class
function _SubRange(low, high) {
    this.low = low;
    this.high = high;
    this.length = 1 + high - low;
}

_SubRange.prototype.overlaps = function (range) {
    return !(this.high < range.low || this.low > range.high);
};

_SubRange.prototype.touches = function (range) {
    return !(this.high + 1 < range.low || this.low - 1 > range.high);
};

//returns inclusive combination of _SubRanges as a _SubRange
_SubRange.prototype.add = function (range) {
    return this.touches(range) && new _SubRange(Math.min(this.low, range.low), Math.max(this.high, range.high));
};

//returns subtraction of _SubRanges as an array of _SubRanges (there's a case where subtraction divides it in 2)
_SubRange.prototype.subtract = function (range) {
    if (!this.overlaps(range)) return false;
    if (range.low <= this.low && range.high >= this.high) return [];
    if (range.low > this.low && range.high < this.high) return [new _SubRange(this.low, range.low - 1), new _SubRange(range.high + 1, this.high)];
    if (range.low <= this.low) return [new _SubRange(range.high + 1, this.high)];
    return [new _SubRange(this.low, range.low - 1)];
};

_SubRange.prototype.toString = function () {
    if (this.low == this.high) return this.low.toString();
    return this.low + '-' + this.high;
};

_SubRange.prototype.clone = function () {
    return new _SubRange(this.low, this.high);
};




function DiscontinuousRange(a, b) {
    if (this instanceof DiscontinuousRange) {
        this.ranges = [];
        this.length = 0;
        if (a !== undefined) this.add(a, b);
    } else {
        return new DiscontinuousRange(a, b);
    }
}

function _update_length(self) {
    self.length = self.ranges.reduce(function (previous, range) {return previous + range.length}, 0);
}

DiscontinuousRange.prototype.add = function (a, b) {
    var self = this;
    function _add(subrange) {
        var new_ranges = [];
        var i = 0;
        while (i < self.ranges.length && !subrange.touches(self.ranges[i])) {
            new_ranges.push(self.ranges[i].clone());
            i++;
        }
        while (i < self.ranges.length && subrange.touches(self.ranges[i])) {
            subrange = subrange.add(self.ranges[i]);
            i++;
        }
        new_ranges.push(subrange);
        while (i < self.ranges.length) {
            new_ranges.push(self.ranges[i].clone());
            i++;
        }
        self.ranges = new_ranges;
        _update_length(self);
    }

    if (a instanceof DiscontinuousRange) {
        a.ranges.forEach(_add);
    } else {
        if (a instanceof _SubRange) {
            _add(a);
        } else {
            if (b === undefined) b = a;
            _add(new _SubRange(a, b));
        }
    }
    return this;
};

DiscontinuousRange.prototype.subtract = function (a, b) {
    var self = this;
    function _subtract(subrange) {
        var new_ranges = [];
        var i = 0;
        while (i < self.ranges.length && !subrange.overlaps(self.ranges[i])) {
            new_ranges.push(self.ranges[i].clone());
            i++;
        }
        while (i < self.ranges.length && subrange.overlaps(self.ranges[i])) {
            new_ranges = new_ranges.concat(self.ranges[i].subtract(subrange));
            i++;
        }
        while (i < self.ranges.length) {
            new_ranges.push(self.ranges[i].clone());
            i++;
        }
        self.ranges = new_ranges;
        _update_length(self);
    }
    if (a instanceof DiscontinuousRange) {
        a.ranges.forEach(_subtract);
    } else {
        if (a instanceof _SubRange) {
            _subtract(a);
        } else {
            if (b === undefined) b = a;
            _subtract(new _SubRange(a, b));
        }
    }
    return this;
};


DiscontinuousRange.prototype.index = function (index) {
    var i = 0;
    while (i < this.ranges.length && this.ranges[i].length <= index) {
        index -= this.ranges[i].length;
        i++;
    }
    if (i >= this.ranges.length) return null;
    return this.ranges[i].low + index;
};


DiscontinuousRange.prototype.toString = function () {
    return '[ ' + this.ranges.join(', ') + ' ]'
};

DiscontinuousRange.prototype.clone = function () {
    return new DiscontinuousRange(this);
};

module.exports = DiscontinuousRange;

},{}],1000:[function(require,module,exports){
var util      = require('./util');
var types     = require('./types');
var sets      = require('./sets');
var positions = require('./positions');


module.exports = function(regexpStr) {
  var i = 0, l, c,
      start = { type: types.ROOT, stack: []},

      // Keep track of last clause/group and stack.
      lastGroup = start,
      last = start.stack,
      groupStack = [];


  var repeatErr = function(i) {
    util.error(regexpStr, 'Nothing to repeat at column ' + (i - 1));
  };

  // Decode a few escaped characters.
  var str = util.strToChars(regexpStr);
  l = str.length;

  // Iterate through each character in string.
  while (i < l) {
    c = str[i++];

    switch (c) {
      // Handle escaped characters, inclues a few sets.
      case '\\':
        c = str[i++];

        switch (c) {
          case 'b':
            last.push(positions.wordBoundary());
            break;

          case 'B':
            last.push(positions.nonWordBoundary());
            break;

          case 'w':
            last.push(sets.words());
            break;

          case 'W':
            last.push(sets.notWords());
            break;

          case 'd':
            last.push(sets.ints());
            break;

          case 'D':
            last.push(sets.notInts());
            break;

          case 's':
            last.push(sets.whitespace());
            break;

          case 'S':
            last.push(sets.notWhitespace());
            break;

          default:
            // Check if c is integer.
            // In which case it's a reference.
            if (/\d/.test(c)) {
              last.push({ type: types.REFERENCE, value: parseInt(c, 10) });

            // Escaped character.
            } else {
              last.push({ type: types.CHAR, value: c.charCodeAt(0) });
            }
        }

        break;


      // Positionals.
      case '^':
          last.push(positions.begin());
        break;

      case '$':
          last.push(positions.end());
        break;


      // Handle custom sets.
      case '[':
        // Check if this class is 'anti' i.e. [^abc].
        var not;
        if (str[i] === '^') {
          not = true;
          i++;
        } else {
          not = false;
        }

        // Get all the characters in class.
        var classTokens = util.tokenizeClass(str.slice(i), regexpStr);

        // Increase index by length of class.
        i += classTokens[1];
        last.push({
          type: types.SET,
          set: classTokens[0],
          not: not,
        });

        break;


      // Class of any character except \n.
      case '.':
        last.push(sets.anyChar());
        break;


      // Push group onto stack.
      case '(':
        // Create group.
        var group = {
          type: types.GROUP,
          stack: [],
          remember: true,
        };

        c = str[i];

        // If if this is a special kind of group.
        if (c === '?') {
          c = str[i + 1];
          i += 2;

          // Match if followed by.
          if (c === '=') {
            group.followedBy = true;

          // Match if not followed by.
          } else if (c === '!') {
            group.notFollowedBy = true;

          } else if (c !== ':') {
            util.error(regexpStr,
              'Invalid group, character \'' + c +
              '\' after \'?\' at column ' + (i - 1));
          }

          group.remember = false;
        }

        // Insert subgroup into current group stack.
        last.push(group);

        // Remember the current group for when the group closes.
        groupStack.push(lastGroup);

        // Make this new group the current group.
        lastGroup = group;
        last = group.stack;
        break;


      // Pop group out of stack.
      case ')':
        if (groupStack.length === 0) {
          util.error(regexpStr, 'Unmatched ) at column ' + (i - 1));
        }
        lastGroup = groupStack.pop();

        // Check if this group has a PIPE.
        // To get back the correct last stack.
        last = lastGroup.options ?
          lastGroup.options[lastGroup.options.length - 1] : lastGroup.stack;
        break;


      // Use pipe character to give more choices.
      case '|':
        // Create array where options are if this is the first PIPE
        // in this clause.
        if (!lastGroup.options) {
          lastGroup.options = [lastGroup.stack];
          delete lastGroup.stack;
        }

        // Create a new stack and add to options for rest of clause.
        var stack = [];
        lastGroup.options.push(stack);
        last = stack;
        break;


      // Repetition.
      // For every repetition, remove last element from last stack
      // then insert back a RANGE object.
      // This design is chosen because there could be more than
      // one repetition symbols in a regex i.e. `a?+{2,3}`.
      case '{':
        var rs = /^(\d+)(,(\d+)?)?\}/.exec(str.slice(i)), min, max;
        if (rs !== null) {
          if (last.length === 0) {
            repeatErr(i);
          }
          min = parseInt(rs[1], 10);
          max = rs[2] ? rs[3] ? parseInt(rs[3], 10) : Infinity : min;
          i += rs[0].length;

          last.push({
            type: types.REPETITION,
            min: min,
            max: max,
            value: last.pop(),
          });
        } else {
          last.push({
            type: types.CHAR,
            value: 123,
          });
        }
        break;

      case '?':
        if (last.length === 0) {
          repeatErr(i);
        }
        last.push({
          type: types.REPETITION,
          min: 0,
          max: 1,
          value: last.pop(),
        });
        break;

      case '+':
        if (last.length === 0) {
          repeatErr(i);
        }
        last.push({
          type: types.REPETITION,
          min: 1,
          max: Infinity,
          value: last.pop(),
        });
        break;

      case '*':
        if (last.length === 0) {
          repeatErr(i);
        }
        last.push({
          type: types.REPETITION,
          min: 0,
          max: Infinity,
          value: last.pop(),
        });
        break;


      // Default is a character that is not `\[](){}?+*^$`.
      default:
        last.push({
          type: types.CHAR,
          value: c.charCodeAt(0),
        });
    }

  }

  // Check if any groups have not been closed.
  if (groupStack.length !== 0) {
    util.error(regexpStr, 'Unterminated group');
  }

  return start;
};

module.exports.types = types;

},{"./positions":1001,"./sets":1002,"./types":1003,"./util":1004}],1001:[function(require,module,exports){
var types = require('./types');

exports.wordBoundary = function() {
  return { type: types.POSITION, value: 'b' };
};

exports.nonWordBoundary = function() {
  return { type: types.POSITION, value: 'B' };
};

exports.begin = function() {
  return { type: types.POSITION, value: '^' };
};

exports.end = function() {
  return { type: types.POSITION, value: '$' };
};

},{"./types":1003}],1002:[function(require,module,exports){
var types = require('./types');

var INTS = function() {
 return [{ type: types.RANGE , from: 48, to: 57 }];
};

var WORDS = function() {
 return [
    { type: types.CHAR, value: 95 },
    { type: types.RANGE, from: 97, to: 122 },
    { type: types.RANGE, from: 65, to: 90 }
  ].concat(INTS());
};

var WHITESPACE = function() {
 return [
    { type: types.CHAR, value: 9 },
    { type: types.CHAR, value: 10 },
    { type: types.CHAR, value: 11 },
    { type: types.CHAR, value: 12 },
    { type: types.CHAR, value: 13 },
    { type: types.CHAR, value: 32 },
    { type: types.CHAR, value: 160 },
    { type: types.CHAR, value: 5760 },
    { type: types.CHAR, value: 6158 },
    { type: types.CHAR, value: 8192 },
    { type: types.CHAR, value: 8193 },
    { type: types.CHAR, value: 8194 },
    { type: types.CHAR, value: 8195 },
    { type: types.CHAR, value: 8196 },
    { type: types.CHAR, value: 8197 },
    { type: types.CHAR, value: 8198 },
    { type: types.CHAR, value: 8199 },
    { type: types.CHAR, value: 8200 },
    { type: types.CHAR, value: 8201 },
    { type: types.CHAR, value: 8202 },
    { type: types.CHAR, value: 8232 },
    { type: types.CHAR, value: 8233 },
    { type: types.CHAR, value: 8239 },
    { type: types.CHAR, value: 8287 },
    { type: types.CHAR, value: 12288 },
    { type: types.CHAR, value: 65279 }
  ];
};

var NOTANYCHAR = function() {
  return [
    { type: types.CHAR, value: 10 },
    { type: types.CHAR, value: 13 },
    { type: types.CHAR, value: 8232 },
    { type: types.CHAR, value: 8233 },
  ];
};

// Predefined class objects.
exports.words = function() {
  return { type: types.SET, set: WORDS(), not: false };
};

exports.notWords = function() {
  return { type: types.SET, set: WORDS(), not: true };
};

exports.ints = function() {
  return { type: types.SET, set: INTS(), not: false };
};

exports.notInts = function() {
  return { type: types.SET, set: INTS(), not: true };
};

exports.whitespace = function() {
  return { type: types.SET, set: WHITESPACE(), not: false };
};

exports.notWhitespace = function() {
  return { type: types.SET, set: WHITESPACE(), not: true };
};

exports.anyChar = function() {
  return { type: types.SET, set: NOTANYCHAR(), not: true };
};

},{"./types":1003}],1003:[function(require,module,exports){
module.exports = {
  ROOT       : 0,
  GROUP      : 1,
  POSITION   : 2,
  SET        : 3,
  RANGE      : 4,
  REPETITION : 5,
  REFERENCE  : 6,
  CHAR       : 7,
};

},{}],1004:[function(require,module,exports){
var types = require('./types');
var sets  = require('./sets');


// All of these are private and only used by randexp.
// It's assumed that they will always be called with the correct input.

var CTRL = '@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^ ?';
var SLSH = { '0': 0, 't': 9, 'n': 10, 'v': 11, 'f': 12, 'r': 13 };

/**
 * Finds character representations in str and convert all to
 * their respective characters
 *
 * @param {String} str
 * @return {String}
 */
exports.strToChars = function(str) {
  /* jshint maxlen: false */
  var chars_regex = /(\[\\b\])|(\\)?\\(?:u([A-F0-9]{4})|x([A-F0-9]{2})|(0?[0-7]{2})|c([@A-Z\[\\\]\^?])|([0tnvfr]))/g;
  str = str.replace(chars_regex, function(s, b, lbs, a16, b16, c8, dctrl, eslsh) {
    if (lbs) {
      return s;
    }

    var code = b     ? 8 :
               a16   ? parseInt(a16, 16) :
               b16   ? parseInt(b16, 16) :
               c8    ? parseInt(c8,   8) :
               dctrl ? CTRL.indexOf(dctrl) :
               SLSH[eslsh];

    var c = String.fromCharCode(code);

    // Escape special regex characters.
    if (/[\[\]{}\^$.|?*+()]/.test(c)) {
      c = '\\' + c;
    }

    return c;
  });

  return str;
};


/**
 * turns class into tokens
 * reads str until it encounters a ] not preceeded by a \
 *
 * @param {String} str
 * @param {String} regexpStr
 * @return {Array.<Array.<Object>, Number>}
 */
exports.tokenizeClass = function(str, regexpStr) {
  /* jshint maxlen: false */
  var tokens = [];
  var regexp = /\\(?:(w)|(d)|(s)|(W)|(D)|(S))|((?:(?:\\)(.)|([^\]\\]))-(?:\\)?([^\]]))|(\])|(?:\\)?(.)/g;
  var rs, c;


  while ((rs = regexp.exec(str)) != null) {
    if (rs[1]) {
      tokens.push(sets.words());

    } else if (rs[2]) {
      tokens.push(sets.ints());

    } else if (rs[3]) {
      tokens.push(sets.whitespace());

    } else if (rs[4]) {
      tokens.push(sets.notWords());

    } else if (rs[5]) {
      tokens.push(sets.notInts());

    } else if (rs[6]) {
      tokens.push(sets.notWhitespace());

    } else if (rs[7]) {
      tokens.push({
        type: types.RANGE,
        from: (rs[8] || rs[9]).charCodeAt(0),
          to: rs[10].charCodeAt(0),
      });

    } else if (c = rs[12]) {
      tokens.push({
        type: types.CHAR,
        value: c.charCodeAt(0),
      });

    } else {
      return [tokens, regexp.lastIndex];
    }
  }

  exports.error(regexpStr, 'Unterminated character class');
};


/**
 * Shortcut to throw errors.
 *
 * @param {String} regexp
 * @param {String} msg
 */
exports.error = function(regexp, msg) {
  throw new SyntaxError('Invalid regular expression: /' + regexp + '/: ' + msg);
};

},{"./sets":1002,"./types":1003}],"json-schema-faker":[function(require,module,exports){
module.exports = require('./lib')
  .extend('chance', function() {
    try {
      return require('chance').Chance();
    } catch (e) {
      return null;
    }
  })
  .extend('faker', function() {
    try {
      return require('faker');
    } catch (e) {
      return null;
    }
  });

},{"./lib":19,"chance":29,"faker":37}]},{},["json-schema-faker"])("json-schema-faker")
});
/*
 * GoJS v1.6.14 JavaScript Library for HTML Diagrams
 * Northwoods Software, https://www.nwoods.com/
 * GoJS and Northwoods Software are registered trademarks of Northwoods Software Corporation.
 * Copyright (C) 1998-2016 by Northwoods Software Corporation.  All Rights Reserved.
 * THIS SOFTWARE IS LICENSED.  THE LICENSE AGREEMENT IS AT: https://gojs.net/1.6.14/doc/license.html.
 */
(function(window) { var g,ea={};if(!window.document||void 0===window.document.createElement("canvas").getContext)throw window.console&&window.console.log("The HTML Canvas element is not supported in this browser,or this browser is in Compatibility mode."),Error("The HTML Canvas element is not supported in this browser,or this browser is in Compatibility mode.");if(!Object.defineProperty)throw Error("GoJS requires a newer version of JavaScript");
Function.prototype.bind||(Function.prototype.bind=function(a){function b(){return f.apply(a,e.concat(d.call(arguments)))}function c(){}var d=Array.prototype.slice,e=d.call(arguments,1),f=this;c.prototype=this.prototype;b.prototype=new c;return b});
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(b){var c=(new Date).getTime(),f=Math.max(8,16-(c-a)),h=window.setTimeout(function(){b(c+f)},f);a=c+f;return h});window.cancelAnimationFrame||(window.cancelAnimationFrame=
function(a){window.clearTimeout(a)})})();ea.Debug=null;
var v={ed:1,Nc:2,Xc:4,Wc:8,Rm:void 0!==window.navigator&&0<window.navigator.userAgent.indexOf("534.30")&&0<window.navigator.userAgent.indexOf("Android"),oH:void 0!==window.navigator&&0<window.navigator.userAgent.indexOf("MSIE 10.0"),pH:void 0!==window.navigator&&0<window.navigator.userAgent.indexOf("Trident/7"),RJ:void 0!==window.navigator&&0<window.navigator.userAgent.indexOf("Edge/"),ak:void 0!==window.navigator&&void 0!==window.navigator.platform&&0<=window.navigator.platform.toUpperCase().indexOf("MAC"),
cE:void 0!==window.navigator&&void 0!==window.navigator.platform&&null!==window.navigator.platform.match(/(iPhone|iPod|iPad)/i),vD:function(a,b,c){var d=-1;return function(){var e=this,f=arguments;-1!==d&&v.clearTimeout(d);d=v.setTimeout(function(){d=-1;c||a.apply(e,f)},b);c&&!d&&a.apply(e,f)}},setTimeout:function(a,b){return window.setTimeout(a,b)},clearTimeout:function(a){window.clearTimeout(a)},createElement:function(a){return window.document.createElement(a)},k:function(a){throw Error(a);},ka:function(a,
b){var c="The object is frozen, so its properties cannot be set: "+a.toString();void 0!==b&&(c+="  to value: "+b);v.k(c)},A:function(a,b,c,d){a instanceof b||(c=v.getTypeName(c),void 0!==d&&(c+="."+d),v.Gd(a,b,c))},j:function(a,b,c,d){typeof a!==b&&(c=v.getTypeName(c),void 0!==d&&(c+="."+d),v.Gd(a,b,c))},Ve:function(a,b,c){"number"===typeof a&&isFinite(a)||(b=v.getTypeName(b),void 0!==c&&(b+="."+c),v.k(b+" must be a real number type, and not NaN or Infinity: "+a))},pb:function(a,b,c,d){a instanceof
fa&&a.qe===b||(c=v.getTypeName(c),void 0!==d&&(c+="."+d),v.Gd(a,"a constant of class "+v.af(b),c))},tJ:function(a,b){"string"===typeof a?ga(a)||v.k('Color "'+a+'" is not a valid color string for '+b):a instanceof ha||v.k("Value for "+b+" must be a color string or a Brush, not "+a)},Gd:function(a,b,c,d){b=v.getTypeName(b);c=v.getTypeName(c);void 0!==d&&(c+="."+d);"string"===typeof a?v.k(c+" value is not an instance of "+b+': "'+a+'"'):v.k(c+" value is not an instance of "+b+": "+a)},va:function(a,
b,c,d){c=v.getTypeName(c);void 0!==d&&(c+="."+d);v.k(c+" is not in the range "+b+": "+a)},dd:function(a){v.k(v.af(a)+" constructor cannot take any arguments.")},Ka:function(a){v.k("Collection was modified during iteration: "+a.toString()+"\n  Perhaps you should iterate over a copy of the collection,\n  or you could collect items to be removed from the collection after the iteration.")},trace:function(a){window.console&&window.console.log(a)},Ta:function(a){return"object"===typeof a&&null!==a},isArray:function(a){return Array.isArray(a)||
a instanceof NodeList||a instanceof HTMLCollection},qH:function(a){return Array.isArray(a)},$y:function(a,b,c){v.isArray(a)||v.Gd(a,"Array or NodeList or HTMLCollection",b,c)},Va:function(a){return a.length},dl:function(a){return Array.prototype.slice.call(a)},Pa:function(a,b){Array.isArray(a);return a[b]},hD:function(a,b,c){Array.isArray(a)?a[b]=c:v.k("Cannot replace an object in an HTMLCollection or NodeList at "+b)},Zy:function(a,b){if(Array.isArray(a))return a.indexOf(b);for(var c=a.length,d=
0;d<c;d++)if(a[d]===b)return d;return-1},Oi:function(a,b,c){Array.isArray(a)?b>=a.length?a.push(c):a.splice(b,0,c):v.k("Cannot insert an object into an HTMLCollection or NodeList: "+c+" at "+b)},Vh:function(a,b){Array.isArray(a)?b>=a.length?a.pop():a.splice(b,1):v.k("Cannot remove an object from an HTMLCollection or NodeList at "+b)},zx:[],L:function(){var a=v.zx.pop();return void 0===a?new y:a},Mb:function(a,b){var c=v.zx.pop();if(void 0===c)return new y(a,b);c.x=a;c.y=b;return c},v:function(a){v.zx.push(a)},
HA:[],Fl:function(){var a=v.HA.pop();return void 0===a?new ia:a},Yj:function(a){v.HA.push(a)},Ax:[],bg:function(){var a=v.Ax.pop();return void 0===a?new B:a},gk:function(a,b,c,d){var e=v.Ax.pop();if(void 0===e)return new B(a,b,c,d);e.x=a;e.y=b;e.width=c;e.height=d;return e},Vb:function(a){v.Ax.push(a)},IA:[],qh:function(){var a=v.IA.pop();return void 0===a?new ja:a},$e:function(a){v.IA.push(a)},Bx:null,s:function(){var a=v.Bx;return null!==a?(v.Bx=null,a):new ma},q:function(a){a.reset();v.Bx=a},GA:[],
jb:function(){var a=v.GA.pop();return void 0===a?[]:a},sa:function(a){a.length=0;v.GA.push(a)},th:Object.freeze([]),Jl:1,ec:function(a){a.__gohashid=v.Jl++},nt:function(a){var b=a.__gohashid;void 0===b&&(b=v.Jl++,a.__gohashid=b);return b},md:function(a){return a.__gohashid},ea:function(a,b){b.Kx=a;ea[a]=b},Ia:function(a,b){function c(){}c.prototype=b.prototype;a.prototype=new c;a.prototype.constructor=a},Wh:function(a){a.MF=!0},defineProperty:function(a,b,c,d,e){v.j(a,"function","Util.defineProperty:classfunc");
v.j(b,"object","Util.defineProperty:propobj");v.j(c,"function","Util.defineProperty:getter");v.j(d,"function","Util.defineProperty:setter");for(var f in b){b=b[f];c={get:c,set:d,enumerable:!0};if(void 0!==e)for(var h in e)c[h]=e[h];Object.defineProperty(a.prototype,f,c);e=Object.getOwnPropertyDescriptor(a.prototype,f);b&&e&&Object.defineProperty(a.prototype,b,e);break}},VI:!1,u:function(a,b,c,d){v.j(a,"function","Util.defineReadOnlyProperty:classfunc");v.j(b,"object","Util.defineReadOnlyProperty:propobj");
v.j(c,"function","Util.defineReadOnlyProperty:getter");for(var e in b){var f=b[e];b={get:c,set:function(a){v.k('The property "'+f+'" is read-only and cannot be set to '+a)},enumerable:!0};if(void 0!==d)for(var h in d)b[h]=d[h];Object.defineProperty(a.prototype,e,b);d=Object.getOwnPropertyDescriptor(a.prototype,e);f&&d&&Object.defineProperty(a.prototype,f,d);break}},Pd:function(a,b){for(var c in b)b[c]=!0;a.prototype.IF=b},getTypeName:function(a){return void 0===a?"":"string"===typeof a?a:"function"===
typeof a?v.af(a):null===a?"*":""},af:function(a){if("function"===typeof a){if(a.Kx)return a.Kx;if(a.name)return a.name;var b=a.toString(),c=b.indexOf("("),b=b.substring(9,c).trim();if(""!==b)return a.Kx=b}else if("object"===typeof a&&a.constructor)return v.af(a.constructor);return typeof a},p:function(a,b,c){v.j(a,"function","Util.defineEnumValue:classfunc");v.j(b,"string","Util.defineEnumValue:name");v.j(c,"number","Util.defineEnumValue:num");c=new fa(a,b,c);Object.freeze(c);a[b]=c;var d=a.ju;d instanceof
na||(d=new na("string",fa),a.ju=d);d.add(b,c);return c},qb:function(a,b){if(!a||!b)return null;var c=void 0;try{"function"===typeof b?c=b(a):"function"===typeof a.getAttribute?(c=a.getAttribute(b),null===c&&(c=void 0)):c=a[b]}catch(d){}return c},Ja:function(a,b,c){if(a&&b)try{"function"===typeof b?b(a,c):"function"===typeof a.setAttribute?a.setAttribute(b,c):a[b]=c}catch(d){}},Wt:function(a,b){v.j(a,"object","Setting properties requires Objects as arguments");v.j(b,"object","Setting properties requires Objects as arguments");
var c=a instanceof D,d=a instanceof E,e;for(e in b){""===e&&v.k("Setting properties requires non-empty property names");var f=a,h=e;if(c||d){var k=e.indexOf(".");if(0<k){var l=e.substring(0,k);if(c)f=a.de(l);else if(f=a[l],void 0===f||null===f)f=a.Za[l];v.Ta(f)?h=e.substr(k+1):v.k("Unable to find object named: "+l+" in "+a.toString()+" when trying to set property: "+e)}}if("_"!==h[0]&&!v.UD(f,h))if(d&&"ModelChanged"===h){a.aG(b[h]);continue}else if(d&&"Changed"===h){a.xm(b[h]);continue}else if(d&&
v.UD(a.Za,h))f=a.Za;else if(d&&qa(a,h)){a.Uy(h,b[h]);continue}else if(a instanceof F&&"Changed"===h){a.xm(b[h]);continue}else v.k('Trying to set undefined property "'+h+'" on object: '+f.toString());f[h]=b[e];"_"===h[0]&&f instanceof G&&f.YF(h)}},UD:function(a,b){if(a.hasOwnProperty(b))return!0;for(var c=Object.getPrototypeOf(a);c&&c!==Function;){if(c.hasOwnProperty(b))return!0;var d=c.IF;if(d&&d[b])return!0;c=Object.getPrototypeOf(c)}return!1},dI:function(a){for(var b=[],c=0;256>c;c++)b[c]=c;for(var d=
0,e=0,c=0;256>c;c++)d=(d+b[c]+119)%256,e=b[c],b[c]=b[d],b[d]=e;for(var d=c=0,f="",h=0;h<a.length;h++)c=(c+1)%256,d=(d+b[c])%256,e=b[c],b[c]=b[d],b[d]=e,f+=String.fromCharCode(a.charCodeAt(h)^b[(b[c]+b[d])%256]);return f},cH:function(a){for(var b=[],c=0;256>c;c++)b["0123456789abcdef".charAt(c>>4)+"0123456789abcdef".charAt(c&15)]=String.fromCharCode(c);a.length%2&&(a="0"+a);for(var d=[],e=0,c=0;c<a.length;c+=2)d[e++]=b[a.substr(c,2)];a=d.join("");return""===a?"0":a},ug:function(a){return v.dI(v.cH(a))},
Hl:null,adym:"7da71ca0ad381e90",vfo:"2be640fdb262",mG:"@COLOR1",nG:"@COLOR2"};
v.Hl=function(){var a=window.document.createElement("canvas"),b=a.getContext("2d");b[v.ug("7ca11abfd022028846")]=v.ug("398c3597c01238");for(var c=["5da73c80a3330d854f9e5e671d6633","32ab5ff3b26f42dc0ed90f22422913b54ae6247590da4bb21c324ba3a84e385776","54a702f3e53909c447824c6706603faf4cfb236cdfda5de14c134ba1a95a2d4c7cc6f93c1387","74bf19bce72555874c86"],d=1;5>d;d++)b[v.ug("7ca11abfd7330390")](v.ug(c[d-1]),10,15*d+0);b[v.ug("7ca11abfd022028846")]=v.ug("39f046ebb36e4b");for(d=1;5>d;d++)b[v.ug("7ca11abfd7330390")](v.ug(c[d-
1]),10,15*d+0);if(4!==c.length||"5"!==c[0][0]||"7"!==c[3][0])v.p=function(a,b){var c=new fa(a,b,2);Object.freeze(c);a[b]=c;var d=a.ju;d instanceof na||(d=new na("string",fa),a.ju=d);d.add(b,c);return c};return a}();function fa(a,b,c){v.ec(this);this.VA=a;this.Ob=b;this.RF=c}v.ea("EnumValue",fa);fa.prototype.toString=function(){return v.af(this.VA)+"."+this.Ob};v.u(fa,{qe:"classType"},function(){return this.VA});v.u(fa,{name:"name"},function(){return this.Ob});v.u(fa,{value:"value"},function(){return this.RF});
var ra;fa.findName=ra=function(a,b){if(void 0===b||null===b||""===b)return null;v.j(a,"function","findName:classfunc");v.j(b,"string","EnumValue.findName:name");var c=a.ju;return c instanceof na?c.ja(b):null};function sa(){this.TA=[]}sa.prototype.toString=function(){return this.TA.join("")};sa.prototype.add=function(a){""!==a&&this.TA.push(a)};function ta(){}
function va(a){void 0===a&&(a=42);this.seed=a;this.vx=48271;this.iu=2147483647;this.FA=this.iu/this.vx;this.uF=this.iu%this.vx;this.tF=1/this.iu;this.random()}va.prototype.random=function(){var a=this.seed%this.FA*this.vx-this.seed/this.FA*this.uF;this.seed=0<a?a:a+this.iu;return this.seed*this.tF};function wa(){}v.u(wa,{i:"iterator"},function(){return this});wa.prototype.reset=wa.prototype.reset=function(){};wa.prototype.next=wa.prototype.hasNext=wa.prototype.next=function(){return!1};
wa.prototype.first=wa.prototype.first=function(){return null};wa.prototype.any=function(){return!1};wa.prototype.all=function(){return!0};wa.prototype.each=function(){return this};wa.prototype.map=function(){return this};wa.prototype.filter=function(){return this};wa.prototype.concat=function(a){return a.i};v.u(wa,{count:"count"},function(){return 0});wa.prototype.Df=function(){};wa.prototype.toString=function(){return"EmptyIterator"};var xa=new wa;function ya(a){this.key=-1;this.value=a}
v.Pd(ya,{key:!0,value:!0});v.u(ya,{i:"iterator"},function(){return this});ya.prototype.reset=ya.prototype.reset=function(){this.key=-1};ya.prototype.next=ya.prototype.hasNext=ya.prototype.next=function(){return-1===this.key?(this.key=0,!0):!1};ya.prototype.first=ya.prototype.first=function(){this.key=0;return this.value};ya.prototype.any=function(a){this.key=-1;return a(this.value)};ya.prototype.all=function(a){this.key=-1;return a(this.value)};
ya.prototype.each=function(a){this.key=-1;a(this.value);return this};ya.prototype.map=function(a){return new ya(a(this.value))};ya.prototype.filter=function(a){return a(this.value)?new ya(this.value):xa};ya.prototype.concat=function(a){return new za(this,a.i)};v.u(ya,{count:"count"},function(){return 1});ya.prototype.Df=function(){this.value=null};ya.prototype.toString=function(){return"SingletonIterator("+this.value+")"};function za(a,b){this.Gk=a;this.Hk=b;this.ku=!1}v.Pd(za,{key:!0,value:!0});
v.u(za,{i:"iterator"},function(){return this});za.prototype.reset=za.prototype.reset=function(){this.Gk.reset();this.Hk.reset();this.ku=!1};za.prototype.next=za.prototype.hasNext=za.prototype.next=function(){if(!this.ku){var a=this.Gk;if(a.next())return this.key=a.key,this.value=a.value,!0;this.ku=!0}return this.ku&&(a=this.Hk,a.next())?(this.key=a.key,this.value=a.value,!0):!1};za.prototype.first=za.prototype.first=function(){this.reset();return this.next()?this.value:null};
za.prototype.any=function(a){return this.Gk.any(a)||this.Hk.any(a)?!0:!1};za.prototype.all=function(a){return this.Gk.all(a)&&this.Hk.all(a)?!0:!1};za.prototype.each=function(a){this.Gk.each(a);this.Hk.each(a);return this};za.prototype.map=function(a){return new za(this.Gk.map(a),this.Hk.map(a))};za.prototype.filter=function(a){return new za(this.Gk.filter(a),this.Hk.filter(a))};za.prototype.concat=function(a){return new za(this,a.i)};v.u(za,{count:"count"},function(){return this.Gk.count+this.Hk.count});
za.prototype.Df=function(){this.value=this.key=null};za.prototype.toString=function(){return"ConcatIterator()"};function Aa(a){this.sc=a;this.Ih=null;this.reset()}v.Pd(Aa,{key:!0,value:!0});v.u(Aa,{i:"iterator"},function(){return this});v.defineProperty(Aa,{Ym:"predicate"},function(){return this.Ih},function(a){this.Ih=a});Aa.prototype.reset=Aa.prototype.reset=function(){var a=this.sc;a.Wb=null;this.eb=a.F;this.Oc=-1};
Aa.prototype.next=Aa.prototype.hasNext=Aa.prototype.next=function(){var a=this.sc;if(a.F!==this.eb){if(0>this.key)return!1;v.Ka(a)}var a=a.n,b=a.length,c=++this.Oc,d=this.Ih;if(null!==d)for(;c<b;){var e=a[c];if(d(e))return this.key=this.Oc=c,this.value=e,!0;c++}else{if(c<b)return this.key=c,this.value=a[c],!0;this.Df()}return!1};
Aa.prototype.first=Aa.prototype.first=function(){var a=this.sc;this.eb=a.F;this.Oc=0;var a=a.n,b=a.length,c=this.Ih;if(null!==c){for(var d=0;d<b;){var e=a[d];if(c(e))return this.key=this.Oc=d,this.value=e;d++}return null}return 0<b?(e=a[0],this.key=0,this.value=e):null};Aa.prototype.any=function(a){var b=this.sc;b.Wb=null;var c=b.F;this.Oc=-1;for(var d=b.n,e=d.length,f=this.Ih,h=0;h<e;h++){var k=d[h];if(null===f||f(k)){if(a(k))return!0;b.F!==c&&v.Ka(b)}}return!1};
Aa.prototype.all=function(a){var b=this.sc;b.Wb=null;var c=b.F;this.Oc=-1;for(var d=b.n,e=d.length,f=this.Ih,h=0;h<e;h++){var k=d[h];if(null===f||f(k)){if(!a(k))return!1;b.F!==c&&v.Ka(b)}}return!0};Aa.prototype.each=function(a){var b=this.sc;b.Wb=null;var c=b.F;this.Oc=-1;for(var d=b.n,e=d.length,f=this.Ih,h=0;h<e;h++){var k=d[h];if(null===f||f(k))a(k),b.F!==c&&v.Ka(b)}return this};
Aa.prototype.map=function(a){var b=this.sc;b.Wb=null;var c=b.F;this.Oc=-1;for(var d=[],e=b.n,f=e.length,h=this.Ih,k=0;k<f;k++){var l=e[k];if(null===h||h(l))d.push(a(l)),b.F!==c&&v.Ka(b)}a=new I;a.n=d;a.Bc();return a.i};Aa.prototype.filter=function(a){var b=this.sc;b.Wb=null;var c=b.F;this.Oc=-1;for(var d=[],e=b.n,f=e.length,h=this.Ih,k=0;k<f;k++){var l=e[k];if(null===h||h(l))a(l)&&d.push(l),b.F!==c&&v.Ka(b)}a=new I(b.ia);a.n=d;a.Bc();return a.i};
Aa.prototype.concat=function(a){this.sc.Wb=null;return new za(this,a.i)};v.u(Aa,{count:"count"},function(){var a=this.Ih;if(null!==a){for(var b=0,c=this.sc.n,d=c.length,e=0;e<d;e++)a(c[e])&&b++;return b}return this.sc.n.length});Aa.prototype.Df=function(){this.key=-1;this.value=null;this.eb=-1;this.Ih=null;this.sc.Wb=this};Aa.prototype.toString=function(){return"ListIterator@"+this.Oc+"/"+this.sc.count};function Ba(a){this.sc=a;this.reset()}v.Pd(Ba,{key:!0,value:!0});v.u(Ba,{i:"iterator"},function(){return this});
Ba.prototype.reset=Ba.prototype.reset=function(){var a=this.sc;a.tj=null;this.eb=a.F;this.Oc=a.n.length};Ba.prototype.next=Ba.prototype.hasNext=Ba.prototype.next=function(){var a=this.sc;if(a.F!==this.eb){if(0>this.key)return!1;v.Ka(a)}var b=--this.Oc;if(0<=b)return this.key=b,this.value=a.n[b],!0;this.Df();return!1};Ba.prototype.first=Ba.prototype.first=function(){var a=this.sc;this.eb=a.F;var b=a.n;this.Oc=a=b.length-1;return 0<=a?(b=b[a],this.key=a,this.value=b):null};
Ba.prototype.any=function(a){var b=this.sc;b.tj=null;var c=b.F,d=b.n,e=d.length;this.Oc=e;for(e-=1;0<=e;e--){if(a(d[e]))return!0;b.F!==c&&v.Ka(b)}return!1};Ba.prototype.all=function(a){var b=this.sc;b.tj=null;var c=b.F,d=b.n,e=d.length;this.Oc=e;for(e-=1;0<=e;e--){if(!a(d[e]))return!1;b.F!==c&&v.Ka(b)}return!0};Ba.prototype.each=function(a){var b=this.sc;b.tj=null;var c=b.F,d=b.n,e=d.length;this.Oc=e;for(e-=1;0<=e;e--)a(d[e]),b.F!==c&&v.Ka(b);return this};
Ba.prototype.map=function(a){var b=this.sc;b.tj=null;var c=b.F,d=[],e=b.n,f=e.length;this.Oc=f;for(f-=1;0<=f;f--)d.push(a(e[f])),b.F!==c&&v.Ka(b);a=new I;a.n=d;a.Bc();return a.i};Ba.prototype.filter=function(a){var b=this.sc;b.tj=null;var c=b.F,d=[],e=b.n,f=e.length;this.Oc=f;for(f-=1;0<=f;f--){var h=e[f];a(h)&&d.push(h);b.F!==c&&v.Ka(b)}a=new I(b.ia);a.n=d;a.Bc();return a.i};Ba.prototype.concat=function(a){this.sc.tj=null;return new za(this,a.i)};v.u(Ba,{count:"count"},function(){return this.sc.n.length});
Ba.prototype.Df=function(){this.key=-1;this.value=null;this.eb=-1;this.sc.tj=this};Ba.prototype.toString=function(){return"ListIteratorBackwards("+this.Oc+"/"+this.sc.count+")"};
function I(a){v.ec(this);this.D=!1;this.n=[];this.F=0;this.tj=this.Wb=null;void 0===a||null===a?this.ia=null:"string"===typeof a?"object"===a||"string"===a||"number"===a||"boolean"===a||"function"===a?this.ia=a:v.va(a,"the string 'object', 'number', 'string', 'boolean', or 'function'","List constructor: type"):"function"===typeof a?this.ia=a===Object?"object":a===String?"string":a===Number?"number":a===Boolean?"boolean":a===Function?"function":a:v.va(a,"null, a primitive type name, or a class type",
"List constructor: type")}v.ea("List",I);I.prototype.Bc=function(){var a=this.F;a++;999999999<a&&(a=0);this.F=a};I.prototype.freeze=I.prototype.freeze=function(){this.D=!0;return this};I.prototype.thaw=I.prototype.Oa=function(){this.D=!1;return this};I.prototype.toString=function(){return"List("+v.getTypeName(this.ia)+")#"+v.md(this)};I.prototype.add=I.prototype.push=I.prototype.add=function(a){null!==a&&(this.D&&v.ka(this,a),this.n.push(a),this.Bc())};
I.prototype.addAll=I.prototype.Tc=function(a){if(null===a)return this;this.D&&v.ka(this);var b=this.n;if(v.isArray(a))for(var c=v.Va(a),d=0;d<c;d++){var e=v.Pa(a,d);b.push(e)}else for(a=a.i;a.next();)e=a.value,b.push(e);this.Bc();return this};I.prototype.clear=I.prototype.clear=function(){this.D&&v.ka(this);this.n.length=0;this.Bc()};I.prototype.contains=I.prototype.has=I.prototype.contains=function(a){return null===a?!1:-1!==this.n.indexOf(a)};
I.prototype.indexOf=I.prototype.indexOf=function(a){return null===a?-1:this.n.indexOf(a)};I.prototype.elt=I.prototype.get=I.prototype.da=function(a){var b=this.n;(0>a||a>=b.length)&&v.va(a,"0 <= i < length",I,"elt:i");return b[a]};I.prototype.setElt=I.prototype.set=I.prototype.Ig=function(a,b){var c=this.n;(0>a||a>=c.length)&&v.va(a,"0 <= i < length",I,"setElt:i");this.D&&v.ka(this,a);c[a]=b};I.prototype.first=I.prototype.first=function(){var a=this.n;return 0===a.length?null:a[0]};
I.prototype.last=I.prototype.Td=function(){var a=this.n,b=a.length;return 0<b?a[b-1]:null};I.prototype.pop=I.prototype.pop=function(){this.D&&v.ka(this);var a=this.n;return 0<a.length?a.pop():null};I.prototype.any=function(a){for(var b=this.n,c=this.F,d=b.length,e=0;e<d;e++){if(a(b[e]))return!0;this.F!==c&&v.Ka(this)}return!1};I.prototype.all=function(a){for(var b=this.n,c=this.F,d=b.length,e=0;e<d;e++){if(!a(b[e]))return!1;this.F!==c&&v.Ka(this)}return!0};
I.prototype.each=function(a){for(var b=this.n,c=this.F,d=b.length,e=0;e<d;e++)a(b[e]),this.F!==c&&v.Ka(this);return this};I.prototype.map=function(a){for(var b=new I,c=[],d=this.n,e=this.F,f=d.length,h=0;h<f;h++)c.push(a(d[h])),this.F!==e&&v.Ka(this);b.n=c;b.Bc();return b};I.prototype.filter=function(a){for(var b=new I(this.ia),c=[],d=this.n,e=this.F,f=d.length,h=0;h<f;h++){var k=d[h];a(k)&&c.push(k);this.F!==e&&v.Ka(this)}b.n=c;b.Bc();return b};I.prototype.concat=function(a){return this.copy().Tc(a)};
I.prototype.insertAt=I.prototype.Cd=function(a,b){0>a&&v.va(a,">= 0",I,"insertAt:i");this.D&&v.ka(this,a);var c=this.n;a>=c.length?c.push(b):c.splice(a,0,b);this.Bc();return!0};I.prototype.remove=I.prototype["delete"]=I.prototype.remove=function(a){if(null===a)return!1;this.D&&v.ka(this,a);var b=this.n;a=b.indexOf(a);if(-1===a)return!1;a===b.length-1?b.pop():b.splice(a,1);this.Bc();return!0};
I.prototype.removeAt=I.prototype.Vc=function(a){var b=this.n;(0>a||a>=b.length)&&v.va(a,"0 <= i < length",I,"removeAt:i");this.D&&v.ka(this,a);a===b.length-1?b.pop():b.splice(a,1);this.Bc()};I.prototype.removeRange=I.prototype.removeRange=function(a,b){var c=this.n;(0>a||a>=c.length)&&v.va(a,"0 <= from < length",I,"elt:from");(0>b||b>=c.length)&&v.va(b,"0 <= to < length",I,"elt:to");this.D&&v.ka(this,a);var d=c.slice((b||a)+1||c.length);c.length=0>a?c.length+a:a;c.push.apply(c,d);this.Bc()};
I.prototype.copy=function(){var a=new I(this.ia),b=this.n;0<b.length&&(a.n=Array.prototype.slice.call(b));return a};I.prototype.toArray=I.prototype.dc=function(){for(var a=this.n,b=this.count,c=Array(b),d=0;d<b;d++)c[d]=a[d];return c};I.prototype.toSet=I.prototype.dF=function(){for(var a=new J(this.ia),b=this.n,c=this.count,d=0;d<c;d++)a.add(b[d]);return a};I.prototype.sort=I.prototype.sort=function(a){this.D&&v.ka(this);this.n.sort(a);this.Bc();return this};
I.prototype.sortRange=I.prototype.Ip=function(a,b,c){var d=this.n,e=d.length;void 0===b&&(b=0);void 0===c&&(c=e);this.D&&v.ka(this);var f=c-b;if(1>=f)return this;(0>b||b>=e-1)&&v.va(b,"0 <= from < length",I,"sortRange:from");if(2===f)return c=d[b],e=d[b+1],0<a(c,e)&&(d[b]=e,d[b+1]=c,this.Bc()),this;if(0===b)if(c>=e)d.sort(a);else for(f=d.slice(0,c),f.sort(a),a=0;a<c;a++)d[a]=f[a];else if(c>=e)for(f=d.slice(b),f.sort(a),a=b;a<e;a++)d[a]=f[a-b];else for(f=d.slice(b,c),f.sort(a),a=b;a<c;a++)d[a]=f[a-
b];this.Bc();return this};I.prototype.reverse=I.prototype.reverse=function(){this.D&&v.ka(this);this.n.reverse();this.Bc();return this};v.u(I,{count:"count"},function(){return this.n.length});v.u(I,{size:"size"},function(){return this.n.length});v.u(I,{length:"length"},function(){return this.n.length});v.u(I,{i:"iterator"},function(){if(0>=this.n.length)return xa;var a=this.Wb;return null!==a?(a.reset(),a):new Aa(this)});
v.u(I,{Tm:"iteratorBackwards"},function(){if(0>=this.n.length)return xa;var a=this.tj;return null!==a?(a.reset(),a):new Ba(this)});function Da(a){this.Kh=a;this.reset()}v.Pd(Da,{key:!0,value:!0});v.u(Da,{i:"iterator"},function(){return this});Da.prototype.reset=Da.prototype.reset=function(){var a=this.Kh;a.Wb=null;this.eb=a.F;this.cb=null};
Da.prototype.next=Da.prototype.hasNext=Da.prototype.next=function(){var a=this.Kh;if(a.F!==this.eb){if(null===this.key)return!1;v.Ka(a)}var b=this.cb,b=null===b?a.Da:b.Ua;if(null!==b)return this.cb=b,this.value=b.value,this.key=b.key,!0;this.Df();return!1};Da.prototype.first=Da.prototype.first=function(){var a=this.Kh;this.eb=a.F;a=a.Da;if(null!==a){this.cb=a;var b=a.value;this.key=a.key;return this.value=b}return null};
Da.prototype.any=function(a){var b=this.Kh;b.Wb=null;var c=b.F;this.cb=null;for(var d=b.Da;null!==d;){if(a(d.value))return!0;b.F!==c&&v.Ka(b);d=d.Ua}return!1};Da.prototype.all=function(a){var b=this.Kh;b.Wb=null;var c=b.F;this.cb=null;for(var d=b.Da;null!==d;){if(!a(d.value))return!1;b.F!==c&&v.Ka(b);d=d.Ua}return!0};Da.prototype.each=function(a){var b=this.Kh;b.Wb=null;var c=b.F;this.cb=null;for(var d=b.Da;null!==d;)a(d.value),b.F!==c&&v.Ka(b),d=d.Ua;return this};
Da.prototype.map=function(a){var b=this.Kh;b.Wb=null;for(var c=new I,d=b.F,e=b.Da;null!==e;)c.add(a(e.value)),b.F!==d&&v.Ka(b),e=e.Ua;return c.i};Da.prototype.filter=function(a){var b=this.Kh;b.Wb=null;for(var c=new I(b.ia),d=b.F,e=b.Da;null!==e;){var f=e.value;a(f)&&c.add(f);b.F!==d&&v.Ka(b);e=e.Ua}return c.i};Da.prototype.concat=function(a){this.Kh.Wb=null;return new za(this,a.i)};v.u(Da,{count:"count"},function(){return this.Kh.gd});
Da.prototype.Df=function(){this.value=this.key=null;this.eb=-1;this.Kh.Wb=this};Da.prototype.toString=function(){return null!==this.cb?"SetIterator@"+this.cb.value:"SetIterator"};
function J(a){v.ec(this);this.D=!1;void 0===a||null===a?this.ia=null:"string"===typeof a?"object"===a||"string"===a||"number"===a?this.ia=a:v.va(a,"the string 'object', 'number' or 'string'","Set constructor: type"):"function"===typeof a?this.ia=a===Object?"object":a===String?"string":a===Number?"number":a:v.va(a,"null, a primitive type name, or a class type","Set constructor: type");this.hd={};this.gd=0;this.Wb=null;this.F=0;this.Fh=this.Da=null}v.ea("Set",J);
J.prototype.Bc=function(){var a=this.F;a++;999999999<a&&(a=0);this.F=a};J.prototype.freeze=J.prototype.freeze=function(){this.D=!0;return this};J.prototype.thaw=J.prototype.Oa=function(){this.D=!1;return this};J.prototype.toString=function(){return"Set("+v.getTypeName(this.ia)+")#"+v.md(this)};
J.prototype.add=J.prototype.add=function(a){if(null===a)return!1;this.D&&v.ka(this,a);var b=a;v.Ta(a)&&(b=v.nt(a));return void 0===this.hd[b]?(this.gd++,a=new Ea(a,a),this.hd[b]=a,b=this.Fh,null===b?this.Da=a:(a.no=b,b.Ua=a),this.Fh=a,this.Bc(),!0):!1};J.prototype.addAll=J.prototype.Tc=function(a){if(null===a)return this;this.D&&v.ka(this);if(v.isArray(a))for(var b=v.Va(a),c=0;c<b;c++)this.add(v.Pa(a,c));else for(a=a.i;a.next();)this.add(a.value);return this};
J.prototype.contains=J.prototype.has=J.prototype.contains=function(a){if(null===a)return!1;var b=a;return v.Ta(a)&&(b=v.md(a),void 0===b)?!1:void 0!==this.hd[b]};J.prototype.containsAll=function(a){if(null===a)return!0;for(a=a.i;a.next();)if(!this.contains(a.value))return!1;return!0};J.prototype.containsAny=function(a){if(null===a)return!0;for(a=a.i;a.next();)if(this.contains(a.value))return!0;return!1};J.prototype.first=J.prototype.first=function(){var a=this.Da;return null===a?null:a.value};
J.prototype.any=function(a){for(var b=this.F,c=this.Da;null!==c;){if(a(c.value))return!0;this.F!==b&&v.Ka(this);c=c.Ua}return!1};J.prototype.all=function(a){for(var b=this.F,c=this.Da;null!==c;){if(!a(c.value))return!1;this.F!==b&&v.Ka(this);c=c.Ua}return!0};J.prototype.each=function(a){for(var b=this.F,c=this.Da;null!==c;)a(c.value),this.F!==b&&v.Ka(this),c=c.Ua;return this};J.prototype.map=function(a){for(var b=new J,c=this.F,d=this.Da;null!==d;)b.add(a(d.value)),this.F!==c&&v.Ka(this),d=d.Ua;return b};
J.prototype.filter=function(a){for(var b=new J(this.ia),c=this.F,d=this.Da;null!==d;){var e=d.value;a(e)&&b.add(e);this.F!==c&&v.Ka(this);d=d.Ua}return b};J.prototype.concat=function(a){return this.copy().Tc(a)};
J.prototype.remove=J.prototype["delete"]=J.prototype.remove=function(a){if(null===a)return!1;this.D&&v.ka(this,a);var b=a;if(v.Ta(a)&&(b=v.md(a),void 0===b))return!1;a=this.hd[b];if(void 0===a)return!1;var c=a.Ua,d=a.no;null!==c&&(c.no=d);null!==d&&(d.Ua=c);this.Da===a&&(this.Da=c);this.Fh===a&&(this.Fh=d);delete this.hd[b];this.gd--;this.Bc();return!0};
J.prototype.removeAll=J.prototype.bA=function(a){if(null===a)return this;this.D&&v.ka(this);if(v.isArray(a))for(var b=v.Va(a),c=0;c<b;c++)this.remove(v.Pa(a,c));else for(a=a.i;a.next();)this.remove(a.value);return this};J.prototype.retainAll=function(a){if(null===a||0===this.count)return this;this.D&&v.ka(this);var b=new J(this.ia);b.Tc(a);a=[];for(var c=this.i;c.next();){var d=c.value;b.contains(d)||a.push(d)}this.bA(a);return this};
J.prototype.clear=J.prototype.clear=function(){this.D&&v.ka(this);this.hd={};this.gd=0;this.Fh=this.Da=null;this.Bc()};J.prototype.copy=function(){var a=new J(this.ia),b=this.hd,c;for(c in b)a.add(b[c].value);return a};J.prototype.toArray=J.prototype.dc=function(){var a=Array(this.gd),b=this.hd,c=0,d;for(d in b)a[c]=b[d].value,c++;return a};J.prototype.toList=function(){var a=new I(this.ia),b=this.hd,c;for(c in b)a.add(b[c].value);return a};v.u(J,{count:"count"},function(){return this.gd});
v.u(J,{size:"size"},function(){return this.gd});v.u(J,{i:"iterator"},function(){if(0>=this.gd)return xa;var a=this.Wb;return null!==a?(a.reset(),a):new Da(this)});function Ha(a){this.Ga=a;this.reset()}v.Pd(Ha,{key:!0,value:!0});v.u(Ha,{i:"iterator"},function(){return this});Ha.prototype.reset=Ha.prototype.reset=function(){this.eb=this.Ga.F;this.cb=null};
Ha.prototype.next=Ha.prototype.hasNext=Ha.prototype.next=function(){var a=this.Ga;if(a.F!==this.eb){if(null===this.key)return!1;v.Ka(a)}var b=this.cb,b=null===b?a.Da:b.Ua;if(null!==b)return this.cb=b,this.value=this.key=a=b.key,!0;this.Df();return!1};Ha.prototype.first=Ha.prototype.first=function(){var a=this.Ga;this.eb=a.F;a=a.Da;return null!==a?(this.cb=a,this.value=this.key=a=a.key):null};
Ha.prototype.any=function(a){var b=this.Ga,c=b.F;this.cb=null;for(var d=b.Da;null!==d;){if(a(d.key))return!0;b.F!==c&&v.Ka(b);d=d.Ua}return!1};Ha.prototype.all=function(a){var b=this.Ga,c=b.F;this.cb=null;for(var d=b.Da;null!==d;){if(!a(d.key))return!1;b.F!==c&&v.Ka(b);d=d.Ua}return!0};Ha.prototype.each=function(a){var b=this.Ga,c=b.F;this.cb=null;for(var d=b.Da;null!==d;)a(d.key),b.F!==c&&v.Ka(b),d=d.Ua;return this};
Ha.prototype.map=function(a){var b=this.Ga,c=b.F;this.cb=null;for(var d=new I,e=b.Da;null!==e;)d.add(a(e.key)),b.F!==c&&v.Ka(b),e=e.Ua;return d.i};Ha.prototype.filter=function(a){var b=this.Ga,c=b.F;this.cb=null;for(var d=new I(b.wi),e=b.Da;null!==e;){var f=e.key;a(f)&&d.add(f);b.F!==c&&v.Ka(b);e=e.Ua}return d.i};Ha.prototype.concat=function(a){return new za(this,a.i)};v.u(Ha,{count:"count"},function(){return this.Ga.gd});Ha.prototype.Df=function(){this.value=this.key=null;this.eb=-1};
Ha.prototype.toString=function(){return null!==this.cb?"MapKeySetIterator@"+this.cb.value:"MapKeySetIterator"};function Ja(a){v.ec(this);this.D=!0;this.Ga=a}v.Ia(Ja,J);Ja.prototype.freeze=function(){return this};Ja.prototype.Oa=function(){return this};Ja.prototype.toString=function(){return"MapKeySet("+this.Ga.toString()+")"};Ja.prototype.add=Ja.prototype.set=Ja.prototype.add=function(){v.k("This Set is read-only: "+this.toString());return!1};
Ja.prototype.contains=Ja.prototype.has=Ja.prototype.contains=function(a){return this.Ga.contains(a)};Ja.prototype.remove=Ja.prototype["delete"]=Ja.prototype.remove=function(){v.k("This Set is read-only: "+this.toString());return!1};Ja.prototype.clear=Ja.prototype.clear=function(){v.k("This Set is read-only: "+this.toString())};Ja.prototype.first=Ja.prototype.first=function(){var a=this.Ga.Da;return null!==a?a.key:null};
Ja.prototype.any=function(a){for(var b=this.Ga.Da;null!==b;){if(a(b.key))return!0;b=b.Ua}return!1};Ja.prototype.all=function(a){for(var b=this.Ga.Da;null!==b;){if(!a(b.key))return!1;b=b.Ua}return!0};Ja.prototype.each=function(a){for(var b=this.Ga.Da;null!==b;)a(b.key),b=b.Ua;return this};Ja.prototype.map=function(a){for(var b=new J,c=this.Ga.Da;null!==c;)b.add(a(c.key)),c=c.Ua;return b};
Ja.prototype.filter=function(a){for(var b=new J(this.Ga.wi),c=this.Ga.Da;null!==c;){var d=c.key;a(d)&&b.add(d);c=c.Ua}return b};Ja.prototype.concat=function(a){return this.dF().Tc(a)};Ja.prototype.copy=function(){return new Ja(this.Ga)};Ja.prototype.toSet=Ja.prototype.dF=function(){var a=new J(this.Ga.wi),b=this.Ga.hd,c;for(c in b)a.add(b[c].key);return a};Ja.prototype.toArray=Ja.prototype.dc=function(){var a=this.Ga.hd,b=Array(this.Ga.gd),c=0,d;for(d in a)b[c]=a[d].key,c++;return b};
Ja.prototype.toList=function(){var a=new I(this.ia),b=this.Ga.hd,c;for(c in b)a.add(b[c].key);return a};v.u(Ja,{count:"count"},function(){return this.Ga.gd});v.u(Ja,{size:"size"},function(){return this.Ga.gd});v.u(Ja,{i:"iterator"},function(){return 0>=this.Ga.gd?xa:new Ha(this.Ga)});function La(a){this.Ga=a;this.reset()}v.Pd(La,{key:!0,value:!0});v.u(La,{i:"iterator"},function(){return this});La.prototype.reset=La.prototype.reset=function(){var a=this.Ga;a.uj=null;this.eb=a.F;this.cb=null};
La.prototype.next=La.prototype.hasNext=La.prototype.next=function(){var a=this.Ga;if(a.F!==this.eb){if(null===this.key)return!1;v.Ka(a)}var b=this.cb,b=null===b?a.Da:b.Ua;if(null!==b)return this.cb=b,this.value=b.value,this.key=b.key,!0;this.Df();return!1};La.prototype.first=La.prototype.first=function(){var a=this.Ga;this.eb=a.F;a=a.Da;if(null!==a){this.cb=a;var b=a.value;this.key=a.key;return this.value=b}return null};
La.prototype.any=function(a){var b=this.Ga;b.uj=null;var c=b.F;this.cb=null;for(var d=b.Da;null!==d;){if(a(d.value))return!0;b.F!==c&&v.Ka(b);d=d.Ua}return!1};La.prototype.all=function(a){var b=this.Ga;b.uj=null;var c=b.F;this.cb=null;for(var d=b.Da;null!==d;){if(!a(d.value))return!1;b.F!==c&&v.Ka(b);d=d.Ua}return!0};La.prototype.each=function(a){var b=this.Ga;b.uj=null;var c=b.F;this.cb=null;for(var d=b.Da;null!==d;)a(d.value),b.F!==c&&v.Ka(b),d=d.Ua;return this};
La.prototype.map=function(a){var b=this.Ga;b.uj=null;var c=b.F;this.cb=null;for(var d=new I,e=b.Da;null!==e;)d.add(a(e.value)),b.F!==c&&v.Ka(b),e=e.Ua;return d.i};La.prototype.filter=function(a){var b=this.Ga;b.uj=null;var c=b.F;this.cb=null;for(var d=new I(b.wi),e=b.Da;null!==e;){var f=e.value;a(f)&&d.add(f);b.F!==c&&v.Ka(b);e=e.Ua}return d.i};La.prototype.concat=function(a){this.Ga.uj=null;return new za(this,a.i)};v.u(La,{count:"count"},function(){return this.Ga.gd});
La.prototype.Df=function(){this.value=this.key=null;this.eb=-1;this.Ga.uj=this};La.prototype.toString=function(){return null!==this.cb?"MapValueSetIterator@"+this.cb.value:"MapValueSetIterator"};function Ea(a,b){this.key=a;this.value=b;this.no=this.Ua=null}v.Pd(Ea,{key:!0,value:!0});Ea.prototype.toString=function(){return"{"+this.key+":"+this.value+"}"};function Ma(a){this.Ga=a;this.reset()}v.Pd(Ma,{key:!0,value:!0});v.u(Ma,{i:"iterator"},function(){return this});
Ma.prototype.reset=Ma.prototype.reset=function(){var a=this.Ga;a.Wb=null;this.eb=a.F;this.cb=null};Ma.prototype.next=Ma.prototype.hasNext=Ma.prototype.next=function(){var a=this.Ga;if(a.F!==this.eb){if(null===this.key)return!1;v.Ka(a)}var b=this.cb,b=null===b?a.Da:b.Ua;if(null!==b)return this.cb=b,this.key=b.key,this.value=b.value,!0;this.Df();return!1};
Ma.prototype.first=Ma.prototype.first=function(){var a=this.Ga;this.eb=a.F;a=a.Da;return null!==a?(this.cb=a,this.key=a.key,this.value=a.value,a):null};Ma.prototype.any=function(a){var b=this.Ga;b.Wb=null;var c=b.F;this.cb=null;for(var d=b.Da;null!==d;){if(a(d))return!0;b.F!==c&&v.Ka(b);d=d.Ua}return!1};Ma.prototype.all=function(a){var b=this.Ga;b.Wb=null;var c=b.F;this.cb=null;for(var d=b.Da;null!==d;){if(!a(d))return!1;b.F!==c&&v.Ka(b);d=d.Ua}return!0};
Ma.prototype.each=function(a){var b=this.Ga;b.Wb=null;var c=b.F;this.cb=null;for(var d=b.Da;null!==d;)a(d),b.F!==c&&v.Ka(b),d=d.Ua;return this};Ma.prototype.map=function(a){var b=this.Ga;b.Wb=null;var c=b.F;this.cb=null;for(var d=new I,e=b.Da;null!==e;)d.add(a(e)),b.F!==c&&v.Ka(b),e=e.Ua;return d.i};Ma.prototype.filter=function(a){var b=this.Ga;b.Wb=null;var c=b.F;this.cb=null;for(var d=new I,e=b.Da;null!==e;)a(e)&&d.add(e),b.F!==c&&v.Ka(b),e=e.Ua;return d.i};
Ma.prototype.concat=function(a){this.Ga.Wb=null;return new za(this,a.i)};v.u(Ma,{count:"count"},function(){return this.Ga.gd});Ma.prototype.Df=function(){this.value=this.key=null;this.eb=-1;this.Ga.Wb=this};Ma.prototype.toString=function(){return null!==this.cb?"MapIterator@"+this.cb:"MapIterator"};
function na(a,b){v.ec(this);this.D=!1;void 0===a||null===a?this.wi=null:"string"===typeof a?"object"===a||"string"===a||"number"===a?this.wi=a:v.va(a,"the string 'object', 'number' or 'string'","Map constructor: keytype"):"function"===typeof a?this.wi=a===Object?"object":a===String?"string":a===Number?"number":a:v.va(a,"null, a primitive type name, or a class type","Map constructor: keytype");void 0===b||null===b?this.Gs=null:"string"===typeof b?"object"===b||"string"===b||"boolean"===b||"number"===
b||"function"===b?this.Gs=b:v.va(b,"the string 'object', 'number', 'string', 'boolean', or 'function'","Map constructor: valtype"):"function"===typeof b?this.Gs=b===Object?"object":b===String?"string":b===Number?"number":b===Boolean?"boolean":b===Function?"function":b:v.va(b,"null, a primitive type name, or a class type","Map constructor: valtype");this.hd={};this.gd=0;this.uj=this.Wb=null;this.F=0;this.Fh=this.Da=null}v.ea("Map",na);
na.prototype.Bc=function(){var a=this.F;a++;999999999<a&&(a=0);this.F=a};na.prototype.freeze=na.prototype.freeze=function(){this.D=!0;return this};na.prototype.thaw=na.prototype.Oa=function(){this.D=!1;return this};na.prototype.toString=function(){return"Map("+v.getTypeName(this.wi)+","+v.getTypeName(this.Gs)+")#"+v.md(this)};
na.prototype.add=na.prototype.set=na.prototype.add=function(a,b){this.D&&v.ka(this,a);var c=a;v.Ta(a)&&(c=v.nt(a));var d=this.hd[c];if(void 0===d)return this.gd++,d=new Ea(a,b),this.hd[c]=d,c=this.Fh,null===c?this.Da=d:(d.no=c,c.Ua=d),this.Fh=d,this.Bc(),!0;d.value=b;return!1};na.prototype.addAll=na.prototype.Tc=function(a){if(null===a)return this;if(v.isArray(a))for(var b=v.Va(a),c=0;c<b;c++){var d=v.Pa(a,c);this.add(d.key,d.value)}else for(a=a.i;a.next();)this.add(a.key,a.value);return this};
na.prototype.first=na.prototype.first=function(){return this.Da};na.prototype.any=function(a){for(var b=this.F,c=this.Da;null!==c;){if(a(c))return!0;this.F!==b&&v.Ka(this);c=c.Ua}return!1};na.prototype.all=function(a){for(var b=this.F,c=this.Da;null!==c;){if(!a(c))return!1;this.F!==b&&v.Ka(this);c=c.Ua}return!0};na.prototype.each=function(a){for(var b=this.F,c=this.Da;null!==c;)a(c),this.F!==b&&v.Ka(this),c=c.Ua;return this};
na.prototype.map=function(a){for(var b=new na(this.wi),c=this.F,d=this.Da;null!==d;)b.add(d.key,a(d)),this.F!==c&&v.Ka(this),d=d.Ua;return b};na.prototype.filter=function(a){for(var b=new na(this.wi,this.Gs),c=this.F,d=this.Da;null!==d;)a(d)&&b.add(d.key,d.value),this.F!==c&&v.Ka(this),d=d.Ua;return b};na.prototype.concat=function(a){return this.copy().Tc(a)};na.prototype.contains=na.prototype.has=na.prototype.contains=function(a){var b=a;return v.Ta(a)&&(b=v.md(a),void 0===b)?!1:void 0!==this.hd[b]};
na.prototype.getValue=na.prototype.get=na.prototype.ja=function(a){var b=a;if(v.Ta(a)&&(b=v.md(a),void 0===b))return null;a=this.hd[b];return void 0===a?null:a.value};
na.prototype.remove=na.prototype["delete"]=na.prototype.remove=function(a){if(null===a)return!1;this.D&&v.ka(this,a);var b=a;if(v.Ta(a)&&(b=v.md(a),void 0===b))return!1;a=this.hd[b];if(void 0===a)return!1;var c=a.Ua,d=a.no;null!==c&&(c.no=d);null!==d&&(d.Ua=c);this.Da===a&&(this.Da=c);this.Fh===a&&(this.Fh=d);delete this.hd[b];this.gd--;this.Bc();return!0};na.prototype.clear=na.prototype.clear=function(){this.D&&v.ka(this);this.hd={};this.gd=0;this.Fh=this.Da=null;this.Bc()};
na.prototype.copy=function(){var a=new na(this.wi,this.Gs),b=this.hd,c;for(c in b){var d=b[c];a.add(d.key,d.value)}return a};na.prototype.toArray=na.prototype.dc=function(){var a=this.hd,b=Array(this.gd),c=0,d;for(d in a){var e=a[d];b[c]=new Ea(e.key,e.value);c++}return b};na.prototype.toKeySet=na.prototype.cj=function(){return new Ja(this)};v.u(na,{count:"count"},function(){return this.gd});v.u(na,{size:"size"},function(){return this.gd});
v.u(na,{i:"iterator"},function(){if(0>=this.count)return xa;var a=this.Wb;return null!==a?(a.reset(),a):new Ma(this)});v.u(na,{jE:"iteratorKeys"},function(){return 0>=this.count?xa:new Ha(this)});v.u(na,{kE:"iteratorValues"},function(){if(0>=this.count)return xa;var a=this.uj;return null!==a?(a.reset(),a):new La(this)});function y(a,b){void 0===a?this.y=this.x=0:(this.x=a,this.y=b);this.D=!1}v.ea("Point",y);v.Wh(y);v.Pd(y,{x:!0,y:!0});y.prototype.assign=function(a){this.x=a.x;this.y=a.y};
y.prototype.setTo=y.prototype.m=function(a,b){this.x=a;this.y=b;return this};y.prototype.set=y.prototype.set=function(a){this.Cb();this.x=a.x;this.y=a.y;return this};y.prototype.copy=function(){var a=new y;a.x=this.x;a.y=this.y;return a};g=y.prototype;g.Ea=function(){this.D=!0;Object.freeze(this);return this};g.R=function(){return Object.isFrozen(this)?this:this.copy().freeze()};g.freeze=function(){this.D=!0;return this};
g.Oa=function(){Object.isFrozen(this)&&v.k("cannot thaw constant: "+this);this.D=!1;return this};g.Cb=function(a){if(this.D){var b="The Point is frozen, so its properties cannot be set: "+this.toString();void 0!==a&&(b+="  to value: "+a);v.k(b)}};y.parse=function(a){if("string"===typeof a){a=a.split(" ");for(var b=0,c=0;""===a[b];)b++;var d=a[b++];d&&(c=parseFloat(d));for(var e=0;""===a[b];)b++;(d=a[b++])&&(e=parseFloat(d));return new y(c,e)}return new y};
y.stringify=function(a){return a instanceof y?a.x.toString()+" "+a.y.toString():a.toString()};y.prototype.toString=function(){return"Point("+this.x+","+this.y+")"};y.prototype.equals=y.prototype.K=function(a){return a instanceof y?this.x===a.x&&this.y===a.y:!1};y.prototype.equalTo=y.prototype.ww=function(a,b){return this.x===a&&this.y===b};y.prototype.equalsApprox=y.prototype.Fc=function(a){return K(this.x,a.x)&&K(this.y,a.y)};
y.prototype.add=y.prototype.add=function(a){this.Cb();this.x+=a.x;this.y+=a.y;return this};y.prototype.subtract=y.prototype.cu=function(a){this.Cb();this.x-=a.x;this.y-=a.y;return this};y.prototype.offset=y.prototype.offset=function(a,b){this.Cb();this.x+=a;this.y+=b;return this};
y.prototype.rotate=y.prototype.rotate=function(a){this.Cb();if(0===a)return this;var b=this.x,c=this.y;if(0===b&&0===c)return this;var d=0,e=0;360<=a?a-=360:0>a&&(a+=360);90===a?(d=0,e=1):180===a?(d=-1,e=0):270===a?(d=0,e=-1):(a=a*Math.PI/180,d=Math.cos(a),e=Math.sin(a));this.x=d*b-e*c;this.y=e*b+d*c;return this};y.prototype.scale=y.prototype.scale=function(a,b){this.x*=a;this.y*=b;return this};
y.prototype.distanceSquaredPoint=y.prototype.sf=function(a){var b=a.x-this.x;a=a.y-this.y;return b*b+a*a};y.prototype.distanceSquared=y.prototype.To=function(a,b){var c=a-this.x,d=b-this.y;return c*c+d*d};y.prototype.normalize=y.prototype.normalize=function(){this.Cb();var a=this.x,b=this.y,c=Math.sqrt(a*a+b*b);0<c&&(this.x=a/c,this.y=b/c);return this};y.prototype.directionPoint=y.prototype.xc=function(a){return Na(a.x-this.x,a.y-this.y)};
y.prototype.direction=y.prototype.direction=function(a,b){return Na(a-this.x,b-this.y)};function Na(a,b){if(0===a)return 0<b?90:0>b?270:0;if(0===b)return 0<a?0:180;if(isNaN(a)||isNaN(b))return 0;var c=180*Math.atan(Math.abs(b/a))/Math.PI;0>a?c=0>b?c+180:180-c:0>b&&(c=360-c);return c}y.prototype.projectOntoLineSegment=function(a,b,c,d){Oa(a,b,c,d,this.x,this.y,this);return this};y.prototype.projectOntoLineSegmentPoint=function(a,b){Oa(a.x,a.y,b.x,b.y,this.x,this.y,this);return this};
y.prototype.snapToGrid=function(a,b,c,d){Pa(this.x,this.y,a,b,c,d,this);return this};y.prototype.snapToGridPoint=function(a,b){Pa(this.x,this.y,a.x,a.y,b.width,b.height,this);return this};y.prototype.setRectSpot=y.prototype.Xt=function(a,b){this.Cb();this.x=a.x+b.x*a.width+b.offsetX;this.y=a.y+b.y*a.height+b.offsetY;return this};y.prototype.setSpot=y.prototype.Zt=function(a,b,c,d,e){this.Cb();this.x=a+e.x*c+e.offsetX;this.y=b+e.y*d+e.offsetY;return this};
y.prototype.transform=function(a){a.ub(this);return this};function Qa(a,b){b.Yh(a);return a}var Sa;y.distanceLineSegmentSquared=Sa=function(a,b,c,d,e,f){var h=e-c,k=f-d,l=h*h+k*k;c-=a;d-=b;var m=-c*h-d*k;if(0>=m||m>=l)return h=e-a,k=f-b,Math.min(c*c+d*d,h*h+k*k);a=h*d-k*c;return a*a/l};var Ta;y.distanceSquared=Ta=function(a,b,c,d){a=c-a;b=d-b;return a*a+b*b};var Wa;
y.direction=Wa=function(a,b,c,d){a=c-a;b=d-b;if(0===a)return 0<b?90:0>b?270:0;if(0===b)return 0<a?0:180;if(isNaN(a)||isNaN(b))return 0;d=180*Math.atan(Math.abs(b/a))/Math.PI;0>a?d=0>b?d+180:180-d:0>b&&(d=360-d);return d};y.prototype.isReal=y.prototype.G=function(){return isFinite(this.x)&&isFinite(this.y)};function ia(a,b){void 0===a?this.height=this.width=0:(this.width=a,this.height=b);this.D=!1}v.ea("Size",ia);v.Wh(ia);v.Pd(ia,{width:!0,height:!0});
ia.prototype.assign=function(a){this.width=a.width;this.height=a.height};ia.prototype.setTo=ia.prototype.m=function(a,b){this.width=a;this.height=b;return this};ia.prototype.set=ia.prototype.set=function(a){this.Cb();this.width=a.width;this.height=a.height;return this};ia.prototype.copy=function(){var a=new ia;a.width=this.width;a.height=this.height;return a};g=ia.prototype;g.Ea=function(){this.D=!0;Object.freeze(this);return this};g.R=function(){return Object.isFrozen(this)?this:this.copy().freeze()};
g.freeze=function(){this.D=!0;return this};g.Oa=function(){Object.isFrozen(this)&&v.k("cannot thaw constant: "+this);this.D=!1;return this};g.Cb=function(a){if(this.D){var b="The Size is frozen, so its properties cannot be set: "+this.toString();void 0!==a&&(b+="  to value: "+a);v.k(b)}};ia.parse=function(a){if("string"===typeof a){a=a.split(" ");for(var b=0,c=0;""===a[b];)b++;var d=a[b++];d&&(c=parseFloat(d));for(var e=0;""===a[b];)b++;(d=a[b++])&&(e=parseFloat(d));return new ia(c,e)}return new ia};
ia.stringify=function(a){return a instanceof ia?a.width.toString()+" "+a.height.toString():a.toString()};ia.prototype.toString=function(){return"Size("+this.width+","+this.height+")"};ia.prototype.equals=ia.prototype.K=function(a){return a instanceof ia?this.width===a.width&&this.height===a.height:!1};ia.prototype.equalTo=ia.prototype.ww=function(a,b){return this.width===a&&this.height===b};ia.prototype.equalsApprox=ia.prototype.Fc=function(a){return K(this.width,a.width)&&K(this.height,a.height)};
ia.prototype.isReal=ia.prototype.G=function(){return isFinite(this.width)&&isFinite(this.height)};
function B(a,b,c,d){void 0===a?this.height=this.width=this.y=this.x=0:a instanceof y?b instanceof y?(this.x=Math.min(a.x,b.x),this.y=Math.min(a.y,b.y),this.width=Math.abs(a.x-b.x),this.height=Math.abs(a.y-b.y)):b instanceof ia?(this.x=a.x,this.y=a.y,this.width=b.width,this.height=b.height):v.k("Incorrect arguments supplied to Rect constructor"):(this.x=a,this.y=b,this.width=c,this.height=d);this.D=!1}v.ea("Rect",B);v.Wh(B);v.Pd(B,{x:!0,y:!0,width:!0,height:!0});
B.prototype.assign=function(a){this.x=a.x;this.y=a.y;this.width=a.width;this.height=a.height};function Xa(a,b,c){a.width=b;a.height=c}B.prototype.setTo=B.prototype.m=function(a,b,c,d){this.x=a;this.y=b;this.width=c;this.height=d;return this};B.prototype.set=B.prototype.set=function(a){this.Cb();this.x=a.x;this.y=a.y;this.width=a.width;this.height=a.height;return this};B.prototype.setPoint=B.prototype.Af=function(a){this.Cb();this.x=a.x;this.y=a.y;return this};
B.prototype.setSize=function(a){this.Cb();this.width=a.width;this.height=a.height;return this};B.prototype.copy=function(){var a=new B;a.x=this.x;a.y=this.y;a.width=this.width;a.height=this.height;return a};g=B.prototype;g.Ea=function(){this.D=!0;Object.freeze(this);return this};g.R=function(){return Object.isFrozen(this)?this:this.copy().freeze()};g.freeze=function(){this.D=!0;return this};g.Oa=function(){Object.isFrozen(this)&&v.k("cannot thaw constant: "+this);this.D=!1;return this};
g.Cb=function(a){if(this.D){var b="The Rect is frozen, so its properties cannot be set: "+this.toString();void 0!==a&&(b+="  to value: "+a);v.k(b)}};B.parse=function(a){if("string"===typeof a){a=a.split(" ");for(var b=0,c=0;""===a[b];)b++;var d=a[b++];d&&(c=parseFloat(d));for(var e=0;""===a[b];)b++;(d=a[b++])&&(e=parseFloat(d));for(var f=0;""===a[b];)b++;(d=a[b++])&&(f=parseFloat(d));for(var h=0;""===a[b];)b++;(d=a[b++])&&(h=parseFloat(d));return new B(c,e,f,h)}return new B};
B.stringify=function(a){return a instanceof B?a.x.toString()+" "+a.y.toString()+" "+a.width.toString()+" "+a.height.toString():a.toString()};B.prototype.toString=function(){return"Rect("+this.x+","+this.y+","+this.width+","+this.height+")"};B.prototype.equals=B.prototype.K=function(a){return a instanceof B?this.x===a.x&&this.y===a.y&&this.width===a.width&&this.height===a.height:!1};B.prototype.equalTo=B.prototype.ww=function(a,b,c,d){return this.x===a&&this.y===b&&this.width===c&&this.height===d};
B.prototype.equalsApprox=B.prototype.Fc=function(a){return K(this.x,a.x)&&K(this.y,a.y)&&K(this.width,a.width)&&K(this.height,a.height)};B.prototype.containsPoint=B.prototype.Fa=function(a){return this.x<=a.x&&this.x+this.width>=a.x&&this.y<=a.y&&this.y+this.height>=a.y};B.prototype.containsRect=B.prototype.Vj=function(a){return this.x<=a.x&&a.x+a.width<=this.x+this.width&&this.y<=a.y&&a.y+a.height<=this.y+this.height};
B.prototype.contains=B.prototype.contains=function(a,b,c,d){void 0===c&&(c=0);void 0===d&&(d=0);return this.x<=a&&a+c<=this.x+this.width&&this.y<=b&&b+d<=this.y+this.height};B.prototype.reset=function(){this.Cb();this.height=this.width=this.y=this.x=0};B.prototype.offset=B.prototype.offset=function(a,b){this.Cb();this.x+=a;this.y+=b;return this};B.prototype.inflate=B.prototype.Rf=function(a,b){return Ya(this,b,a,b,a)};
B.prototype.addMargin=B.prototype.ew=function(a){return Ya(this,a.top,a.right,a.bottom,a.left)};B.prototype.subtractMargin=B.prototype.EI=function(a){return Ya(this,-a.top,-a.right,-a.bottom,-a.left)};B.prototype.grow=function(a,b,c,d){return Ya(this,a,b,c,d)};function Ya(a,b,c,d,e){a.Cb();var f=a.width;c+e<=-f?(a.x+=f/2,a.width=0):(a.x-=e,a.width+=c+e);c=a.height;b+d<=-c?(a.y+=c/2,a.height=0):(a.y-=b,a.height+=b+d);return a}B.prototype.intersectRect=function(a){return Za(this,a.x,a.y,a.width,a.height)};
B.prototype.intersect=function(a,b,c,d){return Za(this,a,b,c,d)};function Za(a,b,c,d,e){a.Cb();var f=Math.max(a.x,b),h=Math.max(a.y,c);b=Math.min(a.x+a.width,b+d);c=Math.min(a.y+a.height,c+e);a.x=f;a.y=h;a.width=Math.max(0,b-f);a.height=Math.max(0,c-h);return a}B.prototype.intersectsRect=B.prototype.yg=function(a){return this.WD(a.x,a.y,a.width,a.height)};
B.prototype.intersects=B.prototype.WD=function(a,b,c,d){var e=this.width,f=this.x;if(Infinity!==e&&Infinity!==c&&(e+=f,c+=a,isNaN(c)||isNaN(e)||f>c||a>e))return!1;a=this.height;c=this.y;return Infinity!==a&&Infinity!==d&&(a+=c,d+=b,isNaN(d)||isNaN(a)||c>d||b>a)?!1:!0};function $a(a,b){var c=a.width,d=b.width+10+10,e=a.x,f=b.x-10;if(e>d+f||f>c+e)return!1;c=a.height;d=b.height+10+10;e=a.y;f=b.y-10;return e>d+f||f>c+e?!1:!0}B.prototype.unionPoint=B.prototype.dj=function(a){return ab(this,a.x,a.y,0,0)};
B.prototype.unionRect=B.prototype.ci=function(a){return ab(this,a.x,a.y,a.width,a.height)};B.prototype.union=B.prototype.mF=function(a,b,c,d){this.Cb();void 0===c&&(c=0);void 0===d&&(d=0);return ab(this,a,b,c,d)};function ab(a,b,c,d,e){var f=Math.min(a.x,b),h=Math.min(a.y,c);b=Math.max(a.x+a.width,b+d);c=Math.max(a.y+a.height,c+e);a.x=f;a.y=h;a.width=b-f;a.height=c-h;return a}
B.prototype.setSpot=B.prototype.Zt=function(a,b,c){this.Cb();this.x=a-c.offsetX-c.x*this.width;this.y=b-c.offsetY-c.y*this.height;return this};var db;B.contains=db=function(a,b,c,d,e,f,h,k){void 0===h&&(h=0);void 0===k&&(k=0);return a<=e&&e+h<=a+c&&b<=f&&f+k<=b+d};B.intersects=function(a,b,c,d,e,f,h,k){c+=a;h+=e;if(a>h||e>c)return!1;a=d+b;k+=f;return b>k||f>a?!1:!0};v.defineProperty(B,{left:"left"},function(){return this.x},function(a){this.Cb(a);this.x=a});
v.defineProperty(B,{top:"top"},function(){return this.y},function(a){this.Cb(a);this.y=a});v.defineProperty(B,{right:"right"},function(){return this.x+this.width},function(a){this.Cb(a);this.x+=a-(this.x+this.width)});v.defineProperty(B,{bottom:"bottom"},function(){return this.y+this.height},function(a){this.Cb(a);this.y+=a-(this.y+this.height)});v.defineProperty(B,{position:"position"},function(){return new y(this.x,this.y)},function(a){this.Cb(a);this.x=a.x;this.y=a.y});
v.defineProperty(B,{size:"size"},function(){return new ia(this.width,this.height)},function(a){this.Cb(a);this.width=a.width;this.height=a.height});v.defineProperty(B,{bl:"center"},function(){return new y(this.x+this.width/2,this.y+this.height/2)},function(a){this.Cb(a);this.x=a.x-this.width/2;this.y=a.y-this.height/2});v.defineProperty(B,{na:"centerX"},function(){return this.x+this.width/2},function(a){this.Cb(a);this.x=a-this.width/2});
v.defineProperty(B,{ua:"centerY"},function(){return this.y+this.height/2},function(a){this.Cb(a);this.y=a-this.height/2});B.prototype.isReal=B.prototype.G=function(){return isFinite(this.x)&&isFinite(this.y)&&isFinite(this.width)&&isFinite(this.height)};B.prototype.isEmpty=function(){return 0===this.width&&0===this.height};
function eb(a,b,c,d){void 0===a?this.left=this.bottom=this.right=this.top=0:void 0===b?this.left=this.bottom=this.right=this.top=a:void 0===c?(d=b,this.top=a,this.right=b,this.bottom=a,this.left=d):void 0!==d?(this.top=a,this.right=b,this.bottom=c,this.left=d):v.k("Invalid arguments to Margin constructor");this.D=!1}v.ea("Margin",eb);v.Wh(eb);v.Pd(eb,{top:!0,right:!0,bottom:!0,left:!0});eb.prototype.assign=function(a){this.top=a.top;this.right=a.right;this.bottom=a.bottom;this.left=a.left};
eb.prototype.setTo=eb.prototype.m=function(a,b,c,d){this.Cb();this.top=a;this.right=b;this.bottom=c;this.left=d;return this};eb.prototype.set=eb.prototype.set=function(a){this.Cb();this.top=a.top;this.right=a.right;this.bottom=a.bottom;this.left=a.left;return this};eb.prototype.copy=function(){var a=new eb;a.top=this.top;a.right=this.right;a.bottom=this.bottom;a.left=this.left;return a};g=eb.prototype;g.Ea=function(){this.D=!0;Object.freeze(this);return this};
g.R=function(){return Object.isFrozen(this)?this:this.copy().freeze()};g.freeze=function(){this.D=!0;return this};g.Oa=function(){Object.isFrozen(this)&&v.k("cannot thaw constant: "+this);this.D=!1;return this};g.Cb=function(a){if(this.D){var b="The Margin is frozen, so its properties cannot be set: "+this.toString();void 0!==a&&(b+="  to value: "+a);v.k(b)}};
eb.parse=function(a){if("string"===typeof a){a=a.split(" ");for(var b=0,c=NaN;""===a[b];)b++;var d=a[b++];d&&(c=parseFloat(d));if(isNaN(c))return new eb;for(var e=NaN;""===a[b];)b++;(d=a[b++])&&(e=parseFloat(d));if(isNaN(e))return new eb(c);for(var f=NaN;""===a[b];)b++;(d=a[b++])&&(f=parseFloat(d));if(isNaN(f))return new eb(c,e);for(var h=NaN;""===a[b];)b++;(d=a[b++])&&(h=parseFloat(d));return isNaN(h)?new eb(c,e):new eb(c,e,f,h)}return new eb};
eb.stringify=function(a){return a instanceof eb?a.top.toString()+" "+a.right.toString()+" "+a.bottom.toString()+" "+a.left.toString():a.toString()};eb.prototype.toString=function(){return"Margin("+this.top+","+this.right+","+this.bottom+","+this.left+")"};eb.prototype.equals=eb.prototype.K=function(a){return a instanceof eb?this.top===a.top&&this.right===a.right&&this.bottom===a.bottom&&this.left===a.left:!1};
eb.prototype.equalTo=eb.prototype.ww=function(a,b,c,d){return this.top===a&&this.right===b&&this.bottom===c&&this.left===d};eb.prototype.equalsApprox=eb.prototype.Fc=function(a){return K(this.top,a.top)&&K(this.right,a.right)&&K(this.bottom,a.bottom)&&K(this.left,a.left)};eb.prototype.isReal=eb.prototype.G=function(){return isFinite(this.top)&&isFinite(this.right)&&isFinite(this.bottom)&&isFinite(this.left)};function ja(){this.m11=1;this.m21=this.m12=0;this.m22=1;this.dy=this.dx=0}v.Wh(ja);
v.Pd(ja,{m11:!0,m12:!0,m21:!0,m22:!0,dx:!0,dy:!0});ja.prototype.set=ja.prototype.set=function(a){this.m11=a.m11;this.m12=a.m12;this.m21=a.m21;this.m22=a.m22;this.dx=a.dx;this.dy=a.dy;return this};ja.prototype.copy=function(){var a=new ja;a.m11=this.m11;a.m12=this.m12;a.m21=this.m21;a.m22=this.m22;a.dx=this.dx;a.dy=this.dy;return a};ja.prototype.toString=function(){return"Transform("+this.m11+","+this.m12+","+this.m21+","+this.m22+","+this.dx+","+this.dy+")"};
ja.prototype.equals=ja.prototype.K=function(a){return a instanceof ja?this.m11===a.m11&&this.m12===a.m12&&this.m21===a.m21&&this.m22===a.m22&&this.dx===a.dx&&this.dy===a.dy:!1};ja.prototype.isIdentity=ja.prototype.ut=function(){return 1===this.m11&&0===this.m12&&0===this.m21&&1===this.m22&&0===this.dx&&0===this.dy};ja.prototype.reset=ja.prototype.reset=function(){this.m11=1;this.m21=this.m12=0;this.m22=1;this.dy=this.dx=0;return this};
ja.prototype.multiply=ja.prototype.multiply=function(a){var b=this.m12*a.m11+this.m22*a.m12,c=this.m11*a.m21+this.m21*a.m22,d=this.m12*a.m21+this.m22*a.m22,e=this.m11*a.dx+this.m21*a.dy+this.dx,f=this.m12*a.dx+this.m22*a.dy+this.dy;this.m11=this.m11*a.m11+this.m21*a.m12;this.m12=b;this.m21=c;this.m22=d;this.dx=e;this.dy=f;return this};
ja.prototype.multiplyInverted=ja.prototype.sE=function(a){var b=1/(a.m11*a.m22-a.m12*a.m21),c=a.m22*b,d=-a.m12*b,e=-a.m21*b,f=a.m11*b,h=b*(a.m21*a.dy-a.m22*a.dx),k=b*(a.m12*a.dx-a.m11*a.dy);a=this.m12*c+this.m22*d;b=this.m11*e+this.m21*f;e=this.m12*e+this.m22*f;f=this.m11*h+this.m21*k+this.dx;h=this.m12*h+this.m22*k+this.dy;this.m11=this.m11*c+this.m21*d;this.m12=a;this.m21=b;this.m22=e;this.dx=f;this.dy=h;return this};
ja.prototype.invert=ja.prototype.zz=function(){var a=1/(this.m11*this.m22-this.m12*this.m21),b=-this.m12*a,c=-this.m21*a,d=this.m11*a,e=a*(this.m21*this.dy-this.m22*this.dx),f=a*(this.m12*this.dx-this.m11*this.dy);this.m11=this.m22*a;this.m12=b;this.m21=c;this.m22=d;this.dx=e;this.dy=f;return this};
ja.prototype.rotate=ja.prototype.rotate=function(a,b,c){360<=a?a-=360:0>a&&(a+=360);if(0===a)return this;this.translate(b,c);var d=0,e=0;90===a?(d=0,e=1):180===a?(d=-1,e=0):270===a?(d=0,e=-1):(e=a*Math.PI/180,d=Math.cos(e),e=Math.sin(e));a=this.m12*d+this.m22*e;var f=this.m11*-e+this.m21*d,h=this.m12*-e+this.m22*d;this.m11=this.m11*d+this.m21*e;this.m12=a;this.m21=f;this.m22=h;this.translate(-b,-c);return this};
ja.prototype.translate=ja.prototype.translate=function(a,b){this.dx+=this.m11*a+this.m21*b;this.dy+=this.m12*a+this.m22*b;return this};ja.prototype.scale=ja.prototype.scale=function(a,b){void 0===b&&(b=a);this.m11*=a;this.m12*=a;this.m21*=b;this.m22*=b;return this};ja.prototype.transformPoint=ja.prototype.ub=function(a){var b=a.x,c=a.y;a.x=b*this.m11+c*this.m21+this.dx;a.y=b*this.m12+c*this.m22+this.dy;return a};
ja.prototype.invertedTransformPoint=ja.prototype.Yh=function(a){var b=1/(this.m11*this.m22-this.m12*this.m21),c=-this.m12*b,d=this.m11*b,e=b*(this.m12*this.dx-this.m11*this.dy),f=a.x,h=a.y;a.x=f*this.m22*b+h*-this.m21*b+b*(this.m21*this.dy-this.m22*this.dx);a.y=f*c+h*d+e;return a};
ja.prototype.transformRect=ja.prototype.kF=function(a){var b=a.x,c=a.y,d=b+a.width,e=c+a.height,f=this.m11,h=this.m12,k=this.m21,l=this.m22,m=this.dx,n=this.dy,p=b*f+c*k+m,q=b*h+c*l+n,r=d*f+c*k+m,c=d*h+c*l+n,s=b*f+e*k+m,b=b*h+e*l+n,f=d*f+e*k+m,d=d*h+e*l+n,e=p,h=q,p=Math.min(p,r),e=Math.max(e,r),h=Math.min(h,c),q=Math.max(q,c),p=Math.min(p,s),e=Math.max(e,s),h=Math.min(h,b),q=Math.max(q,b),p=Math.min(p,f),e=Math.max(e,f),h=Math.min(h,d),q=Math.max(q,d);a.x=p;a.y=h;a.width=e-p;a.height=q-h;return a};
function L(a,b,c,d){void 0===a?this.offsetY=this.offsetX=this.y=this.x=0:(void 0===b&&(b=0),void 0===c&&(c=0),void 0===d&&(d=0),this.x=a,this.y=b,this.offsetX=c,this.offsetY=d);this.D=!1}v.ea("Spot",L);v.Wh(L);v.Pd(L,{x:!0,y:!0,offsetX:!0,offsetY:!0});L.prototype.assign=function(a){this.x=a.x;this.y=a.y;this.offsetX=a.offsetX;this.offsetY=a.offsetY};L.prototype.setTo=L.prototype.m=function(a,b,c,d){this.Cb();this.x=a;this.y=b;this.offsetX=c;this.offsetY=d;return this};
L.prototype.set=L.prototype.set=function(a){this.Cb();this.x=a.x;this.y=a.y;this.offsetX=a.offsetX;this.offsetY=a.offsetY;return this};L.prototype.copy=function(){var a=new L;a.x=this.x;a.y=this.y;a.offsetX=this.offsetX;a.offsetY=this.offsetY;return a};g=L.prototype;g.Ea=function(){this.D=!0;Object.freeze(this);return this};g.R=function(){return Object.isFrozen(this)?this:this.copy().freeze()};g.freeze=function(){this.D=!0;return this};
g.Oa=function(){Object.isFrozen(this)&&v.k("cannot thaw constant: "+this);this.D=!1;return this};g.Cb=function(a){if(this.D){var b="The Spot is frozen, so its properties cannot be set: "+this.toString();void 0!==a&&(b+="  to value: "+a);v.k(b)}};function fb(a,b){a.x=NaN;a.y=NaN;a.offsetX=b;return a}var nb;
L.parse=nb=function(a){if("string"===typeof a){a=a.trim();if("None"===a)return sb;if("TopLeft"===a)return tb;if("Top"===a||"TopCenter"===a||"MiddleTop"===a)return ub;if("TopRight"===a)return vb;if("Left"===a||"LeftCenter"===a||"MiddleLeft"===a)return wb;if("Center"===a)return Ab;if("Right"===a||"RightCenter"===a||"MiddleRight"===a)return Bb;if("BottomLeft"===a)return Db;if("Bottom"===a||"BottomCenter"===a||"MiddleBottom"===a)return Eb;if("BottomRight"===a)return Fb;if("TopSide"===a)return Gb;if("LeftSide"===
a)return Hb;if("RightSide"===a)return Nb;if("BottomSide"===a)return Ob;if("TopBottomSides"===a)return Pb;if("LeftRightSides"===a)return Qb;if("TopLeftSides"===a)return Ub;if("TopRightSides"===a)return Vb;if("BottomLeftSides"===a)return Zb;if("BottomRightSides"===a)return $b;if("NotTopSide"===a)return ac;if("NotLeftSide"===a)return bc;if("NotRightSide"===a)return cc;if("NotBottomSide"===a)return dc;if("AllSides"===a)return ec;if("Default"===a)return kc;a=a.split(" ");for(var b=0,c=0;""===a[b];)b++;
var d=a[b++];void 0!==d&&0<d.length&&(c=parseFloat(d));for(var e=0;""===a[b];)b++;d=a[b++];void 0!==d&&0<d.length&&(e=parseFloat(d));for(var f=0;""===a[b];)b++;d=a[b++];void 0!==d&&0<d.length&&(f=parseFloat(d));for(var h=0;""===a[b];)b++;d=a[b++];void 0!==d&&0<d.length&&(h=parseFloat(d));return new L(c,e,f,h)}return new L};L.stringify=function(a){return a instanceof L?a.cd()?a.x.toString()+" "+a.y.toString()+" "+a.offsetX.toString()+" "+a.offsetY.toString():a.toString():a.toString()};
L.prototype.toString=function(){return this.cd()?0===this.offsetX&&0===this.offsetY?"Spot("+this.x+","+this.y+")":"Spot("+this.x+","+this.y+","+this.offsetX+","+this.offsetY+")":this.K(sb)?"None":this.K(tb)?"TopLeft":this.K(ub)?"Top":this.K(vb)?"TopRight":this.K(wb)?"Left":this.K(Ab)?"Center":this.K(Bb)?"Right":this.K(Db)?"BottomLeft":this.K(Eb)?"Bottom":this.K(Fb)?"BottomRight":this.K(Gb)?"TopSide":this.K(Hb)?"LeftSide":this.K(Nb)?"RightSide":this.K(Ob)?"BottomSide":this.K(Pb)?"TopBottomSides":this.K(Qb)?
"LeftRightSides":this.K(Ub)?"TopLeftSides":this.K(Vb)?"TopRightSides":this.K(Zb)?"BottomLeftSides":this.K($b)?"BottomRightSides":this.K(ac)?"NotTopSide":this.K(bc)?"NotLeftSide":this.K(cc)?"NotRightSide":this.K(dc)?"NotBottomSide":this.K(ec)?"AllSides":this.K(kc)?"Default":"None"};L.prototype.equals=L.prototype.K=function(a){return a instanceof L?(this.x===a.x||isNaN(this.x)&&isNaN(a.x))&&(this.y===a.y||isNaN(this.y)&&isNaN(a.y))&&this.offsetX===a.offsetX&&this.offsetY===a.offsetY:!1};
L.prototype.opposite=function(){return new L(.5-(this.x-.5),.5-(this.y-.5),-this.offsetX,-this.offsetY)};L.prototype.includesSide=L.prototype.bp=function(a){if(!this.Vi())return!1;if(!a.Vi())if(a.K(lc))a=Hb;else if(a.K(mc))a=Nb;else if(a.K(nc))a=Gb;else if(a.K(oc))a=Ob;else return!1;a=a.offsetY;return(this.offsetY&a)===a};L.prototype.isSpot=L.prototype.cd=function(){return!isNaN(this.x)&&!isNaN(this.y)};L.prototype.isNoSpot=L.prototype.te=function(){return isNaN(this.x)||isNaN(this.y)};
L.prototype.isSide=L.prototype.Vi=function(){return this.te()&&1===this.offsetX&&0!==this.offsetY};L.prototype.isDefault=L.prototype.Uc=function(){return isNaN(this.x)&&isNaN(this.y)&&-1===this.offsetX&&0===this.offsetY};var sb;L.None=sb=fb(new L(0,0,0,0),0).Ea();var kc;L.Default=kc=fb(new L(0,0,-1,0),-1).Ea();var tb;L.TopLeft=tb=(new L(0,0,0,0)).Ea();var ub;L.TopCenter=ub=(new L(.5,0,0,0)).Ea();var vb;L.TopRight=vb=(new L(1,0,0,0)).Ea();var wb;L.LeftCenter=wb=(new L(0,.5,0,0)).Ea();var Ab;
L.Center=Ab=(new L(.5,.5,0,0)).Ea();var Bb;L.RightCenter=Bb=(new L(1,.5,0,0)).Ea();var Db;L.BottomLeft=Db=(new L(0,1,0,0)).Ea();var Eb;L.BottomCenter=Eb=(new L(.5,1,0,0)).Ea();var Fb;L.BottomRight=Fb=(new L(1,1,0,0)).Ea();var pc;L.MiddleTop=pc=ub;var qc;L.MiddleLeft=qc=wb;var rc;L.MiddleRight=rc=Bb;var sc;L.MiddleBottom=sc=Eb;var nc;L.Top=nc=ub;var lc;L.Left=lc=wb;var mc;L.Right=mc=Bb;var oc;L.Bottom=oc=Eb;var Gb;L.TopSide=Gb=fb(new L(0,0,1,v.ed),1).Ea();var Hb;
L.LeftSide=Hb=fb(new L(0,0,1,v.Nc),1).Ea();var Nb;L.RightSide=Nb=fb(new L(0,0,1,v.Xc),1).Ea();var Ob;L.BottomSide=Ob=fb(new L(0,0,1,v.Wc),1).Ea();var Pb;L.TopBottomSides=Pb=fb(new L(0,0,1,v.ed|v.Wc),1).Ea();var Qb;L.LeftRightSides=Qb=fb(new L(0,0,1,v.Nc|v.Xc),1).Ea();var Ub;L.TopLeftSides=Ub=fb(new L(0,0,1,v.ed|v.Nc),1).Ea();var Vb;L.TopRightSides=Vb=fb(new L(0,0,1,v.ed|v.Xc),1).Ea();var Zb;L.BottomLeftSides=Zb=fb(new L(0,0,1,v.Wc|v.Nc),1).Ea();var $b;
L.BottomRightSides=$b=fb(new L(0,0,1,v.Wc|v.Xc),1).Ea();var ac;L.NotTopSide=ac=fb(new L(0,0,1,v.Nc|v.Xc|v.Wc),1).Ea();var bc;L.NotLeftSide=bc=fb(new L(0,0,1,v.ed|v.Xc|v.Wc),1).Ea();var cc;L.NotRightSide=cc=fb(new L(0,0,1,v.ed|v.Nc|v.Wc),1).Ea();var dc;L.NotBottomSide=dc=fb(new L(0,0,1,v.ed|v.Nc|v.Xc),1).Ea();var ec;L.AllSides=ec=fb(new L(0,0,1,v.ed|v.Nc|v.Xc|v.Wc),1).Ea();function wc(){this.ff=[1,0,0,1,0,0]}
wc.prototype.copy=function(){var a=new wc;a.ff[0]=this.ff[0];a.ff[1]=this.ff[1];a.ff[2]=this.ff[2];a.ff[3]=this.ff[3];a.ff[4]=this.ff[4];a.ff[5]=this.ff[5];return a};function xc(a){this.type=a;this.r2=this.y2=this.x2=this.r1=this.y1=this.x1=0;this.mD=[];this.pattern=null}xc.prototype.addColorStop=function(a,b){this.mD.push({offset:a,color:b})};
function yc(a,b,c){this.fillStyle="#000000";this.font="10px sans-serif";this.globalAlpha=1;this.lineCap="butt";this.Um=0;this.lineJoin="miter";this.lineWidth=1;this.miterLimit=10;this.shadowBlur=0;this.shadowColor="rgba(0, 0, 0, 0)";this.shadowOffsetY=this.shadowOffsetX=0;this.strokeStyle="#000000";this.textAlign="start";this.ow=!1;this.pg=this.ns=this.ms=0;this.document=b||document;this.DD=c;this.Lw=null;this.path=[];this.Ri=new wc;this.stack=[];this.uf=[];this.uw=a;this.XH="http://www.w3.org/2000/svg";
this.width=this.uw.width;this.height=this.uw.height;this.Dl=zc(this,"svg",{width:this.width+"px",height:this.height+"px",OK:"0 0 "+this.uw.width+" "+this.uw.height});this.Dl.setAttributeNS("http://www.w3.org/2000/xmlns/","xmlns","http://www.w3.org/2000/svg");this.Dl.setAttributeNS("http://www.w3.org/2000/xmlns/","xmlns:xlink","http://www.w3.org/1999/xlink");Ac(this,1,0,0,1,0,0);a=v.Jl++;b=zc(this,"clipPath",{id:"mainClip"+a});b.appendChild(zc(this,"rect",{x:0,y:0,width:this.width,height:this.height}));
this.Dl.appendChild(b);this.uf[0].setAttributeNS(null,"clip-path","url(#mainClip"+a+")")}g=yc.prototype;g.arc=function(a,b,c,d,e,f){Bc(this,a,b,c,d,e,f)};g.beginPath=function(){this.path=[]};g.bezierCurveTo=function(a,b,c,d,e,f){this.path.push(["C",a,b,c,d,e,f])};g.clearRect=function(){};g.clip=function(){Cc(this,"clipPath",this.path,new wc)};g.closePath=function(){this.path.push(["z"])};g.createLinearGradient=function(a,b,c,d){var e=new xc("linear");e.x1=a;e.y1=b;e.x2=c;e.y2=d;return e};
g.createPattern=function(a){var b=new xc("pattern");b.pattern=a;return b};g.createRadialGradient=function(a,b,c,d,e,f){var h=new xc("radial");h.x1=a;h.y1=b;h.r1=c;h.x2=d;h.y2=e;h.r2=f;return h};
g.drawImage=function(a,b,c,d,e,f,h,k,l){var m="";a instanceof HTMLCanvasElement&&(m=a.toDataURL());a instanceof HTMLImageElement&&(m=a.src);m={x:0,y:0,width:a.naturalWidth,height:a.naturalHeight,href:m};m.preserveAspectRatio=Dc(d,k)&&Dc(e,l)?"xMidYMid slice":"none";var n="";k/=d;l/=e;if(0!==f||0!==h)n+=" translate("+f+", "+h+")";if(1!==k||1!==l)n+=" scale("+k+", "+l+")";if(0!==b||0!==c)n+=" translate("+-b+", "+-c+")";if(0!==b||0!==c||d!==a.naturalWidth||e!==a.naturalHeight)a="CLIP"+v.Jl++,f=zc(this,
"clipPath",{id:a}),f.appendChild(zc(this,"rect",{x:b,y:c,width:d,height:e})),this.Dl.appendChild(f),m["clip-path"]="url(#"+a+")";Ic(this,"image",m,this.Ri,n);this.addElement("image",m)};g.fill=function(){Cc(this,"fill",this.path,this.Ri)};g.vg=function(){this.ow?this.clip():this.fill()};g.fillRect=function(a,b,c,d){Jc(this,"fill",[a,b,c,d],this.Ri)};
g.fillText=function(a,b,c){a=[a,b,c];b=this.textAlign;"left"===b?b="start":"right"===b?b="end":"center"===b&&(b="middle");b={x:a[1],y:a[2],style:"font: "+this.font,"text-anchor":b};Ic(this,"fill",b,this.Ri);this.addElement("text",b,a[0])};g.lineTo=function(a,b){this.path.push(["L",a,b])};g.moveTo=function(a,b){this.path.push(["M",a,b])};g.quadraticCurveTo=function(a,b,c,d){this.path.push(["Q",a,b,c,d])};g.rect=function(a,b,c,d){this.path.push(["M",a,b],["L",a+c,b],["L",a+c,b+d],["L",a,b+d],["z"])};
g.restore=function(){this.Ri=this.stack.pop();this.path=this.stack.pop();var a=this.stack.pop();this.fillStyle=a.fillStyle;this.font=a.font;this.globalAlpha=a.globalAlpha;this.lineCap=a.lineCap;this.Um=a.Um;this.lineJoin=a.lineJoin;this.lineWidth=a.lineWidth;this.miterLimit=a.miterLimit;this.shadowBlur=a.shadowBlur;this.shadowColor=a.shadowColor;this.shadowOffsetX=a.shadowOffsetX;this.shadowOffsetY=a.shadowOffsetY;this.strokeStyle=a.strokeStyle;this.textAlign=a.textAlign};
g.save=function(){this.stack.push({fillStyle:this.fillStyle,font:this.font,globalAlpha:this.globalAlpha,lineCap:this.lineCap,Um:this.Um,lineJoin:this.lineJoin,lineWidth:this.lineWidth,miterLimit:this.miterLimit,shadowBlur:this.shadowBlur,shadowColor:this.shadowColor,shadowOffsetX:this.shadowOffsetX,shadowOffsetY:this.shadowOffsetY,strokeStyle:this.strokeStyle,textAlign:this.textAlign});for(var a=[],b=0;b<this.path.length;b++)a.push(this.path[b]);this.stack.push(a);this.stack.push(this.Ri.copy())};
g.setTransform=function(a,b,c,d,e,f){1===a&&0===b&&0===c&&1===d&&0===e&&0===f||Ac(this,a,b,c,d,e,f)};g.scale=function(){};g.stroke=function(){Cc(this,"stroke",this.path,this.Ri)};g.bj=function(){this.qn||this.stroke()};g.strokeRect=function(a,b,c,d){Jc(this,"stroke",[a,b,c,d],this.Ri)};function zc(a,b,c,d){a=a.document.createElementNS(a.XH,b);if(v.Ta(c))for(var e in c)a.setAttributeNS("href"===e?"http://www.w3.org/1999/xlink":"",e,c[e]);void 0!==d&&(a.textContent=d);return a}
g.addElement=function(a,b,c){a=zc(this,a,b,c);0<this.uf.length?this.uf[this.uf.length-1].appendChild(a):this.Dl.appendChild(a);return this.Lw=a};
function Ic(a,b,c,d,e){1!==a.globalAlpha&&(c.opacity=a.globalAlpha);"fill"===b?(/^rgba\(/.test(a.fillStyle)?(a=/^\s*rgba\s*\(([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\)\s*$/i.exec(a.fillStyle),c.fill="rgb("+a[1]+","+a[2]+","+a[3]+")",c["fill-opacity"]=a[4]):c.fill=a.fillStyle instanceof xc?Kc(a,a.fillStyle):a.fillStyle,c.stroke="none"):"stroke"===b&&(c.fill="none",/^rgba\(/.test(a.strokeStyle)?(b=/^\s*rgba\s*\(([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\)\s*$/i.exec(a.strokeStyle),
c.stroke="rgb("+b[1]+","+b[2]+","+b[3]+")",c["stroke-opacity"]=b[4]):c.stroke=a.strokeStyle instanceof xc?Kc(a,a.strokeStyle):a.strokeStyle,c["stroke-width"]=a.lineWidth,c["stroke-linecap"]=a.lineCap,c["stroke-linejoin"]=a.lineJoin,c["stroke-miterlimit"]=a.miterLimit);d=d.ff;d="matrix("+d[0]+", "+d[1]+", "+d[2]+", "+d[3]+", "+d[4]+", "+d[5]+")";void 0!==e&&(d+=e);c.transform=d}
function Kc(a,b){var c="GRAD"+v.Jl++,d;if("linear"===b.type)d={x1:b.x1,x2:b.x2,y1:b.y1,y2:b.y2,id:c,gradientUnits:"userSpaceOnUse"},d=zc(a,"linearGradient",d);else if("radial"===b.type)d={x1:b.x1,x2:b.x2,y1:b.y1,y2:b.y2,r1:b.r1,r2:b.r2,id:c},d=zc(a,"radialGradient",d);else if("pattern"===b.type){var e=b.pattern;d={width:e.width,height:e.height,id:c,patternUnits:"userSpaceOnUse"};var f="";e instanceof HTMLCanvasElement&&(f=e.toDataURL());e instanceof HTMLImageElement&&(f=e.src);e={x:0,y:0,width:e.width,
height:e.height,href:f};d=zc(a,"pattern",d);d.appendChild(zc(a,"image",e))}else throw Error("invalid gradient");for(var e=b.mD,f=e.length,h=[],k=0;k<f;k++){var l=e[k],m=l.color,l={offset:l.offset,"stop-color":m};/^rgba\(/.test(m)&&(m=/^\s*rgba\s*\(([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\)\s*$/i.exec(m),l["stop-color"]="rgb("+m[1]+","+m[2]+","+m[3]+")",l["stop-opacity"]=m[4]);h.push(l)}h.sort(function(a,b){return a.offset>b.offset?1:-1});for(k=0;k<f;k++)d.appendChild(zc(a,"stop",
h[k]));a.Dl.appendChild(d);return"url(#"+c+")"}function Jc(a,b,c,d){c={x:c[0],y:c[1],width:c[2],height:c[3]};Ic(a,b,c,d);a.addElement("rect",c)}
function Cc(a,b,c,d){for(var e=[],f=0;f<c.length;f++){var h=v.dl(c[f]),k=[h.shift()];if("A"===k[0])k.push(h.shift()+","+h.shift(),h.shift(),h.shift()+","+h.shift(),h.shift()+","+h.shift());else for(;h.length;)k.push(h.shift()+","+h.shift());e.push(k.join(" "))}c={d:e.join(" ")};Ic(a,b,c,d);"clipPath"===b?(b="CLIP"+v.Jl++,d=zc(a,"clipPath",{id:b}),d.appendChild(zc(a,"path",c)),a.Dl.appendChild(d),0<a.uf.length&&a.uf[a.uf.length-1].setAttributeNS(null,"clip-path","url(#"+b+")")):a.addElement("path",
c)}function Bc(a,b,c,d,e,f,h){var k=Math.abs(e-f);if(e!==f){var l=b+d*Math.cos(f);f=c+d*Math.sin(f);k>=2*Math.PI?(Bc(a,b,c,d,e,e+Math.PI,h),Bc(a,b,c,d,e+Math.PI,e+2*Math.PI,h),a.path.push(["M",l,f])):(b+=d*Math.cos(e),c+=d*Math.sin(e),k=180*k/Math.PI,e=h?0:1,h=180<=k===!!h?0:1,0!==a.path.length?a.path.push(["L",b,c]):a.path.push(["M",b,c]),a.path.push(["A",d,d,k,h,e,l,f]))}}function Ac(a,b,c,d,e,f,h){var k=new wc;k.ff=[b,c,d,e,f,h];b={};Ic(a,"g",b,k);k=a.addElement("g",b);a.uf.push(k)}
g.Ya=function(){if(0!==this.shadowOffsetX||0!==this.shadowOffsetY||0!==this.shadowBlur){var a="SHADOW"+v.Jl++,b=this.addElement("filter",{id:a,x:"-100%",y:"-100%",width:"300%",height:"300%"},null),c,d,e,f,h;c=zc(this,"feGaussianBlur",{"in":"SourceAlpha",result:"blur",EK:this.shadowBlur/2});d=zc(this,"feFlood",{"in":"blur",result:"flood","flood-color":this.shadowColor});e=zc(this,"feComposite",{"in":"flood",in2:"blur",operator:"in",result:"comp"});f=zc(this,"feOffset",{"in":"comp",result:"offsetBlur",
dx:this.shadowOffsetX,dy:this.shadowOffsetY});h=zc(this,"feMerge",{});h.appendChild(zc(this,"feMergeNode",{"in":"offsetBlur"}));h.appendChild(zc(this,"feMergeNode",{"in":"SourceGraphic"}));b.appendChild(c);b.appendChild(d);b.appendChild(e);b.appendChild(f);b.appendChild(h);0<this.uf.length&&this.uf[this.uf.length-1].setAttributeNS(null,"filter","url(#"+a+")")}};g.nA=function(a,b,c){this.ms=a;this.ns=b;this.pg=c};g.bn=function(){this.shadowBlur=this.shadowOffsetY=this.shadowOffsetX=0};
g.cn=function(){this.shadowOffsetX=this.ms;this.shadowOffsetY=this.ns;this.shadowBlur=this.pg};function Lc(a,b){this.ownerDocument=void 0===b?document:b;var c=this.ownerDocument.createElement("canvas");c.tabIndex=0;this.zd=c;this.cl=new Mc(c);c.S=a;Object.seal(this)}g=Lc.prototype;g.toDataURL=function(a,b){return this.zd.toDataURL(a,b)};g.getBoundingClientRect=function(){return this.zd.getBoundingClientRect()};g.focus=function(){return this.zd.focus()};
g.addEventListener=function(a,b,c){this.zd.addEventListener(a,b,c)};g.removeEventListener=function(a,b,c){this.zd.removeEventListener(a,b,c)};v.defineProperty(Lc,{width:"width"},function(){return this.zd.width},function(a){this.zd.width=a});v.defineProperty(Lc,{height:"height"},function(){return this.zd.height},function(a){this.zd.height=a});v.defineProperty(Lc,{style:"style"},function(){return this.zd.style},function(a){this.zd.style=a});
function Mc(a){a.getContext&&a.getContext("2d")||v.k("Browser does not support HTML Canvas Element");this.Aa=a.getContext("2d");this.Hx=this.Jx=this.Ix="";this.qn=!1;this.pg=this.ns=this.ms=0;Object.seal(this)}v.defineProperty(Mc,{fillStyle:"fillStyle"},function(){return this.Aa.fillStyle},function(a){this.Hx!==a&&(this.Hx=this.Aa.fillStyle=a)});v.defineProperty(Mc,{font:"font"},function(){return this.Aa.font},function(a){this.Ix!==a&&(this.Ix=this.Aa.font=a)});
v.defineProperty(Mc,{globalAlpha:"globalAlpha"},function(){return this.Aa.globalAlpha},function(a){this.Aa.globalAlpha=a});v.defineProperty(Mc,{lineCap:"lineCap"},function(){return this.Aa.lineCap},function(a){this.Aa.lineCap=a});v.defineProperty(Mc,{Um:"lineDashOffset"},function(){return this.Aa.Um},function(a){this.Aa.Um=a});v.defineProperty(Mc,{lineJoin:"lineJoin"},function(){return this.Aa.lineJoin},function(a){this.Aa.lineJoin=a});
v.defineProperty(Mc,{lineWidth:"lineWidth"},function(){return this.Aa.lineWidth},function(a){this.Aa.lineWidth=a});v.defineProperty(Mc,{miterLimit:"miterLimit"},function(){return this.Aa.miterLimit},function(a){this.Aa.miterLimit=a});v.defineProperty(Mc,{shadowBlur:"shadowBlur"},function(){return this.Aa.shadowBlur},function(a){this.Aa.shadowBlur=a});v.defineProperty(Mc,{shadowColor:"shadowColor"},function(){return this.Aa.shadowColor},function(a){this.Aa.shadowColor=a});
v.defineProperty(Mc,{shadowOffsetX:"shadowOffsetX"},function(){return this.Aa.shadowOffsetX},function(a){this.Aa.shadowOffsetX=a});v.defineProperty(Mc,{shadowOffsetY:"shadowOffsetY"},function(){return this.Aa.shadowOffsetY},function(a){this.Aa.shadowOffsetY=a});v.defineProperty(Mc,{strokeStyle:"strokeStyle"},function(){return this.Aa.strokeStyle},function(a){this.Jx!==a&&(this.Jx=this.Aa.strokeStyle=a)});
v.defineProperty(Mc,{textAlign:"textAlign"},function(){return this.Aa.textAlign},function(a){this.Aa.textAlign=a});v.defineProperty(Mc,{ot:"imageSmoothingEnabled"},function(){return this.Aa.ot},function(a){this.Aa.ot=a});g=Mc.prototype;g.arc=function(a,b,c,d,e,f){this.Aa.arc(a,b,c,d,e,f)};g.beginPath=function(){this.Aa.beginPath()};g.bezierCurveTo=function(a,b,c,d,e,f){this.Aa.bezierCurveTo(a,b,c,d,e,f)};g.clearRect=function(a,b,c,d){this.Aa.clearRect(a,b,c,d)};g.clip=function(){this.Aa.clip()};
g.closePath=function(){this.Aa.closePath()};g.createLinearGradient=function(a,b,c,d){return this.Aa.createLinearGradient(a,b,c,d)};g.createPattern=function(a,b){return this.Aa.createPattern(a,b)};g.createRadialGradient=function(a,b,c,d,e,f){return this.Aa.createRadialGradient(a,b,c,d,e,f)};g.drawImage=function(a,b,c,d,e,f,h,k,l){void 0===d?this.Aa.drawImage(a,b,c):this.Aa.drawImage(a,b,c,d,e,f,h,k,l)};g.fill=function(){this.Aa.fill()};g.fillRect=function(a,b,c,d){this.Aa.fillRect(a,b,c,d)};
g.fillText=function(a,b,c){this.Aa.fillText(a,b,c)};g.getImageData=function(a,b,c,d){return this.Aa.getImageData(a,b,c,d)};g.lineTo=function(a,b){this.Aa.lineTo(a,b)};g.measureText=function(a){return this.Aa.measureText(a)};g.moveTo=function(a,b){this.Aa.moveTo(a,b)};g.quadraticCurveTo=function(a,b,c,d){this.Aa.quadraticCurveTo(a,b,c,d)};g.rect=function(a,b,c,d){this.Aa.rect(a,b,c,d)};g.restore=function(){this.Aa.restore()};Mc.prototype.rotate=function(a){this.Aa.rotate(a)};g=Mc.prototype;
g.save=function(){this.Aa.save()};g.setTransform=function(a,b,c,d,e,f){this.Aa.setTransform(a,b,c,d,e,f)};g.scale=function(a,b){this.Aa.scale(a,b)};g.stroke=function(){this.Aa.stroke()};g.transform=function(a,b,c,d,e,f){1===a&&0===b&&0===c&&1===d&&0===e&&0===f||this.Aa.transform(a,b,c,d,e,f)};g.translate=function(a,b){this.Aa.translate(a,b)};
g.vg=function(a){if(a instanceof ha&&a.type===Uc){var b=a.un;a=a.Nx;a>b?(this.scale(b/a,1),this.translate((a-b)/2,0)):b>a&&(this.scale(1,a/b),this.translate(0,(b-a)/2));this.qn?this.clip():this.fill();a>b?(this.translate(-(a-b)/2,0),this.scale(1/(b/a),1)):b>a&&(this.translate(0,-(b-a)/2),this.scale(1,1/(a/b)))}else this.qn?this.clip():this.fill()};g.bj=function(){this.qn||this.stroke()};v.defineProperty(Mc,{ow:"clipInsteadOfFill"},function(){return this.qn},function(a){this.qn=a});
Mc.prototype.nA=function(a,b,c){this.ms=a;this.ns=b;this.pg=c};Mc.prototype.bn=function(){this.shadowBlur=this.shadowOffsetY=this.shadowOffsetX=0};Mc.prototype.cn=function(){this.shadowOffsetX=this.ms;this.shadowOffsetY=this.ns;this.shadowBlur=this.pg};function Vc(a,b){b&&(a.Ix="");a.Jx="";a.Hx=""}
var Wc=(Math.sqrt(2)-1)/3*4,Xc=(new y(0,0)).Ea(),Yc=(new B(0,0,0,0)).Ea(),Zc=(new eb(0,0,0,0)).Ea(),fd=(new eb(2,2,2,2)).Ea(),gd=(new y(6,6)).Ea(),hd=(new y(-Infinity,-Infinity)).Ea(),id=(new y(Infinity,Infinity)).Ea(),jd=(new ia(0,0)).Ea(),kd=(new ia(1,1)).Ea(),ld=(new ia(6,6)).Ea(),md=(new ia(8,8)).Ea(),nd=(new ia(10,10)).Ea(),zd=(new ia(Infinity,Infinity)).Ea(),Ad=(new y(NaN,NaN)).Ea(),Bd=(new ia(NaN,NaN)).Ea(),Cd=(new B(NaN,NaN,NaN,NaN)).Ea(),Dd=(new L(.156,.156)).Ea(),Ed=(new L(.844,.844)).Ea(),
Fd=new ta,Gd=new ta,Hd=null;function Id(a){if(0>=a)return 0;var b=Hd;if(null===b){for(var b=[],c=0;2E3>=c;c++)b[c]=Math.sqrt(c);Hd=b}return 1>a?(c=1/a,2E3>=c?1/b[c|0]:Math.sqrt(a)):2E3>=a?b[a|0]:Math.sqrt(a)}function K(a,b){var c=a-b;return.5>c&&-.5<c}function Dc(a,b){var c=a-b;return 5E-8>c&&-5E-8<c}
function Jd(a,b,c,d,e,f,h){0>=e&&(e=1E-6);var k=0,l=0,m=0,n=0;a<c?(l=a,k=c):(l=c,k=a);b<d?(n=b,m=d):(n=d,m=b);if(a===c)return n<=h&&h<=m&&a-e<=f&&f<=a+e;if(b===d)return l<=f&&f<=k&&b-e<=h&&h<=b+e;k+=e;l-=e;if(l<=f&&f<=k&&(m+=e,n-=e,n<=h&&h<=m))if(k-l>m-n)if(a-c>e||c-a>e){if(f=(d-b)/(c-a)*(f-a)+b,f-e<=h&&h<=f+e)return!0}else return!0;else if(b-d>e||d-b>e){if(h=(c-a)/(d-b)*(h-b)+a,h-e<=f&&f<=h+e)return!0}else return!0;return!1}
function Pd(a,b,c,d,e,f,h,k,l,m,n,p){if(Jd(a,b,h,k,p,c,d)&&Jd(a,b,h,k,p,e,f))return Jd(a,b,h,k,p,m,n);var q=(a+c)/2,r=(b+d)/2,s=(c+e)/2,t=(d+f)/2;e=(e+h)/2;f=(f+k)/2;d=(q+s)/2;c=(r+t)/2;var s=(s+e)/2,t=(t+f)/2,u=(d+s)/2,w=(c+t)/2;return Pd(a,b,q,r,d,c,u,w,l,m,n,p)||Pd(u,w,s,t,e,f,h,k,l,m,n,p)}
function Qd(a,b,c,d,e,f,h,k,l,m){if(Jd(a,b,h,k,l,c,d)&&Jd(a,b,h,k,l,e,f))ab(m,a,b,0,0),ab(m,h,k,0,0);else{var n=(a+c)/2,p=(b+d)/2,q=(c+e)/2,r=(d+f)/2;e=(e+h)/2;f=(f+k)/2;d=(n+q)/2;c=(p+r)/2;var q=(q+e)/2,r=(r+f)/2,s=(d+q)/2,t=(c+r)/2;Qd(a,b,n,p,d,c,s,t,l,m);Qd(s,t,q,r,e,f,h,k,l,m)}}
function Rd(a,b,c,d,e,f,h,k,l,m){if(Jd(a,b,h,k,l,c,d)&&Jd(a,b,h,k,l,e,f))0===m.length&&(m.push(a),m.push(b)),m.push(h),m.push(k);else{var n=(a+c)/2,p=(b+d)/2,q=(c+e)/2,r=(d+f)/2;e=(e+h)/2;f=(f+k)/2;d=(n+q)/2;c=(p+r)/2;var q=(q+e)/2,r=(r+f)/2,s=(d+q)/2,t=(c+r)/2;Rd(a,b,n,p,d,c,s,t,l,m);Rd(s,t,q,r,e,f,h,k,l,m)}}
function Sd(a,b,c,d,e,f,h,k,l,m,n,p,q,r){var s=1-l;a=a*s+c*l;b=b*s+d*l;c=c*s+e*l;d=d*s+f*l;e=e*s+h*l;f=f*s+k*l;k=a*s+c*l;h=b*s+d*l;c=c*s+e*l;d=d*s+f*l;m.x=a;m.y=b;n.x=k;n.y=h;p.x=k*s+c*l;p.y=h*s+d*l;q.x=c;q.y=d;r.x=e;r.y=f}function Td(a,b,c,d,e,f,h,k,l,m){if(Jd(a,b,e,f,m,c,d))return Jd(a,b,e,f,m,k,l);var n=(a+c)/2,p=(b+d)/2;c=(c+e)/2;d=(d+f)/2;var q=(n+c)/2,r=(p+d)/2;return Td(a,b,n,p,q,r,h,k,l,m)||Td(q,r,c,d,e,f,h,k,l,m)}
function Ud(a,b,c,d,e,f,h,k){if(Jd(a,b,e,f,h,c,d))ab(k,a,b,0,0),ab(k,e,f,0,0);else{var l=(a+c)/2,m=(b+d)/2;c=(c+e)/2;d=(d+f)/2;var n=(l+c)/2,p=(m+d)/2;Ud(a,b,l,m,n,p,h,k);Ud(n,p,c,d,e,f,h,k)}}function Vd(a,b,c,d,e,f,h,k){if(Jd(a,b,e,f,h,c,d))0===k.length&&(k.push(a),k.push(b)),k.push(e),k.push(f);else{var l=(a+c)/2,m=(b+d)/2;c=(c+e)/2;d=(d+f)/2;var n=(l+c)/2,p=(m+d)/2;Vd(a,b,l,m,n,p,h,k);Vd(n,p,c,d,e,f,h,k)}}
function Wd(a,b,c,d,e,f,h,k,l,m,n,p,q,r){0>=q&&(q=1E-6);if(Jd(a,b,h,k,q,c,d)&&Jd(a,b,h,k,q,e,f)){var s=(a-h)*(m-p)-(b-k)*(l-n);if(0===s)return!1;q=((a*k-b*h)*(l-n)-(a-h)*(l*p-m*n))/s;s=((a*k-b*h)*(m-p)-(b-k)*(l*p-m*n))/s;if((l>n?l-n:n-l)<(m>p?m-p:p-m)){if(h=l=0,b<k?(l=b,h=k):(l=k,h=b),s<l||s>h)return!1}else if(a<h?l=a:(l=h,h=a),q<l||q>h)return!1;r.x=q;r.y=s;return!0}var s=(a+c)/2,t=(b+d)/2;c=(c+e)/2;d=(d+f)/2;e=(e+h)/2;f=(f+k)/2;var u=(s+c)/2,w=(t+d)/2;c=(c+e)/2;d=(d+f)/2;var x=(u+c)/2,z=(w+d)/2,
A=(n-l)*(n-l)+(p-m)*(p-m),H=!1;Wd(a,b,s,t,u,w,x,z,l,m,n,p,q,r)&&(b=(r.x-l)*(r.x-l)+(r.y-m)*(r.y-m),b<A&&(A=b,H=!0));a=r.x;s=r.y;Wd(x,z,c,d,e,f,h,k,l,m,n,p,q,r)&&(b=(r.x-l)*(r.x-l)+(r.y-m)*(r.y-m),b<A?H=!0:(r.x=a,r.y=s));return H}
function Xd(a,b,c,d,e,f,h,k,l,m,n,p,q){var r=0;0>=q&&(q=1E-6);if(Jd(a,b,h,k,q,c,d)&&Jd(a,b,h,k,q,e,f)){q=(a-h)*(m-p)-(b-k)*(l-n);if(0===q)return r;var s=((a*k-b*h)*(l-n)-(a-h)*(l*p-m*n))/q,t=((a*k-b*h)*(m-p)-(b-k)*(l*p-m*n))/q;if(s>=n)return r;if((l>n?l-n:n-l)<(m>p?m-p:p-m)){if(a=l=0,b<k?(l=b,a=k):(l=k,a=b),t<l||t>a)return r}else if(a<h?(l=a,a=h):l=h,s<l||s>a)return r;0<q?r++:0>q&&r--}else{var s=(a+c)/2,t=(b+d)/2,u=(c+e)/2,w=(d+f)/2;e=(e+h)/2;f=(f+k)/2;d=(s+u)/2;c=(t+w)/2;var u=(u+e)/2,w=(w+f)/2,
x=(d+u)/2,z=(c+w)/2,r=r+Xd(a,b,s,t,d,c,x,z,l,m,n,p,q),r=r+Xd(x,z,u,w,e,f,h,k,l,m,n,p,q)}return r}
function Oa(a,b,c,d,e,f,h){if(Dc(a,c)){var k=0;c=0;b<d?(k=b,c=d):(k=d,c=b);d=f;if(d<k)return h.x=a,h.y=k,!1;if(d>c)return h.x=a,h.y=c,!1;h.x=a;h.y=d;return!0}if(Dc(b,d)){a<c?k=a:(k=c,c=a);d=e;if(d<k)return h.x=k,h.y=b,!1;if(d>c)return h.x=c,h.y=b,!1;h.x=d;h.y=b;return!0}k=((a-e)*(a-c)+(b-f)*(b-d))/((c-a)*(c-a)+(d-b)*(d-b));if(-5E-6>k)return h.x=a,h.y=b,!1;if(1.000005<k)return h.x=c,h.y=d,!1;h.x=a+k*(c-a);h.y=b+k*(d-b);return!0}
function Yd(a,b,c,d,e,f,h,k,l){if(K(a,c)&&K(b,d))return l.x=a,l.y=b,!1;if(Dc(e,h)){if(Dc(a,c))return Oa(a,b,c,d,e,f,l),!1;f=(d-b)/(c-a)*(e-a)+b;return Oa(a,b,c,d,e,f,l)}k=(k-f)/(h-e);if(Dc(a,c)){f=k*(a-e)+f;c=h=0;b<d?(h=b,c=d):(h=d,c=b);if(f<h)return l.x=a,l.y=h,!1;if(f>c)return l.x=a,l.y=c,!1;l.x=a;l.y=f;return!0}h=(d-b)/(c-a);if(Dc(k,h))return Oa(a,b,c,d,e,f,l),!1;e=(h*a-k*e+f-b)/(h-k);if(Dc(h,0)){a<c?h=a:(h=c,c=a);if(e<h)return l.x=h,l.y=b,!1;if(e>c)return l.x=c,l.y=b,!1;l.x=e;l.y=b;return!0}f=
h*(e-a)+b;return Oa(a,b,c,d,e,f,l)}function Zd(a,b,c,d,e,f,h,k,l){var m=1E21,n=a,p=b;if(Yd(a,b,a,d,e,f,h,k,l)){var q=(l.x-e)*(l.x-e)+(l.y-f)*(l.y-f);q<m&&(m=q,n=l.x,p=l.y)}Yd(c,b,c,d,e,f,h,k,l)&&(q=(l.x-e)*(l.x-e)+(l.y-f)*(l.y-f),q<m&&(m=q,n=l.x,p=l.y));Yd(a,b,c,b,e,f,h,k,l)&&(q=(l.x-e)*(l.x-e)+(l.y-f)*(l.y-f),q<m&&(m=q,n=l.x,p=l.y));Yd(a,d,c,d,e,f,h,k,l)&&(q=(l.x-e)*(l.x-e)+(l.y-f)*(l.y-f),q<m&&(m=q,n=l.x,p=l.y));l.x=n;l.y=p;return 1E21>m}
function $d(a,b,c,d,e,f,h,k,l){c=a-c;var m=e-h,n=h=0;0===c||0===m?0===c?(k=(f-k)/m,h=a,n=k*h+(f-k*e)):(d=(b-d)/c,h=e,n=d*h+(b-d*a)):(d=(b-d)/c,k=(f-k)/m,a=b-d*a,h=(f-k*e-a)/(d-k),n=d*h+a);l.m(h,n);return l}
function ke(a,b,c){var d=b.x,e=b.y,f=c.x,h=c.y,k=a.left,l=a.right,m=a.top,n=a.bottom;return d===f?(f=a=0,e<h?(a=e,f=h):(a=h,f=e),k<=d&&d<=l&&a<=n&&f>=m):e===h?(d<f?a=d:(a=f,f=d),m<=e&&e<=n&&a<=l&&f>=k):a.Fa(b)||a.Fa(c)||le(k,m,l,m,d,e,f,h)||le(l,m,l,n,d,e,f,h)||le(l,n,k,n,d,e,f,h)||le(k,n,k,m,d,e,f,h)?!0:!1}function le(a,b,c,d,e,f,h,k){return 0>=me(a,b,c,d,e,f)*me(a,b,c,d,h,k)&&0>=me(e,f,h,k,a,b)*me(e,f,h,k,c,d)}
function me(a,b,c,d,e,f){c-=a;d-=b;a=e-a;b=f-b;f=a*d-b*c;0===f&&(f=a*c+b*d,0<f&&(f=(a-c)*c+(b-d)*d,0>f&&(f=0)));return 0>f?-1:0<f?1:0}function ne(a){0>a&&(a+=360);360<=a&&(a-=360);return a}
function oe(a,b,c,d){var e=Math.PI;d||(b*=e/180,c*=e/180);d=b<c?1:-1;var f=[],h=e/2,k=b;for(b=Math.min(2*e,Math.abs(c-b));1E-5<b;){c=k+d*Math.min(b,h);var e=(c-k)/2,l=a*Math.cos(e),m=a*Math.sin(e),n=-m,p=l*l+n*n,q=p+l*l+n*m,p=4/3*(Math.sqrt(2*p*q)-q)/(l*m-n*l),m=l-p*n,l=n+p*l,n=-l,p=e+k,e=Math.cos(p),p=Math.sin(p);f.push([0+a*Math.cos(k),0+a*Math.sin(k),0+m*e-l*p,0+m*p+l*e,0+m*e-n*p,0+m*p+n*e,0+a*Math.cos(c),0+a*Math.sin(c)]);b-=Math.abs(c-k);k=c}return f}
function Pa(a,b,c,d,e,f,h){c=Math.floor((a-c)/e)*e+c;d=Math.floor((b-d)/f)*f+d;var k=c;c+e-a<e/2&&(k=c+e);a=d;d+f-b<f/2&&(a=d+f);h.m(k,a)}function pe(a,b){var c=Math.max(a,b),d=Math.min(a,b),e=1,f=1;do e=c%d,c=f=d,d=e;while(0<e);return f}
function qe(a,b,c,d){var e=0>c,f=0>d,h=0,k=h=0;a<b?(h=1,k=0):(h=0,k=1);var l=0,m=0,n=0,p=0,l=0===h?a:b,n=0===h?c:d;if(0===h?e:f)n=-n;h=k;m=0===h?a:b;p=0===h?c:d;if(0===h?e:f)p=-p;a=a=0;if(0<p)if(0<n){b=l*l;a=m*m;l*=n;c=m*p;d=-a+c;e=-a+Math.sqrt(l*l+c*c);m=d;for(f=0;9999999999>f;++f){m=.5*(d+e);if(m===d||m===e)break;k=l/(m+b);h=c/(m+a);k=k*k+h*h-1;if(0<k)d=m;else if(0>k)e=m;else break}n=b*n/(m+b)-n;p=a*p/(m+a)-p;a=Math.sqrt(n*n+p*p)}else a=Math.abs(p-m);else p=l*l-m*m,a=l*n,a<p?(p=a/p,a=m*Math.sqrt(Math.abs(1-
p*p)),n=l*p-n,a=Math.sqrt(n*n+a*a)):a=Math.abs(n-l);return a}function re(a){1<arguments.length&&v.k("Geometry constructor can take at most one optional argument, the Geometry type.");v.ec(this);this.D=!1;void 0===a&&(a=De);this.ia=a;this.Bb=this.vb=this.Cc=this.vc=0;this.jj=new I(Ee);this.Ru=this.jj.F;this.Bu=(new B).freeze();this.$a=!0;this.Ph=tb;this.Qh=Fb;this.Sn=this.Un=NaN;this.oi=Fe}v.ea("Geometry",re);v.Wh(re);
re.prototype.copy=function(){var a=new re;a.ia=this.ia;a.vc=this.vc;a.Cc=this.Cc;a.vb=this.vb;a.Bb=this.Bb;for(var b=this.jj.n,c=b.length,d=a.jj,e=0;e<c;e++){var f=b[e].copy();d.add(f)}a.Ru=this.Ru;a.Bu.assign(this.Bu);a.$a=this.$a;a.Ph=this.Ph.R();a.Qh=this.Qh.R();a.Un=this.Un;a.Sn=this.Sn;a.oi=this.oi;return a};var Ge;re.Line=Ge=v.p(re,"Line",0);var He;re.Rectangle=He=v.p(re,"Rectangle",1);var Ie;re.Ellipse=Ie=v.p(re,"Ellipse",2);var De;re.Path=De=v.p(re,"Path",3);
re.prototype.Ea=function(){this.freeze();Object.freeze(this);return this};re.prototype.freeze=function(){this.D=!0;var a=this.Ub;a.freeze();for(var a=a.n,b=a.length,c=0;c<b;c++)a[c].freeze();return this};re.prototype.Oa=function(){Object.isFrozen(this)&&v.k("cannot thaw constant: "+this);this.D=!1;var a=this.Ub;a.Oa();for(var a=a.n,b=a.length,c=0;c<b;c++)a[c].Oa();return this};
re.prototype.equalsApprox=re.prototype.Fc=function(a){if(!(a instanceof re))return!1;if(this.type!==a.type)return this.type===Ge&&a.type===De?Ze(this,a):a.type===Ge&&this.type===De?Ze(a,this):!1;if(this.type===De){var b=this.Ub.n;a=a.Ub.n;var c=b.length;if(c!==a.length)return!1;for(var d=0;d<c;d++)if(!b[d].Fc(a[d]))return!1;return!0}return K(this.za,a.za)&&K(this.xa,a.xa)&&K(this.I,a.I)&&K(this.J,a.J)};
function Ze(a,b){if(a.type!==Ge||b.type!==De)return!1;if(1===b.Ub.count){var c=b.Ub.da(0);if(1===c.sb.count&&K(a.za,c.za)&&K(a.xa,c.xa)&&(c=c.sb.da(0),c.type===$e&&K(a.I,c.I)&&K(a.J,c.J)))return!0}return!1}var af;re.stringify=af=function(a){return a.toString()};
re.prototype.toString=function(a){void 0===a&&(a=-1);switch(this.type){case Ge:return 0>a?"M"+this.za.toString()+" "+this.xa.toString()+"L"+this.I.toString()+" "+this.J.toString():"M"+this.za.toFixed(a)+" "+this.xa.toFixed(a)+"L"+this.I.toFixed(a)+" "+this.J.toFixed(a);case He:var b=new B(this.za,this.xa,0,0);b.mF(this.I,this.J,0,0);return 0>a?"M"+b.x.toString()+" "+b.y.toString()+"H"+b.right.toString()+"V"+b.bottom.toString()+"H"+b.left.toString()+"z":"M"+b.x.toFixed(a)+" "+b.y.toFixed(a)+"H"+b.right.toFixed(a)+
"V"+b.bottom.toFixed(a)+"H"+b.left.toFixed(a)+"z";case Ie:b=new B(this.za,this.xa,0,0);b.mF(this.I,this.J,0,0);if(0>a){var c=b.left.toString()+" "+(b.y+b.height/2).toString(),d=b.right.toString()+" "+(b.y+b.height/2).toString();return"M"+c+"A"+(b.width/2).toString()+" "+(b.height/2).toString()+" 0 0 1 "+d+"A"+(b.width/2).toString()+" "+(b.height/2).toString()+" 0 0 1 "+c}c=b.left.toFixed(a)+" "+(b.y+b.height/2).toFixed(a);d=b.right.toFixed(a)+" "+(b.y+b.height/2).toFixed(a);return"M"+c+"A"+(b.width/
2).toFixed(a)+" "+(b.height/2).toFixed(a)+" 0 0 1 "+d+"A"+(b.width/2).toFixed(a)+" "+(b.height/2).toFixed(a)+" 0 0 1 "+c;case De:for(var b="",c=this.Ub.n,d=c.length,e=0;e<d;e++){var f=c[e];0<e&&(b+=" x ");f.tt&&(b+="F ");b+=f.toString(a)}return b;default:return this.type.toString()}};
re.fillPath=function(a){"string"!==typeof a&&v.Gd(a,"string",re,"fillPath:str");a=a.split(/[Xx]/);for(var b=a.length,c="",d=0;d<b;d++)var e=a[d],c=null!==e.match(/[Ff]/)?0===d?c+e:c+("X"+(" "===e[0]?"":" ")+e):c+((0===d?"":"X ")+"F"+(" "===e[0]?"":" ")+e);return c};var bf;
re.parse=bf=function(a,b){function c(){return m>=t-1?!0:null!==l[m+1].match(/[A-Za-z]/)}function d(){m++;return l[m]}function e(){var a=new y(parseFloat(d()),parseFloat(d()));n===n.toLowerCase()&&(a.x=s.x+a.x,a.y=s.y+a.y);return a}function f(){return s=e()}function h(){return r=e()}function k(){return"c"!==p.toLowerCase()&&"s"!==p.toLowerCase()?s:new y(2*s.x-r.x,2*s.y-r.y)}void 0===b&&(b=!1);"string"!==typeof a&&v.Gd(a,"string",re,"parse:str");a=a.replace(/,/gm," ");a=a.replace(/([UuBbMmZzLlHhVvCcSsQqTtAaFf])([UuBbMmZzLlHhVvCcSsQqTtAaFf])/gm,
"$1 $2");a=a.replace(/([UuBbMmZzLlHhVvCcSsQqTtAaFf])([UuBbMmZzLlHhVvCcSsQqTtAaFf])/gm,"$1 $2");a=a.replace(/([UuBbMmZzLlHhVvCcSsQqTtAaFf])([^\s])/gm,"$1 $2");a=a.replace(/([^\s])([UuBbMmZzLlHhVvCcSsQqTtAaFf])/gm,"$1 $2");a=a.replace(/([0-9])([+\-])/gm,"$1 $2");a=a.replace(/(\.[0-9]*)(\.)/gm,"$1 $2");a=a.replace(/([Aa](\s+[0-9]+){3})\s+([01])\s*([01])/gm,"$1 $3 $4 ");a=a.replace(/[\s\r\t\n]+/gm," ");a=a.replace(/^\s+|\s+$/g,"");for(var l=a.split(" "),m=-1,n="",p="",q=new y(0,0),r=new y(0,0),s=new y(0,
0),t=l.length,u=v.s(),w=!1,x=!1,z=!0;!(m>=t-1);)if(p=n,n=d(),""!==n)switch(n.toUpperCase()){case "X":z=!0;x=w=!1;break;case "M":var A=f();null===u.Rb||!0===z?(N(u,A.x,A.y,w,!1,!x),z=!1):u.moveTo(A.x,A.y);for(q=s;!c();)A=f(),u.lineTo(A.x,A.y);break;case "L":for(;!c();)A=f(),u.lineTo(A.x,A.y);break;case "H":for(;!c();)s=A=new y((n===n.toLowerCase()?s.x:0)+parseFloat(d()),s.y),u.lineTo(s.x,s.y);break;case "V":for(;!c();)s=A=new y(s.x,(n===n.toLowerCase()?s.y:0)+parseFloat(d())),u.lineTo(s.x,s.y);break;
case "C":for(;!c();){var H=e(),C=h(),A=f();O(u,H.x,H.y,C.x,C.y,A.x,A.y)}break;case "S":for(;!c();)H=k(),C=h(),A=f(),O(u,H.x,H.y,C.x,C.y,A.x,A.y);break;case "Q":for(;!c();)C=h(),A=f(),cf(u,C.x,C.y,A.x,A.y);break;case "T":for(;!c();)r=C=k(),A=f(),cf(u,C.x,C.y,A.x,A.y);break;case "B":for(;!c();){var A=parseFloat(d()),H=parseFloat(d()),C=parseFloat(d()),T=parseFloat(d()),ba=parseFloat(d()),U=ba,M=!1;c()||(U=parseFloat(d()),c()||(M=0!==parseFloat(d())));n===n.toLowerCase()&&(C+=s.x,T+=s.y);u.arcTo(A,H,
C,T,ba,U,M)}break;case "A":for(;!c();)H=Math.abs(parseFloat(d())),C=Math.abs(parseFloat(d())),T=parseFloat(d()),ba=!!parseFloat(d()),U=!!parseFloat(d()),A=f(),df(u,H,C,T,ba,U,A.x,A.y);break;case "Z":A=u.o.Ub.n[u.o.Ub.length-1];P(u);s=q;break;case "F":A="";for(H=1;l[m+H];)if(null!==l[m+H].match(/[Uu]/))H++;else if(null===l[m+H].match(/[A-Za-z]/))H++;else{A=l[m+H];break}A.match(/[Mm]/)?w=!0:ef(u);break;case "U":A="";for(H=1;l[m+H];)if(null!==l[m+H].match(/[Ff]/))H++;else if(null===l[m+H].match(/[A-Za-z]/))H++;
else{A=l[m+H];break}A.match(/[Mm]/)?x=!0:u.Ya(!1)}q=u.o;v.q(u);if(b)for(u=q.Ub.i;u.next();)A=u.value,A.tt=!0;return q};function ff(a,b){for(var c=a.length,d=v.L(),e=0;e<c;e++){var f=a[e];d.x=f[0];d.y=f[1];b.ub(d);f[0]=d.x;f[1]=d.y;d.x=f[2];d.y=f[3];b.ub(d);f[2]=d.x;f[3]=d.y;d.x=f[4];d.y=f[5];b.ub(d);f[4]=d.x;f[5]=d.y;d.x=f[6];d.y=f[7];b.ub(d);f[6]=d.x;f[7]=d.y}v.v(d)}
re.prototype.Dz=function(){if(this.$a||this.Ru!==this.Ub.F)return!0;for(var a=this.Ub.n,b=a.length,c=0;c<b;c++)if(a[c].Dz())return!0;return!1};re.prototype.yA=function(){this.$a=!1;this.Ru=this.Ub.F;for(var a=this.Ub.n,b=a.length,c=0;c<b;c++)a[c].yA()};re.prototype.ah=function(){var a=this.Bu;a.Oa();isNaN(this.Un)||isNaN(this.Sn)?a.m(0,0,0,0):a.m(0,0,this.Un,this.Sn);gf(this,a,!1);ab(a,0,0,0,0);a.freeze()};
re.prototype.computeBoundsWithoutOrigin=re.prototype.qG=function(){var a=new B;gf(this,a,!0);return a};
function gf(a,b,c){switch(a.type){case Ge:case He:case Ie:c?b.m(a.vc,a.Cc,0,0):ab(b,a.vc,a.Cc,0,0);ab(b,a.vb,a.Bb,0,0);break;case De:var d=a.Ub;a=d.n;for(var d=d.length,e=0;e<d;e++){var f=a[e];c&&0===e?b.m(f.za,f.xa,0,0):ab(b,f.za,f.xa,0,0);for(var h=f.sb.n,k=h.length,l=f.za,m=f.xa,n=0;n<k;n++){var p=h[n];switch(p.type){case $e:case hf:l=p.I;m=p.J;ab(b,l,m,0,0);break;case jf:Qd(l,m,p.qc,p.Kc,p.lh,p.mh,p.I,p.J,.5,b);l=p.I;m=p.J;break;case kf:Ud(l,m,p.qc,p.Kc,p.I,p.J,.5,b);l=p.I;m=p.J;break;case lf:case mf:var q=
p.type===lf?nf(p,f):of(p,f,l,m),r=q.length;if(0===r){l=p.na;m=p.ua;ab(b,l,m,0,0);break}for(var p=null,s=0;s<r;s++)p=q[s],Qd(p[0],p[1],p[2],p[3],p[4],p[5],p[6],p[7],.5,b);null!==p&&(l=p[6],m=p[7]);break;default:v.k("Unknown Segment type: "+p.type)}}}break;default:v.k("Unknown Geometry type: "+a.type)}}re.prototype.normalize=re.prototype.normalize=function(){this.D&&v.ka(this);var a=this.qG();this.offset(-a.x,-a.y);return new y(-a.x,-a.y)};
re.prototype.offset=re.prototype.offset=function(a,b){this.D&&v.ka(this);this.transform(1,0,0,1,a,b);return this};re.prototype.scale=re.prototype.scale=function(a,b){this.D&&v.ka(this);this.transform(a,0,0,b,0,0);return this};re.prototype.rotate=re.prototype.rotate=function(a,b,c){this.D&&v.ka(this);void 0===b&&(b=0);void 0===c&&(c=0);var d=v.qh();d.reset();d.rotate(a,b,c);this.transform(d.m11,d.m12,d.m21,d.m22,d.dx,d.dy);v.$e(d);return this};
re.prototype.transform=re.prototype.transform=function(a,b,c,d,e,f){var h=0,k=0;switch(this.type){case Ge:case He:case Ie:h=this.vc;k=this.Cc;this.vc=h*a+k*c+e;this.Cc=h*b+k*d+f;h=this.vb;k=this.Bb;this.vb=h*a+k*c+e;this.Bb=h*b+k*d+f;break;case De:for(var l=this.Ub.n,m=l.length,n=0;n<m;n++){var p=l[n],h=p.za,k=p.xa;p.za=h*a+k*c+e;p.xa=h*b+k*d+f;for(var p=p.sb.n,q=p.length,r=0;r<q;r++){var s=p[r];switch(s.type){case $e:case hf:h=s.I;k=s.J;s.I=h*a+k*c+e;s.J=h*b+k*d+f;break;case jf:h=s.qc;k=s.Kc;s.qc=
h*a+k*c+e;s.Kc=h*b+k*d+f;h=s.lh;k=s.mh;s.lh=h*a+k*c+e;s.mh=h*b+k*d+f;h=s.I;k=s.J;s.I=h*a+k*c+e;s.J=h*b+k*d+f;break;case kf:h=s.qc;k=s.Kc;s.qc=h*a+k*c+e;s.Kc=h*b+k*d+f;h=s.I;k=s.J;s.I=h*a+k*c+e;s.J=h*b+k*d+f;break;case lf:h=s.na;k=s.ua;s.na=h*a+k*c+e;s.ua=h*b+k*d+f;0!==b&&(h=180*Math.atan2(b,a)/Math.PI,0>h&&(h+=360),s.ye+=h);0>a&&(s.ye=180-s.ye,s.Bf=-s.Bf);0>d&&(s.ye=-s.ye,s.Bf=-s.Bf);s.radiusX*=Math.sqrt(a*a+c*c);void 0!==s.radiusY&&(s.radiusY*=Math.sqrt(b*b+d*d));break;case mf:h=s.I;k=s.J;s.I=h*
a+k*c+e;s.J=h*b+k*d+f;0!==b&&(h=180*Math.atan2(b,a)/Math.PI,0>h&&(h+=360),s.ej+=h);0>a&&(s.ej=180-s.ej,s.sl=!s.sl);0>d&&(s.ej=-s.ej,s.sl=!s.sl);s.radiusX*=Math.sqrt(a*a+c*c);s.radiusY*=Math.sqrt(b*b+d*d);break;default:v.k("Unknown Segment type: "+s.type)}}}}this.$a=!0;return this};
re.prototype.Fa=function(a,b,c,d){var e=a.x,f=a.y,h=this.mb.x-20;a=a.y;for(var k=0,l=0,m=0,n=0,p=0,q=0,r=this.Ub.n,s=r.length,t=0;t<s;t++){var u=r[t];if(u.tt){if(c&&u.Fa(e,f,b))return!0;for(var w=u.sb,l=u.za,m=u.xa,x=l,z=m,A=w.n,H=0;H<=w.length;H++){var C,T;H!==w.length?(C=A[H],T=C.type,p=C.I,q=C.J):(T=$e,p=x,q=z);switch(T){case hf:n=pf(e,f,h,a,l,m,x,z);if(isNaN(n))return!0;k+=n;x=p;z=q;break;case $e:n=pf(e,f,h,a,l,m,p,q);if(isNaN(n))return!0;k+=n;break;case jf:n=Xd(l,m,C.qc,C.Kc,C.lh,C.mh,p,q,h,
a,e,f,.5);k+=n;break;case kf:n=Xd(l,m,(l+2*C.qc)/3,(m+2*C.Kc)/3,(2*C.qc+p)/3,(2*C.Kc+q)/3,p,q,h,a,e,f,.5);k+=n;break;case lf:case mf:T=C.type===lf?nf(C,u):of(C,u,l,m);var ba=T.length;if(0===ba){n=pf(e,f,h,a,l,m,C.na,C.ua);if(isNaN(n))return!0;k+=n;break}for(var U=null,M=0;M<ba;M++){U=T[M];if(0===M){n=pf(e,f,h,a,l,m,U[0],U[1]);if(isNaN(n))return!0;k+=n}n=Xd(U[0],U[1],U[2],U[3],U[4],U[5],U[6],U[7],h,a,e,f,.5);k+=n}null!==U&&(p=U[6],q=U[7]);break;default:v.k("Unknown Segment type: "+C.type)}l=p;m=q}if(0!==
k)return!0;k=0}else if(u.Fa(e,f,d?b:b+2))return!0}return 0!==k};function pf(a,b,c,d,e,f,h,k){if(Jd(e,f,h,k,.05,a,b))return NaN;var l=(a-c)*(f-k);if(0===l)return 0;var m=((a*d-b*c)*(e-h)-(a-c)*(e*k-f*h))/l;b=(a*d-b*c)*(f-k)/l;if(m>=a)return 0;if((e>h?e-h:h-e)<(f>k?f-k:k-f)){if(e=a=0,f<k?(a=f,e=k):(a=k,e=f),b<a||b>e)return 0}else if(e<h?(a=e,e=h):a=h,m<a||m>e)return 0;return 0<l?1:-1}function vf(a,b,c,d){a=a.Ub.n;for(var e=a.length,f=0;f<e;f++)if(a[f].Fa(b,c,d))return!0;return!1}
re.prototype.getPointAlongPath=function(a){(0>a||1<a)&&v.va(a,"0 <= fraction <= 1",re,"getPointAlongPath:fraction");var b=this.Ub.first(),c=v.jb(),d=[];d.push(b.za);d.push(b.xa);for(var e=b.za,f=b.xa,h=e,k=f,l=b.sb.n,m=l.length,n=0;n<m;n++){var p=l[n];switch(p.ia){case hf:c.push(d);d=[];d.push(p.I);d.push(p.J);e=p.I;f=p.J;h=e;k=f;break;case $e:d.push(p.I);d.push(p.J);e=p.I;f=p.J;break;case jf:Rd(e,f,p.td,p.Ge,p.Yg,p.og,p.vb,p.Bb,.5,d);e=p.I;f=p.J;break;case kf:Vd(e,f,p.td,p.Ge,p.vb,p.Bb,.5,d);e=p.I;
f=p.J;break;case lf:var q=nf(p,b),r=q.length;if(0===r){d.push(p.na);d.push(p.ua);e=p.na;f=p.ua;break}for(var s=0;s<r;s++){var t=q[s];Rd(e,f,t[2],t[3],t[4],t[5],t[6],t[7],.5,d);e=t[6];f=t[7]}break;case mf:q=of(p,b,e,f);r=q.length;for(s=0;s<r;s++)t=q[s],Rd(e,f,t[2],t[3],t[4],t[5],t[6],t[7],.5,d),e=t[6],f=t[7];break;default:v.k("Segment not of valid type")}p.Eh&&(d.push(h),d.push(k))}c.push(d);q=0;h=c.length;for(k=d=b=0;k<h;k++)for(l=c[k],m=l.length,n=0;n<m;n+=2)e=l[n],f=l[n+1],0!==n&&(p=Math.sqrt(Ta(b,
d,e,f)),q+=p),b=e,d=f;a*=q;for(k=q=0;k<h;k++)for(l=c[k],m=l.length,n=0;n<m;n++){e=l[n];f=l[n+1];if(0!==n){p=Math.sqrt(Ta(b,d,e,f));if(q+p>a)return n=(a-q)/p,v.sa(c),new y(b+(e-b)*n,d+(f-d)*n);q+=p}b=e;d=f}v.sa(c);return null};v.defineProperty(re,{type:"type"},function(){return this.ia},function(a){this.ia!==a&&(this.D&&v.ka(this,a),this.ia=a,this.$a=!0)});v.defineProperty(re,{za:"startX"},function(){return this.vc},function(a){this.vc!==a&&(this.D&&v.ka(this,a),this.vc=a,this.$a=!0)});
v.defineProperty(re,{xa:"startY"},function(){return this.Cc},function(a){this.Cc!==a&&(this.D&&v.ka(this,a),this.Cc=a,this.$a=!0)});v.defineProperty(re,{I:"endX"},function(){return this.vb},function(a){this.vb!==a&&(this.D&&v.ka(this,a),this.vb=a,this.$a=!0)});v.defineProperty(re,{J:"endY"},function(){return this.Bb},function(a){this.Bb!==a&&(this.D&&v.ka(this,a),this.Bb=a,this.$a=!0)});
v.defineProperty(re,{Ub:"figures"},function(){return this.jj},function(a){this.jj!==a&&(this.D&&v.ka(this,a),this.jj=a,this.$a=!0)});re.prototype.add=re.prototype.add=function(a){this.jj.add(a);return this};re.prototype.setSpots=function(a,b,c,d,e,f,h,k){this.D&&v.ka(this);this.Ph=(new L(a,b,e,f)).freeze();this.Qh=(new L(c,d,h,k)).freeze();return this};v.defineProperty(re,{B:"spot1"},function(){return this.Ph},function(a){this.D&&v.ka(this,a);this.Ph=a.R()});
v.defineProperty(re,{C:"spot2"},function(){return this.Qh},function(a){this.D&&v.ka(this,a);this.Qh=a.R()});v.defineProperty(re,{Od:"defaultStretch"},function(){return this.oi},function(a){this.D&&v.ka(this,a);this.oi=a});v.u(re,{mb:"bounds"},function(){this.Dz()&&(this.yA(),this.ah());return this.Bu});function Ee(a,b,c,d){v.ec(this);this.D=!1;void 0===c&&(c=!0);this.Sl=c;void 0===d&&(d=!0);this.Vn=d;this.vc=void 0!==a?a:0;this.Cc=void 0!==b?b:0;this.ro=new I(wf);this.Qv=this.ro.F;this.$a=!0}
v.ea("PathFigure",Ee);v.Wh(Ee);Ee.prototype.copy=function(){var a=new Ee;a.Sl=this.Sl;a.Vn=this.Vn;a.vc=this.vc;a.Cc=this.Cc;for(var b=this.ro.n,c=b.length,d=a.ro,e=0;e<c;e++){var f=b[e].copy();d.add(f)}a.Qv=this.Qv;a.$a=this.$a;return a};Ee.prototype.equalsApprox=Ee.prototype.Fc=function(a){if(!(a instanceof Ee&&K(this.za,a.za)&&K(this.xa,a.xa)))return!1;var b=this.sb.n;a=a.sb.n;var c=b.length;if(c!==a.length)return!1;for(var d=0;d<c;d++)if(!b[d].Fc(a[d]))return!1;return!0};g=Ee.prototype;
g.toString=function(a){void 0===a&&(a=-1);for(var b=0>a?"M"+this.za.toString()+" "+this.xa.toString():"M"+this.za.toFixed(a)+" "+this.xa.toFixed(a),c=this.sb.n,d=c.length,e=0;e<d;e++)b+=" "+c[e].toString(a);return b};g.freeze=function(){this.D=!0;var a=this.sb;a.freeze();for(var b=a.n,a=a.length,c=0;c<a;c++)b[c].freeze();return this};g.Oa=function(){this.D=!1;var a=this.sb;a.Oa();for(var a=a.n,b=a.length,c=0;c<b;c++)a[c].Oa();return this};
g.Dz=function(){if(this.$a)return!0;var a=this.sb;if(this.Qv!==a.F)return!0;for(var a=a.n,b=a.length,c=0;c<b;c++)if(a[c].$a)return!0;return!1};g.yA=function(){this.$a=!1;var a=this.sb;this.Qv=a.F;for(var a=a.n,b=a.length,c=0;c<b;c++){var d=a[c];d.$a=!1;d.dg=null}};v.defineProperty(Ee,{tt:"isFilled"},function(){return this.Sl},function(a){this.D&&v.ka(this,a);this.Sl=a});v.defineProperty(Ee,{vl:"isShadowed"},function(){return this.Vn},function(a){this.D&&v.ka(this,a);this.Vn=a});
v.defineProperty(Ee,{za:"startX"},function(){return this.vc},function(a){this.D&&v.ka(this,a);this.vc=a;this.$a=!0});v.defineProperty(Ee,{xa:"startY"},function(){return this.Cc},function(a){this.D&&v.ka(this,a);this.Cc=a;this.$a=!0});v.defineProperty(Ee,{sb:"segments"},function(){return this.ro},function(a){this.D&&v.ka(this,a);this.ro=a;this.$a=!0});Ee.prototype.add=Ee.prototype.add=function(a){this.ro.add(a);return this};
Ee.prototype.Fa=function(a,b,c){for(var d=this.za,e=this.xa,f=d,h=e,k=this.sb.n,l=k.length,m=0;m<l;m++){var n=k[m];switch(n.type){case hf:f=n.I;h=n.J;d=n.I;e=n.J;break;case $e:if(Jd(d,e,n.I,n.J,c,a,b))return!0;d=n.I;e=n.J;break;case jf:if(Pd(d,e,n.qc,n.Kc,n.lh,n.mh,n.I,n.J,.5,a,b,c))return!0;d=n.I;e=n.J;break;case kf:if(Td(d,e,n.qc,n.Kc,n.I,n.J,.5,a,b,c))return!0;d=n.I;e=n.J;break;case lf:case mf:var p=n.type===lf?nf(n,this):of(n,this,d,e),q=p.length;if(0===q){if(Jd(d,e,n.na,n.ua,c,a,b))return!0;
d=n.na;e=n.ua;break}for(var r=null,s=0;s<q;s++)if(r=p[s],0===s&&Jd(d,e,r[0],r[1],c,a,b)||Pd(r[0],r[1],r[2],r[3],r[4],r[5],r[6],r[7],.5,a,b,c))return!0;null!==r&&(d=r[6],e=r[7]);break;default:v.k("Unknown Segment type: "+n.type)}if(n.Fw&&(d!==f||e!==h)&&Jd(d,e,f,h,c,a,b))return!0}return!1};
function wf(a,b,c,d,e,f,h,k){v.ec(this);this.D=!1;void 0===a&&(a=$e);this.ia=a;this.vb=void 0!==b?b:0;this.Bb=void 0!==c?c:0;void 0===d&&(d=0);void 0===e&&(e=0);void 0===f&&(f=0);void 0===h&&(h=0);a===mf?(a=f%360,0>a&&(a+=360),this.td=a,this.Ge=0,this.Yg=Math.max(d,0),this.og=Math.max(e,0),this.$n="boolean"===typeof h?!!h:!1,this.rn=!!k):(this.td=d,this.Ge=e,a===lf&&(f=Math.max(f,0)),this.Yg=f,"number"===typeof h?(a===lf&&(h=Math.max(h,0)),this.og=h):this.og=0,this.rn=this.$n=!1);this.Eh=!1;this.$a=
!0;this.dg=null}v.ea("PathSegment",wf);v.Wh(wf);wf.prototype.copy=function(){var a=new wf;a.ia=this.ia;a.vb=this.vb;a.Bb=this.Bb;a.td=this.td;a.Ge=this.Ge;a.Yg=this.Yg;a.og=this.og;a.$n=this.$n;a.rn=this.rn;a.Eh=this.Eh;a.$a=this.$a;return a};
wf.prototype.equalsApprox=wf.prototype.Fc=function(a){if(!(a instanceof wf)||this.type!==a.type||this.Fw!==a.Fw)return!1;switch(this.type){case hf:case $e:return K(this.I,a.I)&&K(this.J,a.J);case jf:return K(this.I,a.I)&&K(this.J,a.J)&&K(this.qc,a.qc)&&K(this.Kc,a.Kc)&&K(this.lh,a.lh)&&K(this.mh,a.mh);case kf:return K(this.I,a.I)&&K(this.J,a.J)&&K(this.qc,a.qc)&&K(this.Kc,a.Kc);case lf:return K(this.ye,a.ye)&&K(this.Bf,a.Bf)&&K(this.na,a.na)&&K(this.ua,a.ua)&&K(this.radiusX,a.radiusX)&&K(this.radiusY,
a.radiusY);case mf:return this.sl===a.sl&&this.Iw===a.Iw&&K(this.ej,a.ej)&&K(this.I,a.I)&&K(this.J,a.J)&&K(this.radiusX,a.radiusX)&&K(this.radiusY,a.radiusY);default:return!1}};
wf.prototype.toString=function(a){void 0===a&&(a=-1);var b="";switch(this.type){case hf:b=0>a?"M"+this.I.toString()+" "+this.J.toString():"M"+this.I.toFixed(a)+" "+this.J.toFixed(a);break;case $e:b=0>a?"L"+this.I.toString()+" "+this.J.toString():"L"+this.I.toFixed(a)+" "+this.J.toFixed(a);break;case jf:b=0>a?"C"+this.qc.toString()+" "+this.Kc.toString()+" "+this.lh.toString()+" "+this.mh.toString()+" "+this.I.toString()+" "+this.J.toString():"C"+this.qc.toFixed(a)+" "+this.Kc.toFixed(a)+" "+this.lh.toFixed(a)+
" "+this.mh.toFixed(a)+" "+this.I.toFixed(a)+" "+this.J.toFixed(a);break;case kf:b=0>a?"Q"+this.qc.toString()+" "+this.Kc.toString()+" "+this.I.toString()+" "+this.J.toString():"Q"+this.qc.toFixed(a)+" "+this.Kc.toFixed(a)+" "+this.I.toFixed(a)+" "+this.J.toFixed(a);break;case lf:b=0>a?"B"+this.ye.toString()+" "+this.Bf.toString()+" "+this.na.toString()+" "+this.ua.toString()+" "+this.radiusX:"B"+this.ye.toFixed(a)+" "+this.Bf.toFixed(a)+" "+this.na.toFixed(a)+" "+this.ua.toFixed(a)+" "+this.radiusX;
break;case mf:b=0>a?"A"+this.radiusX.toString()+" "+this.radiusY.toString()+" "+this.ej.toString()+" "+(this.Iw?1:0)+" "+(this.sl?1:0)+" "+this.I.toString()+" "+this.J.toString():"A"+this.radiusX.toFixed(a)+" "+this.radiusY.toFixed(a)+" "+this.ej.toFixed(a)+" "+(this.Iw?1:0)+" "+(this.sl?1:0)+" "+this.I.toFixed(a)+" "+this.J.toFixed(a);break;default:b=this.type.toString()}return b+(this.Eh?"z":"")};var hf;wf.Move=hf=v.p(wf,"Move",0);var $e;wf.Line=$e=v.p(wf,"Line",1);var jf;
wf.Bezier=jf=v.p(wf,"Bezier",2);var kf;wf.QuadraticBezier=kf=v.p(wf,"QuadraticBezier",3);var lf;wf.Arc=lf=v.p(wf,"Arc",4);var mf;wf.SvgArc=mf=v.p(wf,"SvgArc",4);wf.prototype.freeze=function(){this.D=!0;return this};wf.prototype.Oa=function(){this.D=!1;return this};wf.prototype.close=wf.prototype.close=function(){this.Eh=!0;return this};
function nf(a,b){if(null!==a.dg&&!1===b.$a)return a.dg;var c=a.radiusX,d=a.radiusY;void 0===d&&(d=c);if(0===c||0===d)return a.dg=[],a.dg;var e=a.td,f=a.Ge,h=oe(c<d?c:d,a.ye,a.ye+a.Bf,!1);if(c!==d){var k=v.qh();k.reset();c<d?k.scale(1,d/c):k.scale(c/d,1);ff(h,k);v.$e(k)}c=h.length;for(d=0;d<c;d++)k=h[d],k[0]+=e,k[1]+=f,k[2]+=e,k[3]+=f,k[4]+=e,k[5]+=f,k[6]+=e,k[7]+=f;a.dg=h;return a.dg}
function of(a,b,c,d){function e(a,b,c,d){return(a*d<b*c?-1:1)*Math.acos((a*c+b*d)/(Math.sqrt(a*a+b*b)*Math.sqrt(c*c+d*d)))}if(null!==a.dg&&!1===b.$a)return a.dg;b=a.Yg;var f=a.og;if(0===b||0===f)return a.dg=[],a.dg;var h=Math.PI/180*a.td,k=a.$n,l=a.rn,m=a.vb,n=a.Bb,p=Math.cos(h),q=Math.sin(h),r=p*(c-m)/2+q*(d-n)/2,h=-q*(c-m)/2+p*(d-n)/2,s=r*r/(b*b)+h*h/(f*f);1<s&&(b*=Math.sqrt(s),f*=Math.sqrt(s));s=(k===l?-1:1)*Math.sqrt((b*b*f*f-b*b*h*h-f*f*r*r)/(b*b*h*h+f*f*r*r));isNaN(s)&&(s=0);k=s*b*h/f;s=s*-f*
r/b;isNaN(k)&&(k=0);isNaN(s)&&(s=0);c=(c+m)/2+p*k-q*s;d=(d+n)/2+q*k+p*s;n=e(1,0,(r-k)/b,(h-s)/f);p=(r-k)/b;m=(h-s)/f;r=(-r-k)/b;k=(-h-s)/f;h=e(p,m,r,k);r=(p*r+m*k)/(Math.sqrt(p*p+m*m)*Math.sqrt(r*r+k*k));-1>=r?h=Math.PI:1<=r&&(h=0);!l&&0<h&&(h-=2*Math.PI);l&&0>h&&(h+=2*Math.PI);l=b>f?1:b/f;r=b>f?f/b:1;b=oe(b>f?b:f,n,n+h,!0);f=v.qh();f.reset();f.translate(c,d);f.rotate(a.td,0,0);f.scale(l,r);ff(b,f);v.$e(f);a.dg=b;return a.dg}
v.defineProperty(wf,{Fw:"isClosed"},function(){return this.Eh},function(a){this.Eh!==a&&(this.Eh=a,this.$a=!0)});v.defineProperty(wf,{type:"type"},function(){return this.ia},function(a){this.D&&v.ka(this,a);this.ia=a;this.$a=!0});v.defineProperty(wf,{I:"endX"},function(){return this.vb},function(a){this.D&&v.ka(this,a);this.vb=a;this.$a=!0});v.defineProperty(wf,{J:"endY"},function(){return this.Bb},function(a){this.D&&v.ka(this,a);this.Bb=a;this.$a=!0});
v.defineProperty(wf,{qc:"point1X"},function(){return this.td},function(a){this.D&&v.ka(this,a);this.td=a;this.$a=!0});v.defineProperty(wf,{Kc:"point1Y"},function(){return this.Ge},function(a){this.D&&v.ka(this,a);this.Ge=a;this.$a=!0});v.defineProperty(wf,{lh:"point2X"},function(){return this.Yg},function(a){this.D&&v.ka(this,a);this.Yg=a;this.$a=!0});v.defineProperty(wf,{mh:"point2Y"},function(){return this.og},function(a){this.D&&v.ka(this,a);this.og=a;this.$a=!0});
v.defineProperty(wf,{na:"centerX"},function(){return this.td},function(a){this.D&&v.ka(this,a);this.td=a;this.$a=!0});v.defineProperty(wf,{ua:"centerY"},function(){return this.Ge},function(a){this.D&&v.ka(this,a);this.Ge=a;this.$a=!0});v.defineProperty(wf,{radiusX:"radiusX"},function(){return this.Yg},function(a){0>a&&v.va(a,">= zero",wf,"radiusX");this.D&&v.ka(this,a);this.Yg=a;this.$a=!0});
v.defineProperty(wf,{radiusY:"radiusY"},function(){return this.og},function(a){0>a&&v.va(a,">= zero",wf,"radiusY");this.D&&v.ka(this,a);this.og=a;this.$a=!0});v.defineProperty(wf,{ye:"startAngle"},function(){return this.vb},function(a){this.vb!==a&&(this.D&&v.ka(this,a),a%=360,0>a&&(a+=360),this.vb=a,this.$a=!0)});v.defineProperty(wf,{Bf:"sweepAngle"},function(){return this.Bb},function(a){this.D&&v.ka(this,a);360<a&&(a=360);-360>a&&(a=-360);this.Bb=a;this.$a=!0});
v.defineProperty(wf,{sl:"isClockwiseArc"},function(){return this.rn},function(a){this.D&&v.ka(this,a);this.rn=a;this.$a=!0});v.defineProperty(wf,{Iw:"isLargeArc"},function(){return this.$n},function(a){this.D&&v.ka(this,a);this.$n=a;this.$a=!0});v.defineProperty(wf,{ej:"xAxisRotation"},function(){return this.td},function(a){a%=360;0>a&&(a+=360);this.D&&v.ka(this,a);this.td=a;this.$a=!0});
function xf(){this.S=null;this.Qy=(new y(0,0)).freeze();this.Vx=(new y(0,0)).freeze();this.xu=this.tv=0;this.yu=1;this.iv="";this.$v=this.Ou=!1;this.Ku=this.Au=0;this.fj=this.Wu=this.fv=!1;this.Eq=null;this.Yv=0;this.qg=this.Xv=null}v.ea("InputEvent",xf);
xf.prototype.copy=function(){var a=new xf;a.S=this.S;a.Qy.assign(this.jf);a.Vx.assign(this.ca);a.tv=this.tv;a.xu=this.xu;a.yu=this.yu;a.iv=this.iv;a.Ou=this.Ou;a.$v=this.$v;a.Au=this.Au;a.Ku=this.Ku;a.fv=this.fv;a.Wu=this.Wu;a.fj=this.fj;a.Eq=this.Eq;a.Yv=this.Yv;a.Xv=this.Xv;a.qg=this.qg;return a};
xf.prototype.toString=function(){var a="^";0!==this.pd&&(a+="M:"+this.pd);0!==this.button&&(a+="B:"+this.button);""!==this.key&&(a+="K:"+this.key);0!==this.We&&(a+="C:"+this.We);0!==this.gl&&(a+="D:"+this.gl);this.zc&&(a+="h");this.bubbles&&(a+="b");null!==this.ca&&(a+="@"+this.ca.toString());return a};v.defineProperty(xf,{g:"diagram"},function(){return this.S},function(a){this.S=a});v.defineProperty(xf,{jf:"viewPoint"},function(){return this.Qy},function(a){v.A(a,y,xf,"viewPoint");this.Qy.assign(a)});
v.defineProperty(xf,{ca:"documentPoint"},function(){return this.Vx},function(a){v.A(a,y,xf,"documentPoint");this.Vx.assign(a)});v.defineProperty(xf,{pd:"modifiers"},function(){return this.tv},function(a){this.tv=a});v.defineProperty(xf,{button:"button"},function(){return this.xu},function(a){this.xu=a;if(null===this.event)switch(a){case 0:this.buttons=1;break;case 1:this.buttons=4;break;case 2:this.buttons=2}});
v.defineProperty(xf,{buttons:"buttons"},function(){return this.yu},function(a){this.yu=a});v.defineProperty(xf,{key:"key"},function(){return this.iv},function(a){this.iv=a});v.defineProperty(xf,{il:"down"},function(){return this.Ou},function(a){this.Ou=a});v.defineProperty(xf,{up:"up"},function(){return this.$v},function(a){this.$v=a});v.defineProperty(xf,{We:"clickCount"},function(){return this.Au},function(a){this.Au=a});
v.defineProperty(xf,{gl:"delta"},function(){return this.Ku},function(a){this.Ku=a});v.defineProperty(xf,{vt:"isMultiTouch"},function(){return this.fv},function(a){this.fv=a});v.defineProperty(xf,{zc:"handled"},function(){return this.Wu},function(a){this.Wu=a});v.defineProperty(xf,{bubbles:"bubbles"},function(){return this.fj},function(a){this.fj=a});v.defineProperty(xf,{event:"event"},function(){return this.Eq},function(a){this.Eq=a});
v.u(xf,{Wi:"isTouchEvent"},function(){var a=window.TouchEvent;return a&&this.event instanceof a?!0:(a=window.PointerEvent)&&this.event instanceof a&&"touch"===this.event.pointerType});v.u(xf,{ak:"isMac"},function(){return v.ak});v.defineProperty(xf,{timestamp:"timestamp"},function(){return this.Yv},function(a){this.Yv=a});v.defineProperty(xf,{Jg:"targetDiagram"},function(){return this.Xv},function(a){this.Xv=a});
v.defineProperty(xf,{ze:"targetObject"},function(){return this.qg},function(a){this.qg=a});v.defineProperty(xf,{control:"control"},function(){return 0!==(this.pd&1)},function(a){this.pd=a?this.pd|1:this.pd&-2});v.defineProperty(xf,{shift:"shift"},function(){return 0!==(this.pd&4)},function(a){this.pd=a?this.pd|4:this.pd&-5});v.defineProperty(xf,{alt:"alt"},function(){return 0!==(this.pd&2)},function(a){this.pd=a?this.pd|2:this.pd&-3});
v.defineProperty(xf,{Et:"meta"},function(){return 0!==(this.pd&8)},function(a){this.pd=a?this.pd|8:this.pd&-9});v.defineProperty(xf,{left:"left"},function(){var a=this.event;return null!==a&&a instanceof MouseEvent&&("mousedown"===a.type||"mouseup"===a.type)?0===this.button:0!==(this.buttons&1)},function(a){this.buttons=a?this.buttons|1:this.buttons&-2});
v.defineProperty(xf,{right:"right"},function(){var a=this.event;return null!==a&&a instanceof MouseEvent&&("mousedown"===a.type||"mouseup"===a.type)?2===this.button:0!==(this.buttons&2)},function(a){this.buttons=a?this.buttons|2:this.buttons&-3});v.defineProperty(xf,{gK:"middle"},function(){var a=this.event;return null!==a&&a instanceof MouseEvent&&("mousedown"===a.type||"mouseup"===a.type)?1===this.button:0!==(this.buttons&4)},function(a){this.buttons=a?this.buttons|4:this.buttons&-5});
function yf(){this.S=null;this.Ob="";this.Cv=this.Vv=null;this.zu=!1}v.ea("DiagramEvent",yf);yf.prototype.copy=function(){var a=new yf;a.S=this.S;a.Ob=this.Ob;a.Vv=this.Vv;a.Cv=this.Cv;a.zu=this.zu;return a};yf.prototype.toString=function(){var a="*"+this.name;this.cancel&&(a+="x");null!==this.qA&&(a+=":"+this.qA.toString());null!==this.Wz&&(a+="("+this.Wz.toString()+")");return a};v.defineProperty(yf,{g:"diagram"},function(){return this.S},function(a){this.S=a});
v.defineProperty(yf,{name:"name"},function(){return this.Ob},function(a){this.Ob=a});v.defineProperty(yf,{qA:"subject"},function(){return this.Vv},function(a){this.Vv=a});v.defineProperty(yf,{Wz:"parameter"},function(){return this.Cv},function(a){this.Cv=a});v.defineProperty(yf,{cancel:"cancel"},function(){return this.zu},function(a){this.zu=a});function zf(){this.bq=Af;this.lm=this.sv="";this.Br=this.Cr=this.Fr=this.Gr=this.Er=this.S=this.Xd=null}v.ea("ChangedEvent",zf);var Bf;
zf.Transaction=Bf=v.p(zf,"Transaction",-1);var Af;zf.Property=Af=v.p(zf,"Property",0);var Cf;zf.Insert=Cf=v.p(zf,"Insert",1);var Df;zf.Remove=Df=v.p(zf,"Remove",2);zf.prototype.clear=zf.prototype.clear=function(){this.Br=this.Cr=this.Fr=this.Gr=this.Er=this.S=this.Xd=null};
zf.prototype.copy=function(){var a=new zf;a.bq=this.bq;a.sv=this.sv;a.lm=this.lm;a.Xd=this.Xd;a.S=this.S;a.Er=this.Er;var b=this.Gr;a.Gr=v.Ta(b)&&"function"===typeof b.R?b.R():b;b=this.Fr;a.Fr=v.Ta(b)&&"function"===typeof b.R?b.R():b;b=this.Cr;a.Cr=v.Ta(b)&&"function"===typeof b.R?b.R():b;b=this.Br;a.Br=v.Ta(b)&&"function"===typeof b.R?b.R():b;return a};
zf.prototype.toString=function(){var a="",a=this.wc===Bf?a+"* ":this.wc===Af?a+(null!==this.ba?"!m":"!d"):a+((null!==this.ba?"!m":"!d")+this.wc);this.propertyName&&"string"===typeof this.propertyName&&(a+=" "+this.propertyName);this.hf&&this.hf!==this.propertyName&&(a+=" "+this.hf);a+=": ";this.wc===Bf?null!==this.oldValue&&(a+=" "+this.oldValue):(null!==this.object&&(a+=Ef(this.object)),null!==this.oldValue&&(a+="  old: "+Ef(this.oldValue)),null!==this.Cg&&(a+=" "+this.Cg),null!==this.newValue&&
(a+="  new: "+Ef(this.newValue)),null!==this.Ag&&(a+=" "+this.Ag));return a};zf.prototype.getValue=zf.prototype.ja=function(a){return a?this.oldValue:this.newValue};zf.prototype.getParam=function(a){return a?this.Cg:this.Ag};zf.prototype.canUndo=zf.prototype.canUndo=function(){return null!==this.ba||null!==this.g?!0:!1};zf.prototype.undo=zf.prototype.undo=function(){this.canUndo()&&(null!==this.ba?this.ba.Cm(this,!0):null!==this.g&&this.g.Cm(this,!0))};
zf.prototype.canRedo=zf.prototype.canRedo=function(){return null!==this.ba||null!==this.g?!0:!1};zf.prototype.redo=zf.prototype.redo=function(){this.canRedo()&&(null!==this.ba?this.ba.Cm(this,!1):null!==this.g&&this.g.Cm(this,!1))};v.defineProperty(zf,{ba:"model"},function(){return this.Xd},function(a){this.Xd=a});v.defineProperty(zf,{g:"diagram"},function(){return this.S},function(a){this.S=a});v.defineProperty(zf,{wc:"change"},function(){return this.bq},function(a){this.bq=a});
v.defineProperty(zf,{hf:"modelChange"},function(){return this.sv},function(a){this.sv=a});v.defineProperty(zf,{propertyName:"propertyName"},function(){return this.lm},function(a){this.lm=a});v.u(zf,{hE:"isTransactionFinished"},function(){return this.bq===Bf&&("CommittedTransaction"===this.lm||"FinishedUndo"===this.lm||"FinishedRedo"===this.lm)});v.defineProperty(zf,{object:"object"},function(){return this.Er},function(a){this.Er=a});
v.defineProperty(zf,{oldValue:"oldValue"},function(){return this.Gr},function(a){this.Gr=a});v.defineProperty(zf,{Cg:"oldParam"},function(){return this.Fr},function(a){this.Fr=a});v.defineProperty(zf,{newValue:"newValue"},function(){return this.Cr},function(a){this.Cr=a});v.defineProperty(zf,{Ag:"newParam"},function(){return this.Br},function(a){this.Br=a});
function F(a){1<arguments.length&&v.k("Model constructor can only take one optional argument, the Array of node data.");v.ec(this);this.qq=this.Ob="";this.ui=!1;this.yy={};this.Jf=[];this.tc=new na(null,Object);this.Cj="key";this.xn=this.eo=null;this.iq=this.Du=!1;this.Sp=null;this.fm="category";this.pi=new na(null,J);this.wj=null;this.Ii=!1;this.Py=null;this.la=new Ff;void 0!==a&&(this.Zf=a)}v.ea("Model",F);
F.prototype.cloneProtected=function(a){a.Ob=this.Ob;a.qq=this.qq;a.ui=this.ui;a.Cj=this.Cj;a.eo=this.eo;a.xn=this.xn;a.UI=this.Du;a.iq=this.iq;a.Sp=this.Sp;a.fm=this.fm};F.prototype.copy=function(){var a=new this.constructor;this.cloneProtected(a);return a};F.prototype.clear=F.prototype.clear=function(){this.Jf=[];this.tc.clear();this.pi.clear();this.la.clear()};g=F.prototype;
g.toString=function(a){void 0===a&&(a=0);if(1<a)return this.tA();var b=(""!==this.name?this.name:"")+" Model";if(0<a){b+="\n node data:";a=this.Zf;for(var c=v.Va(a),d=0;d<c;d++)var e=v.Pa(a,d),b=b+(" "+this.gb(e)+":"+Ef(e))}return b};
g.hn=function(){var a="";""!==this.name&&(a+=',\n  "name": '+this.quote(this.name));""!==this.el&&(a+=',\n  "dataFormat": '+this.quote(this.el));this.ab&&(a+=',\n  "isReadOnly": '+this.ab);"key"!==this.yl&&"string"===typeof this.yl&&(a+=',\n  "nodeKeyProperty": '+this.quote(this.yl));this.fz&&(a+=',\n  "copiesArrays": true');this.ez&&(a+=',\n  "copiesArrayObjects": true');"category"!==this.Xm&&"string"===typeof this.Xm&&(a+=',\n  "nodeCategoryProperty": '+this.quote(this.Xm));return a};
g.Mt=function(a){a.name&&(this.name=a.name);a.dataFormat&&(this.el=a.dataFormat);a.isReadOnly&&(this.ab=a.isReadOnly);a.nodeKeyProperty&&(this.yl=a.nodeKeyProperty);a.copiesArrays&&(this.fz=a.copiesArrays);a.copiesArrayObjects&&(this.ez=a.copiesArrayObjects);a.nodeCategoryProperty&&(this.Xm=a.nodeCategoryProperty)};function Gf(a){return',\n  "modelData": '+Hf(a,a.bk)}function If(a,b){var c=b.modelData;v.Ta(c)&&(a.Pt(c),a.bk=c)}
g.BA=function(){var a=this.bk,b=!1,c;for(c in a)if(!Lf(c,a[c])){b=!0;break}a="";b&&(a=Gf(this));return a+',\n  "nodeDataArray": '+Mf(this,this.Zf,!0)};g.Zz=function(a){If(this,a);a=a.nodeDataArray;v.isArray(a)&&(this.Pt(a),this.Zf=a)};
function Nf(a,b,c,d){if(b===c)return!0;if(typeof b!==typeof c||"function"===typeof b||"function"===typeof c)return!1;if(Array.isArray(b)&&Array.isArray(c)){if(d.ja(b)===c)return!0;d.add(b,c);if(b.length!==c.length)return!1;for(var e=0;e<b.length;e++)if(!Nf(a,b[e],c[e],d))return!1;return!0}if(v.Ta(b)&&v.Ta(c)){if(d.ja(b)===c)return!0;d.add(b,c);for(e in b){var f=b[e];if(!Lf(e,f)){var h=c[e];if(void 0===h||!Nf(a,f,h,d))return!1}}for(var k in c)if(h=c[k],!Lf(k,h)&&(f=b[k],void 0===f||!Nf(a,f,h,d)))return!1;
return!0}return!1}function Of(a,b,c){a[c]!==b[c]&&v.k("Model.computeJsonDifference: Model."+c+' is not the same in both models: "'+a[c]+'" and "'+b[c]+'"')}
g.CA=function(a){Of(this,a,"nodeKeyProperty");this instanceof Pf&&Of(this,a,"nodeParentKeyProperty");for(var b=new J,c=new J,d=(new J).Tc(this.tc.jE),e=new na,f=a.Zf,h=0;h<f.length;h++){var k=f[h],l=a.gb(k);if(void 0!==l){d.remove(l);var m=this.ce(l);null===m?(b.add(l),c.add(k)):Nf(this,m,k,e)||c.add(k)}else this.Jz(k),l=this.gb(k),b.add(l),c.add(k)}f="";Nf(this,this.bk,a.bk,e)||(f+=Gf(this));0<b.count&&(f+=this.Dx+Mf(this,b.dc(),!0));0<c.count&&(f+=this.KA+Mf(this,c.dc(),!0));0<d.count&&(f+=this.Fx+
Mf(this,d.dc(),!0));return f};F.prototype.computeJsonDifference=F.prototype.computeJSONDifference=function(a,b){v.A(a,F,F,"computeJsonDifference:newmodel");void 0===b&&(b=this.constructor===F?"go.Model":this.constructor===Q?"go.GraphLinksModel":this.constructor===Pf?"go.TreeModel":v.af(this));return'{ "class": '+this.quote(b)+', "incremental": 1'+this.hn()+this.CA(a)+"}"};g=F.prototype;g.Dx=',\n  "insertedNodeKeys": ';g.KA=',\n  "modifiedNodeData": ';g.Fx=',\n  "removedNodeKeys": ';
g.AA=function(a,b){var c=this,d=!1,e=new J,f=new J,h=new J;a.Pf.each(function(a){a.ba===c&&("nodeDataArray"===a.hf?a.wc===Cf?e.add(a.newValue):a.wc===Df&&h.add(a.oldValue):c.Ie(a.object)?f.add(a.object):c.bk===a.object&&a.wc===Af&&(d=!0))});var k=new J;e.each(function(a){k.add(c.gb(a));b||f.add(a)});var l=new J;h.each(function(a){l.add(c.gb(a));b&&f.add(a)});var m="";d&&(m+=Gf(this));0<k.count&&(m+=(b?this.Fx:this.Dx)+Mf(this,k.dc(),!0));0<f.count&&(m+=this.KA+Mf(this,f.dc(),!0));0<l.count&&(m+=(b?
this.Dx:this.Fx)+Mf(this,l.dc(),!0));return m};
g.Yz=function(a){If(this,a);var b=a.insertedNodeKeys;if(v.isArray(b))for(var c=v.Va(b),d=0;d<c;d++){var e=v.Pa(b,d),f=this.ce(e);null===f&&(f=this.copyNodeData({}),this.lx(f,e),this.Xk(f))}b=a.modifiedNodeData;if(v.isArray(b))for(c=v.Va(b),d=0;d<c;d++){var h=v.Pa(b,d),e=this.gb(h),f=this.ce(e);if(null!==f)for(var k in h)"__gohashid"!==k&&k!==this.yl&&this.setDataProperty(f,k,h[k])}a=a.removedNodeKeys;if(v.isArray(a))for(c=v.Va(a),d=0;d<c;d++)e=v.Pa(a,d),f=this.ce(e),null!==f&&this.bx(f)};
F.prototype.toIncrementalJson=F.prototype.toIncrementalJSON=function(a,b){v.A(a,zf,F,"toIncrementalJson:e");a.wc!==Bf&&v.k("Model.toIncrementalJson argument is not a Transaction ChangedEvent:"+a.toString());var c=a.object;if(!(a.hE&&c instanceof Qf))return'{ "incremental": 0 }';void 0===b&&(b=this.constructor===F?"go.Model":this.constructor===Q?"go.GraphLinksModel":this.constructor===Pf?"go.TreeModel":v.af(this));return'{ "class": '+this.quote(b)+', "incremental": 1'+this.hn()+this.AA(c,"FinishedUndo"===
a.propertyName)+"}"};F.prototype.toJson=F.prototype.toJSON=F.prototype.tA=function(a){void 0===a&&(a=this.constructor===F?"go.Model":this.constructor===Q?"go.GraphLinksModel":this.constructor===Pf?"go.TreeModel":v.af(this));return'{ "class": '+this.quote(a)+this.hn()+this.BA()+"}"};
F.prototype.applyIncrementalJson=F.prototype.applyIncrementalJSON=function(a){var b=null;if("string"===typeof a)if(window.JSON&&window.JSON.parse)try{b=window.JSON.parse(a)}catch(c){}else v.trace("WARNING: no JSON.parse available");else"object"===typeof a?b=a:v.k("Unable to modify a Model from: "+a);var d=b.incremental;"number"!==typeof d&&v.k("Unable to apply non-incremental changes to Model: "+a);0!==d&&(this.Qb("applyIncrementalJson"),this.Yz(b),this.yd("applyIncrementalJson"))};
F.fromJson=F.fromJSON=function(a,b){void 0===b&&(b=null);null!==b&&v.A(b,F,F,"fromJson:model");var c=null;if("string"===typeof a)if(window.JSON&&window.JSON.parse)try{c=window.JSON.parse(a)}catch(d){}else v.trace("WARNING: no JSON.parse available");else"object"===typeof a?c=a:v.k("Unable to construct a Model from: "+a);if(null===b){var e;e=null;var f=c["class"];if("string"===typeof f)try{var h=null;0===f.indexOf("go.")?(f=f.substr(3),h=ea[f]):(h=ea[f],void 0===h&&(h=window[f]));"function"===typeof h&&
(e=new h)}catch(k){}null===e||e instanceof F?b=e:v.k("Unable to construct a Model of declared class: "+c["class"])}null===b&&(b=new Q);b.Mt(c);b.Zz(c);return b};
F.prototype.replaceJsonObjects=F.prototype.Pt=function(a){if(v.isArray(a))for(var b=v.Va(a),c=0;c<b;c++){var d=v.Pa(a,c);v.Ta(d)&&v.hD(a,c,this.Pt(d))}else if(v.Ta(a)){for(c in a)if(d=a[c],v.Ta(d)&&(d=this.Pt(d),a[c]=d,"points"===c&&Array.isArray(d))){for(var e=0===d.length%2,f=0;f<d.length;f++)if("number"!==typeof d[f]){e=!1;break}if(e){e=new I(y);for(f=0;f<d.length/2;f++)e.add(new y(d[2*f],d[2*f+1]));e.freeze();a[c]=e}}if("object"===typeof a){c=a;d=a["class"];if("NaN"===d)c=NaN;else if("Date"===
d)c=new Date(a.value);else if("go.Point"===d)c=new y(Rf(a.x),Rf(a.y));else if("go.Size"===d)c=new ia(Rf(a.width),Rf(a.height));else if("go.Rect"===d)c=new B(Rf(a.x),Rf(a.y),Rf(a.width),Rf(a.height));else if("go.Margin"===d)c=new eb(Rf(a.top),Rf(a.right),Rf(a.bottom),Rf(a.left));else if("go.Spot"===d)c="string"===typeof a["enum"]?nb(a["enum"]):new L(Rf(a.x),Rf(a.y),Rf(a.offsetX),Rf(a.offsetY));else if("go.Brush"===d){if(c=new ha,c.type=ra(ha,a.type),"string"===typeof a.color&&(c.color=a.color),a.start instanceof
L&&(c.start=a.start),a.end instanceof L&&(c.end=a.end),"number"===typeof a.startRadius&&(c.bu=Rf(a.startRadius)),"number"===typeof a.endRadius&&(c.at=Rf(a.endRadius)),a=a.colorStops,v.Ta(a))for(b in a)c.addColorStop(parseFloat(b),a[b])}else"go.Geometry"===d?(b=null,b="string"===typeof a.path?bf(a.path):new re,b.type=ra(re,a.type),"number"===typeof a.startX&&(b.za=Rf(a.startX)),"number"===typeof a.startY&&(b.xa=Rf(a.startY)),"number"===typeof a.endX&&(b.I=Rf(a.endX)),"number"===typeof a.endY&&(b.J=
Rf(a.endY)),a.spot1 instanceof L&&(b.B=a.spot1),a.spot2 instanceof L&&(b.C=a.spot2),c=b):"go.EnumValue"===d&&(b=a.classType,0===b.indexOf("go.")&&(b=b.substr(3)),c=ra(ea[b],a.name));a=c}}return a};
F.prototype.quote=function(a){for(var b="",c=a.length,d=0;d<c;d++){var e=a[d];if('"'===e||"\\"===e)b+="\\"+e;else if("\b"===e)b+="\\b";else if("\f"===e)b+="\\f";else if("\n"===e)b+="\\n";else if("\r"===e)b+="\\r";else if("\t"===e)b+="\\t";else var f=a.charCodeAt(d),b=16>f?b+("\\u000"+a.charCodeAt(d).toString(16)):32>f?b+("\\u00"+a.charCodeAt(d).toString(16)):8232===f?b+"\\u2028":8233===f?b+"\\u2029":b+e}return'"'+b+'"'};
F.prototype.writeJsonValue=F.prototype.hu=function(a){return void 0===a?"undefined":null===a?"null":!0===a?"true":!1===a?"false":"string"===typeof a?this.quote(a):"number"===typeof a?Infinity===a?"9e9999":-Infinity===a?"-9e9999":isNaN(a)?'{"class":"NaN"}':a.toString():a instanceof Date?'{"class":"Date", "value":"'+a.toJSON()+'"}':a instanceof Number?this.hu(a.valueOf()):v.isArray(a)?Mf(this,a):v.Ta(a)?Hf(this,a):"function"===typeof a?"null":a.toString()};
function Mf(a,b,c){void 0===c&&(c=!1);var d=v.Va(b);if(0>=d)return"[]";var e=new sa;e.add("[ ");c&&1<d&&e.add("\n");for(var f=0;f<d;f++){var h=v.Pa(b,f);void 0!==h&&(0<f&&(e.add(","),c&&e.add("\n")),e.add(a.hu(h)))}c&&1<d&&e.add("\n");e.add(" ]");return e.toString()}function Lf(a,b){return void 0===b||"__gohashid"===a||"_"===a[0]||"function"===typeof b?!0:!1}function Sf(a){return isNaN(a)?"NaN":Infinity===a?"9e9999":-Infinity===a?"-9e9999":a}
function Hf(a,b){var c=b;if(c instanceof y){var d=c;b={"class":"go.Point",x:Sf(d.x),y:Sf(d.y)}}else if(c instanceof ia){var e=c;b={"class":"go.Size",width:Sf(e.width),height:Sf(e.height)}}else if(c instanceof B)b={"class":"go.Rect",x:Sf(c.x),y:Sf(c.y),width:Sf(c.width),height:Sf(c.height)};else if(c instanceof eb)b={"class":"go.Margin",top:Sf(c.top),right:Sf(c.right),bottom:Sf(c.bottom),left:Sf(c.left)};else if(c instanceof L)e=c,b=e.cd()?{"class":"go.Spot",x:Sf(e.x),y:Sf(e.y),offsetX:Sf(e.offsetX),
offsetY:Sf(e.offsetY)}:{"class":"go.Spot","enum":e.toString()};else if(c instanceof ha){b={"class":"go.Brush",type:c.type.name};if(c.type===Tf)b.color=c.color;else if(c.type===Uf||c.type===Uc)b.start=c.start,b.end=c.end,c.type===Uc&&(0!==c.bu&&(b.startRadius=Sf(c.bu)),isNaN(c.at)||(b.endRadius=Sf(c.at)));if(null!==c.Xs){for(var f={},h=c.Xs.i;h.next();)f[h.key]=h.value;b.colorStops=f}}else if(c instanceof re)b={"class":"go.Geometry",type:c.type.name},0!==c.za&&(b.startX=Sf(c.za)),0!==c.xa&&(b.startY=
Sf(c.xa)),0!==c.I&&(b.endX=Sf(c.I)),0!==c.J&&(b.endY=Sf(c.J)),c.B.K(tb)||(b.spot1=c.B),c.C.K(Fb)||(b.spot2=c.C),c.type===De&&(b.path=af(c));else if(c instanceof fa)b={"class":"go.EnumValue",classType:v.af(c.qe),name:c.name};else if(c instanceof G||c instanceof E||c instanceof Vf||c instanceof F||c instanceof Wf||c instanceof Xf||c instanceof Yf||c instanceof Zf||c instanceof Ff||c instanceof Qf)return v.trace("ERROR: trying to convert a GraphObject or Diagram or Model or Tool or Layout or UndoManager into JSON text: "+
c.toString()),"{}";f="{";c=!0;for(d in b)if(e=v.qb(b,d),!Lf(d,e))if(c?c=!1:f+=", ",f+='"'+d+'":',"points"===d&&e instanceof I&&e.ia===y){h=e;e="[";for(h=h.i;h.next();){var k=h.value;1<e.length&&(e+=",");e+=a.hu(k.x);e+=",";e+=a.hu(k.y)}e+="]";f+=e}else f+=a.hu(e);return f+"}"}function Rf(a){return"number"===typeof a?a:"NaN"===a?NaN:"9e9999"===a?Infinity:"-9e9999"===a?-Infinity:parseFloat(a)}
v.defineProperty(F,{name:"name"},function(){return this.Ob},function(a){var b=this.Ob;b!==a&&(v.j(a,"string",F,"name"),this.Ob=a,this.h("name",b,a))});v.defineProperty(F,{el:"dataFormat"},function(){return this.qq},function(a){var b=this.qq;b!==a&&(v.j(a,"string",F,"dataFormat"),this.qq=a,this.h("dataFormat",b,a))});v.defineProperty(F,{ab:"isReadOnly"},function(){return this.ui},function(a){var b=this.ui;b!==a&&(v.j(a,"boolean",F,"isReadOnly"),this.ui=a,this.h("isReadOnly",b,a))});
v.defineProperty(F,{bk:"modelData"},function(){return this.yy},function(a){var b=this.yy;b!==a&&(v.j(a,"object",F,"modelData"),this.yy=a,this.h("modelData",b,a),this.Hb(a))});F.prototype.addChangedListener=F.prototype.xm=function(a){v.j(a,"function",F,"addChangedListener:listener");null===this.wj&&(this.wj=new I("function"));this.wj.add(a)};
F.prototype.removeChangedListener=F.prototype.Nt=function(a){v.j(a,"function",F,"removeChangedListener:listener");null!==this.wj&&(this.wj.remove(a),0===this.wj.count&&(this.wj=null))};F.prototype.mw=function(a){this.tb||this.la.TD(a);if(null!==this.wj){var b=this.wj,c=b.length;if(1===c)b=b.da(0),b(a);else if(0!==c)for(var d=b.dc(),e=0;e<c;e++)b=d[e],b(a)}};F.prototype.raiseChangedEvent=F.prototype.Lc=function(a,b,c,d,e,f,h){$f(this,"",a,b,c,d,e,f,h)};
F.prototype.raiseChanged=F.prototype.h=function(a,b,c,d,e){$f(this,"",Af,a,this,b,c,d,e)};F.prototype.raiseDataChanged=F.prototype.Xz=function(a,b,c,d,e,f){$f(this,"",Af,b,a,c,d,e,f)};function $f(a,b,c,d,e,f,h,k,l){void 0===k&&(k=null);void 0===l&&(l=null);var m=new zf;m.ba=a;m.wc=c;m.hf=b;m.propertyName=d;m.object=e;m.oldValue=f;m.Cg=k;m.newValue=h;m.Ag=l;a.mw(m)}
v.defineProperty(F,{la:"undoManager"},function(){return this.Py},function(a){var b=this.Py;b!==a&&(v.A(a,Ff,F,"undoManager"),null!==b&&b.gI(this),this.Py=a,null!==a&&a.$F(this))});v.defineProperty(F,{tb:"skipsUndoManager"},function(){return this.Ii},function(a){v.j(a,"boolean",F,"skipsUndoManager");this.Ii=a});
F.prototype.Cm=function(a,b){if(null!==a&&a.ba===this)if(a.wc===Af){var c=a.object,d=a.propertyName,e=a.ja(b);v.Ja(c,d,e)}else a.wc===Cf?"nodeDataArray"===a.hf?(c=a.newValue,v.Ta(c)&&(d=this.gb(c),void 0!==d&&(b?(v.Vh(this.Jf,a.Ag),this.tc.remove(d)):(v.Oi(this.Jf,a.Ag,c),this.tc.add(d,c))))):""===a.hf?(c=a.object,!v.isArray(c)&&a.propertyName&&(c=v.qb(a.object,a.propertyName)),v.isArray(c)&&(d=a.newValue,e=a.Ag,b?v.Vh(c,e):v.Oi(c,e,d))):v.k("unknown ChangedEvent.Insert object: "+a.toString()):a.wc===
Df?"nodeDataArray"===a.hf?(c=a.oldValue,v.Ta(c)&&(d=this.gb(c),void 0!==d&&(b?(v.Oi(this.Jf,a.Cg,c),this.tc.add(d,c)):(v.Vh(this.Jf,a.Cg),this.tc.remove(d))))):""===a.hf?(c=a.object,!v.isArray(c)&&a.propertyName&&(c=v.qb(a.object,a.propertyName)),v.isArray(c)&&(d=a.oldValue,e=a.Cg,b?v.Oi(c,e,d):v.Vh(c,e))):v.k("unknown ChangedEvent.Remove object: "+a.toString()):a.wc!==Bf&&v.k("unknown ChangedEvent: "+a.toString())};F.prototype.startTransaction=F.prototype.Qb=function(a){return this.la.Qb(a)};
F.prototype.commitTransaction=F.prototype.yd=function(a){return this.la.yd(a)};F.prototype.rollbackTransaction=F.prototype.zp=function(){return this.la.zp()};F.prototype.updateTargetBindings=F.prototype.Hb=function(a,b){void 0===b&&(b="");$f(this,"SourceChanged",Bf,b,a,null,null)};
v.defineProperty(F,{yl:"nodeKeyProperty"},function(){return this.Cj},function(a){var b=this.Cj;b!==a&&(lg(a,F,"nodeKeyProperty"),""===a&&v.k("Model.nodeKeyProperty may not be the empty string"),0<this.tc.count&&v.k("Cannot set Model.nodeKeyProperty when there is existing node data"),this.Cj=a,this.h("nodeKeyProperty",b,a))});function lg(a,b,c){"string"!==typeof a&&"function"!==typeof a&&v.Gd(a,"string or function",b,c)}
F.prototype.getKeyForNodeData=F.prototype.gb=function(a){if(null!==a){var b=this.Cj;if(""!==b&&(b=v.qb(a,b),void 0!==b)){if(mg(b))return b;v.k("Key value for node data "+a+" is not a number or a string: "+b)}}};
F.prototype.setKeyForNodeData=F.prototype.lx=function(a,b){void 0!==b&&null!==b&&mg(b)||v.Gd(b,"number or string",F,"setKeyForNodeData:key");if(null!==a){var c=this.Cj;if(""!==c)if(this.Ie(a)){var d=v.qb(a,c);d!==b&&null===this.ce(b)&&(v.Ja(a,c,b),this.tc.remove(d),this.tc.add(b,a),$f(this,"nodeKey",Af,c,a,d,b),"string"===typeof c&&this.Hb(a,c),this.Ot(d,b))}else v.Ja(a,c,b)}};
v.defineProperty(F,{$J:"makeUniqueKeyFunction"},function(){return this.eo},function(a){var b=this.eo;b!==a&&(null!==a&&v.j(a,"function",F,"makeUniqueKeyFunction"),this.eo=a,this.h("makeUniqueKeyFunction",b,a))});function mg(a){return"number"===typeof a||"string"===typeof a}F.prototype.containsNodeData=F.prototype.Ie=function(a){var b=this.gb(a);return void 0===b?!1:this.tc.ja(b)===a};
F.prototype.findNodeDataForKey=F.prototype.ce=function(a){null===a&&v.k("Model.findNodeDataForKey:key must not be null");return void 0!==a&&mg(a)?this.tc.ja(a):null};
v.defineProperty(F,{Zf:"nodeDataArray"},function(){return this.Jf},function(a){var b=this.Jf;if(b!==a){v.$y(a,F,"nodeDataArray");this.tc.clear();this.wA();for(var c=v.Va(a),d=0;d<c;d++){var e=v.Pa(a,d);if(!v.Ta(e)){v.k("Model.nodeDataArray must only contain Objects, not: "+e);return}v.nt(e)}this.Jf=a;for(var f=new I(Object),d=0;d<c;d++){var e=v.Pa(a,d),h=this.gb(e);void 0===h?f.add(e):null!==this.tc.ja(h)?f.add(e):this.tc.add(h,e)}for(d=f.i;d.next();)e=d.value,this.Jz(e),f=this.gb(e),void 0!==f&&
this.tc.add(f,e);$f(this,"nodeDataArray",Af,"nodeDataArray",this,b,a);for(d=0;d<c;d++)e=v.Pa(a,d),this.yp(e),this.xp(e);this.lD();v.qH(a)||(this.ab=!0)}});
F.prototype.makeNodeDataKeyUnique=F.prototype.Jz=function(a){if(null!==a){var b=this.Cj;if(""!==b){var c=this.gb(a);if(void 0===c||this.tc.contains(c)){var d=this.eo;if(null!==d&&(c=d(this,a),void 0!==c&&null!==c&&!this.tc.contains(c))){v.Ja(a,b,c);return}if("string"===typeof c){for(d=2;this.tc.contains(c+d);)d++;v.Ja(a,b,c+d)}else if(void 0===c||"number"===typeof c){for(d=-this.tc.count-1;this.tc.contains(d);)d--;v.Ja(a,b,d)}else v.k("Model.getKeyForNodeData returned something other than a string or a number: "+
c)}}}};F.prototype.addNodeData=F.prototype.Xk=function(a){null!==a&&(v.nt(a),ng(this,a,!0))};function ng(a,b,c){var d=a.gb(b);if(void 0===d||a.tc.ja(d)!==b)if(a.Jz(b),d=a.gb(b),void 0===d)v.k("Model.makeNodeDataKeyUnique failed on "+b+".  Data not added to Model.");else{a.tc.add(d,b);if(c){var e=v.Va(a.Jf);v.Oi(a.Jf,e,b)}$f(a,"nodeDataArray",Cf,"nodeDataArray",a,null,b,null,e);a.yp(b);a.xp(b)}}
F.prototype.addNodeDataCollection=function(a){if(v.isArray(a))for(var b=v.Va(a),c=0;c<b;c++)this.Xk(v.Pa(a,c));else for(a=a.i;a.next();)this.Xk(a.value)};F.prototype.removeNodeData=F.prototype.bx=function(a){null!==a&&og(this,a,!0)};function og(a,b,c){var d=a.gb(b);if(void 0!==d&&a.tc.contains(d)){a.tc.remove(d);if(c){var e=v.Zy(a.Jf,b);if(0>e)return;v.Vh(a.Jf,e)}$f(a,"nodeDataArray",Df,"nodeDataArray",a,b,null,e,null);a.fu(b)}}
F.prototype.removeNodeDataCollection=function(a){if(v.isArray(a))for(var b=v.Va(a),c=0;c<b;c++)this.bx(v.Pa(a,c));else for(a=a.i;a.next();)this.bx(a.value)};g=F.prototype;g.Ot=function(a,b){var c=pg(this,a);c instanceof J&&this.pi.add(b,c)};g.wA=function(){};g.yp=function(){};g.xp=function(){};g.fu=function(){};function qg(a,b,c){if(void 0!==b){var d=a.pi.ja(b);null===d&&(d=new J(Object),a.pi.add(b,d));d.add(c)}}
function rg(a,b,c){if(void 0!==b){var d=a.pi.ja(b);d instanceof J&&(void 0===c||null===c?a.pi.remove(b):(d.remove(c),0===d.count&&a.pi.remove(b)))}}function pg(a,b){if(void 0===b)return null;var c=a.pi.ja(b);return c instanceof J?c:null}F.prototype.clearUnresolvedReferences=F.prototype.lD=function(a){void 0===a?this.pi.clear():this.pi.remove(a)};
v.defineProperty(F,{vJ:"copyNodeDataFunction"},function(){return this.xn},function(a){var b=this.xn;b!==a&&(null!==a&&v.j(a,"function",F,"copyNodeDataFunction"),this.xn=a,this.h("copyNodeDataFunction",b,a))});v.defineProperty(F,{fz:"copiesArrays"},function(){return this.Du},function(a){var b=this.Du;b!==a&&(null!==a&&v.j(a,"boolean",F,"copiesArrays"),this.Du=a,this.h("copiesArrays",b,a))});
v.defineProperty(F,{ez:"copiesArrayObjects"},function(){return this.iq},function(a){var b=this.iq;b!==a&&(null!==a&&v.j(a,"boolean",F,"copiesArrayObjects"),this.iq=a,this.h("copiesArrayObjects",b,a))});F.prototype.copyNodeData=function(a){if(null===a)return null;var b=null,b=this.xn,b=null!==b?b(a,this):sg(this,a,!0);v.Ta(b)&&v.ec(b);return b};
function sg(a,b,c){if(a.fz&&Array.isArray(b)){var d=[];for(c=0;c<b.length;c++){var e=sg(a,b[c],a.ez);d.push(e)}v.ec(d);return d}if(c&&v.Ta(b)){c=(c=b.constructor)?new c:{};for(d in b)if("__gohashid"!==d){var e=v.qb(b,d),f;f=e;f instanceof G||f instanceof E||f instanceof Vf||f instanceof tg||f instanceof ug||f instanceof Wf||f instanceof Xf||f instanceof Yf||f instanceof xf||f instanceof yf?("_"!==d[0]&&v.trace('Warning: found GraphObject or Diagram reference when copying model data on property "'+
d+'" of data object: '+b.toString()+"  \nModel data should not have any references to a Diagram or any part of a diagram, such as: "+f.toString()),f=!0):f=f instanceof F||f instanceof Ff||f instanceof Qf||f instanceof zf?!0:!1;f||(e=sg(a,e,!1));v.Ja(c,d,e)}v.ec(c);return c}return b instanceof y?b.copy():b instanceof ia?b.copy():b instanceof B?b.copy():b instanceof L?b.copy():b instanceof eb?b.copy():b}
v.defineProperty(F,{bG:"afterCopyFunction"},function(){return this.Sp},function(a){var b=this.Sp;b!==a&&(null!==a&&v.j(a,"function",F,"afterCopyFunction"),this.Sp=a,this.h("afterCopyFunction",b,a))});var vg=!1;
F.prototype.setDataProperty=function(a,b,c){if(this.Ie(a))if(b===this.yl)this.lx(a,c);else{if(b===this.Xm){this.ix(a,c);return}}else!vg&&a instanceof G&&(vg=!0,v.trace('Model.setDataProperty is modifying a GraphObject, "'+a.toString()+'"'),v.trace("  Is that really your intent?"));var d=v.qb(a,b);d!==c&&(v.Ja(a,b,c),this.Xz(a,b,d,c))};F.prototype.addArrayItem=function(a,b){this.kH(a,-1,b)};
F.prototype.insertArrayItem=F.prototype.kH=function(a,b,c){a===this.Jf&&v.k("Model.insertArrayItem or Model.addArrayItem should not be called on the Model.nodeDataArray");0>b&&(b=v.Va(a));v.Oi(a,b,c);$f(this,"",Cf,"",a,null,c,null,b)};F.prototype.removeArrayItem=function(a,b){void 0===b&&(b=-1);a===this.Jf&&v.k("Model.removeArrayItem should not be called on the Model.nodeDataArray");-1===b&&(b=v.Va(a)-1);var c=v.Pa(a,b);v.Vh(a,b);$f(this,"",Df,"",a,c,null,b,null)};
v.defineProperty(F,{Xm:"nodeCategoryProperty"},function(){return this.fm},function(a){var b=this.fm;b!==a&&(lg(a,F,"nodeCategoryProperty"),this.fm=a,this.h("nodeCategoryProperty",b,a))});F.prototype.getCategoryForNodeData=F.prototype.sz=function(a){if(null===a)return"";var b=this.fm;if(""===b)return"";b=v.qb(a,b);if(void 0===b)return"";if("string"===typeof b)return b;v.k("getCategoryForNodeData found a non-string category for "+a+": "+b);return""};
F.prototype.setCategoryForNodeData=F.prototype.ix=function(a,b){v.j(b,"string",F,"setCategoryForNodeData:cat");if(null!==a){var c=this.fm;if(""!==c)if(this.Ie(a)){var d=v.qb(a,c);void 0===d&&(d="");d!==b&&(v.Ja(a,c,b),$f(this,"nodeCategory",Af,c,a,d,b))}else v.Ja(a,c,b)}};
function Q(a,b){2<arguments.length&&v.k("GraphLinksModel constructor can only take two optional arguments, the Array of node data and the Array of link data.");F.call(this);this.Hf=[];this.bo=new J(Object);this.Yc=new na(null,Object);this.Kk="";this.Ll=this.wn=this.fo=null;this.Gh="from";this.Hh="to";this.cm=this.bm="";this.am="category";this.kg="";this.ko="isGroup";this.Vg="group";this.jq=!1;void 0!==a&&(this.Zf=a);void 0!==b&&(this.zg=b)}v.Ia(Q,F);v.ea("GraphLinksModel",Q);
Q.prototype.cloneProtected=function(a){F.prototype.cloneProtected.call(this,a);a.Kk=this.Kk;a.fo=this.fo;a.wn=this.wn;a.Gh=this.Gh;a.Hh=this.Hh;a.bm=this.bm;a.cm=this.cm;a.am=this.am;a.kg=this.kg;a.ko=this.ko;a.Vg=this.Vg;a.jq=this.jq};Q.prototype.clear=Q.prototype.clear=function(){F.prototype.clear.call(this);this.Hf=[];this.Yc.clear();this.bo.clear()};g=Q.prototype;
g.toString=function(a){void 0===a&&(a=0);if(2<=a)return this.tA();var b=(""!==this.name?this.name:"")+" GraphLinksModel";if(0<a){b+="\n node data:";a=this.Zf;for(var c=v.Va(a),d=0,d=0;d<c;d++)var e=v.Pa(a,d),b=b+(" "+this.gb(e)+":"+Ef(e));b+="\n link data:";a=this.zg;c=v.Va(a);for(d=0;d<c;d++)e=v.Pa(a,d),b+=" "+this.ol(e)+"--\x3e"+this.pl(e)}return b};
g.hn=function(){var a=F.prototype.hn.call(this),b="";"category"!==this.At&&"string"===typeof this.At&&(b+=',\n  "linkCategoryProperty": '+this.quote(this.At));""!==this.Yi&&"string"===typeof this.Yi&&(b+=',\n  "linkKeyProperty": '+this.quote(this.Yi));"from"!==this.ip&&"string"===typeof this.ip&&(b+=',\n  "linkFromKeyProperty": '+this.quote(this.ip));"to"!==this.kp&&"string"===typeof this.kp&&(b+=',\n  "linkToKeyProperty": '+this.quote(this.kp));""!==this.Bt&&"string"===typeof this.Bt&&(b+=',\n  "linkFromPortIdProperty": '+
this.quote(this.Bt));""!==this.Dt&&"string"===typeof this.Dt&&(b+=',\n  "linkToPortIdProperty": '+this.quote(this.Dt));""!==this.Ct&&"string"===typeof this.Ct&&(b+=',\n  "linkLabelKeysProperty": '+this.quote(this.Ct));"isGroup"!==this.Jt&&"string"===typeof this.Jt&&(b+=',\n  "nodeIsGroupProperty": '+this.quote(this.Jt));"group"!==this.tp&&"string"===typeof this.tp&&(b+=',\n  "nodeGroupKeyProperty": '+this.quote(this.tp));return a+b};
g.Mt=function(a){F.prototype.Mt.call(this,a);a.linkKeyProperty&&(this.Yi=a.linkKeyProperty);a.linkFromKeyProperty&&(this.ip=a.linkFromKeyProperty);a.linkToKeyProperty&&(this.kp=a.linkToKeyProperty);a.linkFromPortIdProperty&&(this.Bt=a.linkFromPortIdProperty);a.linkToPortIdProperty&&(this.Dt=a.linkToPortIdProperty);a.linkCategoryProperty&&(this.At=a.linkCategoryProperty);a.linkLabelKeysProperty&&(this.Ct=a.linkLabelKeysProperty);a.nodeIsGroupProperty&&(this.Jt=a.nodeIsGroupProperty);a.nodeGroupKeyProperty&&
(this.tp=a.nodeGroupKeyProperty)};g.BA=function(){var a=F.prototype.BA.call(this),b=',\n  "linkDataArray": '+Mf(this,this.zg,!0);return a+b};g.Zz=function(a){F.prototype.Zz.call(this,a);a=a.linkDataArray;v.isArray(a)&&(this.Pt(a),this.zg=a)};
g.CA=function(a){a instanceof Q||v.k("Model.computeJsonDifference: newmodel must be a GraphLinksModel");""===this.Yi&&v.k("GraphLinksModel.linkKeyProperty must not be an empty string for .computeJsonDifference() to succeed.");var b=F.prototype.CA.call(this,a);Of(this,a,"linkKeyProperty");Of(this,a,"linkFromKeyProperty");Of(this,a,"linkToKeyProperty");Of(this,a,"linkLabelKeysProperty");Of(this,a,"nodeIsGroupProperty");Of(this,a,"nodeGroupKeyProperty");for(var c=new J,d=new J,e=(new J).Tc(this.Yc.jE),
f=new na,h=a.zg,k=0;k<h.length;k++){var l=h[k],m=a.bf(l);if(void 0!==m){e.remove(m);var n=this.dt(m);null===n?(c.add(m),d.add(l)):Nf(this,n,l,f)||d.add(l)}else this.Iz(l),m=this.bf(l),c.add(m),d.add(l)}a=b;0<c.count&&(a+=this.Cx+Mf(this,c.dc(),!0));0<d.count&&(a+=this.JA+Mf(this,d.dc(),!0));0<e.count&&(a+=this.Ex+Mf(this,e.dc(),!0));return a};g.Cx=',\n  "insertedLinkKeys": ';g.JA=',\n  "modifiedLinkData": ';g.Ex=',\n  "removedLinkKeys": ';
g.AA=function(a,b){""===this.Yi&&v.k("GraphLinksModel.linkKeyProperty must not be an empty string for .toIncrementalJson() to succeed.");var c=F.prototype.AA.call(this,a,b),d=this,e=new J,f=new J,h=new J;a.Pf.each(function(a){a.ba===d&&("linkDataArray"===a.hf?a.wc===Cf?e.add(a.newValue):a.wc===Df&&h.add(a.oldValue):d.bh(a.object)&&f.add(a.object))});var k=new J;e.each(function(a){k.add(d.bf(a));b||f.add(a)});var l=new J;h.each(function(a){l.add(d.bf(a));b&&f.add(a)});0<k.count&&(c+=(b?this.Ex:this.Cx)+
Mf(this,k.dc(),!0));0<f.count&&(c+=this.JA+Mf(this,f.dc(),!0));0<l.count&&(c+=(b?this.Cx:this.Ex)+Mf(this,l.dc(),!0));return c};
g.Yz=function(a){F.prototype.Yz.call(this,a);var b=a.insertedLinkKeys;if(v.isArray(b))for(var c=v.Va(b),d=0;d<c;d++){var e=v.Pa(b,d),f=this.dt(e);null===f&&(f=this.qw({}),this.TE(f,e),this.Ns(f))}b=a.modifiedLinkData;if(v.isArray(b))for(c=v.Va(b),d=0;d<c;d++){var h=v.Pa(b,d),e=this.bf(h),f=this.dt(e);if(null!==f)for(var k in h)"__gohashid"!==k&&k!==this.Yi&&this.setDataProperty(f,k,h[k])}a=a.removedLinkKeys;if(v.isArray(a))for(c=v.Va(a),d=0;d<c;d++)e=v.Pa(a,d),f=this.dt(e),null!==f&&this.ax(f)};
g.Cm=function(a,b){var c=null;if(a.wc===Cf){if("linkDataArray"===a.hf?c=this.Hf:"linkLabelKeys"===a.hf&&(c=this.Zj(a.object)),v.isArray(c)){if(b)v.Vh(c,a.Ag),c===this.Hf&&(c=this.bf(a.newValue),void 0!==c&&this.Yc.remove(c));else if(v.Oi(c,a.Ag,a.newValue),c===this.Hf){var d=a.newValue,c=this.bf(d);void 0!==c&&this.Yc.add(c,d)}return}}else if(a.wc===Df&&("linkDataArray"===a.hf?c=this.Hf:"linkLabelKeys"===a.hf&&(c=this.Zj(a.object)),v.isArray(c))){b?(v.Oi(c,a.Cg,a.oldValue),c===this.Hf&&(d=a.newValue,
c=this.bf(d),void 0!==c&&this.Yc.add(c,d))):(v.Vh(c,a.Cg),c===this.Hf&&(c=this.bf(a.newValue),void 0!==c&&this.Yc.remove(c)));return}F.prototype.Cm.call(this,a,b)};v.defineProperty(Q,{Yy:"archetypeNodeData"},function(){return this.Ll},function(a){var b=this.Ll;b!==a&&(null!==a&&v.A(a,Object,Q,"archetypeNodeData"),this.Ll=a,this.h("archetypeNodeData",b,a))});Q.prototype.Wm=function(a){if(void 0!==a){var b=this.Ll;if(null!==b){var c=this.ce(a);null===c&&(c=this.copyNodeData(b),v.Ja(c,this.Cj,a),this.Xk(c))}return a}};
v.defineProperty(Q,{ip:"linkFromKeyProperty"},function(){return this.Gh},function(a){var b=this.Gh;b!==a&&(lg(a,Q,"linkFromKeyProperty"),this.Gh=a,this.h("linkFromKeyProperty",b,a))});Q.prototype.getFromKeyForLinkData=Q.prototype.ol=function(a){if(null!==a){var b=this.Gh;if(""!==b&&(b=v.qb(a,b),void 0!==b)){if(mg(b))return b;v.k("FromKey value for link data "+a+" is not a number or a string: "+b)}}};
Q.prototype.setFromKeyForLinkData=Q.prototype.jx=function(a,b){null===b&&(b=void 0);void 0===b||mg(b)||v.Gd(b,"number or string",Q,"setFromKeyForLinkData:key");if(null!==a){var c=this.Gh;if(""!==c)if(b=this.Wm(b),this.bh(a)){var d=v.qb(a,c);d!==b&&(rg(this,d,a),v.Ja(a,c,b),null===this.ce(b)&&qg(this,b,a),$f(this,"linkFromKey",Af,c,a,d,b),"string"===typeof c&&this.Hb(a,c))}else v.Ja(a,c,b)}};
v.defineProperty(Q,{kp:"linkToKeyProperty"},function(){return this.Hh},function(a){var b=this.Hh;b!==a&&(lg(a,Q,"linkToKeyProperty"),this.Hh=a,this.h("linkToKeyProperty",b,a))});Q.prototype.getToKeyForLinkData=Q.prototype.pl=function(a){if(null!==a){var b=this.Hh;if(""!==b&&(b=v.qb(a,b),void 0!==b)){if(mg(b))return b;v.k("ToKey value for link data "+a+" is not a number or a string: "+b)}}};
Q.prototype.setToKeyForLinkData=Q.prototype.nx=function(a,b){null===b&&(b=void 0);void 0===b||mg(b)||v.Gd(b,"number or string",Q,"setToKeyForLinkData:key");if(null!==a){var c=this.Hh;if(""!==c)if(b=this.Wm(b),this.bh(a)){var d=v.qb(a,c);d!==b&&(rg(this,d,a),v.Ja(a,c,b),null===this.ce(b)&&qg(this,b,a),$f(this,"linkToKey",Af,c,a,d,b),"string"===typeof c&&this.Hb(a,c))}else v.Ja(a,c,b)}};
v.defineProperty(Q,{Bt:"linkFromPortIdProperty"},function(){return this.bm},function(a){var b=this.bm;b!==a&&(lg(a,Q,"linkFromPortIdProperty"),this.bm=a,this.h("linkFromPortIdProperty",b,a))});Q.prototype.getFromPortIdForLinkData=Q.prototype.TG=function(a){if(null===a)return"";var b=this.bm;if(""===b)return"";a=v.qb(a,b);return void 0===a?"":a};
Q.prototype.setFromPortIdForLinkData=Q.prototype.jA=function(a,b){v.j(b,"string",Q,"setFromPortIdForLinkData:portname");if(null!==a){var c=this.bm;if(""!==c)if(this.bh(a)){var d=v.qb(a,c);void 0===d&&(d="");d!==b&&(v.Ja(a,c,b),$f(this,"linkFromPortId",Af,c,a,d,b),"string"===typeof c&&this.Hb(a,c))}else v.Ja(a,c,b)}};v.defineProperty(Q,{Dt:"linkToPortIdProperty"},function(){return this.cm},function(a){var b=this.cm;b!==a&&(lg(a,Q,"linkToPortIdProperty"),this.cm=a,this.h("linkToPortIdProperty",b,a))});
Q.prototype.getToPortIdForLinkData=Q.prototype.WG=function(a){if(null===a)return"";var b=this.cm;if(""===b)return"";a=v.qb(a,b);return void 0===a?"":a};Q.prototype.setToPortIdForLinkData=Q.prototype.mA=function(a,b){v.j(b,"string",Q,"setToPortIdForLinkData:portname");if(null!==a){var c=this.cm;if(""!==c)if(this.bh(a)){var d=v.qb(a,c);void 0===d&&(d="");d!==b&&(v.Ja(a,c,b),$f(this,"linkToPortId",Af,c,a,d,b),"string"===typeof c&&this.Hb(a,c))}else v.Ja(a,c,b)}};
v.defineProperty(Q,{Ct:"linkLabelKeysProperty"},function(){return this.kg},function(a){var b=this.kg;b!==a&&(lg(a,Q,"linkLabelKeysProperty"),this.kg=a,this.h("linkLabelKeysProperty",b,a))});Q.prototype.getLabelKeysForLinkData=Q.prototype.Zj=function(a){if(null===a)return v.th;var b=this.kg;if(""===b)return v.th;a=v.qb(a,b);return void 0===a?v.th:a};
Q.prototype.setLabelKeysForLinkData=Q.prototype.UE=function(a,b){v.$y(b,Q,"setLabelKeysForLinkData:arr");if(null!==a){var c=this.kg;if(""!==c)if(this.bh(a)){var d=v.qb(a,c);void 0===d&&(d=v.th);if(d!==b){for(var e=v.Va(d),f=0;f<e;f++){var h=v.Pa(d,f);rg(this,h,a)}v.Ja(a,c,b);e=v.Va(b);for(f=0;f<e;f++)h=v.Pa(b,f),null===this.ce(h)&&qg(this,h,a);$f(this,"linkLabelKeys",Af,c,a,d,b);"string"===typeof c&&this.Hb(a,c)}}else v.Ja(a,c,b)}};
Q.prototype.addLabelKeyForLinkData=Q.prototype.Vy=function(a,b){if(null!==b&&void 0!==b&&(mg(b)||v.Gd(b,"number or string",Q,"addLabelKeyForLinkData:key"),null!==a)){var c=this.kg;if(""!==c){var d=v.qb(a,c);void 0===d?(c=[],c.push(b),this.UE(a,c)):v.isArray(d)?0<=v.Zy(d,b)||(v.Oi(d,Infinity,b),this.bh(a)&&(null===this.ce(b)&&qg(this,b,a),$f(this,"linkLabelKeys",Cf,c,a,null,b))):v.k(c+" property is not an Array; cannot addLabelKeyForLinkData: "+a)}}};
Q.prototype.removeLabelKeyForLinkData=Q.prototype.BE=function(a,b){if(null!==b&&void 0!==b&&(mg(b)||v.Gd(b,"number or string",Q,"removeLabelKeyForLinkData:key"),null!==a)){var c=this.kg;if(""!==c){var d=v.qb(a,c);if(v.isArray(d)){var e=v.Zy(d,b);0>e||(v.Vh(d,e),this.bh(a)&&(rg(this,b,a),$f(this,"linkLabelKeys",Df,c,a,b,null)))}else void 0!==d&&v.k(c+" property is not an Array; cannot removeLabelKeyforLinkData: "+a)}}};
v.defineProperty(Q,{zg:"linkDataArray"},function(){return this.Hf},function(a){var b=this.Hf;if(b!==a){v.$y(a,Q,"linkDataArray");this.Yc.clear();for(var c=v.Va(a),d=0;d<c;d++){var e=v.Pa(a,d);if(!v.Ta(e)){v.k("GraphLinksModel.linkDataArray must only contain Objects, not: "+e);return}v.nt(e)}this.Hf=a;if(""!==this.Yi){for(var f=new I(Object),d=0;d<c;d++){var e=v.Pa(a,d),h=this.bf(e);void 0===h?f.add(e):null!==this.Yc.ja(h)?f.add(e):this.Yc.add(h,e)}for(d=f.i;d.next();)e=d.value,this.Iz(e),f=this.bf(e),
void 0!==f&&this.Yc.add(f,e)}f=new J(Object);for(d=0;d<c;d++)e=v.Pa(a,d),f.add(e);this.bo=f;$f(this,"linkDataArray",Af,"linkDataArray",this,b,a);for(d=0;d<c;d++)e=v.Pa(a,d),wg(this,e)}});v.defineProperty(Q,{Yi:"linkKeyProperty"},function(){return this.Kk},function(a){var b=this.Kk;if(b!==a){lg(a,Q,"linkKeyProperty");this.Kk=a;this.Yc.clear();for(var c=v.Va(this.zg),d=0;d<c;d++){var e=v.Pa(this.zg,d),f=this.bf(e);void 0!==f&&this.Yc.add(f,e)}this.h("linkKeyProperty",b,a)}});
Q.prototype.getKeyForLinkData=Q.prototype.bf=function(a){if(null!==a){var b=this.Kk;if(""!==b&&(b=v.qb(a,b),void 0!==b)){if(mg(b))return b;v.k("Key value for link data "+a+" is not a number or a string: "+b)}}};
Q.prototype.setKeyForLinkData=Q.prototype.TE=function(a,b){void 0!==b&&null!==b&&mg(b)||v.Gd(b,"number or string",Q,"setKeyForLinkData:key");if(null!==a){var c=this.Kk;if(""!==c)if(this.bh(a)){var d=v.qb(a,c);d!==b&&null===this.dt(b)&&(v.Ja(a,c,b),this.Yc.remove(d),this.Yc.add(b,a),$f(this,"linkKey",Af,c,a,d,b),"string"===typeof c&&this.Hb(a,c))}else v.Ja(a,c,b)}};
v.defineProperty(Q,{aK:"makeUniqueLinkKeyFunction"},function(){return this.fo},function(a){var b=this.fo;b!==a&&(null!==a&&v.j(a,"function",Q,"makeUniqueLinkKeyFunction"),this.fo=a,this.h("makeUniqueLinkKeyFunction",b,a))});Q.prototype.findLinkDataForKey=Q.prototype.dt=function(a){null===a&&v.k("GraphLinksModel.findLinkDataForKey:key must not be null");return void 0!==a&&mg(a)?this.Yc.ja(a):null};
Q.prototype.makeLinkDataKeyUnique=Q.prototype.Iz=function(a){if(null!==a){var b=this.Kk;if(""!==b){var c=this.bf(a);if(void 0===c||this.Yc.contains(c)){var d=this.fo;if(null!==d&&(c=d(this,a),void 0!==c&&null!==c&&!this.Yc.contains(c))){v.Ja(a,b,c);return}if("string"===typeof c){for(d=2;this.Yc.contains(c+d);)d++;v.Ja(a,b,c+d)}else if(void 0===c||"number"===typeof c){for(d=-this.Yc.count-1;this.Yc.contains(d);)d--;v.Ja(a,b,d)}else v.k("GraphLinksModel.getKeyForLinkData returned something other than a string or a number: "+
c)}}}};Q.prototype.containsLinkData=Q.prototype.bh=function(a){return null===a?!1:this.bo.contains(a)};Q.prototype.addLinkData=Q.prototype.Ns=function(a){if(null!==a){if(void 0===v.md(a))v.ec(a);else if(this.bh(a))return;xg(this,a,!0)}};
function xg(a,b,c){if(""!==a.Yi){var d=a.bf(b);if(void 0!==d&&a.Yc.ja(d)===b)return;a.Iz(b);d=a.bf(b);if(void 0===d){v.k("GraphLinksModel.makeLinkDataKeyUnique failed on "+b+". Data not added to model.");return}a.Yc.add(d,b)}a.bo.add(b);if(c){var e=v.Va(a.Hf);v.Oi(a.Hf,e,b)}$f(a,"linkDataArray",Cf,"linkDataArray",a,null,b,null,e);wg(a,b)}Q.prototype.addLinkDataCollection=function(a){if(v.isArray(a))for(var b=v.Va(a),c=0;c<b;c++)this.Ns(v.Pa(a,c));else for(a=a.i;a.next();)this.Ns(a.value)};
Q.prototype.removeLinkData=Q.prototype.ax=function(a){null!==a&&yg(this,a,!0)};function yg(a,b,c){a.bo.remove(b);var d=a.bf(b);void 0!==d&&a.Yc.remove(d);if(c){var e=a.Hf.indexOf(b);if(0>e)return;v.Vh(a.Hf,e)}$f(a,"linkDataArray",Df,"linkDataArray",a,b,null,e,null);c=a.ol(b);rg(a,c,b);c=a.pl(b);rg(a,c,b);d=a.Zj(b);if(v.isArray(d))for(var e=v.Va(d),f=0;f<e;f++)c=v.Pa(d,f),rg(a,c,b)}
Q.prototype.removeLinkDataCollection=function(a){if(v.isArray(a))for(var b=v.Va(a),c=0;c<b;c++)this.ax(v.Pa(a,c));else for(a=a.i;a.next();)this.ax(a.value)};function wg(a,b){var c=a.ol(b),c=a.Wm(c);null===a.ce(c)&&qg(a,c,b);c=a.pl(b);c=a.Wm(c);null===a.ce(c)&&qg(a,c,b);var d=a.Zj(b);if(v.isArray(d))for(var e=v.Va(d),f=0;f<e;f++)c=v.Pa(d,f),null===a.ce(c)&&qg(a,c,b)}
v.defineProperty(Q,{uJ:"copyLinkDataFunction"},function(){return this.wn},function(a){var b=this.wn;b!==a&&(null!==a&&v.j(a,"function",Q,"copyLinkDataFunction"),this.wn=a,this.h("copyLinkDataFunction",b,a))});Q.prototype.copyLinkData=Q.prototype.qw=function(a){if(null===a)return null;var b=null,b=this.wn,b=null!==b?b(a,this):sg(this,a,!0);v.Ta(b)&&(v.ec(b),""!==this.Gh&&v.Ja(b,this.Gh,void 0),""!==this.Hh&&v.Ja(b,this.Hh,void 0),""!==this.kg&&v.Ja(b,this.kg,[]));return b};
v.defineProperty(Q,{Jt:"nodeIsGroupProperty"},function(){return this.ko},function(a){var b=this.ko;b!==a&&(lg(a,Q,"nodeIsGroupProperty"),this.ko=a,this.h("nodeIsGroupProperty",b,a))});Q.prototype.isGroupForNodeData=Q.prototype.Bz=function(a){if(null===a)return!1;var b=this.ko;return""===b?!1:v.qb(a,b)?!0:!1};v.defineProperty(Q,{tp:"nodeGroupKeyProperty"},function(){return this.Vg},function(a){var b=this.Vg;b!==a&&(lg(a,Q,"nodeGroupKeyProperty"),this.Vg=a,this.h("nodeGroupKeyProperty",b,a))});
v.defineProperty(Q,{Gm:"copiesGroupKeyOfNodeData"},function(){return this.jq},function(a){this.jq!==a&&(v.j(a,"boolean",Q,"copiesGroupKeyOfNodeData"),this.jq=a)});Q.prototype.getGroupKeyForNodeData=Q.prototype.Nm=function(a){if(null!==a){var b=this.Vg;if(""!==b&&(b=v.qb(a,b),void 0!==b)){if(mg(b))return b;v.k("GroupKey value for node data "+a+" is not a number or a string: "+b)}}};
Q.prototype.setGroupKeyForNodeData=Q.prototype.kx=function(a,b){null===b&&(b=void 0);void 0===b||mg(b)||v.Gd(b,"number or string",Q,"setGroupKeyForNodeData:key");if(null!==a){var c=this.Vg;if(""!==c)if(this.Ie(a)){var d=v.qb(a,c);d!==b&&(rg(this,d,a),v.Ja(a,c,b),null===this.ce(b)&&qg(this,b,a),$f(this,"nodeGroupKey",Af,c,a,d,b),"string"===typeof c&&this.Hb(a,c))}else v.Ja(a,c,b)}};
Q.prototype.copyNodeData=function(a){if(null===a)return null;a=F.prototype.copyNodeData.call(this,a);this.Gm||""===this.Vg||void 0===v.qb(a,this.Vg)||v.Ja(a,this.Vg,void 0);return a};
Q.prototype.setDataProperty=function(a,b,c){if(this.Ie(a))if(b===this.yl)this.lx(a,c);else{if(b===this.Xm){this.ix(a,c);return}if(b===this.tp){this.kx(a,c);return}b===this.Jt&&v.k("GraphLinksModel.setDataProperty: property name must not be the nodeIsGroupProperty: "+b)}else if(this.bh(a)){if(b===this.ip){this.jx(a,c);return}if(b===this.kp){this.nx(a,c);return}if(b===this.Bt){this.jA(a,c);return}if(b===this.Dt){this.mA(a,c);return}if(b===this.Yi){this.TE(a,c);return}if(b===this.At){this.SE(a,c);return}if(b===
this.Ct){this.UE(a,c);return}}else!vg&&a instanceof G&&(vg=!0,v.trace('GraphLinksModel.setDataProperty is modifying a GraphObject, "'+a.toString()+'"'),v.trace("  Is that really your intent?"));var d=v.qb(a,b);d!==c&&(v.Ja(a,b,c),this.Xz(a,b,d,c))};g=Q.prototype;
g.Ot=function(a,b){F.prototype.Ot.call(this,a,b);for(var c=this.tc.i;c.next();)this.dA(c.value,a,b);for(c=this.bo.i;c.next();){var d=c.value,e=a,f=b;if(this.ol(d)===e){var h=this.Gh;v.Ja(d,h,f);$f(this,"linkFromKey",Af,h,d,e,f);"string"===typeof h&&this.Hb(d,h)}this.pl(d)===e&&(h=this.Hh,v.Ja(d,h,f),$f(this,"linkToKey",Af,h,d,e,f),"string"===typeof h&&this.Hb(d,h));var k=this.Zj(d);if(v.isArray(k))for(var l=v.Va(k),h=this.kg,m=0;m<l;m++)v.Pa(k,m)===e&&(v.hD(k,m,f),$f(this,"linkLabelKeys",Cf,h,d,e,
f))}};g.dA=function(a,b,c){if(this.Nm(a)===b){var d=this.Vg;v.Ja(a,d,c);$f(this,"nodeGroupKey",Af,d,a,b,c);"string"===typeof d&&this.Hb(a,d)}};g.wA=function(){F.prototype.wA.call(this);for(var a=this.zg,b=v.Va(a),c=0;c<b;c++){var d=v.Pa(a,c);wg(this,d)}};
g.yp=function(a){F.prototype.yp.call(this,a);a=this.gb(a);var b=pg(this,a);if(null!==b){for(var c=new I(Object),b=b.i;b.next();){var d=b.value;if(this.Ie(d)){if(this.Nm(d)===a){var e=this.Vg;$f(this,"nodeGroupKey",Af,e,d,a,a);"string"===typeof e&&this.Hb(d,e);c.add(d)}}else{this.ol(d)===a&&(e=this.Gh,$f(this,"linkFromKey",Af,e,d,a,a),"string"===typeof e&&this.Hb(d,e),c.add(d));this.pl(d)===a&&(e=this.Hh,$f(this,"linkToKey",Af,e,d,a,a),"string"===typeof e&&this.Hb(d,e),c.add(d));var f=this.Zj(d);if(v.isArray(f))for(var h=
v.Va(f),e=this.kg,k=0;k<h;k++)v.Pa(f,k)===a&&($f(this,"linkLabelKeys",Cf,e,d,a,a),c.add(d))}}for(c=c.i;c.next();)rg(this,a,c.value)}};g.xp=function(a){F.prototype.xp.call(this,a);var b=this.Nm(a);null===this.ce(b)&&qg(this,b,a)};g.fu=function(a){F.prototype.fu.call(this,a);var b=this.Nm(a);rg(this,b,a)};v.defineProperty(Q,{At:"linkCategoryProperty"},function(){return this.am},function(a){var b=this.am;b!==a&&(lg(a,Q,"linkCategoryProperty"),this.am=a,this.h("linkCategoryProperty",b,a))});
Q.prototype.getCategoryForLinkData=Q.prototype.Cw=function(a){if(null===a)return"";var b=this.am;if(""===b)return"";b=v.qb(a,b);if(void 0===b)return"";if("string"===typeof b)return b;v.k("getCategoryForLinkData found a non-string category for "+a+": "+b);return""};
Q.prototype.setCategoryForLinkData=Q.prototype.SE=function(a,b){v.j(b,"string",Q,"setCategoryForLinkData:cat");if(null!==a){var c=this.am;if(""!==c)if(this.bh(a)){var d=v.qb(a,c);void 0===d&&(d="");d!==b&&(v.Ja(a,c,b),$f(this,"linkCategory",Af,c,a,d,b),"string"===typeof c&&this.Hb(a,c))}else v.Ja(a,c,b)}};
function Pf(a){1<arguments.length&&v.k("TreeModel constructor can only take one optional argument, the Array of node data.");F.call(this);this.Wg="parent";this.kq=!1;this.im="parentLinkCategory";void 0!==a&&(this.Zf=a)}v.Ia(Pf,F);v.ea("TreeModel",Pf);Pf.prototype.cloneProtected=function(a){F.prototype.cloneProtected.call(this,a);a.Wg=this.Wg;a.kq=this.kq;a.im=this.im};
Pf.prototype.toString=function(a){void 0===a&&(a=0);if(2<=a)return this.tA();var b=(""!==this.name?this.name:"")+" TreeModel";if(0<a){b+="\n node data:";a=this.Zf;for(var c=v.Va(a),d=0;d<c;d++)var e=v.Pa(a,d),b=b+(" "+this.gb(e)+":"+Ef(e))}return b};Pf.prototype.hn=function(){var a=F.prototype.hn.call(this),b="";"parent"!==this.vp&&"string"===typeof this.vp&&(b+=',\n  "nodeParentKeyProperty": '+this.quote(this.vp));return a+b};
Pf.prototype.Mt=function(a){F.prototype.Mt.call(this,a);a.nodeParentKeyProperty&&(this.vp=a.nodeParentKeyProperty)};Pf.prototype.Wm=function(a){return a};v.defineProperty(Pf,{vp:"nodeParentKeyProperty"},function(){return this.Wg},function(a){var b=this.Wg;b!==a&&(lg(a,Pf,"nodeParentKeyProperty"),this.Wg=a,this.h("nodeParentKeyProperty",b,a))});
v.defineProperty(Pf,{Hm:"copiesParentKeyOfNodeData"},function(){return this.kq},function(a){this.kq!==a&&(v.j(a,"boolean",Pf,"copiesParentKeyOfNodeData"),this.kq=a)});Pf.prototype.getParentKeyForNodeData=Pf.prototype.Om=function(a){if(null!==a){var b=this.Wg;if(""!==b&&(b=v.qb(a,b),void 0!==b)){if(mg(b))return b;v.k("ParentKey value for node data "+a+" is not a number or a string: "+b)}}};
Pf.prototype.setParentKeyForNodeData=Pf.prototype.ph=function(a,b){null===b&&(b=void 0);void 0===b||mg(b)||v.Gd(b,"number or string",Pf,"setParentKeyForNodeData:key");if(null!==a){var c=this.Wg;if(""!==c)if(b=this.Wm(b),this.Ie(a)){var d=v.qb(a,c);d!==b&&(rg(this,d,a),v.Ja(a,c,b),null===this.ce(b)&&qg(this,b,a),$f(this,"nodeParentKey",Af,c,a,d,b),"string"===typeof c&&this.Hb(a,c))}else v.Ja(a,c,b)}};
v.defineProperty(Pf,{uK:"parentLinkCategoryProperty"},function(){return this.im},function(a){var b=this.im;b!==a&&(lg(a,Pf,"parentLinkCategoryProperty"),this.im=a,this.h("parentLinkCategoryProperty",b,a))});Pf.prototype.getParentLinkCategoryForNodeData=Pf.prototype.VG=function(a){if(null===a)return"";var b=this.im;if(""===b)return"";b=v.qb(a,b);if(void 0===b)return"";if("string"===typeof b)return b;v.k("getParentLinkCategoryForNodeData found a non-string category for "+a+": "+b);return""};
Pf.prototype.setParentLinkCategoryForNodeData=Pf.prototype.wI=function(a,b){v.j(b,"string",Pf,"setParentLinkCategoryForNodeData:cat");if(null!==a){var c=this.im;if(""!==c)if(this.Ie(a)){var d=v.qb(a,c);void 0===d&&(d="");d!==b&&(v.Ja(a,c,b),$f(this,"parentLinkCategory",Af,c,a,d,b),"string"===typeof c&&this.Hb(a,c))}else v.Ja(a,c,b)}};
Pf.prototype.copyNodeData=function(a){if(null===a)return null;a=F.prototype.copyNodeData.call(this,a);this.Hm||""===this.Wg||void 0===v.qb(a,this.Wg)||v.Ja(a,this.Wg,void 0);return a};
Pf.prototype.setDataProperty=function(a,b,c){if(this.Ie(a))if(b===this.yl)this.lx(a,c);else{if(b===this.Xm){this.ix(a,c);return}if(b===this.vp){this.ph(a,c);return}}else!vg&&a instanceof G&&(vg=!0,v.trace('TreeModel.setDataProperty is modifying a GraphObject, "'+a.toString()+'"'),v.trace("  Is that really your intent?"));var d=v.qb(a,b);d!==c&&(v.Ja(a,b,c),this.Xz(a,b,d,c))};g=Pf.prototype;g.Ot=function(a,b){F.prototype.Ot.call(this,a,b);for(var c=this.tc.i;c.next();)this.dA(c.value,a,b)};
g.dA=function(a,b,c){if(this.Om(a)===b){var d=this.Wg;v.Ja(a,d,c);$f(this,"nodeParentKey",Af,d,a,b,c);"string"===typeof d&&this.Hb(a,d)}};g.yp=function(a){F.prototype.yp.call(this,a);a=this.gb(a);var b=pg(this,a);if(null!==b){for(var c=new I(Object),b=b.i;b.next();){var d=b.value;if(this.Ie(d)&&this.Om(d)===a){var e=this.Wg;$f(this,"nodeParentKey",Af,e,d,a,a);"string"===typeof e&&this.Hb(d,e);c.add(d)}}for(c=c.i;c.next();)rg(this,a,c.value)}};
g.xp=function(a){F.prototype.xp.call(this,a);var b=this.Om(a),b=this.Wm(b);null===this.ce(b)&&qg(this,b,a)};g.fu=function(a){F.prototype.fu.call(this,a);var b=this.Om(a);rg(this,b,a)};
function zg(a,b,c){v.ec(this);this.D=!1;void 0===a?a="":v.j(a,"string",zg,"constructor:targetprop");void 0===b?b=a:v.j(b,"string",zg,"constructor:sourceprop");void 0===c?c=null:null!==c&&v.j(c,"function",zg,"constructor:conv");this.DC=-1;this.qg=null;this.Do=a;this.Co=this.ys=0;this.Sv=null;this.Xq=!1;this.to=b;this.hq=c;this.tr=Ag;this.aq=null}v.ea("Binding",zg);
zg.prototype.copy=function(){var a=new zg;a.Do=this.Do;a.ys=this.ys;a.Co=this.Co;a.Sv=this.Sv;a.Xq=this.Xq;a.to=this.to;a.hq=this.hq;a.tr=this.tr;a.aq=this.aq;return a};var Ag;zg.OneWay=Ag=v.p(zg,"OneWay",1);var Bg;zg.TwoWay=Bg=v.p(zg,"TwoWay",2);zg.parseEnum=function(a,b){v.j(a,"function",zg,"parseEnum:ctor");v.pb(b,a,zg,"parseEnum:defval");return function(c){c=ra(a,c);return null===c?b:c}};var Ef;
zg.toString=Ef=function(a){var b=a;v.Ta(a)&&(a.text?b=a.text:a.name?b=a.name:void 0!==a.key?b=a.key:void 0!==a.id?b=a.id:a.constructor===Object&&(a.Text?b=a.Text:a.Name?b=a.Name:void 0!==a.Key?b=a.Key:void 0!==a.Id?b=a.Id:void 0!==a.ID&&(b=a.ID)));return void 0===b?"undefined":null===b?"null":b.toString()};zg.prototype.toString=function(){return"Binding("+this.qx+":"+this.YE+(-1!==this.El?" "+this.El:"")+" "+this.mode.name+")"};zg.prototype.freeze=function(){this.D=!0;return this};
zg.prototype.Oa=function(){this.D=!1;return this};v.defineProperty(zg,{El:null},function(){return this.DC},function(a){this.D&&v.ka(this);v.j(a,"number",zg,"targetId");this.DC=a});v.defineProperty(zg,{qx:"targetProperty"},function(){return this.Do},function(a){this.D&&v.ka(this);v.j(a,"string",zg,"targetProperty");this.Do=a});v.defineProperty(zg,{dn:"sourceName"},function(){return this.Sv},function(a){this.D&&v.ka(this);null!==a&&v.j(a,"string",zg,"sourceName");this.Sv=a;null!==a&&(this.Xq=!1)});
v.defineProperty(zg,{xt:"isToModel"},function(){return this.Xq},function(a){this.D&&v.ka(this);v.j(a,"boolean",zg,"isToModel");this.Xq=a});v.defineProperty(zg,{YE:"sourceProperty"},function(){return this.to},function(a){this.D&&v.ka(this);v.j(a,"string",zg,"sourceProperty");this.to=a});v.defineProperty(zg,{sG:"converter"},function(){return this.hq},function(a){this.D&&v.ka(this);null!==a&&v.j(a,"function",zg,"converter");this.hq=a});
v.defineProperty(zg,{hG:"backConverter"},function(){return this.aq},function(a){this.D&&v.ka(this);null!==a&&v.j(a,"function",zg,"backConverter");this.aq=a});v.defineProperty(zg,{mode:"mode"},function(){return this.tr},function(a){this.D&&v.ka(this);v.pb(a,zg,zg,"mode");this.tr=a});zg.prototype.makeTwoWay=zg.prototype.HH=function(a){void 0===a&&(a=null);null!==a&&v.j(a,"function",zg,"makeTwoWay");this.mode=Bg;this.hG=a;return this};
zg.prototype.ofObject=zg.prototype.Rw=function(a){void 0===a&&(a="");this.dn=a;this.xt=!1;return this};zg.prototype.ofModel=function(){this.dn=null;this.xt=!0;return this};zg.prototype.ofData=function(){this.dn=null;this.xt=!1;return this};function Cg(a,b,c){a=a.dn;var d=null;return d=null===a||""===a?b:"."===a?c:".."===a?c.U:b.de(a)}
zg.prototype.updateTarget=zg.prototype.oF=function(a,b,c){var d=this.to;if(void 0===c||""===d||d===c){c=this.Do;var e=this.hq;if(null===e&&""===c)v.trace("Binding error: target property is the empty string: "+this.toString());else{var f=b;""!==d&&(f=v.qb(b,d));if(void 0!==f)if(null===e)""!==c&&v.Ja(a,c,f);else try{if(""!==c){var h=e(f,a);v.Ja(a,c,h)}else e(f,a)}catch(k){}}}};
zg.prototype.updateSource=zg.prototype.sx=function(a,b,c,d){void 0===d&&(d=null);if(this.tr===Bg){var e=this.Do;if(void 0===c||e===c){c=this.to;var f=this.aq;if(null!==f||""!==c){var h=a;""!==e&&(h=v.qb(a,e));if(void 0!==h)if(a=null!==d?d.ba:null,null===f)null!==a?a.setDataProperty(b,c,h):v.Ja(b,c,h);else try{if(""!==c){var k=f(h,b,a);null!==a?a.setDataProperty(b,c,k):v.Ja(b,c,k)}else f(h,b,a)}catch(l){}}}}};function Qf(){this.vF=(new I(zf)).freeze();this.Ob="";this.JB=!1}v.ea("Transaction",Qf);
Qf.prototype.toString=function(a){var b="Transaction: "+this.name+" "+this.Pf.count.toString()+(this.st?"":", incomplete");if(void 0!==a&&0<a){a=this.Pf.count;for(var c=0;c<a;c++){var d=this.Pf.da(c);null!==d&&(b+="\n  "+d.toString())}}return b};Qf.prototype.clear=Qf.prototype.clear=function(){var a=this.Pf;a.Oa();for(var b=a.count-1;0<=b;b--){var c=a.da(b);null!==c&&c.clear()}a.clear();a.freeze()};Qf.prototype.canUndo=Qf.prototype.canUndo=function(){return this.st};
Qf.prototype.undo=Qf.prototype.undo=function(){if(this.canUndo())for(var a=this.Pf.count-1;0<=a;a--){var b=this.Pf.da(a);null!==b&&b.undo()}};Qf.prototype.canRedo=Qf.prototype.canRedo=function(){return this.st};Qf.prototype.redo=Qf.prototype.redo=function(){if(this.canRedo())for(var a=this.Pf.count,b=0;b<a;b++){var c=this.Pf.da(b);null!==c&&c.redo()}};v.u(Qf,{Pf:"changes"},function(){return this.vF});v.defineProperty(Qf,{name:"name"},function(){return this.Ob},function(a){this.Ob=a});
v.defineProperty(Qf,{st:"isComplete"},function(){return this.JB},function(a){this.JB=a});function Ff(){this.zy=new J(F);this.Re=!1;this.zF=(new I(Qf)).freeze();this.Pg=-1;this.ZB=999;this.vi=!1;this.Ju=null;this.Vk=0;this.UA=!1;this.Ug=(new I("string")).freeze();this.jo=new I("number");this.gy=!0;this.ty=!1}v.ea("UndoManager",Ff);
Ff.prototype.toString=function(a){for(var b="UndoManager "+this.Ui+"<"+this.history.count+"<="+this.oE,b=b+"[",c=this.tE.count,d=0;d<c;d++)0<d&&(b+=" "),b+=this.tE.da(d);b+="]";if(void 0!==a&&0<a)for(c=this.history.count,d=0;d<c;d++)b+="\n "+this.history.da(d).toString(a-1);return b};
Ff.prototype.clear=Ff.prototype.clear=function(){var a=this.history;a.Oa();for(var b=a.count-1;0<=b;b--){var c=a.da(b);null!==c&&c.clear()}a.clear();this.Pg=-1;a.freeze();this.vi=!1;this.Ju=null;this.Vk=0;this.Ug.Oa();this.Ug.clear();this.Ug.freeze();this.jo.clear()};Ff.prototype.addModel=Ff.prototype.$F=function(a){this.zy.add(a)};Ff.prototype.removeModel=Ff.prototype.gI=function(a){this.zy.remove(a)};
Ff.prototype.startTransaction=Ff.prototype.Qb=function(a){void 0===a&&(a="");null===a&&(a="");if(this.ib)return!1;!0===this.gy&&(this.gy=!1,this.Vk++,this.$c("StartingFirstTransaction",a,this.Qi),0<this.Vk&&this.Vk--);this.isEnabled&&(this.Ug.Oa(),this.Ug.add(a),this.Ug.freeze(),null===this.Qi?this.jo.add(0):this.jo.add(this.Qi.Pf.count));this.Vk++;var b=1===this.sh;b&&this.$c("StartedTransaction",a,this.Qi);return b};
Ff.prototype.commitTransaction=Ff.prototype.yd=function(a){void 0===a&&(a="");return Dg(this,!0,a)};Ff.prototype.rollbackTransaction=Ff.prototype.zp=function(){return Dg(this,!1,"")};
function Dg(a,b,c){if(a.ib)return!1;a.az&&1>a.sh&&v.trace("Ending transaction without having started a transaction: "+c);var d=1===a.sh;d&&b&&a.isEnabled&&a.$c("CommittingTransaction",c,a.Qi);var e=0;if(0<a.sh&&(a.Vk--,a.isEnabled)){var f=a.Ug.count;0<f&&(""===c&&(c=a.Ug.da(0)),a.Ug.Oa(),a.Ug.Vc(f-1),a.Ug.freeze());f=a.jo.count;0<f&&(e=a.jo.da(f-1),a.jo.Vc(f-1))}f=a.Qi;if(d){if(b){a.ty=!1;if(a.isEnabled&&null!==f){b=f;b.st=!0;b.name=c;d=a.history;d.Oa();for(e=d.count-1;e>a.Ui;e--)f=d.da(e),null!==
f&&f.clear(),d.Vc(e),a.ty=!0;e=a.oE;0===e&&(e=1);0<e&&d.count>=e&&(f=d.da(0),null!==f&&f.clear(),d.Vc(0),a.Pg--);d.add(b);a.Pg++;d.freeze();f=b}a.$c("CommittedTransaction",c,f)}else{a.vi=!0;try{a.isEnabled&&null!==f&&(f.st=!0,f.undo())}finally{a.$c("RolledBackTransaction",c,f),a.vi=!1}null!==f&&f.clear()}a.Ju=null;return!0}if(a.isEnabled&&!b&&null!==f){a=e;c=f.Pf;for(b=c.count-1;b>=a;b--)d=c.da(b),null!==d&&d.undo(),c.Oa(),c.Vc(b);c.freeze()}return!1}
Ff.prototype.canUndo=Ff.prototype.canUndo=function(){if(!this.isEnabled||0<this.sh||this.ib)return!1;var a=this.iF;return null!==a&&a.canUndo()?!0:!1};Ff.prototype.undo=Ff.prototype.undo=function(){if(this.canUndo()){var a=this.iF;try{this.$c("StartingUndo","Undo",a),this.vi=!0,this.Pg--,a.undo()}catch(b){v.trace("undo error: "+b.toString())}finally{this.vi=!1,this.$c("FinishedUndo","Undo",a)}}};
Ff.prototype.canRedo=Ff.prototype.canRedo=function(){if(!this.isEnabled||0<this.sh||this.ib)return!1;var a=this.hF;return null!==a&&a.canRedo()?!0:!1};Ff.prototype.redo=Ff.prototype.redo=function(){if(this.canRedo()){var a=this.hF;try{this.$c("StartingRedo","Redo",a),this.vi=!0,this.Pg++,a.redo()}catch(b){v.trace("redo error: "+b.toString())}finally{this.vi=!1,this.$c("FinishedRedo","Redo",a)}}};
Ff.prototype.$c=function(a,b,c){void 0===c&&(c=null);var d=new zf;d.wc=Bf;d.propertyName=a;d.object=c;d.oldValue=b;for(a=this.QH;a.next();)b=a.value,d.ba=b,b.mw(d)};Ff.prototype.handleChanged=Ff.prototype.TD=function(a){if(this.isEnabled&&!this.ib&&!this.skipsEvent(a)){var b=this.Qi;null===b&&(this.Ju=b=new Qf);var c=a.copy(),b=b.Pf;b.Oa();b.add(c);b.freeze();this.az&&0>=this.sh&&!this.gy&&(a=a.g,null!==a&&!1===a.Sm||v.trace("Change not within a transaction: "+c.toString()))}};
Ff.prototype.skipsEvent=function(a){if(null===a||0>a.wc.value)return!0;a=a.object;if(a instanceof G){if(a=a.layer,null!==a&&a.Gc)return!0}else if(a instanceof Vf&&a.Gc)return!0;return!1};v.u(Ff,{QH:"models"},function(){return this.zy.i});v.defineProperty(Ff,{isEnabled:"isEnabled"},function(){return this.Re},function(a){this.Re=a});v.u(Ff,{iF:"transactionToUndo"},function(){return 0<=this.Ui&&this.Ui<=this.history.count-1?this.history.da(this.Ui):null});
v.u(Ff,{hF:"transactionToRedo"},function(){return this.Ui<this.history.count-1?this.history.da(this.Ui+1):null});v.u(Ff,{ib:"isUndoingRedoing"},function(){return this.vi});v.u(Ff,{history:"history"},function(){return this.zF});v.defineProperty(Ff,{oE:"maxHistoryLength"},function(){return this.ZB},function(a){this.ZB=a});v.u(Ff,{Ui:"historyIndex"},function(){return this.Pg});v.u(Ff,{Qi:"currentTransaction"},function(){return this.Ju});v.u(Ff,{sh:"transactionLevel"},function(){return this.Vk});
v.u(Ff,{dE:"isInTransaction"},function(){return 0<this.Vk});v.defineProperty(Ff,{az:"checksTransactionLevel"},function(){return this.UA},function(a){this.UA=a});v.u(Ff,{tE:"nestedTransactionNames"},function(){return this.Ug});function Xf(){0<arguments.length&&v.dd(Xf);v.ec(this);this.S=null;this.XA=!1;this.qB=this.YA=!0;this.$A=this.aB=this.rB=this.bB=!1;this.Ok=this.NA=null;this.WC=1.05;this.oB=1;this.uy=NaN;this.WB=null;this.Ty=NaN;this.Sy=Yc;this.Fj=null}v.ea("CommandHandler",Xf);
var Eg=null,Fg="";Xf.prototype.toString=function(){return"CommandHandler"};v.u(Xf,{g:"diagram"},function(){return this.S});Xf.prototype.Mc=function(a){this.S=a};
Xf.prototype.doKeyDown=function(){var a=this.g;if(null!==a){var b=a.N,c=v.ak?b.Et:b.control,d=b.shift,e=b.alt,f=b.key;!c||"C"!==f&&"Insert"!==f?c&&"X"===f||d&&"Del"===f?this.canCutSelection()&&this.cutSelection():c&&"V"===f||d&&"Insert"===f?this.canPasteSelection()&&this.pasteSelection():c&&"Y"===f||e&&d&&"Backspace"===f?this.canRedo()&&this.redo():c&&"Z"===f||e&&"Backspace"===f?this.canUndo()&&this.undo():"Del"===f||"Backspace"===f?this.canDeleteSelection()&&this.deleteSelection():c&&"A"===f?this.canSelectAll()&&
this.selectAll():"Esc"===f?this.canStopCommand()&&this.stopCommand():"Up"===f?a.pe&&(c?a.scroll("pixel","up"):a.scroll("line","up")):"Down"===f?a.pe&&(c?a.scroll("pixel","down"):a.scroll("line","down")):"Left"===f?a.oe&&(c?a.scroll("pixel","left"):a.scroll("line","left")):"Right"===f?a.oe&&(c?a.scroll("pixel","right"):a.scroll("line","right")):"PageUp"===f?d&&a.oe?a.scroll("page","left"):a.pe&&a.scroll("page","up"):"PageDown"===f?d&&a.oe?a.scroll("page","right"):a.pe&&a.scroll("page","down"):"Home"===
f?c&&a.pe?a.scroll("document","up"):!c&&a.oe&&a.scroll("document","left"):"End"===f?c&&a.pe?a.scroll("document","down"):!c&&a.oe&&a.scroll("document","right"):" "===f?this.canScrollToPart()&&this.scrollToPart():"Subtract"===f?this.canDecreaseZoom()&&this.decreaseZoom():"Add"===f?this.canIncreaseZoom()&&this.increaseZoom():c&&"0"===f?this.canResetZoom()&&this.resetZoom():d&&"Z"===f?this.canZoomToFit()&&this.zoomToFit():c&&!d&&"G"===f?this.canGroupSelection()&&this.groupSelection():c&&d&&"G"===f?this.canUngroupSelection()&&
this.ungroupSelection():b.event&&113===b.event.which?this.canEditTextBlock()&&this.editTextBlock():b.event&&93===b.event.which?this.canShowContextMenu()&&this.showContextMenu():b.bubbles=!0:this.canCopySelection()&&this.copySelection()}};Xf.prototype.doKeyUp=function(){var a=this.g;null!==a&&(a.N.bubbles=!0)};Xf.prototype.stopCommand=function(){var a=this.g;if(null!==a){var b=a.Wa;b instanceof Rg&&a.of&&a.nw();null!==b&&b.doCancel()}};Xf.prototype.canStopCommand=function(){return!0};
Xf.prototype.selectAll=function(){var a=this.g;if(null!==a){a.pa();try{a.Zb="wait";a.Ba("ChangingSelection");for(var b=a.dk;b.next();)b.value.hb=!0;for(var c=a.Bg;c.next();)c.value.hb=!0;for(var d=a.links;d.next();)d.value.hb=!0}finally{a.Ba("ChangedSelection"),a.Zb=""}}};Xf.prototype.canSelectAll=function(){var a=this.g;return null!==a&&a.of};
Xf.prototype.deleteSelection=function(){var a=this.g;if(null!==a&&!a.Ba("SelectionDeleting",a.selection))try{a.Zb="wait";a.Qb("Delete");a.Ba("ChangingSelection");for(var b=new J(R),c=a.selection.i;c.next();)Sg(b,c.value,!0,this.DG?Infinity:0,this.BD,function(a){return a.canDelete()});a.cA(b,!0);a.Ba("SelectionDeleted",b)}finally{a.Ba("ChangedSelection"),a.yd("Delete"),a.Zb=""}};Xf.prototype.canDeleteSelection=function(){var a=this.g;return null===a||a.ab||a.wf||!a.ym||0===a.selection.count?!1:!0};
function Sg(a,b,c,d,e,f){void 0===f&&(f=null);if(!(a.contains(b)||null!==f&&!f(b)||b instanceof Tg))if(a.add(b),b instanceof S){if(c&&b instanceof V)for(var h=b.Ic;h.next();)Sg(a,h.value,c,d,e,f);if(e)for(h=b.ue;h.next();){var k=h.value;if(!a.contains(k)){var l=k.T,m=k.Z;null!==l&&a.contains(l)&&null!==m&&a.contains(m)?Sg(a,k,c,d,e,f):null!==l&&null!==m||Sg(a,k,c,d,e,f)}}if(1<d)for(b=b.KD();b.next();)Sg(a,b.value,c,d-1,e,f)}else if(b instanceof W)for(h=b.Tf;h.next();)Sg(a,h.value,c,d,e,f)}
Xf.prototype.Qo=function(a,b,c){var d=new na(R,R);for(a=a.i;a.next();)Ug(this,a.value,b,d,c);if(null!==b){c=b.ba;a=!1;null!==b.Za.be&&(a=b.Za.be.Si);for(var e=new J(W),f=new na(W,W),h=d.i;h.next();){var k=h.value;if(k instanceof W){var l=k;a||null!==l.T&&null!==l.Z||e.add(l)}else if(c instanceof Pf&&k instanceof S&&null!==k.data){var l=c,m=k,k=h.key,n=k.kl();null!==n&&(n=d.ja(n),null!==n?(l.ph(m.data,l.gb(n.data)),l=b.Qf(m.data),k=k.Xo(),null!==k&&null!==l&&f.add(k,l)):l.ph(m.data,void 0))}}0<e.count&&
b.cA(e,!1);if(0<f.count)for(c=f.i;c.next();)d.add(c.key,c.value)}if(null!==b&&(b=b.ba,c=b.bG,null!==c)){var p=new na;d.each(function(a){null!==a.key.data&&p.add(a.key.data,a.value.data)});c(p,b,this.g.ba)}for(b=d.i;b.next();)b.value.Hb();return d};
function Ug(a,b,c,d,e){if(null===b||e&&!b.canCopy())return null;if(d.contains(b))return d.ja(b);var f=null,h=b.data;if(null!==h&&null!==c){var k=c.ba;b instanceof W?k instanceof Q&&(h=k.qw(h),v.Ta(h)&&(k.Ns(h),f=c.Qf(h))):(h=k.copyNodeData(h),v.Ta(h)&&(k.Xk(h),f=c.eh(h)))}else Vg(b),f=b.copy(),null!==f&&(null!==c?c.add(f):null!==h&&a.tG&&(k=a.g.ba,h=f instanceof W&&k instanceof Q?k.qw(h):k.copyNodeData(h),v.Ta(h)&&(f.data=h)));if(!(f instanceof R))return null;f.hb=!1;f.gh=!1;d.add(b,f);if(b instanceof
S){for(h=b.ue;h.next();){k=h.value;if(k.T===b){var l=d.ja(k);null!==l&&(l.T=f)}k.Z===b&&(l=d.ja(k),null!==l&&(l.Z=f))}if(b instanceof V&&f instanceof V)for(h=f,b=b.Ic;b.next();)k=Ug(a,b.value,c,d,e),k instanceof W||null===k||(k.Sa=h)}else if(b instanceof W)for(h=b.T,null!==h&&(h=d.ja(h),null!==h&&(f.T=h)),h=b.Z,null!==h&&(h=d.ja(h),null!==h&&(f.Z=h)),b=b.Tf;b.next();)h=Ug(a,b.value,c,d,e),null!==h&&(h.ge=f);return f}
Xf.prototype.copySelection=function(){var a=this.g;if(null!==a){for(var b=new J(R),a=a.selection.i;a.next();)Sg(b,a.value,!0,this.wG?Infinity:0,this.uG,function(a){return a.canCopy()});this.copyToClipboard(b)}};Xf.prototype.canCopySelection=function(){var a=this.g;return null!==a&&a.Tj&&a.Wy&&0!==a.selection.count?!0:!1};Xf.prototype.cutSelection=function(){this.copySelection();this.deleteSelection()};
Xf.prototype.canCutSelection=function(){var a=this.g;return null!==a&&!a.ab&&!a.wf&&a.Tj&&a.ym&&a.Wy&&0!==a.selection.count?!0:!1};Xf.prototype.copyToClipboard=function(a){var b=this.g;if(null!==b){var c=null;if(null===a)Eg=null,Fg="";else{var c=b.ba,d=!1,e=!1,f=null;try{if(c instanceof Pf){var h=c,d=h.Hm;h.Hm=this.uD}c instanceof Q&&(h=c,e=h.Gm,h.Gm=this.tD);f=b.Qo(a,null,!0)}finally{c instanceof Pf&&(c.Hm=d),c instanceof Q&&(c.Gm=e),c=new I(R),c.Tc(f),Eg=c,Fg=b.ba.el}}b.Ba("ClipboardChanged",c)}};
Xf.prototype.pasteFromClipboard=function(){var a=new J(R),b=Eg;if(null===b)return a;var c=this.g;if(null===c||Fg!==c.ba.el)return a;var d=c.ba,e=!1,f=!1,h=null;try{if(d instanceof Pf){var k=d,e=k.Hm;k.Hm=this.uD}d instanceof Q&&(k=d,f=k.Gm,k.Gm=this.tD);h=c.Qo(b,c,!1)}finally{for(d instanceof Pf&&(d.Hm=e),d instanceof Q&&(d.Gm=f),b=h.i;b.next();)c=b.value,d=b.key,c.location.G()||(d.location.G()?c.location=d.location:!c.position.G()&&d.position.G()&&(c.position=d.position)),a.add(c)}return a};
Xf.prototype.pasteSelection=function(a){void 0===a&&(a=null);var b=this.g;if(null!==b)try{b.Zb="wait";b.Qb("Paste");b.Ba("ChangingSelection");var c=this.pasteFromClipboard();0<c.count&&Wg(b);for(var d=c.i;d.next();)d.value.hb=!0;b.Ba("ChangedSelection");if(null!==a){var e=b.computePartsBounds(b.selection);if(e){var f=b.Za.be;null===f&&(f=new Xg,f.Mc(b));var h=f.computeEffectiveCollection(b.selection);f.moveParts(h,new y(a.x-e.na,a.y-e.ua),!1)}}b.Ba("ClipboardPasted",c)}finally{b.yd("Paste"),b.Zb=
""}};Xf.prototype.canPasteSelection=function(){var a=this.g;return null===a||a.ab||a.wf||!a.Jo||!a.Wy||null===Eg||Fg!==a.ba.el?!1:!0};Xf.prototype.undo=function(){var a=this.g;null!==a&&a.la.undo()};Xf.prototype.canUndo=function(){var a=this.g;return null===a||a.ab||a.wf?!1:a.dD&&a.la.canUndo()};Xf.prototype.redo=function(){var a=this.g;null!==a&&a.la.redo()};Xf.prototype.canRedo=function(){var a=this.g;return null===a||a.ab||a.wf?!1:a.dD&&a.la.canRedo()};
Xf.prototype.decreaseZoom=function(a){void 0===a&&(a=1/this.ux);v.Ve(a,Xf,"decreaseZoom:factor");var b=this.g;null!==b&&b.al===Yg&&(a*=b.scale,a<b.ih||a>b.hh||(b.scale=a))};Xf.prototype.canDecreaseZoom=function(a){void 0===a&&(a=1/this.ux);v.Ve(a,Xf,"canDecreaseZoom:factor");var b=this.g;if(null===b||b.al!==Yg)return!1;a*=b.scale;return a<b.ih||a>b.hh?!1:b.lw};
Xf.prototype.increaseZoom=function(a){void 0===a&&(a=this.ux);v.Ve(a,Xf,"increaseZoom:factor");var b=this.g;null!==b&&b.al===Yg&&(a*=b.scale,a<b.ih||a>b.hh||(b.scale=a))};Xf.prototype.canIncreaseZoom=function(a){void 0===a&&(a=this.ux);v.Ve(a,Xf,"canIncreaseZoom:factor");var b=this.g;if(null===b||b.al!==Yg)return!1;a*=b.scale;return a<b.ih||a>b.hh?!1:b.lw};Xf.prototype.resetZoom=function(a){void 0===a&&(a=this.sw);v.Ve(a,Xf,"resetZoom:newscale");var b=this.g;null===b||a<b.ih||a>b.hh||(b.scale=a)};
Xf.prototype.canResetZoom=function(a){void 0===a&&(a=this.sw);v.Ve(a,Xf,"canResetZoom:newscale");var b=this.g;return null===b||a<b.ih||a>b.hh?!1:b.lw};Xf.prototype.zoomToFit=function(){var a=this.g;if(null!==a){var b=a.scale,c=a.position;b===this.Ty&&!isNaN(this.uy)&&a.ae.K(this.Sy)?(a.scale=this.uy,a.position=this.WB,this.Ty=NaN,this.Sy=Yc):(this.uy=b,this.WB=c.copy(),a.zoomToFit(),this.Ty=a.scale,this.Sy=a.ae.copy())}};Xf.prototype.canZoomToFit=function(){var a=this.g;return null===a?!1:a.lw};
Xf.prototype.scrollToPart=function(a){void 0===a&&(a=null);null!==a&&v.A(a,R,Xf,"part");var b=this.g;if(null!==b){if(null===a){try{null!==this.Fj&&(this.Fj.next()?a=this.Fj.value:this.Fj=null)}catch(c){}null===a&&(0<b.Pm.count?this.Fj=b.Pm.i:0<b.selection.count&&(this.Fj=b.selection.i),null!==this.Fj&&this.Fj.next()&&(a=this.Fj.value))}if(null!==a){var d=b.Na;d.Zm("Scroll To Part");var e=b.position.copy();b.iG(a.V);e.Fc(b.position)&&d.ai()}}};
Xf.prototype.canScrollToPart=function(a){void 0===a&&(a=null);null!==a&&v.A(a,R,Xf,"part");a=this.g;return null===a||0===a.selection.count&&0===a.Pm.count?!1:a.oe&&a.pe};Xf.prototype.collapseTree=function(a){void 0===a&&(a=null);var b=this.g;if(null!==b)try{b.Qb("Collapse Tree");b.Na.Zm("Collapse Tree");var c=new I(S);if(null!==a&&a.nd)a.collapseTree(),c.add(a);else for(var d=b.selection.i;d.next();){var e=d.value;e instanceof S&&(a=e,a.nd&&(a.collapseTree(),c.add(a)))}b.Ba("TreeCollapsed",c)}finally{b.yd("Collapse Tree")}};
Xf.prototype.canCollapseTree=function(a){void 0===a&&(a=null);var b=this.g;if(null===b||b.ab)return!1;if(null!==a){if(!a.nd)return!1;if(0<a.Bw().count)return!0}else for(a=b.selection.i;a.next();)if(b=a.value,b instanceof S&&b.nd&&0<b.Bw().count)return!0;return!1};
Xf.prototype.expandTree=function(a){void 0===a&&(a=null);var b=this.g;if(null!==b)try{b.Qb("Expand Tree");b.Na.Zm("Expand Tree");var c=new I(S);if(null===a||a.nd)for(var d=b.selection.i;d.next();){var e=d.value;e instanceof S&&(a=e,a.nd||(a.expandTree(),c.add(a)))}else a.expandTree(),c.add(a);b.Ba("TreeExpanded",c)}finally{b.yd("Expand Tree")}};
Xf.prototype.canExpandTree=function(a){void 0===a&&(a=null);var b=this.g;if(null===b||b.ab)return!1;if(null!==a){if(a.nd)return!1;if(0<a.Bw().count)return!0}else for(a=b.selection.i;a.next();)if(b=a.value,b instanceof S&&!b.nd&&0<b.Bw().count)return!0;return!1};
Xf.prototype.groupSelection=function(){var a=this.g;if(null!==a){var b=a.ba;if(b instanceof Q){var c=this.eD;if(null!==c){var d=null;try{a.Zb="wait";a.Qb("Group");a.Ba("ChangingSelection");for(var e=new I(R),f=a.selection.i;f.next();){var h=f.value;h.Rd()&&h.canGroup()&&e.add(h)}for(var k=new I(R),l=e.i;l.next();){for(var m=l.value,f=!1,n=e.i;n.next();)if(m.Zh(n.value)){f=!0;break}f||k.add(m)}if(0<k.count){var p=k.first().Sa;if(null!==p)for(;null!==p;){for(var e=!1,q=k.i;q.next();)if(!q.value.Zh(p)){e=
!0;break}if(e)p=p.Sa;else break}if(c instanceof V)Vg(c),d=c.copy(),null!==d&&a.add(d);else if(b.Bz(c)){var r=b.copyNodeData(c);v.Ta(r)&&(b.Xk(r),d=a.Aw(r))}if(null!==d){null!==p&&this.isValidMember(p,d)&&(d.Sa=p);for(var s=k.i;s.next();){var t=s.value;this.isValidMember(d,t)&&(t.Sa=d)}a.select(d)}}a.Ba("ChangedSelection");a.Ba("SelectionGrouped",d)}finally{a.yd("Group"),a.Zb=""}}}}};
Xf.prototype.canGroupSelection=function(){var a=this.g;if(null===a||a.ab||a.wf||!a.Jo||!a.gw||!(a.ba instanceof Q)||null===this.eD)return!1;for(a=a.selection.i;a.next();){var b=a.value;if(b.Rd()&&b.canGroup())return!0}return!1};function Zg(a){var b=v.jb();for(a=a.i;a.next();){var c=a.value;c instanceof W||b.push(c)}a=new J(R);for(var c=b.length,d=0;d<c;d++){for(var e=b[d],f=!0,h=0;h<c;h++)if(e.Zh(b[h])){f=!1;break}f&&a.add(e)}v.sa(b);return a}
Xf.prototype.isValidMember=function(a,b){if(null===b||a===b||b instanceof W)return!1;if(null!==a){if(a===b||a.Zh(b))return!1;var c=a.Lz;if(null!==c&&!c(a,b)||null===a.data&&null!==b.data||null!==a.data&&null===b.data)return!1}c=this.Lz;return null!==c?c(a,b):!0};
Xf.prototype.ungroupSelection=function(a){void 0===a&&(a=null);var b=this.g;if(null!==b){var c=b.ba;if(c instanceof Q)try{b.Zb="wait";b.Qb("Ungroup");b.Ba("ChangingSelection");var d=new I(V);if(null!==a)d.add(a);else for(var e=b.selection.i;e.next();){var f=e.value;f instanceof V&&(a=f,a.canUngroup()&&d.add(a))}if(0<d.count){b.nw();for(var h=d.i;h.next();){var k=h.value;k.expandSubGraph();var l=k.Sa,m=null!==l&&null!==l.data?c.gb(l.data):void 0,n=new I(R);n.Tc(k.Ic);for(var p=n.i;p.next();){var q=
p.value;q.hb=!0;if(!(q instanceof W)){var r=q.data;null!==r?c.kx(r,m):q.Sa=l}}b.remove(k)}}b.Ba("ChangedSelection");b.Ba("SelectionUngrouped",d,n)}finally{b.yd("Ungroup"),b.Zb=""}}};Xf.prototype.canUngroupSelection=function(a){void 0===a&&(a=null);var b=this.g;if(null===b||b.ab||b.wf||!b.ym||!b.kw||!(b.ba instanceof Q))return!1;if(null!==a){if(a.canUngroup())return!0}else for(a=b.selection.i;a.next();)if(b=a.value,b instanceof V&&b.canUngroup())return!0;return!1};
Xf.prototype.addTopLevelParts=function(a,b){for(var c=!0,d=Zg(a).i;d.next();){var e=d.value;null!==e.Sa&&(!b||this.isValidMember(null,e)?e.Sa=null:c=!1)}return c};
Xf.prototype.collapseSubGraph=function(a){void 0===a&&(a=null);var b=this.g;if(null!==b)try{b.Qb("Collapse SubGraph");b.Na.Zm("Collapse SubGraph");var c=new I(V);if(null!==a&&a.fe)a.collapseSubGraph(),c.add(a);else for(var d=b.selection.i;d.next();){var e=d.value;e instanceof V&&(a=e,a.fe&&(a.collapseSubGraph(),c.add(a)))}b.Ba("SubGraphCollapsed",c)}finally{b.yd("Collapse SubGraph")}};
Xf.prototype.canCollapseSubGraph=function(a){void 0===a&&(a=null);var b=this.g;if(null===b||b.ab)return!1;if(null!==a)return a.fe?!0:!1;for(a=b.selection.i;a.next();)if(b=a.value,b instanceof V&&b.fe)return!0;return!1};
Xf.prototype.expandSubGraph=function(a){void 0===a&&(a=null);var b=this.g;if(null!==b)try{b.Qb("Expand SubGraph");b.Na.Zm("Expand SubGraph");var c=new I(V);if(null===a||a.fe)for(var d=b.selection.i;d.next();){var e=d.value;e instanceof V&&(a=e,a.fe||(a.expandSubGraph(),c.add(a)))}else a.expandSubGraph(),c.add(a);b.Ba("SubGraphExpanded",c)}finally{b.yd("Expand SubGraph")}};
Xf.prototype.canExpandSubGraph=function(a){void 0===a&&(a=null);var b=this.g;if(null===b||b.ab)return!1;if(null!==a)return a.fe?!1:!0;for(a=b.selection.i;a.next();)if(b=a.value,b instanceof V&&!b.fe)return!0;return!1};
Xf.prototype.editTextBlock=function(a){void 0===a&&(a=null);null!==a&&v.A(a,$g,Xf,"editTextBlock");var b=this.g;if(null!==b){var c=b.Za.rA;if(null!==c){if(null===a){a=null;for(var d=b.selection.i;d.next();){var e=d.value;if(e.canEdit()){a=e;break}}if(null===a)return;a=a.bt(function(a){return a instanceof $g&&a.lz})}null!==a&&(b.Wa=null,c.Ae=a,b.Wa=c)}}};
Xf.prototype.canEditTextBlock=function(a){void 0===a&&(a=null);null!==a&&v.A(a,$g,Xf,"canEditTextBlock");var b=this.g;if(null===b||b.ab||b.wf||!b.jw||null===b.Za.rA)return!1;if(null!==a){if(a=a.Y,null!==a&&a.canEdit())return!0}else for(b=b.selection.i;b.next();)if(a=b.value,a.canEdit()&&(a=a.bt(function(a){return a instanceof $g&&a.lz}),null!==a))return!0;return!1};
Xf.prototype.showContextMenu=function(a){var b=this.g;if(null!==b){var c=b.Za.dz;if(null!==c&&(void 0===a&&(a=0<b.selection.count?b.selection.first():b),a=c.findObjectWithContextMenu(a),null!==a)){var d=new xf,e=null;a instanceof G?e=a.Xa(Ab):b.rH||(e=b.rb,e=new y(e.x+e.width/2,e.y+e.height/2));null!==e&&(d.g=b,d.jf=b.jF(e),d.ca=e,d.left=!1,d.right=!0,d.up=!0,b.N=d);b.Wa=c;ah(c,!1,a)}}};
Xf.prototype.canShowContextMenu=function(a){var b=this.g;if(null===b)return!1;var c=b.Za.dz;if(null===c)return!1;void 0===a&&(a=0<b.selection.count?b.selection.first():b);return null===c.findObjectWithContextMenu(a)?!1:!0};v.defineProperty(Xf,{tG:"copiesClipboardData"},function(){return this.XA},function(a){v.j(a,"boolean",Xf,"copiesClipboardData");this.XA=a});
v.defineProperty(Xf,{uG:"copiesConnectedLinks"},function(){return this.YA},function(a){v.j(a,"boolean",Xf,"copiesConnectedLinks");this.YA=a});v.defineProperty(Xf,{BD:"deletesConnectedLinks"},function(){return this.qB},function(a){v.j(a,"boolean",Xf,"deletesConnectedLinks");this.qB=a});v.defineProperty(Xf,{wG:"copiesTree"},function(){return this.bB},function(a){v.j(a,"boolean",Xf,"copiesTree");this.bB=a});
v.defineProperty(Xf,{DG:"deletesTree"},function(){return this.rB},function(a){v.j(a,"boolean",Xf,"deletesTree");this.rB=a});v.defineProperty(Xf,{uD:"copiesParentKey"},function(){return this.aB},function(a){v.j(a,"boolean",Xf,"copiesParentKey");this.aB=a});v.defineProperty(Xf,{tD:"copiesGroupKey"},function(){return this.$A},function(a){v.j(a,"boolean",Xf,"copiesGroupKey");this.$A=a});
v.defineProperty(Xf,{eD:"archetypeGroupData"},function(){return this.NA},function(a){null!==a&&v.A(a,Object,Xf,"archetypeGroupData");var b=this.g;null!==b&&(b=b.ba,b instanceof Q&&(a instanceof V||b.Bz(a)||v.k("CommandHandler.archetypeGroupData must be either a Group or a data object for which GraphLinksModel.isGroupForNodeData is true: "+a)));this.NA=a});v.defineProperty(Xf,{Lz:"memberValidation"},function(){return this.Ok},function(a){null!==a&&v.j(a,"function",Xf,"memberValidation");this.Ok=a});
v.defineProperty(Xf,{sw:"defaultScale"},function(){return this.oB},function(a){v.Ve(a,Xf,"defaultScale");0<a||v.k("defaultScale must be larger than zero, not: "+a);this.oB=a});v.defineProperty(Xf,{ux:"zoomFactor"},function(){return this.WC},function(a){v.Ve(a,Xf,"zoomFactor");1<a||v.k("zoomFactor must be larger than 1.0, not: "+a);this.WC=a});function Wf(){0<arguments.length&&v.dd(Wf);v.ec(this);this.S=null;this.Ob="";this.Re=!0;this.HB=!1;this.SC=null;this.cw=-1}v.ea("Tool",Wf);
Wf.prototype.Mc=function(a){this.S=a};Wf.prototype.toString=function(){return""!==this.name?this.name+" Tool":v.af(Object.getPrototypeOf(this))};Wf.prototype.updateAdornments=function(){};Wf.prototype.canStart=function(){return this.isEnabled};Wf.prototype.doStart=function(){};Wf.prototype.doActivate=function(){this.qa=!0};Wf.prototype.doDeactivate=function(){this.qa=!1};Wf.prototype.doStop=function(){};Wf.prototype.doCancel=function(){this.stopTool()};
Wf.prototype.stopTool=function(){var a=this.g;null!==a&&a.Wa===this&&(a.Wa=null,a.Zb="")};Wf.prototype.doMouseDown=function(){!this.qa&&this.canStart()&&this.doActivate()};Wf.prototype.doMouseMove=function(){};Wf.prototype.doMouseUp=function(){this.stopTool()};Wf.prototype.doMouseWheel=function(){};Wf.prototype.canStartMultiTouch=function(){return!0};
Wf.prototype.standardPinchZoomStart=function(){var a=this.g;if(null!==a){var b=a.N.event,c=null,d=null;if(void 0!==b.targetTouches){if(2>b.targetTouches.length)return;c=b.targetTouches[0];d=b.targetTouches[1]}else if(null!==a.Kf[0])c=a.Kf[0],d=a.Kf[1];else return;this.doCancel();if(a.$o("hasGestureZoom")){a.hy=!0;a.hC=a.scale;var e=bh(a),f=c,h=f.clientX-e.x,c=f.clientY-e.y,f=d,d=f.clientX-e.x,f=f.clientY-e.y;v.v(e);e=d-h;c=f-c;a.AC=Math.sqrt(e*e+c*c);b.preventDefault();b.cancelBubble=!0}}};
Wf.prototype.standardPinchZoomMove=function(){var a=this.g;if(null!==a){var b=a.N.event;this.doCancel();var c=null,d=null;if(void 0!==b.targetTouches){if(2>b.targetTouches.length)return;c=b.targetTouches[0];d=b.targetTouches[1]}else if(null!==a.Kf[0])c=a.Kf[0],d=a.Kf[1];else return;if(a.$o("hasGestureZoom")&&a.hy){var e=bh(a),f=c,c=f.clientX-e.x,h=f.clientY-e.y,f=d,d=f.clientX-e.x,f=f.clientY-e.y;v.v(e);var e=d-c,k=f-h,e=Math.sqrt(e*e+k*k)/a.AC,c=new y((Math.min(d,c)+Math.max(d,c))/2,(Math.min(f,
h)+Math.max(f,h))/2),h=a.hC*e,d=a.nb;h!==a.scale&&d.canResetZoom(h)&&(e=a.Il,a.Il=c,d.resetZoom(h),a.Il=e);b.preventDefault();b.cancelBubble=!0}}};Wf.prototype.doKeyDown=function(){var a=this.g;null!==a&&"Esc"===a.N.key&&this.doCancel()};Wf.prototype.doKeyUp=function(){};Wf.prototype.startTransaction=Wf.prototype.Qb=function(a){void 0===a&&(a=this.name);this.Cf=null;var b=this.g;return null===b?!1:b.Qb(a)};
Wf.prototype.stopTransaction=Wf.prototype.fk=function(){var a=this.g;return null===a?!1:null===this.Cf?a.zp():a.yd(this.Cf)};
Wf.prototype.standardMouseSelect=function(){var a=this.g;if(null!==a&&a.of){var b=a.N,c=a.ft(b.ca,!1);if(null!==c)if(v.ak?b.Et:b.control){a.Ba("ChangingSelection");for(b=c;null!==b&&!b.canSelect();)b=b.Sa;null!==b&&(b.hb=!b.hb);a.Ba("ChangedSelection")}else if(b.shift){if(!c.hb){a.Ba("ChangingSelection");for(b=c;null!==b&&!b.canSelect();)b=b.Sa;null!==b&&(b.hb=!0);a.Ba("ChangedSelection")}}else{if(!c.hb){for(b=c;null!==b&&!b.canSelect();)b=b.Sa;null!==b&&a.select(b)}}else!b.left||(v.ak?b.Et:b.control)||
b.shift||a.nw()}};Wf.prototype.standardMouseClick=function(a,b){void 0===a&&(a=null);void 0===b&&(b=function(a){return!a.layer.Gc});var c=this.g;if(null===c)return!1;var d=c.N,e=c.re(d.ca,a,b);d.ze=e;ch(e,d,c);return d.zc};
function ch(a,b,c){b.zc=!1;var d=0;b.left?d=1===b.We?1:2===b.We?2:1:b.right&&1===b.We&&(d=3);var e="";if(null!==a){switch(d){case 1:e="ObjectSingleClicked";break;case 2:e="ObjectDoubleClicked";break;case 3:e="ObjectContextClicked"}0!==d&&c.Ba(e,a)}else{switch(d){case 1:e="BackgroundSingleClicked";break;case 2:e="BackgroundDoubleClicked";break;case 3:e="BackgroundContextClicked"}0!==d&&c.Ba(e)}if(null!==a)for(;null!==a;){c=null;switch(d){case 1:c=a.click;break;case 2:c=a.$s?a.$s:a.click;break;case 3:c=
a.cz}if(null!==c&&(c(b,a),b.zc))break;a=a.U}else{a=null;switch(d){case 1:a=c.click;break;case 2:a=c.$s?c.$s:c.click;break;case 3:a=c.cz}null!==a&&a(b)}}
Wf.prototype.standardMouseOver=function(){var a=this.g;if(null!==a){var b=a.N;if(null!==b.g&&!0!==a.Na.uc){var c=a.tb;a.tb=!0;var d=a.re(b.ca,null,null);b.ze=d;var e=!1;if(d!==a.yn){var f=a.yn,h=f;a.yn=d;this.doCurrentObjectChanged(f,d);for(b.zc=!1;null!==f;){var k=f.Gt;if(null!==k){if(d===f)break;if(null!==d&&d.tl(f))break;k(b,f,d);e=!0;if(b.zc)break}f=f.U}f=h;for(b.zc=!1;null!==d;){k=d.Ft;if(null!==k){if(f===d)break;if(null!==f&&f.tl(d))break;k(b,d,f);e=!0;if(b.zc)break}d=d.U}d=a.yn}if(null!==d){f=
d;for(k="";null!==f;){k=f.cursor;if(""!==k)break;f=f.U}a.Zb=k;b.zc=!1;for(f=d;null!==f;){k=f.Pz;if(null!==k&&(k(b,f),e=!0,b.zc))break;f=f.U}}else a.Zb="",k=a.Pz,null!==k&&(k(b),e=!0);e&&a.ve();a.tb=c}}};Wf.prototype.doCurrentObjectChanged=function(){};
Wf.prototype.standardMouseWheel=function(){var a=this.g;if(null!==a){var b=a.N,c=b.gl;if(0!==c&&a.ae.G()){var d=a.nb,e=a.Za.Ht;if((e===dh&&!b.shift||e===eh&&b.control)&&(0<c?d.canIncreaseZoom():d.canDecreaseZoom()))e=a.Il,a.Il=b.jf,0<c?d.increaseZoom():d.decreaseZoom(),a.Il=e,b.bubbles=!1;else if(e===dh&&b.shift||e===eh&&!b.control){var d=a.position.copy(),e=0<c?c:-c,f=b.event.deltaX,h=b.event.deltaY;void 0===f||void 0===h||0===f&&0===h?!b.shift&&a.pe?(f=a.Tt,e=e/40*f,0<c?a.scroll("pixel","up",e):
a.scroll("pixel","down",e)):b.shift&&a.oe&&(f=a.St,e=e/40*f,0<c?a.scroll("pixel","left",e):a.scroll("pixel","right",e)):(0!==f&&a.oe&&(0<f?a.scroll("pixel","left",-f):a.scroll("pixel","right",f)),0!==h&&a.pe&&(0<h?a.scroll("pixel","up",-h):a.scroll("pixel","down",h)));a.position.K(d)||(b.bubbles=!1)}}}};Wf.prototype.standardWaitAfter=function(a,b){v.j(a,"number",Wf,"standardWaitAfter:delay");this.cancelWaitAfter();var c=this,d=b.copy();this.cw=v.setTimeout(function(){c.doWaitAfter(d)},a)};
Wf.prototype.cancelWaitAfter=function(){-1!==this.cw&&v.clearTimeout(this.cw);this.cw=-1};Wf.prototype.doWaitAfter=function(){};Wf.prototype.findToolHandleAt=function(a,b){var c=this.g;if(null===c)return null;c=c.re(a,function(a){for(;null!==a&&!(a.U instanceof Tg);)a=a.U;return a});return null===c?null:c.U.gc===b?c:null};
Wf.prototype.isBeyondDragSize=function(a,b){var c=this.g;if(null===c)return!1;void 0===a&&(a=c.yc.jf);void 0===b&&(b=c.N.jf);var d=c.Za.HG,e=d.width,d=d.height;c.yc.Wi&&(e+=6,d+=6);return Math.abs(b.x-a.x)>e||Math.abs(b.y-a.y)>d};v.u(Wf,{g:"diagram"},function(){return this.S});v.defineProperty(Wf,{name:"name"},function(){return this.Ob},function(a){v.j(a,"string",Wf,"name");this.Ob=a});
v.defineProperty(Wf,{isEnabled:"isEnabled"},function(){return this.Re},function(a){v.j(a,"boolean",Wf,"isEnabled");this.Re=a});v.defineProperty(Wf,{qa:"isActive"},function(){return this.HB},function(a){v.j(a,"boolean",Wf,"isActive");this.HB=a});v.defineProperty(Wf,{Cf:"transactionResult"},function(){return this.SC},function(a){null!==a&&v.j(a,"string",Wf,"transactionResult");this.SC=a});
function Xg(){0<arguments.length&&v.dd(Xg);Wf.call(this);this.name="Dragging";this.ZA=this.LB=!0;this.Rq=this.xB=!1;this.QB=!0;this.iy=(new ia(NaN,NaN)).freeze();this.jy=tb;this.ky=(new y(NaN,NaN)).freeze();this.wB=!1;this.uB=this.WA=this.vB=this.gB=this.Gi=null;this.Aq=this.OB=!1;this.wo=new y(NaN,NaN);this.Tv=new y;this.Wv=!1;this.KB=!0;this.Hn=100;this.ij=[];this.yF=(new J(R)).freeze()}v.Ia(Xg,Wf);v.ea("DraggingTool",Xg);
v.defineProperty(Xg,{aE:"isCopyEnabled"},function(){return this.LB},function(a){v.j(a,"boolean",Xg,"isCopyEnabled");this.LB=a});v.defineProperty(Xg,{vG:"copiesEffectiveCollection"},function(){return this.ZA},function(a){v.j(a,"boolean",Xg,"copiesEffectiveCollection");this.ZA=a});v.defineProperty(Xg,{IG:"dragsTree"},function(){return this.xB},function(a){v.j(a,"boolean",Xg,"dragsTree");this.xB=a});
v.defineProperty(Xg,{Hw:"isGridSnapEnabled"},function(){return this.Rq},function(a){v.j(a,"boolean",Xg,"isGridSnapEnabled");this.Rq=a});v.defineProperty(Xg,{lH:"isComplexRoutingRealtime"},function(){return this.KB},function(a){v.j(a,"boolean",Xg,"isComplexRoutingRealtime");this.KB=a});v.defineProperty(Xg,{nH:"isGridSnapRealtime"},function(){return this.QB},function(a){v.j(a,"boolean",Xg,"isGridSnapRealtime");this.QB=a});
v.defineProperty(Xg,{SD:"gridSnapCellSize"},function(){return this.iy},function(a){v.A(a,ia,Xg,"gridSnapCellSize");this.iy.K(a)||(this.iy=a=a.R())});v.defineProperty(Xg,{XG:"gridSnapCellSpot"},function(){return this.jy},function(a){v.A(a,L,Xg,"gridSnapCellSpot");this.jy.K(a)||(this.jy=a=a.R())});v.defineProperty(Xg,{YG:"gridSnapOrigin"},function(){return this.ky},function(a){v.A(a,y,Xg,"gridSnapOrigin");this.ky.K(a)||(this.ky=a=a.R())});
v.defineProperty(Xg,{Si:"dragsLink"},function(){return this.wB},function(a){v.j(a,"boolean",Xg,"dragsLink");this.wB=a});v.defineProperty(Xg,{Jm:"currentPart"},function(){return this.gB},function(a){null!==a&&v.A(a,R,Xg,"currentPart");this.gB=a});v.defineProperty(Xg,{hc:"copiedParts"},function(){return this.WA},function(a){this.WA=a});v.defineProperty(Xg,{ac:"draggedParts"},function(){return this.vB},function(a){this.vB=a});
v.u(Xg,{JJ:"draggingParts"},function(){return null!==this.hc?this.hc.cj():null!==this.ac?this.ac.cj():this.yF});v.defineProperty(Xg,{ad:"draggedLink"},function(){return this.uB},function(a){null!==a&&v.A(a,W,Xg,"draggedLink");this.uB=a});v.defineProperty(Xg,{Gw:"isDragOutStarted"},function(){return this.OB},function(a){this.OB=a});v.defineProperty(Xg,{ek:"startPoint"},function(){return this.Tv},function(a){v.A(a,y,Xg,"startPoint");this.Tv.K(a)||(this.Tv=a=a.R())});
v.defineProperty(Xg,{xD:"delay"},function(){return this.Hn},function(a){v.j(a,"number",Xg,"delay");this.Hn=a});Xg.prototype.canStart=function(){if(!this.isEnabled)return!1;var a=this.g;if(null===a||a.ab&&!a.Rs||!a.$k&&!a.Tj&&!a.Rs||!a.of)return!1;var b=a.N;return!b.left||a.Wa!==this&&(!this.isBeyondDragSize()||b.Wi&&b.timestamp-a.yc.timestamp<this.Hn)?!1:null!==this.findDraggablePart()};
Xg.prototype.findDraggablePart=function(){var a=this.g;if(null===a)return null;a=a.ft(a.yc.ca,!1);if(null===a)return null;for(;null!==a&&!a.canSelect();)a=a.Sa;return null!==a&&(a.canMove()||a.canCopy())?a:null};Xg.prototype.standardMouseSelect=function(){var a=this.g;if(null!==a&&a.of){var b=a.ft(a.yc.ca,!1);if(null!==b){for(;null!==b&&!b.canSelect();)b=b.Sa;this.Jm=b;this.Jm.hb||(a.Ba("ChangingSelection"),b=a.N,(v.ak?b.Et:b.control)||b.shift||Wg(a),this.Jm.hb=!0,a.Ba("ChangedSelection"))}}};
Xg.prototype.doActivate=function(){var a=this.g;if(null!==a){null===this.Jm&&this.standardMouseSelect();var b=this.Jm;null!==b&&(b.canMove()||b.canCopy())&&(this.qa=!0,this.wo.set(a.position),fh(this,a.selection),this.ij.length=0,this.ac=this.computeEffectiveCollection(a.selection),a.au=!0,gh(this,this.ac),this.Qb("Drag"),this.ek=a.yc.ca,a.Ne=!0,a.Rs&&(this.Gw=!0,this.Aq=!1,hh=this,ih=this.g,this.doSimulatedDragOut()))}};
function fh(a,b){if(a.Si){var c=a.g;null!==c&&c.zm&&(c.ba instanceof Q&&1===b.count&&b.first()instanceof W?(a.ad=b.first(),a.ad.canRelinkFrom()&&a.ad.canRelinkTo()&&a.ad.Us(),a.Gi=c.Za.yE,null===a.Gi&&(a.Gi=new qh,a.Gi.Mc(c))):(a.ad=null,a.Gi=null))}}
Xg.prototype.computeEffectiveCollection=function(a){var b=null!==this.g&&this.g.Wa===this,c=new na(R);if(null===a)return c;for(var d=a.i;d.next();)uh(this,c,d.value,b);if(null!==this.ad&&this.Si)return c;for(d=a.i;d.next();)a=d.value,a instanceof W&&(b=a.T,null===b||c.contains(b)?(b=a.Z,null===b||c.contains(b)||c.remove(a)):c.remove(a));return c};function vh(a){return void 0===a?new wh(Xc):new wh(a.copy())}
function uh(a,b,c,d){if(!b.contains(c)&&(!d||c.canMove()||c.canCopy()))if(c instanceof S){b.add(c,vh(c.location));if(c instanceof V)for(var e=c.Ic;e.next();)uh(a,b,e.value,d);for(e=c.ue;e.next();){var f=e.value;if(!b.contains(f)){var h=f.T,k=f.Z;null!==h&&b.contains(h)&&null!==k&&b.contains(k)&&uh(a,b,f,d)}}if(a.IG)for(c=c.KD();c.next();)uh(a,b,c.value,d)}else if(c instanceof W)for(f=c,b.add(f,vh()),e=f.Tf;e.next();)uh(a,b,e.value,d);else c instanceof Tg||b.add(c,vh(c.location))}
Xg.prototype.doDeactivate=function(){this.qa=!1;var a=this.g;null!==a&&xh(a);yh(this);zh(this,this.ac);this.ac=this.Jm=null;this.Aq=this.Gw=!1;if(0<Ah.count){for(var b=Ah.length,c=0;c<b;c++){var d=Ah.da(c);Bh(d);Ch(d);yh(d);null!==d.g&&xh(d.g)}Ah.clear()}Bh(this);this.wo.m(NaN,NaN);hh=ih=null;Ch(this);a.Ne=!1;a.Zb="";a.au=!1;this.fk()};function yh(a){var b=a.g;if(null!==b){var c=b.tb;b.tb=!0;Dh(a,b.N,null);b.tb=c}a.ij.length=0}
function Eh(){var a=hh;Ch(a);Fh(a);var b=a.g;null!==b&&a.wo.G()&&(b.position=a.wo);null!==b&&xh(b)}Xg.prototype.doCancel=function(){Ch(this);Fh(this);var a=this.g;null!==a&&this.wo.G()&&(a.position=this.wo);this.stopTool()};function gh(a,b){if(null!==b){a.Wv=!0;for(var c=b.i;c.next();){var d=c.key;d instanceof W&&(d.Jp=!0)}}}function zh(a,b){if(null!==b){for(var c=b.i;c.next();){var d=c.key;d instanceof W&&(d.Jp=!1,d.rl&&Gh(d)&&d.ic())}a.Wv=!1}}
Xg.prototype.doKeyDown=function(){var a=this.g;null!==a&&(a=a.N,null!==a&&this.qa&&("Esc"===a.key?this.doCancel():this.doMouseMove()))};Xg.prototype.doKeyUp=function(){var a=this.g;null!==a&&null!==a.N&&this.qa&&this.doMouseMove()};function Hh(a,b){for(var c=Infinity,d=Infinity,e=-Infinity,f=-Infinity,h=a.i;h.next();){var k=h.value;if(k.Rd()&&k.isVisible()){var l=k.location,k=l.x,l=l.y;isNaN(k)||isNaN(l)||(k<c&&(c=k),l<d&&(d=l),k>e&&(e=k),l>f&&(f=l))}}Infinity===c?b.m(0,0,0,0):b.m(c,d,e-c,f-d)}
function Ih(a,b){if(null===a.hc){var c=a.g;if(!(null===c||b&&(c.ab||c.wf))&&null!==a.ac){var d=c.la;d.isEnabled&&d.dE?null!==d.Qi&&0<d.Qi.Pf.count&&(c.la.zp(),c.Qb("Drag")):Fh(a);c.tb=!b;c.Qp=!b;a.ek=c.yc.ca;d=a.vG?a.ac.cj():c.selection;d=c.Qo(d,c,!0);for(c=d.i;c.next();)c.value.location=c.key.location;c=v.bg();Hh(d,c);v.Vb(c);for(var c=new na(R),e=a.ac.i;e.next();){var f=e.key;f.Rd()&&f.canCopy()&&(f=d.ja(f),null!==f&&(f.tf(),c.add(f,vh(f.location))))}for(d=d.i;d.next();)e=d.value,e instanceof W&&
e.canCopy()&&c.add(e,vh());a.hc=c;fh(a,c.cj());null!==a.ad&&(c=a.ad,d=c.an,c.xl(a.ek.x-(d.x+d.width/2),a.ek.y-(d.y+d.height/2)))}}}function Ch(a){var b=a.g;if(null!==b){if(null!==a.hc&&(b.cA(a.hc.cj(),!1),a.hc=null,null!==a.ac))for(var c=a.ac.i;c.next();)c.key instanceof W&&(c.value.point=new y(0,0));b.tb=!1;b.Qp=!1;a.ek=b.yc.ca}}function Bh(a){if(null!==a.ad){if(a.Si&&null!==a.Gi){var b=a.Gi;b.g.remove(b.Ed);b.g.remove(b.Fd)}a.ad=null;a.Gi=null}}
function Jh(a,b,c){var d=a.g;if(null!==d){var e=a.ek,f=v.L();f.assign(d.N.ca);a.moveParts(b,f.cu(e),c);v.v(f)}}
Xg.prototype.moveParts=function(a,b,c){if(null!==a&&(v.A(a,na,Xg,"moveParts:parts"),0!==a.count)){var d=v.L(),e=v.L();e.assign(b);isNaN(e.x)&&(e.x=0);isNaN(e.y)&&(e.y=0);(b=this.Wv)||gh(this,a);for(var f=new I(Kh),h=new I(Ea),k=a.i;k.next();){var l=k.key;if(l.Rd()){var m=Lh(this,l,a);if(null!==m)f.add(new Kh(l,k.value,m));else if(!c||l.canMove()){m=k.value.point;d.assign(m);var n=v.L(),p=this.computeMove(l,d.add(e),a,n);l.location=p;k.value.VE=n.cu(m);v.v(n)}}else k.key instanceof W&&h.add(k.cb)}for(c=
f.i;c.next();)f=c.value,m=f.info.point,d.assign(m),f.Jc.location=d.add(f.ZG.VE);c=v.L();m=v.L();for(h=h.i;h.next();)if(k=h.value,f=k.key,f instanceof W)if(f.Jp)l=f.T,n=f.Z,null!==this.ad&&this.Si?(k=k.value.point,a.add(f,vh(e)),l=e.x-k.x,k=e.y-k.y,f.xl(l,k)):(null!==l&&(c.assign(l.location),p=a.ja(l),null!==p&&c.cu(p.point)),null!==n&&(m.assign(n.location),p=a.ja(n),null!==p&&m.cu(p.point)),null!==l&&null!==n?c.Fc(m)?(k=k.value.point,l=d,l.assign(c),l.cu(k),a.add(f,vh(c)),f.xl(l.x,l.y)):(f.Jp=!1,
f.ic()):(k=k.value.point,n=null!==l?c:null!==n?m:e,a.add(f,vh(n)),l=n.x-k.x,k=n.y-k.y,f.xl(l,k)));else if(null===f.T||null===f.Z)k=k.value.point,a.add(f,vh(e)),l=e.x-k.x,k=e.y-k.y,f.xl(l,k);v.v(d);v.v(e);v.v(c);v.v(m);b||zh(this,a)}};function Lh(a,b,c){b=b.Sa;if(null!==b){a=Lh(a,b,c);if(null!==a)return a;a=c.ja(b);if(null!==a)return a}return null}
function Fh(a){if(null!==a.ac){for(var b=a.g,c=a.ac.i;c.next();){var d=c.key;d.Rd()&&(d.location=c.value.point)}for(c=a.ac.i;c.next();)if(d=c.key,d instanceof W&&d.Jp){var e=c.value.point;a.ac.add(d,vh());d.xl(-e.x,-e.y)}b.Vf()}}
Xg.prototype.computeMove=function(a,b,c,d){void 0===d&&(d=new y);d.assign(b);if(null===a)return d;void 0===c&&(c=null);var e=b;if(this.Hw&&(this.nH||null===c||this.g.N.up)&&(e=v.L(),c=e,c.assign(b),null!==a)){var f=this.g;if(null!==f){var h=f.lt,k=this.SD,f=k.width,k=k.height,l=this.YG,m=l.x,l=l.y,n=this.XG;if(null!==h){var p=h.Dw;isNaN(f)&&(f=p.width);isNaN(k)&&(k=p.height);h=h.RD;isNaN(m)&&(m=h.x);isNaN(l)&&(l=h.y)}h=v.Mb(0,0);h.Zt(0,0,f,k,n);Pa(b.x,b.y,m+h.x,l+h.y,f,k,c);v.v(h)}}c=null!==a.CD?
a.CD(a,b,e):e;k=a.PH;f=k.x;isNaN(f)&&(f=a.location.x);k=k.y;isNaN(k)&&(k=a.location.y);h=a.KH;m=h.x;isNaN(m)&&(m=a.location.x);h=h.y;isNaN(h)&&(h=a.location.y);d.m(Math.max(f,Math.min(c.x,m)),Math.max(k,Math.min(c.y,h)));e!==b&&v.v(e);return d};function Mh(a,b){if(null===b)return!0;var c=b.Y;return null===c||c instanceof Tg||c.layer.Gc||a.ac&&a.ac.contains(c)||a.hc&&a.hc.contains(c)?!0:!1}
function Nh(a,b,c,d){var e=a.g;if(null!==e){a.Si&&(null!==a.ad&&(a.ad.T=null,a.ad.Z=null),Oh(a,!1));var f=Ph(e,b,null,function(b){return!Mh(a,b)}),h=e.N;h.ze=f;var k=e.tb,l=!1;try{e.tb=!0;l=Dh(a,h,f);if(!a.qa&&null===hh)return;if(null===f){var m=e.TH;null!==m&&(m(h),l=!0)}if(!a.qa&&null===hh)return;a.doDragOver(b,f);if(!a.qa&&null===hh)return}finally{e.tb=k,l&&e.Vf()}(e.oe||e.pe)&&(c||d)&&Qh(e,h.jf)}}
function Dh(a,b,c){var d=!1,e=a.ij.length,f=0<e?a.ij[0]:null;if(c===f)return!1;b.zc=!1;for(var h=0;h<e;h++){var k=a.ij[h],l=k.SH;if(null!==l&&(l(b,k,c),d=!0,b.zc))break}a.ij.length=0;if(!a.qa&&null===hh||null===c)return d;for(b.zc=!1;null!==c;)a.ij.push(c),c=Rh(c);e=a.ij.length;for(h=0;h<e&&(k=a.ij[h],l=k.RH,null===l||(l(b,k,f),d=!0,!b.zc));h++);return d}function Rh(a){var b=a.U;return null!==b?b:a instanceof R&&!(a instanceof V)&&(a=a.Sa,null!==a&&a.bH)?a:null}
function Sh(a,b,c){var d=a.Gi;if(null===d)return null;var e=a.g.Lm(b,d.wE,function(a){return d.findValidLinkablePort(a,c)});a=v.L();for(var f=Infinity,h=null,e=e.i;e.next();){var k=e.value;if(null!==k.Y){var l=k.Xa(Ab,a),l=b.sf(l);l<f&&(h=k,f=l)}}v.v(a);return h}
function Oh(a,b){var c=a.ad;if(null!==c&&!(2>c.oa)){var d=a.g;if(null!==d&&!d.ab&&(d=a.Gi,null!==d)){var e=null,f=null;null===c.T&&(e=Sh(a,c.l(0),!1),null!==e&&(f=e.Y));var h=null,k=null;null===c.Z&&(h=Sh(a,c.l(c.oa-1),!0),null!==h&&(k=h.Y));d.isValidLink(f,e,k,h)?b?(c.Bn=c.l(0).copy(),c.Fn=c.l(c.oa-1).copy(),c.Jp=!1,c.T=f,null!==e&&(c.xg=e.Ud),c.Z=k,null!==h&&(c.rh=h.Ud)):Th(d,f,e,k,h):Th(d,null,null,null,null)}}}Xg.prototype.doDragOver=function(){};
function Uh(a,b){var c=a.g;if(null!==c){a.Si&&Oh(a,!0);yh(a);var d=Ph(c,b,null,function(b){return!Mh(a,b)}),e=c.N;e.ze=d;if(null!==d){e.zc=!1;for(var f=d;null!==f;){var h=f.Mz;if(null!==h&&(h(e,f),e.zc))break;f=Rh(f)}}else h=c.Mz,null!==h&&h(e);if(a.qa||null!==hh)if(a.doDropOnto(b,d),a.qa||null!==hh)for(d=c.selection.i;d.next();)e=d.value,e instanceof S&&Vh(c,e.V)}}Xg.prototype.doDropOnto=function(){};
Xg.prototype.doMouseMove=function(){if(this.qa){var a=this.g;if(null!==a&&null!==this.Jm&&null!==this.ac){var b=!1,c=!1;this.mayCopy()?(b=!0,a.Zb="copy",Ih(this,!1),gh(this,this.hc),Jh(this,this.hc,!1),zh(this,this.hc)):this.mayMove()?(c=!0,a.Zb="default",Ch(this),Jh(this,this.ac,!0)):this.mayDragOut()?(a.Zb="no-drop",Ih(this,!1),Jh(this,this.hc,!1)):Ch(this);Nh(this,a.N.ca,c,b)}}};
Xg.prototype.doMouseUp=function(){if(this.qa){var a=this.g;if(null!==a){var b=!1,c=this.mayCopy();c&&null!==this.hc?(Ch(this),Ih(this,!0),gh(this,this.hc),Jh(this,this.hc,!1),zh(this,this.hc),null!==this.hc&&a.QE(this.hc.cj())):(b=!0,Ch(this),this.mayMove()&&(Jh(this,this.ac,!0),Nh(this,a.N.ca,!0,!1)));this.Aq=!0;Uh(this,a.N.ca);if(this.qa){this.hc=null;if(b&&null!==this.ac)for(b=this.ac.i;b.next();){var d=b.key;d instanceof S&&(d=d.Sa,null===d||null===d.placeholder||this.ac.contains(d)||d.qD&&d.P())}a.pc();
zh(this,this.ac);this.Cf=c?"Copy":"Move";a.Ba(c?"SelectionCopied":"SelectionMoved",a.selection)}this.stopTool()}}};Xg.prototype.mayCopy=function(){if(!this.aE)return!1;var a=this.g;if(null===a||a.ab||a.wf||!a.Jo||!a.Tj||(v.ak?!a.N.alt:!a.N.control))return!1;for(a=a.selection.i;a.next();){var b=a.value;if(b.Rd()&&b.canCopy())return!0}return null!==this.ad&&this.Si&&this.ad.canCopy()?!0:!1};
Xg.prototype.mayDragOut=function(){if(!this.aE)return!1;var a=this.g;if(null===a||!a.Rs||!a.Tj||a.$k)return!1;for(a=a.selection.i;a.next();){var b=a.value;if(b.Rd()&&b.canCopy())return!0}return null!==this.ad&&this.Si&&this.ad.canCopy()?!0:!1};Xg.prototype.mayMove=function(){var a=this.g;if(null===a||a.ab||!a.$k)return!1;for(a=a.selection.i;a.next();){var b=a.value;if(b.Rd()&&b.canMove())return!0}return null!==this.ad&&this.Si&&this.ad.canMove()?!0:!1};var Ah=new I(Xg),hh=null,ih=null;
Xg.prototype.mayDragIn=function(){var a=this.g;if(null===a||!a.cD||a.ab||a.wf||!a.Jo)return!1;var b=hh;return null===b||b.g.ba.el!==a.ba.el?!1:!0};Xg.prototype.doSimulatedDragEnter=function(){if(this.mayDragIn()){var a=this.g;a.Na.ai();Wh(a);a=hh;null!==a&&(a.g.Zb="copy")}};Xg.prototype.doSimulatedDragLeave=function(){var a=hh;null!==a&&a.doSimulatedDragOut();this.doCancel()};
Xg.prototype.doSimulatedDragOver=function(){var a=this.g;if(null!==a){var b=hh;null!==b&&null!==b.ac&&this.mayDragIn()&&(a.Zb="copy",Xh(this,b.ac.cj(),!1),Jh(this,this.hc,!1),Nh(this,a.N.ca,!1,!0))}};
Xg.prototype.doSimulatedDrop=function(){var a=this.g;if(null!==a){var b=hh;if(null!==b){var c=b.g;b.Aq=!0;Ch(this);this.mayDragIn()&&(this.Qb("Drop"),Xh(this,b.ac.cj(),!0),Jh(this,this.hc,!1),null!==this.hc&&a.QE(this.hc.cj()),Uh(this,a.N.ca),a.pc(),b=a.selection,null!==this.hc?this.Cf="ExternalCopy":b=new J(R),this.hc=null,a.focus(),a.Ba("ExternalObjectsDropped",b,c),this.fk())}}};
function Xh(a,b,c){if(null===a.hc){var d=a.g;if(null!==d&&!d.ab&&!d.wf){d.tb=!c;d.Qp=!c;a.ek=d.N.ca;d=d.Qo(b,d,!0);c=v.bg();Hh(b,c);var e=c.x+c.width/2,f=c.y+c.height/2;v.Vb(c);var h=a.Tv;c=new na(R);var k=v.L();for(b=b.i;b.next();){var l=b.value;if(l.Rd()&&l.canCopy()){var m=l.location,l=d.ja(l);k.m(h.x-(e-m.x),h.y-(f-m.y));l.location=k;l.tf();c.add(l,vh(k))}}v.v(k);for(d=d.i;d.next();)e=d.value,e instanceof W&&e.canCopy()&&c.add(e,vh());a.hc=c;fh(a,c.cj());null!==a.ad&&(c=a.ad,d=c.an,c.xl(a.ek.x-
(d.x+d.width/2),a.ek.y-(d.y+d.height/2)))}}}Xg.prototype.doSimulatedDragOut=function(){var a=this.g;null!==a&&(this.mayCopy()||this.mayMove()?a.Zb="":a.Zb="no-drop")};function wh(a){this.point=a;this.VE=Xc}v.ea("DraggingInfo",wh);function Kh(a,b,c){this.Jc=a;this.info=b;this.ZG=c}
function Yh(){0<arguments.length&&v.dd(Yh);Wf.call(this);this.rC=100;this.UB=!1;var a=new W,b=new X;b.Sf=!0;b.stroke="blue";a.add(b);b=new X;b.Kp="Standard";b.fill="blue";b.stroke="blue";a.add(b);a.Uf="Tool";this.KC=a;a=new S;b=new X;b.Ud="";b.Ab="Rectangle";b.fill=null;b.stroke="magenta";b.lb=2;b.wa=kd;a.add(b);a.Al=!1;a.Uf="Tool";this.IC=a;this.JC=b;a=new S;b=new X;b.Ud="";b.Ab="Rectangle";b.fill=null;b.stroke="magenta";b.lb=2;b.wa=kd;a.add(b);a.Al=!1;a.Uf="Tool";this.LC=a;this.MC=b;this.oC=this.nC=
this.jC=this.iC=this.kC=null;this.PB=!0;this.QF=new na(G,"boolean");this.sC=this.Lk=this.EC=null}v.Ia(Yh,Wf);v.ea("LinkingBaseTool",Yh);Yh.prototype.doStop=function(){var a=this.g;null!==a&&xh(a);this.Gg=this.Fg=this.Eg=this.Dg=this.kc=null;this.tx.clear();this.ag=null};v.defineProperty(Yh,{wE:"portGravity"},function(){return this.rC},function(a){v.j(a,"number",Yh,"portGravity");0<=a&&(this.rC=a)});
v.defineProperty(Yh,{gp:"isUnconnectedLinkValid"},function(){return this.UB},function(a){v.j(a,"boolean",Yh,"isUnconnectedLinkValid");this.UB=a});v.defineProperty(Yh,{Kg:"temporaryLink"},function(){return this.KC},function(a){v.A(a,W,Yh,"temporaryLink");this.KC=a});v.defineProperty(Yh,{Ed:"temporaryFromNode"},function(){return this.IC},function(a){v.A(a,S,Yh,"temporaryFromNode");this.IC=a});
v.defineProperty(Yh,{en:"temporaryFromPort"},function(){return this.JC},function(a){v.A(a,G,Yh,"temporaryFromPort");this.JC=a});v.defineProperty(Yh,{Fd:"temporaryToNode"},function(){return this.LC},function(a){v.A(a,S,Yh,"temporaryToNode");this.LC=a});v.defineProperty(Yh,{fn:"temporaryToPort"},function(){return this.MC},function(a){v.A(a,G,Yh,"temporaryToPort");this.MC=a});v.defineProperty(Yh,{kc:"originalLink"},function(){return this.kC},function(a){null!==a&&v.A(a,W,Yh,"originalLink");this.kC=a});
v.defineProperty(Yh,{Dg:"originalFromNode"},function(){return this.iC},function(a){null!==a&&v.A(a,S,Yh,"originalFromNode");this.iC=a});v.defineProperty(Yh,{Eg:"originalFromPort"},function(){return this.jC},function(a){null!==a&&v.A(a,G,Yh,"originalFromPort");this.jC=a});v.defineProperty(Yh,{Fg:"originalToNode"},function(){return this.nC},function(a){null!==a&&v.A(a,S,Yh,"originalToNode");this.nC=a});
v.defineProperty(Yh,{Gg:"originalToPort"},function(){return this.oC},function(a){null!==a&&v.A(a,G,Yh,"originalToPort");this.oC=a});v.defineProperty(Yh,{Dd:"isForwards"},function(){return this.PB},function(a){v.j(a,"boolean",Yh,"isForwards");this.PB=a});v.u(Yh,{tx:"validPortsCache"},function(){return this.QF});v.defineProperty(Yh,{ag:"targetPort"},function(){return this.EC},function(a){null!==a&&v.A(a,G,Yh,"targetPort");this.EC=a});
Yh.prototype.copyPortProperties=function(a,b,c,d,e){if(null!==a&&null!==b&&null!==c&&null!==d){d.wa=b.V.size;e?(d.yb=b.yb,d.Gl=b.Gl):(d.xb=b.xb,d.ll=b.ll);c.ef=Ab;var f=v.L();c.location=b.Xa(Ab,f);v.v(f);d.angle=b.nl();null!==this.Xw&&this.Xw(a,b,c,d,e)}};Yh.prototype.setNoTargetPortProperties=function(a,b,c){null!==b&&(b.wa=kd,b.xb=sb,b.yb=sb);null!==a&&(a.location=this.g.N.ca);null!==this.Xw&&this.Xw(null,null,a,b,c)};Yh.prototype.doMouseDown=function(){this.qa&&this.doMouseMove()};
Yh.prototype.doMouseMove=function(){if(this.qa){var a=this.g;if(null!==a){this.ag=this.findTargetPort(this.Dd);if(null!==this.ag){var b=this.ag.Y;if(b instanceof S){this.Dd?this.copyPortProperties(b,this.ag,this.Fd,this.fn,!0):this.copyPortProperties(b,this.ag,this.Ed,this.en,!1);return}}this.Dd?this.setNoTargetPortProperties(this.Fd,this.fn,!0):this.setNoTargetPortProperties(this.Ed,this.en,!1);(a.oe||a.pe)&&Qh(a,a.N.jf)}}};
Yh.prototype.findValidLinkablePort=function(a,b){if(null===a)return null;var c=a.Y;if(!(c instanceof S))return null;for(;null!==a;){var d=b?a.bF:a.MD;if(!0===d&&(null!==a.Ud||a instanceof S)&&(b?this.isValidTo(c,a):this.isValidFrom(c,a)))return a;if(!1===d)break;a=a.U}return null};
Yh.prototype.findTargetPort=function(a){var b=this.g,c=b.N.ca,d=this.wE;0>=d&&(d=.1);for(var e=this,f=b.Lm(c,d,function(b){return e.findValidLinkablePort(b,a)},null,!0),d=Infinity,b=null,f=f.i;f.next();){var h=f.value,k=h.Y;if(k instanceof S){var l=h.Xa(Ab,v.L()),m=c.x-l.x,n=c.y-l.y;v.v(l);l=m*m+n*n;l<d&&(m=this.tx.ja(h),null!==m?m&&(b=h,d=l):a&&this.isValidLink(this.Dg,this.Eg,k,h)||!a&&this.isValidLink(k,h,this.Fg,this.Gg)?(this.tx.add(h,!0),b=h,d=l):this.tx.add(h,!1))}}return null!==b&&(c=b.Y,
c instanceof S&&(null===c.layer||c.layer.Ss))?b:null};Yh.prototype.isValidFrom=function(a,b){if(null===a||null===b)return this.gp;if(this.g.Wa===this&&(null!==a.layer&&!a.layer.Ss||!0!==b.MD))return!1;var c=b.qz;if(Infinity>c){if(null!==this.kc&&a===this.Dg&&b===this.Eg)return!0;var d=b.Ud;null===d&&(d="");if(a.zw(d).count>=c)return!1}return!0};
Yh.prototype.isValidTo=function(a,b){if(null===a||null===b)return this.gp;if(this.g.Wa===this&&(null!==a.layer&&!a.layer.Ss||!0!==b.bF))return!1;var c=b.KI;if(Infinity>c){if(null!==this.kc&&a===this.Fg&&b===this.Gg)return!0;var d=b.Ud;null===d&&(d="");if(a.wg(d).count>=c)return!1}return!0};Yh.prototype.isInSameNode=function(a,b){if(null===a||null===b)return!1;if(a===b)return!0;var c=a.Y,d=b.Y;return null!==c&&c===d};
Yh.prototype.isLinked=function(a,b){if(null===a||null===b)return!1;var c=a.Y;if(!(c instanceof S))return!1;var d=a.Ud;null===d&&(d="");var e=b.Y;if(!(e instanceof S))return!1;var f=b.Ud;null===f&&(f="");for(e=e.wg(f);e.next();)if(f=e.value,f.T===c&&f.xg===d)return!0;return!1};
Yh.prototype.isValidLink=function(a,b,c,d){if(!this.isValidFrom(a,b)||!this.isValidTo(c,d)||!(null===b||null===d||(b.RG&&d.JI||!this.isInSameNode(b,d))&&(b.QG&&d.II||!this.isLinked(b,d)))||null!==this.kc&&(null!==a&&this.isLabelDependentOnLink(a,this.kc)||null!==c&&this.isLabelDependentOnLink(c,this.kc))||null!==a&&null!==c&&(null===a.data&&null!==c.data||null!==a.data&&null===c.data)||!this.isValidCycle(a,c,this.kc))return!1;if(null!==a){var e=a.Ow;if(null!==e&&!e(a,b,c,d,this.kc))return!1}if(null!==
c&&(e=c.Ow,null!==e&&!e(a,b,c,d,this.kc)))return!1;e=this.Ow;return null!==e?e(a,b,c,d,this.kc):!0};Yh.prototype.isLabelDependentOnLink=function(a,b){if(null===a)return!1;var c=a.ge;if(null===c)return!1;if(c===b)return!0;var d=new J(S);d.add(a);return Zh(this,c,b,d)};function Zh(a,b,c,d){if(b===c)return!0;var e=b.T;if(null!==e&&e.vf&&(d.add(e),Zh(a,e.ge,c,d)))return!0;b=b.Z;return null!==b&&b.vf&&(d.add(b),Zh(a,b.ge,c,d))?!0:!1}
Yh.prototype.isValidCycle=function(a,b,c){void 0===c&&(c=null);if(null===a||null===b)return this.gp;var d=this.g.RI;if(d!==$h){if(d===ai){if(null!==c&&!c.Hc)return!0;for(d=b.ue;d.next();){var e=d.value;if(e!==c&&e.Hc&&e.Z===b)return!1}return!bi(this,a,b,c,!0)}if(d===ci){if(null!==c&&!c.Hc)return!0;for(d=a.ue;d.next();)if(e=d.value,e!==c&&e.Hc&&e.T===a)return!1;return!bi(this,a,b,c,!0)}if(d===di)return a===b?a=!0:(d=new J(S),d.add(b),a=ei(this,d,a,b,c)),!a;if(d===fi)return!bi(this,a,b,c,!1);if(d===
ri)return a===b?a=!0:(d=new J(S),d.add(b),a=si(this,d,a,b,c)),!a}return!0};function bi(a,b,c,d,e){if(b===c)return!0;if(null===b||null===c)return!1;for(var f=b.ue;f.next();){var h=f.value;if(h!==d&&(!e||h.Hc)&&h.Z===b&&(h=h.T,h!==b&&bi(a,h,c,d,e)))return!0}return!1}function ei(a,b,c,d,e){if(c===d)return!0;if(null===c||null===d||b.contains(c))return!1;b.add(c);for(var f=c.ue;f.next();){var h=f.value;if(h!==e&&h.Z===c&&(h=h.T,h!==c&&ei(a,b,h,d,e)))return!0}return!1}
function si(a,b,c,d,e){if(c===d)return!0;if(null===c||null===d||b.contains(c))return!1;b.add(c);for(var f=c.ue;f.next();){var h=f.value;if(h!==e){var k=h.T,h=h.Z,k=k===c?h:k;if(k!==c&&si(a,b,k,d,e))return!0}}return!1}v.defineProperty(Yh,{Ow:"linkValidation"},function(){return this.Lk},function(a){null!==a&&v.j(a,"function",Yh,"linkValidation");this.Lk=a});v.defineProperty(Yh,{Xw:"portTargeted"},function(){return this.sC},function(a){null!==a&&v.j(a,"function",Yh,"portTargeted");this.sC=a});
function ti(){0<arguments.length&&v.dd(ti);Yh.call(this);this.name="Linking";this.PA={};this.OA=null;this.aa=ui;this.BC=null}v.Ia(ti,Yh);v.ea("LinkingTool",ti);var ui;ti.Either=ui=v.p(ti,"Either",0);var vi;ti.ForwardsOnly=vi=v.p(ti,"ForwardsOnly",0);var wi;ti.BackwardsOnly=wi=v.p(ti,"BackwardsOnly",0);v.defineProperty(ti,{dG:"archetypeLinkData"},function(){return this.PA},function(a){null!==a&&v.A(a,Object,ti,"archetypeLinkData");a instanceof G&&v.A(a,W,ti,"archetypeLinkData");this.PA=a});
v.defineProperty(ti,{fD:"archetypeLabelNodeData"},function(){return this.OA},function(a){null!==a&&v.A(a,Object,ti,"archetypeLabelNodeData");a instanceof G&&v.A(a,S,ti,"archetypeLabelNodeData");this.OA=a});v.defineProperty(ti,{direction:"direction"},function(){return this.aa},function(a){v.pb(a,ti,ti,"direction");this.aa=a});v.defineProperty(ti,{ZE:"startObject"},function(){return this.BC},function(a){null!==a&&v.A(a,G,ti,"startObject");this.BC=a});
ti.prototype.canStart=function(){if(!this.isEnabled)return!1;var a=this.g;if(null===a||a.ab||a.wf||!a.Ss)return!1;var b=a.ba;return(b instanceof Q||b instanceof Pf)&&a.N.left&&(a.Wa===this||this.isBeyondDragSize())?null!==this.findLinkablePort():!1};
ti.prototype.findLinkablePort=function(){var a=this.g;if(null===a)return null;var b=this.ZE;null===b&&(b=a.re(a.yc.ca,null,null));if(null===b||!(b.Y instanceof S))return null;a=this.direction;if(a===ui||a===vi){var c=this.findValidLinkablePort(b,!1);if(null!==c)return this.Dd=!0,c}if(a===ui||a===wi)if(c=this.findValidLinkablePort(b,!0),null!==c)return this.Dd=!1,c;return null};
ti.prototype.doActivate=function(){var a=this.g;if(null!==a){var b=this.findLinkablePort();null!==b&&(this.Qb(this.name),a.Ne=!0,a.Zb="pointer",this.Dd?(null===this.Fd||this.Fd.location.G()||(this.Fd.location=a.N.ca),this.Eg=b,b=this.Eg.Y,b instanceof S&&(this.Dg=b),this.copyPortProperties(this.Dg,this.Eg,this.Ed,this.en,!1)):(null===this.Ed||this.Ed.location.G()||(this.Ed.location=a.N.ca),this.Gg=b,b=this.Gg.Y,b instanceof S&&(this.Fg=b),this.copyPortProperties(this.Fg,this.Gg,this.Fd,this.fn,!0)),
a.add(this.Ed),a.add(this.Fd),null!==this.Kg&&(null!==this.Ed&&(this.Kg.T=this.Ed),null!==this.Fd&&(this.Kg.Z=this.Fd),this.Kg.ic(),a.add(this.Kg)),this.qa=!0)}};ti.prototype.doDeactivate=function(){this.qa=!1;var a=this.g;null!==a&&(a.remove(this.Kg),a.remove(this.Ed),a.remove(this.Fd),a.Ne=!1,a.Zb="",this.fk())};ti.prototype.doStop=function(){Yh.prototype.doStop.call(this);this.ZE=null};
ti.prototype.doMouseUp=function(){if(this.qa){var a=this.g;if(null===a)return;var b=this.Cf=null,c=null,d=null,e=null,f=this.ag=this.findTargetPort(this.Dd);if(null!==f){var h=f.Y;h instanceof S&&(this.Dd?(null!==this.Dg&&(b=this.Dg,c=this.Eg),d=h,e=f):(b=h,c=f,null!==this.Fg&&(d=this.Fg,e=this.Gg)))}else this.Dd?null!==this.Dg&&this.gp&&(b=this.Dg,c=this.Eg):null!==this.Fg&&this.gp&&(d=this.Fg,e=this.Gg);null!==b||null!==d?(h=this.insertLink(b,c,d,e),null!==h?(null===f&&(this.Dd?h.Fn=a.N.ca.copy():
h.Bn=a.N.ca.copy()),a.of&&a.select(h),this.Cf=this.name,a.Ba("LinkDrawn",h)):(a.ba.lD(),this.doNoLink(b,c,d,e))):this.Dd?this.doNoLink(this.Dg,this.Eg,null,null):this.doNoLink(null,null,this.Fg,this.Gg)}this.stopTool()};
ti.prototype.insertLink=function(a,b,c,d){var e=this.g;if(null===e)return null;var f=e.ba;if(f instanceof Pf){var h=a;b=c;e.Sd||(h=c,b=a);if(null!==h&&null!==b)return f.ph(b.data,f.gb(h.data)),b.Xo()}else if(f instanceof Q)if(h="",null!==a&&(null===b&&(b=a),h=b.Ud,null===h&&(h="")),b="",null!==c&&(null===d&&(d=c),b=d.Ud,null===b&&(b="")),d=this.dG,d instanceof W){if(Vg(d),f=d.copy(),null!==f)return f.T=a,f.xg=h,f.Z=c,f.rh=b,e.add(f),a=this.fD,a instanceof S&&(Vg(a),a=a.copy(),null!==a&&(a.ge=f,e.add(a))),
f}else if(null!==d&&(d=f.qw(d),v.Ta(d)))return null!==a&&f.jx(d,f.gb(a.data)),f.jA(d,h),null!==c&&f.nx(d,f.gb(c.data)),f.mA(d,b),f.Ns(d),a=this.fD,null===a||a instanceof S||(a=f.copyNodeData(a),v.Ta(a)&&(f.Xk(a),a=f.gb(a),void 0!==a&&f.Vy(d,a))),f=e.Qf(d);return null};ti.prototype.doNoLink=function(){};
function qh(){0<arguments.length&&v.dd(qh);Yh.call(this);this.name="Relinking";var a=new X;a.Ab="Diamond";a.wa=md;a.fill="lightblue";a.stroke="dodgerblue";a.cursor="pointer";a.we=0;this.BB=a;a=new X;a.Ab="Diamond";a.wa=md;a.fill="lightblue";a.stroke="dodgerblue";a.cursor="pointer";a.we=-1;this.NC=a;this.Sb=null;this.lC=new B}v.Ia(qh,Yh);v.ea("RelinkingTool",qh);
qh.prototype.updateAdornments=function(a){if(null!==a&&a instanceof W){var b="RelinkFrom",c=null;if(a.hb&&!this.g.ab){var d=a.Vt;null!==d&&a.canRelinkFrom()&&a.V.G()&&a.isVisible()&&d.V.G()&&d.wl()&&(c=a.Uo(b),null===c&&(c=this.makeAdornment(d,!1),null!==c&&(c.gc=b),a.Wk(b,c)))}null===c&&a.$i(b);b="RelinkTo";c=null;a.hb&&!this.g.ab&&(d=a.Vt,null!==d&&a.canRelinkTo()&&a.V.G()&&a.isVisible()&&d.V.G()&&d.wl()&&(c=a.Uo(b),null===c&&(c=this.makeAdornment(d,!0),null!==c&&(c.gc=b),a.Wk(b,c))));null===c&&
a.$i(b)}};qh.prototype.makeAdornment=function(a,b){var c=new Tg;c.type=xi;var d=b?this.HI:this.PG;null!==d&&c.add(d.copy());c.Yb=a;return c};v.defineProperty(qh,{PG:"fromHandleArchetype"},function(){return this.BB},function(a){null!==a&&v.A(a,G,qh,"fromHandleArchetype");this.BB=a});v.defineProperty(qh,{HI:"toHandleArchetype"},function(){return this.NC},function(a){null!==a&&v.A(a,G,qh,"toHandleArchetype");this.NC=a});v.u(qh,{handle:"handle"},function(){return this.Sb});
qh.prototype.canStart=function(){if(!this.isEnabled)return!1;var a=this.g;if(null===a||a.ab||a.wf||!a.zm)return!1;var b=a.ba;if(!(b instanceof Q||b instanceof Pf)||!a.N.left)return!1;b=this.findToolHandleAt(a.yc.ca,"RelinkFrom");null===b&&(b=this.findToolHandleAt(a.yc.ca,"RelinkTo"));return null!==b};
qh.prototype.doActivate=function(){var a=this.g;if(null!==a){if(null===this.kc){var b=this.findToolHandleAt(a.yc.ca,"RelinkFrom");null===b&&(b=this.findToolHandleAt(a.yc.ca,"RelinkTo"));if(null===b)return;var c=b.Y;if(!(c instanceof Tg&&c.Nf instanceof W))return;this.Sb=b;this.Dd=null===c||"RelinkTo"===c.gc;this.kc=c.Nf}this.Qb(this.name);a.Ne=!0;a.Zb="pointer";this.Eg=this.kc.bd;this.Dg=this.kc.T;this.Gg=this.kc.Hd;this.Fg=this.kc.Z;this.lC.set(this.kc.V);null!==this.kc&&0<this.kc.oa&&(null===this.kc.T&&
(null!==this.en&&(this.en.wa=jd),null!==this.Ed&&(this.Ed.location=this.kc.l(0))),null===this.kc.Z&&(null!==this.fn&&(this.fn.wa=jd),null!==this.Fd&&(this.Fd.location=this.kc.l(this.kc.oa-1))));this.copyPortProperties(this.Dg,this.Eg,this.Ed,this.en,!1);this.copyPortProperties(this.Fg,this.Gg,this.Fd,this.fn,!0);a.add(this.Ed);a.add(this.Fd);null!==this.Kg&&(null!==this.Ed&&(this.Kg.T=this.Ed),null!==this.Fd&&(this.Kg.Z=this.Fd),this.copyLinkProperties(this.kc,this.Kg),this.Kg.ic(),a.add(this.Kg));
this.qa=!0}};qh.prototype.copyLinkProperties=function(a,b){if(null!==a&&null!==b){b.Ps=a.Ps;b.gz=a.gz;var c=a.Je;if(c===yi||c===zi)c=Ai;b.Je=c;b.rw=a.rw;b.gx=a.gx;b.Hp=a.Hp;b.xb=a.xb;b.ll=a.ll;b.jt=a.jt;b.kt=a.kt;b.yb=a.yb;b.Gl=a.Gl;b.du=a.du;b.eu=a.eu}};qh.prototype.doDeactivate=function(){this.qa=!1;var a=this.g;null!==a&&(a.remove(this.Kg),a.remove(this.Ed),a.remove(this.Fd),a.Ne=!1,a.Zb="",this.fk())};qh.prototype.doStop=function(){Yh.prototype.doStop.call(this);this.Sb=null};
qh.prototype.doMouseUp=function(){if(this.qa){var a=this.g;if(null===a)return;this.Cf=null;var b=this.Dg,c=this.Eg,d=this.Fg,e=this.Gg,f=this.kc;this.ag=this.findTargetPort(this.Dd);if(null!==this.ag){var h=this.ag.Y;h instanceof S&&(this.Dd?(d=h,e=this.ag):(b=h,c=this.ag))}else this.gp?this.Dd?e=d=null:c=b=null:f=null;null!==f?(this.reconnectLink(f,this.Dd?d:b,this.Dd?e:c,this.Dd),null===this.ag&&(this.Dd?f.Fn=a.N.ca.copy():f.Bn=a.N.ca.copy(),f.ic()),a.of&&(f.hb=!0),this.Cf=this.name,a.Ba("LinkRelinked",
f,this.Dd?this.Gg:this.Eg)):this.doNoRelink(this.kc,this.Dd);Bi(this.kc,this.lC)}this.stopTool()};qh.prototype.reconnectLink=function(a,b,c,d){if(null===this.g)return!1;c=null!==c&&null!==c.Ud?c.Ud:"";d?(a.Z=b,a.rh=c):(a.T=b,a.xg=c);return!0};qh.prototype.doNoRelink=function(){};function Th(a,b,c,d,e){null!==b?(a.copyPortProperties(b,c,a.Ed,a.en,!1),a.g.add(a.Ed)):a.g.remove(a.Ed);null!==d?(a.copyPortProperties(d,e,a.Fd,a.fn,!0),a.g.add(a.Fd)):a.g.remove(a.Fd)}
function Ci(){0<arguments.length&&v.dd(Ci);Wf.call(this);this.name="LinkReshaping";var a=new X;a.Ab="Rectangle";a.wa=ld;a.fill="lightblue";a.stroke="dodgerblue";this.Ak=a;a=new X;a.Ab="Diamond";a.wa=ld;a.fill="lightblue";a.stroke="dodgerblue";this.$B=a;this.tC=3;this.Gx=this.Sb=null;this.mC=new y;this.zv=null}v.Ia(Ci,Wf);v.ea("LinkReshapingTool",Ci);var Di;Ci.None=Di=v.p(Ci,"None",0);var Ei;Ci.Horizontal=Ei=v.p(Ci,"Horizontal",1);var Fi;Ci.Vertical=Fi=v.p(Ci,"Vertical",2);var Gi;
Ci.All=Gi=v.p(Ci,"All",3);Ci.prototype.getReshapingBehavior=Ci.prototype.QD=function(a){return a&&a.uC?a.uC:Di};Ci.prototype.setReshapingBehavior=Ci.prototype.Yt=function(a,b){v.A(a,G,Ci,"setReshapingBehavior:obj");v.pb(b,Ci,Ci,"setReshapingBehavior:behavior");a.uC=b};
Ci.prototype.updateAdornments=function(a){if(null!==a&&a instanceof W){if(a.hb&&!this.g.ab){var b=a.path;if(null!==b&&a.canReshape()&&a.V.G()&&a.isVisible()&&b.V.G()&&b.wl()){var c=a.Uo(this.name);if(null===c||c.FF!==a.oa||c.TF!==a.Qt)c=this.makeAdornment(b),null!==c&&(c.FF=a.oa,c.TF=a.Qt,a.Wk(this.name,c));if(null!==c){c.location=a.position;return}}}a.$i(this.name)}};
Ci.prototype.makeAdornment=function(a){var b=a.Y,c=b.oa,d=b.jc,e=null;if(null!==b.points&&1<c){e=new Tg;e.type=xi;var c=b.gt,f=b.Mw,h=d?1:0;if(b.Qt&&b.Je!==Hi)for(var k=c+h;k<f-h;k++){var l=this.makeResegmentHandle(a,k);null!==l&&(l.we=k,l.gA=.5,l.qz=999,e.add(l))}for(k=c+1;k<f;k++)if(l=this.makeHandle(a,k),null!==l){l.we=k;if(k!==c)if(k===c+1&&d){var h=b.l(c),m=b.l(c+1);K(h.x,m.x)&&K(h.y,m.y)&&(m=b.l(c-1));K(h.x,m.x)?(this.Yt(l,Fi),l.cursor="n-resize"):K(h.y,m.y)&&(this.Yt(l,Ei),l.cursor="w-resize")}else k===
f-1&&d?(h=b.l(f-1),m=b.l(f),K(h.x,m.x)&&K(h.y,m.y)&&(h=b.l(f+1)),K(h.x,m.x)?(this.Yt(l,Fi),l.cursor="n-resize"):K(h.y,m.y)&&(this.Yt(l,Ei),l.cursor="w-resize")):k!==f&&(this.Yt(l,Gi),l.cursor="move");e.add(l)}e.gc=this.name;e.Yb=a}return e};Ci.prototype.makeHandle=function(){var a=this.mt;return null===a?null:a.copy()};v.defineProperty(Ci,{mt:"handleArchetype"},function(){return this.Ak},function(a){null!==a&&v.A(a,G,Ci,"handleArchetype");this.Ak=a});
Ci.prototype.makeResegmentHandle=function(){var a=this.OH;return null===a?null:a.copy()};v.defineProperty(Ci,{OH:"midHandleArchetype"},function(){return this.$B},function(a){null!==a&&v.A(a,G,Ci,"midHandleArchetype");this.$B=a});v.u(Ci,{handle:"handle"},function(){return this.Sb});v.u(Ci,{Qs:"adornedLink"},function(){return this.Gx});Ci.prototype.canStart=function(){if(!this.isEnabled)return!1;var a=this.g;return null!==a&&!a.ab&&a.hw&&a.N.left?null!==this.findToolHandleAt(a.yc.ca,this.name):!1};
Ci.prototype.doActivate=function(){var a=this.g;if(null!==a&&(this.Sb=this.findToolHandleAt(a.yc.ca,this.name),null!==this.Sb)){var b=this.Sb.Y.Nf;if(b instanceof W){this.Gx=b;a.Ne=!0;this.Qb(this.name);if(b.Qt&&999===this.Sb.qz){var c=b.points.copy(),d=this.Sb.Xa(Ab);c.Cd(this.Sb.we+1,d);b.jc&&c.Cd(this.Sb.we+1,d);b.points=c;b.Qd();this.Sb=this.findToolHandleAt(a.yc.ca,this.name);if(null===this.Sb){this.doDeactivate();return}}this.mC=b.l(this.Sb.we);this.zv=b.points.copy();this.qa=!0}}};
Ci.prototype.doDeactivate=function(){this.fk();this.Gx=this.Sb=null;var a=this.g;null!==a&&(a.Ne=!1);this.qa=!1};Ci.prototype.doCancel=function(){var a=this.Qs;null!==a&&(a.points=this.zv);this.stopTool()};Ci.prototype.doMouseMove=function(){var a=this.g;this.qa&&null!==a&&(a=this.computeReshape(a.N.ca),this.reshape(a))};
Ci.prototype.doMouseUp=function(){var a=this.g;if(this.qa&&null!==a){var b=this.computeReshape(a.N.ca);this.reshape(b);b=this.Qs;if(null!==b&&b.Qt){var c=this.handle.we,d=b.l(c-1),e=b.l(c),f=b.l(c+1);if(b.jc){if(c>b.gt+1&&c<b.Mw-1){var h=b.l(c-2);if(Math.abs(d.x-e.x)<this.nh&&Math.abs(d.y-e.y)<this.nh&&(Ii(this,h,d,e,f,!0)||Ii(this,h,d,e,f,!1))){var k=b.points.copy();Ii(this,h,d,e,f,!0)?(k.Ig(c-2,new y(h.x,(f.y+h.y)/2)),k.Ig(c+1,new y(f.x,(f.y+h.y)/2))):(k.Ig(c-2,new y((f.x+h.x)/2,h.y)),k.Ig(c+1,
new y((f.x+h.x)/2,f.y)));k.Vc(c);k.Vc(c-1);b.points=k;b.Qd()}else h=b.l(c+2),Math.abs(e.x-f.x)<this.nh&&Math.abs(e.y-f.y)<this.nh&&(Ii(this,d,e,f,h,!0)||Ii(this,d,e,f,h,!1))&&(k=b.points.copy(),Ii(this,d,e,f,h,!0)?(k.Ig(c-1,new y(d.x,(d.y+h.y)/2)),k.Ig(c+2,new y(h.x,(d.y+h.y)/2))):(k.Ig(c-1,new y((d.x+h.x)/2,d.y)),k.Ig(c+2,new y((d.x+h.x)/2,h.y))),k.Vc(c+1),k.Vc(c),b.points=k,b.Qd())}}else h=v.L(),Oa(d.x,d.y,f.x,f.y,e.x,e.y,h)&&h.sf(e)<this.nh*this.nh&&(k=b.points.copy(),k.Vc(c),b.points=k,b.Qd()),
v.v(h)}a.pc();this.Cf=this.name;a.Ba("LinkReshaped",this.Qs,this.zv)}this.stopTool()};function Ii(a,b,c,d,e,f){return f?Math.abs(b.y-c.y)<a.nh&&Math.abs(c.y-d.y)<a.nh&&Math.abs(d.y-e.y)<a.nh:Math.abs(b.x-c.x)<a.nh&&Math.abs(c.x-d.x)<a.nh&&Math.abs(d.x-e.x)<a.nh}v.defineProperty(Ci,{nh:"resegmentingDistance"},function(){return this.tC},function(a){v.j(a,"number",Ci,"resegmentingDistance");this.tC=a});
Ci.prototype.reshape=function(a){var b=this.Qs;b.Cl();var c=this.handle.we,d=this.QD(this.handle);if(b.jc)if(c===b.gt+1)c=b.gt+1,d===Fi?(b.W(c,b.l(c-1).x,a.y),b.W(c+1,b.l(c+2).x,a.y)):d===Ei&&(b.W(c,a.x,b.l(c-1).y),b.W(c+1,a.x,b.l(c+2).y));else if(c===b.Mw-1)c=b.Mw-1,d===Fi?(b.W(c-1,b.l(c-2).x,a.y),b.W(c,b.l(c+1).x,a.y)):d===Ei&&(b.W(c-1,a.x,b.l(c-2).y),b.W(c,a.x,b.l(c+1).y));else{var d=c,e=b.l(d),f=b.l(d-1),h=b.l(d+1);K(f.x,e.x)&&K(e.y,h.y)?(K(f.x,b.l(d-2).x)&&!K(f.y,b.l(d-2).y)?(b.w(d,a.x,f.y),
c++,d++):b.W(d-1,a.x,f.y),K(h.y,b.l(d+2).y)&&!K(h.x,b.l(d+2).x)?b.w(d+1,h.x,a.y):b.W(d+1,h.x,a.y)):K(f.y,e.y)&&K(e.x,h.x)?(K(f.y,b.l(d-2).y)&&!K(f.x,b.l(d-2).x)?(b.w(d,f.x,a.y),c++,d++):b.W(d-1,f.x,a.y),K(h.x,b.l(d+2).x)&&!K(h.y,b.l(d+2).y)?b.w(d+1,a.x,h.y):b.W(d+1,a.x,h.y)):K(f.x,e.x)&&K(e.x,h.x)?(K(f.x,b.l(d-2).x)&&!K(f.y,b.l(d-2).y)?(b.w(d,a.x,f.y),c++,d++):b.W(d-1,a.x,f.y),K(h.x,b.l(d+2).x)&&!K(h.y,b.l(d+2).y)?b.w(d+1,a.x,h.y):b.W(d+1,a.x,h.y)):K(f.y,e.y)&&K(e.y,h.y)&&(K(f.y,b.l(d-2).y)&&!K(f.x,
b.l(d-2).x)?(b.w(d,f.x,a.y),c++,d++):b.W(d-1,f.x,a.y),K(h.y,b.l(d+2).y)&&!K(h.x,b.l(d+2).x)?b.w(d+1,h.x,a.y):b.W(d+1,h.x,a.y));b.W(c,a.x,a.y)}else b.W(c,a.x,a.y),1===c&&b.computeSpot(!0).te()&&(e=b.T,f=b.bd,null===e||e.isVisible()||(e=e.findVisibleNode(),e!==b.T&&(f=e.jl(""))),d=f.Xa(Ab,v.L()),e=b.getLinkPointFromPoint(e,f,d,a,!0,v.L()),b.W(0,e.x,e.y),v.v(d),v.v(e)),c===b.oa-2&&b.computeSpot(!1).te()&&(c=b.Z,e=b.Hd,null===c||c.isVisible()||(c=c.findVisibleNode(),c!==b.Z&&(e=c.jl(""))),d=e.Xa(Ab,v.L()),
e=b.getLinkPointFromPoint(c,e,d,a,!1,v.L()),b.W(b.oa-1,e.x,e.y),v.v(d),v.v(e));b.Pi()};Ci.prototype.computeReshape=function(a){var b=this.Qs,c=this.handle.we;switch(this.QD(this.handle)){case Gi:return a;case Fi:return b=b.l(c),new y(b.x,a.y);case Ei:return b=b.l(c),new y(a.x,b.y);default:case Di:return b.l(c)}};v.u(Ci,{qK:"originalPoint"},function(){return this.mC});v.u(Ci,{rK:"originalPoints"},function(){return this.zv});
function Ji(){0<arguments.length&&v.dd(Ji);Wf.call(this);this.name="Resizing";this.Aj=(new ia(1,1)).freeze();this.yj=(new ia(9999,9999)).freeze();this.gj=(new ia(NaN,NaN)).freeze();this.Rq=!1;this.Db=null;var a=new X;a.Sj=Ab;a.Ab="Rectangle";a.wa=ld;a.fill="lightblue";a.stroke="dodgerblue";a.lb=1;a.cursor="pointer";this.Ak=a;this.Sb=null;this.yv=new ia;this.Dy=new y;this.ey=new ia(0,0);this.by=new ia(Infinity,Infinity);this.ay=new ia(1,1);this.fC=!0}v.Ia(Ji,Wf);v.ea("ResizingTool",Ji);
Ji.prototype.updateAdornments=function(a){if(!(null===a||a instanceof W)){if(a.hb&&!this.g.ab){var b=a.HE;if(null!==b&&a.canResize()&&a.V.G()&&a.isVisible()&&b.V.G()&&b.wl()){var c=a.Uo(this.name);if(null===c||c.Yb!==b)c=this.makeAdornment(b);if(null!==c){var d=b.nl();c.angle=d;var e=b.Xa(c.ef,v.L()),f=b.Ti();c.location=e;v.v(e);e=c.placeholder;if(null!==e){var b=b.Ha,h=v.Fl();h.m(b.width*f,b.height*f);e.wa=h;v.Yj(h)}Ki(this,c,d);a.Wk(this.name,c);return}}}a.$i(this.name)}};
Ji.prototype.makeAdornment=function(a){var b=null,b=a.Y.GE;if(null===b){b=new Tg;b.type=Li;b.ef=Ab;var c=new Mi;c.Sf=!0;b.add(c);b.add(this.makeHandle(a,tb));b.add(this.makeHandle(a,vb));b.add(this.makeHandle(a,Fb));b.add(this.makeHandle(a,Db));b.add(this.makeHandle(a,pc));b.add(this.makeHandle(a,rc));b.add(this.makeHandle(a,sc));b.add(this.makeHandle(a,qc))}else if(Vg(b),b=b.copy(),null===b)return null;b.gc=this.name;b.Yb=a;return b};
Ji.prototype.makeHandle=function(a,b){var c=this.mt;if(null===c)return null;c=c.copy();c.alignment=b;return c};
function Ki(a,b,c){if(null!==b)if(!b.alignment.Uc()&&""!==b.cursor)a:{a=b.alignment;a.te()&&(a=Ab);if(0>=a.x)c=0>=a.y?c+225:1<=a.y?c+135:c+180;else if(1<=a.x)0>=a.y?c+=315:1<=a.y&&(c+=45);else if(0>=a.y)c+=270;else if(1<=a.y)c+=90;else break a;0>c?c+=360:360<=c&&(c-=360);b.cursor=22.5>c?"e-resize":67.5>c?"se-resize":112.5>c?"s-resize":157.5>c?"sw-resize":202.5>c?"w-resize":247.5>c?"nw-resize":292.5>c?"n-resize":337.5>c?"ne-resize":"e-resize"}else if(b instanceof D)for(b=b.elements;b.next();)Ki(a,
b.value,c)}v.defineProperty(Ji,{mt:"handleArchetype"},function(){return this.Ak},function(a){null!==a&&v.A(a,G,Ji,"handleArchetype");this.Ak=a});v.u(Ji,{handle:"handle"},function(){return this.Sb});v.defineProperty(Ji,{Yb:"adornedObject"},function(){return this.Db},function(a){null!==a&&v.A(a,G,Ji,"adornedObject");this.Db=a});Ji.prototype.canStart=function(){if(!this.isEnabled)return!1;var a=this.g;return null!==a&&!a.ab&&a.Ts&&a.N.left?null!==this.findToolHandleAt(a.yc.ca,this.name)?!0:!1:!1};
Ji.prototype.doActivate=function(){var a=this.g;null!==a&&(this.Sb=this.findToolHandleAt(a.yc.ca,this.name),null!==this.Sb&&(this.Db=this.Sb.Y.Yb,this.Dy.set(this.Db.Y.location),this.yv.set(this.Db.wa),this.ay=this.computeCellSize(),this.ey=this.computeMinSize(),this.by=this.computeMaxSize(),a.Ne=!0,this.fC=a.Na.isEnabled,a.Na.isEnabled=!1,this.Qb(this.name),this.qa=!0))};Ji.prototype.doDeactivate=function(){var a=this.g;null!==a&&(this.fk(),this.Db=this.Sb=null,this.qa=a.Ne=!1,a.Na.isEnabled=this.fC)};
Ji.prototype.doCancel=function(){this.Db.wa=this.yv;this.Db.Y.location=this.Dy;this.stopTool()};Ji.prototype.doMouseMove=function(){var a=this.g;if(this.qa&&null!==a){var b=this.ey,c=this.by,d=this.ay,e=this.Db.OD(a.N.ca,v.L()),f=Ni;this.Db instanceof X&&(f=Oi(this.Db));b=this.computeResize(e,this.Sb.alignment,b,c,d,!(f===Pi||f===Qi||a.N.shift));this.resize(b);a.Vf();v.v(e)}};
Ji.prototype.doMouseUp=function(){var a=this.g;if(this.qa&&null!==a){var b=this.ey,c=this.by,d=this.ay,e=this.Db.OD(a.N.ca,v.L()),f=Ni;this.Db instanceof X&&(f=Oi(this.Db));b=this.computeResize(e,this.Sb.alignment,b,c,d,!(f===Pi||f===Qi||a.N.shift));this.resize(b);v.v(e);a.pc();this.Cf=this.name;a.Ba("PartResized",this.Db,this.yv)}this.stopTool()};
Ji.prototype.resize=function(a){if(null!==this.g){var b=this.Yb,c=b.Y,d=b.nl(),e=b.Ti(),f=Math.PI*d/180,h=Math.cos(f),f=Math.sin(f),k=0<d&&180>d?1:0,l=90<d&&270>d?1:0,d=180<d&&360>d?1:0,m=b.Ha.width,n=b.Ha.height;b.wa=a.size;var p=c.position.copy();c.tf();m=b.Ha.width-m;n=b.Ha.height-n;if(0!==m||0!==n)0!==m&&(p.x+=e*((a.x+m*l)*h-(a.y+n*k)*f)),0!==n&&(p.y+=e*((a.x+m*d)*f+(a.y+n*l)*h)),c.move(p),c instanceof S&&c.cf()}};
Ji.prototype.computeResize=function(a,b,c,d,e,f){b.te()&&(b=Ab);var h=this.Yb.Ha,k=h.x,l=h.y,m=h.x+h.width,n=h.y+h.height,p=1;if(!f){var p=h.width,q=h.height;0>=p&&(p=1);0>=q&&(q=1);p=q/p}q=v.L();Pa(a.x,a.y,k,l,e.width,e.height,q);a=h.copy();0>=b.x?0>=b.y?(a.x=Math.max(q.x,m-d.width),a.x=Math.min(a.x,m-c.width),a.width=Math.max(m-a.x,c.width),a.y=Math.max(q.y,n-d.height),a.y=Math.min(a.y,n-c.height),a.height=Math.max(n-a.y,c.height),f||(b=a.height/a.width,p<b?(a.height=p*a.width,a.y=n-a.height):(a.width=
a.height/p,a.x=m-a.width))):1<=b.y?(a.x=Math.max(q.x,m-d.width),a.x=Math.min(a.x,m-c.width),a.width=Math.max(m-a.x,c.width),a.height=Math.max(Math.min(q.y-l,d.height),c.height),f||(b=a.height/a.width,p<b?a.height=p*a.width:(a.width=a.height/p,a.x=m-a.width))):(a.x=Math.max(q.x,m-d.width),a.x=Math.min(a.x,m-c.width),a.width=m-a.x,f||(a.height=p*a.width,a.y=l+.5*(n-l-a.height))):1<=b.x?0>=b.y?(a.width=Math.max(Math.min(q.x-k,d.width),c.width),a.y=Math.max(q.y,n-d.height),a.y=Math.min(a.y,n-c.height),
a.height=Math.max(n-a.y,c.height),f||(b=a.height/a.width,p<b?(a.height=p*a.width,a.y=n-a.height):a.width=a.height/p)):1<=b.y?(a.width=Math.max(Math.min(q.x-k,d.width),c.width),a.height=Math.max(Math.min(q.y-l,d.height),c.height),f||(b=a.height/a.width,p<b?a.height=p*a.width:a.width=a.height/p)):(a.width=Math.max(Math.min(q.x-k,d.width),c.width),f||(a.height=p*a.width,a.y=l+.5*(n-l-a.height))):0>=b.y?(a.y=Math.max(q.y,n-d.height),a.y=Math.min(a.y,n-c.height),a.height=n-a.y,f||(a.width=a.height/p,a.x=
k+.5*(m-k-a.width))):1<=b.y&&(a.height=Math.max(Math.min(q.y-l,d.height),c.height),f||(a.width=a.height/p,a.x=k+.5*(m-k-a.width)));v.v(q);return a};Ji.prototype.computeMinSize=function(){var a=this.Yb.jh.copy(),b=this.jh;!isNaN(b.width)&&b.width>a.width&&(a.width=b.width);!isNaN(b.height)&&b.height>a.height&&(a.height=b.height);return a};
Ji.prototype.computeMaxSize=function(){var a=this.Yb.yf.copy(),b=this.yf;!isNaN(b.width)&&b.width<a.width&&(a.width=b.width);!isNaN(b.height)&&b.height<a.height&&(a.height=b.height);return a};
Ji.prototype.computeCellSize=function(){var a=new ia(NaN,NaN),b=this.Yb.Y;if(null!==b){var c=b.jI;!isNaN(c.width)&&0<c.width&&(a.width=c.width);!isNaN(c.height)&&0<c.height&&(a.height=c.height)}c=this.Mo;isNaN(a.width)&&!isNaN(c.width)&&0<c.width&&(a.width=c.width);isNaN(a.height)&&!isNaN(c.height)&&0<c.height&&(a.height=c.height);b=this.g;(isNaN(a.width)||isNaN(a.height))&&b&&(c=b.Za.be,null!==c&&c.Hw&&(c=c.SD,isNaN(a.width)&&!isNaN(c.width)&&0<c.width&&(a.width=c.width),isNaN(a.height)&&!isNaN(c.height)&&
0<c.height&&(a.height=c.height)),b=b.lt,null!==b&&b.visible&&this.Hw&&(c=b.Dw,isNaN(a.width)&&!isNaN(c.width)&&0<c.width&&(a.width=c.width),isNaN(a.height)&&!isNaN(c.height)&&0<c.height&&(a.height=c.height)));if(isNaN(a.width)||0===a.width||Infinity===a.width)a.width=1;if(isNaN(a.height)||0===a.height||Infinity===a.height)a.height=1;return a};
v.defineProperty(Ji,{jh:"minSize"},function(){return this.Aj},function(a){v.A(a,ia,Ji,"minSize");if(!this.Aj.K(a)){var b=a.width;isNaN(b)&&(b=0);a=a.height;isNaN(a)&&(a=0);this.Aj.m(b,a)}});v.defineProperty(Ji,{yf:"maxSize"},function(){return this.yj},function(a){v.A(a,ia,Ji,"maxSize");if(!this.yj.K(a)){var b=a.width;isNaN(b)&&(b=Infinity);a=a.height;isNaN(a)&&(a=Infinity);this.yj.m(b,a)}});
v.defineProperty(Ji,{Mo:"cellSize"},function(){return this.gj},function(a){v.A(a,ia,Ji,"cellSize");this.gj.K(a)||this.gj.assign(a)});v.defineProperty(Ji,{Hw:"isGridSnapEnabled"},function(){return this.Rq},function(a){v.j(a,"boolean",Ji,"isGridSnapEnabled");this.Rq=a});v.u(Ji,{oK:"originalDesiredSize"},function(){return this.yv});v.u(Ji,{pK:"originalLocation"},function(){return this.Dy});
function Ri(){0<arguments.length&&v.dd(Ri);Wf.call(this);this.name="Rotating";this.zC=45;this.yC=2;this.Db=null;var a=new X;a.Ab="Ellipse";a.wa=md;a.fill="lightblue";a.stroke="dodgerblue";a.lb=1;a.cursor="pointer";this.Ak=a;this.Sb=null;this.xv=0;this.vC=new y}v.Ia(Ri,Wf);v.ea("RotatingTool",Ri);
Ri.prototype.updateAdornments=function(a){if(!(null===a||a instanceof W)){if(a.hb&&!this.g.ab){var b=a.KE;if(null!==b&&a.canRotate()&&a.V.G()&&a.isVisible()&&b.V.G()&&b.wl()){var c=a.Uo(this.name);if(null===c||c.Yb!==b)c=this.makeAdornment(b);if(null!==c){c.angle=b.nl();var d=null,e=null;b===a||b===a.bc?(d=a.bc,e=a.ef):(d=b,e=Ab);for(var f=d.Ha,e=v.Mb(f.width*e.x+e.offsetX,f.height*e.y+e.offsetY);null!==d&&d!==b;)d.transform.ub(e),d=d.U;var d=e.y,f=Math.max(e.x-b.Ha.width,0),h=v.L();c.location=b.Xa(new L(1,
0,50+f,d),h);v.v(h);v.v(e);a.Wk(this.name,c);return}}}a.$i(this.name)}};Ri.prototype.makeAdornment=function(a){var b=null,b=a.Y.mI;if(null===b){b=new Tg;b.type=Si;b.ef=Ab;var c=this.mt;null!==c&&b.add(c.copy())}else if(Vg(b),b=b.copy(),null===b)return null;b.gc=this.name;b.Yb=a;return b};v.defineProperty(Ri,{mt:"handleArchetype"},function(){return this.Ak},function(a){null!==a&&v.A(a,G,Ri,"handleArchetype");this.Ak=a});v.u(Ri,{handle:"handle"},function(){return this.Sb});
v.defineProperty(Ri,{Yb:"adornedObject"},function(){return this.Db},function(a){null!==a&&v.A(a,G,Ri,"adornedObject");this.Db=a});Ri.prototype.canStart=function(){if(!this.isEnabled)return!1;var a=this.g;return null!==a&&!a.ab&&a.iw&&a.N.left?null!==this.findToolHandleAt(a.yc.ca,this.name)?!0:!1:!1};
Ri.prototype.doActivate=function(){var a=this.g;if(null!==a&&(this.Sb=this.findToolHandleAt(a.yc.ca,this.name),null!==this.Sb)){this.Db=this.Sb.Y.Yb;var b=this.Db.Y,c=b.bc;this.vC=this.Db===b||this.Db===c?c.Xa(b.ef):this.Db.Xa(Ab);this.xv=this.Db.angle;a.Ne=!0;a.kz=!0;this.Qb(this.name);this.qa=!0}};Ri.prototype.doDeactivate=function(){var a=this.g;null!==a&&(this.fk(),this.Db=this.Sb=null,this.qa=a.Ne=!1)};Ri.prototype.doCancel=function(){var a=this.g;null!==a&&(a.kz=!1);this.rotate(this.xv);this.stopTool()};
Ri.prototype.doMouseMove=function(){var a=this.g;this.qa&&null!==a&&(a=this.computeRotate(a.N.ca),this.rotate(a))};Ri.prototype.doMouseUp=function(){var a=this.g;if(this.qa&&null!==a){a.kz=!1;var b=this.computeRotate(a.N.ca);this.rotate(b);a.pc();this.Cf=this.name;a.Ba("PartRotated",this.Db,this.xv)}this.stopTool()};Ri.prototype.rotate=function(a){null!==this.Db&&(this.Db.angle=a)};
Ri.prototype.computeRotate=function(a){a=this.vC.xc(a);var b=this.Db.U;null!==b&&(a-=b.nl(),360<=a?a-=360:0>a&&(a+=360));var b=Math.min(Math.abs(this.AI),180),c=Math.min(Math.abs(this.zI),b/2);!this.g.N.shift&&0<b&&0<c&&(a%b<c?a=Math.floor(a/b)*b:a%b>b-c&&(a=(Math.floor(a/b)+1)*b));360<=a?a-=360:0>a&&(a+=360);return a};v.defineProperty(Ri,{AI:"snapAngleMultiple"},function(){return this.zC},function(a){v.j(a,"number",Ri,"snapAngleMultiple");this.zC=a});
v.defineProperty(Ri,{zI:"snapAngleEpsilon"},function(){return this.yC},function(a){v.j(a,"number",Ri,"snapAngleEpsilon");this.yC=a});v.u(Ri,{nK:"originalAngle"},function(){return this.xv});function Ti(){0<arguments.length&&v.dd(Ti);Wf.call(this);this.name="ClickSelecting"}v.Ia(Ti,Wf);v.ea("ClickSelectingTool",Ti);Ti.prototype.canStart=function(){return!this.isEnabled||null===this.g||this.isBeyondDragSize()?!1:!0};
Ti.prototype.doMouseUp=function(){this.qa&&(this.standardMouseSelect(),!this.standardMouseClick()&&this.g.N.Wi&&this.g.Za.doToolTip());this.stopTool()};function Ui(){0<arguments.length&&v.dd(Ui);Wf.call(this);this.name="Action";this.ln=null}v.Ia(Ui,Wf);v.ea("ActionTool",Ui);
Ui.prototype.canStart=function(){if(!this.isEnabled)return!1;var a=this.g;if(null===a)return!1;var b=a.N,c=a.re(b.ca,function(a){for(;null!==a.U&&!a.Ew;)a=a.U;return a});if(null!==c){if(!c.Ew)return!1;this.ln=c;a.yn=a.re(b.ca,null,null);return!0}return!1};Ui.prototype.doMouseDown=function(){if(this.qa){var a=this.g.N,b=this.ln;null!==b&&(a.ze=b,null!==b.YC&&b.YC(a,b))}else this.canStart()&&this.doActivate()};
Ui.prototype.doMouseMove=function(){if(this.qa){var a=this.g.N,b=this.ln;null!==b&&(a.ze=b,null!==b.ZC&&b.ZC(a,b))}};Ui.prototype.doMouseUp=function(){if(this.qa){var a=this.g,b=a.N,c=this.ln;if(null===c)return;b.ze=c;null!==c.$C&&c.$C(b,c);this.isBeyondDragSize()||ch(c,b,a)}this.stopTool()};Ui.prototype.doCancel=function(){var a=this.g;if(null!==a){var a=a.N,b=this.ln;if(null===b)return;a.ze=b;null!==b.XC&&b.XC(a,b)}this.stopTool()};Ui.prototype.doStop=function(){this.ln=null};
function Vi(){0<arguments.length&&v.dd(Vi);Wf.call(this);this.name="ClickCreating";this.Ll=null;this.NB=!0;this.AB=new y(0,0)}v.Ia(Vi,Wf);v.ea("ClickCreatingTool",Vi);
Vi.prototype.canStart=function(){if(!this.isEnabled||null===this.Yy)return!1;var a=this.g;if(null===a||a.ab||a.wf||!a.Jo||!a.N.left||this.isBeyondDragSize())return!1;if(this.mH){if(1===a.N.We&&(this.AB=a.N.jf.copy()),2!==a.N.We||this.isBeyondDragSize(this.AB))return!1}else if(1!==a.N.We)return!1;return a.Wa!==this&&null!==a.ft(a.N.ca,!0)?!1:!0};Vi.prototype.doMouseUp=function(){var a=this.g;this.qa&&null!==a&&this.insertPart(a.N.ca);this.stopTool()};
Vi.prototype.insertPart=function(a){var b=this.g;if(null===b)return null;var c=this.Yy;if(null===c)return null;this.Qb(this.name);var d=null;c instanceof R?c.Rd()&&(Vg(c),d=c.copy(),null!==d&&b.add(d)):null!==c&&(c=b.ba.copyNodeData(c),v.Ta(c)&&(b.ba.Xk(c),d=b.eh(c)));null!==d&&(d.location=a,b.of&&b.select(d));b.pc();this.Cf=this.name;b.Ba("PartCreated",d);this.fk();return d};
v.defineProperty(Vi,{Yy:"archetypeNodeData"},function(){return this.Ll},function(a){null!==a&&v.A(a,Object,Vi,"archetypeNodeData");this.Ll=a});v.defineProperty(Vi,{mH:"isDoubleClick"},function(){return this.NB},function(a){v.j(a,"boolean",Vi,"isDoubleClick");this.NB=a});function Wi(a,b,c){this.text=a;this.oD=b;this.visible=c}function Xi(){0<arguments.length&&v.dd(Xi);Wf.call(this);this.name="ContextMenu";this.fB=this.Ox=this.cB=null;this.dC=new y;this.Qx=this.Gn=null;Yi(this)}v.Ia(Xi,Wf);
v.ea("ContextMenuTool",Xi);v.wD=!1;v.Vs=null;v.Ws=null;
function Yi(a){a.Gn=new Tg;a.OC=function(){a.stopTool()};if(!1===v.wD){var b=v.createElement("div"),c=v.createElement("div");b.style.cssText="top: 0px;z-index:300;position: fixed;display: none;text-align: center;left: 25%;width: 50%;background-color: #F5F5F5;padding: 16px;border: 16px solid #444;border-radius: 10px;margin-top: 10px";c.style.cssText="z-index:299;position: fixed;display: none;top: 0;left: 0;width: 100%;height: 100%;background-color: black;-moz-opacity: 0.8;opacity:.80;filter: alpha(opacity=80);";var d=
v.createElement("style");window.document.getElementsByTagName("head")[0].appendChild(d);d.sheet.insertRule(".defaultCXul { list-style: none; }",0);d.sheet.insertRule(".defaultCXli {font:700 1.5em Helvetica, Arial, sans-serif;position: relative;min-width: 60px; }",0);d.sheet.insertRule(".defaultCXa {color: #444;display: inline-block;padding: 4px;text-decoration: none;margin: 2px;border: 1px solid gray;border-radius: 10px; }",0);b.addEventListener("contextmenu",function(a){a.preventDefault();return!1},
!1);b.addEventListener("selectstart",function(a){a.preventDefault();return!1},!1);c.addEventListener("contextmenu",function(a){a.preventDefault();return!1},!1);window.document.body&&(window.document.body.appendChild(b),window.document.body.appendChild(c));v.Ws=b;v.Vs=c;v.wD=!0}}Xi.prototype.canStart=function(){if(!this.isEnabled)return!1;var a=this.g;return null===a||this.isBeyondDragSize()||!a.N.right?!1:null!==this.Gn&&a.N.Wi||null!==this.findObjectWithContextMenu()?!0:!1};
Xi.prototype.doStart=function(){var a=this.g;null!==a&&this.dC.set(a.yc.ca)};Xi.prototype.doStop=function(){this.hideDefaultContextMenu();this.hideContextMenu();this.jz=null};
Xi.prototype.findObjectWithContextMenu=function(a){void 0===a&&(a=null);var b=this.g;if(null===b)return null;var c=b.N,d=null;a instanceof E||(d=a instanceof G?a:b.re(c.ca,null,function(a){return!a.layer.Gc}));if(null!==d){for(a=d;null!==a;){if(null!==a.contextMenu)return a;a=a.U}if(null!==this.Gn&&b.N.Wi)return d.Y}else if(null!==b.contextMenu)return b;return null};Xi.prototype.doActivate=function(){};
Xi.prototype.doMouseDown=function(){Wf.prototype.doMouseDown.call(this);null!==this.g&&this.g.Za.Oe.contains(this)&&Zi(this)};Xi.prototype.doMouseUp=function(){Zi(this)};function Zi(a){var b=a.g;if(null!==b)if(!a.qa)a.canStart()&&(ah(a,!0),a.qa||a.stopTool());else if(null!==a.qf){var c=b.re(b.N.ca,null,null);null!==c&&c.tl(a.qf)&&a.standardMouseClick(null,null);a.stopTool();a.canStart()&&(b.Wa=a,a.doMouseUp())}}
function ah(a,b,c){void 0===c&&(c=null);b&&a.standardMouseSelect();a.standardMouseClick()||(a.qa=!0,null===c&&(c=a.findObjectWithContextMenu()),null!==c?(b=c.contextMenu,null!==b?(a.jz=c instanceof G?c:null,a.showContextMenu(b,a.jz)):a.showDefaultContextMenu()):a.showDefaultContextMenu())}Xi.prototype.doMouseMove=function(){this.qa&&this.g.Za.doMouseMove()};
Xi.prototype.showContextMenu=function(a,b){v.A(a,Tg,Xi,"showContextMenu:contextmenu");null!==b&&v.A(b,G,Xi,"showContextMenu:obj");var c=this.g;if(null!==c){a!==this.qf&&this.hideContextMenu();a.Uf="Tool";a.Al=!1;a.scale=1/c.scale;a.gc=this.name;null!==a.placeholder&&(a.placeholder.scale=c.scale);c.add(a);if(null!==b){var c=null,d=b.Wo();null!==d&&(c=d.data);a.Yb=b;a.data=c}else a.data=c.ba;a.tf();this.positionContextMenu(a,b);this.qf=a}};
Xi.prototype.positionContextMenu=function(a){if(null===a.placeholder){var b=this.g;if(null!==b){var c=b.N.ca.copy(),d=a.Ca,e=b.rb;b.N.Wi&&(c.x-=d.width);c.x+d.width>e.right&&(c.x-=d.width+5);c.x<e.x&&(c.x=e.x);c.y+d.height>e.bottom&&(c.y-=d.height+5);c.y<e.y&&(c.y=e.y);a.position=c}}};Xi.prototype.hideContextMenu=function(){var a=this.g;null!==a&&null!==this.qf&&(a.remove(this.qf),null!==this.Ox&&this.Ox.$i(this.qf.gc),this.qf.data=null,this.qf=this.qf.Yb=null,this.standardMouseOver())};
function $i(a){if(null===a.g)return null;a=new I(Wi);a.add(new Wi("Copy",function(a){a.nb.copySelection()},function(a){return a.nb.canCopySelection()}));a.add(new Wi("Cut",function(a){a.nb.cutSelection()},function(a){return a.nb.canCutSelection()}));a.add(new Wi("Delete",function(a){a.nb.deleteSelection()},function(a){return a.nb.canDeleteSelection()}));a.add(new Wi("Paste",function(a){a.nb.pasteSelection(a.N.ca)},function(a){return a.nb.canPasteSelection()}));a.add(new Wi("Select All",function(a){a.nb.selectAll()},
function(a){return a.nb.canSelectAll()}));a.add(new Wi("Undo",function(a){a.nb.undo()},function(a){return a.nb.canUndo()}));a.add(new Wi("Redo",function(a){a.nb.redo()},function(a){return a.nb.canRedo()}));a.add(new Wi("Scroll To Part",function(a){a.nb.scrollToPart()},function(a){return a.nb.canScrollToPart()}));a.add(new Wi("Zoom To Fit",function(a){a.nb.zoomToFit()},function(a){return a.nb.canZoomToFit()}));a.add(new Wi("Reset Zoom",function(a){a.nb.resetZoom()},function(a){return a.nb.canResetZoom()}));
a.add(new Wi("Group Selection",function(a){a.nb.groupSelection()},function(a){return a.nb.canGroupSelection()}));a.add(new Wi("Ungroup Selection",function(a){a.nb.ungroupSelection()},function(a){return a.nb.canUngroupSelection()}));a.add(new Wi("Edit Text",function(a){a.nb.editTextBlock()},function(a){return a.nb.canEditTextBlock()}));return a}
Xi.prototype.showDefaultContextMenu=function(){var a=this.g;if(null!==a){null===this.Qx&&(this.Qx=$i(this));this.Gn!==this.qf&&this.hideContextMenu();v.Ws.innerHTML="";v.Vs.addEventListener("click",this.OC,!1);var b=this,c=v.createElement("ul");c.className="defaultCXul";v.Ws.appendChild(c);c.innerHTML="";for(var d=this.Qx.i;d.next();){var e=d.value,f=e.text,h=e.visible;if("function"===typeof e.oD&&("function"!==typeof h||h(a))){h=v.createElement("li");h.className="defaultCXli";var k=v.createElement("a");
k.className="defaultCXa";k.href="#";k.wF=e.oD;k.addEventListener("click",function(c){this.wF(a);b.stopTool();c.preventDefault();return!1},!1);k.textContent=f;h.appendChild(k);c.appendChild(h)}}v.Ws.style.display="block";v.Vs.style.display="block";this.qf=this.Gn}};Xi.prototype.hideDefaultContextMenu=function(){null!==this.qf&&this.qf===this.Gn&&(v.Ws.style.display="none",v.Vs.style.display="none",v.Vs.removeEventListener("click",this.OC,!1),this.qf=null)};
v.defineProperty(Xi,{qf:"currentContextMenu"},function(){return this.cB},function(a){null!==a&&v.A(a,Tg,Xi,"currentContextMenu");this.cB=a;this.Ox=null!==a?a.Nf:null});v.defineProperty(Xi,{jz:"currentObject"},function(){return this.fB},function(a){null!==a&&v.A(a,G,Xi,"currentObject");this.fB=a});v.u(Xi,{iK:"mouseDownPoint"},function(){return this.dC});
function aj(){0<arguments.length&&v.dd(aj);Wf.call(this);this.name="DragSelecting";this.Hn=175;this.SB=!1;var a=new R;a.Uf="Tool";a.Al=!1;var b=new X;b.name="SHAPE";b.Ab="Rectangle";b.fill=null;b.stroke="magenta";a.add(b);this.Nl=a}v.Ia(aj,Wf);v.ea("DragSelectingTool",aj);
aj.prototype.canStart=function(){if(!this.isEnabled)return!1;var a=this.g;if(null===a||!a.of)return!1;var b=a.N;return!b.left||a.Wa!==this&&(!this.isBeyondDragSize()||b.timestamp-a.yc.timestamp<this.xD||null!==a.ft(b.ca,!0))?!1:!0};aj.prototype.doActivate=function(){var a=this.g;null!==a&&(this.qa=!0,a.Ne=!0,a.tb=!0,a.add(this.$g),this.doMouseMove())};aj.prototype.doDeactivate=function(){var a=this.g;null!==a&&(a.remove(this.$g),a.tb=!1,this.qa=a.Ne=!1)};
aj.prototype.doMouseMove=function(){if(null!==this.g&&this.qa&&null!==this.$g){var a=this.computeBoxBounds(),b=this.$g.de("SHAPE");null===b&&(b=this.$g.Ye());b.wa=a.size;this.$g.position=a.position}};aj.prototype.doMouseUp=function(){if(this.qa){var a=this.g;a.remove(this.$g);try{a.Zb="wait",this.selectInRect(this.computeBoxBounds())}finally{a.Zb=""}}this.stopTool()};aj.prototype.computeBoxBounds=function(){var a=this.g;return null===a?new B(0,0,0,0):new B(a.yc.ca,a.N.ca)};
aj.prototype.selectInRect=function(a){var b=this.g;if(null!==b){var c=b.N;b.Ba("ChangingSelection");a=b.Xj(a,null,function(a){return a instanceof R?a.canSelect():!1},this.tH);if(v.ak?c.Et:c.control)if(c.shift)for(a=a.i;a.next();)c=a.value,c.hb&&(c.hb=!1);else for(a=a.i;a.next();)c=a.value,c.hb=!c.hb;else{if(!c.shift){for(var c=new I(R),d=b.selection.i;d.next();){var e=d.value;a.contains(e)||c.add(e)}for(c=c.i;c.next();)c.value.hb=!1}for(a=a.i;a.next();)c=a.value,c.hb||(c.hb=!0)}b.Ba("ChangedSelection")}};
v.defineProperty(aj,{xD:"delay"},function(){return this.Hn},function(a){v.j(a,"number",aj,"delay");this.Hn=a});v.defineProperty(aj,{tH:"isPartialInclusion"},function(){return this.SB},function(a){v.j(a,"boolean",aj,"isPartialInclusion");this.SB=a});v.defineProperty(aj,{$g:"box"},function(){return this.Nl},function(a){null!==a&&v.A(a,R,aj,"box");this.Nl=a});
function bj(){0<arguments.length&&v.dd(bj);Wf.call(this);this.name="Panning";this.Ey=new y;this.fj=!1;var a=this;this.CC=function(){window.document.removeEventListener("scroll",a.CC,!1);a.stopTool()}}v.Ia(bj,Wf);v.ea("PanningTool",bj);bj.prototype.canStart=function(){if(!this.isEnabled)return!1;var a=this.g;return null===a||!a.oe&&!a.pe||!a.N.left||a.Wa!==this&&!this.isBeyondDragSize()?!1:!0};
bj.prototype.doActivate=function(){var a=this.g;null!==a&&(this.fj?(a.N.bubbles=!0,window.document.addEventListener("scroll",this.CC,!1)):(a.Zb="move",a.Ne=!0,this.Ey=a.position.copy()),this.qa=!0)};bj.prototype.doDeactivate=function(){var a=this.g;null!==a&&(a.Zb="",this.qa=a.Ne=!1)};bj.prototype.doCancel=function(){var a=this.g;null!==a&&(a.position=this.Ey,a.Ne=!1);this.stopTool()};bj.prototype.doMouseMove=function(){this.move()};bj.prototype.doMouseUp=function(){this.move();this.stopTool()};
bj.prototype.move=function(){var a=this.g;if(this.qa&&a)if(this.fj)a.N.bubbles=!0;else{var b=a.position,c=a.yc.ca,d=a.N.ca,e=b.x+c.x-d.x,c=b.y+c.y-d.y;a.oe||(e=b.x);a.pe||(c=b.y);a.position=new y(e,c)}};v.defineProperty(bj,{bubbles:"bubbles"},function(){return this.fj},function(a){v.j(a,"boolean",bj,"bubbles");this.fj=a});v.u(bj,{sK:"originalPosition"},function(){return this.Ey});
function cj(){0<arguments.length&&v.dd(cj);Wf.call(this);this.name="TextEditing";this.iB=this.Ny=this.GC=null;this.xo=dj;this.Tk=null;this.eb=ej;this.Qk=null;this.aC=1;this.wC=!0;var a=v.createElement("textarea");a.MB=!0;this.pB=a;a.addEventListener("input",function(){var a=this.textEditingTool;if(null!==a&&void 0!==a&&null!==a.Ae){var c=a.GC;c.text=this.value;var d=this.GI;fj(c,a.Ae.jv,Infinity);this.style.width=20+c.Ca.width*d+"px";this.style.height=10+c.Ca.height*d+"px";this.rows=c.BH}},!1);a.addEventListener("keydown",
function(a){var c=a.which,d=this.textEditingTool;null!==d&&void 0!==d&&null!==d.Ae&&(13===c?(!1===d.Ae.Jw&&a.preventDefault(),d.acceptText(gj)):9===c?(d.acceptText(hj),a.preventDefault()):27===c&&(d.doCancel(),null!==d.g&&d.g.focus()))},!1);a.addEventListener("focus",function(a){var c=this.textEditingTool;null!==c&&void 0!==c&&c.doFocus(a)},!1);a.addEventListener("blur",function(a){var c=this.textEditingTool;null!==c&&void 0!==c&&c.doBlur(a)},!1)}v.ea("TextEditingTool",cj);v.Ia(cj,Wf);var ij;
cj.LostFocus=ij=v.p(cj,"LostFocus",0);var jj;cj.MouseDown=jj=v.p(cj,"MouseDown",1);var hj;cj.Tab=hj=v.p(cj,"Tab",2);var gj;cj.Enter=gj=v.p(cj,"Enter",3);cj.SingleClick=v.p(cj,"SingleClick",0);var dj;cj.SingleClickSelected=dj=v.p(cj,"SingleClickSelected",1);var ej=v.p(cj,"StateNone",0),kj=v.p(cj,"StateActive",1),lj=v.p(cj,"StateEditing",2),mj=v.p(cj,"StateEditing2",3),nj=v.p(cj,"StateValidating",4),oj=v.p(cj,"StateValidated",5);
v.defineProperty(cj,{Ae:"textBlock"},function(){return this.Ny},function(a){null!==a&&v.A(a,$g,cj,"textBlock");this.Ny=a});v.defineProperty(cj,{rf:"currentTextEditor"},function(){return this.iB},function(a){this.iB=a});v.defineProperty(cj,{BG:"defaultTextEditor"},function(){return this.pB},function(a){v.A(a,Element,cj,"defaultTextEditor");this.pB=a});v.defineProperty(cj,{pA:"starting"},function(){return this.xo},function(a){v.pb(a,cj,cj,"starting");this.xo=a});
cj.prototype.canStart=function(){if(!this.isEnabled)return!1;var a=this.g;if(null===a||a.ab||!a.N.left||this.isBeyondDragSize())return!1;a=a.re(a.N.ca,null,function(a){return a instanceof $g});if(null===a||!a.lz||!a.Y.canEdit())return!1;a=a.Y;return null===a||this.pA===dj&&!a.hb?!1:!0};cj.prototype.doStart=function(){this.qa||null===this.Ae||this.doActivate()};
cj.prototype.doActivate=function(){if(!this.qa){var a=this.g;if(null!==a){var b=this.Ae;null===b&&(b=a.re(a.N.ca,function(a){return a instanceof $g?a:null}));if(null!==b&&(this.Ae=b,null!==b.Y)){this.qa=!0;this.eb=kj;var c=this.BG,d=!1;null!==b.aF&&(c=b.aF);null===c||c.MB||(d=!0);this.GC=this.Ae.copy();var e=new B(this.Ae.Xa(tb),this.Ae.Xa(Fb));a.rI(e);if(c.MB){var f=b.Xa(Ab),h=a.position,k=a.scale,l=b.Ti()*k;l<this.rE&&(l=this.rE);var e=b.Ha.width*l,m=b.Ha.height*l,n=(f.x-h.x)*k,f=(f.y-h.y)*k;c.value=
b.text;a.hl.style.font=b.font;c.style.font="inherit";c.style.fontSize=100*l+"%";c.style.lineHeight="normal";c.style.width=e+6+"px";c.style.height=m+2+"px";c.style.left=(n-e/2|0)-1+"px";c.style.top=(f-m/2|0)-1+"px";c.style.textAlign=b.textAlign;c.style.margin="0";c.style.padding="1px";c.style.border="0";c.style.outline="none";c.style["white-space"]="pre-wrap";c.style.overflow="hidden"}a.hl.appendChild(c);c.style.position="absolute";c.style.zIndex=100;c.className="start";c.textEditingTool=this;c.GI=
l;if(d&&"function"===typeof c.onActivate)c.onActivate();this.rf=c;"function"===typeof c.focus&&c.focus();"function"===typeof c.select&&this.iA&&(c.select(),c.setSelectionRange(0,9999))}}}};cj.prototype.doCancel=function(){null!==this.Qk&&(this.rf.style.border=this.Qk,this.Qk=null);this.stopTool()};cj.prototype.doMouseUp=function(){!this.qa&&this.canStart()&&this.doActivate()};cj.prototype.doMouseDown=function(){this.qa&&this.acceptText(jj)};
cj.prototype.acceptText=function(a){switch(a){case jj:if(this.eb===oj||this.eb===mj)"function"===typeof this.rf.focus&&this.rf.focus();else if(this.eb===kj||this.eb===lj)this.eb=nj,zj(this);break;case ij:case gj:case hj:if(gj===a&&!0===this.Ny.Jw)break;if(this.eb===kj||this.eb===lj)this.eb=nj,zj(this)}};
function zj(a){if(null!==a.Ae&&null!==a.rf){var b=a.Ae,c=a.Ae.text,d=a.rf.value,e="",e="function"===typeof d?d():d;if(!a.isValidText(a.Ae,c,e)){a.eb=lj;null!==b.mz&&b.mz(a,c,e);null===a.Qk&&(a.Qk=a.rf.style.border,a.rf.style.border="3px solid red");"function"===typeof a.rf.focus&&a.rf.focus();return}a.Qb(a.name);a.eb=oj;c!==e&&(a.Ae.text=e);a.Cf=a.name;b=a.g;null!==b&&b.Ba("TextEdited",a.Ae,c);a.fk();a.stopTool();null!==b&&b.focus()}null!==a.Qk&&(a.rf.style.border=a.Qk,a.Qk=null)}
cj.prototype.doDeactivate=function(){var a=this.g;if(null!==a){this.eb=ej;this.Ae=null;if(null!==this.rf){var b=this.rf;if("function"===typeof b.onDeactivate)b.onDeactivate();null!==b&&a.hl.removeChild(b)}this.qa=!1}};cj.prototype.doFocus=function(){var a=this.rf;null!==a&&(this.eb===kj?this.eb=lj:this.eb===oj?this.eb=mj:this.eb===mj&&(this.eb=lj),"function"===typeof a.select&&this.iA&&(a.select(),a.setSelectionRange(0,9999)))};
cj.prototype.doBlur=function(){var a=this.rf;null!==a&&("function"===typeof a.focus&&a.focus(),"function"===typeof a.select&&this.iA&&(a.select(),a.setSelectionRange(0,9999)))};cj.prototype.isValidText=function(a,b,c){v.A(a,$g,cj,"isValidText:textblock");var d=this.sA;if(null!==d&&!d(a,b,c))return!1;d=a.sA;return null===d||d(a,b,c)?!0:!1};v.defineProperty(cj,{sA:"textValidation"},function(){return this.Tk},function(a){null!==a&&v.j(a,"function",cj,"textValidation");this.Tk=a});
v.defineProperty(cj,{rE:"minimumEditorScale"},function(){return this.aC},function(a){null!==a&&v.j(a,"number",cj,"minimumEditorScale");this.aC=a});v.defineProperty(cj,{iA:"selectsTextOnActivate"},function(){return this.wC},function(a){null!==a&&v.j(a,"boolean",cj,"selectsTextOnActivate");this.wC=a});
function Rg(){Wf.call(this);this.name="ToolManager";this.BF=new I(Wf);this.CF=new I(Wf);this.DF=new I(Wf);this.EB=this.FB=850;this.tB=(new ia(2,2)).Ea();this.PC=5E3;this.eC=eh;this.CB=Aj;this.Iu=this.jB=null;this.vm=-1}v.Ia(Rg,Wf);v.ea("ToolManager",Rg);var eh;Rg.WheelScroll=eh=v.p(Rg,"WheelScroll",0);var dh;Rg.WheelZoom=dh=v.p(Rg,"WheelZoom",1);Rg.WheelNone=v.p(Rg,"WheelNone",2);var Aj;Rg.GestureZoom=Aj=v.p(Rg,"GestureZoom",3);var Bj;Rg.GestureCancel=Bj=v.p(Rg,"GestureCancel",4);var Cj;
Rg.GestureNone=Cj=v.p(Rg,"GestureNone",5);v.defineProperty(Rg,{Ht:"mouseWheelBehavior"},function(){return this.eC},function(a){v.pb(a,Rg,Rg,"mouseWheelBehavior");this.eC=a});v.defineProperty(Rg,{Zo:"gestureBehavior"},function(){return this.CB},function(a){v.pb(a,Rg,Rg,"gestureBehavior");this.CB=a});
Rg.prototype.initializeStandardTools=function(){this.UF=new Ui;this.yE=new qh;this.EH=new Ci;this.JE=new Ji;this.oI=new Ri;this.nE=new ti;this.be=new Xg;this.GG=new aj;this.YH=new bj;this.dz=new Xi;this.rA=new cj;this.jG=new Vi;this.kG=new Ti};Rg.prototype.updateAdornments=function(a){var b=this.dh;if(null!==b&&this.Iu===a){var c=b.Yb;(null!==a?c.Y===a:null===c)?this.showToolTip(b,c):this.hideToolTip()}};
Rg.prototype.doMouseDown=function(){var a=this.g;if(null!==a){var b=a.N;b.Wi&&this.Zo===Bj&&(b.bubbles=!1);if(b.vt){if(this.Zo===Cj){b.bubbles=!0;return}if(this.Zo===Bj)return;if(a.Wa.canStartMultiTouch()){a.Wa.standardPinchZoomStart();return}}var c=a.la;c.az&&0!==c.sh&&v.trace("WARNING: In ToolManager.doMouseDown: UndoManager.transactionLevel is not zero");for(var c=this.Oe.length,d=0;d<c;d++){var e=this.Oe.da(d);null===e.g&&e.Mc(this.g);if(e.canStart()){a.doFocus();a.Wa=e;a.Wa===e&&(e.qa||e.doActivate(),
e.doMouseDown());return}}1===a.N.button&&(this.Ht===eh?this.Ht=dh:this.Ht===dh&&(this.Ht=eh));this.doActivate();this.standardWaitAfter(this.VD,b)}};
Rg.prototype.doMouseMove=function(){var a=this.g;if(null!==a){var b=a.N;if(b.vt){if(this.Zo===Cj){b.bubbles=!0;return}if(this.Zo===Bj)return;if(a.Wa.canStartMultiTouch()){a.Wa.standardPinchZoomMove();return}}if(this.qa)for(var c=this.Wf.length,d=0;d<c;d++){var e=this.Wf.da(d);null===e.g&&e.Mc(this.g);if(e.canStart()){a.doFocus();a.Wa=e;a.Wa===e&&(e.qa||e.doActivate(),e.doMouseMove());return}}Dj(this,a);null===b.event||"mousemove"!==b.event.type&&b.event.cancelable||(b.bubbles=!0)}};
function Dj(a,b){a.standardMouseOver();a.isBeyondDragSize()&&a.standardWaitAfter(a.qa?a.VD:a.dH,b.N)}Rg.prototype.doCurrentObjectChanged=function(a,b){var c=this.dh;null===c||null!==b&&(b===c||b.tl(c))||this.hideToolTip()};Rg.prototype.doWaitAfter=function(a){var b=this.g;null!==b&&b.zb&&(this.doMouseHover(),this.qa||this.doToolTip(),a.Wi&&!b.N.zc&&(a=a.copy(),a.button=2,a.buttons=2,b.N=a,b.xs=!0,b.doMouseUp()))};
Rg.prototype.doMouseHover=function(){var a=this.g;if(null!==a){var b=a.N;null===b.ze&&(b.ze=a.re(b.ca,null,null));var c=b.ze;if(null!==c)for(b.zc=!1;null!==c;){a=this.qa?c.Nz:c.Oz;if(null!==a&&(a(b,c),b.zc))break;c=c.U}else a=this.qa?a.Nz:a.Oz,null!==a&&a(b)}};
Rg.prototype.doToolTip=function(){var a=this.g;if(null!==a){var b=a.N;null===b.ze&&(b.ze=a.re(b.ca,null,null));b=b.ze;if(null!==b){if(b!==this.dh&&!b.tl(this.dh)){for(;null!==b;){a=b.uA;if(null!==a){this.showToolTip(a,b);return}b=b.U}this.hideToolTip()}}else a=a.uA,null!==a?this.showToolTip(a,null):this.hideToolTip()}};
Rg.prototype.showToolTip=function(a,b){v.A(a,Tg,Rg,"showToolTip:tooltip");null!==b&&v.A(b,G,Rg,"showToolTip:obj");var c=this.g;if(null!==c){a!==this.dh&&this.hideToolTip();a.Uf="Tool";a.Al=!1;a.scale=1/c.scale;a.gc="ToolTip";null!==a.placeholder&&(a.placeholder.scale=c.scale);c.add(a);if(null!==b){var c=null,d=b.Wo();null!==d&&(c=d.data);a.Yb=b;a.data=c}else a.data=c.ba;a.tf();this.positionToolTip(a,b);this.dh=a;-1!==this.vm&&(v.clearTimeout(this.vm),this.vm=-1);c=this.LI;if(0<c&&Infinity!==c){var e=
this;this.vm=v.setTimeout(function(){e.hideToolTip()},c)}}};Rg.prototype.positionToolTip=function(a){if(null===a.placeholder){var b=this.g;if(null!==b){var c=b.N.ca.copy(),d=a.Ca,e=b.rb;b.N.Wi&&(c.x-=d.width);c.x+d.width>e.right&&(c.x-=d.width+5);c.x<e.x&&(c.x=e.x);c.y=c.y+20+d.height>e.bottom?c.y-(d.height+5):c.y+20;c.y<e.y&&(c.y=e.y);a.position=c}}};
Rg.prototype.hideToolTip=function(){-1!==this.vm&&(v.clearTimeout(this.vm),this.vm=-1);var a=this.g;null!==a&&null!==this.dh&&(a.remove(this.dh),null!==this.Iu&&this.Iu.$i(this.dh.gc),this.dh.data=null,this.dh=this.dh.Yb=null)};v.defineProperty(Rg,{dh:"currentToolTip"},function(){return this.jB},function(a){null!==a&&v.A(a,Tg,Rg,"currentToolTip");this.jB=a;this.Iu=null!==a?a.Nf:null});
Rg.prototype.doMouseUp=function(){this.cancelWaitAfter();var a=this.g;if(null!==a){if(this.qa)for(var b=this.Xf.length,c=0;c<b;c++){var d=this.Xf.da(c);null===d.g&&d.Mc(this.g);if(d.canStart()){a.doFocus();a.Wa=d;a.Wa===d&&(d.qa||d.doActivate(),d.doMouseUp());return}}a.doFocus();this.doDeactivate()}};Rg.prototype.doMouseWheel=function(){this.standardMouseWheel()};Rg.prototype.doKeyDown=function(){var a=this.g;null!==a&&a.nb.doKeyDown()};Rg.prototype.doKeyUp=function(){var a=this.g;null!==a&&a.nb.doKeyUp()};
Rg.prototype.doCancel=function(){null!==hh&&hh.doCancel();Wf.prototype.doCancel.call(this)};Rg.prototype.findTool=function(a){v.j(a,"string",Rg,"findTool:name");for(var b=this.Oe.length,c=0;c<b;c++){var d=this.Oe.da(c);if(d.name===a)return d}b=this.Wf.length;for(c=0;c<b;c++)if(d=this.Wf.da(c),d.name===a)return d;b=this.Xf.length;for(c=0;c<b;c++)if(d=this.Xf.da(c),d.name===a)return d;return null};
Rg.prototype.replaceTool=function(a,b){v.j(a,"string",Rg,"replaceTool:name");null!==b&&(v.A(b,Wf,Rg,"replaceTool:newtool"),b.g&&b.g!==this.g&&v.k("Cannot share tools between Diagrams: "+b.toString()),b.Mc(this.g));for(var c=this.Oe.length,d=0;d<c;d++){var e=this.Oe.da(d);if(e.name===a)return null!==b?this.Oe.Ig(d,b):this.Oe.Vc(d),e}c=this.Wf.length;for(d=0;d<c;d++)if(e=this.Wf.da(d),e.name===a)return null!==b?this.Wf.Ig(d,b):this.Wf.Vc(d),e;c=this.Xf.length;for(d=0;d<c;d++)if(e=this.Xf.da(d),e.name===
a)return null!==b?this.Xf.Ig(d,b):this.Xf.Vc(d),e;return null};function Ej(a,b,c,d){v.j(b,"string",Rg,"replaceStandardTool:name");v.A(d,I,Rg,"replaceStandardTool:list");null!==c&&(v.A(c,Wf,Rg,"replaceStandardTool:newtool"),c.g&&c.g!==a.g&&v.k("Cannot share tools between Diagrams: "+c.toString()),c.name=b,c.Mc(a.g));a.findTool(b)?a.replaceTool(b,c):null!==c&&d.add(c)}v.u(Rg,{Oe:"mouseDownTools"},function(){return this.BF});v.u(Rg,{Wf:"mouseMoveTools"},function(){return this.CF});
v.u(Rg,{Xf:"mouseUpTools"},function(){return this.DF});v.defineProperty(Rg,{dH:"hoverDelay"},function(){return this.FB},function(a){v.j(a,"number",Rg,"hoverDelay");this.FB=a});v.defineProperty(Rg,{VD:"holdDelay"},function(){return this.EB},function(a){v.j(a,"number",Rg,"holdDelay");this.EB=a});v.defineProperty(Rg,{HG:"dragSize"},function(){return this.tB},function(a){v.A(a,ia,Rg,"dragSize");this.tB=a.R()});
v.defineProperty(Rg,{LI:"toolTipDuration"},function(){return this.PC},function(a){v.j(a,"number",Rg,"toolTipDuration");this.PC=a});v.defineProperty(Rg,{UF:"actionTool"},function(){return this.findTool("Action")},function(a){Ej(this,"Action",a,this.Oe)});v.defineProperty(Rg,{yE:"relinkingTool"},function(){return this.findTool("Relinking")},function(a){Ej(this,"Relinking",a,this.Oe)});
v.defineProperty(Rg,{EH:"linkReshapingTool"},function(){return this.findTool("LinkReshaping")},function(a){Ej(this,"LinkReshaping",a,this.Oe)});v.defineProperty(Rg,{JE:"resizingTool"},function(){return this.findTool("Resizing")},function(a){Ej(this,"Resizing",a,this.Oe)});v.defineProperty(Rg,{oI:"rotatingTool"},function(){return this.findTool("Rotating")},function(a){Ej(this,"Rotating",a,this.Oe)});
v.defineProperty(Rg,{nE:"linkingTool"},function(){return this.findTool("Linking")},function(a){Ej(this,"Linking",a,this.Wf)});v.defineProperty(Rg,{be:"draggingTool"},function(){return this.findTool("Dragging")},function(a){Ej(this,"Dragging",a,this.Wf)});v.defineProperty(Rg,{GG:"dragSelectingTool"},function(){return this.findTool("DragSelecting")},function(a){Ej(this,"DragSelecting",a,this.Wf)});
v.defineProperty(Rg,{YH:"panningTool"},function(){return this.findTool("Panning")},function(a){Ej(this,"Panning",a,this.Wf)});v.defineProperty(Rg,{dz:"contextMenuTool"},function(){return this.findTool("ContextMenu")},function(a){Ej(this,"ContextMenu",a,this.Xf)});v.defineProperty(Rg,{rA:"textEditingTool"},function(){return this.findTool("TextEditing")},function(a){Ej(this,"TextEditing",a,this.Xf)});
v.defineProperty(Rg,{jG:"clickCreatingTool"},function(){return this.findTool("ClickCreating")},function(a){Ej(this,"ClickCreating",a,this.Xf)});v.defineProperty(Rg,{kG:"clickSelectingTool"},function(){return this.findTool("ClickSelecting")},function(a){Ej(this,"ClickSelecting",a,this.Xf)});
function ug(){this.kB=Fj;this.vq=this.wq=this.S=null;this.nn=this.xq=this.yq=0;this.Vp=this.uc=this.Wn=this.qj=!1;this.rj=this.Re=!0;this.Hu=this.Gu=this.eB=null;this.dB=0;this.xo=null;this.tu=new J("string");this.Yx=600;this.HF=new y(0,0);this.SA=this.RA=this.TC=!1;this.gm=new na(G,Gj)}v.ea("AnimationManager",ug);ug.prototype.Mc=function(a){this.S=a};function Fj(a,b,c,d){a/=d/2;return 1>a?c/2*a*a+b:-c/2*(--a*(a-2)-1)+b}
v.defineProperty(ug,{pA:"starting"},function(){return this.xo},function(a){this.xo!==a&&(null!==a&&v.j(a,"function",ug,"starting"),this.xo=a)});v.u(ug,{qJ:"animationReasons"},function(){return this.tu});ug.prototype.prepareAutomaticAnimation=ug.prototype.Zm=function(a){if(this.Re&&(this.rj||this.S.Sm)){this.tu.add(a);var b=this.pA;if(null===b||b(this,a))this.qj&&this.ai(),this.uc=!0,this.Vp=!1}};
function Hj(a){if(a.Re&&(a.tu.clear(),a.uc&&0===a.nn)){var b=+new Date;a.nn=b;requestAnimationFrame(function(){!1===a.uc||a.qj||a.nn!==b||(a.S.Lj=1,Ij(a.S),a.uc=!1,a.S.Ba("AnimationStarting"),Jj(a,b))})}}
function Kj(a,b,c,d,e,f){if(!(!a.uc||"position"===c&&d.K(e)||b instanceof R&&!b.YD)){var h=a.gm;if(h.contains(b)){a=h.ja(b);var k=a.start,l=a.end;void 0===k[c]&&(k[c]=Lj(d));a.hz&&void 0!==l[c]?a.nz[c]=Lj(e):(f||(a.nz[c]=Lj(e)),l[c]=Lj(e))}else k=new ta,l=new ta,k[c]=Lj(d),l[c]=Lj(e),c=l,d=k.position,d instanceof y&&!d.G()&&a.tu.contains("Expand SubGraph")&&d.assign(c.position),h.add(b,new Gj(k,l,f))}}function Lj(a){return a instanceof y?a.copy():a instanceof ia?a.copy():a}
function Jj(a,b){var c;function d(){if(!1!==f.qj&&f.nn===b){var a=+new Date,c=a>s?m:a-r;Mj(f);Nj(f,e,q,h,c,m);f.Gu&&f.Gu();Wh(e);Oj(f);a>s?Pj(f):requestAnimationFrame(d)}}void 0===c&&(c=new ta);var e=a.S;if(null!==e){a.qj=!0;var f=a,h=c.LJ||a.kB,k=c.lK||null,l=c.mK||null,m=c.duration||a.Yx,n=a.HF;for(c=a.gm.i;c.next();){var p=c.value.start.position;p instanceof y&&(p.G()||p.assign(n))}a.eB=h;a.Gu=k;a.Hu=l;a.dB=m;a.hB=a.gm;var q=a.hB;for(c=q.i;c.next();)k=c.value.end,k["position:placeholder"]&&(l=
k["position:placeholder"],n=l.Xa(tb),n.x+=l.padding.left,n.y+=l.padding.top,k["position:placeholder"]=n);Mj(a);Nj(a,e,q,h,0,m);Wh(a.S);Oj(a);var r=+new Date,s=r+m;f.nn===b&&requestAnimationFrame(function(){d()})}}
var Qj={opacity:function(a,b,c,d,e,f){a.opacity=d(e,b,c-b,f)},position:function(a,b,c,d,e,f){e!==f?a.mx(d(e,b.x,c.x-b.x,f),d(e,b.y,c.y-b.y,f)):a.position=new y(d(e,b.x,c.x-b.x,f),d(e,b.y,c.y-b.y,f))},"position:node":function(a,b,c,d,e,f){var h=a.V,k=c.V;c=k.x+k.width/2-h.width/2;h=k.y+k.height/2-h.height/2;e!==f?a.mx(d(e,b.x,c-b.x,f),d(e,b.y,h-b.y,f)):a.position=new y(d(e,b.x,c-b.x,f),d(e,b.y,h-b.y,f))},"position:placeholder":function(a,b,c,d,e,f){e!==f?a.mx(d(e,b.x,c.x-b.x,f),d(e,b.y,c.y-b.y,f)):
a.position=new y(d(e,b.x,c.x-b.x,f),d(e,b.y,c.y-b.y,f))},scale:function(a,b,c,d,e,f){a.scale=d(e,b,c-b,f)},visible:function(a,b,c,d,e,f){a.visible=e!==f?b:c}};function Mj(a){if(!a.Wn){var b=a.S;a.TC=b.tb;a.RA=b.xe;a.SA=b.au;b.tb=!0;b.xe=!0;b.au=!0;a.Wn=!0}}function Oj(a){var b=a.S;b.tb=a.TC;b.xe=a.RA;b.au=a.SA;a.Wn=!1}
function Nj(a,b,c,d,e,f){for(c=c.i;c.next();){var h=c.key,k=c.value,l=k.start,k=k.end,m;for(m in k)if(("position"!==m||!k["position:placeholder"]&&!k["position:node"])&&void 0!==Qj[m])Qj[m](h,l[m],k[m],d,e,f)}d=b.Az;b.Az=!0;m=a.kB;0!==a.yq&&0!==a.xq&&(c=a.yq,b.Tb=m(e,c,a.xq-c,f));null!==a.wq&&null!==a.vq&&(c=a.wq,a=a.vq,b.kb=new y(m(e,c.x,a.x-c.x,f),m(e,c.y,a.y-c.y,f)));b.Az=d}ug.prototype.stopAnimation=ug.prototype.ai=function(){!0===this.uc&&(this.uc=!1,this.Vp&&this.S.ve());this.qj&&this.Re&&Pj(this)};
function Pj(a){a.qj=!1;a.nn=0;a.Vp=!1;a.wq=null;a.vq=null;a.yq=0;a.xq=0;Mj(a);for(var b=a.S,c=a.eB,d=a.dB,e=a.hB.i;e.next();){var f=e.key,h=e.value,k=h.start,l=h.end,m=h.nz,n;for(n in l)if(void 0!==Qj[n]){var p=n;!h.hz||"position:node"!==p&&"position:placeholder"!==p||(p="position");Qj[p](f,k[n],void 0!==m[n]?m[n]:h.hz?k[n]:l[n],c,d,d)}h.$w&&f.od(!1)}for(c=a.S.links;c.next();)d=c.value,null!==d.qo&&(d.points=d.qo,d.qo=null);b.Pw.clear();b.Lj=null;b.pc();b.Vf();Rj(b);Oj(a);a.gm=new na(G,Gj);a.Hu&&
a.Hu();a.Hu=null;a.Gu=null;b.Ba("AnimationFinished");b.ve()}function Sj(a,b,c){var d=b.V,e=c.V,f=null;c instanceof V&&(f=c.placeholder);null!==f?(d=f.Xa(tb),d.x+=f.padding.left,d.y+=f.padding.top,Kj(a,b,"position",d,b.position,!1)):Kj(a,b,"position",new y(e.x+e.width/2-d.width/2,e.y+e.height/2-d.height/2),b.position,!1);Kj(a,b,"scale",.01,b.scale,!1);if(b instanceof V)for(b=b.Ic;b.next();)f=b.value,f instanceof S&&Sj(a,f,c)}
function Tj(a,b,c){if(b.isVisible()){var d=null;c instanceof V&&(d=c.placeholder);null!==d?Kj(a,b,"position:placeholder",b.position,d,!0):Kj(a,b,"position:node",b.position,c,!0);Kj(a,b,"scale",b.scale,.01,!0);a.uc&&(d=a.gm,d.contains(b)&&(d.ja(b).$w=!0));if(b instanceof V)for(b=b.Ic;b.next();)d=b.value,d instanceof S&&Tj(a,d,c)}}function Uj(a,b,c){a.uc&&(null===a.wq&&b.G()&&null===a.vq&&(a.wq=b.copy()),a.vq=c.copy(),a.Vp=!0)}
function Vj(a,b,c){a.uc&&a.S.Sm&&(0===a.yq&&0===a.xq&&(a.yq=b),a.xq=c,a.Vp=!0)}v.defineProperty(ug,{isEnabled:"isEnabled"},function(){return this.Re},function(a){v.j(a,"boolean",ug,"isEnabled");this.Re=a});v.defineProperty(ug,{duration:"duration"},function(){return this.Yx},function(a){v.j(a,"number",ug,"duration");1>a&&v.va(a,">= 1",ug,"duration");this.Yx=a});v.u(ug,{df:"isAnimating"},function(){return this.qj});v.u(ug,{uH:"isTicking"},function(){return this.Wn});
v.defineProperty(ug,{eE:"isInitial"},function(){return this.rj},function(a){v.j(a,"boolean",ug,"isInitial");this.rj=a});function Gj(a,b,c){this.start=a;this.end=b;this.nz=new ta;this.hz=c;this.$w=!1}function Vf(){0<arguments.length&&v.dd(Vf);v.ec(this);this.S=null;this.wb=new I(R);this.Ob="";this.Rc=1;this.sy=!1;this.Sk=this.Ry=this.qk=this.pk=this.ok=this.nk=this.lk=this.mk=this.kk=this.sk=this.jk=this.rk=this.ik=this.hk=!0;this.my=!1;this.Av=[]}v.ea("Layer",Vf);
Vf.prototype.Mc=function(a){this.S=a};
Vf.prototype.toString=function(a){void 0===a&&(a=0);var b='Layer "'+this.name+'"';if(0>=a)return b;for(var c=0,d=0,e=0,f=0,h=0,k=this.wb.i;k.next();){var l=k.value;l instanceof V?e++:l instanceof S?d++:l instanceof W?f++:l instanceof Tg?h++:c++}k="";0<c&&(k+=c+" Parts ");0<d&&(k+=d+" Nodes ");0<e&&(k+=e+" Groups ");0<f&&(k+=f+" Links ");0<h&&(k+=h+" Adornments ");if(1<a)for(a=this.wb.i;a.next();)c=a.value,k+="\n    "+c.toString(),d=c.data,null!==d&&v.md(d)&&(k+=" #"+v.md(d)),c instanceof S?k+=" "+
Ef(d):c instanceof W&&(k+=" "+Ef(c.T)+" "+Ef(c.Z));return b+" "+this.wb.count+": "+k};Vf.prototype.findObjectAt=Vf.prototype.re=function(a,b,c){void 0===b&&(b=null);void 0===c&&(c=null);if(!1===this.Sk)return null;var d=!1;this.g.rb.Fa(a)&&(d=!0);for(var e=v.L(),f=this.wb.n,h=f.length;h--;){var k=f[h];if((!0!==d||!1!==Wj(k))&&k.isVisible()&&(e.assign(a),Qa(e,k.Zg),k=k.re(e,b,c),null!==k&&(null!==b&&(k=b(k)),null!==k&&(null===c||c(k)))))return v.v(e),k}v.v(e);return null};
Vf.prototype.findObjectsAt=Vf.prototype.et=function(a,b,c,d){void 0===b&&(b=null);void 0===c&&(c=null);d instanceof I||d instanceof J||(d=new J(G));if(!1===this.Sk)return d;var e=!1;this.g.rb.Fa(a)&&(e=!0);for(var f=v.L(),h=this.wb.n,k=h.length;k--;){var l=h[k];!0===e&&!1===Wj(l)||!l.isVisible()||(f.assign(a),Qa(f,l.Zg),l.et(f,b,c,d)&&(null!==b&&(l=b(l)),null===l||null!==c&&!c(l)||d.add(l)))}v.v(f);return d};
Vf.prototype.findObjectsIn=Vf.prototype.Xj=function(a,b,c,d,e){void 0===b&&(b=null);void 0===c&&(c=null);void 0===d&&(d=!1);e instanceof I||e instanceof J||(e=new J(G));if(!1===this.Sk)return e;var f=!1;this.g.rb.Vj(a)&&(f=!0);for(var h=this.wb.n,k=h.length;k--;){var l=h[k];(!0!==f||!1!==Wj(l))&&l.isVisible()&&l.Xj(a,b,c,d,e)&&(null!==b&&(l=b(l)),null===l||null!==c&&!c(l)||e.add(l))}return e};
Vf.prototype.oz=function(a,b,c,d,e,f,h){if(!1===this.Sk)return e;for(var k=this.wb.n,l=k.length;l--;){var m=k[l];(!0!==h||!1!==Wj(m))&&f(m)&&m.isVisible()&&m.Xj(a,b,c,d,e)&&(null!==b&&(m=b(m)),null===m||null!==c&&!c(m)||e.add(m))}return e};
Vf.prototype.findObjectsNear=Vf.prototype.Lm=function(a,b,c,d,e,f){void 0===c&&(c=null);void 0===d&&(d=null);void 0===e&&(e=!0);if(!1!==e&&!0!==e){if(e instanceof I||e instanceof J)f=e;e=!0}f instanceof I||f instanceof J||(f=new J(G));if(!1===this.Sk)return f;var h=!1;this.g.rb.Fa(a)&&(h=!0);for(var k=v.L(),l=v.L(),m=this.wb.n,n=m.length;n--;){var p=m[n];!0===h&&!1===Wj(p)||!p.isVisible()||(k.assign(a),Qa(k,p.Zg),l.m(a.x+b,a.y),Qa(l,p.Zg),p.Lm(k,l,c,d,e,f)&&(null!==c&&(p=c(p)),null===p||null!==d&&
!d(p)||f.add(p)))}v.v(k);v.v(l);return f};g=Vf.prototype;g.zf=function(a,b){if(this.visible){var c;c=void 0===b?a.rb:b;for(var d=this.wb.n,e=d.length,f=0;f<e;f++){var h=d[f];h.YB=f;if(!(h instanceof W&&!1===h.Mf)){if(h instanceof Tg){var k=h;if(null!==k.Nf)continue}if($a(h.V,c))for(h.zf(!0),Xj(h),h=h.fw;h.next();)k=h.value,fj(k,Infinity,Infinity),k.Ec(),k.zf(!0);else h.zf(!1),null!==h.fw&&0<h.fw.count&&Xj(h)}}}};
g.Xe=function(a,b,c){if(this.visible&&0!==this.Rc&&(void 0===c&&(c=!0),c||!this.Gc)){c=this.wb.n;var d=c.length;if(0!==d){1!==this.Rc&&(a.globalAlpha=this.Rc);var e=this.Av;e.length=0;for(var f=b.scale,h=0;h<d;h++){var k=c[h];if(Wj(k)){if(k instanceof W){var l=k;l.jc&&e.push(l);if(!1===l.Mf)continue}l=k.V;1<l.width*f||1<l.height*f?k.Xe(a,b):Yj(k,a)}}a.globalAlpha=1}}};
function Zj(a,b,c,d){if(a.visible&&0!==a.Rc){1!==a.Rc&&(b.globalAlpha=a.Rc);var e=a.Av;e.length=0;var f=c.scale;a=a.wb.n;for(var h=a.length,k=d.length,l=0;l<h;l++){var m=a[l];if(Wj(m)){if(m instanceof W){var n=m;n.jc&&e.push(n);if(!1===n.Mf)continue}var n=ak(m,m.V),p;a:{p=n;for(var q=d,r=k,s=2/f,t=4/f,u=0;u<r;u++){var w=q[u];if(0!==w.width&&0!==w.height&&p.WD(w.x-s,w.y-s,w.width+t,w.height+t)){p=!0;break a}}p=!1}p&&(1<n.width*f||1<n.height*f?m.Xe(b,c):Yj(m,b))}}b.globalAlpha=1}}
g.h=function(a,b,c,d,e){var f=this.g;null!==f&&f.Lc(Af,a,this,b,c,d,e)};g.dp=function(a,b,c){var d=this.wb;b.kv=this;if(a>=d.count)a=d.count;else if(d.da(a)===b)return-1;d.Cd(a,b);b.pt(c);d=this.g;null!==d&&(c?d.pa():d.dp(b));bk(this,a,b);return a};
g.Me=function(a,b,c){if(!c&&b.layer!==this&&null!==b.layer)return b.layer.Me(a,b,c);var d=this.wb;if(0>a||a>=d.length){if(a=d.indexOf(b),0>a)return-1}else if(d.da(a)!==b&&(a=d.indexOf(b),0>a))return-1;b.qt(c);d.Vc(a);d=this.g;null!==d&&(c?d.pa():d.Me(b));b.kv=null;return a};
function bk(a,b,c){b=ck(a,b,c);if(c instanceof V&&null!==c&&isNaN(c.kn)){if(0!==c.Ic.count){for(var d=-1,e=a.wb.n,f=e.length,h=0;h<f;h++){var k=e[h];if(k===c&&(b=h,0<=d))break;if(0>d&&k.Sa===c&&(d=h,0<=b))break}!(0>d)&&d<b&&(e=a.wb,e.Vc(b),e.Cd(d,c))}c=c.Sa;null!==c&&bk(a,-1,c)}}
function ck(a,b,c){var d=c.kn;if(isNaN(d))return b;a=a.wb;var e=a.count;if(1>=e)return b;0>b&&(b=a.indexOf(c));if(0>b)return-1;for(var f=b-1,h=NaN;0<=f;){h=a.da(f).kn;if(!isNaN(h))break;f--}for(var k=b+1,l=NaN;k<e;){l=a.da(k).kn;if(!isNaN(l))break;k++}if(!isNaN(h)&&h>d)for(;;){if(-1===f||h<=d){f++;if(f===b)break;a.Vc(b);a.Cd(f,c);return f}for(h=NaN;0<=--f&&(h=a.da(f).kn,isNaN(h)););}else if(!isNaN(l)&&l<d)for(;;){if(k===e||l>=d){k--;if(k===b)break;a.Vc(b);a.Cd(k,c);return k}for(l=NaN;++k<e&&(l=a.da(k).kn,
isNaN(l)););}return b}g.clear=function(){for(var a=this.wb.dc(),b=a.length,c=0;c<b;c++)a[c].zf(!1),this.Me(-1,a[c],!1)};v.u(Vf,{dk:"parts"},function(){return this.wb.i});v.u(Vf,{vK:"partsBackwards"},function(){return this.wb.Tm});v.u(Vf,{g:"diagram"},function(){return this.S});
v.defineProperty(Vf,{name:"name"},function(){return this.Ob},function(a){v.j(a,"string",Vf,"name");var b=this.Ob;if(b!==a){var c=this.g;if(null!==c)for(""===b&&v.k("Cannot rename default Layer to: "+a),c=c.Nw;c.next();)c.value.name===a&&v.k("Layer.name is already present in this diagram: "+a);this.Ob=a;this.h("name",b,a);for(a=this.wb.i;a.next();)a.value.Uf=this.Ob}});
v.defineProperty(Vf,{opacity:"opacity"},function(){return this.Rc},function(a){var b=this.Rc;b!==a&&(v.j(a,"number",Vf,"opacity"),(0>a||1<a)&&v.va(a,"0 <= value <= 1",Vf,"opacity"),this.Rc=a,this.h("opacity",b,a),a=this.g,null!==a&&a.pa())});v.defineProperty(Vf,{Gc:"isTemporary"},function(){return this.sy},function(a){var b=this.sy;b!==a&&(v.j(a,"boolean",Vf,"isTemporary"),this.sy=a,this.h("isTemporary",b,a))});
v.defineProperty(Vf,{visible:"visible"},function(){return this.Ry},function(a){var b=this.Ry;if(b!==a){v.j(a,"boolean",Vf,"visible");this.Ry=a;this.h("visible",b,a);for(b=this.wb.i;b.next();)b.value.od(a);a=this.g;null!==a&&a.pa()}});v.defineProperty(Vf,{Hg:"pickable"},function(){return this.Sk},function(a){var b=this.Sk;b!==a&&(v.j(a,"boolean",Vf,"pickable"),this.Sk=a,this.h("pickable",b,a))});
v.defineProperty(Vf,{ZD:"isBoundsIncluded"},function(){return this.my},function(a){this.my!==a&&(this.my=a,null!==this.g&&this.g.pc())});v.defineProperty(Vf,{Tj:"allowCopy"},function(){return this.hk},function(a){var b=this.hk;b!==a&&(v.j(a,"boolean",Vf,"allowCopy"),this.hk=a,this.h("allowCopy",b,a))});v.defineProperty(Vf,{ym:"allowDelete"},function(){return this.ik},function(a){var b=this.ik;b!==a&&(v.j(a,"boolean",Vf,"allowDelete"),this.ik=a,this.h("allowDelete",b,a))});
v.defineProperty(Vf,{jw:"allowTextEdit"},function(){return this.rk},function(a){var b=this.rk;b!==a&&(v.j(a,"boolean",Vf,"allowTextEdit"),this.rk=a,this.h("allowTextEdit",b,a))});v.defineProperty(Vf,{gw:"allowGroup"},function(){return this.jk},function(a){var b=this.jk;b!==a&&(v.j(a,"boolean",Vf,"allowGroup"),this.jk=a,this.h("allowGroup",b,a))});
v.defineProperty(Vf,{kw:"allowUngroup"},function(){return this.sk},function(a){var b=this.sk;b!==a&&(v.j(a,"boolean",Vf,"allowUngroup"),this.sk=a,this.h("allowUngroup",b,a))});v.defineProperty(Vf,{Ss:"allowLink"},function(){return this.kk},function(a){var b=this.kk;b!==a&&(v.j(a,"boolean",Vf,"allowLink"),this.kk=a,this.h("allowLink",b,a))});
v.defineProperty(Vf,{zm:"allowRelink"},function(){return this.mk},function(a){var b=this.mk;b!==a&&(v.j(a,"boolean",Vf,"allowRelink"),this.mk=a,this.h("allowRelink",b,a))});v.defineProperty(Vf,{$k:"allowMove"},function(){return this.lk},function(a){var b=this.lk;b!==a&&(v.j(a,"boolean",Vf,"allowMove"),this.lk=a,this.h("allowMove",b,a))});
v.defineProperty(Vf,{hw:"allowReshape"},function(){return this.nk},function(a){var b=this.nk;b!==a&&(v.j(a,"boolean",Vf,"allowReshape"),this.nk=a,this.h("allowReshape",b,a))});v.defineProperty(Vf,{Ts:"allowResize"},function(){return this.ok},function(a){var b=this.ok;b!==a&&(v.j(a,"boolean",Vf,"allowResize"),this.ok=a,this.h("allowResize",b,a))});
v.defineProperty(Vf,{iw:"allowRotate"},function(){return this.pk},function(a){var b=this.pk;b!==a&&(v.j(a,"boolean",Vf,"allowRotate"),this.pk=a,this.h("allowRotate",b,a))});v.defineProperty(Vf,{of:"allowSelect"},function(){return this.qk},function(a){var b=this.qk;b!==a&&(v.j(a,"boolean",Vf,"allowSelect"),this.qk=a,this.h("allowSelect",b,a))});
function E(a){function b(){window.document.removeEventListener("DOMContentLoaded",b,!1);dk(c)}1<arguments.length&&v.k("Diagram constructor can only take one optional argument, the DIV HTML element or its id.");v.ec(this);ek=[];this.Pc=!0;this.MA=new ug;this.MA.Mc(this);this.wd=17;var c=this;null!==window.document.body?dk(this):window.document.addEventListener("DOMContentLoaded",b,!1);this.TB=!1;this.Xb=new I(Vf);this.Jb=this.Eb=0;this.Ej=this.Kb=this.lf=this.zb=null;this.FE();this.Tn=null;this.EE();
this.kb=(new y(NaN,NaN)).freeze();this.Tb=1;this.bv=(new y(NaN,NaN)).freeze();this.cv=NaN;this.rv=1E-4;this.pv=100;this.ne=new ja;this.dw=(new y(NaN,NaN)).freeze();this.Tu=(new B(NaN,NaN,NaN,NaN)).freeze();this.Mv=(new eb(0,0,0,0)).freeze();this.Nv=fk;this.Jv=this.Fv=null;this.Ml=Yg;this.vn=kc;this.Dk=Yg;this.Qn=kc;this.dv=this.av=tb;this.le=!0;this.Oq=!1;this.gg=new J(G);this.xk=new na(W,B);this.In=!0;this.QA=250;this.on=-1;this.wu=(new eb(16,16,16,16)).freeze();this.Lu=this.Lf=!1;this.Mn=!0;this.si=
new xf;this.Sc=new xf;this.Nb=new xf;this.Sg=this.gi=null;this.xs=!1;this.Tx=this.Ux=null;gk(this);this.lo=new J(S);this.Uk=new J(V);this.co=new J(W);this.wb=new J(R);this.hv=!0;this.Zv=hk;this.IB=!1;this.aw=$h;this.Px=this.Rx=this.Oy=null;this.Fu="";this.uq="auto";this.li=this.Ji=this.Ai=this.uv=this.Bi=this.Ci=this.Di=this.ki=this.qi=this.hi=null;this.Ay=!1;this.qC={};this.Ev=0;this.Kf=[null,null];this.Lx=null;this.Qp=this.Sx=this.Iy=this.xC=this.Ii=!1;this.VB=!0;this.oy=this.Md=!1;this.Xd=null;
var d=this;this.bC=function(a){if(a.ba===d.ba&&d.Qa){d.Qa=!1;try{var b=a.wc;""===a.hf&&b===Af&&ik(d,a.object,a.propertyName)}finally{d.Qa=!0}}};this.cC=function(a){jk(d,a)};this.VC=!0;this.Pg=-2;this.mi=new na(Object,R);this.wk=new na(Object,W);this.Wl=new na(Object,Array);this.mo=new na("string",Array);this.pC=new I(kk);this.ui=!1;this.ik=this.hk=this.lu=this.Re=!0;this.nu=this.mu=!1;this.su=this.qu=this.qk=this.pk=this.ok=this.nk=this.lk=this.mk=this.kk=this.pu=this.sk=this.jk=this.rk=!0;this.Tl=
this.RB=!1;this.ru=this.ou=this.Zu=this.Yu=!0;this.Pv=this.Lv=16;this.Fy=this.Kv=!1;this.bs=this.Ov=null;this.Gy=this.Hy=0;this.Te=(new eb(5)).freeze();this.Rv=(new J(R)).freeze();this.qv=999999999;this.$u=(new J(R)).freeze();this.Ek=this.Rl=this.pj=!0;this.Bk=this.oj=!1;this.Wd=null;this.uu=!0;this.Rg=!1;this.AF=new J(W);this.GB=new J(lk);this.ud=null;this.hC=1;this.hy=!1;this.AC=0;this.UC=(new B(NaN,NaN,NaN,NaN)).freeze();this.Mu=(new B(NaN,NaN,NaN,NaN)).freeze();this.Bv=new J(mk);nk(this);this.mv=
this.Vu=this.vv=this.mB=this.lB=this.nB=this.vj=this.zk=this.Ei=null;ok(this);this.jd=null;this.Uu=!1;this.yn=null;this.Za=new Rg;this.Za.initializeStandardTools();this.Wa=this.Zs=this.Za;this.nb=new Xf;this.ba=new Q;this.Ii=!0;this.Pb=new Yf;this.Ii=!1;this.yB=this.Wx=null;this.sd=1;this.Lj=null;this.Ck=new pk;void 0!==a&&qk(this,a);this.Yl=1;this.Zl=0;this.XB=new y;this.RC=500;this.vu=new y;this.ps=null;this.Pc=this.Fk=!1}v.ea("Diagram",E);
function ok(a){a.Ei=new na("string",R);var b=new S,c=new $g;c.bind(new zg("text","",Ef));b.add(c);a.nB=b;a.Ei.add("",b);b=new S;c=new $g;c.stroke="brown";c.bind(new zg("text","",Ef));b.add(c);a.Ei.add("Comment",b);b=new S;b.Al=!1;b.jD=!1;c=new X;c.Ab="Ellipse";c.fill="black";c.stroke=null;c.wa=(new ia(3,3)).Ea();b.add(c);a.Ei.add("LinkLabel",b);a.zk=new na("string",V);b=new V;b.hA="GROUPPANEL";b.type=rk;c=new $g;c.font="bold 12pt sans-serif";c.bind(new zg("text","",Ef));b.add(c);c=new D(sk);c.name=
"GROUPPANEL";var d=new X;d.Ab="Rectangle";d.fill="rgba(128,128,128,0.2)";d.stroke="black";c.add(d);d=new Mi;d.padding=(new eb(5,5,5,5)).Ea();c.add(d);b.add(c);a.lB=b;a.zk.add("",b);a.vj=new na("string",W);b=new W;c=new X;c.Sf=!0;b.add(c);c=new X;c.Kp="Standard";c.fill="black";c.stroke=null;c.lb=0;b.add(c);a.mB=b;a.vj.add("",b);b=new W;c=new X;c.Sf=!0;c.stroke="brown";b.add(c);a.vj.add("Comment",b);b=new Tg;b.type=sk;c=new X;c.fill=null;c.stroke="dodgerblue";c.lb=3;b.add(c);c=new Mi;c.margin=(new eb(1.5,
1.5,1.5,1.5)).Ea();b.add(c);a.vv=b;a.Vu=b;b=new Tg;b.type=xi;c=new X;c.Sf=!0;c.fill=null;c.stroke="dodgerblue";c.lb=3;b.add(c);a.mv=b}
function dk(a){var b=v.createElement("p");b.style.width="100%";b.style.height="200px";b.style.boxSizing="content-box";var c=v.createElement("div");c.style.position="absolute";c.style.visibility="hidden";c.style.width="200px";c.style.height="150px";c.style.overflow="hidden";c.style.boxSizing="content-box";c.appendChild(b);window.document.body.appendChild(c);var d=b.offsetWidth;c.style.overflow="scroll";b=b.offsetWidth;d===b&&(b=c.clientWidth);window.document.body.removeChild(c);c=d-b;0!==c||v.cE||
(c=11);a.wd=c}E.prototype.toString=function(a){void 0===a&&(a=0);var b="";this.id&&(b=this.id);this.hl&&this.hl.id&&(b=this.hl.id);b='Diagram "'+b+'"';if(0>=a)return b;for(var c=this.Xb.i;c.next();)b+="\n  "+c.value.toString(a-1);return b};E.fromDiv=function(a){var b=a;"string"===typeof a&&(b=window.document.getElementById(a));return b instanceof HTMLDivElement&&b.S instanceof E?b.S:null};
v.defineProperty(E,{hl:"div"},function(){return this.Kb},function(a){null!==a&&v.A(a,HTMLDivElement,E,"div");if(this.Kb!==a){ek=[];var b=this.Kb;null!==b?(b.S=void 0,b.innerHTML="",null!==this.zb&&(this.zb.removeEventListener("touchstart",this.gF,!1),this.zb.removeEventListener("touchmove",this.fF,!1),this.zb.removeEventListener("touchend",this.eF,!1),this.zb.zd.S=null),b=this.Za,null!==b&&(b.Oe.each(function(a){a.cancelWaitAfter()}),b.Wf.each(function(a){a.cancelWaitAfter()}),b.Xf.each(function(a){a.cancelWaitAfter()})),
b.cancelWaitAfter(),this.Wa.doCancel(),this.lf=this.zb=null,window.removeEventListener("resize",this.qF,!1),window.removeEventListener("mousemove",this.op,!0),window.removeEventListener("mousedown",this.np,!0),window.removeEventListener("mouseup",this.qp,!0),window.removeEventListener("mousewheel",this.kh,!0),window.removeEventListener("DOMMouseScroll",this.kh,!0),window.removeEventListener("mouseout",this.pp,!0)):this.Rg=!1;this.Kb=null;if(null!==a){if(b=a.S)b.hl=null;qk(this,a);this.Zw()}}});
function tk(a){var b=a.zb;b.addEventListener("touchstart",a.gF,!1);b.addEventListener("touchmove",a.fF,!1);b.addEventListener("touchend",a.eF,!1);b.addEventListener("mousemove",a.op,!1);b.addEventListener("mousedown",a.np,!1);b.addEventListener("mouseup",a.qp,!1);b.addEventListener("mousewheel",a.kh,!1);b.addEventListener("DOMMouseScroll",a.kh,!1);b.addEventListener("mouseout",a.pp,!1);b.addEventListener("keydown",a.xH,!1);b.addEventListener("keyup",a.yH,!1);b.addEventListener("selectstart",function(a){a.preventDefault();
return!1},!1);b.addEventListener("contextmenu",function(a){a.preventDefault();return!1},!1);b.addEventListener("gesturechange",function(b){a.Za.Zo===Bj&&b.preventDefault()},!1);b.addEventListener("pointerdown",a.ZH,!1);b.addEventListener("pointermove",a.aI,!1);b.addEventListener("pointerleave",a.$H,!1);window.addEventListener("resize",a.qF,!1)}E.prototype.computePixelRatio=function(){return null!==this.Lj?this.Lj:this.EF};E.prototype.doMouseMove=function(){this.Wa.doMouseMove()};
E.prototype.doMouseDown=function(){this.Wa.doMouseDown()};E.prototype.doMouseUp=function(){this.Wa.doMouseUp()};E.prototype.doMouseWheel=function(){this.Wa.doMouseWheel()};E.prototype.doKeyDown=function(){this.Wa.doKeyDown()};E.prototype.doKeyUp=function(){this.Wa.doKeyUp()};E.prototype.doFocus=function(){this.focus()};E.prototype.focus=E.prototype.focus=function(){this.zb&&this.zb.focus()};
function Ij(a){if(null!==a.zb){var b=a.Kb;if(0!==b.clientWidth&&0!==b.clientHeight){var c=a.Bk?a.wd:0,d=a.oj?a.wd:0,e=a.sd;a.sd=a.computePixelRatio();a.sd!==e&&(a.Oq=!0,a.ve());if(b.clientWidth!==a.Eb+c||b.clientHeight!==a.Jb+d)a.Rl=!0,a.le=!0,b=a.Pb,null!==b&&b.Kw&&a.al===Yg&&b.H(),a.Md||a.ve()}}}
function nk(a){var b=new Vf;b.name="Background";a.Ms(b);b=new Vf;b.name="";a.Ms(b);b=new Vf;b.name="Foreground";a.Ms(b);b=new Vf;b.name="Adornment";b.Gc=!0;a.Ms(b);b=new Vf;b.name="Tool";b.Gc=!0;b.ZD=!0;a.Ms(b);b=new Vf;b.name="Grid";b.of=!1;b.Hg=!1;b.Gc=!0;a.ZF(b,a.ct("Background"))}
function uk(a){a.jd=new D(vk);a.jd.name="GRID";var b=new X;b.Ab="LineH";b.stroke="lightgray";b.lb=.5;b.interval=1;a.jd.add(b);b=new X;b.Ab="LineH";b.stroke="gray";b.lb=.5;b.interval=5;a.jd.add(b);b=new X;b.Ab="LineH";b.stroke="gray";b.lb=1;b.interval=10;a.jd.add(b);b=new X;b.Ab="LineV";b.stroke="lightgray";b.lb=.5;b.interval=1;a.jd.add(b);b=new X;b.Ab="LineV";b.stroke="gray";b.lb=.5;b.interval=5;a.jd.add(b);b=new X;b.Ab="LineV";b.stroke="gray";b.lb=1;b.interval=10;a.jd.add(b);b=new R;b.add(a.jd);
b.Uf="Grid";b.kn=0;b.Cz=!1;b.YD=!1;b.Hg=!1;b.Hz="GRID";a.add(b);a.wb.remove(b);a.jd.visible=!1}E.prototype.GF=function(){this.S.isEnabled?this.S.FG(this):wk(this.S)};E.prototype.gC=function(a){this.S.isEnabled?(this.S.Fy=!0,this.S.Hy=a.target.scrollTop,this.S.Gy=a.target.scrollLeft):wk(this.S)};
E.prototype.diagramScroll=E.prototype.FG=function(a){if(this.Fy&&null!==this.zb){this.Kv=!0;var b=this.ae,c=this.rb,d=b.width,e=c.width,f=b.height,h=c.height,k=b.right,l=c.right,m=b.bottom,n=c.bottom,p=b.x,q=c.x,b=b.y,c=c.y,r=this.scale,s;e<d||h<f?(s=v.Mb(this.position.x,this.position.y),this.oe&&this.Gy!==a.scrollLeft&&(s.x=a.scrollLeft/r+p,this.Gy=a.scrollLeft),this.pe&&this.Hy!==a.scrollTop&&(s.y=a.scrollTop/r+b,this.Hy=a.scrollTop),this.position=s,v.v(s),this.Rl=this.Kv=!1):(s=v.L(),a.KF&&this.oe&&
(p<q&&(this.position=s.m(a.scrollLeft+p,this.position.y)),k>l&&(this.position=s.m(-(this.Ov.scrollWidth-this.Eb)+a.scrollLeft-this.Eb/r+k,this.position.y))),a.LF&&this.pe&&(b<c&&(this.position=s.m(this.position.x,a.scrollTop+b)),m>n&&(this.position=s.m(this.position.x,-(this.Ov.scrollHeight-this.Jb)+a.scrollTop-this.Jb/r+m))),v.v(s),xk(this),this.Rl=this.Kv=!1,b=this.ae,c=this.rb,k=b.right,l=c.right,m=b.bottom,n=c.bottom,p=b.x,q=c.x,b=b.y,c=c.y,e>=d&&p>=q&&k<=l&&(this.bs.style.width="1px"),h>=f&&
b>=c&&m<=n&&(this.bs.style.height="1px"))}};E.prototype.computeBounds=E.prototype.ah=function(){0<this.gg.count&&yk(this);return zk(this)};function zk(a){if(a.LD.G()){var b=a.LD.copy();b.ew(a.padding);return b}for(var c=!0,d=a.Xb.n,e=d.length,f=0;f<e;f++){var h=d[f];if(h.visible&&(!h.Gc||h.ZD))for(var h=h.wb.n,k=h.length,l=0;l<k;l++){var m=h[l];m.Cz&&m.isVisible()&&(m=m.V,m.G()&&(c?(c=!1,b=m.copy()):b.ci(m)))}}c&&(b=new B(0,0,0,0));b.ew(a.padding);return b}
E.prototype.computePartsBounds=function(a){var b=null;for(a=a.i;a.next();){var c=a.value;c instanceof W||(c.tf(),null===b?b=c.V.copy():b.ci(c.V))}return null===b?new B(NaN,NaN,0,0):b};
function Ak(a,b){if((b||a.Rg)&&!a.Pc&&null!==a.zb&&!a.Na.df&&a.ae.G()){a.Pc=!0;var c=a.Ml;b&&a.Dk!==Yg&&(c=a.Dk);var d=c!==Yg?Bk(a,c):a.scale,c=a.rb.copy(),e=a.Eb/d,f=a.Jb/d,h=null,k=a.Na;k.uc&&(h=a.kb.copy());a.position.Oa();var l=a.vn;b&&!l.cd()&&a.Qn.cd()&&(l=a.Qn);Ck(a,a.kb,a.ae,e,f,l,b);a.position.freeze();null!==h&&Uj(k,h,a.kb);a.scale=d;a.Pc=!1;d=a.rb;d.Fc(c)||a.Kt(c,d)}}
function Bk(a,b){var c=a.nb.sw;if(null===a.zb)return c;a.pj&&Dk(a,a.ah());var d=a.ae;if(!d.G())return c;var e=d.width,d=d.height,f=a.Eb,h=a.Jb,k=f/e,l=h/d;return b===Ek?(e=Math.min(l,k),e>c&&(e=c),e<a.ih&&(e=a.ih),e>a.hh&&(e=a.hh),e):b===Fk?(e=l>k?(h-a.wd)/d:(f-a.wd)/e,e>c&&(e=c),e<a.ih&&(e=a.ih),e>a.hh&&(e=a.hh),e):a.scale}E.prototype.zoomToFit=E.prototype.zoomToFit=function(){this.scale=Bk(this,Ek)};
E.prototype.zoomToRect=function(a,b){void 0===b&&(b=Ek);var c=a.width,d=a.height;if(!(0===c||0===d||isNaN(c)&&isNaN(d))){var e=1;if(b===Ek||b===Fk)if(isNaN(c))e=this.rb.height*this.scale/d;else if(isNaN(d))e=this.rb.width*this.scale/c;else var e=this.Eb,f=this.Jb,e=b===Fk?f/d>e/c?(f-(this.oj?this.wd:0))/d:(e-(this.Bk?this.wd:0))/c:Math.min(f/d,e/c);this.scale=e;this.position=new y(a.x,a.y)}};v.defineProperty(E,{Az:null},function(){return this.Pc},function(a){this.Pc=a});
E.prototype.alignDocument=function(a,b){this.pj&&Dk(this,this.ah());var c=this.ae,d=this.rb;this.position=new y(c.x+(a.x*c.width+a.offsetX)-(b.x*d.width-b.offsetX),c.y+(a.y*c.height+a.offsetY)-(b.y*d.height-b.offsetY))};
function Ck(a,b,c,d,e,f,h){var k=b.x,l=b.y;if(h||a.fA===fk)f.cd()&&(d>c.width&&(k=c.x+(f.x*c.width+f.offsetX)-(f.x*d-f.offsetX)),e>c.height&&(l=c.y+(f.y*c.height+f.offsetY)-(f.y*e-f.offsetY))),f=a.ME,h=d-c.width,d<c.width+f.left+f.right?(k=Math.min(k+d/2,c.right+Math.max(h,f.right)-d/2),k=Math.max(k,c.left-Math.max(h,f.left)+d/2),k-=d/2):k>c.left?k=c.left:k<c.right-d&&(k=c.right-d),d=e-c.height,e<c.height+f.top+f.bottom?(l=Math.min(l+e/2,c.bottom+Math.max(d,f.bottom)-e/2),l=Math.max(l,c.top-Math.max(d,
f.top)+e/2),l-=e/2):l>c.top?l=c.top:l<c.bottom-e&&(l=c.bottom-e);b.x=isFinite(k)?k:-a.padding.left;b.y=isFinite(l)?l:-a.padding.top;null!==a.xE&&(a=a.xE(a,b),b.x=a.x,b.y=a.y)}E.prototype.findPartAt=E.prototype.ft=function(a,b){var c=b?Ph(this,a,function(a){return a.Y},function(a){return a.canSelect()}):Ph(this,a,function(a){return a.Y});return c instanceof R?c:null};
E.prototype.findObjectAt=E.prototype.re=function(a,b,c){void 0===b&&(b=null);void 0===c&&(c=null);yk(this);for(var d=this.Xb.Tm;d.next();){var e=d.value;if(e.visible&&(e=e.re(a,b,c),null!==e))return e}return null};function Ph(a,b,c,d){void 0===c&&(c=null);void 0===d&&(d=null);yk(a);for(a=a.Xb.Tm;a.next();){var e=a.value;if(e.visible&&!e.Gc&&(e=e.re(b,c,d),null!==e))return e}return null}
E.prototype.findObjectsAt=E.prototype.et=function(a,b,c,d){void 0===b&&(b=null);void 0===c&&(c=null);d instanceof I||d instanceof J||(d=new J(G));yk(this);for(var e=this.Xb.Tm;e.next();){var f=e.value;f.visible&&f.et(a,b,c,d)}return d};E.prototype.findObjectsIn=E.prototype.Xj=function(a,b,c,d,e){void 0===b&&(b=null);void 0===c&&(c=null);void 0===d&&(d=!1);e instanceof I||e instanceof J||(e=new J(G));yk(this);for(var f=this.Xb.Tm;f.next();){var h=f.value;h.visible&&h.Xj(a,b,c,d,e)}return e};
E.prototype.oz=function(a,b,c,d,e,f){var h=new J(G);yk(this);for(var k=this.Xb.Tm;k.next();){var l=k.value;l.visible&&l.oz(a,b,c,d,h,e,f)}return h};E.prototype.findObjectsNear=E.prototype.Lm=function(a,b,c,d,e,f){void 0===c&&(c=null);void 0===d&&(d=null);void 0===e&&(e=!0);if(!1!==e&&!0!==e){if(e instanceof I||e instanceof J)f=e;e=!0}f instanceof I||f instanceof J||(f=new J(G));yk(this);for(var h=this.Xb.Tm;h.next();){var k=h.value;k.visible&&k.Lm(a,b,c,d,e,f)}return f};
E.prototype.acceptEvent=function(a){var b=this.Sc;this.Sc=this.Nb;this.Nb=b;Gk(this,this,a,b,a instanceof MouseEvent);return b};
function Gk(a,b,c,d,e){d.g=b;d.event=c;e?Hk(a,c,d):(d.jf=b.Nb.jf,d.ca=b.Nb.ca);a=0;c.ctrlKey&&(a+=1);c.altKey&&(a+=2);c.shiftKey&&(a+=4);c.metaKey&&(a+=8);d.pd=a;d.button=c.button;c.buttons&&(d.buttons=c.buttons);v.ak&&0===c.button&&c.ctrlKey&&(d.button=2);d.il=!1;d.up=!1;d.We=1;d.gl=0;d.zc=!1;d.bubbles=!1;d.timestamp=Date.now();d.vt=!1;d.Jg=c.target.S?c.target.S:null;d.ze=null}
function Ik(a,b,c,d,e){d.g=a;Hk(a,c,d);d.pd=0;d.button=0;d.buttons=1;d.il=!0;d.up=!1;d.We=1;d.gl=0;d.zc=!1;d.bubbles=!0;d.event=b;d.timestamp=Date.now();d.vt=e;d.Jg=b.target.S?b.target.S:null;d.ze=null;a.si=d.copy();hh=null}
function Jk(a,b,c,d,e){var f=null;d.g=a;null!==c?((f=window.document.elementFromPoint(c.clientX,c.clientY))&&f.S?f=f.S:(c=b.changedTouches[0],f=a),d.Jg=f,Hk(a,c,d)):null!==a.Sc?(d.ca=a.Sc.ca,d.jf=a.Sc.jf,d.Jg=a.Sc.Jg):null!==a.si&&(d.ca=a.si.ca,d.jf=a.si.jf,d.Jg=a.si.Jg);d.pd=0;d.button=0;d.buttons=1;d.il=!1;d.up=!1;d.We=1;d.gl=0;d.zc=!1;d.bubbles=!1;d.event=b;d.timestamp=Date.now();d.vt=e;d.ze=null}
function Kk(a,b){if(a.bubbles)return!0;void 0!==b.stopPropagation&&b.stopPropagation();(void 0===b.touches||2>b.touches.length)&&b.preventDefault();b.cancelBubble=!0;return!1}
E.prototype.xH=function(a){if(!this.S.isEnabled)return!1;var b=this.S.Nb;Gk(this.S,this.S,a,b,!1);b.key=String.fromCharCode(a.which);b.il=!0;switch(a.which){case 8:b.key="Backspace";break;case 33:b.key="PageUp";break;case 34:b.key="PageDown";break;case 35:b.key="End";break;case 36:b.key="Home";break;case 37:b.key="Left";break;case 38:b.key="Up";break;case 39:b.key="Right";break;case 40:b.key="Down";break;case 45:b.key="Insert";break;case 46:b.key="Del";break;case 48:b.key="0";break;case 187:case 61:case 107:b.key=
"Add";break;case 189:case 173:case 109:b.key="Subtract";break;case 27:b.key="Esc"}this.S.doKeyDown();return 187!==a.which&&189!==a.which&&48!==a.which&&107!==a.which&&109!==a.which&&61!==a.which&&173!==a.which||!0!==a.ctrlKey?Kk(b,a):(a.cancelBubble=!0,a.preventDefault(),a.stopPropagation(),!1)};
E.prototype.yH=function(a){if(!this.S.isEnabled)return!1;var b=this.S.Nb;Gk(this.S,this.S,a,b,!1);b.key=String.fromCharCode(a.which);b.up=!0;switch(a.which){case 8:b.key="Backspace";break;case 33:b.key="PageUp";break;case 34:b.key="PageDown";break;case 35:b.key="End";break;case 36:b.key="Home";break;case 37:b.key="Left";break;case 38:b.key="Up";break;case 39:b.key="Right";break;case 40:b.key="Down";break;case 45:b.key="Insert";break;case 46:b.key="Del";break;case 93:a.preventDefault()}this.S.doKeyUp();
return Kk(b,a)};E.prototype.Jq=function(a){var b=this.zb;if(null===b)return new y(0,0);var c=this.Eb,d=this.Jb,b=b.getBoundingClientRect(),c=a.clientX-c/b.width*b.left;a=a.clientY-d/b.height*b.top;return null!==this.ne?(a=new y(c,a),Qa(a,this.ne),a):new y(c,a)};function Hk(a,b,c){var d=a.zb,e=a.Eb,f=a.Jb,h=0,k=0;null!==d&&(d=d.getBoundingClientRect(),h=b.clientX-e/d.width*d.left,k=b.clientY-f/d.height*d.top);c.jf.m(h,k);null!==a.ne?(b=v.Mb(h,k),a.ne.Yh(b),c.ca.assign(b),v.v(b)):c.ca.m(h,k)}
E.prototype.invalidateDocumentBounds=E.prototype.pc=function(){this.pj||(this.pj=!0,this.ve(!0))};function Rj(a){a.Md||yk(a);a.pj&&Dk(a,a.ah())}E.prototype.redraw=E.prototype.Zw=function(){this.Pc||this.Md||(this.pa(),Lk(this),xk(this),this.pc(),this.Vf())};E.prototype.isUpdateRequested=function(){return this.Lf};E.prototype.delayInitialization=function(a){void 0===a&&(a=null);var b=this.Na,c=b.isEnabled;b.ai();b.isEnabled=!1;Wh(this);this.Rg=!1;b.isEnabled=c;null!==a&&v.setTimeout(a,1)};
E.prototype.requestUpdate=E.prototype.ve=function(a){void 0===a&&(a=!1);if(!0!==this.Lf&&!(this.Pc||!1===a&&this.Md)){this.Lf=!0;var b=this;requestAnimationFrame(function(){b.Lf&&b.Vf()})}};E.prototype.maybeUpdate=E.prototype.Vf=function(){if(!this.Mn||this.Lf)this.Mn&&(this.Mn=!1),Wh(this)};function Mk(a,b){a.Na.df||a.Pc||!a.Rl||wk(a)||(b&&yk(a),Ak(a,!1))}
function Wh(a){if(!a.Md&&(a.Lf=!1,null!==a.Kb)){a.Md=!0;var b=a.Na,c=a.pC;if(!b.Wn&&0!==c.length){for(var d=c.n,e=d.length,f=0;f<e;f++){var h=d[f];Qk(h,!1);h.P()}c.clear()}c=a.GB;0<c.count&&(c.each(function(a){a.xA()}),c.clear());d=c=!1;b.df&&(d=!0,c=a.tb,a.tb=!0);b.uc||Ij(a);Mk(a,!1);null!==a.jd&&(a.jd.visible&&!a.Uu&&(Zk(a),a.Uu=!0),!a.jd.visible&&a.Uu&&(a.Uu=!1));yk(a);e=!1;if(!a.Rg||a.uu)a.Rg?$k(a,!a.Lu):(a.Qb("Initial Layout"),!1===b.isEnabled&&b.ai(),$k(a,!1)),e=!0;a.Lu=!1;yk(a);a.Iy||b.df||
Rj(a);Mk(a,!0);e&&(a.Rg||al(a),a.Ba("LayoutCompleted"));yk(a);e&&!a.Rg&&(a.Rg=!0,a.yd("Initial Layout"),a.tb||a.la.clear(),v.setTimeout(function(){a.$h=!1},1));bl(a);Hj(b);a.Xe();d&&(a.tb=c);a.Md=!1}}v.u(E,{Sm:null},function(){return this.Rg});
function al(a){var b=a.Xb.n;a.zf(b,b.length,a);a.Dk!==Yg?a.scale=Bk(a,a.Dk):a.Ml!==Yg?a.scale=Bk(a,a.Ml):(b=a.hH,isFinite(b)&&0<b&&(a.scale=b));b=a.gH;if(b.G())a.position=b;else{b=v.L();b.Xt(a.ae,a.fH);var c=a.rb,c=v.gk(0,0,c.width,c.height),d=v.L();d.Xt(c,a.iH);d.m(b.x-d.x,b.y-d.y);a.position=d;v.Vb(c);v.v(d);v.v(b);Mk(a,!0);Ak(a,!0)}a.Ba("InitialLayoutCompleted");Zk(a)}
function yk(a){if((a.Md||!a.Na.df)&&0!==a.gg.count)for(var b=0;23>b;b++){var c=a.gg.i;if(null===c||0===a.gg.count)break;a.gg=new J(G);a.xA(c,a.gg)}}
E.prototype.xA=function(a,b){for(a.reset();a.next();){var c=a.value;!c.Rd()||c instanceof V||!c.isVisible()||(c.ul()?(fj(c,Infinity,Infinity),c.Ec()):b.add(c))}for(a.reset();a.next();)c=a.value,c instanceof V&&c.isVisible()&&cl(this,c);for(a.reset();a.next();)c=a.value,c instanceof W&&c.isVisible()&&(c.ul()?(fj(c,Infinity,Infinity),c.Ec()):b.add(c));for(a.reset();a.next();)c=a.value,c instanceof Tg&&c.isVisible()&&(c.ul()?(fj(c,Infinity,Infinity),c.Ec()):b.add(c))};
function cl(a,b){for(var c=v.jb(),d=v.jb(),e=b.Ic;e.next();){var f=e.value;f.isVisible()&&(f instanceof V?(dl(f)||el(f)||fl(f))&&cl(a,f):f instanceof W?f.T===b||f.Z===b?d.push(f):c.push(f):(fj(f,Infinity,Infinity),f.Ec()))}for(var e=c.length,h=0;h<e;h++)f=c[h],fj(f,Infinity,Infinity),f.Ec();v.sa(c);fj(b,Infinity,Infinity);b.Ec();e=d.length;for(h=0;h<e;h++)f=d[h],fj(f,Infinity,Infinity),f.Ec();v.sa(d)}E.prototype.zf=function(a,b,c,d){var e=this.Na;if(this.Ek||e.df)for(e=0;e<b;e++)a[e].zf(c,d)};
E.prototype.Xe=function(a,b){void 0===a&&(a=this.lf);void 0===b&&(b=null);null===this.Kb&&v.k("No div specified");var c=this.zb;null===c&&v.k("No canvas specified");var d=this.Na;if(!d.uc&&(gl(this),"0"!==this.Kb.style.opacity)){var e=a!==this.lf,f=this.Xb.n,h=f.length,k=this;this.zf(f,h,k);if(e)Vc(a,!0),xk(this);else if(!this.le&&null===b&&!d.qj)return;var h=this.kb,l=this.Tb,m=Math.round(h.x*l)/l,n=Math.round(h.y*l)/l,d=this.ne;d.reset();1!==l&&d.scale(l);0===h.x&&0===h.y||d.translate(-m,-n);l=
this.sd;v.Rm?(c.width=c.width,Vc(a,!0),a.scale(l,l)):(a.setTransform(1,0,0,1,0,0),a.scale(l,l),a.clearRect(0,0,this.Eb,this.Jb));a.setTransform(1,0,0,1,0,0);a.scale(l,l);a.transform(d.m11,d.m12,d.m21,d.m22,d.dx,d.dy);c=null!==b?function(c){var d=a,e=b;if(c.visible&&0!==c.Rc){var f=c.wb.n,h=f.length;if(0!==h){1!==c.Rc&&(d.globalAlpha=c.Rc);c=c.Av;c.length=0;for(var l=k.scale,m=0;m<h;m++){var n=f[m];if(Wj(n)&&!e.contains(n)){if(n instanceof W){var z=n;z.jc&&c.push(z);if(!1===z.Mf)continue}z=n.V;1<z.width*
l||1<z.height*l?n.Xe(d,k):Yj(n,d)}}d.globalAlpha=1}}}:function(b){b.Xe(a,k)};hl(this,a);h=f.length;for(m=0;m<h;m++)a.setTransform(1,0,0,1,0,0),a.scale(l,l),a.transform(d.m11,d.m12,d.m21,d.m22,d.dx,d.dy),c(f[m]);this.Ck?this.Ck.Hl(this)&&this.Xx():this.Jq=function(){return new y(0,0)};e?(Vc(this.lf,!0),xk(this)):this.le=this.Ek=!1}};
function il(a,b,c,d,e){null===a.Kb&&v.k("No div specified");var f=a.zb;null===f&&v.k("No canvas specified");if(!a.Na.uc){var h=a.lf;if(a.le){gl(a);var k=a.sd;v.Rm?(f.width=f.width,Vc(h,!0)):(h.setTransform(1,0,0,1,0,0),h.clearRect(0,0,a.Eb*k,a.Jb*k));h.ot=!1;h.drawImage(a.Wx.zd,0<d?0:Math.round(-d),0<e?0:Math.round(-e));e=a.kb;var f=a.Tb,l=Math.round(e.x*f)/f,m=Math.round(e.y*f)/f;d=a.ne;d.reset();1!==f&&d.scale(f);0===e.x&&0===e.y||d.translate(-l,-m);h.save();h.beginPath();e=c.length;for(f=0;f<e;f++)l=
c[f],0!==l.width&&0!==l.height&&h.rect(Math.floor(l.x),Math.floor(l.y),Math.ceil(l.width),Math.ceil(l.height));h.clip();h.setTransform(1,0,0,1,0,0);h.scale(k,k);h.transform(d.m11,d.m12,d.m21,d.m22,d.dx,d.dy);c=a.Xb.n;e=c.length;a.zf(c,e,a);hl(a,h);for(f=0;f<e;f++)Zj(c[f],h,a,b);h.restore();Vc(h,!0);a.Ck?a.Ck.Hl(a)&&a.Xx():a.Jq=function(){return new y(0,0)};a.Ek=!1;a.le=!1;a.aA()}}}
function jl(a,b,c,d,e,f,h,k,l,m){null===a.Kb&&v.k("No div specified");null===a.zb&&v.k("No canvas specified");void 0===h&&(h=null);void 0===k&&(k=null);void 0===l&&(l=!1);void 0===m&&(m=!1);gl(a);Vc(a.lf,!0);xk(a);a.oy=!0;var n=new B(f.x,f.y,d.width/e,d.height/e),p=n.copy();p.ew(c);Zk(a,p);yk(a);var p=a.Xb.n,q=p.length;a.zf(p,q,a,n);n=a.sd;b.setTransform(1,0,0,1,0,0);b.scale(n,n);b.clearRect(0,0,d.width,d.height);null!==k&&""!==k&&(b.fillStyle=k,b.fillRect(0,0,d.width,d.height));d=v.qh();d.reset();
d.translate(c.left,c.top);d.scale(e);0===f.x&&0===f.y||d.translate(-f.x,-f.y);b.setTransform(d.m11,d.m12,d.m21,d.m22,d.dx,d.dy);v.$e(d);hl(a,b);if(null!==h){var r=new J(G);c=h.i;for(c.reset();c.next();)e=c.value,!1===m&&"Grid"===e.layer.name||null===e||r.add(e);c=function(c){var d=l;if(c.visible&&0!==c.Rc&&(void 0===d&&(d=!0),d||!c.Gc)){var d=c.wb.n,e=d.length;if(0!==e){1!==c.Rc&&(b.globalAlpha=c.Rc);c=c.Av;c.length=0;for(var f=a.scale,h=0;h<e;h++){var k=d[h];if(Wj(k)&&r.contains(k)){if(k instanceof
W){var m=k;m.jc&&c.push(m);if(!1===m.Mf)continue}m=k.V;1<m.width*f||1<m.height*f?k.Xe(b,a):Yj(k,b)}}b.globalAlpha=1}}}}else if(!l&&m){var s=a.lt.Y,t=s.layer;c=function(c){c===t?s.Xe(b,a):c.Xe(b,a,l,m)}}else c=function(c){c.Xe(b,a,l,m)};for(e=0;e<q;e++)c(p[e]);a.oy=!1;a.Ck?a.Ck.Hl(a)&&a.Xx():a.Jq=function(){return new y(0,0)};Vc(a.lf,!0);xk(a);a.zf(p,q,a);Zk(a)}E.prototype.getRenderingHint=E.prototype.$j=function(a){return this.Ej[a]};
E.prototype.setRenderingHint=E.prototype.xI=function(a,b){this.Ej[a]=b;this.Zw()};E.prototype.resetRenderingHints=E.prototype.FE=function(){this.Ej=new ta;this.Ej.drawShadows=!0;this.Ej.textGreeking=!0;this.Ej.viewportOptimizations=v.cE?!1:!0;this.Ej.temporaryPixelRatio=!0;this.Ej.pictureRatioOptimization=!0};function hl(a,b){var c=a.Ej;if(null!==c){if(void 0!==c.imageSmoothingEnabled){var d=!!c.imageSmoothingEnabled;b.ot=d;b.jK=d}c=c.defaultFont;void 0!==c&&null!==c&&(b.font=c)}}
E.prototype.getInputOption=E.prototype.$o=function(a){return this.Tn[a]};E.prototype.setInputOption=function(a,b){this.Tn[a]=b};E.prototype.resetInputOptions=E.prototype.EE=function(){this.Tn=new ta;this.Tn.extraTouchArea=10;this.Tn.extraTouchThreshold=10;this.Tn.hasGestureZoom=!0};E.prototype.setProperties=function(a){v.Wt(this,a)};function bl(a){if(0===a.la.sh&&0!==a.xk.count){for(;0<a.xk.count;){var b=a.xk;a.xk=new na(W,B);for(b=b.i;b.next();){var c=b.key;Bi(c,b.value);c.se()}}a.pa()}}
E.prototype.pa=function(a){void 0===a&&(a=null);if(null===a)this.le=!0,this.ve();else{var b=this.rb;null!==a&&a.G()&&b.yg(a)&&(this.le=!0,this.ve())}for(b=this.Bv.i;b.next();)b.value.pa(a)};
E.prototype.XD=function(a,b){if(!0!==this.le){this.le=!0;var c=!0===this.$j("temporaryPixelRatio");if(!0===this.$j("viewportOptimizations")&&this.fA!==kl&&this.ME.ww(0,0,0,0)&&b.width===a.width&&b.height===a.height){var d=this.scale,e=v.bg(),f=Math.max(a.x,b.x),h=Math.max(a.y,b.y),k=Math.min(a.x+a.width,b.x+b.width),l=Math.min(a.y+a.height,b.y+b.height);e.x=f;e.y=h;e.width=Math.max(0,k-f)*d;e.height=Math.max(0,l-h)*d;if(0<e.width&&0<e.height){if(!this.Md&&(this.Lf=!1,null!==this.Kb)){this.Md=!0;bl(this);
this.ae.G()||Dk(this,this.ah());var m=this.zb;if(null!==m){var n=this.sd,h=this.Eb*n,k=this.Jb*n,f=this.scale*n,d=Math.round(Math.round(b.x*f)-Math.round(a.x*f)),f=Math.round(Math.round(b.y*f)-Math.round(a.y*f)),l=this.Wx,p=this.yB;l.width!==h&&(l.width=h);l.height!==k&&(l.height=k);p.clearRect(0,0,h,k);var l=190*this.sd,q=70*this.sd,r=Math.max(d,0),s=Math.max(f,0),t=Math.floor(h-r),u=Math.floor(k-s);p.ot=!1;p.drawImage(m.zd,r,s,t,u,0,0,t,u);this.Ck.Hl(this)&&p.clearRect(0,0,l,q);var m=v.jb(),p=v.jb(),
u=Math.abs(d),t=Math.abs(f),w=0===r?0:h-u,r=v.Mb(w,0),u=v.Mb(u+w,k);p.push(new B(Math.min(r.x,u.x),Math.min(r.y,u.y),Math.abs(r.x-u.x),Math.abs(r.y-u.y)));var x=this.ne;x.reset();x.scale(n,n);1!==this.Tb&&x.scale(this.Tb);n=this.kb;(0!==n.x||0!==n.y)&&isFinite(n.x)&&isFinite(n.y)&&x.translate(-n.x,-n.y);Qa(r,x);Qa(u,x);m.push(new B(Math.min(r.x,u.x),Math.min(r.y,u.y),Math.abs(r.x-u.x),Math.abs(r.y-u.y)));w=0===s?0:k-t;r.m(0,w);u.m(h,t+w);p.push(new B(Math.min(r.x,u.x),Math.min(r.y,u.y),Math.abs(r.x-
u.x),Math.abs(r.y-u.y)));Qa(r,x);Qa(u,x);m.push(new B(Math.min(r.x,u.x),Math.min(r.y,u.y),Math.abs(r.x-u.x),Math.abs(r.y-u.y)));this.Ck.Hl(this)&&(h=0<d?0:-d,k=0<f?0:-f,r.m(h,k),u.m(l+h,q+k),p.push(new B(Math.min(r.x,u.x),Math.min(r.y,u.y),Math.abs(r.x-u.x),Math.abs(r.y-u.y))),Qa(r,x),Qa(u,x),m.push(new B(Math.min(r.x,u.x),Math.min(r.y,u.y),Math.abs(r.x-u.x),Math.abs(r.y-u.y))));v.v(r);v.v(u);Mk(this,!1);il(this,m,p,d,f);v.sa(m);v.sa(p);this.Md=!1}}}else this.Vf();v.Vb(e);c&&(this.Lj=1,this.Vf(),
this.Lj=null,this.aA())}else c?(this.Lj=1,this.Vf(),this.Lj=null,this.aA()):this.Vf()}};function Lk(a){!1===a.Rl&&(a.Rl=!0)}function xk(a){!1===a.Ek&&(a.Ek=!0)}function gl(a){!1!==a.Oq&&(a.Oq=!1,ll(a,a.Eb,a.Jb))}function ll(a,b,c){var d=a.zb,e=a.sd,f=b*e,e=c*e;if(d.width!==f||d.height!==e)d.width=f,d.height=e,d.style.width=b+"px",d.style.height=c+"px",a.le=!0,Vc(a.lf,!0)}function bh(a){var b=a.Eb,c=a.Jb;a=a.zb.getBoundingClientRect();return v.Mb(b/a.width*a.left,c/a.height*a.top)}
function wk(a){var b=a.zb;if(null===b)return!0;var c=a.Kb,d=a.Eb,e=a.Jb,f=a.UC.copy();if(!f.G())return!0;var h=!1,k=a.Bk?a.wd:0,l=a.oj?a.wd:0,m=c.clientWidth||d+k,c=c.clientHeight||e+l;if(m!==d+k||c!==e+l)a.Bk=!1,a.oj=!1,l=k=0,a.Eb=m,a.Jb=c,h=a.Oq=!0;a.Rl=!1;var n=a.rb,p=a.ae,m=p.width,c=p.height,q=n.width,r=n.height,s=p.x,t=n.x,u=p.right,w=n.right+k,x=p.y,z=n.y,p=p.bottom,n=n.bottom+l,A="1px",H="1px",C=a.scale;a.fA===fk&&m<q+k&&c<r+l||(a.wz&&a.oe&&(A=1,s+1<t&&(A=Math.max((t-s)*C+a.Eb,A)),u>w+1&&
(A=Math.max((u-w)*C+a.Eb,A)),q+k+1<m&&(A=Math.max((m-q+k)*C+a.Eb,A)),A+="px"),a.xz&&a.pe&&(H=1,x+1<z&&(H=Math.max((z-x)*C+a.Jb,H)),p>n+1&&(H=Math.max((p-n)*C+a.Jb,H)),r+l+1<c&&(H=Math.max((c-r+l)*C+a.Jb,H)),H+="px"));k="1px"!==A;l="1px"!==H;k&&l||!k&&!l||(l&&(w-=a.wd),k&&(n-=a.wd),a.wz&&a.oe&&(A=1,s+1<t&&(A=Math.max((t-s)*C+a.Eb,A)),u>w+1&&(A=Math.max((u-w)*C+a.Eb,A)),q+1<m&&(A=Math.max((m-q)*C+a.Eb,A)),A+="px"),k="1px"!==A,l=k!==a.oj?a.Jb-a.wd:a.Jb,a.xz&&a.pe&&(H=1,x+1<z&&(H=Math.max((z-x)*C+l,H)),
p>n+1&&(H=Math.max((p-n)*C+l,H)),r+1<c&&(H=Math.max((c-r)*C+l,H)),H+="px"),l="1px"!==H);if(a.Kv&&k===a.oj&&l===a.Bk)return d===a.Eb&&e===a.Jb||a.Vf(),!1;k!==a.oj&&(a.Jb="1px"===A?a.Jb+a.wd:Math.max(a.Jb-a.wd,1),h=!0);a.oj=k;a.bs.style.width=A;l!==a.Bk&&(a.Eb="1px"===H?a.Eb+a.wd:Math.max(a.Eb-a.wd,1),h=!0,a.TB&&(k=v.L(),l?(b.style.left=a.wd+"px",a.position=k.m(a.kb.x+a.wd/a.scale,a.kb.y)):(b.style.left="0px",a.position=k.m(a.kb.x-a.wd/a.scale,a.kb.y)),v.v(k)));a.Bk=l;a.bs.style.height=H;b=a.Ov;a.wz&&
a.oe&&(q+1<m?b.scrollLeft=(a.position.x-s)*C:s+1<t?b.scrollLeft=b.scrollWidth-b.clientWidth:u>w+1&&(b.scrollLeft=a.position.x*C));a.xz&&a.pe&&(r+1<c?b.scrollTop=(a.position.y-x)*C:x+1<z?b.scrollTop=b.scrollHeight-b.clientHeight:p>n+1&&(b.scrollTop=a.position.y*C));h&&(a.Oq=!0);m=a.Eb;c=a.Jb;b.style.width=m+(a.Bk?a.wd:0)+"px";b.style.height=c+(a.oj?a.wd:0)+"px";a.Fy=!1;return d!==m||e!==c||a.Na.uc?(n=a.rb,a.Kt(f,n,h),!1):!0}
E.prototype.add=E.prototype.add=function(a){v.A(a,R,E,"add:part");var b=a.g;if(b!==this){null!==b&&v.k("Cannot add part "+a.toString()+" to "+this.toString()+". It is already a part of "+b.toString());this.Qp&&(a.Ik="Tool");var c=a.Uf,b=this.ct(c);null===b&&(b=this.ct(""));null===b&&v.k('Cannot add a Part when unable find a Layer named "'+c+'" and there is no default Layer');a.layer!==b&&(c=b.dp(99999999,a,a.g===this),0<=c&&this.Lc(Cf,"parts",b,null,a,null,c),b.Gc||this.pc(),a.H(ml),c=a.yt,null!==
c&&c(a,null,b))}};
E.prototype.dp=function(a){if(a instanceof S){if(this.lo.add(a),a instanceof V){var b=a.Sa;null===b?this.Uk.add(a):b.io.add(a);b=a.Pb;null!==b&&(b.g=this)}}else a instanceof W?this.co.add(a):a instanceof Tg||this.wb.add(a);var c=this;nl(a,function(a){ol(c,a)});a.Gb&&a.P();b=a.data;null!==b&&(a instanceof Tg||(a instanceof W?this.wk.add(b,a):this.mi.add(b,a)),nl(a,function(a){pl(c,a)}));!0!==el(a)&&!0!==fl(a)||this.gg.add(a);ql(a,!0,this);rl(a)?(a.V.G()&&this.pa(ak(a,a.V)),this.pc()):a.isVisible()&&
a.V.G()&&this.pa(ak(a,a.V));this.ve()};
E.prototype.Me=function(a){a.Us();if(a instanceof S){if(this.lo.remove(a),a instanceof V){var b=a.Sa;null===b?this.Uk.remove(a):b.io.remove(a);b=a.Pb;null!==b&&(b.g=null)}}else a instanceof W?this.co.remove(a):a instanceof Tg||this.wb.remove(a);var c=this;nl(a,function(a){sl(c,a)});b=a.data;null!==b&&(a instanceof Tg||(a instanceof W?this.wk.remove(b):this.mi.remove(b)),nl(a,function(a){tl(c,a)}));this.gg.remove(a);rl(a)?(a.V.G()&&this.pa(ak(a,a.V)),this.pc()):a.isVisible()&&a.V.G()&&this.pa(ak(a,
a.V));this.ve()};E.prototype.remove=E.prototype.remove=function(a){v.A(a,R,E,"remove:part");a.hb=!1;a.gh=!1;var b=a.layer;if(null!==b&&b.g===this){a.H(ul);a.Km();var c=b.Me(-1,a,!1);0<=c&&this.Lc(Df,"parts",b,a,null,c,null);c=a.yt;null!==c&&c(a,b,null)}};E.prototype.removeParts=E.prototype.cA=function(a,b){if(v.isArray(a))for(var c=v.Va(a),d=0;d<c;d++){var e=v.Pa(a,d);b&&!e.canDelete()||this.remove(e)}else for(e=new J(R),e.Tc(a),c=e.i;c.next();)e=c.value,b&&!e.canDelete()||this.remove(e)};
E.prototype.copyParts=E.prototype.Qo=function(a,b,c){return this.nb.Qo(a,b,c)};E.prototype.moveParts=E.prototype.moveParts=function(a,b,c){v.A(b,y,E,"moveParts:offset");var d=this.Za;if(null!==d){d=d.be;null===d&&(d=new Xg,d.Mc(this));var e=new na(R,Object);if(null!==a)a=a.i;else{for(a=this.dk;a.next();)uh(d,e,a.value,c);for(a=this.Bg;a.next();)uh(d,e,a.value,c);a=this.links}for(;a.next();)uh(d,e,a.value,c);d.moveParts(e,b,c)}};
function vl(a,b,c){v.A(b,Vf,E,"addLayer:layer");null!==b.g&&b.g!==a&&v.k("Cannot share a Layer with another Diagram: "+b+" of "+b.g);null===c?null!==b.g&&v.k("Cannot add an existing Layer to this Diagram again: "+b):(v.A(c,Vf,E,"addLayer:existingLayer"),c.g!==a&&v.k("Existing Layer must be in this Diagram: "+c+" not in "+c.g),b===c&&v.k("Cannot move a Layer before or after itself: "+b));if(b.g!==a){b=b.name;a=a.Xb;c=a.count;for(var d=0;d<c;d++)a.da(d).name===b&&v.k("Cannot add Layer with the name '"+
b+"'; a Layer with the same name is already present in this Diagram.")}}E.prototype.addLayer=E.prototype.Ms=function(a){vl(this,a,null);a.Mc(this);var b=this.Xb,c=b.count-1;if(!a.Gc)for(;0<=c&&b.da(c).Gc;)c--;b.Cd(c+1,a);null!==this.Xd&&this.Lc(Cf,"layers",this,null,a,null,c+1);this.pa();this.pc()};
E.prototype.addLayerBefore=E.prototype.ZF=function(a,b){vl(this,a,b);a.Mc(this);var c=this.Xb,d=c.indexOf(a);0<=d&&(c.remove(a),null!==this.Xd&&this.Lc(Df,"layers",this,a,null,d,null));for(var e=c.count,f=0;f<e;f++)if(c.da(f)===b){c.Cd(f,a);break}null!==this.Xd&&this.Lc(Cf,"layers",this,null,a,null,f);this.pa();0>d&&this.pc()};
E.prototype.addLayerAfter=function(a,b){vl(this,a,b);a.Mc(this);var c=this.Xb,d=c.indexOf(a);0<=d&&(c.remove(a),null!==this.Xd&&this.Lc(Df,"layers",this,a,null,d,null));for(var e=c.count,f=0;f<e;f++)if(c.da(f)===b){c.Cd(f+1,a);break}null!==this.Xd&&this.Lc(Cf,"layers",this,null,a,null,f+1);this.pa();0>d&&this.pc()};
E.prototype.removeLayer=function(a){v.A(a,Vf,E,"removeLayer:layer");a.g!==this&&v.k("Cannot remove a Layer from another Diagram: "+a+" of "+a.g);if(""!==a.name){var b=this.Xb,c=b.indexOf(a);if(b.remove(a)){for(b=a.wb.copy().i;b.next();){var d=b.value,e=d.Uf;d.Uf=e!==a.name?e:""}null!==this.Xd&&this.Lc(Df,"layers",this,a,null,c,null);this.pa();this.pc()}}};E.prototype.findLayer=E.prototype.ct=function(a){for(var b=this.Nw;b.next();){var c=b.value;if(c.name===a)return c}return null};
E.prototype.addModelChangedListener=E.prototype.aG=function(a){v.j(a,"function",E,"addModelChangedListener:listener");null===this.Sg&&(this.Sg=new I("function"));this.Sg.add(a);this.ba.xm(a)};E.prototype.removeModelChangedListener=function(a){v.j(a,"function",E,"removeModelChangedListener:listener");null!==this.Sg&&(this.Sg.remove(a),0===this.Sg.count&&(this.Sg=null));this.ba.Nt(a)};
E.prototype.addChangedListener=E.prototype.xm=function(a){v.j(a,"function",E,"addChangedListener:listener");null===this.gi&&(this.gi=new I("function"));this.gi.add(a)};E.prototype.removeChangedListener=E.prototype.Nt=function(a){v.j(a,"function",E,"removeChangedListener:listener");null!==this.gi&&(this.gi.remove(a),0===this.gi.count&&(this.gi=null))};
E.prototype.mw=function(a){this.tb||this.la.TD(a);a.wc!==Bf&&(this.$h=!0);if(null!==this.gi){var b=this.gi,c=b.length;if(1===c)b=b.da(0),b(a);else if(0!==c)for(var d=b.dc(),e=0;e<c;e++)b=d[e],b(a)}};E.prototype.raiseChangedEvent=E.prototype.Lc=function(a,b,c,d,e,f,h){void 0===f&&(f=null);void 0===h&&(h=null);var k=new zf;k.g=this;k.wc=a;k.propertyName=b;k.object=c;k.oldValue=d;k.Cg=f;k.newValue=e;k.Ag=h;this.mw(k)};
E.prototype.raiseChanged=E.prototype.h=function(a,b,c,d,e){this.Lc(Af,a,this,b,c,d,e)};v.u(E,{Na:"animationManager"},function(){return this.MA});v.u(E,{la:"undoManager"},function(){return this.Xd.la});v.defineProperty(E,{tb:"skipsUndoManager"},function(){return this.Ii},function(a){v.j(a,"boolean",E,"skipsUndoManager");this.Ii=a;this.Xd.Ii=a});v.defineProperty(E,{kz:"delaysLayout"},function(){return this.Sx},function(a){this.Sx=a});
E.prototype.Cm=function(a,b){if(null!==a&&a.g===this){var c=this.xe;try{this.xe=!0;var d=a.wc,e;if(d===Af){var f=a.object,h=a.propertyName,k=a.ja(b);v.Ja(f,h,k);if(f instanceof G){var l,m=f.Y;null!==m&&m.Qd()}this.$h=!0}else if(d===Cf){var n=a.object,p=a.Ag,f=a.newValue;if(n instanceof D)if("number"===typeof p&&f instanceof G){l=f;var q=n;b?q.Me(p):q.Cd(p,l);m=n.Y;null!==m&&m.Qd()}else{if("number"===typeof p&&f instanceof tg){var r=f,q=n;b?r.ee?q.DE(p):q.zE(p):(e=r.ee?q.Bd(r.index):q.Ad(r.index),
e.Ys(r))}}else if(n instanceof Vf){var s=!0===a.Cg;if("number"===typeof p&&f instanceof R){var m=f,t=n;b?(m.Qd(),t.Me(s?p:-1,m,s)):t.dp(p,m,s)}}else if(n instanceof E){if("number"===typeof p&&f instanceof Vf){var u=f;b?this.Xb.Vc(p):(d=u,d.Mc(this),this.Xb.Cd(p,d))}}else v.k("unknown ChangedEvent.Insert object: "+a.toString());this.$h=!0}else d===Df?(n=a.object,p=a.Cg,f=a.oldValue,n instanceof D?"number"===typeof p&&f instanceof G?(q=n,b?q.Cd(p,f):q.Me(p)):"number"===typeof p&&f instanceof tg&&(r=
f,q=n,b?(e=r.ee?q.Bd(r.index):q.Ad(r.index),e.Ys(r)):r.ee?q.DE(p):q.zE(p)):n instanceof Vf?(s=!0===a.Ag,"number"===typeof p&&f instanceof R&&(m=f,t=n,b?t.dp(p,m,s):(m.Qd(),t.Me(s?p:-1,m,s)))):n instanceof E?"number"===typeof p&&f instanceof Vf&&(u=f,b?(d=u,d.Mc(this),this.Xb.Cd(p,d)):this.Xb.Vc(p)):v.k("unknown ChangedEvent.Remove object: "+a.toString()),this.$h=!0):d!==Bf&&v.k("unknown ChangedEvent: "+a.toString())}finally{this.xe=c}}};E.prototype.startTransaction=E.prototype.Qb=function(a){return this.la.Qb(a)};
E.prototype.commitTransaction=E.prototype.yd=function(a){return this.la.yd(a)};E.prototype.rollbackTransaction=E.prototype.zp=function(){return this.la.zp()};E.prototype.updateAllTargetBindings=E.prototype.nF=function(a){void 0===a&&(a="");for(var b=this.dk;b.next();)b.value.Hb(a);for(b=this.Bg;b.next();)b.value.Hb(a);for(b=this.links;b.next();)b.value.Hb(a)};
E.prototype.updateAllRelationshipsFromData=E.prototype.QI=function(){if(0<arguments.length){for(var a=this.ba,b=new J,c=a.Zf,d=0;d<c.length;d++){var e=c[d];b.add(e)}var f=[];this.Bg.each(function(a){null===a.data||b.contains(a.data)||f.push(a.data)});this.dk.each(function(a){null===a.data||b.contains(a.data)||f.push(a.data)});f.forEach(function(b){og(a,b,!1)});for(d=0;d<c.length;d++){var e=c[d],h=this.eh(e);null===h&&ng(a,e,!1)}if(a instanceof Q){for(var k=new J,c=a.zg,d=0;d<c.length;d++)e=c[d],k.add(e);
var l=[];this.links.each(function(a){null===a.data||k.contains(a.data)||l.push(a.data)});l.forEach(function(b){yg(a,b,!1)});for(d=0;d<c.length;d++)e=c[d],h=this.Qf(e),null===h&&xg(a,e,!1)}}for(d=this.dk;d.next();)h=d.value,h.updateRelationshipsFromData();for(d=this.Bg;d.next();)d.value.updateRelationshipsFromData();for(d=this.links;d.next();)h=d.value,h.updateRelationshipsFromData()};
function wl(a,b,c){if(a.Pc||a.Md)a.Tb=c,c=a.Na,c.uc&&Vj(c,b,a.Tb);else if(a.Pc=!0,null===a.zb)a.Tb=c;else{var d=a.rb.copy(),e=a.Eb,f=a.Jb;d.width=a.Eb/b;d.height=a.Jb/b;var h=a.Il.x,k=a.Il.y,l=a.sD;isNaN(h)&&(l.Vi()?l.bp(Hb)?h=0:l.bp(Nb)&&(h=e-1):h=l.cd()?l.x*(e-1):e/2);isNaN(k)&&(l.Vi()?l.bp(Gb)?k=0:l.bp(Ob)&&(k=f-1):k=l.cd()?l.y*(f-1):f/2);null!==a.LE&&(c=a.LE(a,c));c<a.ih&&(c=a.ih);c>a.hh&&(c=a.hh);e=v.Mb(a.kb.x+h/b-h/c,a.kb.y+k/b-k/c);a.position=e;v.v(e);a.Tb=c;a.Kt(d,a.rb);a.Pc=!1;Ak(a,!1);c=
a.Na;c.uc&&Vj(c,b,a.Tb);a.pa();Lk(a)}}E.prototype.Kt=function(a,b,c){if(!a.K(b)){void 0===c&&(c=!1);c||Lk(this);xk(this);var d=this.Pb;null===d||!d.Kw||this.al!==Yg||c||a.width===b.width&&a.height===b.height||d.H();d=this.Wa;!0===this.Tl&&d instanceof Rg&&(this.N.ca=this.lF(this.N.jf),Dj(d,this));this.Pc||this.XD(a,b);Zk(this);this.Ba("ViewportBoundsChanged",c?v.th:null,a)}};
function Zk(a,b){void 0===b&&(b=null);var c=a.jd;if(null!==c&&c.visible){for(var d=v.Fl(),e=1,f=1,h=c.ya.n,k=h.length,l=0;l<k;l++){var m=h[l],n=m.interval;2>n||(xl(m.Ab)?f=f*n/pe(f,n):e=e*n/pe(e,n))}h=c.Dw;d.m(f*h.width,e*h.height);h=f=l=k=0;if(null!==b)k=b.width,l=b.height,f=b.x,h=b.y;else{e=v.bg();f=a.rb;e.m(f.x,f.y,f.width,f.height);for(h=a.Bv.i;h.next();)f=h.value.rb,f.G()&&ab(e,f.x,f.y,f.width,f.height);if(!e.G()){v.Vb(e);return}k=e.width;l=e.height;f=e.x;h=e.y;v.Vb(e)}c.width=k+2*d.width;c.height=
l+2*d.height;e=v.L();Pa(f,h,0,0,d.width,d.height,e);e.offset(-d.width,-d.height);v.Yj(d);c.Y.location=e;v.v(e)}}E.prototype.clearSelection=E.prototype.nw=function(){var a=0<this.selection.count;a&&this.Ba("ChangingSelection");Wg(this);a&&this.Ba("ChangedSelection")};function Wg(a){a=a.selection;if(0<a.count){for(var b=a.dc(),c=b.length,d=0;d<c;d++)b[d].hb=!1;a.Oa();a.clear();a.freeze()}}
E.prototype.select=E.prototype.select=function(a){null!==a&&(v.A(a,R,E,"select:part"),a.layer.g===this&&(!a.hb||1<this.selection.count)&&(this.Ba("ChangingSelection"),Wg(this),a.hb=!0,this.Ba("ChangedSelection")))};
E.prototype.selectCollection=E.prototype.QE=function(a){this.Ba("ChangingSelection");Wg(this);if(v.isArray(a))for(var b=v.Va(a),c=0;c<b;c++){var d=v.Pa(a,c);d instanceof R||v.k("Diagram.selectCollection given something that is not a Part: "+d);d.hb=!0}else for(a=a.i;a.next();)d=a.value,d instanceof R||v.k("Diagram.selectCollection given something that is not a Part: "+d),d.hb=!0;this.Ba("ChangedSelection")};
E.prototype.clearHighlighteds=E.prototype.kD=function(){var a=this.Pm;if(0<a.count){for(var b=a.dc(),c=b.length,d=0;d<c;d++)b[d].gh=!1;a.Oa();a.clear();a.freeze()}};E.prototype.highlight=function(a){null!==a&&a.layer.g===this&&(v.A(a,R,E,"highlight:part"),!a.gh||1<this.Pm.count)&&(this.kD(),a.gh=!0)};
E.prototype.highlightCollection=function(a){this.kD();if(v.isArray(a))for(var b=v.Va(a),c=0;c<b;c++){var d=v.Pa(a,c);d instanceof R||v.k("Diagram.highlightCollection given something that is not a Part: "+d);d.gh=!0}else for(a=a.i;a.next();)d=a.value,d instanceof R||v.k("Diagram.highlightCollection given something that is not a Part: "+d),d.gh=!0};
E.prototype.scroll=E.prototype.scroll=function(a,b,c){void 0===c&&(c=1);var d="up"===b||"down"===b,e=0;if("pixel"===a)e=c;else if("line"===a)e=c*(d?this.Tt:this.St);else if("page"===a)a=d?this.rb.height:this.rb.width,a*=this.scale,0!==a&&(e=Math.max(a-(d?this.Tt:this.St),0),e*=c);else{if("document"===a){e=this.ae;d=this.rb;c=v.L();"up"===b?this.position=c.m(d.x,e.y):"left"===b?this.position=c.m(e.x,d.y):"down"===b?this.position=c.m(d.x,e.bottom-d.height):"right"===b&&(this.position=c.m(e.right-d.width,
d.y));v.v(c);return}v.k("scrolling unit must be 'pixel', 'line', 'page', or 'document', not: "+a)}e/=this.scale;c=this.position.copy();"up"===b?c.y=this.position.y-e:"down"===b?c.y=this.position.y+e:"left"===b?c.x=this.position.x-e:"right"===b?c.x=this.position.x+e:v.k("scrolling direction must be 'up', 'down', 'left', or 'right', not: "+b);this.position=c};E.prototype.scrollToRect=E.prototype.rI=function(a){var b=this.rb;b.Vj(a)||(a=a.bl,a.x-=b.width/2,a.y-=b.height/2,this.position=a)};
E.prototype.centerRect=E.prototype.iG=function(a){var b=this.rb;a=a.bl;a.x-=b.width/2;a.y-=b.height/2;this.position=a};E.prototype.transformDocToView=E.prototype.jF=function(a){var b=this.ne;b.reset();1!==this.Tb&&b.scale(this.Tb);var c=this.kb;(0!==c.x||0!==c.y)&&isFinite(c.x)&&isFinite(c.y)&&b.translate(-c.x,-c.y);return a.copy().transform(this.ne)};
E.prototype.transformViewToDoc=E.prototype.lF=function(a){var b=this.ne;b.reset();1!==this.Tb&&b.scale(this.Tb);var c=this.kb;(0!==c.x||0!==c.y)&&isFinite(c.x)&&isFinite(c.y)&&b.translate(-c.x,-c.y);return Qa(a.copy(),this.ne)};var Yg;E.None=Yg=v.p(E,"None",0);var Ek;E.Uniform=Ek=v.p(E,"Uniform",1);var Fk;E.UniformToFill=Fk=v.p(E,"UniformToFill",2);var $h;E.CycleAll=$h=v.p(E,"CycleAll",10);var di;E.CycleNotDirected=di=v.p(E,"CycleNotDirected",11);var fi;
E.CycleNotDirectedFast=fi=v.p(E,"CycleNotDirectedFast",12);var ri;E.CycleNotUndirected=ri=v.p(E,"CycleNotUndirected",13);var ai;E.CycleDestinationTree=ai=v.p(E,"CycleDestinationTree",14);var ci;E.CycleSourceTree=ci=v.p(E,"CycleSourceTree",15);var fk;E.DocumentScroll=fk=v.p(E,"DocumentScroll",1);var kl;E.InfiniteScroll=kl=v.p(E,"InfiniteScroll",2);var hk;E.TreeParentCollapsed=hk=v.p(E,"TreeParentCollapsed",1);E.AllParentsCollapsed=v.p(E,"AllParentsCollapsed",2);
v.defineProperty(E,{RI:"validCycle"},function(){return this.aw},function(a){var b=this.aw;b!==a&&(v.pb(a,E,E,"validCycle"),this.aw=a,this.h("validCycle",b,a))});v.u(E,{Nw:"layers"},function(){return this.Xb.i});v.defineProperty(E,{wf:"isModelReadOnly"},function(){var a=this.Xd;return null===a?!1:a.ab},function(a){var b=this.Xd;null!==b&&(b.ab=a)});
v.defineProperty(E,{ab:"isReadOnly"},function(){return this.ui},function(a){var b=this.ui;b!==a&&(v.j(a,"boolean",E,"isReadOnly"),this.ui=a,this.h("isReadOnly",b,a))});v.defineProperty(E,{isEnabled:"isEnabled"},function(){return this.Re},function(a){var b=this.Re;b!==a&&(v.j(a,"boolean",E,"isEnabled"),this.Re=a,this.h("isEnabled",b,a))});
v.defineProperty(E,{Wy:"allowClipboard"},function(){return this.lu},function(a){var b=this.lu;b!==a&&(v.j(a,"boolean",E,"allowClipboard"),this.lu=a,this.h("allowClipboard",b,a))});v.defineProperty(E,{Tj:"allowCopy"},function(){return this.hk},function(a){var b=this.hk;b!==a&&(v.j(a,"boolean",E,"allowCopy"),this.hk=a,this.h("allowCopy",b,a))});
v.defineProperty(E,{ym:"allowDelete"},function(){return this.ik},function(a){var b=this.ik;b!==a&&(v.j(a,"boolean",E,"allowDelete"),this.ik=a,this.h("allowDelete",b,a))});v.defineProperty(E,{Rs:"allowDragOut"},function(){return this.mu},function(a){var b=this.mu;b!==a&&(v.j(a,"boolean",E,"allowDragOut"),this.mu=a,this.h("allowDragOut",b,a))});
v.defineProperty(E,{cD:"allowDrop"},function(){return this.nu},function(a){var b=this.nu;b!==a&&(v.j(a,"boolean",E,"allowDrop"),this.nu=a,this.h("allowDrop",b,a))});v.defineProperty(E,{jw:"allowTextEdit"},function(){return this.rk},function(a){var b=this.rk;b!==a&&(v.j(a,"boolean",E,"allowTextEdit"),this.rk=a,this.h("allowTextEdit",b,a))});
v.defineProperty(E,{gw:"allowGroup"},function(){return this.jk},function(a){var b=this.jk;b!==a&&(v.j(a,"boolean",E,"allowGroup"),this.jk=a,this.h("allowGroup",b,a))});v.defineProperty(E,{kw:"allowUngroup"},function(){return this.sk},function(a){var b=this.sk;b!==a&&(v.j(a,"boolean",E,"allowUngroup"),this.sk=a,this.h("allowUngroup",b,a))});
v.defineProperty(E,{Jo:"allowInsert"},function(){return this.pu},function(a){var b=this.pu;b!==a&&(v.j(a,"boolean",E,"allowInsert"),this.pu=a,this.h("allowInsert",b,a))});v.defineProperty(E,{Ss:"allowLink"},function(){return this.kk},function(a){var b=this.kk;b!==a&&(v.j(a,"boolean",E,"allowLink"),this.kk=a,this.h("allowLink",b,a))});
v.defineProperty(E,{zm:"allowRelink"},function(){return this.mk},function(a){var b=this.mk;b!==a&&(v.j(a,"boolean",E,"allowRelink"),this.mk=a,this.h("allowRelink",b,a))});v.defineProperty(E,{$k:"allowMove"},function(){return this.lk},function(a){var b=this.lk;b!==a&&(v.j(a,"boolean",E,"allowMove"),this.lk=a,this.h("allowMove",b,a))});
v.defineProperty(E,{hw:"allowReshape"},function(){return this.nk},function(a){var b=this.nk;b!==a&&(v.j(a,"boolean",E,"allowReshape"),this.nk=a,this.h("allowReshape",b,a))});v.defineProperty(E,{Ts:"allowResize"},function(){return this.ok},function(a){var b=this.ok;b!==a&&(v.j(a,"boolean",E,"allowResize"),this.ok=a,this.h("allowResize",b,a))});
v.defineProperty(E,{iw:"allowRotate"},function(){return this.pk},function(a){var b=this.pk;b!==a&&(v.j(a,"boolean",E,"allowRotate"),this.pk=a,this.h("allowRotate",b,a))});v.defineProperty(E,{of:"allowSelect"},function(){return this.qk},function(a){var b=this.qk;b!==a&&(v.j(a,"boolean",E,"allowSelect"),this.qk=a,this.h("allowSelect",b,a))});
v.defineProperty(E,{dD:"allowUndo"},function(){return this.qu},function(a){var b=this.qu;b!==a&&(v.j(a,"boolean",E,"allowUndo"),this.qu=a,this.h("allowUndo",b,a))});v.defineProperty(E,{lw:"allowZoom"},function(){return this.su},function(a){var b=this.su;b!==a&&(v.j(a,"boolean",E,"allowZoom"),this.su=a,this.h("allowZoom",b,a))});
v.defineProperty(E,{xz:"hasVerticalScrollbar"},function(){return this.Zu},function(a){var b=this.Zu;b!==a&&(v.j(a,"boolean",E,"hasVerticalScrollbar"),this.Zu=a,Lk(this),this.pa(),this.h("hasVerticalScrollbar",b,a),Ak(this,!1))});v.defineProperty(E,{wz:"hasHorizontalScrollbar"},function(){return this.Yu},function(a){var b=this.Yu;b!==a&&(v.j(a,"boolean",E,"hasHorizontalScrollbar"),this.Yu=a,Lk(this),this.pa(),this.h("hasHorizontalScrollbar",b,a),Ak(this,!1))});
v.defineProperty(E,{oe:"allowHorizontalScroll"},function(){return this.ou},function(a){var b=this.ou;b!==a&&(v.j(a,"boolean",E,"allowHorizontalScroll"),this.ou=a,this.h("allowHorizontalScroll",b,a),Ak(this,!1))});v.defineProperty(E,{pe:"allowVerticalScroll"},function(){return this.ru},function(a){var b=this.ru;b!==a&&(v.j(a,"boolean",E,"allowVerticalScroll"),this.ru=a,this.h("allowVerticalScroll",b,a),Ak(this,!1))});
v.defineProperty(E,{St:"scrollHorizontalLineChange"},function(){return this.Lv},function(a){var b=this.Lv;b!==a&&(v.j(a,"number",E,"scrollHorizontalLineChange"),0>a&&v.va(a,">= 0",E,"scrollHorizontalLineChange"),this.Lv=a,this.h("scrollHorizontalLineChange",b,a))});
v.defineProperty(E,{Tt:"scrollVerticalLineChange"},function(){return this.Pv},function(a){var b=this.Pv;b!==a&&(v.j(a,"number",E,"scrollVerticalLineChange"),0>a&&v.va(a,">= 0",E,"scrollVerticalLineChange"),this.Pv=a,this.h("scrollVerticalLineChange",b,a))});v.defineProperty(E,{N:"lastInput"},function(){return this.Nb},function(a){this.Nb=a});v.defineProperty(E,{yc:"firstInput"},function(){return this.si},function(a){this.si=a});
v.defineProperty(E,{Zb:"currentCursor"},function(){return this.Fu},function(a){""===a&&(a=this.uq);this.Fu!==a&&(v.j(a,"string",E,"currentCursor"),null!==this.zb&&(this.Fu=a,this.zb.style.cursor=a,this.Kb.style.cursor=a))});v.defineProperty(E,{AJ:"defaultCursor"},function(){return this.uq},function(a){""===a&&(a="auto");var b=this.uq;b!==a&&(v.j(a,"string",E,"defaultCursor"),this.uq=a,this.h("defaultCursor",b,a))});
v.defineProperty(E,{click:"click"},function(){return this.hi},function(a){var b=this.hi;b!==a&&(null!==a&&v.j(a,"function",E,"click"),this.hi=a,this.h("click",b,a))});v.defineProperty(E,{$s:"doubleClick"},function(){return this.qi},function(a){var b=this.qi;b!==a&&(null!==a&&v.j(a,"function",E,"doubleClick"),this.qi=a,this.h("doubleClick",b,a))});
v.defineProperty(E,{cz:"contextClick"},function(){return this.ki},function(a){var b=this.ki;b!==a&&(null!==a&&v.j(a,"function",E,"contextClick"),this.ki=a,this.h("contextClick",b,a))});v.defineProperty(E,{Pz:"mouseOver"},function(){return this.Di},function(a){var b=this.Di;b!==a&&(null!==a&&v.j(a,"function",E,"mouseOver"),this.Di=a,this.h("mouseOver",b,a))});
v.defineProperty(E,{Oz:"mouseHover"},function(){return this.Ci},function(a){var b=this.Ci;b!==a&&(null!==a&&v.j(a,"function",E,"mouseHover"),this.Ci=a,this.h("mouseHover",b,a))});v.defineProperty(E,{Nz:"mouseHold"},function(){return this.Bi},function(a){var b=this.Bi;b!==a&&(null!==a&&v.j(a,"function",E,"mouseHold"),this.Bi=a,this.h("mouseHold",b,a))});
v.defineProperty(E,{TH:"mouseDragOver"},function(){return this.uv},function(a){var b=this.uv;b!==a&&(null!==a&&v.j(a,"function",E,"mouseDragOver"),this.uv=a,this.h("mouseDragOver",b,a))});v.defineProperty(E,{Mz:"mouseDrop"},function(){return this.Ai},function(a){var b=this.Ai;b!==a&&(null!==a&&v.j(a,"function",E,"mouseDrop"),this.Ai=a,this.h("mouseDrop",b,a))});
v.defineProperty(E,{uA:"toolTip"},function(){return this.Ji},function(a){var b=this.Ji;b!==a&&(null!==a&&v.A(a,Tg,E,"toolTip"),this.Ji=a,this.h("toolTip",b,a))});v.defineProperty(E,{contextMenu:"contextMenu"},function(){return this.li},function(a){var b=this.li;b!==a&&(null!==a&&v.A(a,Tg,E,"contextMenu"),this.li=a,this.h("contextMenu",b,a))});
v.defineProperty(E,{nb:"commandHandler"},function(){return this.Lx},function(a){var b=this.Lx;b!==a&&(v.A(a,Xf,E,"commandHandler"),null!==a.g&&v.k("Cannot share CommandHandlers between Diagrams: "+a.toString()),null!==b&&b.Mc(null),this.Lx=a,a.Mc(this))});v.defineProperty(E,{Za:"toolManager"},function(){return this.Oy},function(a){var b=this.Oy;b!==a&&(v.A(a,Rg,E,"toolManager"),null!==a.g&&v.k("Cannot share ToolManagers between Diagrams: "+a.toString()),null!==b&&b.Mc(null),this.Oy=a,a.Mc(this))});
v.defineProperty(E,{Zs:"defaultTool"},function(){return this.Rx},function(a){var b=this.Rx;b!==a&&(v.A(a,Wf,E,"defaultTool"),this.Rx=a,this.Wa===b&&(this.Wa=a))});v.defineProperty(E,{Wa:"currentTool"},function(){return this.Px},function(a){var b=this.Px;null!==b&&(b.qa&&b.doDeactivate(),b.cancelWaitAfter(),b.doStop());null===a&&(a=this.Zs);null!==a&&(v.A(a,Wf,E,"currentTool"),this.Px=a,a.Mc(this),a.doStart())});v.u(E,{selection:"selection"},function(){return this.Rv});
v.defineProperty(E,{LH:"maxSelectionCount"},function(){return this.qv},function(a){var b=this.qv;if(b!==a)if(v.j(a,"number",E,"maxSelectionCount"),0<=a&&!isNaN(a)){if(this.qv=a,this.h("maxSelectionCount",b,a),!this.la.ib&&(a=this.selection.count-a,0<a)){this.Ba("ChangingSelection");for(var b=this.selection.dc(),c=0;c<a;c++)b[c].hb=!1;this.Ba("ChangedSelection")}}else v.va(a,">= 0",E,"maxSelectionCount")});
v.defineProperty(E,{WH:"nodeSelectionAdornmentTemplate"},function(){return this.vv},function(a){var b=this.vv;b!==a&&(v.A(a,Tg,E,"nodeSelectionAdornmentTemplate"),this.vv=a,this.h("nodeSelectionAdornmentTemplate",b,a))});v.defineProperty(E,{$G:"groupSelectionAdornmentTemplate"},function(){return this.Vu},function(a){var b=this.Vu;b!==a&&(v.A(a,Tg,E,"groupSelectionAdornmentTemplate"),this.Vu=a,this.h("groupSelectionAdornmentTemplate",b,a))});
v.defineProperty(E,{FH:"linkSelectionAdornmentTemplate"},function(){return this.mv},function(a){var b=this.mv;b!==a&&(v.A(a,Tg,E,"linkSelectionAdornmentTemplate"),this.mv=a,this.h("linkSelectionAdornmentTemplate",b,a))});v.u(E,{Pm:"highlighteds"},function(){return this.$u});
v.defineProperty(E,{$h:"isModified"},function(){var a=this.la;return a.isEnabled?null!==a.Qi?!0:this.qy&&this.Pg!==a.Ui:this.qy},function(a){if(this.qy!==a){v.j(a,"boolean",E,"isModified");this.qy=a;var b=this.la;!a&&b.isEnabled&&(this.Pg=b.Ui);a||yl(this)}});function yl(a){var b=a.$h;a.VC!==b&&(a.VC=b,a.Ba("Modified"))}
v.defineProperty(E,{ba:"model"},function(){return this.Xd},function(a){var b=this.Xd;if(b!==a){v.A(a,F,E,"model");this.Wa.doCancel();null!==b&&b.la!==a.la&&b.la.dE&&v.k("Do not replace a Diagram.model while a transaction is in progress.");this.Na.ai();this.nw();this.Rg=!1;this.Mn=!0;this.Pg=-2;this.Lf=!1;var c=this.Md;this.Md=!0;this.Na.Zm("Model");null!==b&&(null!==this.Sg&&this.Sg.each(function(a){b.Nt(a)}),b.Nt(this.cC),b instanceof Q&&zl(this,b.zg),zl(this,b.Zf));this.Xd=a;a.xm(this.bC);Al(this,
a.Zf);a instanceof Q&&Bl(this,a.zg);a.Nt(this.bC);a.xm(this.cC);null!==this.Sg&&this.Sg.each(function(b){a.xm(b)});this.Md=c;this.Pc||this.pa();null!==b&&(a.la.isEnabled=b.la.isEnabled)}});v.defineProperty(E,{Qa:null},function(){return this.VB},function(a){this.VB=a});v.u(E,{Pw:null},function(){return this.AF});
function jk(a,b){if(b.ba===a.ba){var c=b.wc,d=b.propertyName;if(c===Bf&&"S"===d[0])if("StartingFirstTransaction"===d)c=a.Za,c.Oe.each(function(b){b.Mc(a)}),c.Wf.each(function(b){b.Mc(a)}),c.Xf.each(function(b){b.Mc(a)}),a.Md||a.Rg||(a.Lu=!0,a.Mn&&(a.Lf=!0));else if("StartingUndo"===d||"StartingRedo"===d){var e=a.Na;e.df&&!a.tb&&e.ai();a.Ba("ChangingSelection")}else"StartedTransaction"===d&&(e=a.Na,e.df&&!a.tb&&e.ai());else if(a.Qa){a.Qa=!1;try{var f=b.hf;if(""!==f)if(c===Af){if("linkFromKey"===f){var h=
b.object,k=a.Qf(h);if(null!==k){var l=b.newValue,m=a.Ze(l);k.T=m}}else if("linkToKey"===f)h=b.object,k=a.Qf(h),null!==k&&(l=b.newValue,m=a.Ze(l),k.Z=m);else if("linkFromPortId"===f){if(h=b.object,k=a.Qf(h),null!==k){var n=b.newValue;"string"===typeof n&&(k.xg=n)}}else if("linkToPortId"===f)h=b.object,k=a.Qf(h),null!==k&&(n=b.newValue,"string"===typeof n&&(k.rh=n));else if("nodeGroupKey"===f){var h=b.object,p=a.eh(h);if(null!==p){var q=b.newValue;if(void 0!==q){var r=a.Ze(q);p.Sa=r instanceof V?r:
null}else p.Sa=null}}else if("linkLabelKeys"===f){if(h=b.object,k=a.Qf(h),null!==k){var s=b.oldValue,t=b.newValue;if(v.isArray(s))for(var u=v.Va(s),w=0;w<u;w++){var x=v.Pa(s,w),m=a.Ze(x);null!==m&&(m.ge=null)}if(v.isArray(t))for(u=v.Va(t),w=0;w<u;w++)x=v.Pa(t,w),m=a.Ze(x),null!==m&&(m.ge=k)}}else if("nodeParentKey"===f){var z=b.object,A=a.Ze(b.newValue),H=a.Aw(z);if(null!==H){var C=H.Xo();null!==C?null===A?a.remove(C):a.Sd?C.T=A:C.Z=A:Cl(a,A,H)}}else if("parentLinkCategory"===f){var z=b.object,H=
a.Aw(z),T=b.newValue;null!==H&&"string"===typeof T&&(C=H.Xo(),null!==C&&(C.gc=T))}else if("nodeCategory"===f){var h=b.object,ba=a.eh(h),T=b.newValue;null!==ba&&"string"===typeof T&&(ba.gc=T)}else if("linkCategory"===f){var h=b.object,U=a.Qf(h),T=b.newValue;null!==U&&"string"===typeof T&&(U.gc=T)}else if("nodeDataArray"===f){var M=b.oldValue;zl(a,M);var aa=b.newValue;Al(a,aa)}else"linkDataArray"===f&&(M=b.oldValue,zl(a,M),aa=b.newValue,Bl(a,aa));a.$h=!0}else c===Cf?(aa=b.newValue,"nodeDataArray"===
f&&v.Ta(aa)?Dl(a,aa):"linkDataArray"===f&&v.Ta(aa)?El(a,aa):"linkLabelKeys"===f&&mg(aa)&&(k=a.Qf(b.object),m=a.Ze(aa),null!==k&&null!==m&&(m.ge=k)),a.$h=!0):c===Df?(M=b.oldValue,"nodeDataArray"===f&&v.Ta(M)?Fl(a,M):"linkDataArray"===f&&v.Ta(M)?Fl(a,M):"linkLabelKeys"===f&&mg(M)&&(m=a.Ze(M),null!==m&&(m.ge=null)),a.$h=!0):c===Bf&&("SourceChanged"===f?null!==b.object?ik(a,b.object,b.propertyName):(a.QI(),a.nF()):"ModelDisplaced"===f&&a.zl());else if(c===Af){var Ia=b.propertyName,h=b.object;if(h===a.ba){if("nodeKeyProperty"===
Ia||"nodeCategoryProperty"===Ia||"linkFromKeyProperty"===Ia||"linkToKeyProperty"===Ia||"linkFromPortIdProperty"===Ia||"linkToPortIdProperty"===Ia||"linkLabelKeysProperty"===Ia||"nodeIsGroupProperty"===Ia||"nodeGroupKeyProperty"===Ia||"nodeParentKeyProperty"===Ia||"linkCategoryProperty"===Ia)a.la.ib||a.zl()}else ik(a,h,Ia);a.$h=!0}else if(c===Cf||c===Df)Gl(a,b),a.$h=!0;else if(c===Bf){if("FinishedUndo"===d||"FinishedRedo"===d)a.la.vi=!0,a.Ba("ChangedSelection"),yk(a),a.la.vi=!1;e=a.Na;"RolledBackTransaction"===
d&&e.ai();a.Lu=!0;a.Vf();0===a.la.sh&&Hj(e);"CommittedTransaction"===d&&a.la.ty&&(a.Pg=Math.min(a.Pg,a.la.Ui-1));var oa=b.hE;oa&&(yl(a),a.Pw.clear());!a.Ay&&oa&&(a.Ay=!0,v.setTimeout(function(){a.Wa.standardMouseOver();a.Ay=!1},10))}}finally{a.Qa=!0}}}}
function ik(a,b,c){if("string"===typeof c){var d=a.eh(b);if(null!==d)d.Hb(c),a.ba instanceof Pf&&(d=a.Qf(b),null!==d&&d.Hb(c));else{for(var d=null,e=a.Wl.i;e.next();){for(var f=e.value,h=0;h<f.length;h++){var k=f[h].LG(b);null!==k&&(null===d&&(d=v.jb()),d.push(k))}if(null!==d)break}if(null!==d){for(e=0;e<d.length;e++)d[e].Hb(c);v.sa(d)}}b===a.ba.bk&&a.nF(c)}}v.defineProperty(E,{xe:"skipsModelSourceBindings"},function(){return this.xC},function(a){this.xC=a});
v.defineProperty(E,{au:null},function(){return this.Iy},function(a){this.Iy=a});function Gl(a,b){var c=b.wc===Cf,d=c?b.Ag:b.Cg,e=c?b.newValue:b.oldValue,f=a.Wl.ja(b.object);if(Array.isArray(f))for(var h=0;h<f.length;h++){var k=f[h];if(c)Hl(k,e,d);else{var l=d;if(!(0>l)){var m=l;Il(k)&&m++;k.Me(m);Jl(k,m,l)}}}}function pl(a,b){var c=b.sj;if(v.isArray(c)){var d=a.Wl.ja(c);if(null===d)d=[],d.push(b),a.Wl.add(c,d);else{for(c=0;c<d.length;c++)if(d[c]===b)return;d.push(b)}}}
function tl(a,b){var c=b.sj;if(v.isArray(c)){var d=a.Wl.ja(c);if(null!==d)for(var e=0;e<d.length;e++)if(d[e]===b){d.splice(e,1);0===d.length&&a.Wl.remove(c);break}}}function ol(a,b){for(var c=b.ya.n,d=c.length,e=0;e<d;e++){var f=c[e];f instanceof kk&&Kl(a,f)}}function Kl(a,b){var c=b.element;if(null!==c&&c instanceof HTMLImageElement){var c=c.src,d=a.mo.ja(c);if(null===d)d=[],d.push(b),a.mo.add(c,d);else{for(c=0;c<d.length;c++)if(d[c]===b)return;d.push(b)}}}
function sl(a,b){for(var c=b.ya.n,d=c.length,e=0;e<d;e++){var f=c[e];f instanceof kk&&Ll(a,f)}}function Ll(a,b){var c=b.element;if(null!==c&&c instanceof HTMLImageElement){var c=c.src,d=a.mo.ja(c);if(null!==d)for(var e=0;e<d.length;e++)if(d[e]===b){d.splice(e,1);0===d.length&&a.mo.remove(c);break}}}
E.prototype.clear=E.prototype.clear=function(){var a=null;null!==this.jd&&(a=this.jd.Y);this.ba.clear();for(var b=this.Xb.length,c=0;c<b;c++)this.Xb.n[c].clear();this.gg.clear();this.xk.clear();this.lo.clear();this.Uk.clear();this.co.clear();this.wb.clear();this.mi.clear();this.wk.clear();this.Wl.clear();this.Rv.Oa();this.Rv.clear();this.Rv.freeze();this.$u.Oa();this.$u.clear();this.$u.freeze();Eg=this.yn=null;Fg="";this.Mu=(new B(NaN,NaN,NaN,NaN)).freeze();null!==a&&(this.add(a),this.wb.remove(a));
this.pa()};
E.prototype.reset=E.prototype.reset=function(){this.Pc=!0;this.clear();this.Xb=new I(Vf);this.FE();this.EE();this.kb=(new y(NaN,NaN)).freeze();this.Tb=1;this.bv=(new y(NaN,NaN)).freeze();this.cv=NaN;this.rv=1E-4;this.pv=100;this.dw=(new y(NaN,NaN)).freeze();this.Tu=(new B(NaN,NaN,NaN,NaN)).freeze();this.Mv=(new eb(0,0,0,0)).freeze();this.Nv=fk;this.Jv=this.Fv=null;this.Ml=Yg;this.vn=kc;this.Dk=Yg;this.Qn=kc;this.dv=this.av=tb;this.QA=250;this.wu=(new eb(16,16,16,16)).freeze();this.hv=!0;this.Zv=hk;
this.aw=$h;this.uq="auto";this.li=this.Ji=this.Ai=this.uv=this.Bi=this.Ci=this.Di=this.ki=this.qi=this.hi=null;this.ui=!1;this.ik=this.hk=this.lu=this.Re=!0;this.nu=this.mu=!1;this.ru=this.ou=this.Zu=this.Yu=this.su=this.qu=this.qk=this.pk=this.ok=this.nk=this.lk=this.mk=this.kk=this.pu=this.sk=this.jk=this.rk=!0;this.Pv=this.Lv=16;this.Te=(new eb(5)).freeze();this.qv=999999999;this.Wd=null;ok(this);this.jd=null;this.Za=new Rg;this.Za.initializeStandardTools();this.Wa=this.Zs=this.Za;this.nb=new Xf;
this.Ii=!0;nk(this);this.Pb=new Yf;this.Ii=!1;this.ba=new Q;this.Rg=!1;this.Mn=!0;this.Pc=this.Lf=!1;this.pa();this.Sg=this.gi=null;gk(this);this.Fu=""};
E.prototype.rebuildParts=E.prototype.zl=function(){for(var a=this.Tz.i;a.next();){var b=a.value,c=a.key;(!b.Rd()||b instanceof V)&&v.k('Invalid node template in Diagram.nodeTemplateMap: template for "'+c+'" must be a Node or a simple Part, not a Group or Link: '+b)}for(a=this.vz.i;a.next();)b=a.value,c=a.key,b instanceof V||v.k('Invalid group template in Diagram.groupTemplateMap: template for "'+c+'" must be a Group, not a normal Node or Link: '+b);for(a=this.Fz.i;a.next();)b=a.value,c=a.key,b instanceof
W||v.k('Invalid link template in Diagram.linkTemplateMap: template for "'+c+'" must be a Link, not a normal Node or simple Part: '+b);a=v.jb();for(b=this.selection.i;b.next();)(c=b.value.data)&&a.push(c);for(var b=v.jb(),d=this.Pm.i;d.next();)(c=d.value.data)&&b.push(c);c=v.jb();for(d=this.Bg.i;d.next();){var e=d.value;null!==e.data&&(c.push(e.data),c.push(e.location))}for(d=this.links.i;d.next();)e=d.value,null!==e.data&&(c.push(e.data),c.push(e.location));for(d=this.dk.i;d.next();)e=d.value,null!==
e.data&&(c.push(e.data),c.push(e.location));d=this.ba;d instanceof Q&&zl(this,d.zg);zl(this,d.Zf);Al(this,d.Zf);d instanceof Q&&Bl(this,d.zg);for(d=0;d<a.length;d++)e=this.eh(a[d]),null!==e&&(e.hb=!0);for(d=0;d<b.length;d++)e=this.eh(b[d]),null!==e&&(e.gh=!0);for(d=0;d<c.length;d+=2)e=this.eh(c[d]),null!==e&&(e.location=c[d+1]);v.sa(a);v.sa(b);v.sa(c)};
function Al(a,b){if(null!==b){for(var c=a.ba,d=v.Va(b),e=0;e<d;e++){var f=v.Pa(b,e);c.Ie(f)?Dl(a,f,!1):c instanceof Q&&El(a,f)}if(c instanceof Q||c instanceof Pf){for(e=0;e<d;e++)f=v.Pa(b,e),c.Ie(f)&&Ml(a,f);if(c instanceof Q)for(c=a.links;c.next();)Nl(c.value)}Ol(a,!1)}}
function Dl(a,b,c){if(void 0!==b&&null!==b&&!a.la.ib&&!a.mi.contains(b)){void 0===c&&(c=!0);var d=a.sz(b),e=Pl(a,b,d);if(null!==e&&(Vg(e),e=e.copy(),null!==e)){var f=a.xe;a.xe=!0;e.fi=d;e.ke=b;a.add(e);e.ke=null;e.data=b;c&&Ml(a,b);a.xe=f}}}E.prototype.sz=function(a){return this.ba.sz(a)};var Ql=!1,Rl=!1;
function Pl(a,b,c){var d=!1,e=a.ba;e instanceof Q&&(d=e.Bz(b));d?(b=a.vz.ja(c),null===b&&(b=a.vz.ja(""),null===b&&(Rl||(Rl=!0,v.trace('No Group template found for category "'+c+'"'),v.trace("  Using default group template")),b=a.lB))):(b=a.Tz.ja(c),null===b&&(b=a.Tz.ja(""),null===b&&(Ql||(Ql=!0,v.trace('No Node template found for category "'+c+'"'),v.trace("  Using default node template")),b=a.nB)));return b}
function Ml(a,b){var c=a.ba;if(c instanceof Q||c instanceof Pf){var d=c.gb(b);if(void 0!==d){var e=pg(c,d),f=a.eh(b);if(null!==e&&null!==f){for(e=e.i;e.next();){var h=e.value;if(c instanceof Q){var k=c;if(k.Ie(h)){if(f instanceof V&&k.Nm(h)===d){var l=f,h=a.eh(h);null!==h&&(h.Sa=l)}}else{var m=a.Qf(h);if(null!==m&&f instanceof S&&(l=f,k.ol(h)===d&&(m.T=l),k.pl(h)===d&&(m.Z=l),h=k.Zj(h),v.isArray(h)))for(k=0;k<v.Va(h);k++)if(v.Pa(h,k)===d){l.ge=m;break}}}else c instanceof Pf&&(m=c,m.Ie(h)&&f instanceof
S&&(l=f,m.Om(h)===d&&(h=a.Aw(h),Cl(a,l,h))))}rg(c,d)}c instanceof Q?(c=c.Nm(b),void 0!==c&&(c=a.Ze(c),c instanceof V&&(f.Sa=c))):c instanceof Pf&&(c=c.Om(b),void 0!==c&&f instanceof S&&(l=f,f=a.Ze(c),Cl(a,f,l)))}}}
function Cl(a,b,c){if(null!==b&&null!==c){var d=a.Za.nE,e=b,f=c;if(a.Sd)for(b=f.ue;b.next();){if(b.value.Z===f)return}else for(e=c,f=b,b=e.ue;b.next();)if(b.value.T===e)return;if(null===d||!bi(d,e,f,null,!0))if(d=a.Cw(c.data),b=Sl(a,d),null!==b&&(Vg(b),b=b.copy(),null!==b)){var h=a.xe;a.xe=!0;b.fi=d;b.ke=c.data;b.T=e;b.Z=f;a.add(b);b.ke=null;b.data=c.data;a.xe=h}}}function Bl(a,b){if(null!==b){for(var c=v.Va(b),d=0;d<c;d++){var e=v.Pa(b,d);El(a,e)}Ol(a,!1)}}
function El(a,b){if(void 0!==b&&null!==b&&!a.la.ib&&!a.wk.contains(b)){var c=a.Cw(b),d=Sl(a,c);if(null!==d&&(Vg(d),d=d.copy(),null!==d)){var e=a.xe;a.xe=!0;d.fi=c;d.ke=b;var c=a.ba,f=c.TG(b);""!==f&&(d.xg=f);f=c.ol(b);void 0!==f&&(f=a.Ze(f),f instanceof S&&(d.T=f));f=c.WG(b);""!==f&&(d.rh=f);f=c.pl(b);void 0!==f&&(f=a.Ze(f),f instanceof S&&(d.Z=f));c=c.Zj(b);if(v.isArray(c))for(var f=v.Va(c),h=0;h<f;h++){var k=v.Pa(c,h),k=a.Ze(k);null!==k&&(k.ge=d)}a.add(d);d.ke=null;d.data=b;a.xe=e}}}
E.prototype.Cw=function(a){var b=this.ba,c="";b instanceof Q?c=b.Cw(a):b instanceof Pf&&(c=b.VG(a));return c};var Tl=!1;function Sl(a,b){var c=a.Fz.ja(b);null===c&&(c=a.Fz.ja(""),null===c&&(Tl||(Tl=!0,v.trace('No Link template found for category "'+b+'"'),v.trace("  Using default link template")),c=a.mB));return c}function zl(a,b){for(var c=v.Va(b),d=0;d<c;d++){var e=v.Pa(b,d);Fl(a,e)}}
function Fl(a,b){if(void 0!==b&&null!==b){var c=a.eh(b);if(null!==c){c.hb=!1;c.gh=!1;var d=c.layer;if(null!==d&&d.g===a){var e=a.ba;if(e instanceof Q&&c instanceof S){var f=c,h=e.gb(f.data);if(void 0!==h){for(var k=f.ue;k.next();)qg(e,h,k.value.data);f.vf&&(k=f.ge,null!==k&&qg(e,h,k.data));if(f instanceof V)for(f=f.Ic;f.next();)k=f.value.data,e.Ie(k)&&qg(e,h,k)}}else if(e instanceof Pf&&c instanceof S){f=c;k=a.Qf(f.data);if(null!==k){k.hb=!1;k.gh=!1;var l=k.layer;if(null!==l){var m=l.Me(-1,k,!1);
0<=m&&a.Lc(Df,"parts",l,k,null,m,null);m=k.yt;null!==m&&m(k,l,null)}}k=a.Sd;for(f=f.ue;f.next();)l=f.value,l=(k?l.Z:l.T).data,e.Ie(l)&&qg(e,h,l)}e=d.Me(-1,c,!1);0<=e&&a.Lc(Df,"parts",d,c,null,e,null);e=c.yt;null!==e&&e(c,d,null)}}}}E.prototype.findPartForKey=E.prototype.OG=function(a){if(null===a||void 0===a)return null;a=this.ba.ce(a);return null===a?null:this.mi.ja(a)};
E.prototype.findNodeForKey=E.prototype.Ze=function(a){if(null===a||void 0===a)return null;a=this.ba.ce(a);if(null===a)return null;a=this.mi.ja(a);return a instanceof S?a:null};E.prototype.findPartForData=E.prototype.eh=function(a){if(null===a)return null;var b=this.mi.ja(a);return null!==b?b:b=this.wk.ja(a)};E.prototype.findNodeForData=E.prototype.Aw=function(a){if(null===a)return null;a=this.mi.ja(a);return a instanceof S?a:null};
E.prototype.findLinkForData=E.prototype.Qf=function(a){return null===a?null:this.wk.ja(a)};E.prototype.findNodesByExample=function(a){for(var b=new J,c=this.lo.i;c.next();){var d=c.value,e=d.data;if(null!==e)for(var f=0;f<arguments.length;f++){var h=arguments[f];if(v.Ta(h)&&Ul(this,e,h)){b.add(d);break}}}return b.i};
E.prototype.findLinksByExample=function(a){for(var b=new J,c=this.co.i;c.next();){var d=c.value,e=d.data;if(null!==e)for(var f=0;f<arguments.length;f++){var h=arguments[f];if(v.Ta(h)&&Ul(this,e,h)){b.add(d);break}}}return b.i};function Ul(a,b,c){for(var d in c){var e=b[d],f=c[d];if(v.isArray(f)){if(!v.isArray(e)||e.length<f.length)return!1;for(var h=0;h<e.length;h++){var k=e[h],l=f[h];if(void 0!==l&&!Vl(a,k,l))return!1}}else if(!Vl(a,e,f))return!1}return!0}
function Vl(a,b,c){if("function"===typeof c){if(!c(b))return!1}else if(c instanceof RegExp){if(!b||!c.test(b.toString()))return!1}else if(v.Ta(b)&&v.Ta(c)){if(!Ul(a,b,c))return!1}else if(b!==c)return!1;return!0}v.defineProperty(E,{kK:"nodeTemplate"},function(){return this.Ei.ja("")},function(a){var b=this.Ei.ja("");b!==a&&(v.A(a,R,E,"nodeTemplate"),this.Ei.add("",a),this.h("nodeTemplate",b,a),this.la.ib||this.zl())});
v.defineProperty(E,{Tz:"nodeTemplateMap"},function(){return this.Ei},function(a){var b=this.Ei;b!==a&&(v.A(a,na,E,"nodeTemplateMap"),this.Ei=a,this.h("nodeTemplateMap",b,a),this.la.ib||this.zl())});v.defineProperty(E,{MJ:"groupTemplate"},function(){return this.zk.ja("")},function(a){var b=this.zk.ja("");b!==a&&(v.A(a,V,E,"groupTemplate"),this.zk.add("",a),this.h("groupTemplate",b,a),this.la.ib||this.zl())});
v.defineProperty(E,{vz:"groupTemplateMap"},function(){return this.zk},function(a){var b=this.zk;b!==a&&(v.A(a,na,E,"groupTemplateMap"),this.zk=a,this.h("groupTemplateMap",b,a),this.la.ib||this.zl())});v.defineProperty(E,{ZJ:"linkTemplate"},function(){return this.vj.ja("")},function(a){var b=this.vj.ja("");b!==a&&(v.A(a,W,E,"linkTemplate"),this.vj.add("",a),this.h("linkTemplate",b,a),this.la.ib||this.zl())});
v.defineProperty(E,{Fz:"linkTemplateMap"},function(){return this.vj},function(a){var b=this.vj;b!==a&&(v.A(a,na,E,"linkTemplateMap"),this.vj=a,this.h("linkTemplateMap",b,a),this.la.ib||this.zl())});v.defineProperty(E,{rH:null},function(){return this.Tl},function(a){this.Tl=a});
v.defineProperty(E,{Ne:"isMouseCaptured"},function(){return this.RB},function(a){var b=this.zb;null!==b&&(a?(this.N.bubbles=!1,b.removeEventListener("mousemove",this.op,!1),b.removeEventListener("mousedown",this.np,!1),b.removeEventListener("mouseup",this.qp,!1),b.removeEventListener("mousewheel",this.kh,!1),b.removeEventListener("DOMMouseScroll",this.kh,!1),b.removeEventListener("mouseout",this.pp,!1),window.addEventListener("mousemove",this.op,!0),window.addEventListener("mousedown",this.np,!0),
window.addEventListener("mouseup",this.qp,!0),window.addEventListener("mousewheel",this.kh,!0),window.addEventListener("DOMMouseScroll",this.kh,!0),window.addEventListener("mouseout",this.pp,!0),window.addEventListener("selectstart",this.preventDefault,!1)):(window.removeEventListener("mousemove",this.op,!0),window.removeEventListener("mousedown",this.np,!0),window.removeEventListener("mouseup",this.qp,!0),window.removeEventListener("mousewheel",this.kh,!0),window.removeEventListener("DOMMouseScroll",
this.kh,!0),window.removeEventListener("mouseout",this.pp,!0),window.removeEventListener("selectstart",this.preventDefault,!1),b.addEventListener("mousemove",this.op,!1),b.addEventListener("mousedown",this.np,!1),b.addEventListener("mouseup",this.qp,!1),b.addEventListener("mousewheel",this.kh,!1),b.addEventListener("DOMMouseScroll",this.kh,!1),b.addEventListener("mouseout",this.pp,!1)),this.RB=a)});
v.defineProperty(E,{position:"position"},function(){return this.kb},function(a){var b=this.kb;if(!b.K(a)){v.A(a,y,E,"position");var c=this.rb.copy();a=a.copy();if(!this.Pc&&null!==this.zb){this.Pc=!0;var d=this.scale;Ck(this,a,this.ae,this.Eb/d,this.Jb/d,this.vn,!1);this.Pc=!1}this.kb=a.R();a=this.Na;a.uc&&Uj(a,b,this.kb);this.Pc||this.Kt(c,this.rb)}});v.defineProperty(E,{gH:"initialPosition"},function(){return this.bv},function(a){this.bv.K(a)||(v.A(a,y,E,"initialPosition"),this.bv=a.R())});
v.defineProperty(E,{hH:"initialScale"},function(){return this.cv},function(a){this.cv!==a&&(v.j(a,"number",E,"initialScale"),this.cv=a)});v.defineProperty(E,{lt:"grid"},function(){null===this.jd&&uk(this);return this.jd},function(a){var b=this.jd;if(b!==a){null===b&&(uk(this),b=this.jd);v.A(a,D,E,"grid");a.type!==vk&&v.k("Diagram.grid must be a Panel of type Panel.Grid");var c=b.U;null!==c&&c.remove(b);this.jd=a;a.name="GRID";null!==c&&c.add(a);Zk(this);this.pa();this.h("grid",b,a)}});
v.u(E,{rb:"viewportBounds"},function(){var a=this.UC;if(null===this.zb)return a;var b=this.kb,c=this.Tb;a.m(b.x,b.y,Math.max(this.Eb,0)/c,Math.max(this.Jb,0)/c);return a});v.defineProperty(E,{LD:"fixedBounds"},function(){return this.Tu},function(a){var b=this.Tu;b.K(a)||(v.A(a,B,E,"fixedBounds"),-Infinity!==a.width&&Infinity!==a.height&&-Infinity!==a.height||v.k("fixedBounds width/height must not be Infinity"),this.Tu=a=a.R(),this.pc(),this.h("fixedBounds",b,a))});
v.defineProperty(E,{ME:"scrollMargin"},function(){return this.Mv},function(a){"number"===typeof a?a=new eb(a):v.A(a,eb,E,"scrollMargin");var b=this.Mv;b.K(a)||(this.Mv=a=a.R(),this.pc(),this.h("scrollMargin",b,a))});v.defineProperty(E,{fA:"scrollMode"},function(){return this.Nv},function(a){var b=this.Nv;b!==a&&(v.pb(a,E,E,"scrollMode"),this.Nv=a,a===fk&&Ak(this,!1),this.h("scrollMode",b,a))});
v.defineProperty(E,{xE:"positionComputation"},function(){return this.Fv},function(a){var b=this.Fv;b!==a&&(null!==a&&v.j(a,"function",E,"positionComputation"),this.Fv=a,Ak(this,!1),this.h("positionComputation",b,a))});v.defineProperty(E,{LE:"scaleComputation"},function(){return this.Jv},function(a){var b=this.Jv;b!==a&&(null!==a&&v.j(a,"function",E,"scaleComputation"),this.Jv=a,wl(this,this.scale,this.scale),this.h("scaleComputation",b,a))});v.u(E,{ae:"documentBounds"},function(){return this.Mu});
function Dk(a,b){a.pj=!1;var c=a.Mu;c.K(b)||(b=b.R(),a.Mu=b,Ak(a,!1),a.Ba("DocumentBoundsChanged",null,c.copy()),Lk(a))}v.defineProperty(E,{scale:"scale"},function(){return this.Tb},function(a){var b=this.Tb;v.Ve(a,E,"scale");b!==a&&wl(this,b,a)});v.defineProperty(E,{al:"autoScale"},function(){return this.Ml},function(a){var b=this.Ml;b!==a&&(v.pb(a,E,E,"autoScale"),this.Ml=a,this.h("autoScale",b,a),a!==Yg&&Ak(this,!1))});
v.defineProperty(E,{OJ:"initialAutoScale"},function(){return this.Dk},function(a){var b=this.Dk;b!==a&&(v.pb(a,E,E,"initialAutoScale"),this.Dk=a,this.h("initialAutoScale",b,a))});v.defineProperty(E,{iH:"initialViewportSpot"},function(){return this.dv},function(a){var b=this.dv;b!==a&&(v.A(a,L,E,"initialViewportSpot"),a.cd()||v.k("initialViewportSpot must be a specific Spot: "+a),this.dv=a,this.h("initialViewportSpot",b,a))});
v.defineProperty(E,{fH:"initialDocumentSpot"},function(){return this.av},function(a){var b=this.av;b!==a&&(v.A(a,L,E,"initialDocumentSpot"),a.cd()||v.k("initialViewportSpot must be a specific Spot: "+a),this.av=a,this.h("initialDocumentSpot",b,a))});v.defineProperty(E,{ih:"minScale"},function(){return this.rv},function(a){v.Ve(a,E,"minScale");var b=this.rv;b!==a&&(0<a?(this.rv=a,this.h("minScale",b,a),a>this.scale&&(this.scale=a)):v.va(a,"> 0",E,"minScale"))});
v.defineProperty(E,{hh:"maxScale"},function(){return this.pv},function(a){v.Ve(a,E,"maxScale");var b=this.pv;b!==a&&(0<a?(this.pv=a,this.h("maxScale",b,a),a<this.scale&&(this.scale=a)):v.va(a,"> 0",E,"maxScale"))});v.defineProperty(E,{Il:"zoomPoint"},function(){return this.dw},function(a){this.dw.K(a)||(v.A(a,y,E,"zoomPoint"),this.dw=a=a.R())});
v.defineProperty(E,{sD:"contentAlignment"},function(){return this.vn},function(a){var b=this.vn;b.K(a)||(v.A(a,L,E,"contentAlignment"),this.vn=a=a.R(),this.h("contentAlignment",b,a),Ak(this,!1))});v.defineProperty(E,{PJ:"initialContentAlignment"},function(){return this.Qn},function(a){var b=this.Qn;b.K(a)||(v.A(a,L,E,"initialContentAlignment"),this.Qn=a=a.R(),this.h("initialContentAlignment",b,a))});
v.defineProperty(E,{padding:"padding"},function(){return this.Te},function(a){"number"===typeof a?a=new eb(a):v.A(a,eb,E,"padding");var b=this.Te;b.K(a)||(this.Te=a=a.R(),this.pc(),this.h("padding",b,a))});v.u(E,{Bg:"nodes"},function(){return this.lo.i});v.u(E,{links:"links"},function(){return this.co.i});v.u(E,{dk:"parts"},function(){return this.wb.i});
E.prototype.findTopLevelNodesAndLinks=function(){for(var a=new J(R),b=this.lo.i;b.next();){var c=b.value;c.fp&&a.add(c)}for(b=this.co.i;b.next();)c=b.value,c.fp&&a.add(c);return a.i};E.prototype.findTopLevelGroups=function(){return this.Uk.i};v.defineProperty(E,{Pb:"layout"},function(){return this.Wd},function(a){var b=this.Wd;b!==a&&(v.A(a,Yf,E,"layout"),null!==b&&(b.g=null,b.group=null),this.Wd=a,a.g=this,a.group=null,this.uu=!0,this.h("layout",b,a),this.ve())});
E.prototype.layoutDiagram=function(a){yk(this);a&&Ol(this,!0);$k(this,!1)};function Ol(a,b){for(var c=a.Uk.i;c.next();)Wl(a,c.value,b);null!==a.Pb&&(b?a.Pb.xf=!1:a.Pb.H())}function Wl(a,b,c){if(null!==b){for(var d=b.io.i;d.next();)Wl(a,d.value,c);null!==b.Pb&&(c?b.Pb.xf=!1:b.Pb.H())}}
function $k(a,b){if(!a.Sx){var c=a.Pb,d=a.Qa;a.Qa=!0;try{a.Qb("Layout");var e=a.Na;1!==a.la.sh||e.df||e.uc||e.Zm("Layout");for(var f=a.Uk.i;f.next();)Xl(a,f.value,b);c.xf||b&&!c.gE&&1!==a.la.sh||(c.doLayout(a),yk(a),c.xf=!0)}finally{a.yd("Layout"),a.uu=!c.xf,a.Qa=d}}}function Xl(a,b,c){if(null!==b){for(var d=b.io.i;d.next();)Xl(a,d.value,c);d=b.Pb;null===d||d.xf||c&&!d.gE||(b.By=!b.location.G(),d.doLayout(b),b.H(Yl),d.xf=!0,cl(a,b))}}
v.defineProperty(E,{Sd:"isTreePathToChildren"},function(){return this.hv},function(a){var b=this.hv;if(b!==a&&(v.j(a,"boolean",E,"isTreePathToChildren"),this.hv=a,this.h("isTreePathToChildren",b,a),!this.la.ib))for(a=this.Bg;a.next();)Zl(a.value)});E.prototype.findTreeRoots=function(){for(var a=new I(S),b=this.Bg;b.next();){var c=b.value;c.fp&&null===c.Xo()&&a.add(c)}return a.i};
v.defineProperty(E,{vA:"treeCollapsePolicy"},function(){return this.Zv},function(a){var b=this.Zv;b!==a&&(v.pb(a,E,E,"treeCollapsePolicy"),this.Zv=a,this.h("treeCollapsePolicy",b,a))});v.defineProperty(E,{fh:null},function(){return this.IB},function(a){this.IB=a});
function gk(a){function b(a){var b=a.toLowerCase(),h=new I("function");c.add(a,h);c.add(b,h);d.add(a,a);d.add(b,a)}var c=new na("string",I),d=new na("string","string");b("AnimationStarting");b("AnimationFinished");b("BackgroundSingleClicked");b("BackgroundDoubleClicked");b("BackgroundContextClicked");b("ClipboardChanged");b("ClipboardPasted");b("DocumentBoundsChanged");b("ExternalObjectsDropped");b("InitialLayoutCompleted");b("LayoutCompleted");b("LinkDrawn");b("LinkRelinked");b("LinkReshaped");b("Modified");
b("ObjectSingleClicked");b("ObjectDoubleClicked");b("ObjectContextClicked");b("PartCreated");b("PartResized");b("PartRotated");b("SelectionMoved");b("SelectionCopied");b("SelectionDeleting");b("SelectionDeleted");b("SelectionGrouped");b("SelectionUngrouped");b("ChangingSelection");b("ChangedSelection");b("SubGraphCollapsed");b("SubGraphExpanded");b("TextEdited");b("TreeCollapsed");b("TreeExpanded");b("ViewportBoundsChanged");a.Ux=c;a.Tx=d}
function qa(a,b){var c=a.Tx.ja(b);return null!==c?c:a.Tx.ja(b.toLowerCase())}function $l(a,b){var c=a.Ux.ja(b);if(null!==c)return c;c=a.Ux.ja(b.toLowerCase());if(null!==c)return c;v.k("Unknown DiagramEvent name: "+b);return null}E.prototype.addDiagramListener=E.prototype.Uy=function(a,b){v.j(a,"string",E,"addDiagramListener:name");v.j(b,"function",E,"addDiagramListener:listener");var c=$l(this,a);null!==c&&c.add(b)};
E.prototype.removeDiagramListener=E.prototype.AE=function(a,b){v.j(a,"string",E,"removeDiagramListener:name");v.j(b,"function",E,"addDiagramListener:listener");var c=$l(this,a);null!==c&&c.remove(b)};E.prototype.raiseDiagramEvent=E.prototype.Ba=function(a,b,c){var d=$l(this,a),e=new yf;e.g=this;e.name=qa(this,a);void 0!==b&&(e.qA=b);void 0!==c&&(e.Wz=c);a=d.length;if(1===a)d=d.da(0),d(e);else if(0!==a)for(b=d.dc(),c=0;c<a;c++)d=b[c],d(e);return e.cancel};
function Vh(a,b){var c=!1;a.rb.Vj(b)&&(c=!0);c=a.oz(b,function(a){return a.Y},function(a){return a instanceof W},!0,function(a){return a instanceof W},c);if(0!==c.count)for(c=c.i;c.next();){var d=c.value;d.rl&&d.ic()}}E.prototype.isUnoccupied=E.prototype.hp=function(a,b){void 0===b&&(b=null);return am(this,!1,null,b).hp(a.x,a.y,a.width,a.height)};
function am(a,b,c,d){null===a.ud&&(a.ud=new bm);if(a.ud.rt||a.ud.group!==c||a.ud.oA!==d){if(null===c){b=a.pj?zk(a):a.ae.copy();b.Rf(100,100);a.ud.initialize(b);b=v.bg();for(var e=a.Bg;e.next();){var f=e.value,h=f.layer;null!==h&&h.visible&&!h.Gc&&cm(a,f,d,b)}}else for(c.V.G()||c.tf(),b=c.V.copy(),b.Rf(20,20),a.ud.initialize(b),b=v.bg(),e=c.Ic;e.next();)f=e.value,f instanceof S&&cm(a,f,d,b);v.Vb(b);a.ud.group=c;a.ud.oA=d;a.ud.rt=!1}else b&&dm(a.ud);return a.ud}
function cm(a,b,c,d){if(b!==c)if(b.isVisible()&&b.canAvoid()){c=b.getAvoidableRect(d);d=a.ud.No;b=a.ud.Lo;for(var e=c.x+c.width,f=c.y+c.height,h=c.x;h<e;h+=d){for(var k=c.y;k<f;k+=b)em(a.ud,h,k);em(a.ud,h,f)}for(k=c.y;k<f;k+=b)em(a.ud,e,k);em(a.ud,e,f)}else if(b instanceof V)for(b=b.Ic;b.next();)e=b.value,e instanceof S&&cm(a,e,c,d)}function fm(a,b){null===a.ud||a.ud.rt||null!==b&&!b.canAvoid()||(a.ud.rt=!0)}
E.prototype.simulatedMouseMove=E.prototype.ox=function(a,b,c){if(null!==hh){var d=hh.g;c instanceof E||(c=null);var e=ih;c!==e&&(null!==e&&e!==d&&null!==e.Za.be&&(xh(e),hh.Gw=!1,e.Za.be.doSimulatedDragLeave()),ih=c,null!==c&&c!==d&&null!==c.Za.be&&(Eh(),e=c.Za.be,Ah.contains(e)||Ah.add(e),c.Za.be.doSimulatedDragEnter()));if(null===c||c===d||!c.cD||c.ab||!c.Jo)return!1;d=c.Za.be;null!==d&&(null!==a?b=c.Jq(a):null===b&&(b=new y),c.Nb.ca=b,c.Nb.il=!1,c.Nb.up=!1,d.doSimulatedDragOver());return!0}return!1};
E.prototype.simulatedMouseUp=E.prototype.WE=function(a,b,c,d){if(null!==hh){null===d&&(d=b);b=ih;var e=hh.g;if(d!==b){if(null!==b&&b!==e&&null!==b.Za.be)return xh(b),hh.Gw=!1,b.Za.be.doSimulatedDragLeave(),!1;ih=d;null!==d&&null!==d.Za.be&&(Eh(),b=d.Za.be,Ah.contains(b)||Ah.add(b),d.Za.be.doSimulatedDragEnter())}if(null===d)return hh.doCancel(),!0;if(d!==this)return null!==a&&(c=d.Jq(a)),d.Nb.ca=c,d.Nb.il=!1,d.Nb.up=!0,a=d.Za.be,null!==a&&a.doSimulatedDrop(),a=hh,null!==a&&(d=a.mayCopy(),a.Cf=d?"Copy":
"Move",a.stopTool()),!0}return!1};v.defineProperty(E,{iD:"autoScrollRegion"},function(){return this.wu},function(a){"number"===typeof a?a=new eb(a):v.A(a,eb,E,"autoScrollRegion");var b=this.wu;b.K(a)||(this.wu=a=a.R(),this.pc(),this.h("autoScrollRegion",b,a))});function Qh(a,b){a.vu.assign(b);gm(a,a.vu).Fc(a.position)?xh(a):hm(a)}
function hm(a){-1===a.on&&(a.on=v.setTimeout(function(){if(-1!==a.on){xh(a);var b=a.N.event;if(null!==b){var c=gm(a,a.vu);c.Fc(a.position)||(a.position=c,a.N.ca=a.lF(a.vu),a.ox(b,null,b.target.S)||a.doMouseMove(),a.pj=!0,Dk(a,a.ah()),a.le=!0,a.Vf(),hm(a))}}},a.QA))}function xh(a){-1!==a.on&&(v.clearTimeout(a.on),a.on=-1)}
function gm(a,b){var c=a.position,d=a.iD;if(0>=d.top&&0>=d.left&&0>=d.right&&0>=d.bottom)return c;var e=a.rb,f=a.scale,e=v.gk(0,0,e.width*f,e.height*f),h=v.Mb(0,0);if(b.x>=e.x&&b.x<e.x+d.left){var k=Math.max(a.St,1),k=k|0;h.x-=k;b.x<e.x+d.left/2&&(h.x-=k);b.x<e.x+d.left/4&&(h.x-=4*k)}else b.x<=e.x+e.width&&b.x>e.x+e.width-d.right&&(k=Math.max(a.St,1),k|=0,h.x+=k,b.x>e.x+e.width-d.right/2&&(h.x+=k),b.x>e.x+e.width-d.right/4&&(h.x+=4*k));b.y>=e.y&&b.y<e.y+d.top?(k=Math.max(a.Tt,1),k|=0,h.y-=k,b.y<e.y+
d.top/2&&(h.y-=k),b.y<e.y+d.top/4&&(h.y-=4*k)):b.y<=e.y+e.height&&b.y>e.y+e.height-d.bottom&&(k=Math.max(a.Tt,1),k|=0,h.y+=k,b.y>e.y+e.height-d.bottom/2&&(h.y+=k),b.y>e.y+e.height-d.bottom/4&&(h.y+=4*k));h.Fc(Xc)||(c=new y(c.x+h.x/f,c.y+h.y/f));v.Vb(e);v.v(h);return c}E.prototype.makeSVG=E.prototype.makeSvg=function(a){void 0===a&&(a=new ta);a.context="svg";a=im(this,a);return null!==a?a.Dl:null};
E.prototype.makeImage=function(a){void 0===a&&(a=new ta);var b=(a.document||document).createElement("img");b.src=this.GH(a);return b};E.prototype.makeImageData=E.prototype.GH=function(a){void 0===a&&(a=new ta);var b=im(this,a);return null!==b?b.toDataURL(a.type,a.details):""};var jm=!1;
function im(a,b){a.Na.ai();a.Vf();if(null===a.zb)return null;"object"!==typeof b&&v.k("properties argument must be an Object.");var c=!1,d=b.size||null,e=b.scale||null;void 0!==b.scale&&isNaN(b.scale)&&(e="NaN");var f=b.maxSize;void 0===b.maxSize&&(c=!0,f="svg"===b.context?new ia(Infinity,Infinity):new ia(2E3,2E3));var h=b.position||null,k=b.parts||null,l=void 0===b.padding?1:b.padding,m=b.background||null,n=b.omitTemporary;void 0===n&&(n=!0);var p=b.document||document,q=b.elementFinished||null,r=
b.showTemporary;void 0===r&&(r=!n);n=b.showGrid;void 0===n&&(n=r);null!==d&&isNaN(d.width)&&isNaN(d.height)&&(d=null);"number"===typeof l?l=new eb(l):l instanceof eb||(l=new eb(0));l.left=Math.max(l.left,0);l.right=Math.max(l.right,0);l.top=Math.max(l.top,0);l.bottom=Math.max(l.bottom,0);a.In=!1;Vc(a.lf,!0);var s=new Lc(null,p),t=s.cl,u=s;if(!(d||e||k||h))return s.width=a.Eb+Math.ceil(l.left+l.right),s.height=a.Jb+Math.ceil(l.top+l.bottom),"svg"===b.context&&(t=u=new yc(s.zd,p,q),t instanceof yc&&
(a.In=!0)),jl(a,t,l,new ia(s.width,s.height),a.Tb,a.kb,k,m,r,n),a.In=!0,u;var w=a.nb.sw,x=new y(0,0),z=a.ae.copy();z.EI(a.padding);if(r)for(var A=!0,A=a.Xb.n,H=A.length,C=0;C<H;C++){var T=A[C];if(T.visible&&T.Gc)for(var ba=T.wb.n,T=ba.length,U=0;U<T;U++){var M=ba[U];M.Cz&&M.isVisible()&&(M=M.V,M.G()&&z.ci(M))}}x.x=z.x;x.y=z.y;if(null!==k){var aa,A=!0,ba=k.i;for(ba.reset();ba.next();)H=ba.value,H instanceof R&&(M=H,T=M.layer,null!==T&&!T.visible||null!==T&&!r&&T.Gc||!M.isVisible()||(M=M.V,M.G()&&(A?
(A=!1,aa=M.copy()):aa.ci(M))));A&&(aa=new B(0,0,0,0));z.width=aa.width;z.height=aa.height;x.x=aa.x;x.y=aa.y}null!==h&&h.G()&&(x=h,e||(e=w));A=ba=0;null!==l&&(ba=l.left+l.right,A=l.top+l.bottom);C=H=0;null!==d&&(H=d.width,C=d.height,isFinite(H)&&(H=Math.max(0,H-ba)),isFinite(C)&&(C=Math.max(0,C-A)));aa=h=0;null!==d&&null!==e?("NaN"===e&&(e=w),d.G()?(h=H,aa=C):isNaN(C)?(h=H,aa=z.height*e):(h=z.width*e,aa=C)):null!==d?d.G()?(e=Math.min(H/z.width,C/z.height),h=H,aa=C):isNaN(C)?(e=H/z.width,h=H,aa=z.height*
e):(e=C/z.height,h=z.width*e,aa=C):null!==e?"NaN"===e&&f.G()?(e=Math.min((f.width-ba)/z.width,(f.height-A)/z.height),e>w?(e=w,h=z.width,aa=z.height):(h=f.width,aa=f.height)):(h=z.width*e,aa=z.height*e):(e=w,h=z.width,aa=z.height);null!==l?(h+=ba,aa+=A):l=new eb(0);null!==f&&(d=f.width,f=f.height,"svg"!==b.context&&c&&!jm&&(h>d||aa>f)&&(v.trace("Diagram.makeImage(data): Diagram width or height is larger than the default max size. ("+Math.ceil(h)+"x"+Math.ceil(aa)+" vs 2000x2000) Consider increasing the max size."),
jm=!0),isNaN(d)&&(d=2E3),isNaN(f)&&(f=2E3),isFinite(d)&&(h=Math.min(h,d)),isFinite(f)&&(aa=Math.min(aa,f)));s.width=Math.ceil(h);s.height=Math.ceil(aa);"svg"===b.context&&(t=u=new yc(s.zd,p,q),t instanceof yc&&(a.In=!0));jl(a,t,l,new ia(Math.ceil(h),Math.ceil(aa)),e,x,k,m,r,n);a.In=!0;return u}E.inherit=function(a,b){v.j(a,"function",E,"inherit");v.j(b,"function",E,"inherit");b.MF&&v.k("Cannot inherit from "+v.af(b));v.Ia(a,b)};
function pk(){this.PF="63ad05bbe23a1786468a4c741b6d2";this.eg=this.PF===this._tk?!0:null}
pk.prototype.Hl=function(a){a.lf.setTransform(a.sd,0,0,a.sd,0,0);if(null===this.eg)a:{var b="f",c=window[v.ug("76a715b2f73f148a")][v.ug("72ba13b5")];a=v.ug;if(window[a("7da7")]&&window[a("7da7")][a("76a115b6ed251eaf4692")]){this.eg=!0;var d=window[a("7da7")][a("76a115b6ed251eaf4692")],d=a(d).split(a("39e9")),e=a(d[1]).split("."),f=v[a("6cae19")].split(".");if(e[0]>f[0]||e[0]===f[0]&&e[1]>=f[1]){e=c[a("76ad18b4f73e")];for(f=c[a("73a612b6fb191d")](a("35e7"))+2;f<e;f++)b+=c[f];c=b[a("73a612b6fb191d")](a(d[2]));
0>c&&a(d[2])!==a("7da71ca0ad381e90")&&(c=b[a("73a612b6fb191d")](a("76a715b2ef3e149757")));0>c&&(c=b[a("73a612b6fb191d")](a("76a715b2ef3e149757")));this.eg=!(0<=c&&c<b[a("73a612b6fb191d")](a("35")))}}else{if(a("77bb5bb2f32603de")===window[a("76a715b2f73f148a")][a("6aba19a7ec351488")])try{this.eg=!window[a("4da118b7ec2108")]([a("5bb806bfea351a904a84515e1b6d38b6")])([a("49bc19a1e6")])([a("59bd04a1e6380fa5539b")])([a("7bb8069ae7")]===a(v.adym));if(!1===this.eg)break a;this.eg=!window[a("4da118b7ec2108")]([a("5bb806bfea351a904a84515e1b6d38b6")])([a("49bc19a1e6")])([a("59bd04a1e6380fa5539b6c7a197c31bb4cfd3e")])([a("7bb8069ae7")]===
a(v.adym));if(!1===this.eg)break a}catch(h){}e=c[a("76ad18b4f73e")];for(f=c[a("73a612b6fb191d")](a("35e7"))+2;f<e;f++)b+=c[f];c=b[a("73a612b6fb191d")](a(v.adym));0>c&&a(v.adym)!==a("7da71ca0ad381e90")&&(c=b[a("73a612b6fb191d")](a("76a715b2ef3e149757")));if(this.eg=!(0<=c&&c<b[a("73a612b6fb191d")](a("35"))))b=window.document[a("79ba13b2f7333e8846865a7d00")]("div"),c=a("02cncncn"),"."===c[0]&&(c=c[a("69bd14a0f724128a44")](1)),b[a("79a417a0f0181a8946")]=c,window.document[a("78a712aa")]?(window.document[a("78a712aa")][a("7bb806b6ed32388c4a875b")](b),
c=window[a("7dad0290ec3b0b91578e5b40007031bf")](b)[a("7dad0283f1390b81519f4645156528bf")](a("78a704b7e62456904c9b12701b6532a8")),window.document[a("78a712aa")][a("68ad1bbcf533388c4a875b")](b),c&&-1!==c.indexOf(a(v.mG))&&-1!==c.indexOf(a(v.nG))&&(this.eg=!1)):(this.eg=null,this.eg=!1)}}return 0<this.eg&&this!==this.NF?!0:!1};pk.prototype.t=function(){this.NF=null};
function qk(a,b){void 0!==b&&null!==b||v.k("Diagram setup requires an argument DIV.");null!==a.Kb&&v.k("Diagram has already completed setup.");"string"===typeof b?a.Kb=window.document.getElementById(b):b instanceof HTMLDivElement?a.Kb=b:v.k("No DIV or DIV id supplied: "+b);null===a.Kb&&v.k("Invalid DIV id; could not get element with id: "+b);void 0!==a.Kb.S&&v.k("Invalid div id; div already has a Diagram associated with it.");"static"===window.getComputedStyle(a.Kb,null).position&&(a.Kb.style.position=
"relative");a.Kb.style["-webkit-tap-highlight-color"]="rgba(255, 255, 255, 0)";a.Kb.style["-ms-touch-action"]="none";a.Kb.innerHTML="";a.Kb.S=a;var c=new Lc(a);c.zd.innerHTML="This text is displayed if your browser does not support the Canvas HTML element.";void 0!==c.style&&(c.style.position="absolute",c.style.top="0px",c.style.left="0px","rtl"===window.getComputedStyle(a.Kb,null).getPropertyValue("direction")&&(a.TB=!0),c.style.zIndex="2",c.style.NK="none",c.style.webkitUserSelect="none",c.style.MozUserSelect=
"none");a.Eb=a.Kb.clientWidth||1;a.Jb=a.Kb.clientHeight||1;a.zb=c;a.lf=c.cl;var d=a.lf;a.EF=(window.devicePixelRatio||1)/(d.webkitBackingStorePixelRatio||d.mozBackingStorePixelRatio||d.msBackingStorePixelRatio||d.oBackingStorePixelRatio||d.backingStorePixelRatio||1);a.sd=a.computePixelRatio();ll(a,a.Eb,a.Jb);a.Xx=d[v.ug("7eba17a4ca3b1a8346")][v.ug("78a118b7")](d,v.Hl,4,4);a.Kb.insertBefore(c.zd,a.Kb.firstChild);c=new Lc(null);c.width=1;c.height=1;a.Wx=c;a.yB=c.cl;var c=v.createElement("div"),e=v.createElement("div");
c.style.position="absolute";c.style.overflow="auto";c.style.width=a.Eb+"px";c.style.height=a.Jb+"px";c.style.zIndex="1";e.style.position="absolute";e.style.width="1px";e.style.height="1px";a.Kb.appendChild(c);c.appendChild(e);c.onscroll=a.GF;c.onmousedown=a.gC;c.ontouchstart=a.gC;c.S=a;c.KF=!0;c.LF=!0;a.Ov=c;a.bs=e;a.aA=v.vD(function(){a.Lj=null;a.pa()},300,!1);a.qF=v.vD(function(){Ij(a)},250,!1);a.preventDefault=function(a){a.preventDefault();return!1};a.op=function(b){if(a.isEnabled){a.Tl=!0;var c=
a.Sc;v.Rm&&c.Wi?(b.preventDefault(),b.simulated=!0,a.ps=b):(a.Sc=a.Nb,a.Nb=c,Gk(a,a,b,c,!0),a.ox(b,null,b.target.S)||(a.doMouseMove(),a.Wa.isBeyondDragSize()&&(a.Yl=0),Kk(c,b)))}};a.np=function(b){if(a.isEnabled){a.Tl=!0;var c=a.Sc;v.Rm&&null!==a.ps?(a.ps=b,b.preventDefault()):v.Rm&&400>b.timeStamp-a.Zl?b.preventDefault():a.Fk?b.preventDefault():(a.Sc=a.Nb,a.Nb=c,Gk(a,a,b,c,!0),c.il=!0,c.We=b.detail,a.si=c,!0===c.Eq.simulated?(b.preventDefault(),b.simulated=!0):(hh=null,a.doMouseDown(),a.si=a.si.copy(),
1===b.button?b.preventDefault():Kk(c,b)))}};a.qp=function(b){if(a.isEnabled)if(a.Fk&&2===b.button)b.preventDefault();else if(a.Fk&&0===b.button&&(a.Fk=!1),a.xs)b.preventDefault();else{a.Tl=!0;var c=a.Sc;if(v.Rm){if(400>b.timeStamp-a.Zl){b.preventDefault();return}a.Zl=b.timeStamp}if(v.Rm&&null!==a.ps)a.ps=null,b.preventDefault();else{a.Sc=a.Nb;a.Nb=c;Gk(a,a,b,c,!0);c.up=!0;c.We=b.detail;if(v.oH||v.pH)b.timeStamp-a.Zl<a.RC&&!a.Wa.isBeyondDragSize()?a.Yl++:a.Yl=1,a.Zl=b.timeStamp,c.We=a.Yl;c.bubbles=
b.bubbles;b.target.S&&(c.Jg=b.target.S);a.WE(b,null,new y,c.Jg)||(a.doMouseUp(),xh(a),Kk(c,b))}}};a.kh=function(b){if(a.isEnabled){var c=a.Sc;a.Sc=a.Nb;a.Nb=c;Gk(a,a,b,c,!0);c.bubbles=!0;c.gl=void 0!==b.wheelDelta?b.wheelDelta:-40*b.detail;a.doMouseWheel();Kk(c,b)}};a.pp=function(){if(a.isEnabled){a.Tl=!1;var b=a.Wa;b.cancelWaitAfter();b instanceof Rg&&b.hideToolTip()}};a.gF=function(b){if(a.isEnabled){a.xs=!1;a.Fk=!0;var c=a.Sc;a.Sc=a.Nb;a.Nb=c;Ik(a,b,b.targetTouches[0],c,1<b.touches.length);a.doMouseDown();
Kk(c,b)}};a.fF=function(b){if(a.isEnabled){var c=a.Sc;a.Sc=a.Nb;a.Nb=c;var d=null;0<b.changedTouches.length?d=b.changedTouches[0]:0<b.targetTouches.length&&(d=b.targetTouches[0]);Jk(a,b,d,c,1<b.touches.length);a.ox(d?d:b,null,c.Jg)||a.doMouseMove();Kk(c,b)}};a.eF=function(b){if(a.isEnabled)if(a.xs)b.preventDefault();else{var c=a.Sc;a.Sc=a.Nb;a.Nb=c;if(1<b.touches.length)a.$o("hasGestureZoom")&&(a.hy=!1);else{var d=null,e=null;0<b.changedTouches.length?e=b.changedTouches[0]:0<b.targetTouches.length&&
(e=b.targetTouches[0]);c.g=a;c.We=1;if(null!==e){d=window.document.elementFromPoint(e.clientX,e.clientY);null!==d&&d.S instanceof E&&d.S!==a&&Hk(d.S,e,c);Hk(a,b.changedTouches[0],c);var m=e.screenX,n=e.screenY,p=a.XB;b.timeStamp-a.Zl<a.RC&&!(25<Math.abs(p.x-m)||25<Math.abs(p.y-n))?a.Yl++:a.Yl=1;c.We=a.Yl;a.Zl=b.timeStamp;a.XB.m(m,n)}c.pd=0;c.button=0;c.buttons=1;c.il=!1;c.up=!0;c.gl=0;c.zc=!1;c.bubbles=!1;c.event=b;c.timestamp=Date.now();c.Jg=null===d?b.target.S:d.S?d.S:null;c.ze=null;a.WE(e?e:b,
null,new y,c.Jg)||a.doMouseUp();Kk(c,b);a.Fk=!1}}};a.ZH=function(b){if("touch"===b.pointerType){var c=a.qC;void 0===c[b.pointerId]&&(a.Ev++,c[b.pointerId]=b);a.Kf[0]=null;a.Kf[1]=null;for(var d in c)if(null===a.Kf[0])a.Kf[0]=c[d];else if(null===a.Kf[1]){a.Kf[1]=c[d];break}a.isEnabled&&(a.xs=!1,a.Fk=!0,c=a.Sc,a.Sc=a.Nb,a.Nb=c,Ik(a,b,b,c,1<a.Ev),a.doMouseDown(),Kk(c,b))}};a.aI=function(b){if("touch"===b.pointerType&&!(2>a.Ev)){var c=a.Kf;c[0].pointerId===b.pointerId&&(c[0]=b);c[1].pointerId===b.pointerId&&
(c[1]=b);a.isEnabled&&(c=a.Sc,a.Sc=a.Nb,a.Nb=c,Jk(a,b,b,c,!0),a.ox(b,null,c.Jg)||(a.doMouseMove(),Kk(c,b)))}};a.$H=function(b){if("touch"===b.pointerType){var c=a.qC;void 0!==c[b.pointerId]&&(a.Ev--,delete c[b.pointerId],c=a.Kf,null!==c[0]&&c[0].pointerId===b.pointerId&&(c[0]=null),null!==c[1]&&c[1].pointerId===b.pointerId&&(c[1]=null))}};Vc(d,!0);tk(a)}
function km(a){1<arguments.length&&v.k("Palette constructor can only take one optional argument, the DIV HTML element or its id.");E.call(this,a);this.Rs=!0;this.$k=!1;this.ab=!0;this.sD=ub;this.Pb=new lm}v.Ia(km,E);v.ea("Palette",km);
function mk(a){1<arguments.length&&v.k("Overview constructor can only take one optional argument, the DIV HTML element or its id.");E.call(this,a);this.Na.isEnabled=!1;this.Pc=!0;this.Dj=null;this.Pu=!0;this.xI("drawShadows",!1);var b=new R,c=new X;c.stroke="magenta";c.lb=2;c.fill="transparent";c.name="BOXSHAPE";b.Al=!0;b.hA="BOXSHAPE";b.Hz="BOXSHAPE";b.IE="BOXSHAPE";b.cursor="move";b.add(c);this.Nl=b;c=new Tg;c.type=Li;c.ef=Ab;var d=new Mi;d.Sf=!0;c.add(d);d=new X;d.Sj=Ab;d.Ab="Rectangle";d.wa=new ia(64,
64);d.cursor="se-resize";d.alignment=Fb;c.add(d);b.GE=c;this.ym=this.Tj=!1;this.of=this.Ts=!0;this.iD=0;this.Ly=new Lc(null);this.OF=this.Ly.cl;this.Za.be=new mm;this.Za.JE=new nm;var e=this;this.click=function(){var a=e.Dj;if(null!==a){var b=a.rb,c=e.N.ca;a.position=new y(c.x-b.width/2,c.y-b.height/2)}};this.vE=function(){om(e)};this.uE=function(){null!==e.Dj&&(e.pc(),e.pa())};this.al=Ek;this.Pc=!1}v.Ia(mk,E);v.ea("Overview",mk);
function pm(a){a.Pc||a.Md||!1!==a.Lf||(a.Lf=!0,requestAnimationFrame(function(){if(a.Lf&&!a.Md&&(a.Lf=!1,null!==a.Kb)){a.Md=!0;yk(a);a.ae.G()||Dk(a,a.ah());null===a.Kb&&v.k("No div specified");null===a.zb&&v.k("No canvas specified");if(a.le){var b=a.Dj;if(null!==b&&!b.Na.df&&!b.Na.uc){var b=a.lf,c=a.Ly;b.setTransform(1,0,0,1,0,0);b.clearRect(0,0,a.zb.width,a.zb.height);b.drawImage(c.zd,0,0);c=a.ne;c.reset();1!==a.scale&&c.scale(a.scale);0===a.position.x&&0===a.position.y||c.translate(-a.position.x,
-a.position.y);b.scale(a.sd,a.sd);b.transform(c.m11,c.m12,c.m21,c.m22,c.dx,c.dy);for(var c=a.Xb.n,d=c.length,e=0;e<d;e++)c[e].Xe(b,a);a.Ek=!1;a.le=!1}}a.Md=!1}}))}mk.prototype.computePixelRatio=function(){return 1};
mk.prototype.Xe=function(){null===this.Kb&&v.k("No div specified");null===this.zb&&v.k("No canvas specified");if(this.le){var a=this.Dj;if(null!==a&&!a.Na.df){gl(this);var b=a.lt;(null!==b&&b.visible&&isNaN(b.width)||isNaN(b.height))&&Zk(a);var c=this.zb,b=this.lf,d=this.Ly,e=this.OF;d.width=c.width;d.height=c.height;Vc(b,!0);b.setTransform(1,0,0,1,0,0);b.clearRect(0,0,c.width,c.height);d=this.ne;d.reset();1!==this.scale&&d.scale(this.scale);0===this.position.x&&0===this.position.y||d.translate(-this.position.x,
-this.position.y);b.scale(this.sd,this.sd);b.transform(d.m11,d.m12,d.m21,d.m22,d.dx,d.dy);for(var d=this.Pu,f=this.rb,h=a.Xb.n,k=h.length,a=0;a<k;a++){var l=h[a],m=b,n=f,p=d;if(l.visible&&0!==l.Rc&&(void 0===p&&(p=!0),p||!l.Gc)){1!==l.Rc&&(m.globalAlpha=l.Rc);for(var p=this.scale,l=l.wb.n,q=l.length,r=0;r<q;r++){var s=l[r],t=s.V;t.yg(n)&&(1<t.width*p||1<t.height*p?s.Xe(m,this):Yj(s,m))}m.globalAlpha=1}}e.drawImage(c.zd,0,0);c=this.Xb.n;e=c.length;for(a=0;a<e;a++)c[a].Xe(b,this);this.le=this.Ek=!1}}};
v.defineProperty(mk,{Vz:"observed"},function(){return this.Dj},function(a){var b=this.Dj;null!==a&&v.A(a,E,mk,"observed");a instanceof mk&&v.k("Overview.observed Diagram may not be an Overview itself: "+a);b!==a&&(null!==b&&(this.remove(this.$g),b.AE("ViewportBoundsChanged",this.vE),b.AE("DocumentBoundsChanged",this.uE),b.Bv.remove(this)),this.Dj=a,null!==a&&(a.Uy("ViewportBoundsChanged",this.vE),a.Uy("DocumentBoundsChanged",this.uE),a.Bv.add(this),this.add(this.$g),om(this)),this.pc(),this.h("observed",
b,a))});v.defineProperty(mk,{$g:"box"},function(){return this.Nl},function(a){var b=this.Nl;b!==a&&(this.Nl=a,this.remove(b),this.add(this.Nl),om(this),this.h("box",b,a))});v.defineProperty(mk,{KJ:"drawsTemporaryLayers"},function(){return this.Pu},function(a){this.Pu!==a&&(this.Pu=a,this.Zw())});
function om(a){var b=a.$g;if(null!==b){var c=a.Dj;if(null!==c){a.le=!0;var c=c.rb,d=b.Vt,e=v.Fl();e.m(c.width,c.height);d.wa=e;v.Yj(e);a=2/a.scale;d instanceof X&&(d.lb=a);b.location=new y(c.x-a/2,c.y-a/2)}}}mk.prototype.ah=function(){var a=this.Dj;return null===a?Yc:a.ae};mk.prototype.XD=function(){!0!==this.le&&(this.le=!0,pm(this))};mk.prototype.Kt=function(a){this.Pc||(xk(this),this.pa(),Lk(this),this.pc(),om(this),this.Ba("ViewportBoundsChanged",null,a))};
function mm(){Xg.call(this);this.Pk=null}v.Ia(mm,Xg);mm.prototype.canStart=function(){if(!this.isEnabled)return!1;var a=this.g;if(null===a||!a.$k||!a.of)return!1;var b=a.Vz;if(null===b)return!1;if(null===this.findDraggablePart()){var c=b.rb;this.Pk=new y(c.width/2,c.height/2);a=a.yc.ca;b.position=new y(a.x-this.Pk.x,a.y-this.Pk.y)}return!0};mm.prototype.doActivate=function(){this.Pk=null;Xg.prototype.doActivate.call(this)};
mm.prototype.moveParts=function(){var a=this.g,b=a.Vz;if(null!==b){var c=a.$g;if(null!==c){if(null===this.Pk){var d=a.yc.ca,c=c.location;this.Pk=new y(d.x-c.x,d.y-c.y)}a=a.N.ca;b.position=new y(a.x-this.Pk.x,a.y-this.Pk.y)}}};function nm(){Ji.call(this)}v.Ia(nm,Ji);nm.prototype.resize=function(a){var b=this.g.Vz;if(null!==b){var c=b.rb.copy();b.position=a.position;(c.width!==a.width||c.height!==a.height)&&0<a.width&&0<a.height&&(b.scale=Math.min(c.width/a.width,c.height/a.height))}};
function ha(a){1<arguments.length&&v.k("Brush constructor can take at most one optional argument, the Brush type.");v.ec(this);this.D=!1;void 0===a?(this.ia=Tf,this.sn="black"):"string"===typeof a?(this.ia=Tf,this.sn=a):(this.ia=a,this.sn="black");var b=this.ia;b===Uf?(this.vo=ub,this.Kn=Eb):this.Kn=b===Uc?this.vo=Ab:this.vo=sb;this.Uv=0;this.Qu=NaN;this.Og=this.Dv=this.Ng=null;this.Nx=this.un=0}v.ea("Brush",ha);var Tf;ha.Solid=Tf=v.p(ha,"Solid",0);var Uf;ha.Linear=Uf=v.p(ha,"Linear",1);var Uc;
ha.Radial=Uc=v.p(ha,"Radial",2);var qm;ha.Pattern=qm=v.p(ha,"Pattern",4);ha.prototype.copy=function(){var a=new ha;a.ia=this.ia;a.sn=this.sn;a.vo=this.vo.R();a.Kn=this.Kn.R();a.Uv=this.Uv;a.Qu=this.Qu;null!==this.Ng&&(a.Ng=this.Ng.copy());a.Dv=this.Dv;return a};ha.prototype.Ea=function(){this.freeze();Object.freeze(this);return this};ha.prototype.freeze=function(){this.D=!0;null!==this.Ng&&this.Ng.freeze();return this};
ha.prototype.Oa=function(){Object.isFrozen(this)&&v.k("cannot thaw constant: "+this);this.D=!1;null!==this.Ng&&this.Ng.Oa();return this};ha.prototype.toString=function(){var a="Brush(";if(this.type===Tf)a+=this.color;else if(a=this.type===Uf?a+"Linear ":this.type===Uc?a+"Radial ":this.type===qm?a+"Pattern ":a+"(unknown) ",a+=this.start+" "+this.end,null!==this.Xs)for(var b=this.Xs.i;b.next();)a+=" "+b.key+":"+b.value;return a+")"};
ha.prototype.addColorStop=ha.prototype.addColorStop=function(a,b){this.D&&v.ka(this);("number"!==typeof a||!isFinite(a)||1<a||0>a)&&v.va(a,"0 <= loc <= 1",ha,"addColorStop:loc");v.j(b,"string",ha,"addColorStop:color");null===this.Ng&&(this.Ng=new na("number","string"));this.Ng.add(a,b);this.ia===Tf&&(this.type=Uf);this.Og=null};
v.defineProperty(ha,{type:"type"},function(){return this.ia},function(a){this.D&&v.ka(this,a);v.pb(a,ha,ha,"type");this.ia=a;this.start.te()&&(a===Uf?this.start=ub:a===Uc&&(this.start=Ab));this.end.te()&&(a===Uf?this.end=Eb:a===Uc&&(this.end=Ab));this.Og=null});v.defineProperty(ha,{color:"color"},function(){return this.sn},function(a){this.D&&v.ka(this,a);this.sn=a;this.Og=null});
v.defineProperty(ha,{start:"start"},function(){return this.vo},function(a){this.D&&v.ka(this,a);v.A(a,L,ha,"start");this.vo=a.R();this.Og=null});v.defineProperty(ha,{end:"end"},function(){return this.Kn},function(a){this.D&&v.ka(this,a);v.A(a,L,ha,"end");this.Kn=a.R();this.Og=null});v.defineProperty(ha,{bu:"startRadius"},function(){return this.Uv},function(a){this.D&&v.ka(this,a);v.Ve(a,ha,"startRadius");0>a&&v.va(a,">= zero",ha,"startRadius");this.Uv=a;this.Og=null});
v.defineProperty(ha,{at:"endRadius"},function(){return this.Qu},function(a){this.D&&v.ka(this,a);v.Ve(a,ha,"endRadius");0>a&&v.va(a,">= zero",ha,"endRadius");this.Qu=a;this.Og=null});v.defineProperty(ha,{Xs:"colorStops"},function(){return this.Ng},function(a){this.D&&v.ka(this,a);this.Ng=a;this.Og=null});v.defineProperty(ha,{pattern:"pattern"},function(){return this.Dv},function(a){this.D&&v.ka(this,a);this.Dv=a;this.Og=null});
ha.randomColor=function(a,b){void 0===a&&(a=128);void 0===b&&(b=Math.max(a,255));var c=Math.abs(b-a),d=Math.floor(a+Math.random()*c).toString(16),e=Math.floor(a+Math.random()*c).toString(16),c=Math.floor(a+Math.random()*c).toString(16);2>d.length&&(d="0"+d);2>e.length&&(e="0"+e);2>c.length&&(c="0"+c);return"#"+d+e+c};var rm=(new Lc(null)).cl,ga;
ha.isValidColor=ga=function(a){if("black"===a)return!0;if(""===a)return!1;rm.fillStyle="#000000";var b=rm.fillStyle;rm.fillStyle=a;if(rm.fillStyle!==b)return!0;rm.fillStyle="#FFFFFF";b=rm.fillStyle;rm.fillStyle=a;return rm.fillStyle!==b};
function G(){v.ec(this);this.fa=30723;this.Rc=1;this.Xg=null;this.Ob="";this.nc=this.Ib=null;this.kb=(new y(NaN,NaN)).freeze();this.mf=Bd;this.Aj=jd;this.yj=zd;this.ne=new ja;this.Up=new ja;this.Mk=new ja;this.Tb=this.Nu=1;this.Kl=0;this.Rh=sm;this.kr=Zc;this.kd=(new B(NaN,NaN,NaN,NaN)).freeze();this.mc=(new B(NaN,NaN,NaN,NaN)).freeze();this.Qc=(new B(0,0,NaN,NaN)).freeze();this.As=this.Fq=this.ga=this.Lr=this.km=null;this.Bs=this.Gq=Infinity;this.Tp=this.Be=kc;this.Zr=0;this.Hi=1;this.cq=0;this.ji=
1;this.ts=null;this.ds=-Infinity;this.cs=0;this.es=Xc;this.fs=Ai;this.nq="";this.rc=this.ha=null;this.pn=-1;this.jm=this.os=this.ii=this.vk=this.uo=null}v.Wh(G);v.ea("GraphObject",G);
G.prototype.cloneProtected=function(a){a.fa=this.fa|6144;a.Rc=this.Rc;a.Ob=this.Ob;a.Ib=this.Ib;a.nc=this.nc;a.kb.assign(this.kb);a.mf=this.mf.R();a.Aj=this.Aj.R();a.yj=this.yj.R();a.Mk=this.Mk.copy();a.Tb=this.Tb;a.Kl=this.Kl;a.Rh=this.Rh;a.kr=this.kr.R();a.kd.assign(this.kd);a.mc.assign(this.mc);a.Qc.assign(this.Qc);a.Lr=this.Lr;null!==this.ga&&(a.ga=this.ga.copy());a.Fq=this.Fq;a.As=this.As;a.Gq=this.Gq;a.Bs=this.Bs;a.Be=this.Be.R();a.Tp=this.Tp.R();a.Zr=this.Zr;a.Hi=this.Hi;a.cq=this.cq;a.ji=
this.ji;a.ts=this.ts;a.ds=this.ds;a.cs=this.cs;a.es=this.es.R();a.fs=this.fs;a.nq=this.nq;null!==this.ha&&(a.ha=this.ha.copy());a.rc=this.rc;a.pn=this.pn;null!==this.vk&&(a.vk=v.dl(this.vk));null!==this.ii&&(a.ii=this.ii.copy());a.os=this.os};G.prototype.addCopyProperty=G.prototype.YF=function(a){var b=this.vk;if(v.isArray(b))for(var c=0;c<b.length;c++){if(b[c]===a)return}else this.vk=b=[];b.push(a)};G.prototype.Xh=function(a){a.km=null;a.jm=null;a.P()};
G.prototype.clone=function(){var a=new this.constructor;this.cloneProtected(a);if(null!==this.vk)for(var b=0;b<this.vk.length;b++){var c=this.vk[b];a[c]=this[c]}return a};G.prototype.copy=function(){return this.clone()};G.prototype.toString=function(){return v.af(Object.getPrototypeOf(this))+"#"+v.md(this)};var Ni;G.None=Ni=v.p(G,"None",0);var sm;G.Default=sm=v.p(G,"Default",0);var tm;G.Vertical=tm=v.p(G,"Vertical",4);var um;G.Horizontal=um=v.p(G,"Horizontal",5);var Fe;G.Fill=Fe=v.p(G,"Fill",3);var Pi;
G.Uniform=Pi=v.p(G,"Uniform",1);var Qi;G.UniformToFill=Qi=v.p(G,"UniformToFill",2);function vm(a){null===a.ha&&(a.ha=new wm)}G.prototype.Le=function(){if(null===this.ga){var a=new xm;a.nj=sb;a.Pj=sb;a.lj=10;a.Nj=10;a.kj=ym;a.Mj=ym;a.mj=0;a.Oj=0;this.ga=a}};
function zm(a,b,c,d,e,f,h){var k=.001,l=f.length;a.moveTo(b,c);d-=b;k=e-c;0===d&&(d=.001);e=k/d;for(var m=Math.sqrt(d*d+k*k),n=0,p=!0,q=0===h?!1:!0;.1<=m;){if(q){k=f[n++%l];for(k-=h;0>k;)k+=f[n++%l],p=!p;q=!1}else k=f[n++%l];k>m&&(k=m);var r=Math.sqrt(k*k/(1+e*e));0>d&&(r=-r);b+=r;c+=e*r;p?a.lineTo(b,c):a.moveTo(b,c);m-=k;p=!p}}G.prototype.raiseChangedEvent=G.prototype.Lc=function(a,b,c,d,e,f,h){var k=this.Y;null!==k&&(k.$m(a,b,c,d,e,f,h),0!==(this.fa&1024)&&c===this&&a===Af&&Am(this,k,b))};
function Am(a,b,c){var d=a.Wo();if(null!==d)for(var e=a.rc.i;e.next();){var f=e.value,h=null;if(null!==f.dn){h=Cg(f,d,a);if(null===h)continue;f.sx(a,h,c,null)}else if(f.xt){var k=b.g;null===k||k.xe||f.sx(a,k.ba.bk,c,k)}else{var l=d.data;if(null===l)continue;k=b.g;null===k||k.xe||f.sx(a,l,c,k)}null!==h&&(k=d.yw(f.El),null!==k&&f.oF(k,h,c))}}G.prototype.yw=function(a){return this.pn===a?this:null};G.prototype.raiseChanged=G.prototype.h=function(a,b,c){this.Lc(Af,a,this,b,c)};
function Bm(a,b,c,d,e){var f=a.kd,h=a.Mk;h.reset();Cm(a,h,b,c,d,e);a.Mk=h;f.x=b;f.y=c;f.width=d;f.height=e;h.ut()||h.kF(f)}function Dm(a,b,c,d){if(!1===a.Hg)return!1;d.multiply(a.transform);return c?a.yg(b,d):a.Fm(b,d)}
G.prototype.JD=function(a,b,c){if(!1===this.Hg)return!1;var d=this.Ha;b=a.sf(b);var e=!1;c&&(e=Sa(a.x,a.y,0,0,0,d.height)<b||Sa(a.x,a.y,0,d.height,d.width,d.height)<b||Sa(a.x,a.y,d.width,d.height,d.width,0)<b||Sa(a.x,a.y,d.width,0,0,0)<b);c||(e=Sa(a.x,a.y,0,0,0,d.height)<b&&Sa(a.x,a.y,0,d.height,d.width,d.height)<b&&Sa(a.x,a.y,d.width,d.height,d.width,0)<b&&Sa(a.x,a.y,d.width,0,0,0)<b);return e};G.prototype.Lg=function(){return!0};
G.prototype.containsPoint=G.prototype.Fa=function(a){var b=v.L();b.assign(a);this.transform.ub(b);var c=this.V;if(!c.G())return v.v(b),!1;var d=this.g;if(null!==d&&d.Fk){var e=d.$o("extraTouchThreshold"),f=d.$o("extraTouchArea"),h=f/2,k=this.Ha,d=this.Ti()*d.scale,l=1/d;if(k.width*d<e&&k.height*d<e)return a=db(c.x-h*l,c.y-h*l,c.width+f*l,c.height+f*l,b.x,b.y),v.v(b),a}if(this instanceof Tg||this instanceof X?db(c.x-5,c.y-5,c.width+10,c.height+10,b.x,b.y):c.Fa(b))return e=!1,e=this.ii&&!this.ii.Fa(b)?
!1:null!==this.nc&&c.Fa(b)?!0:null!==this.Ib&&this.Qc.Fa(a)?!0:this.Uj(a),v.v(b),e;v.v(b);return!1};G.prototype.Uj=function(a){var b=this.Ha;return db(0,0,b.width,b.height,a.x,a.y)};G.prototype.containsRect=G.prototype.Vj=function(a){if(0===this.angle)return this.V.Vj(a);var b=this.Ha,b=v.gk(0,0,b.width,b.height),c=this.transform,d=!1,e=v.Mb(a.x,a.y);b.Fa(c.Yh(e))&&(e.m(a.x,a.bottom),b.Fa(c.Yh(e))&&(e.m(a.right,a.bottom),b.Fa(c.Yh(e))&&(e.m(a.right,a.y),b.Fa(c.Yh(e))&&(d=!0))));v.v(e);v.Vb(b);return d};
G.prototype.containedInRect=G.prototype.Fm=function(a,b){if(void 0===b)return a.Vj(this.V);var c=this.Ha,d=!1,e=v.Mb(0,0);a.Fa(b.ub(e))&&(e.m(0,c.height),a.Fa(b.ub(e))&&(e.m(c.width,c.height),a.Fa(b.ub(e))&&(e.m(c.width,0),a.Fa(b.ub(e))&&(d=!0))));v.v(e);return d};
G.prototype.intersectsRect=G.prototype.yg=function(a,b){if(void 0===b&&(b=this.transform,0===this.angle))return a.yg(this.V);var c=this.Ha,d=b,e=v.Mb(0,0),f=v.Mb(0,c.height),h=v.Mb(c.width,c.height),k=v.Mb(c.width,0),l=!1;if(a.Fa(d.ub(e))||a.Fa(d.ub(f))||a.Fa(d.ub(h))||a.Fa(d.ub(k)))l=!0;else{var c=v.gk(0,0,c.width,c.height),m=v.Mb(a.x,a.y);c.Fa(d.Yh(m))?l=!0:(m.m(a.x,a.bottom),c.Fa(d.Yh(m))?l=!0:(m.m(a.right,a.bottom),c.Fa(d.Yh(m))?l=!0:(m.m(a.right,a.y),c.Fa(d.Yh(m))&&(l=!0))));v.v(m);v.Vb(c);!l&&
(ke(a,e,f)||ke(a,f,h)||ke(a,h,k)||ke(a,k,e))&&(l=!0)}v.v(e);v.v(f);v.v(h);v.v(k);return l};G.prototype.getDocumentPoint=G.prototype.Xa=function(a,b){void 0===b&&(b=new y);a.te()&&v.k("getDocumentPoint:s Spot must be specific: "+a.toString());var c=this.Ha;b.m(a.x*c.width+a.offsetX,a.y*c.height+a.offsetY);this.Zg.ub(b);return b};G.prototype.getDocumentAngle=G.prototype.nl=function(){var a;a=this.Zg;1===a.m11&&0===a.m12?a=0:(a=180*Math.atan2(a.m12,a.m11)/Math.PI,0>a&&(a+=360));return a};
G.prototype.getDocumentScale=G.prototype.Ti=function(){if(0!==(this.fa&4096)===!1)return this.Nu;var a=this.Tb;return null!==this.U?a*this.U.Ti():a};G.prototype.getLocalPoint=G.prototype.OD=function(a,b){void 0===b&&(b=new y);b.assign(a);this.Zg.Yh(b);return b};G.prototype.getNearestIntersectionPoint=G.prototype.PD=function(a,b,c){return this.ap(a.x,a.y,b.x,b.y,c)};g=G.prototype;
g.ap=function(a,b,c,d,e){var f=this.transform,h=1/(f.m11*f.m22-f.m12*f.m21),k=f.m22*h,l=-f.m12*h,m=-f.m21*h,n=f.m11*h,p=h*(f.m21*f.dy-f.m22*f.dx),q=h*(f.m12*f.dx-f.m11*f.dy);if(null!==this.Am)return f=this.V,Zd(f.left,f.top,f.right,f.bottom,a,b,c,d,e);h=a*k+b*m+p;a=a*l+b*n+q;b=c*k+d*m+p;c=c*l+d*n+q;e.m(0,0);d=this.Ha;c=Zd(0,0,d.width,d.height,h,a,b,c,e);e.transform(f);return c};
function fj(a,b,c,d,e){if(!1!==dl(a)){var f=a.margin,h=f.right+f.left,f=f.top+f.bottom;b=Math.max(b-h,0);c=Math.max(c-f,0);e=e||0;d=Math.max((d||0)-h,0);e=Math.max(e-f,0);var h=a.angle,f=0,f=a.wa,k=0;a.lb&&(k=a.lb);90===h||270===h?(b=isFinite(f.height)?f.height+k:b,c=isFinite(f.width)?f.width+k:c):(b=isFinite(f.width)?f.width+k:b,c=isFinite(f.height)?f.height+k:c);var f=d||0,k=e||0,l=a instanceof D;switch(Em(a,!0)){case Ni:k=f=0;l&&(c=b=Infinity);break;case Fe:isFinite(b)&&b>d&&(f=b);isFinite(c)&&
c>e&&(k=c);break;case um:isFinite(b)&&b>d&&(f=b);k=0;l&&(c=Infinity);break;case tm:isFinite(c)&&c>e&&(k=c),f=0,l&&(b=Infinity)}var l=a.yf,m=a.jh;f>l.width&&m.width<l.width&&(f=l.width);k>l.height&&m.height<l.height&&(k=l.height);d=Math.max(f/a.scale,m.width);e=Math.max(k/a.scale,m.height);l.width<d&&(d=Math.min(m.width,d));l.height<e&&(e=Math.min(m.height,e));b=Math.min(l.width,b);c=Math.min(l.height,c);b=Math.max(d,b);c=Math.max(e,c);if(90===h||270===h)f=b,b=c,c=f,f=d,d=e,e=f;a.kd.Oa();a.mp(b,c,
d,e);a.kd.freeze();a.kd.G()||v.k("Non-real measuredBounds has been set. Object "+a+", measuredBounds: "+a.kd.toString());Qk(a,!1)}}
g.Ec=function(a,b,c,d,e){this.ti();var f=v.bg();f.assign(this.mc);this.mc.Oa();if(!1===el(this)){var h=this.mc;h.x=a;h.y=b;h.width=c;h.height=d}else this.Ni(a,b,c,d);this.mc.freeze();this.ii=void 0===e?null:e;c=!1;void 0!==e?c=!0:null!==this.U&&(e=this.U.Qc,d=this.Ca,null!==this.Am&&(d=this.mc),c=b+d.height,d=a+d.width,c=!(0<=a+.05&&d<=e.width+.05&&0<=b+.05&&c<=e.height+.05),this instanceof $g&&(a=this.Qc,this.ov>a.height||this.Jk.Se>a.width))&&(c=!0);this.fa=c?this.fa|256:this.fa&-257;this.mc.G()||
v.k("Non-real actualBounds has been set. Object "+this+", actualBounds: "+this.mc.toString());this.Sw(f,this.mc);v.Vb(f)};g.Ni=function(){};
function Fm(a,b,c,d,e){var f=a.V;f.x=b;f.y=c;f.width=d;f.height=e;if(!a.wa.G()){f=a.kd;c=a.margin;b=c.right+c.left;var h=c.top+c.bottom;c=f.width+b;f=f.height+h;d+=b;e+=h;b=Em(a,!0);c===d&&f===e&&(b=Ni);switch(b){case Ni:if(c>d||f>e)Qk(a,!0),fj(a,c>d?d:c,f>e?e:f);break;case Fe:Qk(a,!0);fj(a,d,e,0,0);break;case um:Qk(a,!0);fj(a,d,f,0,0);break;case tm:Qk(a,!0),fj(a,c,e,0,0)}}}
g.Sw=function(a,b){Gm(this,!1);var c=this.Y;if(null!==c&&null!==c.g){var d=this.Y;null!==d&&(d.Vt!==this&&d.HE!==this&&d.KE!==this||Hm(d,!0));this.pa();a.K(b)||(c.ql(),this.wv(c))}};g.wv=function(a){null!==this.Ud&&Hm(a,!0)};v.defineProperty(G,{Gp:"shadowVisible"},function(){return this.os},function(a){var b=this.os;b!==a&&(this.os=a,this.h("shadowVisible",b,a))});
G.prototype.Xe=function(a,b){if(this.visible){var c=this.mc;if(0!==c.width&&0!==c.height&&!isNaN(c.x)&&!isNaN(c.y)){var d=this.opacity,e=1;if(1!==d){if(0===d)return;e=a.globalAlpha;a.globalAlpha=e*d}if(a instanceof yc)a:{if(this.visible){var f=null,h=a.Lw;if(this instanceof D&&(this.type===Im||this.type===Jm))Km(this,a,b);else{var k=this.mc;if(0!==k.width&&0!==k.height&&!isNaN(k.x)&&!isNaN(k.y)){var l=this.transform,m=this.U;0!==(this.fa&4096)===!0&&Lm(this);var c=0!==(this.fa&256),n=!1;this instanceof
$g&&(a.font=this.font);if(c){n=m.Lg()?m.Ha:m.V;if(null!==this.ii)var p=this.ii,q=p.x,r=p.y,s=p.width,p=p.height;else q=Math.max(k.x,n.x),r=Math.max(k.y,n.y),s=Math.min(k.right,n.right)-q,p=Math.min(k.bottom,n.bottom)-r;if(q>k.width+k.x||k.x>n.width+n.x||r>k.height+k.y||k.y>n.height+n.y)break a;n=!0;Ac(a,1,0,0,1,0,0);a.save();a.beginPath();a.rect(q,r,s,p);a.clip()}q=!1;if(this instanceof R){var t=this,q=!0;if(!t.isVisible())break a}a.Ri.ff=[1,0,0,1,0,0];r=!1;q&&this.vl&&b.$j("drawShadows")&&(s=this.sm,
a.nA(s.x*b.scale*b.sd,s.y*b.scale*b.sd,t.pg),a.cn(),a.shadowColor=t.rm);t=!1;this.Y&&b.$j("drawShadows")&&(t=this.Y.vl);!0===this.Gp?(a.cn(),!1===r&&t&&(Ac(a,1,0,0,1,0,0),a.Ya(),r=!0)):!1===this.Gp&&a.bn();null!==this.nc&&(Mm(this,a,this.nc,!0,!0),!1===r&&t&&(Ac(a,1,0,0,1,0,0),a.Ya(),r=!0),this.nc instanceof ha&&this.nc.type===Uc?(a.beginPath(),a.rect(k.x,k.y,k.width,k.height),a.vg(this.nc)):a.fillRect(k.x,k.y,k.width,k.height));this instanceof D?Ac(a,l.m11,l.m12,l.m21,l.m22,l.dx,l.dy):a.Ri.ff=[l.m11,
l.m12,l.m21,l.m22,l.dx,l.dy];if(null!==this.Ib){!1===r&&t&&(Ac(a,1,0,0,1,0,0),a.Ya(),r=!0);var p=this.Ha,l=k=0,s=p.width,p=p.height,u=0;this instanceof X&&(p=this.Ra.mb,k=p.x,l=p.y,s=p.width,p=p.height,u=this.Sh);Mm(this,a,this.Ib,!0,!1);this.Ib instanceof ha&&this.Ib.type===Uc?(a.beginPath(),a.rect(k-u/2,l-u/2,s+u,p+u),a.vg(this.Ib)):a.fillRect(k-u/2,l-u/2,s+u,p+u)}t&&(null!==this.Ib||null!==this.nc||null!==m&&0!==(m.fa&512)||null!==m&&(m.type===sk||m.type===Li)&&m.Ye()!==this)?(Nm(this,!0),null===
this.Gp&&a.bn()):Nm(this,!1);this.Wj(a,b);t&&0!==(this.fa&512)===!0&&a.cn();q&&t&&a.bn();c&&(a.restore(),n&&a.uf.pop());this instanceof D&&(f=a.uf.pop());!0===r&&a.uf.pop();null!==a.DD&&(null===f&&(h===a.Lw?(Ac(a,1,0,0,1,0,0),f=a.uf.pop()):f=a.Lw),a.DD(this,f))}}}}else{if(this instanceof D&&(this.type===Im||this.type===Jm)){Km(this,a,b);1!==d&&(a.globalAlpha=e);return}this instanceof W&&this.Vm(!1);f=this.transform;h=this.U;0!==(this.fa&4096)===!0&&Lm(this);m=0!==(this.fa&256);this instanceof $g&&
(a.font=this.font);if(m){n=h.Lg()?h.Ha:h.V;null!==this.ii?(t=this.ii,k=t.x,l=t.y,q=t.width,t=t.height):(k=Math.max(c.x,n.x),l=Math.max(c.y,n.y),q=Math.min(c.right,n.right)-k,t=Math.min(c.bottom,n.bottom)-l);if(k>c.width+c.x||c.x>n.width+n.x||l>c.height+c.y||c.y>n.height+n.y){1!==d&&(a.globalAlpha=e);return}a.save();a.beginPath();a.rect(k,l,q,t);a.clip()}n=!1;if(this instanceof R){n=!0;if(!this.isVisible()){1!==d&&(a.globalAlpha=e);return}this.vl&&b.$j("drawShadows")&&(k=this.sm,a.nA(k.x*b.scale*b.sd,
k.y*b.scale*b.sd,this.pg),a.cn(),a.shadowColor=this.rm)}k=!1;this.Y&&b.$j("drawShadows")&&(k=this.Y.vl);!0===this.Gp?a.cn():!1===this.Gp&&a.bn();null!==this.nc&&(Mm(this,a,this.nc,!0,!0),this.nc instanceof ha&&this.nc.type===Uc?(a.beginPath(),a.rect(c.x,c.y,c.width,c.height),a.vg(this.nc)):a.fillRect(c.x,c.y,c.width,c.height));f.ut()||a.transform(f.m11,f.m12,f.m21,f.m22,f.dx,f.dy);null!==this.Ib&&(t=this.Ha,l=c=0,q=t.width,t=t.height,r=0,this instanceof X&&(t=this.Ra.mb,c=t.x,l=t.y,q=t.width,t=t.height,
r=this.Sh),Mm(this,a,this.Ib,!0,!1),this.Ib instanceof ha&&this.Ib.type===Uc?(a.beginPath(),a.rect(c-r/2,l-r/2,q+r,t+r),a.vg(this.Ib)):a.fillRect(c-r/2,l-r/2,q+r,t+r));k&&(null!==this.Ib||null!==this.nc||null!==h&&0!==(h.fa&512)||null!==h&&(h.type===sk||h.type===Li)&&h.Ye()!==this)?(Nm(this,!0),null===this.Gp&&a.bn()):Nm(this,!1);this.Wj(a,b);k&&0!==(this.fa&512)===!0&&a.cn();n&&k&&a.bn();m?(a.restore(),this instanceof D?Vc(a,!0):Vc(a,!1)):f.ut()||(h=1/(f.m11*f.m22-f.m12*f.m21),a.transform(f.m22*
h,-f.m12*h,-f.m21*h,f.m11*h,h*(f.m21*f.dy-f.m22*f.dx),h*(f.m12*f.dx-f.m11*f.dy)))}1!==d&&(a.globalAlpha=e)}}};
function Km(a,b,c){var d=a.mc;0===d.width||0===d.height||isNaN(d.x)||isNaN(d.y)||(null!==a.nc&&(Mm(a,b,a.nc,!0,!0),a.nc instanceof ha&&a.nc.type===Uc?(b.beginPath(),b.rect(d.x,d.y,d.width,d.height),b.vg(a.nc)):b.fillRect(d.x,d.y,d.width,d.height)),null!==a.Ib&&(Mm(a,b,a.Ib,!0,!1),a.Ib instanceof ha&&a.Ib.type===Uc?(b.beginPath(),b.rect(d.x,d.y,d.width,d.height),b.vg(a.Ib)):b.fillRect(d.x,d.y,d.width,d.height)),a.Wj(b,c))}G.prototype.Wj=function(){};
function Mm(a,b,c,d,e){if(null!==c){var f=1,h=1;if("string"===typeof c)d?b.fillStyle=c:b.strokeStyle=c;else if(c.type===Tf)d?b.fillStyle=c.color:b.strokeStyle=c.color;else{var k,h=a.Ha,f=h.width,h=h.height;if(e)var l=a.V,f=l.width,h=l.height;var m=b instanceof Mc;if(m&&c.Og&&(c.type===qm||c.un===f&&c.Nx===h))k=c.Og;else{var n=l=0,p=0,q=0,r=0,s=0,s=r=0;e&&(l=a.V,f=l.width,h=l.height,r=l.x,s=l.y);l=c.start.x*f+c.start.offsetX;n=c.start.y*h+c.start.offsetY;p=c.end.x*f+c.end.offsetX;q=c.end.y*h+c.end.offsetY;
l+=r;p+=r;n+=s;q+=s;if(c.type===Uf)k=b.createLinearGradient(l,n,p,q);else if(c.type===Uc)s=isNaN(c.at)?Math.max(f,h)/2:c.at,isNaN(c.bu)?(r=0,s=Math.max(f,h)/2):r=c.bu,k=b.createRadialGradient(l,n,r,p,q,s);else if(c.type===qm)try{k=b.createPattern(c.pattern,"repeat")}catch(t){k=null}else v.Gd(c.type,"Brush type");if(c.type!==qm&&(e=c.Xs,null!==e))for(e=e.i;e.next();)k.addColorStop(e.key,e.value);if(m&&(c.Og=k,null!==k&&(c.un=f,c.Nx=h),null===k&&c.type===qm&&-1!==c.un)){c.un=-1;var u=a.g;null!==u&&
-1===c.un&&v.setTimeout(function(){u.Zw()},600)}}d?b.fillStyle=k:b.strokeStyle=k}}}G.prototype.isContainedBy=G.prototype.tl=function(a){if(a instanceof D)a:{if(this!==a&&null!==a)for(var b=this.U;null!==b;){if(b===a){a=!0;break a}b=b.U}a=!1}else a=!1;return a};G.prototype.isVisibleObject=G.prototype.wl=function(){if(!this.visible)return!1;var a=this.U;return null!==a?a.wl():!0};
function Lm(a){if(0!==(a.fa&2048)===!0){var b=a.ne;b.reset();if(!a.mc.G()||!a.kd.G()){Om(a,!1);return}b.translate(a.mc.x,a.mc.y);b.translate(-a.Ca.x,-a.Ca.y);var c=a.Ha;Cm(a,b,c.x,c.y,c.width,c.height);Om(a,!1);Pm(a,!0)}0!==(a.fa&4096)===!0&&(b=a.U,null===b?(a.Up.set(a.ne),a.Nu=a.scale,Pm(a,!1)):null!==b.Zg&&(c=a.Up,c.reset(),b.Lg()?c.multiply(b.Up):null!==b.U&&c.multiply(b.U.Up),c.multiply(a.ne),a.Nu=a.scale*b.Nu,Pm(a,!1)))}
function Cm(a,b,c,d,e,f){1!==a.scale&&b.scale(a.scale);if(0!==a.angle){var h=Ab;a.ef&&a.ef.cd()&&(h=a.ef);var k=v.L();if(a instanceof R&&a.bc!==a)for(c=a.bc,d=c.Ha,k.Zt(d.x,d.y,d.width,d.height,h),c.Mk.ub(k),k.offset(-c.Ca.x,-c.Ca.y),h=c.U;null!==h&&h!==a;)h.Mk.ub(k),k.offset(-h.Ca.x,-h.Ca.y),h=h.U;else k.Zt(c,d,e,f,h);b.rotate(a.angle,k.x,k.y);v.v(k)}}g=G.prototype;
g.P=function(a){void 0===a&&(a=!1);if(!0!==dl(this)){Qk(this,!0);Gm(this,!0);var b=this.U;null!==b?a||b.P():(a=this.g,null!==a&&(a.gg.add(this),this instanceof S&&(a.la.ib||this.cf(),null!==this.ge&&Qm(this.ge)),a.ve(!0)));if(this instanceof D){if(this.ia===sk||this.ia===xi)a=this.Ye(),null!==a&&a.P(!0);a=this.ya.n;for(var b=a.length,c=0;c<b;c++){var d=a[c];!0!==dl(d)&&(d.wa.G()||(d instanceof Mi||d instanceof D||d instanceof $g||Em(d,!1)!==Ni)&&d.P(!0))}}}};
g.ep=function(){!1===dl(this)&&(Qk(this,!0),Gm(this,!0))};function Qm(a){if(!1===el(a)){if(null!==a.U)a.U.P();else{var b=a.g;null!==b&&(b.gg.add(a),a instanceof S&&a.cf(),b.ve())}Gm(a,!0)}}g.ti=function(){0!==(this.fa&2048)===!1&&(Om(this,!0),Pm(this,!0))};g.yz=function(){Pm(this,!0)};g.pa=function(){var a=this.Y;null!==a&&a.pa()};
function Em(a,b){var c=a.stretch,d=a.U;if(null!==d&&d.ia===Rm)return Sm(a,d.Bd(a.cc),d.Ad(a.column),b);if(null!==d&&d.ia===sk&&d.Ye()===a)return Tm(a,Fe,b);if(c===sm){if(null!==d){if(d.ia===Li&&d.Ye()===a)return Tm(a,Fe,b);c=d.Od;return c===sm?Tm(a,Ni,b):Tm(a,c,b)}return Tm(a,Ni,b)}return Tm(a,c,b)}
function Sm(a,b,c,d){var e=a.stretch;if(e!==sm)return Tm(a,e,d);var f=e=null;switch(b.stretch){case tm:f=!0;break;case Fe:f=!0}switch(c.stretch){case um:e=!0;break;case Fe:e=!0}b=a.U.Od;null===e&&(e=b===um||b===Fe);null===f&&(f=b===tm||b===Fe);return!0===e&&!0===f?Tm(a,Fe,d):!0===e?Tm(a,um,d):!0===f?Tm(a,tm,d):Tm(a,Ni,d)}
function Tm(a,b,c){if(c)return b;if(b===Ni)return Ni;c=a.wa;if(c.G())return Ni;a=a.angle;if(!isNaN(c.width))if(90!==a&&270!==a){if(b===um)return Ni;if(b===Fe)return tm}else{if(b===tm)return Ni;if(b===Fe)return um}if(!isNaN(c.height))if(90!==a&&270!==a){if(b===tm)return Ni;if(b===Fe)return um}else{if(b===um)return Ni;if(b===Fe)return tm}return b}
v.defineProperty(G,{Ut:"segmentOrientation"},function(){return this.fs},function(a){var b=this.fs;b!==a&&(this.fs=a,this.P(),this.h("segmentOrientation",b,a),a===Ai&&(this.angle=0))});v.defineProperty(G,{we:"segmentIndex"},function(){return this.ds},function(a){a=Math.round(a);var b=this.ds;b!==a&&(this.ds=a,this.P(),this.h("segmentIndex",b,a))});
v.defineProperty(G,{gA:"segmentFraction"},function(){return this.cs},function(a){isNaN(a)?a=0:0>a?a=0:1<a&&(a=1);var b=this.cs;b!==a&&(this.cs=a,this.P(),this.h("segmentFraction",b,a))});v.defineProperty(G,{PE:"segmentOffset"},function(){return this.es},function(a){var b=this.es;b.K(a)||(this.es=a=a.R(),this.P(),this.h("segmentOffset",b,a))});v.defineProperty(G,{stretch:"stretch"},function(){return this.Rh},function(a){var b=this.Rh;b!==a&&(this.Rh=a,this.P(),this.h("stretch",b,a))});
v.defineProperty(G,{name:"name"},function(){return this.Ob},function(a){var b=this.Ob;b!==a&&(this.Ob=a,null!==this.Y&&(this.Y.em=null),this.h("name",b,a))});v.defineProperty(G,{opacity:"opacity"},function(){return this.Rc},function(a){var b=this.Rc;b!==a&&(v.j(a,"number",G,"opacity"),(0>a||1<a)&&v.va(a,"0 <= value <= 1",G,"opacity"),this.Rc=a,this.h("opacity",b,a),a=this.g,b=this.Y,null!==a&&null!==b&&a.pa(ak(b,b.V)))});
v.defineProperty(G,{visible:"visible"},function(){return 0!==(this.fa&1)},function(a){var b=0!==(this.fa&1);b!==a&&(this.fa^=1,this.h("visible",b,a),b=this.U,null!==b?b.P():this instanceof R&&this.od(a),this.pa(),Um(this))});v.defineProperty(G,{Hg:"pickable"},function(){return 0!==(this.fa&2)},function(a){var b=0!==(this.fa&2);b!==a&&(this.fa^=2,this.h("pickable",b,a))});
v.defineProperty(G,{QG:"fromLinkableDuplicates"},function(){return 0!==(this.fa&4)},function(a){var b=0!==(this.fa&4);b!==a&&(this.fa^=4,this.h("fromLinkableDuplicates",b,a))});v.defineProperty(G,{RG:"fromLinkableSelfNode"},function(){return 0!==(this.fa&8)},function(a){var b=0!==(this.fa&8);b!==a&&(this.fa^=8,this.h("fromLinkableSelfNode",b,a))});
v.defineProperty(G,{II:"toLinkableDuplicates"},function(){return 0!==(this.fa&16)},function(a){var b=0!==(this.fa&16);b!==a&&(this.fa^=16,this.h("toLinkableDuplicates",b,a))});v.defineProperty(G,{JI:"toLinkableSelfNode"},function(){return 0!==(this.fa&32)},function(a){var b=0!==(this.fa&32);b!==a&&(this.fa^=32,this.h("toLinkableSelfNode",b,a))});
v.defineProperty(G,{Sf:"isPanelMain"},function(){return 0!==(this.fa&64)},function(a){var b=0!==(this.fa&64);b!==a&&(this.fa^=64,this.P(),this.h("isPanelMain",b,a))});v.defineProperty(G,{Ew:"isActionable"},function(){return 0!==(this.fa&128)},function(a){var b=0!==(this.fa&128);b!==a&&(this.fa^=128,this.h("isActionable",b,a))});
v.defineProperty(G,{Am:"areaBackground"},function(){return this.nc},function(a){var b=this.nc;b!==a&&(a instanceof ha&&a.freeze(),this.nc=a,this.pa(),this.h("areaBackground",b,a))});v.defineProperty(G,{background:"background"},function(){return this.Ib},function(a){var b=this.Ib;b!==a&&(a instanceof ha&&a.freeze(),this.Ib=a,this.pa(),this.h("background",b,a))});function Nm(a,b){a.fa=b?a.fa|512:a.fa&-513}function Vm(a,b){a.fa=b?a.fa|1024:a.fa&-1025}function Om(a,b){a.fa=b?a.fa|2048:a.fa&-2049}
function Pm(a,b){a.fa=b?a.fa|4096:a.fa&-4097}function dl(a){return 0!==(a.fa&8192)}function Qk(a,b){a.fa=b?a.fa|8192:a.fa&-8193}function el(a){return 0!==(a.fa&16384)}function Gm(a,b){a.fa=b?a.fa|16384:a.fa&-16385}v.u(G,{Y:"part"},function(){if(this instanceof R)return this;if(null!==this.jm)return this.jm;var a;for(a=this.U;a;){if(a instanceof R)return this.jm=a;a=a.U}return null});v.u(G,{U:"panel"},function(){return this.Xg});G.prototype.Bl=function(a){this.Xg=a};
v.u(G,{layer:"layer"},function(){var a=this.Y;return null!==a?a.layer:null},{configurable:!0});v.u(G,{g:"diagram"},function(){var a=this.Y;return null!==a?a.g:null},{configurable:!0});v.defineProperty(G,{position:"position"},function(){return this.kb},function(a){var b=this.kb;b.K(a)||(a=a.R(),this.lA(a,b)&&this.h("position",b,a))});G.prototype.lA=function(a){this.kb=a;Qm(this);this.ti();return!0};G.prototype.mx=function(a,b){this.kb.m(a,b);Wm(this);this.ti()};v.u(G,{V:"actualBounds"},function(){return this.mc});
v.defineProperty(G,{scale:"scale"},function(){return this.Tb},function(a){var b=this.Tb;b!==a&&(0>=a&&v.k("GraphObject.scale for "+this+" must be greater than zero, not: "+a),this.Tb=a,this.ti(),this.P(),this.h("scale",b,a))});v.defineProperty(G,{angle:"angle"},function(){return this.Kl},function(a){var b=this.Kl;b!==a&&(a%=360,0>a&&(a+=360),b!==a&&(this.Kl=a,this.P(),this.ti(),this.h("angle",b,a)))});
v.defineProperty(G,{wa:"desiredSize"},function(){return this.mf},function(a){var b=this.mf;b.K(a)||(this.mf=a=a.R(),this.P(),this instanceof X&&this.se(),this.h("desiredSize",b,a),a=this.Y,null!==a&&0!==(this.fa&1024)&&(Am(this,a,"width"),Am(this,a,"height")))});
v.defineProperty(G,{width:"width"},function(){return this.mf.width},function(a){if(this.mf.width!==a){var b=this.mf;this.mf=a=(new ia(a,this.mf.height)).freeze();this.P();this instanceof X&&this.se();this.h("desiredSize",b,a);b=this.Y;null!==b&&0!==(this.fa&1024)&&Am(this,b,"width")}});
v.defineProperty(G,{height:"height"},function(){return this.mf.height},function(a){if(this.mf.height!==a){var b=this.mf;this.mf=a=(new ia(this.mf.width,a)).freeze();this.P();this instanceof X&&this.se();this.h("desiredSize",b,a);b=this.Y;null!==b&&0!==(this.fa&1024)&&Am(this,b,"height")}});
v.defineProperty(G,{jh:"minSize"},function(){return this.Aj},function(a){var b=this.Aj;b.K(a)||(a=a.copy(),isNaN(a.width)&&(a.width=0),isNaN(a.height)&&(a.height=0),a.freeze(),this.Aj=a,this.P(),this.h("minSize",b,a))});v.defineProperty(G,{yf:"maxSize"},function(){return this.yj},function(a){var b=this.yj;b.K(a)||(a=a.copy(),isNaN(a.width)&&(a.width=Infinity),isNaN(a.height)&&(a.height=Infinity),a.freeze(),this.yj=a,this.P(),this.h("maxSize",b,a))});v.u(G,{Ca:"measuredBounds"},function(){return this.kd});
v.u(G,{Ha:"naturalBounds"},function(){return this.Qc},{configurable:!0});v.defineProperty(G,{margin:"margin"},function(){return this.kr},function(a){"number"===typeof a&&(a=new eb(a));var b=this.kr;b.K(a)||(this.kr=a=a.R(),this.P(),this.h("margin",b,a))});v.u(G,{transform:null},function(){0!==(this.fa&2048)===!0&&Lm(this);return this.ne});v.u(G,{Zg:null},function(){0!==(this.fa&4096)===!0&&Lm(this);return this.Up});
v.defineProperty(G,{alignment:"alignment"},function(){return this.Be},function(a){var b=this.Be;b.K(a)||(a.te()&&!a.Uc()&&v.k("GraphObject.alignment for "+this+" must be a real Spot or Spot.Default, not: "+a),this.Be=a=a.R(),Qm(this),this.h("alignment",b,a))});v.defineProperty(G,{column:"column"},function(){return this.cq},function(a){a=Math.round(a);var b=this.cq;b!==a&&(0>a&&v.va(a,">= 0",G,"column"),this.cq=a,this.P(),this.h("column",b,a))});
v.defineProperty(G,{pG:"columnSpan"},function(){return this.ji},function(a){a=Math.round(a);var b=this.ji;b!==a&&(1>a&&v.va(a,">= 1",G,"columnSpan"),this.ji=a,this.P(),this.h("columnSpan",b,a))});v.defineProperty(G,{cc:"row"},function(){return this.Zr},function(a){a=Math.round(a);var b=this.Zr;b!==a&&(0>a&&v.va(a,">= 0",G,"row"),this.Zr=a,this.P(),this.h("row",b,a))});
v.defineProperty(G,{rowSpan:"rowSpan"},function(){return this.Hi},function(a){a=Math.round(a);var b=this.Hi;b!==a&&(1>a&&v.va(a,">= 1",G,"rowSpan"),this.Hi=a,this.P(),this.h("rowSpan",b,a))});v.defineProperty(G,{px:"spanAllocation"},function(){return this.ts},function(a){var b=this.ts;b!==a&&(null!==a&&v.j(a,"function",G,"spanAllocation"),this.ts=a,this.h("spanAllocation",b,a))});
v.defineProperty(G,{Sj:"alignmentFocus"},function(){return this.Tp},function(a){var b=this.Tp;b.K(a)||(!a.te()||a.Uc()||a.K(sb)&&this instanceof S||v.k("GraphObject.alignmentFocus must be a real Spot or Spot.Default, not: "+a),this.Tp=a=a.R(),this.P(),this.h("alignmentFocus",b,a))});
v.defineProperty(G,{Ud:"portId"},function(){return this.Lr},function(a){var b=this.Lr;if(b!==a){var c=this.Y;null===c||c instanceof S||(v.k("Cannot set portID on a Link: "+a),c=null);null!==b&&null!==c&&Xm(c,this);this.Lr=a;if(null!==a&&c){c.Ch=!0;null===c.Yd&&Ym(c);var d=this.Ud;null!==d&&c.Yd.add(d,this)}this.h("portId",b,a)}});function Um(a){var b=a.Y;b instanceof S&&(a=a.g,null===a||a.la.ib||b.cf())}
v.defineProperty(G,{yb:"toSpot"},function(){return null!==this.ga?this.ga.Pj:sb},function(a){this.Le();var b=this.ga.Pj;b.K(a)||(a=a.R(),this.ga.Pj=a,this.h("toSpot",b,a),Um(this))});v.defineProperty(G,{Gl:"toEndSegmentLength"},function(){return null!==this.ga?this.ga.Nj:10},function(a){this.Le();var b=this.ga.Nj;b!==a&&(0>a&&v.va(a,">= 0",G,"toEndSegmentLength"),this.ga.Nj=a,this.h("toEndSegmentLength",b,a),Um(this))});
v.defineProperty(G,{du:"toEndSegmentDirection"},function(){return null!==this.ga?this.ga.Mj:ym},function(a){this.Le();var b=this.ga.Mj;b!==a&&(this.ga.Mj=a,this.h("toEndSegmentDirection",b,a),Um(this))});v.defineProperty(G,{eu:"toShortLength"},function(){return null!==this.ga?this.ga.Oj:0},function(a){this.Le();var b=this.ga.Oj;b!==a&&(this.ga.Oj=a,this.h("toShortLength",b,a),Um(this))});
v.defineProperty(G,{bF:"toLinkable"},function(){return this.As},function(a){var b=this.As;b!==a&&(this.As=a,this.h("toLinkable",b,a))});v.defineProperty(G,{KI:"toMaxLinks"},function(){return this.Bs},function(a){var b=this.Bs;b!==a&&(0>a&&v.va(a,">= 0",G,"toMaxLinks"),this.Bs=a,this.h("toMaxLinks",b,a))});v.defineProperty(G,{xb:"fromSpot"},function(){return null!==this.ga?this.ga.nj:sb},function(a){this.Le();var b=this.ga.nj;b.K(a)||(a=a.R(),this.ga.nj=a,this.h("fromSpot",b,a),Um(this))});
v.defineProperty(G,{ll:"fromEndSegmentLength"},function(){return null!==this.ga?this.ga.lj:10},function(a){this.Le();var b=this.ga.lj;b!==a&&(0>a&&v.va(a,">= 0",G,"fromEndSegmentLength"),this.ga.lj=a,this.h("fromEndSegmentLength",b,a),Um(this))});v.defineProperty(G,{jt:"fromEndSegmentDirection"},function(){return null!==this.ga?this.ga.kj:ym},function(a){this.Le();var b=this.ga.kj;b!==a&&(this.ga.kj=a,this.h("fromEndSegmentDirection",b,a),Um(this))});
v.defineProperty(G,{kt:"fromShortLength"},function(){return null!==this.ga?this.ga.mj:0},function(a){this.Le();var b=this.ga.mj;b!==a&&(this.ga.mj=a,this.h("fromShortLength",b,a),Um(this))});v.defineProperty(G,{MD:"fromLinkable"},function(){return this.Fq},function(a){var b=this.Fq;b!==a&&(this.Fq=a,this.h("fromLinkable",b,a))});
v.defineProperty(G,{qz:"fromMaxLinks"},function(){return this.Gq},function(a){var b=this.Gq;b!==a&&(0>a&&v.va(a,">= 0",G,"fromMaxLinks"),this.Gq=a,this.h("fromMaxLinks",b,a))});v.defineProperty(G,{cursor:"cursor"},function(){return this.nq},function(a){var b=this.nq;b!==a&&(v.j(a,"string",G,"cursor"),this.nq=a,this.h("cursor",b,a))});
v.defineProperty(G,{click:"click"},function(){return null!==this.ha?this.ha.hi:null},function(a){vm(this);var b=this.ha.hi;b!==a&&(null!==a&&v.j(a,"function",G,"click"),this.ha.hi=a,this.h("click",b,a))});v.defineProperty(G,{$s:"doubleClick"},function(){return null!==this.ha?this.ha.qi:null},function(a){vm(this);var b=this.ha.qi;b!==a&&(null!==a&&v.j(a,"function",G,"doubleClick"),this.ha.qi=a,this.h("doubleClick",b,a))});
v.defineProperty(G,{cz:"contextClick"},function(){return null!==this.ha?this.ha.ki:null},function(a){vm(this);var b=this.ha.ki;b!==a&&(null!==a&&v.j(a,"function",G,"contextClick"),this.ha.ki=a,this.h("contextClick",b,a))});v.defineProperty(G,{Ft:"mouseEnter"},function(){return null!==this.ha?this.ha.wr:null},function(a){vm(this);var b=this.ha.wr;b!==a&&(null!==a&&v.j(a,"function",G,"mouseEnter"),this.ha.wr=a,this.h("mouseEnter",b,a))});
v.defineProperty(G,{Gt:"mouseLeave"},function(){return null!==this.ha?this.ha.xr:null},function(a){vm(this);var b=this.ha.xr;b!==a&&(null!==a&&v.j(a,"function",G,"mouseLeave"),this.ha.xr=a,this.h("mouseLeave",b,a))});v.defineProperty(G,{Pz:"mouseOver"},function(){return null!==this.ha?this.ha.Di:null},function(a){vm(this);var b=this.ha.Di;b!==a&&(null!==a&&v.j(a,"function",G,"mouseOver"),this.ha.Di=a,this.h("mouseOver",b,a))});
v.defineProperty(G,{Oz:"mouseHover"},function(){return null!==this.ha?this.ha.Ci:null},function(a){vm(this);var b=this.ha.Ci;b!==a&&(null!==a&&v.j(a,"function",G,"mouseHover"),this.ha.Ci=a,this.h("mouseHover",b,a))});v.defineProperty(G,{Nz:"mouseHold"},function(){return null!==this.ha?this.ha.Bi:null},function(a){vm(this);var b=this.ha.Bi;b!==a&&(null!==a&&v.j(a,"function",G,"mouseHold"),this.ha.Bi=a,this.h("mouseHold",b,a))});
v.defineProperty(G,{RH:"mouseDragEnter"},function(){return null!==this.ha?this.ha.ur:null},function(a){vm(this);var b=this.ha.ur;b!==a&&(null!==a&&v.j(a,"function",G,"mouseDragEnter"),this.ha.ur=a,this.h("mouseDragEnter",b,a))});v.defineProperty(G,{SH:"mouseDragLeave"},function(){return null!==this.ha?this.ha.vr:null},function(a){vm(this);var b=this.ha.vr;b!==a&&(null!==a&&v.j(a,"function",G,"mouseDragLeave"),this.ha.vr=a,this.h("mouseDragLeave",b,a))});
v.defineProperty(G,{Mz:"mouseDrop"},function(){return null!==this.ha?this.ha.Ai:null},function(a){vm(this);var b=this.ha.Ai;b!==a&&(null!==a&&v.j(a,"function",G,"mouseDrop"),this.ha.Ai=a,this.h("mouseDrop",b,a))});v.defineProperty(G,{YC:"actionDown"},function(){return null!==this.ha?this.ha.Np:null},function(a){vm(this);var b=this.ha.Np;b!==a&&(null!==a&&v.j(a,"function",G,"actionDown"),this.ha.Np=a,this.h("actionDown",b,a))});
v.defineProperty(G,{ZC:"actionMove"},function(){return null!==this.ha?this.ha.Op:null},function(a){vm(this);var b=this.ha.Op;b!==a&&(null!==a&&v.j(a,"function",G,"actionMove"),this.ha.Op=a,this.h("actionMove",b,a))});v.defineProperty(G,{$C:"actionUp"},function(){return null!==this.ha?this.ha.Pp:null},function(a){vm(this);var b=this.ha.Pp;b!==a&&(null!==a&&v.j(a,"function",G,"actionUp"),this.ha.Pp=a,this.h("actionUp",b,a))});
v.defineProperty(G,{XC:"actionCancel"},function(){return null!==this.ha?this.ha.Mp:null},function(a){vm(this);var b=this.ha.Mp;b!==a&&(null!==a&&v.j(a,"function",G,"actionCancel"),this.ha.Mp=a,this.h("actionCancel",b,a))});v.defineProperty(G,{uA:"toolTip"},function(){return null!==this.ha?this.ha.Ji:null},function(a){vm(this);var b=this.ha.Ji;b!==a&&(null!==a&&v.A(a,Tg,G,"toolTip"),this.ha.Ji=a,this.h("toolTip",b,a))});
v.defineProperty(G,{contextMenu:"contextMenu"},function(){return null!==this.ha?this.ha.li:null},function(a){vm(this);var b=this.ha.li;b!==a&&(null!==a&&v.A(a,Tg,G,"contextMenu"),this.ha.li=a,this.h("contextMenu",b,a))});G.prototype.bind=G.prototype.bind=function(a){a.qg=this;var b=this.Wo();null!==b&&Zm(b)&&v.k("Cannot add a Binding to a template that has already been copied: "+a);null===this.rc&&(this.rc=new I(zg));this.rc.add(a)};
G.prototype.findTemplateBinder=G.prototype.Wo=function(){for(var a=this instanceof D?this:this.U;null!==a;){if(null!==a.tk)return a;a=a.U}return null};G.prototype.setProperties=function(a){v.Wt(this,a)};var $m;
G.make=$m=function(a,b){var c=arguments,d=null,e=null;if("function"===typeof a)e=a;else if("string"===typeof a){var f=an.ja(a);"function"===typeof f?(c=v.dl(arguments),d=f(c)):e=ea[a]}null===d&&(void 0===e&&(d=window.$,void 0!==d&&void 0!==d.noop&&v.k("GraphObject.make failed to complete. Is it conflicting with another $ var? (such as jQuery)"),v.k("GraphObject.make failed to complete, it may be conflicting with another var.")),null!==e&&e.constructor||v.k("GraphObject.make requires a class function or class name, not: "+
a),d=new e);f=1;if(d instanceof E&&1<c.length){var h=d,e=c[1];if("string"===typeof e||e instanceof HTMLDivElement)qk(h,e),f++}for(;f<c.length;f++)e=c[f],void 0===e?v.k("Undefined value at argument "+f+" for object being constructed by GraphObject.make: "+d):bn(d,e);return d};
function bn(a,b){if("string"===typeof b)if(a instanceof $g)a.text=b;else if(a instanceof X)a.Ab=b;else if(a instanceof kk)a.source=b;else if(a instanceof D){var c=ra(D,b);null!==c?a.type=c:v.k("Unknown Panel type as an argument to GraphObject.make: "+b)}else a instanceof ha?(c=ra(ha,b),null!==c?a.type=c:v.k("Unknown Brush type as an argument to GraphObject.make: "+b)):a instanceof re?(c=ra(re,b),null!==c?a.type=c:v.k("Unknown Geometry type as an argument to GraphObject.make: "+b)):a instanceof wf?
(c=ra(wf,b),null!==c?a.type=c:v.k("Unknown PathSegment type as an argument to GraphObject.make: "+b)):v.k("Unable to use a string as an argument to GraphObject.make: "+b);else if(b instanceof G)c=b,a instanceof D||v.k("A GraphObject can only be added to a Panel, not to: "+a),a.add(c);else if(b instanceof tg){var d=b,c=a,e;d.ee&&c.getRowDefinition?e=c.getRowDefinition(d.index):!d.ee&&c.getColumnDefinition?e=c.getColumnDefinition(d.index):v.k("A RowColumnDefinition can only be added to a Panel, not to: "+
a);e.Ys(d)}else if(b instanceof fa)a instanceof W&&b.qe===W?2===(b.value&2)?a.gx=b:b===Hi||b===zi||b===yi?a.Je=b:b===cn||b===dn||b===en?a.Ps=b:b!==fn&&b!==Ai&&v.k("Unknown Link enum value for a Link property: "+b):a instanceof D&&b.qe===D?a.type=b:a instanceof $g&&b.qe===$g?a.rF=b:a instanceof X&&(b===Ni||b===Pi||b===Qi||b===sm)?a.rz=b:a instanceof kk&&(b===Ni||b===Pi||b===Qi)?a.eH=b:a instanceof G&&b.qe===W?(c=a,0===b.name.indexOf("Orient")?c.Ut=b:v.k("Unknown Link enum value for GraphObject.segmentOrientation property: "+
b)):a instanceof G&&b.qe===G?a.stretch=b:a instanceof tg&&b.qe===tg?a.$t=b:a instanceof E&&b.qe===E?a.al=b:a instanceof ha&&b.qe===ha?a.type=b:a instanceof re&&b.qe===re?a.type=b:a instanceof wf&&b.qe===wf?a.type=b:a instanceof zg&&b.qe===zg?a.mode=b:a instanceof zf&&b.qe===zf?a.wc=b:a instanceof Z&&b.qe===Z?0===b.name.indexOf("Alignment")?a.alignment=b:0===b.name.indexOf("Arrangement")?a.Of=b:0===b.name.indexOf("Compaction")?a.compaction=b:0===b.name.indexOf("Path")?a.path=b:0===b.name.indexOf("Sorting")?
a.sorting=b:0===b.name.indexOf("Style")?a.NI=b:v.k("Unknown enum value: "+b):a instanceof gn&&b.qe===gn?0===b.name.indexOf("Aggressive")?a.cG=b:0===b.name.indexOf("Cycle")?a.yG=b:0===b.name.indexOf("Init")?a.jH=b:0===b.name.indexOf("Layer")?a.zH=b:v.k("Unknown enum value: "+b):a instanceof lm&&b.qe===lm?b===hn||b===jn||b===kn||b===ln?a.sorting=b:b===mn||b===nn?a.Of=b:b===tn||b===un?a.alignment=b:v.k("Unknown enum value: "+b):a instanceof vn&&b.qe===vn?b===wn||b===xn||b===yn||b===zn||b===An?a.sorting=
b:b===Bn||b===Cn||b===Dn||b===En?a.direction=b:b===Fn||b===Gn||b===Hn||b===In?a.Of=b:b===Jn||b===Kn?a.Qw=b:v.k("Unknown enum value: "+b):v.k("No property to set for this enum value: "+b);else if(b instanceof zg)a instanceof G?a.bind(b):a instanceof tg?a.bind(b):v.k("A Binding can only be applied to a GraphObject or RowColumnDefinition, not to: "+a);else if(b instanceof Ee)a instanceof re?a.Ub.add(b):v.k("A PathFigure can only be added to a Geometry, not to: "+a);else if(b instanceof wf)a instanceof
Ee?a.sb.add(b):v.k("A PathSegment can only be added to a PathFigure, not to: "+a);else if(b instanceof Yf)a instanceof E?a.Pb=b:a instanceof V?a.Pb=b:v.k("A Layout can only be assigned to a Diagram or a Group, not to: "+a);else if(Array.isArray(b))for(c=0;c<b.length;c++)bn(a,b[c]);else if("object"===typeof b&&null!==b)if(a instanceof ha){e=new ta;for(c in b)d=parseFloat(c),isNaN(d)?e[c]=b[c]:a.addColorStop(d,b[c]);v.Wt(a,e)}else if(a instanceof tg){void 0!==b.row?(e=b.row,(void 0===e||null===e||Infinity===
e||isNaN(e)||0>e)&&v.k("Must specify non-negative integer row for RowColumnDefinition "+b+", not: "+e),a.ee=!0,a.index=e):void 0!==b.column&&(e=b.column,(void 0===e||null===e||Infinity===e||isNaN(e)||0>e)&&v.k("Must specify non-negative integer column for RowColumnDefinition "+b+", not: "+e),a.ee=!1,a.index=e);e=new ta;for(c in b)"row"!==c&&"column"!==c&&(e[c]=b[c]);v.Wt(a,e)}else v.Wt(a,b);else v.k('Unknown initializer "'+b+'" for object being constructed by GraphObject.make: '+a)}
var an=new na("string","function");G.getBuilders=function(){var a=new na("string","function"),b;for(b in an)if(b!==b.toLowerCase()){var c=an[b];"function"===typeof c&&a.add(b,c)}a.freeze();return a};var Ln;G.defineBuilder=Ln=function(a,b){v.j(a,"string",G,"defineBuilder:name");v.j(b,"function",G,"defineBuilder:func");var c=a.toLowerCase();""!==a&&"none"!==c&&a!==c||v.k("Shape.defineFigureGenerator name must not be empty or None or all-lower-case: "+a);an.add(a,b)};var Mn;
G.takeBuilderArgument=Mn=function(a,b,c){void 0===c&&(c=null);var d=a[1];if("function"===typeof c?c(d):"string"===typeof d)return a.splice(1,1),d;if(void 0===b)throw Error("no "+("function"===typeof c?"satisfactory":"string")+" argument for GraphObject builder "+a[0]);return b};
Ln("Button",function(){var a=new ha(Uf);a.addColorStop(0,"white");a.addColorStop(1,"lightgray");var b=new ha(Uf);b.addColorStop(0,"white");b.addColorStop(1,"dodgerblue");a=$m(D,sk,{Ew:!0},{_buttonFillNormal:a,_buttonStrokeNormal:"gray",_buttonFillOver:b,_buttonStrokeOver:"blue"},$m(X,{name:"ButtonBorder",Ab:"Rectangle",B:new L(0,0,2.761423749153968,2.761423749153968),C:new L(1,1,-2.761423749153968,-2.761423749153968),fill:a,stroke:"gray"}));a.Ft=function(a,b){var e=b.de("ButtonBorder");if(e instanceof
X){var f=b._buttonFillOver;b._buttonFillNormal=e.fill;e.fill=f;f=b._buttonStrokeOver;b._buttonStrokeNormal=e.stroke;e.stroke=f}};a.Gt=function(a,b){var e=b.de("ButtonBorder");e instanceof X&&(e.fill=b._buttonFillNormal,e.stroke=b._buttonStrokeNormal)};return a});
Ln("TreeExpanderButton",function(){var a=$m("Button",{_treeExpandedFigure:"MinusLine",_treeCollapsedFigure:"PlusLine"},$m(X,{name:"ButtonIcon",Ab:"MinusLine",wa:ld},(new zg("figure","isTreeExpanded",function(a,c){var d=c.U;return a?d._treeExpandedFigure:d._treeCollapsedFigure})).Rw()),{visible:!1},(new zg("visible","isTreeLeaf",function(a){return!a})).Rw());a.click=function(a,c){var d=c.Y;d instanceof Tg&&(d=d.Nf);if(d instanceof S){var e=d.g;if(null!==e){e=e.nb;if(d.nd){if(!e.canCollapseTree(d))return}else if(!e.canExpandTree(d))return;
a.zc=!0;d.nd?e.collapseTree(d):e.expandTree(d)}}};return a});
Ln("SubGraphExpanderButton",function(){var a=$m("Button",{_subGraphExpandedFigure:"MinusLine",_subGraphCollapsedFigure:"PlusLine"},$m(X,{name:"ButtonIcon",Ab:"MinusLine",wa:ld},(new zg("figure","isSubGraphExpanded",function(a,c){var d=c.U;return a?d._subGraphExpandedFigure:d._subGraphCollapsedFigure})).Rw()));a.click=function(a,c){var d=c.Y;d instanceof Tg&&(d=d.Nf);if(d instanceof V){var e=d.g;if(null!==e){e=e.nb;if(d.fe){if(!e.canCollapseSubGraph(d))return}else if(!e.canExpandSubGraph(d))return;a.zc=
!0;d.fe?e.collapseSubGraph(d):e.expandSubGraph(d)}}};return a});Ln("ContextMenuButton",function(){var a=$m("Button");a.stretch=um;var b=a.de("ButtonBorder");b instanceof X&&(b.Ab="Rectangle",b.B=new L(0,0,2,3),b.C=new L(1,1,-2,-2));return a});
Ln("PanelExpanderButton",function(a){var b=Mn(a,"COLLAPSIBLE");a=$m("Button",$m(X,"TriangleUp",{wa:new ia(6,4)},(new zg("figure","visible",function(a){return a?"TriangleUp":"TriangleDown"})).Rw(b)));var c=a.de("ButtonBorder");c instanceof X&&(c.stroke=null,c.fill="transparent");a.click=function(a,c){var f=c.g;if(null!==f&&!f.ab){var h=c.Y.de(b);null!==h&&(f.Qb("Collapse/Expand Panel"),h.visible=!h.visible,f.yd("Collapse/Expand Panel"))}};return a});
Ln("CheckBoxButton",function(a){var b=Mn(a);a=$m("Button",{"ButtonBorder.fill":"white","ButtonBorder.stroke":"gray",width:14,height:14},$m(X,{name:"ButtonIcon",SG:"M0 4 L3 9 9 0",lb:2,stretch:Fe,rz:Pi,visible:!1},""!==b?(new zg("visible",b)).HH():[]));a.click=function(a,d){if(!(a.g.ab||""!==b&&a.g.ba.ab)){a.zc=!0;var e=d.de("ButtonIcon");e.g.Qb("checkbox");e.visible=!e.visible;"function"===typeof d._doClick&&d._doClick(a,d);e.g.yd("checkbox")}};return a});
Ln("CheckBox",function(a){a=Mn(a);a=$m("CheckBoxButton",a,{name:"Button",margin:new eb(0,1,0,0)});var b=$m(D,"Horizontal",a,{Ew:!0,margin:1,_buttonFillNormal:a._buttonFillNormal,_buttonStrokeNormal:a._buttonStrokeNormal,_buttonFillOver:a._buttonFillOver,_buttonStrokeOver:a._buttonStrokeOver,Ft:a.Ft,Gt:a.Gt,click:a.click,_buttonClick:a.click});a.Ft=null;a.Gt=null;a.click=null;return b});
function wm(){this.li=this.Ji=this.Mp=this.Pp=this.Op=this.Np=this.Ai=this.vr=this.ur=this.Bi=this.Ci=this.Di=this.xr=this.wr=this.ki=this.qi=this.hi=null}wm.prototype.copy=function(){var a=new wm;a.hi=this.hi;a.qi=this.qi;a.ki=this.ki;a.wr=this.wr;a.xr=this.xr;a.Di=this.Di;a.Ci=this.Ci;a.Bi=this.Bi;a.ur=this.ur;a.vr=this.vr;a.Ai=this.Ai;a.Np=this.Np;a.Op=this.Op;a.Pp=this.Pp;a.Mp=this.Mp;a.Ji=this.Ji;a.li=this.li;return a};
function D(a){G.call(this);void 0===a?0===arguments.length?this.ia=Si:v.k("invalid argument to Panel constructor: undefined"):(v.pb(a,D,D,"type"),this.ia=a);this.ya=new I(G);this.Te=Zc;this.Qg=!1;this.ia===vk&&(this.Qg=!0);this.Pq=!1;this.rq=kc;this.oi=sm;this.ia===Rm&&Nn(this);this.Ho=Pi;this.Kq=nd;this.Lq=Xc;this.tk=this.ke=null;this.br=NaN;this.ig=this.sj=null;this.Yn="category";this.hg=null;this.Li=new B(NaN,NaN,NaN,NaN);this.um=null;this.Ch=!1;this.$r=null}v.Ia(D,G);v.Wh(D);v.ea("Panel",D);
function Nn(a){a.hj=Zc;a.zh=1;a.ni=null;a.Ql=null;a.yh=1;a.xh=null;a.Pl=null;a.Nd=[];a.Jd=[];a.pm=On;a.Ol=On;a.Ki=0;a.xi=0}
D.prototype.cloneProtected=function(a){G.prototype.cloneProtected.call(this,a);a.ia=this.ia;a.Te=this.Te.R();a.Qg=this.Qg;a.Pq=this.Pq;a.rq=this.rq.R();a.oi=this.oi;if(a.ia===Rm){a.hj=this.hj.R();a.zh=this.zh;a.ni=this.ni;a.Ql=this.Ql;a.yh=this.yh;a.xh=this.xh;a.Pl=this.Pl;var b=[];if(0<this.Nd.length)for(var c=this.Nd,d=c.length,e=0;e<d;e++)if(void 0!==c[e]){var f=c[e].copy();f.Bl(a);b[e]=f}a.Nd=b;b=[];if(0<this.Jd.length)for(c=this.Jd,d=c.length,e=0;e<d;e++)void 0!==c[e]&&(f=c[e].copy(),f.Bl(a),
b[e]=f);a.Jd=b;a.pm=this.pm;a.Ol=this.Ol;a.Ki=this.Ki;a.xi=this.xi}a.Ho=this.Ho;a.Kq=this.Kq.R();a.Lq=this.Lq.R();a.ke=this.ke;a.tk=this.tk;a.br=this.br;a.sj=this.sj;a.ig=this.ig;a.Yn=this.Yn;a.Li.assign(this.Li);a.Ch=this.Ch;null!==this.$r&&(a.$r=this.$r)};D.prototype.Xh=function(a){G.prototype.Xh.call(this,a);a.ya=this.ya;for(var b=a.ya.n,c=b.length,d=0;d<c;d++)b[d].Xg=a;a.um=null};
D.prototype.copy=function(){var a=G.prototype.copy.call(this);if(null!==a){for(var b=this.ya.n,c=b.length,d=0;d<c;d++){var e=b[d].copy(),f=a;e.Bl(f);e.jm=null;var h=f.ya,k=h.count;h.Cd(k,e);h=f.Y;if(null!==h){h.em=null;null!==e.Ud&&h instanceof S&&(h.Ch=!0);var l=f.g;null!==l&&l.la.ib||h.Lc(Cf,"elements",f,null,e,null,k)}}return a}return null};D.prototype.toString=function(){return"Panel("+this.type+")#"+v.md(this)};var Si;D.Position=Si=v.p(D,"Position",0);D.Horizontal=v.p(D,"Horizontal",1);var rk;
D.Vertical=rk=v.p(D,"Vertical",2);var Li;D.Spot=Li=v.p(D,"Spot",3);var sk;D.Auto=sk=v.p(D,"Auto",4);var Rm;D.Table=Rm=v.p(D,"Table",5);D.Viewbox=v.p(D,"Viewbox",6);var Im;D.TableRow=Im=v.p(D,"TableRow",7);var Jm;D.TableColumn=Jm=v.p(D,"TableColumn",8);var xi;D.Link=xi=v.p(D,"Link",9);var vk;D.Grid=vk=v.p(D,"Grid",10);
v.defineProperty(D,{type:"type"},function(){return this.ia},function(a){var b=this.ia;b!==a&&(b!==Im&&b!==Jm||v.k("Cannot change Panel.type when it is already a TableRow or a TableColumn: "+a),this.ia=a,this.ia===vk?this.Qg=!0:this.ia===Rm&&Nn(this),this.P(),this.h("type",b,a))});v.u(D,{elements:"elements"},function(){return this.ya.i});v.u(D,{Ha:"naturalBounds"},function(){return this.Qc});
v.defineProperty(D,{padding:"padding"},function(){return this.Te},function(a){"number"===typeof a?(0>a&&v.va(a,">= 0",D,"padding"),a=new eb(a)):(v.A(a,eb,D,"padding"),0>a.left&&v.va(a.left,">= 0",D,"padding:value.left"),0>a.right&&v.va(a.right,">= 0",D,"padding:value.right"),0>a.top&&v.va(a.top,">= 0",D,"padding:value.top"),0>a.bottom&&v.va(a.bottom,">= 0",D,"padding:value.bottom"));var b=this.Te;b.K(a)||(this.Te=a=a.R(),this.P(),this.h("padding",b,a))});
v.defineProperty(D,{fl:"defaultAlignment"},function(){return this.rq},function(a){var b=this.rq;b.K(a)||(this.rq=a=a.R(),this.P(),this.h("defaultAlignment",b,a))});v.defineProperty(D,{Od:"defaultStretch"},function(){return this.oi},function(a){var b=this.oi;b!==a&&(v.pb(a,G,D,"defaultStretch"),this.oi=a,this.P(),this.h("defaultStretch",b,a))});
v.defineProperty(D,{GJ:"defaultSeparatorPadding"},function(){return void 0===this.hj?Zc:this.hj},function(a){if(void 0!==this.hj){"number"===typeof a&&(a=new eb(a));var b=this.hj;b.K(a)||(this.hj=a=a.R(),this.h("defaultSeparatorPadding",b,a))}});
v.defineProperty(D,{EJ:"defaultRowSeparatorStroke"},function(){return void 0===this.ni?null:this.ni},function(a){var b=this.ni;b!==a&&(null===a||"string"===typeof a||a instanceof ha)&&(a instanceof ha&&a.freeze(),this.ni=a,this.h("defaultRowSeparatorStroke",b,a))});v.defineProperty(D,{FJ:"defaultRowSeparatorStrokeWidth"},function(){return void 0===this.zh?1:this.zh},function(a){if(void 0!==this.zh){var b=this.zh;b!==a&&isFinite(a)&&0<=a&&(this.zh=a,this.h("defaultRowSeparatorStrokeWidth",b,a))}});
v.defineProperty(D,{DJ:"defaultRowSeparatorDashArray"},function(){return void 0===this.Ql?null:this.Ql},function(a){if(void 0!==this.Ql){var b=this.Ql;if(b!==a){null===a||Array.isArray(a)||v.Gd(a,"Array",D,"defaultRowSeparatorDashArray:value");if(null!==a){for(var c=a.length,d=0,e=0;e<c;e++){var f=a[e];"number"===typeof f&&0<=f&&isFinite(f)||v.k("defaultRowSeparatorDashArray value "+f+" at index "+e+" must be a positive number or zero.");d+=f}if(0===d){if(null===b)return;a=null}}this.Ql=a;this.pa();
this.h("defaultRowSeparatorDashArray",b,a)}}});v.defineProperty(D,{yJ:"defaultColumnSeparatorStroke"},function(){return void 0===this.xh?null:this.xh},function(a){if(void 0!==this.xh){var b=this.xh;b!==a&&(null===a||"string"===typeof a||a instanceof ha)&&(a instanceof ha&&a.freeze(),this.xh=a,this.h("defaultColumnSeparatorStroke",b,a))}});
v.defineProperty(D,{zJ:"defaultColumnSeparatorStrokeWidth"},function(){return void 0===this.yh?1:this.yh},function(a){if(void 0!==this.yh){var b=this.yh;b!==a&&isFinite(a)&&0<=a&&(this.yh=a,this.h("defaultColumnSeparatorStrokeWidth",b,a))}});
v.defineProperty(D,{xJ:"defaultColumnSeparatorDashArray"},function(){return void 0===this.Pl?null:this.Pl},function(a){if(void 0!==this.Pl){var b=this.Pl;if(b!==a){null===a||Array.isArray(a)||v.Gd(a,"Array",D,"defaultColumnSeparatorDashArray:value");if(null!==a){for(var c=a.length,d=0,e=0;e<c;e++){var f=a[e];"number"===typeof f&&0<=f&&isFinite(f)||v.k("defaultColumnSeparatorDashArray value "+f+" at index "+e+" must be a positive number or zero.");d+=f}if(0===d){if(null===b)return;a=null}}this.Pl=
a;this.pa();this.h("defaultColumnSeparatorDashArray",b,a)}}});v.defineProperty(D,{PK:"viewboxStretch"},function(){return this.Ho},function(a){var b=this.Ho;b!==a&&(v.pb(a,G,D,"viewboxStretch"),this.Ho=a,this.h("viewboxStretch",b,a))});
v.defineProperty(D,{Dw:"gridCellSize"},function(){return this.Kq},function(a){var b=this.Kq;b.K(a)||(v.A(a,ia,D,"gridCellSize"),a.G()&&0!==a.width&&0!==a.height||v.k("Invalid Panel.gridCellSize: "+a),this.Kq=a.R(),null!==this.g&&this===this.g.lt&&Zk(this.g),this.pa(),this.h("gridCellSize",b,a))});
v.defineProperty(D,{RD:"gridOrigin"},function(){return this.Lq},function(a){var b=this.Lq;b.K(a)||(v.A(a,y,D,"gridOrigin"),a.G()||v.k("Invalid Panel.gridOrigin: "+a),this.Lq=a.R(),null!==this.g&&Zk(this.g),this.pa(),this.h("gridOrigin",b,a))});g=D.prototype;g.wv=function(a){G.prototype.wv.call(this,a);for(var b=this.ya.n,c=b.length,d=0;d<c;d++)b[d].wv(a)};
g.Wj=function(a,b){if(this.ia===vk){var c=this.Ti()*b.scale;0>=c&&(c=1);var d=this.Dw,e=d.width,d=d.height,f=this.Ha,h=f.width,f=f.height,k=Math.ceil(h/e),l=Math.ceil(f/d),m=this.RD;a.save();a.beginPath();a.rect(0,0,h,f);a.clip();for(var n=[],p=this.ya.n,q=p.length,r=0;r<q;r++){var s=p[r],t=[];n.push(t);if(s.visible)for(var s=xl(s.Ab),u=r+1;u<q;u++){var w=p[u];w.visible&&xl(w.Ab)===s&&(w=w.interval,2<=w&&t.push(w))}}p=this.ya.n;q=p.length;for(r=0;r<q;r++){var x=p[r];if(x.visible&&(t=x.interval,!(2>
e*t*c))){var s=n[r],u=!1,z=!0,A=x.$E;null!==A&&(u=!0,void 0!==a.setLineDash?(a.setLineDash(A),a.lineDashOffset=x.ld):void 0!==a.webkitLineDash?(a.webkitLineDash=A,a.webkitLineDashOffset=x.ld):void 0!==a.mozDash?(a.mozDash=A,a.mozDashOffset=x.ld):z=!1);if("LineV"===x.Ab){a.lineWidth=x.lb;Mm(this,a,x.stroke,!1,!1);a.beginPath();for(var H=w=Math.floor(-m.x/e);H<=w+k;H++){var C=H*e+m.x;0<=C&&C<h&&Pn(H,t,s)&&(u&&!z?zm(a,C,0,C,f,A,x.ld):(a.moveTo(C,0),a.lineTo(C,f)))}a.stroke()}else if("LineH"===x.Ab){a.lineWidth=
x.lb;Mm(this,a,x.stroke,!1,!1);a.beginPath();for(H=w=Math.floor(-m.y/d);H<=w+l;H++)C=H*d+m.y,0<=C&&C<=f&&Pn(H,t,s)&&(u&&!z?zm(a,0,C,h,C,A,x.ld):(a.moveTo(0,C),a.lineTo(h,C)));a.stroke()}else if("BarV"===x.Ab)for(Mm(this,a,x.fill,!0,!1),x=x.width,isNaN(x)&&(x=e),H=w=Math.floor(-m.x/e);H<=w+k;H++)C=H*e+m.x,0<=C&&C<h&&Pn(H,t,s)&&a.fillRect(C,0,x,f);else if("BarH"===x.Ab)for(Mm(this,a,x.fill,!0,!1),x=x.height,isNaN(x)&&(x=d),H=w=Math.floor(-m.y/d);H<=w+l;H++)C=H*d+m.y,0<=C&&C<=f&&Pn(H,t,s)&&a.fillRect(0,
C,h,x);u&&(void 0!==a.setLineDash?(a.setLineDash(v.th),a.lineDashOffset=0):void 0!==a.webkitLineDash?(a.webkitLineDash=v.th,a.webkitLineDashOffset=0):void 0!==a.mozDash&&(a.mozDash=null,a.mozDashOffset=0))}}a.restore();Vc(a,!1)}else{this.ia===Rm&&(a.lineCap="butt",Qn(this,a,!0,this.Nd,!0),Qn(this,a,!1,this.Jd,!0),Rn(this,a,!0,this.Nd),Rn(this,a,!1,this.Jd),Qn(this,a,!0,this.Nd,!1),Qn(this,a,!1,this.Jd,!1));(c=this.$D)&&a.save();e=this.Ye();d=this.ya.n;h=d.length;for(f=0;f<h;f++)k=d[f],c&&k===e&&(a.ow=
!0),k.Xe(a,b),c&&k===e&&(a.ow=!1);c&&(a.restore(),Vc(a,!0))}};
function Rn(a,b,c,d){for(var e=d.length,f=a.V,h=c?a.Bd(0):a.Ad(0),k=0;k<e;k++){var l=d[k];if(void 0!==l&&l!==h&&0!==l.Ma){if(c){if(l.position>f.height)continue}else if(l.position>f.width)continue;var m=l.Ep;isNaN(m)&&(m=c?a.zh:a.yh);var n=l.Dp;null===n&&(n=c?a.ni:a.xh);if(0!==m&&null!==n){Mm(a,b,n,!1,!1);var n=!1,p=!0,q=l.vI;null!==q&&(n=!0,void 0!==b.setLineDash?(b.setLineDash(q),b.lineDashOffset=a.ld):void 0!==b.webkitLineDash?(b.webkitLineDash=q,b.webkitLineDashOffset=a.ld):void 0!==b.mozDash?
(b.mozDash=q,b.mozDashOffset=a.ld):p=!1);b.beginPath();var r=l.position+m;c?r>f.height&&(m-=r-f.height):r>f.width&&(m-=r-f.width);l=l.position+m/2;b.lineWidth=m;r=a.padding;c?(l+=r.top,m=r.left,r=f.width-r.right,n&&!p?zm(b,m,l,r,l,q,0):(b.moveTo(m,l),b.lineTo(r,l))):(l+=r.left,m=r.top,r=f.height-r.bottom,n&&!p?zm(b,l,m,l,r,q,0):(b.moveTo(l,m),b.lineTo(l,r)));b.stroke();n&&(void 0!==b.setLineDash?(b.setLineDash(v.th),b.lineDashOffset=0):void 0!==b.webkitLineDash?(b.webkitLineDash=v.th,b.webkitLineDashOffset=
0):void 0!==b.mozDash&&(b.mozDash=null,b.mozDashOffset=0))}}}}
function Qn(a,b,c,d,e){for(var f=d.length,h=a.V,k=0;k<f;k++){var l=d[k];if(void 0!==l&&null!==l.background&&l.iz!==e&&0!==l.Ma){var m=c?h.height:h.width;if(!(l.position>m)){var n=l.pf(),p=l.Ep;isNaN(p)&&(p=c?a.zh:a.yh);var q=l.Dp;null===q&&(q=c?a.ni:a.xh);null===q&&(p=0);n-=p;p=l.position+p;n+=l.Ma;p+n>m&&(n=m-p);0>=n||(m=a.padding,Mm(a,b,l.background,!0,!1),c?b.fillRect(m.left,p+m.top,h.width-(m.left+m.right),n):b.fillRect(p+m.left,m.top,n,h.height-(m.top+m.bottom)))}}}}
function Pn(a,b,c){if(0!==a%b)return!1;b=c.length;for(var d=0;d<b;d++)if(0===a%c[d])return!1;return!0}function xl(a){return"LineV"===a||"BarV"===a}
g.ap=function(a,b,c,d,e){var f=this.Lg(),h=this.transform,k=1/(h.m11*h.m22-h.m12*h.m21),l=h.m22*k,m=-h.m12*k,n=-h.m21*k,p=h.m11*k,q=k*(h.m21*h.dy-h.m22*h.dx),r=k*(h.m12*h.dx-h.m11*h.dy);if(null!==this.Am)return h=this.V,Zd(h.left,h.top,h.right,h.bottom,a,b,c,d,e);if(null!==this.background)f=a*l+b*n+q,k=a*m+b*p+r,a=c*l+d*n+q,c=c*m+d*p+r,e.m(0,0),d=this.Ha,c=Zd(0,0,d.width,d.height,f,k,a,c,e),e.transform(h);else{f||(l=1,n=m=0,p=1,r=q=0);k=a*l+b*n+q;a=a*m+b*p+r;l=c*l+d*n+q;d=c*m+d*p+r;e.m(l,d);m=(l-
k)*(l-k)+(d-a)*(d-a);c=!1;p=this.ya.n;r=p.length;n=v.L();for(q=0;q<r;q++)b=p[q],b.visible&&b.ap(k,a,l,d,n)&&(c=!0,b=(k-n.x)*(k-n.x)+(a-n.y)*(a-n.y),b<m&&(m=b,e.set(n)));v.v(n);f&&e.transform(h)}return c};g.P=function(a){G.prototype.P.call(this,a);this.ia===sk&&(a=this.Ye(),null!==a&&a.P(!0));a=this.ya.n;for(var b=a.length,c=0;c<b;c++){var d=a[c];!0!==dl(d)&&(d.wa.G()||(d instanceof Mi||d instanceof D||d instanceof $g||Em(d,!1)!==Ni)&&d.P(!0))}};
g.ep=function(){if(!1===dl(this)){Qk(this,!0);Gm(this,!0);for(var a=this.ya.n,b=a.length,c=0;c<b;c++)a[c].ep()}};g.ti=function(){if(0!==(this.fa&2048)===!1){Om(this,!0);Pm(this,!0);for(var a=this.ya.n,b=a.length,c=0;c<b;c++)a[c].yz()}};g.yz=function(){Pm(this,!0);for(var a=this.ya.n,b=a.length,c=0;c<b;c++)a[c].yz()};
g.mp=function(a,b,c,d){var e=this.Li;e.width=0;e.height=0;var f=this.wa,h=this.jh;void 0===c&&(c=h.width,d=h.height);c=Math.max(c,h.width);d=Math.max(d,h.height);var k=this.yf;isNaN(f.width)||(a=Math.min(f.width,k.width));isNaN(f.height)||(b=Math.min(f.height,k.height));a=Math.max(c,a);b=Math.max(d,b);var l=this.padding;a=Math.max(a-l.left-l.right,0);b=Math.max(b-l.top-l.bottom,0);var m=this.ya.n;if(0!==m.length){var n=this.ia.Ob;switch(n){case "Position":var p=a,q=b,r=c,s=d,t=m.length;e.x=0;e.y=
0;e.width=0;for(var u=e.height=0;u<t;u++){var w=m[u];if(w.visible||w===this.bc){var x=w.margin,z=x.right+x.left,A=x.top+x.bottom;fj(w,p,q,r,s);var H=w.Ca,C=Math.max(H.width+z,0),T=Math.max(H.height+A,0),ba=w.position.x,U=w.position.y;isFinite(ba)||(ba=0);isFinite(U)||(U=0);if(w instanceof X){var M=w;if(M.bE)var aa=M.lb/2,ba=ba-aa,U=U-aa}ab(e,ba,U,C,T)}}break;case "Vertical":for(var Ia=a,oa=c,Ga=m.length,pa=v.jb(),Ca=0;Ca<Ga;Ca++){var ua=m[Ca];if(ua.visible||ua===this.bc){var fc=Em(ua,!1);if(fc!==
Ni&&fc!==tm)pa.push(ua);else{var od=ua.margin,pd=od.right+od.left,Je=od.top+od.bottom;fj(ua,Ia,Infinity,oa,0);var Wb=ua.Ca,Gg=Math.max(Wb.width+pd,0),qd=Math.max(Wb.height+Je,0);e.width=Math.max(e.width,Gg);e.height+=qd}}}var ob=pa.length;if(0!==ob){this.wa.width?Ia=Math.min(this.wa.width,this.yf.width):0!==e.width&&(Ia=Math.min(e.width,this.yf.width));for(Ca=0;Ca<ob;Ca++)if(ua=pa[Ca],ua.visible||ua===this.bc)od=ua.margin,pd=od.right+od.left,Je=od.top+od.bottom,fj(ua,Ia,Infinity,oa,0),Wb=ua.Ca,Gg=
Math.max(Wb.width+pd,0),qd=Math.max(Wb.height+Je,0),e.width=Math.max(e.width,Gg),e.height+=qd;v.sa(pa)}break;case "Horizontal":for(var gb=b,ka=d,la=m.length,pb=v.jb(),Ua=0;Ua<la;Ua++){var Ra=m[Ua];if(Ra.visible||Ra===this.bc){var se=Em(Ra,!1);if(se!==Ni&&se!==um)pb.push(Ra);else{var rd=Ra.margin,ae=rd.right+rd.left,Kd=rd.top+rd.bottom;fj(Ra,Infinity,gb,0,ka);var be=Ra.Ca,Hg=Math.max(be.width+ae,0),$c=Math.max(be.height+Kd,0);e.width+=Hg;e.height=Math.max(e.height,$c)}}}var gi=pb.length;if(0!==gi){this.wa.height?
gb=Math.min(this.wa.height,this.yf.height):0!==e.height&&(gb=Math.min(e.height,this.yf.height));for(Ua=0;Ua<gi;Ua++)if(Ra=pb[Ua],Ra.visible||Ra===this.bc)rd=Ra.margin,ae=rd.right+rd.left,Kd=rd.top+rd.bottom,fj(Ra,Infinity,gb,0,ka),be=Ra.Ca,Hg=Math.max(be.width+ae,0),$c=Math.max(be.height+Kd,0),e.width+=Hg,e.height=Math.max(e.height,$c);v.sa(pb)}break;case "Spot":a:{var xb=a,Xb=b,Ld=c,jh=d,Lb=m.length,ib=this.Ye(),bb=ib.margin,Ke=0,Md=0,Ig=bb.right+bb.left,Jg=bb.top+bb.bottom;fj(ib,xb,Xb,Ld,jh);var gc=
ib.Ca,hc=gc.width,ce=gc.height,ad=Math.max(hc+Ig,0),kb=Math.max(ce+Jg,0);e.x=-bb.left;e.y=-bb.top;e.width=ad;e.height=kb;for(var Nc=0;Nc<Lb;Nc++){var Ka=m[Nc];if(Ka!==ib&&(Ka.visible||Ka===this.bc)){bb=Ka.margin;Ke=bb.right+bb.left;Md=bb.top+bb.bottom;fj(Ka,xb,Xb,0,0);var gc=Ka.Ca,ad=Math.max(gc.width+Ke,0),kb=Math.max(gc.height+Md,0),lb=Ka.alignment;lb.Uc()&&(lb=this.fl);lb.cd()||(lb=Ab);var tc=Ka.Sj;tc.Uc()&&(tc=Ab);ab(e,lb.x*hc+lb.offsetX-(tc.x*gc.width-tc.offsetX)-bb.left,lb.y*ce+lb.offsetY-(tc.y*
gc.height-tc.offsetY)-bb.top,ad,kb)}}var sd=ib.stretch;sd===sm&&(sd=Em(ib,!1));switch(sd){case Ni:break a;case Fe:if(!isFinite(xb)&&!isFinite(Xb))break a;break;case um:if(!isFinite(xb))break a;break;case tm:if(!isFinite(Xb))break a}gc=ib.Ca;hc=gc.width;ce=gc.height;ad=Math.max(hc+Ig,0);kb=Math.max(ce+Jg,0);bb=ib.margin;e.x=-bb.left;e.y=-bb.top;e.width=ad;e.height=kb;for(Nc=0;Nc<Lb;Nc++)Ka=m[Nc],Ka===ib||!Ka.visible&&Ka!==this.bc||(bb=Ka.margin,Ke=bb.right+bb.left,Md=bb.top+bb.bottom,gc=Ka.Ca,ad=Math.max(gc.width+
Ke,0),kb=Math.max(gc.height+Md,0),lb=Ka.alignment,lb.Uc()&&(lb=this.fl),lb.cd()||(lb=Ab),tc=Ka.Sj,tc.Uc()&&(tc=Ab),ab(e,lb.x*hc+lb.offsetX-(tc.x*gc.width-tc.offsetX)-bb.left,lb.y*ce+lb.offsetY-(tc.y*gc.height-tc.offsetY)-bb.top,ad,kb))}break;case "Auto":var Ib=a,de=b,qf=c,Le=d,Jf=m.length,Jb=this.Ye(),te=Jb.margin,Mb=te.right+te.left,ic=te.top+te.bottom;fj(Jb,Ib,de,qf,Le);var Rb=Jb.Ca,Ec=0;if(Jb instanceof X)var mb=Jb,Ec=mb.lb*mb.scale;var Cb=Math.max(Rb.width+Mb,0),Kb=Math.max(Rb.height+ic,0),Nd=
Sn(Jb),Kg=Nd.x*Cb+Nd.offsetX,kh=Nd.y*Kb+Nd.offsetY,Nd=Tn(Jb),lh=Nd.x*Cb+Nd.offsetX,ue=Nd.y*Kb+Nd.offsetY,bd=Ib,rf=de;isFinite(Ib)&&(bd=Math.max(Math.abs(Kg-lh)-Ec,0));isFinite(de)&&(rf=Math.max(Math.abs(kh-ue)-Ec,0));var jc=v.Fl();jc.m(0,0);for(var yb=0;yb<Jf;yb++){var zb=m[yb];if(zb!==Jb&&(zb.visible||zb===this.bc)){var te=zb.margin,Fc=te.right+te.left,Lg=te.top+te.bottom;fj(zb,bd,rf,0,0);Rb=zb.Ca;Cb=Math.max(Rb.width+Fc,0);Kb=Math.max(Rb.height+Lg,0);jc.m(Math.max(Cb,jc.width),Math.max(Kb,jc.height))}}if(1===
Jf)e.width=Cb,e.height=Kb,v.Yj(jc);else{var Oc=Sn(Jb),Pc=Tn(Jb),jb=0,Qc=0;Pc.x!==Oc.x&&Pc.y!==Oc.y&&(jb=jc.width/Math.abs(Pc.x-Oc.x),Qc=jc.height/Math.abs(Pc.y-Oc.y));v.Yj(jc);Ec=0;Jb instanceof X&&(mb=Jb,Ec=mb.lb*mb.scale,Oi(mb)===Pi&&(jb=Qc=Math.max(jb,Qc)));var jb=jb+(Math.abs(Oc.offsetX)+Math.abs(Pc.offsetX)+Ec),Qc=Qc+(Math.abs(Oc.offsetY)+Math.abs(Pc.offsetY)+Ec),Od=Jb.stretch;Od===sm&&(Od=Em(Jb,!1));switch(Od){case Ni:Le=qf=0;break;case Fe:isFinite(Ib)&&(jb=Ib);isFinite(de)&&(Qc=de);break;case um:isFinite(Ib)&&
(jb=Ib);Le=0;break;case tm:qf=0,isFinite(de)&&(Qc=de)}Jb instanceof X&&!Jb.wa.G()&&(mb=Jb,mb.Lh?mb.tn=null:mb.Ra=null);Jb.ep();fj(Jb,jb,Qc,qf,Le);e.width=Jb.Ca.width+Mb;e.height=Jb.Ca.height+ic}break;case "Table":for(var ee=a,sf=b,hi=c,pj=d,Fa=m.length,Me=v.jb(),fe=v.jb(),ca=0;ca<Fa;ca++){var da=m[ca],Mg=da instanceof D?da:null;if(null===Mg||Mg.type!==Im&&Mg.type!==Jm||!da.visible)Me.push(da);else{fe.push(da);for(var mh=Mg.ya.n,ii=mh.length,uc=0;uc<ii;uc++){var ji=mh[uc];Mg.type===Im?ji.cc=da.cc:
Mg.type===Jm&&(ji.column=da.column);Me.push(ji)}}}Fa=Me.length;0===Fa&&(this.Bd(0),this.Ad(0));for(var Yb=[],ca=0;ca<Fa;ca++)da=Me[ca],Qk(da,!0),Gm(da,!0),Yb[da.cc]||(Yb[da.cc]=[]),Yb[da.cc][da.column]||(Yb[da.cc][da.column]=[]),Yb[da.cc][da.column].push(da);v.sa(Me);for(var nh=v.jb(),cd=v.jb(),ve=v.jb(),Rc={count:0},td={count:0},Gc=ee,ud=sf,ag=this.Nd,Fa=ag.length,ca=0;ca<Fa;ca++){var Y=ag[ca];void 0!==Y&&(Y.Ma=0)}ag=this.Jd;Fa=ag.length;for(ca=0;ca<Fa;ca++)Y=ag[ca],void 0!==Y&&(Y.Ma=0);for(var we=
Yb.length,Ne=0,ca=0;ca<we;ca++)Yb[ca]&&(Ne=Math.max(Ne,Yb[ca].length));for(var ki=Math.min(this.Ki,we-1),li=Math.min(this.xi,Ne-1),Hc=0,we=Yb.length,ca=0;ca<we;ca++)if(Yb[ca])for(var Ne=Yb[ca].length,qb=this.Bd(ca),uc=qb.Ma=0;uc<Ne;uc++)if(Yb[ca][uc]){var rb=this.Ad(uc);void 0===nh[uc]&&(rb.Ma=0,nh[uc]=!0);for(var Nk=Yb[ca][uc],bg=Nk.length,Ng=0;Ng<bg;Ng++)if(da=Nk[Ng],da.visible||da===this.bc){var Og=1<da.Hi||1<da.ji;Og&&(ca<ki||uc<li||cd.push(da));var Sb=da.margin,cg=Sb.right+Sb.left,dg=Sb.top+
Sb.bottom,ge=Sm(da,qb,rb,!1),xe=da.wa,on=!isNaN(xe.height),mi=!isNaN(xe.width)&&on;Og||ge===Ni||mi||ca<ki||uc<li||(void 0===Rc[uc]&&(Rc[uc]=-1,Rc.count++),void 0===td[ca]&&(td[ca]=-1,td.count++),ve.push(da));fj(da,Infinity,Infinity,0,0);if(!(ca<ki||uc<li)){var Oe=da.Ca,Pe=Math.max(Oe.width+cg,0),vd=Math.max(Oe.height+dg,0);if(1===da.Hi&&(ge===Ni||ge===um)){var Y=this.Bd(ca),dd=Y.pf(),Hc=Math.max(vd-Y.Ma,0);Hc+dd>ud&&(Hc=Math.max(ud-dd,0));var oh=0===Y.Ma;Y.Ma+=Hc;ud=Math.max(ud-(Hc+(oh?dd:0)),0)}1!==
da.ji||ge!==Ni&&ge!==tm||(Y=this.Ad(uc),dd=Y.pf(),Hc=Math.max(Pe-Y.Ma,0),Hc+dd>Gc&&(Hc=Math.max(Gc-dd,0)),oh=0===Y.Ma,Y.Ma+=Hc,Gc=Math.max(Gc-(Hc+(oh?dd:0)),0));Og&&da.ep()}}}v.sa(nh);for(var ye=0,ze=0,Fa=this.Po,ca=0;ca<Fa;ca++)void 0!==this.Jd[ca]&&(ye+=this.Ad(ca).bb);Fa=this.Cp;for(ca=0;ca<Fa;ca++)void 0!==this.Nd[ca]&&(ze+=this.Bd(ca).bb);for(var Gc=Math.max(ee-ye,0),Ok=ud=Math.max(sf-ze,0),Pk=Gc,Fa=ve.length,ca=0;ca<Fa;ca++){var da=ve[ca],qb=this.Bd(da.cc),rb=this.Ad(da.column),Sc=da.Ca,Sb=
da.margin,cg=Sb.right+Sb.left,dg=Sb.top+Sb.bottom;Rc[da.column]=0===rb.Ma?Math.max(Sc.width+cg,Rc[da.column]):null;td[da.cc]=0===qb.Ma?Math.max(Sc.height+dg,td[da.cc]):null}var tf=0,Ae=0;for(ca in td)"count"!==ca&&(tf+=td[ca]);for(ca in Rc)"count"!==ca&&(Ae+=Rc[ca]);for(var Va=v.Fl(),ca=0;ca<Fa;ca++)if(da=ve[ca],da.visible||da===this.bc){var qb=this.Bd(da.cc),rb=this.Ad(da.column),uf=0;isFinite(rb.width)?uf=rb.width:(uf=isFinite(Gc)&&null!==Rc[da.column]?0===Ae?rb.Ma+Gc:Rc[da.column]/Ae*Pk:null!==
Rc[da.column]?Gc:rb.Ma||Gc,uf=Math.max(0,uf-rb.pf()));var Be=0;isFinite(qb.height)?Be=qb.height:(Be=isFinite(ud)&&null!==td[da.cc]?0===tf?qb.Ma+ud:td[da.cc]/tf*Ok:null!==td[da.cc]?ud:qb.Ma||ud,Be=Math.max(0,Be-qb.pf()));Va.m(Math.max(rb.Zi,Math.min(uf,rb.gf)),Math.max(qb.Zi,Math.min(Be,qb.gf)));ge=Sm(da,qb,rb,!1);switch(ge){case um:Va.height=Infinity;break;case tm:Va.width=Infinity}Sb=da.margin;cg=Sb.right+Sb.left;dg=Sb.top+Sb.bottom;da.ep();fj(da,Va.width,Va.height,rb.Zi,qb.Zi);Oe=da.Ca;Pe=Math.max(Oe.width+
cg,0);vd=Math.max(Oe.height+dg,0);isFinite(Gc)&&(Pe=Math.min(Pe,Va.width));isFinite(ud)&&(vd=Math.min(vd,Va.height));var eg=0,eg=qb.Ma;qb.Ma=Math.max(qb.Ma,vd);Hc=qb.Ma-eg;ud=Math.max(ud-Hc,0);eg=rb.Ma;rb.Ma=Math.max(rb.Ma,Pe);Hc=rb.Ma-eg;Gc=Math.max(Gc-Hc,0)}v.sa(ve);for(var Kf=v.Fl(),Fa=cd.length,ca=0;ca<Fa;ca++)if(da=cd[ca],da.visible||da===this.bc){qb=this.Bd(da.cc);rb=this.Ad(da.column);Va.m(Math.max(rb.Zi,Math.min(ee,rb.gf)),Math.max(qb.Zi,Math.min(sf,qb.gf)));ge=Sm(da,qb,rb,!1);switch(ge){case Fe:0!==
rb.Ma&&(Va.width=Math.min(Va.width,rb.Ma));0!==qb.Ma&&(Va.height=Math.min(Va.height,qb.Ma));break;case um:0!==rb.Ma&&(Va.width=Math.min(Va.width,rb.Ma));break;case tm:0!==qb.Ma&&(Va.height=Math.min(Va.height,qb.Ma))}isFinite(rb.width)&&(Va.width=rb.width);isFinite(qb.height)&&(Va.height=qb.height);Kf.m(0,0);for(var cb=1;cb<da.Hi&&!(da.cc+cb>=this.Cp);cb++)Y=this.Bd(da.cc+cb),Kf.height+=Math.max(Y.Zi,isNaN(Y.Ue)?Y.gf:Math.min(Y.Ue,Y.gf));for(cb=1;cb<da.ji&&!(da.column+cb>=this.Po);cb++)Y=this.Ad(da.column+
cb),Kf.width+=Math.max(Y.Zi,isNaN(Y.Ue)?Y.gf:Math.min(Y.Ue,Y.gf));Va.width+=Kf.width;Va.height+=Kf.height;Sb=da.margin;cg=Sb.right+Sb.left;dg=Sb.top+Sb.bottom;fj(da,Va.width,Va.height,hi,pj);for(var Oe=da.Ca,Pe=Math.max(Oe.width+cg,0),vd=Math.max(Oe.height+dg,0),Qe=0,cb=0;cb<da.Hi&&!(da.cc+cb>=this.Cp);cb++)Y=this.Bd(da.cc+cb),Qe+=Y.total||0;if(Qe<vd){var vc=vd-Qe,ni=vd-Qe;if(null!==da.px)for(var fg=da.px,cb=0;cb<da.Hi&&!(0>=vc)&&!(da.cc+cb>=this.Cp);cb++){var Y=this.Bd(da.cc+cb),hb=Y.bb||0,wd=fg(da,
Y,ni);Y.Ma=Math.min(Y.gf,hb+wd);Y.bb!==hb&&(vc-=Y.bb-hb)}for(;0<vc;){hb=Y.bb||0;isNaN(Y.height)&&Y.gf>hb&&(Y.Ma=Math.min(Y.gf,hb+vc),Y.bb!==hb&&(vc-=Y.bb-hb));if(0===Y.index)break;Y=this.Bd(Y.index-1)}}for(var Ce=0,cb=0;cb<da.ji&&!(da.column+cb>=this.Po);cb++)Y=this.Ad(da.column+cb),Ce+=Y.total||0;if(Ce<Pe){vc=Pe-Ce;ni=Pe-Ce;if(null!==da.px)for(fg=da.px,cb=0;cb<da.ji&&!(0>=vc)&&!(da.column+cb>=this.Po);cb++)Y=this.Ad(da.column+cb),hb=Y.bb||0,wd=fg(da,Y,ni),Y.Ma=Math.min(Y.gf,hb+wd),Y.bb!==hb&&(vc-=
Y.bb-hb);for(;0<vc;){hb=Y.bb||0;isNaN(Y.width)&&Y.gf>hb&&(Y.Ma=Math.min(Y.gf,hb+vc),Y.bb!==hb&&(vc-=Y.bb-hb));if(0===Y.index)break;Y=this.Ad(Y.index-1)}}}v.sa(cd);v.Yj(Kf);v.Yj(Va);for(var he=0,ie=0,ge=Em(this,!0),ph=this.wa,qj=this.yf,xd=ze=ye=0,Re=0,Fa=this.Po,ca=0;ca<Fa;ca++)void 0!==this.Jd[ca]&&(Y=this.Ad(ca),isFinite(Y.width)?(xd+=Y.width,xd+=Y.pf()):Un(Y)===Vn?(xd+=Y.bb,xd+=Y.pf()):0!==Y.bb&&(ye+=Y.bb,ye+=Y.pf()));var he=isFinite(ph.width)?Math.min(ph.width,qj.width):ge!==Ni&&isFinite(ee)?
ee:ye,he=Math.max(he,this.jh.width),he=Math.max(he-xd,0),gg=Math.max(he/ye,1);isFinite(gg)||(gg=1);for(ca=0;ca<Fa;ca++)void 0!==this.Jd[ca]&&(Y=this.Ad(ca),isFinite(Y.width)||Un(Y)===Vn||(Y.Ma=Y.bb*gg),Y.position=e.width,0!==Y.bb&&(e.width+=Y.bb,e.width+=Y.pf()));Fa=this.Cp;for(ca=0;ca<Fa;ca++)void 0!==this.Nd[ca]&&(Y=this.Bd(ca),isFinite(Y.height)?(Re+=Y.height,Re+=Y.pf()):Un(Y)===Vn?(Re+=Y.bb,Re+=Y.pf()):0!==Y.bb&&(ze+=Y.bb,ze+=Y.pf()));var ie=isFinite(ph.height)?Math.min(ph.height,qj.height):ge!==
Ni&&isFinite(sf)?sf:ze,ie=Math.max(ie,this.jh.height),ie=Math.max(ie-Re,0),Se=Math.max(ie/ze,1);isFinite(Se)||(Se=1);for(ca=0;ca<Fa;ca++)void 0!==this.Nd[ca]&&(Y=this.Bd(ca),isFinite(Y.height)||Un(Y)===Vn||(Y.Ma=Y.bb*Se),Y.position=e.height,0!==Y.bb&&(e.height+=Y.bb,e.height+=Y.pf()));Fa=fe.length;for(ca=0;ca<Fa;ca++){var Tc=fe[ca];Tc.type===Im?(uf=e.width,Y=this.Bd(Tc.cc),Be=Y.Ma):(Y=this.Ad(Tc.column),uf=Y.Ma,Be=e.height);Tc.kd.m(0,0,uf,Be);Qk(Tc,!1);Yb[Tc.cc]||(Yb[Tc.cc]=[]);Yb[Tc.cc][Tc.column]||
(Yb[Tc.cc][Tc.column]=[]);Yb[Tc.cc][Tc.column].push(Tc)}v.sa(fe);this.$r=Yb;break;case "Viewbox":var Pg=a,Te=b,rj=c,Rq=d;1<m.length&&v.k("Viewbox Panel cannot contain more than one GraphObject.");var Ue=m[0];Ue.Tb=1;Ue.ep();fj(Ue,Infinity,Infinity,rj,Rq);var sj=Ue.Ca,Rk=Ue.margin,Sq=Rk.right+Rk.left,Tq=Rk.top+Rk.bottom;if(isFinite(Pg)||isFinite(Te)){var bt=Ue.scale,Sk=sj.width,Tk=sj.height,Uq=Math.max(Pg-Sq,0),Vq=Math.max(Te-Tq,0),tj=1;this.Ho===Pi?0!==Sk&&0!==Tk&&(tj=Math.min(Uq/Sk,Vq/Tk)):0!==Sk&&
0!==Tk&&(tj=Math.max(Uq/Sk,Vq/Tk));0===tj&&(tj=1E-4);Ue.Tb*=tj;bt!==Ue.scale&&(Qk(Ue,!0),fj(Ue,Infinity,Infinity,rj,Rq))}sj=Ue.Ca;e.width=isFinite(Pg)?Pg:Math.max(sj.width+Sq,0);e.height=isFinite(Te)?Te:Math.max(sj.height+Tq,0);break;case "Link":var Wq=m.length,hg=this instanceof Tg?this.Nf:this;if(hg instanceof W)if(0===Wq){var Uk=this.Qc;Xa(Uk,0,0);var je=this.Ca;je.m(0,0,0,0)}else{var Vk=this instanceof Tg?null:hg.path,ig=hg.an,Ve=this.Li;Ve.assign(ig);Ve.x=0;var Qg=Ve.y=0,jg=hg.points,Qg=void 0!==
this.oa?this.oa:jg.count;this instanceof Tg?this.Vm(!1):hg.Vm(!1);var Xq=ig.width,Yq=ig.height;this.yi.m(ig.x,ig.y);null===this.Mg&&(this.Mg=new I(B));this.Mg.clear();null!==Vk&&(Wn(Vk,Xq,Yq,this),je=Vk.Ca,Ve.ci(je),this.Mg.add(je));for(var oi=v.qh(),uj=v.L(),kg=v.L(),pn=0;pn<Wq;pn++){var Tb=m[pn];if(Tb!==Vk)if(Tb.Sf&&Tb instanceof X)Wn(Tb,Xq,Yq,this),je=Tb.Ca,Ve.ci(je),this.Mg.add(je);else if(2>Qg)fj(Tb,Infinity,Infinity),je=Tb.Ca,Ve.ci(je),this.Mg.add(je);else{var ed=Tb.we,$q=Tb.gA,qn=Tb.Sj;qn.te()&&
(qn=Ab);var vj=Tb.Ut,ct=Tb.PE,wj=0,xj=0,Wk=0;if(ed<-Qg||ed>=Qg){var ar=hg.qE,pi=hg.pE;vj!==Ai&&(Wk=hg.computeAngle(Tb,vj,pi),Tb.Kl=Wk);wj=ar.x-ig.x;xj=ar.y-ig.y}else{var yd,We;if(0<=ed)yd=jg.da(ed),We=ed<Qg-1?jg.da(ed+1):yd;else{var rh=Qg+ed;yd=jg.da(rh);We=0<rh?jg.da(rh-1):yd}if(yd.Fc(We)){var sh,th;0<=ed?(sh=0<ed?jg.da(ed-1):yd,th=ed<Qg-2?jg.da(ed+2):We):(sh=rh<Qg-1?jg.da(rh+1):yd,th=1<rh?jg.da(rh-2):We);var br=sh.sf(yd),cr=We.sf(th),pi=br>cr+10?0<=ed?sh.xc(yd):yd.xc(sh):cr>br+10?0<=ed?We.xc(th):
th.xc(We):0<=ed?sh.xc(th):th.xc(sh)}else pi=0<=ed?yd.xc(We):We.xc(yd);vj!==Ai&&(Wk=hg.computeAngle(Tb,vj,pi),Tb.Kl=Wk);wj=yd.x+(We.x-yd.x)*$q-ig.x;xj=yd.y+(We.y-yd.y)*$q-ig.y}fj(Tb,Infinity,Infinity);var je=Tb.Ca,Uk=Tb.Ha,yj=0;Tb instanceof X&&(yj=Tb.lb);var Xk=Uk.width+yj,rn=Uk.height+yj;oi.reset();oi.translate(-je.x,-je.y);oi.scale(Tb.scale,Tb.scale);oi.rotate(vj===Ai?Tb.angle:pi,Xk/2,rn/2);var qi=new B(0,0,Xk,rn);uj.Xt(qi,qn);oi.ub(uj);var dt=-uj.x+yj/2,et=-uj.y+yj/2;kg.assign(ct);isNaN(kg.x)&&
(kg.x=0<=ed?Xk/2+3:-(Xk/2+3));isNaN(kg.y)&&(kg.y=-(rn/2+3));kg.rotate(pi);wj+=kg.x;xj+=kg.y;qi.set(je);qi.x=wj+dt;qi.y=xj+et;this.Mg.add(qi);Ve.ci(qi)}}if(this.De)for(var dr=this.Tf;dr.next();)fj(dr.value,Infinity,Infinity);this.Li=Ve;var sn=this.yi;sn.m(sn.x+Ve.x,sn.y+Ve.y);Xa(e,Ve.width||0,Ve.height||0);v.$e(oi);v.v(uj);v.v(kg)}break;case "Grid":break;case "TableRow":case "TableColumn":v.k(this.toString()+" is not an element of a Table Panel. TableRow and TableColumn Panels can only be elements of a Table Panel.");
break;default:v.k("Unknown panel type: "+n)}}var Xe=e.width,Ye=e.height,Yk=this.padding,ft=Yk.top+Yk.bottom,Xe=Xe+(Yk.left+Yk.right),Ye=Ye+ft;isFinite(f.width)&&(Xe=f.width);isFinite(f.height)&&(Ye=f.height);Xe=Math.min(k.width,Xe);Ye=Math.min(k.height,Ye);Xe=Math.max(h.width,Xe);Ye=Math.max(h.height,Ye);Xe=Math.max(c,Xe);Ye=Math.max(d,Ye);e.width=Xe;e.height=Ye;Xa(this.Qc,Xe,Ye);Bm(this,0,0,Xe,Ye)};
D.prototype.findMainElement=D.prototype.Ye=function(){if(null===this.um){var a=this.ya.n,b=a.length;if(0===b)return null;for(var c=0;c<b;c++){var d=a[c];if(!0===d.Sf)return this.um=d}this.um=a[0]}return this.um};
D.prototype.Ni=function(a,b,c,d){var e=this.Li,f=this.ya.n,h=v.gk(0,0,0,0);if(0===f.length){var k=this.V;k.x=a;k.y=b;k.width=c;k.height=d}else{if(!this.wa.G()){var l=Em(this,!0),m=this.kd,n=m.width,p=m.height,q=this.margin,r=q.left+q.right,s=q.top+q.bottom;n===c&&p===d&&(l=Ni);switch(l){case Ni:if(n>c||p>d)this.P(),fj(this,n>c?c:n,p>d?d:p);break;case Fe:this.P(!0);fj(this,c+r,d+s,0,0);break;case um:this.P(!0);fj(this,c+r,p+s,0,0);break;case tm:this.P(!0),fj(this,n+r,d+s,0,0)}}k=this.V;k.x=a;k.y=b;
k.width=c;k.height=d;var t=this.ia.Ob;switch(t){case "Position":for(var u=f.length,w=e.x-this.padding.left,x=e.y-this.padding.top,z=0;z<u;z++){var A=f[z],H=A.Ca,C=A.margin,T=A.position.x,ba=A.position.y;h.x=isNaN(T)?-w:T-w;h.y=isNaN(ba)?-x:ba-x;if(A instanceof X){var U=A;if(U.bE){var M=U.lb/2;h.x-=M;h.y-=M}}h.x+=C.left;h.y+=C.top;h.width=H.width;h.height=H.height;A.visible&&A.Ec(h.x,h.y,h.width,h.height)}break;case "Vertical":for(var aa=f.length,Ia=this.padding.left,oa=this.padding.top,Ga=0;Ga<aa;Ga++){var pa=
Ia,Ca=f[Ga];if(Ca.visible){var ua=Ca.Ca,fc=Ca.margin,od=fc.left+fc.right,pd=Ia+this.padding.right,Je=ua.width,Wb=Em(Ca,!1);if(isNaN(Ca.wa.width)&&Wb===Fe||Wb===um)Je=Math.max(e.width-od-pd,0);var Gg=Je+od+pd,qd=Ca.alignment;qd.Uc()&&(qd=this.fl);qd.cd()||(qd=Ab);Ca.Ec(pa+qd.offsetX+fc.left+(e.width*qd.x-Gg*qd.x),oa+qd.offsetY+fc.top,Je,ua.height);oa+=ua.height+fc.bottom+fc.top}}break;case "Horizontal":for(var ob=f.length,gb=this.padding.top,ka=this.padding.left,la=0;la<ob;la++){var pb=gb,Ua=f[la];
if(Ua.visible){var Ra=Ua.Ca,se=Ua.margin,rd=se.top+se.bottom,ae=gb+this.padding.bottom,Kd=Ra.height,be=Em(Ua,!1);if(isNaN(Ua.wa.height)&&be===Fe||be===tm)Kd=Math.max(e.height-rd-ae,0);var Hg=Kd+rd+ae,$c=Ua.alignment;$c.Uc()&&($c=this.fl);$c.cd()||($c=Ab);Ua.Ec(ka+$c.offsetX+se.left,pb+$c.offsetY+se.top+(e.height*$c.y-Hg*$c.y),Ra.width,Kd);ka+=Ra.width+se.left+se.right}}break;case "Spot":var gi=f.length,xb=this.Ye(),Xb=xb.Ca,Ld=Xb.width,jh=Xb.height,Lb=this.padding,ib=Lb.left,bb=Lb.top;h.x=ib-e.x;
h.y=bb-e.y;xb.Ec(h.x,h.y,Ld,jh);for(var Ke=0;Ke<gi;Ke++){var Md=f[Ke];if(Md!==xb){var Ig=Md.Ca,Jg=Ig.width,gc=Ig.height,hc=Md.alignment;hc.Uc()&&(hc=this.fl);hc.cd()||(hc=Ab);var ce=Md.Sj;ce.Uc()&&(ce=Ab);h.x=hc.x*Ld+hc.offsetX-(ce.x*Jg-ce.offsetX);h.y=hc.y*jh+hc.offsetY-(ce.y*gc-ce.offsetY);h.x-=e.x;h.y-=e.y;Md.visible&&Md.Ec(ib+h.x,bb+h.y,Jg,gc)}}break;case "Auto":var ad=f.length,kb=this.Ye(),Nc=kb.Ca,Ka=v.bg();Ka.m(0,0,1,1);var lb=kb.margin,tc=lb.left,sd=lb.top,Ib=this.padding,de=Ib.left,qf=Ib.top;
h.x=tc;h.y=sd;h.width=Nc.width;h.height=Nc.height;kb.Ec(de+h.x,qf+h.y,h.width,h.height);var Le=Sn(kb),Jf=Tn(kb),Jb=0+Le.y*Nc.height+Le.offsetY,te=0+Jf.x*Nc.width+Jf.offsetX,Mb=0+Jf.y*Nc.height+Jf.offsetY;Ka.x=0+Le.x*Nc.width+Le.offsetX;Ka.y=Jb;ab(Ka,te,Mb,0,0);Ka.x+=tc+de;Ka.y+=sd+qf;for(var ic=0;ic<ad;ic++){var Rb=f[ic];if(Rb!==kb){var Ec=Rb.Ca,lb=Rb.margin,mb=Math.max(Ec.width+lb.right+lb.left,0),Cb=Math.max(Ec.height+lb.top+lb.bottom,0),Kb=Rb.alignment;Kb.Uc()&&(Kb=this.fl);Kb.cd()||(Kb=Ab);h.x=
Ka.width*Kb.x+Kb.offsetX-mb*Kb.x+lb.left+Ka.x;h.y=Ka.height*Kb.y+Kb.offsetY-Cb*Kb.y+lb.top+Ka.y;h.width=Ka.width;h.height=Ka.height;Rb.visible&&(db(Ka.x,Ka.y,Ka.width,Ka.height,h.x,h.y,Ec.width,Ec.height)?Rb.Ec(h.x,h.y,Ec.width,Ec.height):Rb.Ec(h.x,h.y,Ec.width,Ec.height,new B(Ka.x,Ka.y,Ka.width,Ka.height)))}}v.Vb(Ka);break;case "Table":for(var Nd=f.length,Kg=this.padding,kh=Kg.left,lh=Kg.top,ue=this.$r,bd=0,rf=0,jc=ue.length,yb=0,zb=0;zb<jc;zb++)ue[zb]&&(yb=Math.max(yb,ue[zb].length));for(var Fc=
Math.min(this.Ki,jc-1);Fc!==jc&&(void 0===this.Nd[Fc]||0===this.Nd[Fc].bb);)Fc++;for(var Fc=Math.min(Fc,jc-1),Lg=-this.Nd[Fc].kb,Oc=Math.min(this.xi,yb-1);Oc!==yb&&(void 0===this.Jd[Oc]||0===this.Jd[Oc].bb);)Oc++;for(var Oc=Math.min(Oc,yb-1),Pc=-this.Jd[Oc].kb,jb=v.Fl(),zb=0;zb<jc;zb++)if(ue[zb])for(var yb=ue[zb].length,Qc=this.Bd(zb),rf=Qc.kb+Lg+lh+Qc.pD(),Od=0;Od<yb;Od++)if(ue[zb][Od])for(var ee=this.Ad(Od),bd=ee.kb+Pc+kh+ee.pD(),sf=ue[zb][Od],hi=sf.length,pj=0;pj<hi;pj++){var Fa=sf[pj],Me=Fa.Ca,
fe=Fa instanceof D?Fa:null;if(null===fe||fe.type!==Im&&fe.type!==Jm){jb.m(0,0);for(var ca=1;ca<Fa.rowSpan&&!(zb+ca>=this.Cp);ca++){var da=this.Bd(zb+ca);jb.height+=da.total}for(ca=1;ca<Fa.pG&&!(Od+ca>=this.Po);ca++){var Mg=this.Ad(Od+ca);jb.width+=Mg.total}var mh=ee.bb+jb.width,ii=Qc.bb+jb.height;h.x=bd;h.y=rf;h.width=mh;h.height=ii;var uc=bd,ji=rf,Yb=mh,nh=ii;bd+mh>e.width&&(Yb=Math.max(e.width-bd,0));rf+ii>e.height&&(nh=Math.max(e.height-rf,0));var cd=Fa.alignment,ve=0,Rc=0,td=0,Gc=0;if(cd.Uc()){cd=
this.fl;cd.cd()||(cd=Ab);var ve=cd.x,Rc=cd.y,td=cd.offsetX,Gc=cd.offsetY,ud=ee.alignment,ag=Qc.alignment;ud.cd()&&(ve=ud.x,td=ud.offsetX);ag.cd()&&(Rc=ag.y,Gc=ag.offsetY)}else ve=cd.x,Rc=cd.y,td=cd.offsetX,Gc=cd.offsetY;if(isNaN(ve)||isNaN(Rc))Rc=ve=.5,Gc=td=0;var Y=Me.width,we=Me.height,Ne=Fa.margin,ki=Ne.left+Ne.right,li=Ne.top+Ne.bottom,Hc=Sm(Fa,Qc,ee,!1);!isNaN(Fa.wa.width)||Hc!==Fe&&Hc!==um||(Y=Math.max(mh-ki,0));!isNaN(Fa.wa.height)||Hc!==Fe&&Hc!==tm||(we=Math.max(ii-li,0));var qb=Fa.yf,rb=
Fa.jh,Y=Math.min(qb.width,Y),we=Math.min(qb.height,we),Y=Math.max(rb.width,Y),we=Math.max(rb.height,we),Nk=we+li;h.x+=h.width*ve-(Y+ki)*ve+td+Ne.left;h.y+=h.height*Rc-Nk*Rc+Gc+Ne.top;Fa.visible&&(db(uc,ji,Yb,nh,h.x,h.y,Me.width,Me.height)?Fa.Ec(h.x,h.y,Y,we):Fa.Ec(h.x,h.y,Y,we,new B(uc,ji,Yb,nh)))}else{Fa.ti();Fa.mc.Oa();var bg=Fa.mc;bg.x=fe.type===Im?kh:bd;bg.y=fe.type===Jm?lh:rf;bg.width=Me.width;bg.height=Me.height;Fa.mc.freeze();Gm(Fa,!1)}}v.Yj(jb);for(zb=0;zb<Nd;zb++)Fa=f[zb],fe=Fa instanceof
D?Fa:null,null===fe||fe.type!==Im&&fe.type!==Jm||(bg=Fa.mc,Fa.Qc.Oa(),Fa.Qc.m(0,0,bg.width,bg.height),Fa.Qc.freeze());break;case "Viewbox":var Ng=f[0],Og=Ng.Ca,Sb=Ng.margin,cg=Sb.top+Sb.bottom,dg=Math.max(Og.width+(Sb.right+Sb.left),0),ge=Math.max(Og.height+cg,0),xe=Ng.alignment;xe.Uc()&&(xe=this.fl);xe.cd()||(xe=Ab);h.x=e.width*xe.x-dg*xe.x+xe.offsetX;h.y=e.height*xe.y-ge*xe.y+xe.offsetY;h.width=Og.width;h.height=Og.height;Ng.Ec(h.x,h.y,h.width,h.height);break;case "Link":var on=f.length,mi=this instanceof
Tg?this.Nf:this;if(mi instanceof W){var Oe=this instanceof Tg?null:mi.path;if(null!==this.Mg){var Pe=this.Mg.n,vd=0;if(null!==Oe&&vd<this.Mg.count){var dd=Pe[vd];vd++;Oe.Ec(dd.x-this.Li.x,dd.y-this.Li.y,dd.width,dd.height)}for(var oh=0;oh<on;oh++){var ye=f[oh];ye!==Oe&&vd<this.Mg.count&&(dd=Pe[vd],vd++,ye.Ec(dd.x-this.Li.x,dd.y-this.Li.y,dd.width,dd.height))}}var ze=mi.points,Ok=ze.count;if(2<=Ok&&this.De)for(var Pk=this.Tf;Pk.next();){var Sc=Pk.value,tf=Ok,Ae=ze,Va=Sc.we,uf=Sc.gA,Be=Sc.Sj,eg=Sc.Ut,
Kf=Sc.PE,cb=0,Qe=0,vc=0;if(Va<-tf||Va>=tf){var ni=this.qE,fg=this.pE;eg!==Ai&&(vc=this.computeAngle(Sc,eg,fg),Sc.angle=vc);cb=ni.x;Qe=ni.y}else{var hb=void 0,wd=void 0;if(0<=Va)hb=Ae.n[Va],wd=Va<tf-1?Ae.n[Va+1]:hb;else var Ce=tf+Va,hb=Ae.n[Ce],wd=0<Ce?Ae.n[Ce-1]:hb;if(hb.Fc(wd)){var he=void 0,ie=void 0;0<=Va?(he=0<Va?Ae.n[Va-1]:hb,ie=Va<tf-2?Ae.n[Va+2]:wd):(he=Ce<tf-1?Ae.n[Ce+1]:hb,ie=1<Ce?Ae.n[Ce-2]:wd);var ph=he.sf(hb),qj=wd.sf(ie),fg=ph>qj+10?0<=Va?he.xc(hb):hb.xc(he):qj>ph+10?0<=Va?wd.xc(ie):
ie.xc(wd):0<=Va?he.xc(ie):ie.xc(he)}else fg=0<=Va?hb.xc(wd):wd.xc(hb);eg!==Ai&&(vc=this.computeAngle(Sc,eg,fg),Sc.angle=vc);cb=hb.x+(wd.x-hb.x)*uf;Qe=hb.y+(wd.y-hb.y)*uf}if(Be.K(sb))Sc.location=new y(cb,Qe);else{Be.te()&&(Be=Ab);var xd=v.qh();xd.reset();xd.scale(Sc.scale,Sc.scale);xd.rotate(Sc.angle,0,0);var Re=Sc.Ha,gg=v.gk(0,0,Re.width,Re.height),Se=v.L();Se.Xt(gg,Be);xd.ub(Se);var Tc=-Se.x,Pg=-Se.y,Te=Kf.copy();isNaN(Te.x)&&(Te.x=0<=Va?Se.x+3:-(Se.x+3));isNaN(Te.y)&&(Te.y=-(Se.y+3));Te.rotate(fg);
cb+=Te.x;Qe+=Te.y;xd.kF(gg);var Tc=Tc+gg.x,Pg=Pg+gg.y,rj=v.Mb(cb+Tc,Qe+Pg);Sc.move(rj);v.v(rj);v.v(Se);v.Vb(gg);v.$e(xd)}}this instanceof Tg?this.Vm(!1):mi.Vm(!1)}break;case "Grid":break;case "TableRow":case "TableColumn":v.k(this.toString()+" is not an element of a Table Panel.TableRow and TableColumn panels can only be elements of a Table Panel.");break;default:v.k("Unknown panel type: "+t)}v.Vb(h)}};
D.prototype.Uj=function(a){var b=this.Ha;if(db(0,0,b.width,b.height,a.x,a.y)){for(var b=this.ya.n,c=b.length,d=v.Mb(0,0);c--;){var e=b[c];if(e.visible||e===this.bc)if(Qa(d.set(a),e.transform),e.Fa(d))return v.v(d),!0}v.v(d);return null===this.Ib&&null===this.nc?!1:!0}return!1};D.prototype.yw=function(a){if(this.pn===a)return this;for(var b=this.ya.n,c=b.length,d=0;d<c;d++){var e=b[d].yw(a);if(null!==e)return e}return null};
function Xn(a,b,c){c(a,b);if(b instanceof D){b=b.ya.n;for(var d=b.length,e=0;e<d;e++)Xn(a,b[e],c)}}function nl(a,b){Yn(a,a,b)}function Yn(a,b,c){c(b);b=b.ya.n;for(var d=b.length,e=0;e<d;e++){var f=b[e];f instanceof D&&Yn(a,f,c)}}D.prototype.walkVisualTree=D.prototype.SI=function(a){Zn(this,this,a)};function Zn(a,b,c){c(b);if(b instanceof D){b=b.ya.n;for(var d=b.length,e=0;e<d;e++)Zn(a,b[e],c)}}D.prototype.findInVisualTree=D.prototype.bt=function(a){return $n(this,this,a)};
function $n(a,b,c){if(c(b))return b;if(b instanceof D){b=b.ya.n;for(var d=b.length,e=0;e<d;e++){var f=$n(a,b[e],c);if(null!==f)return f}}return null}D.prototype.findObject=D.prototype.de=function(a){if(this.name===a)return this;for(var b=this.ya.n,c=b.length,d=0;d<c;d++){var e=b[d];if(e.name===a)return e;if(e instanceof D)if(null===e.sj&&null===e.ig){if(e=e.de(a),null!==e)return e}else if(Il(e)&&(e=e.ya.first(),null!==e&&(e=e.de(a),null!==e)))return e}return null};
function ao(a){a=a.ya.n;for(var b=a.length,c=0,d=0;d<b;d++){var e=a[d];if(e instanceof D)c=Math.max(c,ao(e));else if(e instanceof X){a:{if(!e.Lh)switch(e.Ln){case "None":case "Square":case "Ellipse":case "Circle":case "LineH":case "LineV":case "FramedRectangle":case "RoundedRectangle":case "Line1":case "Line2":case "Border":case "Cube1":case "Cube2":case "Junction":case "Cylinder1":case "Cylinder2":case "Cylinder3":case "Cylinder4":case "PlusLine":case "XLine":case "ThinCross":case "ThickCross":e=
0;break a}e=e.Sh/2*e.tm*e.Ti()}c=Math.max(c,e)}}return c}g=D.prototype;g.Lg=function(){return!(this.type===Im||this.type===Jm)};
g.re=function(a,b,c){if(!1===this.Hg)return null;void 0===b&&(b=null);void 0===c&&(c=null);if(el(this))return null;var d=this.Ha,e=1/this.Ti(),f=this.Lg(),h=f?a:Qa(v.Mb(a.x,a.y),this.transform),k=this.g,l=10,m=5;null!==k&&(l=k.$o("extraTouchArea"),m=l/2);if(db(-(m*e),-(m*e),d.width+l*e,d.height+l*e,h.x,h.y)){if(!this.Qg){var e=this.ya.n,n=e.length,k=v.L(),m=(l=this.$D)?this.Ye():null;if(l&&(m.Lg()?Qa(k.set(a),m.transform):k.set(a),!m.Fa(k)))return v.v(k),f||v.v(h),null;for(;n--;){var p=e[n];if(p.visible||
p===this.bc)if(p.Lg()?Qa(k.set(a),p.transform):k.set(a),!l||p!==m){var q=null;p instanceof D?q=p.re(k,b,c):!0===p.Hg&&p.Fa(k)&&(q=p);if(null!==q&&(null!==b&&(q=b(q)),null!==q&&(null===c||c(q))))return v.v(k),f||v.v(h),q}}v.v(k)}if(null===this.background&&null===this.Am)return f||v.v(h),null;a=db(0,0,d.width,d.height,h.x,h.y)?this:null;f||v.v(h);return a}f||v.v(h);return null};
g.et=function(a,b,c,d){if(!1===this.Hg)return!1;void 0===b&&(b=null);void 0===c&&(c=null);d instanceof I||d instanceof J||(d=new I(G));var e=this.Ha,f=this.Lg(),h=f?a:Qa(v.Mb(a.x,a.y),this.transform);if(db(0,0,e.width,e.height,h.x,h.y)){if(!this.Qg){for(var e=this.ya.n,k=e.length,l=v.L();k--;){var m=e[k];if(m.visible||m===this.bc){m.Lg()?Qa(l.set(a),m.transform):l.set(a);var n=m,m=m instanceof D?m:null;(null!==m?m.et(l,b,c,d):n.Fa(l))&&!1!==n.Hg&&(null!==b&&(n=b(n)),null===n||null!==c&&!c(n)||d.add(n))}}v.v(l)}f||
v.v(h);return null!==this.background||null!==this.Am}f||v.v(h);return!1};
g.Xj=function(a,b,c,d,e,f){if(!1===this.Hg)return!1;void 0===b&&(b=null);void 0===c&&(c=null);var h=f;void 0===f&&(h=v.qh(),h.reset());h.multiply(this.transform);if(this.Fm(a,h))return bo(this,b,c,e),void 0===f&&v.$e(h),!0;if(this.yg(a,h)){if(!this.Qg)for(var k=this.ya.n,l=k.length;l--;){var m=k[l];if(m.visible||m===this.bc){var n=m.V,p=this.Ha;if(!(n.x>p.width||n.y>p.height||0>n.x+n.width||0>n.y+n.height)){n=m;m=m instanceof D?m:null;p=v.qh();p.set(h);if(null!==m?m.Xj(a,b,c,d,e,p):Dm(n,a,d,p))null!==
b&&(n=b(n)),null===n||null!==c&&!c(n)||e.add(n);v.$e(p)}}}void 0===f&&v.$e(h);return d}void 0===f&&v.$e(h);return!1};function bo(a,b,c,d){for(var e=a.ya.n,f=e.length;f--;){var h=e[f];if(h.visible){var k=h.V,l=a.Ha;k.x>l.width||k.y>l.height||0>k.x+k.width||0>k.y+k.height||(h instanceof D&&bo(h,b,c,d),null!==b&&(h=b(h)),null===h||null!==c&&!c(h)||d.add(h))}}}
g.Lm=function(a,b,c,d,e,f){if(!1===this.Hg)return!1;void 0===c&&(c=null);void 0===d&&(d=null);var h=this.Ha,k=this.Lg(),l=k?a:Qa(v.Mb(a.x,a.y),this.transform),m=k?b:Qa(v.Mb(b.x,b.y),this.transform),n=l.sf(m),p=0<l.x&&l.x<h.width&&0<l.y&&l.y<h.height||Sa(l.x,l.y,0,0,0,h.height)<n||Sa(l.x,l.y,0,h.height,h.width,h.height)<n||Sa(l.x,l.y,h.width,h.height,h.width,0)<n||Sa(l.x,l.y,h.width,0,0,0)<n,h=0<l.x&&l.x<h.width&&0<l.y&&l.y<h.height&&Sa(l.x,l.y,0,0,0,h.height)<n&&Sa(l.x,l.y,0,h.height,h.width,h.height)<
n&&Sa(l.x,l.y,h.width,h.height,h.width,0)<n&&Sa(l.x,l.y,h.width,0,0,0)<n;k||(v.v(l),v.v(m));if(p){if(!this.Qg){k=v.L();l=v.L();m=this.ya.n;for(n=m.length;n--;){var q=m[n];if(q.visible||q===this.bc){var r=q.V,s=this.Ha;r.x>s.width||r.y>s.height||0>r.x+r.width||0>r.y+r.height||(q.Lg()?(r=q.transform,Qa(k.set(a),r),Qa(l.set(b),r)):(k.set(a),l.set(b)),r=q,q=q instanceof D?q:null,null!==q?!q.Lm(k,l,c,d,e,f):!r.JD(k,l,e))||(null!==c&&(r=c(r)),null===r||null!==d&&!d(r)||f.add(r))}}v.v(k);v.v(l)}return e?
p:h}return!1};function Sn(a){var b=a.B;if(void 0===b||b===kc)b=null;null===b&&a instanceof X&&(a=a.Ra,null!==a&&(b=a.B));null===b&&(b=tb);return b}function Tn(a){var b=a.C;if(void 0===b||b===kc)b=null;null===b&&a instanceof X&&(a=a.Ra,null!==a&&(b=a.C));null===b&&(b=Fb);return b}D.prototype.add=D.prototype.add=function(a){v.A(a,G,D,"add:element");this.Cd(this.ya.count,a)};D.prototype.elt=D.prototype.da=function(a){return this.ya.da(a)};
D.prototype.insertAt=D.prototype.Cd=function(a,b){b instanceof R&&v.k("Cannot add a Part to a Panel: "+b);if(this===b||this.tl(b))this===b&&v.k("Cannot make a Panel contain itself: "+this.toString()),v.k("Cannot make a Panel indirectly contain itself: "+this.toString()+" already contains "+b.toString());var c=b.U;null!==c&&c!==this&&v.k("Cannot add a GraphObject that already belongs to another Panel to this Panel: "+b.toString()+", already contained by "+c.toString()+", cannot be shared by this Panel: "+
this.toString());this.ia!==vk||b instanceof X||v.k("Can only add Shapes to a Grid Panel, not: "+b);b.Bl(this);b.jm=null;if(null!==this.iE){var d=b.data;null!==d&&"object"===typeof d&&(null===this.hg&&(this.hg=new na(Object,D)),this.hg.add(d,b))}var e=this.ya,d=-1;if(c===this){for(var f=-1,h=this.ya.n,k=h.length,l=0;l<k;l++)if(h[l]===b){f=l;break}if(-1!==f){if(f===a||f+1>=e.count&&a>=e.count)return;e.Vc(f);d=f}else v.k("element "+b.toString()+" has panel "+c.toString()+" but is not contained by it.")}if(0>
a||a>e.count)a=e.count;e.Cd(a,b);this.P();b.P();null!==b.Ud?this.Ch=!0:b instanceof D&&!0===b.Ch&&(this.Ch=!0);c=this.Y;null!==c&&(c.em=null,c.xj=NaN,this.Ch&&c instanceof S&&(c.Ch=!0),c.Ch&&(c.Yd=null),e=this.g,null!==e&&e.la.ib||(-1!==d&&c.Lc(Df,"elements",this,b,null,d,null),c.Lc(Cf,"elements",this,null,b,null,a)))};D.prototype.remove=D.prototype.remove=function(a){v.A(a,G,D,"remove:element");for(var b=this.ya.n,c=b.length,d=-1,e=0;e<c;e++)if(b[e]===a){d=e;break}-1!==d&&this.Me(d)};
D.prototype.removeAt=D.prototype.Vc=function(a){0<=a&&this.Me(a)};D.prototype.Me=function(a){var b=this.ya,c=b.da(a);c.jm=null;c.Bl(null);if(null!==this.hg){var d=c.data;"object"===typeof d&&this.hg.remove(d)}b.Vc(a);Qk(this,!1);this.P();this.um===c&&(this.um=null);b=this.Y;null!==b&&(b.em=null,b.xj=NaN,b.Qd(),d=this.g,null!==d&&d.la.ib||b.Lc(Df,"elements",this,c,null,a,null))};v.u(D,{Cp:"rowCount"},function(){return void 0===this.Nd?0:this.Nd.length});
D.prototype.getRowDefinition=D.prototype.Bd=function(a){0>a&&v.va(a,">= 0",D,"getRowDefinition:idx");a=Math.round(a);var b=this.Nd;if(void 0===b[a]){var c=new tg;c.Bl(this);c.ee=!0;c.index=a;b[a]=c}return b[a]};D.prototype.removeRowDefinition=D.prototype.DE=function(a){0>a&&v.va(a,">= 0",D,"removeRowDefinition:idx");a=Math.round(a);var b=this.Nd;this.Lc(Df,"coldefs",this,b[a],null,a,null);b[a]&&delete b[a];this.P()};v.u(D,{Po:"columnCount"},function(){return void 0===this.Jd?0:this.Jd.length});
D.prototype.getColumnDefinition=D.prototype.Ad=function(a){0>a&&v.va(a,">= 0",D,"getColumnDefinition:idx");a=Math.round(a);var b=this.Jd;if(void 0===b[a]){var c=new tg;c.Bl(this);c.ee=!1;c.index=a;b[a]=c}return b[a]};D.prototype.removeColumnDefinition=D.prototype.zE=function(a){0>a&&v.va(a,">= 0",D,"removeColumnDefinition:idx");a=Math.round(a);var b=this.Jd;this.Lc(Df,"coldefs",this,b[a],null,a,null);b[a]&&delete b[a];this.P()};
v.defineProperty(D,{qI:"rowSizing"},function(){return void 0===this.pm?On:this.pm},function(a){if(void 0!==this.pm){var b=this.pm;b!==a&&(a!==On&&a!==Vn&&v.k("Panel.rowSizing must be RowColumnDefinition.ProportionalExtra or RowColumnDefinition.None, not: "+a),this.pm=a,this.P(),this.h("rowSizing",b,a))}});
v.defineProperty(D,{oG:"columnSizing"},function(){return void 0===this.Ol?On:this.Ol},function(a){if(void 0!==this.Ol){var b=this.Ol;b!==a&&(a!==On&&a!==Vn&&v.k("Panel.columnSizing must be RowColumnDefinition.ProportionalExtra or RowColumnDefinition.None, not: "+a),this.Ol=a,this.P(),this.h("columnSizing",b,a))}});
v.defineProperty(D,{MK:"topIndex"},function(){return void 0===this.Ki?0:this.Ki},function(a){if(void 0!==this.Ki){var b=this.Ki;b!==a&&((!isFinite(a)||0>a)&&v.k("Panel.topIndex must be greater than zero and a real number, not: "+a),this.Ki=a,this.P(),this.h("topIndex",b,a))}});
v.defineProperty(D,{YJ:"leftIndex"},function(){return void 0===this.xi?0:this.xi},function(a){if(void 0!==this.xi){var b=this.xi;b!==a&&((!isFinite(a)||0>a)&&v.k("Panel.leftIndex must be greater than zero and a real number, not: "+a),this.xi=a,this.P(),this.h("leftIndex",b,a))}});D.prototype.findRowForLocalY=function(a){if(0>a)return-1;if(this.type!==Rm)return NaN;for(var b=0,c=this.Nd,d=c.length,e=this.Ki;e<d;e++){var f=c[e];if(void 0!==f&&(b+=f.total,a<b))return e}return-1};
D.prototype.findColumnForLocalX=function(a){if(0>a)return-1;if(this.type!==Rm)return NaN;for(var b=0,c=this.Jd,d=c.length,e=this.xi;e<d;e++){var f=c[e];if(void 0!==f&&(b+=f.total,a<b))return e}return-1};
v.defineProperty(D,{data:"data"},function(){return this.ke},function(a){var b=this.ke;if(b!==a){var c=this instanceof R&&!(this instanceof Tg);c&&v.j(a,"object",D,"data");Vg(this);this.ke=a;var d=this.g;null!==d&&(c?this instanceof W?(null!==b&&d.wk.remove(b),null!==a&&d.wk.add(a,this)):this instanceof R&&(null!==b&&d.mi.remove(b),null!==a&&d.mi.add(a,this)):(c=this.U,null!==c&&null!==c.hg&&(null!==b&&c.hg.remove(b),null!==a&&c.hg.add(a,this))));this.h("data",b,a);null!==d&&d.la.ib||null!==a&&this.Hb()}});
v.defineProperty(D,{vH:"itemIndex"},function(){return this.br},function(a){var b=this.br;b!==a&&(this.br=a,this.h("itemIndex",b,a))});function Zm(a){a=a.tk;return null!==a&&a.D}
function Vg(a){var b=a.tk;if(null===b)null!==a.data&&v.k("Template cannot have .data be non-null: "+a),a.tk=b=new I(zg);else if(b.D)return;var c=new I(G);Xn(a,a,function(a,d){var e=d.rc;if(null!==e)for(Vm(d,!1),e=e.i;e.next();){var f=e.value;f.mode===Bg&&Vm(d,!0);if(null!==f.dn){var h=Cg(f,a,d);null!==h&&(c.add(h),null===h.uo&&(h.uo=new I(zg)),h.uo.add(f))}b.add(f)}if(d instanceof D&&d.type===Rm){if(0<d.Nd.length)for(e=d.Nd,f=e.length,h=0;h<f;h++){var k=e[h];if(void 0!==k&&null!==k.rc)for(var l=k.rc.i;l.next();){var u=
l.value;u.qg=k;u.ys=2;u.Co=k.index;b.add(u)}}if(0<d.Jd.length)for(e=d.Jd,f=e.length,h=0;h<f;h++)if(k=e[h],void 0!==k&&null!==k.rc)for(l=k.rc.i;l.next();)u=l.value,u.qg=k,u.ys=1,u.Co=k.index,b.add(u)}});for(var d=c.i;d.next();){var e=d.value;if(null!==e.uo){Vm(e,!0);for(var f=e.uo.i;f.next();){var h=f.value;null===e.rc&&(e.rc=new I(zg));e.rc.add(h)}}e.uo=null}for(d=b.i;d.next();)if(e=d.value,f=e.qg,null!==f){e.qg=null;var k=e.qx,l=k.indexOf(".");0<l&&f instanceof D&&(h=k.substring(0,l),k=k.substr(l+
1),l=f.de(h),null!==l?(f=l,e.qx=k):v.trace('Warning: unable to find GraphObject named "'+h+'" for Binding: '+e.toString()));f instanceof tg?(e.El=v.md(f.U),f.U.pn=e.El):(e.El=v.md(f),f.pn=e.El)}b.freeze();a instanceof R&&a.Rd()&&(fj(a,Infinity,Infinity),a.Ec())}D.prototype.copyTemplate=function(){var a=this.copy();a.SI(function(a){a instanceof D&&(a.tk=null,a.ke=null);var c=a.rc;null!==c&&(a.rc=null,c.each(function(c){a.bind(c.copy())}))});return a};
D.prototype.updateTargetBindings=D.prototype.Hb=function(a){var b=this.tk;if(null!==b)for(void 0===a&&(a=""),b=b.i;b.next();){var c=b.value,d=c.YE;if(""===a||""===d||d===a)if(d=c.qx,null!==c.sG||""!==d){var d=this.data,e=c.dn;if(null!==e)d=""===e?this:"."===e?this:".."===e?this:this.de(e);else{var f=this.g;null!==f&&c.xt&&(d=f.ba.bk)}if(null!==d){var f=this,h=c.El;if(-1!==h){if(f=this.yw(h),null===f)continue}else null!==c.qg&&(f=c.qg);"."===e?d=f:".."===e&&(d=f.U);e=c.ys;if(0!==e){if(!(f instanceof
D))continue;h=f;1===e?f=h.Ad(c.Co):2===e&&(f=h.Bd(c.Co))}void 0!==f&&c.oF(f,d)}}}};v.defineProperty(D,{iE:"itemArray"},function(){return this.sj},function(a){var b=this.sj;if(b!==a){var c=this.g;null!==c&&null!==b&&tl(c,this);this.sj=a;null!==c&&null!==a&&pl(c,this);this.h("itemArray",b,a);null!==c&&c.la.ib||this.$z()}});function Il(a){return a.type===Li||a.type===sk||a.type===xi||a.type===Rm&&0<a.ya.length&&(a=a.ya.da(0),a.Sf&&a instanceof D&&(a.type===Im||a.type===Jm))?!0:!1}
D.prototype.rebuildItemElements=D.prototype.$z=function(){var a=0;for(Il(this)&&(a=1);this.ya.length>a;)this.Me(this.ya.length-1);a=this.iE;if(null!==a)for(var b=v.Va(a),c=0;c<b;c++)Hl(this,v.Pa(a,c),c)};D.prototype.findItemPanelForData=D.prototype.LG=function(a){if(void 0===a||null===a||null===this.hg)return null;v.j(a,"object",D,"findItemPanelForData");return this.hg.ja(a)};
function Hl(a,b,c){if(!(void 0===b||null===b||0>c)){var d;d=co(a,b);var e=a.wH,f=null;null!==e&&(f=e.ja(d));null===f&&(eo||(eo=!0,v.trace('No item template Panel found for category "'+d+'" on '+a),v.trace("  Using default item template."),d=new D,e=new $g,e.bind(new zg("text","",Ef)),d.add(e),fo=d),f=fo);d=f;null!==d&&(Vg(d),d=d.copy(),"object"===typeof b&&(null===a.hg&&(a.hg=new na(Object,D)),a.hg.add(b,d)),e=c,Il(a)&&e++,a.Cd(e,d),Jl(a,e,c),d.ke=null,d.data=b)}}
function Jl(a,b,c){for(a=a.ya;b<a.length;){var d=a.da(b);if(d instanceof D){var e=b,f=c;d.type===Im?d.cc=e:d.type===Jm&&(d.column=e);d.vH=f}b++;c++}}
v.defineProperty(D,{WJ:"itemTemplate"},function(){return null===this.ig?null:this.ig.ja("")},function(a){if(null===this.ig){if(null===a)return;this.ig=new na("string",D)}var b=this.ig.ja("");b!==a&&(v.A(a,D,D,"itemTemplate"),(a instanceof R||a.Sf)&&v.k("Panel.itemTemplate must not be a Part or be Panel.isPanelMain: "+a),this.ig.add("",a),this.h("itemTemplate",b,a),a=this.g,null!==a&&a.la.ib||this.$z())});
v.defineProperty(D,{wH:"itemTemplateMap"},function(){return this.ig},function(a){var b=this.ig;if(b!==a){v.A(a,na,D,"itemTemplateMap");for(var c=a.i;c.next();){var d=c.value;(d instanceof R||d.Sf)&&v.k("Template in Panel.itemTemplateMap must not be a Part or be Panel.isPanelMain: "+d)}this.ig=a;this.h("itemTemplateMap",b,a);a=this.g;null!==a&&a.la.ib||this.$z()}});
v.defineProperty(D,{VJ:"itemCategoryProperty"},function(){return this.Yn},function(a){var b=this.Yn;b!==a&&("string"!==typeof a&&"function"!==typeof a&&v.Gd(a,"string or function",D,"itemCategoryProperty"),this.Yn=a,this.h("itemCategoryProperty",b,a))});
function co(a,b){if(null===b)return"";var c=a.Yn,d="";if("function"===typeof c)d=c(b);else if("string"===typeof c&&"object"===typeof b){if(""===c)return"";d=v.qb(b,c)}else return"";if(void 0===d)return"";if("string"===typeof d)return d;v.k("Panel.getCategoryForItemData found a non-string category for "+b+": "+d);return""}var eo=!1,fo=null;v.defineProperty(D,{QJ:"isAtomic"},function(){return this.Qg},function(a){var b=this.Qg;b!==a&&(v.j(a,"boolean",D,"isAtomic"),this.Qg=a,this.h("isAtomic",b,a))});
v.defineProperty(D,{$D:"isClipping"},function(){return this.Pq},function(a){var b=this.Pq;b!==a&&(v.j(a,"boolean",D,"isClipping"),this.Pq=a,this.h("isClipping",b,a))});function tg(){v.ec(this);this.Xg=null;this.gv=!0;this.Oc=0;this.Ue=NaN;this.Bj=0;this.zj=Infinity;this.Be=kc;this.kb=this.bb=0;this.rc=null;this.qs=ho;this.Rh=sm;this.ks=this.Gj=null;this.ls=NaN;this.Ib=this.Jh=null;this.mq=!1}v.ea("RowColumnDefinition",tg);
tg.prototype.copy=function(){var a=new tg;a.gv=this.gv;a.Oc=this.Oc;a.Ue=this.Ue;a.Bj=this.Bj;a.zj=this.zj;a.Be=this.Be;a.bb=this.bb;a.kb=this.kb;a.Rh=this.Rh;a.qs=this.qs;a.Gj=null===this.Gj?null:this.Gj.R();a.ks=this.ks;a.ls=this.ls;a.Jh=null;null!==this.Jh&&(a.Jh=v.dl(this.Jh));a.Ib=this.Ib;a.mq=this.mq;a.rc=this.rc;return a};
tg.prototype.Ys=function(a){v.A(a,tg,tg,"copyFrom:pd");a.ee?this.height=a.height:this.width=a.width;this.Zi=a.Zi;this.gf=a.gf;this.alignment=a.alignment;this.stretch=a.stretch;this.$t=a.$t;this.Gj=null===a.Gj?null:a.Gj.R();this.Dp=a.Dp;this.Ep=a.Ep;this.Jh=null;a.Jh&&(this.Jh=v.dl(a.Jh));this.background=a.background;this.iz=a.iz;this.rc=a.rc};tg.prototype.toString=function(){return"RowColumnDefinition "+(this.ee?"(Row ":"(Column ")+this.index+") #"+v.md(this)};var ho;
tg.Default=ho=v.p(tg,"Default",0);var Vn;tg.None=Vn=v.p(tg,"None",1);var On;tg.ProportionalExtra=On=v.p(tg,"ProportionalExtra",2);tg.prototype.Bl=function(a){this.Xg=a};tg.prototype.computeEffectiveSpacingTop=tg.prototype.pD=function(){var a=0;if(0!==this.index){var b=this.Xg,c=this.Dp;null===c&&null!==b&&(c=this.ee?b.ni:b.xh);null!==c&&(a=this.Ep,isNaN(a)&&(a=null!==b?this.ee?b.zh:b.yh:0))}b=this.RE;if(null===b)if(b=this.Xg,null!==b)b=b.hj;else return a;return a+(this.ee?b.top:b.left)};
tg.prototype.computeEffectiveSpacing=tg.prototype.pf=function(){var a=0;if(0!==this.index){var b=this.Xg,c=this.Dp;null===c&&null!==b&&(c=this.ee?b.ni:b.xh);null!==c&&(a=this.Ep,isNaN(a)&&(a=null!==b?this.ee?b.zh:b.yh:0))}b=this.RE;if(null===b)if(b=this.Xg,null!==b)b=b.hj;else return a;return a+(this.ee?b.top+b.bottom:b.left+b.right)};
tg.prototype.$c=function(a,b,c,d,e){var f=this.Xg;if(null!==f&&(f.Lc(Af,a,this,b,c,d,e),null!==this.rc&&(b=f.g,null!==b&&!b.xe&&(f=f.Wo(),null!==f&&(f=f.data,null!==f)))))for(c=this.rc.i;c.next();)c.value.sx(this,f,a,b)};v.u(tg,{U:"panel"},function(){return this.Xg});v.defineProperty(tg,{ee:"isRow"},function(){return this.gv},function(a){this.gv=a});v.defineProperty(tg,{index:"index"},function(){return this.Oc},function(a){this.Oc=a});
v.defineProperty(tg,{height:"height"},function(){return this.Ue},function(a){var b=this.Ue;b!==a&&(0>a&&v.va(a,">= 0",tg,"height"),this.Ue=a,this.Ma=this.bb,null!==this.U&&this.U.P(),this.$c("height",b,a))});v.defineProperty(tg,{width:"width"},function(){return this.Ue},function(a){var b=this.Ue;b!==a&&(0>a&&v.va(a,">= 0",tg,"width"),this.Ue=a,this.Ma=this.bb,null!==this.U&&this.U.P(),this.$c("width",b,a))});
v.defineProperty(tg,{Zi:"minimum"},function(){return this.Bj},function(a){var b=this.Bj;b!==a&&((0>a||!isFinite(a))&&v.va(a,">= 0",tg,"minimum"),this.Bj=a,this.Ma=this.bb,null!==this.U&&this.U.P(),this.$c("minimum",b,a))});v.defineProperty(tg,{gf:"maximum"},function(){return this.zj},function(a){var b=this.zj;b!==a&&(0>a&&v.va(a,">= 0",tg,"maximum"),this.zj=a,this.Ma=this.bb,null!==this.U&&this.U.P(),this.$c("maximum",b,a))});
v.defineProperty(tg,{alignment:"alignment"},function(){return this.Be},function(a){var b=this.Be;b.K(a)||(this.Be=a.R(),null!==this.U&&this.U.P(),this.$c("alignment",b,a))});v.defineProperty(tg,{stretch:"stretch"},function(){return this.Rh},function(a){var b=this.Rh;b!==a&&(this.Rh=a,null!==this.U&&this.U.P(),this.$c("stretch",b,a))});
v.defineProperty(tg,{RE:"separatorPadding"},function(){return this.Gj},function(a){"number"===typeof a&&(a=new eb(a));var b=this.Gj;null!==a&&null!==b&&b.K(a)||(null!==a&&(a=a.R()),this.Gj=a,null!==this.U&&this.U.P(),this.$c("separatorPadding",b,a))});v.defineProperty(tg,{Dp:"separatorStroke"},function(){return this.ks},function(a){var b=this.ks;b!==a&&(null===a||"string"===typeof a||a instanceof ha)&&(a instanceof ha&&a.freeze(),this.ks=a,null!==this.U&&this.U.P(),this.$c("separatorStroke",b,a))});
v.defineProperty(tg,{Ep:"separatorStrokeWidth"},function(){return this.ls},function(a){var b=this.ls;b!==a&&(this.ls=a,null!==this.U&&this.U.P(),this.$c("separatorStrokeWidth",b,a))});
v.defineProperty(tg,{vI:"separatorDashArray"},function(){return this.Jh},function(a){var b=this.Jh;if(b!==a){null===a||Array.isArray(a)||v.Gd(a,"Array",tg,"separatorDashArray:value");if(null!==a){for(var c=a.length,d=0,e=0;e<c;e++){var f=a[e];"number"===typeof f&&0<=f&&isFinite(f)||v.k("separatorDashArray value "+f+" at index "+e+" must be a positive number or zero.");d+=f}if(0===d){if(null===b)return;a=null}}this.Jh=a;null!==this.U&&this.U.pa();this.$c("separatorDashArray",b,a)}});
v.defineProperty(tg,{background:"background"},function(){return this.Ib},function(a){var b=this.Ib;b!==a&&(null===a||"string"===typeof a||a instanceof ha)&&(a instanceof ha&&a.freeze(),this.Ib=a,null!==this.U&&this.U.pa(),this.$c("background",b,a))});v.defineProperty(tg,{iz:"coversSeparators"},function(){return this.mq},function(a){var b=this.mq;b!==a&&(v.j(a,"boolean",tg,"coversSeparators"),this.mq=a,null!==this.U&&this.U.pa(),this.$c("coversSeparators",b,a))});
v.defineProperty(tg,{$t:"sizing"},function(){return this.qs},function(a){var b=this.qs;b!==a&&(this.qs=a,null!==this.U&&this.U.P(),this.$c("sizing",b,a))});function Un(a){if(a.$t===ho){var b=a.Xg;return a.ee?b.qI:b.oG}return a.$t}v.defineProperty(tg,{Ma:"actual"},function(){return this.bb},function(a){this.bb=isNaN(this.Ue)?Math.max(Math.min(this.zj,a),this.Bj):Math.max(Math.min(this.zj,this.Ue),this.Bj)});
v.defineProperty(tg,{total:"total"},function(){return this.bb+this.pf()},function(a){this.bb=isNaN(this.Ue)?Math.max(Math.min(this.zj,a),this.Bj):Math.max(Math.min(this.zj,this.Ue),this.Bj);this.bb=Math.max(0,this.bb-this.pf())});v.defineProperty(tg,{position:"position"},function(){return this.kb},function(a){this.kb=a});
tg.prototype.bind=tg.prototype.bind=function(a){a.qg=this;var b=this.U;if(null!==b){var c=b.Wo();null!==c&&Zm(c)&&v.k("Cannot add a Binding to a RowColumnDefinition that is already frozen: "+a+" on "+b)}null===this.rc&&(this.rc=new I(zg));this.rc.add(a)};
function X(){G.call(this);this.Ra=null;this.Ln="None";this.Lh=!1;this.Iq=sm;this.tn=null;this.Dc=this.qd="black";this.Sh=1;this.yo="butt";this.Ao="miter";this.tm=10;this.zo=null;this.ld=0;this.Qh=this.Ph=kc;this.Ir=this.Hr=NaN;this.Qq=!1;this.Kr=null;this.On=this.Eo="None";this.Nq=1}v.Ia(X,G);v.ea("Shape",X);
X.prototype.cloneProtected=function(a){G.prototype.cloneProtected.call(this,a);a.Ra=this.Ra;a.Ln=this.Ln;a.Lh=this.Lh;a.Iq=this.Iq;a.tn=this.tn;a.qd=this.qd;a.Dc=this.Dc;a.Sh=this.Sh;a.yo=this.yo;a.Ao=this.Ao;a.tm=this.tm;null!==this.zo&&(a.zo=v.dl(this.zo));a.ld=this.ld;a.Ph=this.Ph.R();a.Qh=this.Qh.R();a.Hr=this.Hr;a.Ir=this.Ir;a.Qq=this.Qq;a.Kr=this.Kr;a.Eo=this.Eo;a.On=this.On;a.Nq=this.Nq};
X.prototype.toString=function(){return"Shape("+("None"!==this.Ab?this.Ab:"None"!==this.Kp?this.Kp:this.pz)+")#"+v.md(this)};
function io(a,b,c,d){var e=c.length;if(!(4>e)){for(var f=d.Ca,h=Math.max(1,f.width),f=f.height,k=c[0],l=c[1],m=0,n=0,p=0,q=0,r=0,s=0,t=q=0,u=v.jb(),w=2;w<e;w+=2)m=c[w],n=c[w+1],p=m-k,q=n-l,0===p&&(p=.001),r=q/p,s=Math.atan2(q,p),q=Math.sqrt(p*p+q*q),u.push([p,s,r,q]),t+=q,k=m,l=n;k=c[0];l=c[1];p=d.Ca.width;d instanceof X&&(p-=d.lb);1>p&&(p=1);c=p;for(var e=0,m=c,n=h/2,w=0===n?!1:!0,x=0,q=u[x],p=q[0],s=q[1],r=q[2],q=q[3],z=0;.1<=t;){0===z&&(w?(m=c,e++,m-=n,t-=n,w=!1):(m=c,e++),0===m&&(m=1));if(m>t){v.sa(u);
return}m>q?(z=m-q,m=q):z=0;var A=Math.sqrt(m*m/(1+r*r));0>p&&(A=-A);k+=A;l+=r*A;a.translate(k,l);a.rotate(s);a.translate(-(h/2),-(f/2));0===z&&d.Wj(a,b);a.translate(h/2,f/2);a.rotate(-s);a.translate(-k,-l);t-=m;q-=m;if(0!==z){x++;if(x===u.length){v.sa(u);return}q=u[x];p=q[0];s=q[1];r=q[2];q=q[3];m=z}}v.sa(u)}}
X.prototype.Wj=function(a,b){if(null!==this.Dc||null!==this.qd){null!==this.qd&&Mm(this,a,this.qd,!0,!1);null!==this.Dc&&Mm(this,a,this.Dc,!1,!1);var c=this.Sh;if(0===c){var d=this.Y;d instanceof Tg&&d.type===xi&&"Selection"===d.gc&&d.Yb instanceof X&&d.Nf.Ye()===d.Yb&&(c=d.Yb.lb)}a.lineWidth=c;a.lineJoin=this.Ao;a.lineCap=this.yo;a.miterLimit=this.tm;var e=!1;this.Y&&b.$j("drawShadows")&&(e=this.Y.vl);var f=!0;null!==this.Dc&&null===this.qd&&(f=!1);var d=!1,h=!0,k=this.$E;null!==k&&(d=!0,void 0!==
a.setLineDash?(a.setLineDash(k),a.lineDashOffset=this.ld):void 0!==a.webkitLineDash?(a.webkitLineDash=k,a.webkitLineDashOffset=this.ld):void 0!==a.mozDash?(a.mozDash=k,a.mozDashOffset=this.ld):h=!1);var l=this.Ra;if(null!==l){if(l.ia===Ge)a.beginPath(),d&&!h?zm(a,l.vc,l.Cc,l.vb,l.Bb,k,this.ld):(a.moveTo(l.vc,l.Cc),a.lineTo(l.vb,l.Bb)),null!==this.qd&&a.vg(this.qd),0!==c&&null!==this.Dc&&a.bj();else if(l.ia===He){var m=l.vc,n=l.Cc,p=l.vb,q=l.Bb,l=Math.min(m,p),r=Math.min(n,q),m=Math.abs(p-m),n=Math.abs(q-
n);null!==this.qd&&(a.beginPath(),a.rect(l,r,m,n),a.vg(this.qd));if(null!==this.Dc){var s=p=0,t=0;f&&e&&(p=a.shadowOffsetX,s=a.shadowOffsetY,t=a.shadowBlur,a.shadowOffsetX=0,a.shadowOffsetY=0,a.shadowBlur=0);d&&!h?(h=v.jb(),h.push(l),h.push(r),h.push(l+m),h.push(r),h.push(l+m),h.push(r+n),h.push(l),h.push(r+n),h.push(l),h.push(r),a.beginPath(),jo(a,h,k,this.ld),a.bj(),v.sa(h)):0!==c&&(a.beginPath(),a.rect(l,r,m,n),a.bj());f&&e&&(a.shadowOffsetX=p,a.shadowOffsetY=s,a.shadowBlur=t)}}else if(l.ia===
Ie)m=l.vc,n=l.Cc,p=l.vb,q=l.Bb,l=Math.abs(p-m)/2,r=Math.abs(q-n)/2,m=Math.min(m,p)+l,n=Math.min(n,q)+r,a.beginPath(),a.moveTo(m,n-r),a.bezierCurveTo(m+Wc*l,n-r,m+l,n-Wc*r,m+l,n),a.bezierCurveTo(m+l,n+Wc*r,m+Wc*l,n+r,m,n+r),a.bezierCurveTo(m-Wc*l,n+r,m-l,n+Wc*r,m-l,n),a.bezierCurveTo(m-l,n-Wc*r,m-Wc*l,n-r,m,n-r),a.closePath(),null!==this.qd&&a.vg(this.qd),d&&!h&&(h=v.jb(),Rd(m,n-r,m+Wc*l,n-r,m+l,n-Wc*r,m+l,n,.5,h),Rd(m+l,n,m+l,n+Wc*r,m+Wc*l,n+r,m,n+r,.5,h),Rd(m,n+r,m-Wc*l,n+r,m-l,n+Wc*r,m-l,n,.5,h),
Rd(m-l,n,m-l,n-Wc*r,m-Wc*l,n-r,m,n-r,.5,h),a.beginPath(),jo(a,h,k,this.ld),v.sa(h)),0!==c&&null!==this.Dc&&(f&&e?(p=a.shadowOffsetX,s=a.shadowOffsetY,t=a.shadowBlur,a.shadowOffsetX=0,a.shadowOffsetY=0,a.shadowBlur=0,a.bj(),a.shadowOffsetX=p,a.shadowOffsetY=s,a.shadowBlur=t):a.bj());else if(l.ia===De){r=l.jj;n=r.length;for(q=0;q<n;q++){m=r.n[q];a.beginPath();a.moveTo(m.za,m.xa);for(var p=m.sb.n,s=p.length,u=null,t=0;t<s;t++){var w=p[t];switch(w.ia){case hf:a.moveTo(w.I,w.J);break;case $e:a.lineTo(w.I,
w.J);break;case jf:a.bezierCurveTo(w.td,w.Ge,w.Yg,w.og,w.vb,w.Bb);break;case kf:a.quadraticCurveTo(w.td,w.Ge,w.vb,w.Bb);break;case lf:if(w.radiusX===w.radiusY)u=Math.PI/180,a.arc(w.td,w.Ge,w.radiusX,w.ye*u,(w.ye+w.Bf)*u,0>w.Bf);else{var u=nf(w,m),x=u.length;if(0===x){a.lineTo(w.na,w.ua);break}for(var z=0;z<x;z++){var A=u[z];0===z&&a.lineTo(A[0],A[1]);a.bezierCurveTo(A[2],A[3],A[4],A[5],A[6],A[7])}}break;case mf:z=x=0;if(null!==u&&u.type===lf){u=nf(u,m);A=u.length;if(0===A){a.lineTo(w.na,w.ua);break}u=
u[A-1]||null;null!==u&&(x=u[6],z=u[7])}else x=null!==u?u.I:m.za,z=null!==u?u.J:m.xa;u=of(w,m,x,z);x=u.length;if(0===x){a.lineTo(w.na,w.ua);break}for(z=0;z<x;z++)A=u[z],a.bezierCurveTo(A[2],A[3],A[4],A[5],A[6],A[7]);break;default:v.k("Segment not of valid type: "+w.ia)}w.Eh&&a.closePath();u=w}e?(t=s=p=0,m.Vn?(!0===m.Sl&&null!==this.qd?(a.vg(this.qd),f=!0):f=!1,0!==c&&null!==this.Dc&&(f&&(p=a.shadowOffsetX,s=a.shadowOffsetY,t=a.shadowBlur,a.shadowOffsetX=0,a.shadowOffsetY=0,a.shadowBlur=0),d&&!h||a.bj(),
f&&(a.shadowOffsetX=p,a.shadowOffsetY=s,a.shadowBlur=t))):(f&&(p=a.shadowOffsetX,s=a.shadowOffsetY,t=a.shadowBlur,a.shadowOffsetX=0,a.shadowOffsetY=0,a.shadowBlur=0),!0===m.Sl&&null!==this.qd&&a.vg(this.qd),0!==c&&null!==this.Dc&&(d&&!h||a.bj()),f&&(a.shadowOffsetX=p,a.shadowOffsetY=s,a.shadowBlur=t))):(!0===m.Sl&&null!==this.qd&&a.vg(this.qd),0===c||null===this.Dc||d&&!h||a.bj())}if(d&&!h)for(c=f,f=l.jj,h=f.length,l=0;l<h;l++){r=f.n[l];a.beginPath();n=v.jb();n.push(r.za);n.push(r.xa);q=r.za;m=r.xa;
p=q;s=m;t=r.sb.n;w=t.length;for(u=0;u<w;u++){x=t[u];switch(x.ia){case hf:jo(a,n,k,this.ld);n.length=0;n.push(x.I);n.push(x.J);q=x.I;m=x.J;p=q;s=m;break;case $e:n.push(x.I);n.push(x.J);q=x.I;m=x.J;break;case jf:Rd(q,m,x.td,x.Ge,x.Yg,x.og,x.vb,x.Bb,.5,n);q=x.I;m=x.J;break;case kf:Vd(q,m,x.td,x.Ge,x.vb,x.Bb,.5,n);q=x.I;m=x.J;break;case lf:z=nf(x,r);A=z.length;if(0===A){n.push(x.na);n.push(x.ua);q=x.na;m=x.ua;break}for(var H=0;H<A;H++){var C=z[H];Rd(q,m,C[2],C[3],C[4],C[5],C[6],C[7],.5,n);q=C[6];m=C[7]}break;
case mf:z=of(x,r,q,m);A=z.length;if(0===A){n.push(x.na);n.push(x.ua);q=x.na;m=x.ua;break}for(H=0;H<A;H++)C=z[H],Rd(q,m,C[2],C[3],C[4],C[5],C[6],C[7],.5,n),q=C[6],m=C[7];break;default:v.k("Segment not of valid type: "+x.ia)}x.Eh&&(n.push(p),n.push(s),jo(a,n,k,this.ld))}jo(a,n,k,this.ld);v.sa(n);null!==this.Dc&&(q=n=r=0,c&&e&&(r=a.shadowOffsetX,n=a.shadowOffsetY,q=a.shadowBlur,a.shadowOffsetX=0,a.shadowOffsetY=0,a.shadowBlur=0),a.bj(),c&&e&&(a.shadowOffsetX=r,a.shadowOffsetY=n,a.shadowBlur=q))}}d&&
(void 0!==a.setLineDash?(a.setLineDash(v.th),a.lineDashOffset=0):void 0!==a.webkitLineDash?(a.webkitLineDash=v.th,a.webkitLineDashOffset=0):void 0!==a.mozDash&&(a.mozDash=null,a.mozDashOffset=0));if(null!==this.Uw){d=this.Uw;fj(d,Infinity,Infinity);k=d.Ca;d.Ec(0,0,k.width,k.height);c=this.ml;a.save();a.beginPath();k=v.jb();if(c.type===Ge)k.push(c.za),k.push(c.xa),k.push(c.I),k.push(c.J),io(a,b,k,d);else if(c.type===De)for(h=c.Ub.i;h.next();){l=h.value;k.length=0;k.push(l.za);k.push(l.xa);f=l.za;r=
l.xa;n=f;q=r;m=l.sb.n;p=m.length;for(s=0;s<p;s++){t=m[s];switch(t.ia){case hf:io(a,b,k,d);k.length=0;k.push(t.I);k.push(t.J);f=t.I;r=t.J;n=f;q=r;break;case $e:k.push(t.I);k.push(t.J);f=t.I;r=t.J;break;case jf:Rd(f,r,t.td,t.Ge,t.Yg,t.og,t.vb,t.Bb,.5,k);f=t.I;r=t.J;break;case kf:Vd(f,r,t.td,t.Ge,t.vb,t.Bb,.5,k);f=t.I;r=t.J;break;case lf:c=nf(t,l);e=c.length;if(0===e){k.push(t.na);k.push(t.ua);f=t.na;r=t.ua;break}for(w=0;w<e;w++)u=c[w],Rd(f,r,u[2],u[3],u[4],u[5],u[6],u[7],.5,k),f=u[6],r=u[7];break;case mf:c=
of(t,l,f,r);e=c.length;if(0===e){k.push(t.na);k.push(t.ua);f=t.na;r=t.ua;break}for(w=0;w<e;w++)u=c[w],Rd(f,r,u[2],u[3],u[4],u[5],u[6],u[7],.5,k),f=u[6],r=u[7];break;default:v.k("Segment not of valid type: "+t.ia)}t.Eh&&(k.push(n),k.push(q),io(a,b,k,d))}io(a,b,k,d)}else if(c.type===He)k.push(c.za),k.push(c.xa),k.push(c.I),k.push(c.xa),k.push(c.I),k.push(c.J),k.push(c.za),k.push(c.J),k.push(c.za),k.push(c.xa),io(a,b,k,d);else if(c.type===Ie){h=new Ee;h.za=c.I;h.xa=(c.xa+c.J)/2;f=new wf(lf);f.ye=0;f.Bf=
360;f.na=(c.za+c.I)/2;f.ua=(c.xa+c.J)/2;f.radiusX=Math.abs(c.za-c.I)/2;f.radiusY=Math.abs(c.xa-c.J)/2;h.add(f);c=nf(f,h);e=c.length;if(0===e)k.push(f.na),k.push(f.ua);else for(f=h.za,r=h.xa,w=0;w<e;w++)u=c[w],Rd(f,r,u[2],u[3],u[4],u[5],u[6],u[7],.5,k),f=u[6],r=u[7];io(a,b,k,d)}v.sa(k);a.restore();Vc(a,!1)}}}};
function jo(a,b,c,d){var e=b.length;if(!(4>e)){var f=.001,h=c.length,k=b[0],l=b[1];if(4===e)zm(a,k,l,b[2],b[3],c,d);else{a.moveTo(k,l);for(var m=f=0,n=0,p=0,q=0,r=p=0,s=v.jb(),t=2;t<e;t+=2)f=b[t],m=b[t+1],n=f-k,p=m-l,0===n&&(n=.001),q=p/n,p=Math.sqrt(n*n+p*p),s.push([n,q,p]),r+=p,k=f,l=m;k=b[0];l=b[1];b=0;for(var e=!0,f=c[b%h],m=0!==d,t=0,p=s[t],n=p[0],q=p[1],p=p[2],u=0;.1<=r;){0===u&&(f=c[b%h],b++,m&&(d%=f,f-=d,m=!1));f>r&&(f=r);f>p?(u=f-p,f=p):u=0;var w=Math.sqrt(f*f/(1+q*q));0>n&&(w=-w);k+=w;l+=
q*w;e?a.lineTo(k,l):a.moveTo(k,l);r-=f;p-=f;if(0!==u){t++;if(t===s.length){v.sa(s);return}p=s[t];n=p[0];q=p[1];p=p[2];f=u}else e=!e}v.sa(s)}}}X.prototype.getDocumentPoint=X.prototype.Xa=function(a,b){void 0===b&&(b=new y);a.te()&&v.k("getDocumentPoint Spot must be a real, specific Spot, not: "+a.toString());var c=this.Ha,d=this.lb;b.m(a.x*(c.width+d)-d/2+c.x+a.offsetX,a.y*(c.height+d)-d/2+c.y+a.offsetY);this.Zg.ub(b);return b};
X.prototype.Uj=function(a,b){var c=this.Ra;if(null===c||null===this.fill&&null===this.stroke)return!1;var d=c.mb,e=this.lb/2;c.type!==Ge||b||(e+=2);var f=v.bg();f.assign(d);f.Rf(e+2,e+2);if(!f.Fa(a))return v.Vb(f),!1;d=e+1E-4;if(c.type===Ge){if(null===this.stroke)return!1;d=(c.I-c.za)*(a.x-c.za)+(c.J-c.xa)*(a.y-c.xa);if(0>(c.za-c.I)*(a.x-c.I)+(c.xa-c.J)*(a.y-c.J)||0>d)return!1;v.Vb(f);return Jd(c.za,c.xa,c.I,c.J,e,a.x,a.y)}if(c.type===He){var h=c.za,k=c.xa,l=c.I,m=c.J;f.x=Math.min(h,l);f.y=Math.min(k,
m);f.width=Math.abs(l-h);f.height=Math.abs(m-k);if(null===this.fill){f.Rf(-d,-d);if(f.Fa(a))return v.Vb(f),!1;f.Rf(d,d)}null!==this.stroke&&f.Rf(e,e);e=f.Fa(a);v.Vb(f);return e}if(c.type===Ie){var h=c.za,k=c.xa,l=c.I,m=c.J,c=Math.min(h,l),n=Math.min(k,m),h=Math.abs(l-h)/2,k=Math.abs(m-k)/2,c=a.x-(c+h),n=a.y-(n+k);if(null===this.fill){h-=d;k-=d;if(0>=h||0>=k||1>=c*c/(h*h)+n*n/(k*k))return v.Vb(f),!1;h+=d;k+=d}null!==this.stroke&&(h+=e,k+=e);v.Vb(f);return 0>=h||0>=k?!1:1>=c*c/(h*h)+n*n/(k*k)}if(c.type===
De)return v.Vb(f),null===this.fill?vf(c,a.x,a.y,e):c.Fa(a,e,1<this.lb,b);v.k("Unknown Geometry type: "+c.type);return!1};
X.prototype.mp=function(a,b,c,d){var e=this.wa,f=this.Sh;a=Math.max(a,0);b=Math.max(b,0);var h;if(this.Lh)h=this.ml.mb;else{var k=this.Ab,l=Fd[k];if(void 0===l){var m=ko[k];"string"===typeof m&&(m=ko[m]);"function"===typeof m?(l=m(null,100,100),Fd[k]=l):v.k("Unsupported Figure: "+k)}h=l.mb}var k=h.width,l=h.height,m=h.width,n=h.height;switch(Em(this,!0)){case Ni:d=c=0;break;case Fe:m=Math.max(a-f,0);n=Math.max(b-f,0);break;case um:m=Math.max(a-f,0);d=0;break;case tm:c=0,n=Math.max(b-f,0)}isFinite(e.width)&&
(m=e.width);isFinite(e.height)&&(n=e.height);e=this.yf;h=this.jh;c=Math.max(c,h.width)-f;d=Math.max(d,h.height)-f;m=Math.min(e.width,m);n=Math.min(e.height,n);m=isFinite(m)?Math.max(c,m):Math.max(k,c);n=isFinite(n)?Math.max(d,n):Math.max(l,d);c=Oi(this);switch(c){case Ni:break;case Fe:k=m;l=n;break;case Pi:c=Math.min(m/k,n/l);isFinite(c)||(c=1);k*=c;l*=c;break;default:v.k(c+" is not a valid geometryStretch.")}if(this.Lh)h=this.ml,e=k,d=l,c=h.copy(),h=h.mb,e/=h.width,d/=h.height,isFinite(e)||(e=1),
isFinite(d)||(d=1),1===e&&1===d||c.scale(e,d),this.Ra=c;else if(null===this.Ra||this.Ra.Un!==a-f||this.Ra.Sn!==b-f)this.Ra=X.makeGeometry(this,k,l);h=this.Ra.mb;Infinity===a||Infinity===b?Bm(this,h.x-f/2,h.y-f/2,0===a&&0===k?0:h.width+f,0===b&&0===l?0:h.height+f):Bm(this,-(f/2),-(f/2),m+f,n+f)};
function Wn(a,b,c,d){if(!1!==dl(a)){a.kd.Oa();var e=a.Sh;0===e&&d instanceof Tg&&d.type===xi&&d.Yb instanceof X&&(e=d.Yb.lb);e*=a.Tb;d instanceof W&&null!==d.Ra?(b=d.Ra.mb,Bm(a,b.x-e/2,b.y-e/2,b.width+e,b.height+e)):Bm(a,-(e/2),-(e/2),b+e,c+e);a.kd.freeze();a.kd.G()||v.k("Non-real measuredBounds has been set. Object "+a+", measuredBounds: "+a.kd.toString());Qk(a,!1)}}function Oi(a){var b=a.rz;return a.Lh?b===sm?Fe:b:b===sm?Fd[a.Ab].Od:b}X.prototype.Ni=function(a,b,c,d){Fm(this,a,b,c,d)};
X.prototype.getNearestIntersectionPoint=X.prototype.PD=function(a,b,c){return this.ap(a.x,a.y,b.x,b.y,c)};
X.prototype.ap=function(a,b,c,d,e){var f=this.transform,h=1/(f.m11*f.m22-f.m12*f.m21),k=f.m22*h,l=-f.m12*h,m=-f.m21*h,n=f.m11*h,p=h*(f.m21*f.dy-f.m22*f.dx),q=h*(f.m12*f.dx-f.m11*f.dy),f=a*k+b*m+p,h=a*l+b*n+q,k=c*k+d*m+p,l=c*l+d*n+q,m=this.lb/2,p=this.Ra;null===p&&(fj(this,Infinity,Infinity),p=this.Ra);q=p.mb;n=!1;if(p.type===Ge)if(1.5>=this.lb)n=Yd(p.vc,p.Cc,p.vb,p.Bb,f,h,k,l,e);else{var r=0,s=0;p.vc===p.vb?(r=m,s=0):(b=(p.Bb-p.Cc)/(p.vb-p.vc),s=m/Math.sqrt(1+b*b),r=s*b);d=v.jb();b=new y;Yd(p.vc+
r,p.Cc+s,p.vb+r,p.Bb+s,f,h,k,l,b)&&d.push(b);b=new y;Yd(p.vc-r,p.Cc-s,p.vb-r,p.Bb-s,f,h,k,l,b)&&d.push(b);b=new y;Yd(p.vc+r,p.Cc+s,p.vc-r,p.Cc-s,f,h,k,l,b)&&d.push(b);b=new y;Yd(p.vb+r,p.Bb+s,p.vb-r,p.Bb-s,f,h,k,l,b)&&d.push(b);b=d.length;if(0===b)return v.sa(d),!1;n=!0;s=Infinity;for(r=0;r<b;r++){var k=d[r],t=(k.x-f)*(k.x-f)+(k.y-h)*(k.y-h);t<s&&(s=t,e.x=k.x,e.y=k.y)}v.sa(d)}else if(p.type===He)b=q.x-m,n=Zd(b,q.y-m,q.x+q.width+m,q.y+q.height+m,f,h,k,l,e);else if(p.type===Ie)a:if(b=q.copy().Rf(m,
m),0===b.width)n=Yd(b.x,b.y,b.x,b.y+b.height,f,h,k,l,e);else if(0===b.height)n=Yd(b.x,b.y,b.x+b.width,b.y,f,h,k,l,e);else{a=b.width/2;var u=b.height/2;d=b.x+a;b=b.y+u;c=9999;f!==k&&(c=(h-l)/(f-k));if(9999>Math.abs(c)){n=h-b-c*(f-d);if(0>a*a*c*c+u*u-n*n){e.x=NaN;e.y=NaN;n=!1;break a}m=Math.sqrt(a*a*c*c+u*u-n*n);k=(-(a*a*c*n)+a*u*m)/(u*u+a*a*c*c)+d;a=(-(a*a*c*n)-a*u*m)/(u*u+a*a*c*c)+d;l=c*(k-d)+n+b;b=c*(a-d)+n+b;d=Math.abs((f-k)*(f-k))+Math.abs((h-l)*(h-l));h=Math.abs((f-a)*(f-a))+Math.abs((h-b)*(h-
b));d<h?(e.x=k,e.y=l):(e.x=a,e.y=b)}else{k=u*u;l=f-d;k-=k/(a*a)*l*l;if(0>k){e.x=NaN;e.y=NaN;n=!1;break a}m=Math.sqrt(k);l=b+m;b-=m;d=Math.abs(l-h);h=Math.abs(b-h);d<h?(e.x=f,e.y=l):(e.x=f,e.y=b)}n=!0}else if(p.type===De){var w=0,x=0,z=t=0,q=v.L(),r=k-f,s=l-h,s=r*r+s*s;e.x=k;e.y=l;for(r=0;r<p.Ub.count;r++)for(var A=p.Ub.n[r],H=A.sb,w=A.za,x=A.xa,C=w,T=x,ba=0;ba<H.count;ba++){var U=H.n[ba],M=U.type,t=U.I,z=U.J,aa=!1;switch(M){case hf:C=t;T=z;break;case $e:aa=lo(w,x,t,z,f,h,k,l,q);break;case jf:var aa=
U.qc,M=U.Kc,Ia=U.lh,oa=U.mh,aa=Wd(w,x,aa,M,Ia,oa,t,z,f,h,k,l,.5,q);break;case kf:aa=(w+2*U.qc)/3;M=(x+2*U.Kc)/3;Ia=(2*U.qc+t)/3;oa=(2*U.qc+t)/3;aa=Wd(w,x,aa,M,Ia,oa,t,z,f,h,k,l,.5,q);break;case lf:case mf:M=U.type===lf?nf(U,A):of(U,A,w,x);Ia=M.length;if(0===Ia){aa=lo(w,x,U.na,U.ua,f,h,k,l,q);break}for(z=0;z<Ia;z++)u=M[z],0===z&&lo(w,x,u[0],u[1],f,h,k,l,q)&&(t=mo(f,h,q,s,e),t<s&&(s=t,n=!0)),Wd(u[0],u[1],u[2],u[3],u[4],u[5],u[6],u[7],f,h,k,l,.5,q)&&(t=mo(f,h,q,s,e),t<s&&(s=t,n=!0));t=u[6];z=u[7];break;
default:v.k("Unknown Segment type: "+M)}w=t;x=z;aa&&(t=mo(f,h,q,s,e),t<s&&(s=t,n=!0));U.Fw&&(t=C,z=T,lo(w,x,t,z,f,h,k,l,q)&&(t=mo(f,h,q,s,e),t<s&&(s=t,n=!0)))}f=c-a;h=d-b;b=Math.sqrt(f*f+h*h);0!==b&&(f/=b,h/=b);e.x-=f*m;e.y-=h*m;v.v(q)}else v.k("Unknown Geometry type: "+p.type);if(!n)return!1;this.transform.ub(e);return!0};function mo(a,b,c,d,e){a=c.x-a;b=c.y-b;b=a*a+b*b;return b<d?(e.x=c.x,e.y=c.y,b):d}
function lo(a,b,c,d,e,f,h,k,l){var m=!1,n=(e-h)*(b-d)-(f-k)*(a-c);if(0===n)return!1;l.x=((e*k-f*h)*(a-c)-(e-h)*(a*d-b*c))/n;l.y=((e*k-f*h)*(b-d)-(f-k)*(a*d-b*c))/n;(a>c?a-c:c-a)<(b>d?b-d:d-b)?(e=b<d?b:d,a=b<d?d:b,(l.y>e||Dc(l.y,e))&&(l.y<a||Dc(l.y,a))&&(m=!0)):(e=a<c?a:c,a=a<c?c:a,(l.x>e||Dc(l.x,e))&&(l.x<a||Dc(l.x,a))&&(m=!0));return m}
X.prototype.containedInRect=X.prototype.Fm=function(a,b){if(void 0===b)return a.Vj(this.V);var c=this.Ra;null===c&&(fj(this,Infinity,Infinity),c=this.Ra);var c=c.mb,d=this.lb/2,e=!1,f=v.L();f.m(c.x-d,c.y-d);a.Fa(b.ub(f))&&(f.m(c.x-d,c.bottom+d),a.Fa(b.ub(f))&&(f.m(c.right+d,c.bottom+d),a.Fa(b.ub(f))&&(f.m(c.right+d,c.y-d),a.Fa(b.ub(f))&&(e=!0))));v.v(f);return e};
X.prototype.intersectsRect=X.prototype.yg=function(a,b){if(this.Fm(a,b)||void 0===b&&(b=this.transform,a.Vj(this.V)))return!0;var c=v.qh();c.set(b);c.zz();var d=a.left,e=a.right,f=a.top,h=a.bottom,k=v.L();k.m(d,f);c.ub(k);if(this.Uj(k,!0))return v.v(k),!0;k.m(e,f);c.ub(k);if(this.Uj(k,!0))return v.v(k),!0;k.m(d,h);c.ub(k);if(this.Uj(k,!0))return v.v(k),!0;k.m(e,h);c.ub(k);if(this.Uj(k,!0))return v.v(k),!0;var l=v.L(),m=v.L();c.set(b);c.sE(this.transform);c.zz();l.x=e;l.y=f;l.transform(c);k.x=d;k.y=
f;k.transform(c);var n=!1;no(this,k,l,m)?n=!0:(k.x=e,k.y=h,k.transform(c),no(this,k,l,m)?n=!0:(l.x=d,l.y=h,l.transform(c),no(this,k,l,m)?n=!0:(k.x=d,k.y=f,k.transform(c),no(this,k,l,m)&&(n=!0))));v.v(k);v.$e(c);v.v(l);v.v(m);return n};function no(a,b,c,d){if(!a.PD(b,c,d))return!1;a=b.x;b=b.y;var e=c.x;c=c.y;var f=d.x;d=d.y;if(a===e){var h=0;a=0;b<c?(h=b,a=c):(h=c,a=b);return d>=h&&d<=a}a<e?(h=a,a=e):h=e;return f>=h&&f<=a}
X.prototype.JD=function(a,b,c){function d(a,b){for(var c=a.length,d=0;d<c;d+=2)if(b.To(a[d],a[d+1])>e)return!0;return!1}if(c&&null!==this.fill&&this.Uj(a,!0))return!0;var e=a.sf(b);b=e;1.5<this.lb&&(e=this.lb/2+Math.sqrt(e),e*=e);var f=this.Ra;if(null===f&&(fj(this,Infinity,Infinity),f=this.Ra,null===f))return!1;if(!c){var h=f.mb,k=h.x,l=h.y,m=h.x+h.width,h=h.y+h.height;if(Ta(a.x,a.y,k,l)<=e&&Ta(a.x,a.y,m,l)<=e&&Ta(a.x,a.y,k,h)<=e&&Ta(a.x,a.y,m,h)<=e)return!0}k=f.vc;l=f.Cc;m=f.vb;h=f.Bb;if(f.type===
Ge){if(c=Sa(a.x,a.y,k,l,m,h),f=(k-m)*(a.x-m)+(l-h)*(a.y-h),c<=(0<=(m-k)*(a.x-k)+(h-l)*(a.y-l)&&0<=f?e:b))return!0}else{if(f.type===He)return b=!1,c&&(b=Sa(a.x,a.y,k,l,k,h)<=e||Sa(a.x,a.y,k,l,m,l)<=e||Sa(a.x,a.y,m,l,m,h)<=e||Sa(a.x,a.y,k,h,m,h)<=e),b;if(f.type===Ie){b=a.x-(k+m)/2;var f=a.y-(l+h)/2,n=Math.abs(m-k)/2,p=Math.abs(h-l)/2;if(0===n||0===p)return c=Sa(a.x,a.y,k,l,m,h),c<=e?!0:!1;if(c){if(a=qe(n,p,b,f),a*a<=e)return!0}else return Ta(b,f,-n,0)>=e||Ta(b,f,0,-p)>=e||Ta(b,f,0,p)>=e||Ta(b,f,n,0)>=
e?!1:!0}else if(f.type===De){h=f.mb;k=h.x;l=h.y;m=h.x+h.width;h=h.y+h.height;if(a.x>m&&a.x<k&&a.y>h&&a.y<l&&Sa(a.x,a.y,k,l,k,h)>e&&Sa(a.x,a.y,k,l,m,l)>e&&Sa(a.x,a.y,m,h,k,h)>e&&Sa(a.x,a.y,m,h,m,l)>e)return!1;b=Math.sqrt(e);if(c){if(null===this.fill?vf(f,a.x,a.y,b):f.Fa(a,b,!0))return!0}else{c=f.Ub;for(b=0;b<c.count;b++){k=c.n[b];n=k.za;p=k.xa;if(a.To(n,p)>e)return!1;l=k.sb.n;m=l.length;for(h=0;h<m;h++){var q=l[h];switch(q.type){case hf:case $e:n=q.I;p=q.J;if(a.To(n,p)>e)return!1;break;case jf:f=v.jb();
Rd(n,p,q.qc,q.Kc,q.lh,q.mh,q.I,q.J,.8,f);n=d(f,a);v.sa(f);if(n)return!1;n=q.I;p=q.J;if(a.To(n,p)>e)return!1;break;case kf:f=v.jb();Vd(n,p,q.qc,q.Kc,q.I,q.J,.8,f);n=d(f,a);v.sa(f);if(n)return!1;n=q.I;p=q.J;if(a.To(n,p)>e)return!1;break;case lf:case mf:var r=q.type===lf?nf(q,k):of(q,k,n,p),s=r.length;if(0===s){n=q.na;p=q.ua;if(a.To(n,p)>e)return!1;break}q=null;f=v.jb();for(b=0;b<s;b++)if(q=r[b],f.length=0,Rd(q[0],q[1],q[2],q[3],q[4],q[5],q[6],q[7],.8,f),d(f,a))return v.sa(f),!1;v.sa(f);null!==q&&(n=
q[6],p=q[7]);break;default:v.k("Unknown Segment type: "+q.type)}}}return!0}}}return!1};v.defineProperty(X,{ml:"geometry"},function(){return this.Ra?this.Ra:this.tn},function(a){var b=this.Ra;if(b!==a){this.tn=null!==a?this.Ra=a.freeze():this.Ra=null;var c=this.Y;null!==c&&(c.xj=NaN);this.Lh=!0;this.P();this.h("geometry",b,a);a=this.Y;null!==a&&0!==(this.fa&1024)&&Am(this,a,"geometryString")}});
v.defineProperty(X,{SG:"geometryString"},function(){return null===this.ml?"":this.ml.toString()},function(a){a=bf(a);var b=a.normalize();this.ml=a;this.position=a=v.Mb(-b.x,-b.y);v.v(a)});v.defineProperty(X,{bE:"isGeometryPositioned"},function(){return this.Qq},function(a){var b=this.Qq;b!==a&&(this.Qq=a,this.P(),this.h("isGeometryPositioned",b,a))});X.prototype.se=function(){this.Ra=null;this.P()};
v.defineProperty(X,{fill:"fill"},function(){return this.qd},function(a){var b=this.qd;b!==a&&(a instanceof ha&&a.freeze(),this.qd=a,this.pa(),this.h("fill",b,a))});v.defineProperty(X,{stroke:"stroke"},function(){return this.Dc},function(a){var b=this.Dc;b!==a&&(a instanceof ha&&a.freeze(),this.Dc=a,this.pa(),this.h("stroke",b,a))});
v.defineProperty(X,{lb:"strokeWidth"},function(){return this.Sh},function(a){var b=this.Sh;if(b!==a)if(0<=a){this.Sh=a;this.P();var c=this.Y;null!==c&&(c.xj=NaN);this.h("strokeWidth",b,a)}else v.va(a,"value >= 0",X,"strokeWidth:value")});v.defineProperty(X,{FK:"strokeCap"},function(){return this.yo},function(a){var b=this.yo;b!==a&&("string"!==typeof a||"butt"!==a&&"round"!==a&&"square"!==a?v.va(a,'"butt", "round", or "square"',X,"strokeCap"):(this.yo=a,this.pa(),this.h("strokeCap",b,a)))});
v.defineProperty(X,{HK:"strokeJoin"},function(){return this.Ao},function(a){var b=this.Ao;b!==a&&("string"!==typeof a||"miter"!==a&&"bevel"!==a&&"round"!==a?v.va(a,'"miter", "bevel", or "round"',X,"strokeJoin"):(this.Ao=a,this.pa(),this.h("strokeJoin",b,a)))});v.defineProperty(X,{IK:"strokeMiterLimit"},function(){return this.tm},function(a){var b=this.tm;if(b!==a)if(1<=a){this.tm=a;this.pa();var c=this.Y;null!==c&&(c.xj=NaN);this.h("strokeMiterLimit",b,a)}else v.va(a,"value >= 1",X,"strokeWidth:value")});
v.defineProperty(X,{$E:"strokeDashArray"},function(){return this.zo},function(a){var b=this.zo;if(b!==a){null===a||Array.isArray(a)||v.Gd(a,"Array",X,"strokeDashArray:value");if(null!==a){for(var c=a.length,d=0,e=0;e<c;e++){var f=a[e];"number"===typeof f&&0<=f&&isFinite(f)||v.k("strokeDashArray:value "+f+" at index "+e+" must be a positive number or zero.");d+=f}if(0===d){if(null===b)return;a=null}}this.zo=a;this.pa();this.h("strokeDashArray",b,a)}});
v.defineProperty(X,{GK:"strokeDashOffset"},function(){return this.ld},function(a){var b=this.ld;b!==a&&0<=a&&(this.ld=a,this.pa(),this.h("strokeDashOffset",b,a))});v.defineProperty(X,{Ab:"figure"},function(){return this.Ln},function(a){var b=this.Ln;if(b!==a){var c=ko[a];"function"===typeof c?c=a:(c=ko[a.toLowerCase()])||v.k("Unknown Shape.figure: "+a);b!==c&&(a=this.Y,null!==a&&(a.xj=NaN),this.Ln=c,this.Lh=!1,this.se(),this.h("figure",b,c))}});
v.defineProperty(X,{Kp:"toArrow"},function(){return this.Eo},function(a){var b=this.Eo;!0===a?a="Standard":!1===a&&(a="");if(b!==a){var c=oo(a);null===c?v.k("Unknown Shape.toArrow: "+a):b!==c&&(this.Eo=c,this.Lh=!1,this.se(),po(this),this.h("toArrow",b,c))}});
v.defineProperty(X,{pz:"fromArrow"},function(){return this.On},function(a){var b=this.On;!0===a?a="Standard":!1===a&&(a="");if(b!==a){var c=oo(a);null===c?v.k("Unknown Shape.fromArrow: "+a):b!==c&&(this.On=c,this.Lh=!1,this.se(),po(this),this.h("fromArrow",b,c))}});function po(a){var b=a.g;null!==b&&b.la.ib||(a.Ut=qo,"None"!==a.Eo?(a.we=-1,a.Sj=rc):"None"!==a.On&&(a.we=0,a.Sj=new L(1-rc.x,rc.y)))}
v.defineProperty(X,{B:"spot1"},function(){return this.Ph},function(a){v.A(a,L,X,"spot1");var b=this.Ph;b.K(a)||(this.Ph=a=a.R(),this.P(),this.h("spot1",b,a))});v.defineProperty(X,{C:"spot2"},function(){return this.Qh},function(a){v.A(a,L,X,"spot2");var b=this.Qh;b.K(a)||(this.Qh=a=a.R(),this.P(),this.h("spot2",b,a))});v.defineProperty(X,{Ac:"parameter1"},function(){return this.Hr},function(a){var b=this.Hr;b!==a&&(this.Hr=a,this.se(),this.h("parameter1",b,a))});
v.defineProperty(X,{Lt:"parameter2"},function(){return this.Ir},function(a){var b=this.Ir;b!==a&&(this.Ir=a,this.se(),this.h("parameter2",b,a))});v.u(X,{Ha:"naturalBounds"},function(){if(null!==this.Ra)return this.Qc.assign(this.Ra.mb),this.Qc;var a=this.wa;return new B(0,0,a.width,a.height)});v.defineProperty(X,{Uw:"pathPattern"},function(){return this.Kr},function(a){var b=this.Kr;b!==a&&(this.Kr=a,this.pa(),this.h("pathPattern",b,a))});
v.defineProperty(X,{wK:"pathObject"},function(){return this.Uw},function(a){this.Uw=a});v.defineProperty(X,{rz:"geometryStretch"},function(){return this.Iq},function(a){var b=this.Iq;b!==a&&(v.pb(a,G,X,"geometryStretch"),this.Iq=a,this.h("geometryStretch",b,a))});v.defineProperty(X,{interval:"interval"},function(){return this.Nq},function(a){var b=this.Nq;a=Math.floor(a);b!==a&&0<=a&&(this.Nq=a,null!==this.g&&Zk(this.g),this.P(),this.h("interval",b,a))});
X.makeGeometry=function(a,b,c){var d=a.wa,e=d.width,d=d.height;void 0!==b&&!isNaN(b)&&isFinite(b)&&(e=b);void 0!==c&&!isNaN(c)&&isFinite(c)&&(d=c);isFinite(e)||(e=100);isFinite(d)||(d=100);b=null;"None"!==a.Kp?b=Gd[a.Kp]:"None"!==a.pz?b=Gd[a.pz]:(c=ko[a.Ab],"string"===typeof c&&(c=ko[c]),void 0===c&&v.k("Unknown Shape.figure: "+a.Ab),b=c(a,e,d),b.Un=e,b.Sn=d);null===b&&(c=ko.Rectangle,"function"===typeof c&&(b=c(a,e,d)));return b};
X.getFigureGenerators=function(){var a=new na("string","function"),b;for(b in ko)if(b!==b.toLowerCase()){var c=ko[b];"function"===typeof c&&a.add(b,c)}a.freeze();return a};
X.defineFigureGenerator=function(a,b){v.j(a,"string",X,"defineFigureGenerator:name");"string"===typeof b?""!==b&&ko[b]||v.k("Shape.defineFigureGenerator synonym must not be empty or None or not a defined figure name: "+b):v.j(b,"function",X,"defineFigureGenerator:func");var c=a.toLowerCase();""!==a&&"none"!==c&&a!==c||v.k("Shape.defineFigureGenerator name must not be empty or None or all-lower-case: "+a);ko[a]=b;ko[c]=a};
X.getArrowheadGeometries=function(){var a=new na("string",re),b;for(b in Gd)if(b!==b.toLowerCase()){var c=Gd[b];c instanceof re&&a.add(b,c)}a.freeze();return a};
X.defineArrowheadGeometry=function(a,b){v.j(a,"string",X,"defineArrowheadGeometry:name");var c=null;"string"===typeof b?(v.j(b,"string",X,"defineArrowheadGeometry:pathstr"),c=bf(b,!1)):(v.A(b,re,X,"defineArrowheadGeometry:pathstr"),c=b);var d=a.toLowerCase();""!==a&&"none"!==d&&a!==d||v.k("Shape.defineArrowheadGeometry name must not be empty or None or all-lower-case: "+a);Gd[a]=c;Gd[d]=a};
function $g(){G.call(this);this.me="";this.Dc="black";this.Ah="13px sans-serif";this.xd="start";this.Sq=!0;this.Ul=this.Vl=!1;this.Rk=ro;this.wm=so;this.ov=this.Ee=0;this.Nn=this.wy=this.xy=null;this.Jk=new to;this.Cq=!1;this.nf=this.Tk=this.zs=null;this.Jj=this.Ij=0;this.zi=Infinity;this.jv=0}v.Ia($g,G);v.ea("TextBlock",$g);var uo=new ta,vo=0,wo=new ta,xo=0,yo="...",zo="",Ao=(new Lc(null)).cl;$g.getEllipsis=function(){return yo};$g.setEllipsis=function(a){yo=a;wo=new ta;xo=0};
$g.prototype.cloneProtected=function(a){G.prototype.cloneProtected.call(this,a);a.me=this.me;a.Dc=this.Dc;a.Ah=this.Ah;a.xd=this.xd;a.Sq=this.Sq;a.Vl=this.Vl;a.Ul=this.Ul;a.Rk=this.Rk;a.wm=this.wm;a.Ee=this.Ee;a.ov=this.ov;a.xy=this.xy;a.wy=this.wy;a.Nn=this.Nn;a.Jk.Ys(this.Jk);a.Cq=this.Cq;a.zs=this.zs;a.Tk=this.Tk;a.nf=this.nf;a.Ij=this.Ij;a.Jj=this.Jj;a.zi=this.zi;a.jv=this.jv};
$g.prototype.toString=function(){return 22<this.me.length?'TextBlock("'+this.me.substring(0,20)+'"...)':'TextBlock("'+this.me+'")'};var Bo;$g.None=Bo=v.p($g,"None",0);var Co;$g.WrapFit=Co=v.p($g,"WrapFit",1);var so;$g.WrapDesiredSize=so=v.p($g,"WrapDesiredSize",2);var ro;$g.OverflowClip=ro=v.p($g,"OverflowClip",0);var Do;$g.OverflowEllipsis=Do=v.p($g,"OverflowEllipsis",1);$g.prototype.P=function(){G.prototype.P.call(this);this.wy=this.xy=null};
v.defineProperty($g,{font:"font"},function(){return this.Ah},function(a){var b=this.Ah;b!==a&&(this.Ah=a,this.Nn=null,this.P(),this.h("font",b,a))});$g.isValidFont=function(a){var b=Ao.font;if(a===b||"10px sans-serif"===a)return!0;Ao.font="10px sans-serif";var c;Ao.font=a;var d=Ao.font;if("10px sans-serif"!==d)return Ao.font=b,!0;Ao.font="19px serif";c=Ao.font;Ao.font=a;d=Ao.font;Ao.font=b;return d!==c};
v.defineProperty($g,{text:"text"},function(){return this.me},function(a){var b=this.me;a=null!==a&&void 0!==a?a.toString():"";b!==a&&(this.me=a,this.P(),this.h("text",b,a))});v.defineProperty($g,{textAlign:"textAlign"},function(){return this.xd},function(a){var b=this.xd;b!==a&&("start"===a||"end"===a||"left"===a||"right"===a||"center"===a?(this.xd=a,this.pa(),this.h("textAlign",b,a)):v.va(a,'"start", "end", "left", "right", or "center"',$g,"textAlign"))});
v.u($g,{Ha:"naturalBounds"},function(){if(!this.Qc.G()){var a=Eo(this,this.me,this.Jk,999999).width,b=Fo(this,a,this.Jk),c=this.wa;isNaN(c.width)||(a=c.width);isNaN(c.height)||(b=c.height);Xa(this.Qc,a,b)}return this.Qc});v.defineProperty($g,{Jw:"isMultiline"},function(){return this.Sq},function(a){var b=this.Sq;b!==a&&(this.Sq=a,this.P(),this.h("isMultiline",b,a))});
v.defineProperty($g,{UJ:"isUnderline"},function(){return this.Vl},function(a){var b=this.Vl;b!==a&&(this.Vl=a,this.pa(),this.h("isUnderline",b,a))});v.defineProperty($g,{TJ:"isStrikethrough"},function(){return this.Ul},function(a){var b=this.Ul;b!==a&&(this.Ul=a,this.pa(),this.h("isStrikethrough",b,a))});v.defineProperty($g,{rF:"wrap"},function(){return this.wm},function(a){var b=this.wm;b!==a&&(this.wm=a,this.P(),this.h("wrap",b,a))});
v.defineProperty($g,{overflow:"overflow"},function(){return this.Rk},function(a){var b=this.Rk;b!==a&&(this.Rk=a,this.P(),this.h("overflow",b,a))});v.defineProperty($g,{stroke:"stroke"},function(){return this.Dc},function(a){var b=this.Dc;b!==a&&(a instanceof ha&&a.freeze(),this.Dc=a,this.pa(),this.h("stroke",b,a))});v.u($g,{BH:"lineCount"},function(){return this.Ee});v.defineProperty($g,{lz:"editable"},function(){return this.Cq},function(a){var b=this.Cq;b!==a&&(this.Cq=a,this.h("editable",b,a))});
v.defineProperty($g,{aF:"textEditor"},function(){return this.zs},function(a){var b=this.zs;b!==a&&(a instanceof HTMLElement||v.k("textEditor must be an HTMLElement, not: "+a),this.zs=a,this.h("textEditor",b,a))});v.defineProperty($g,{mz:"errorFunction"},function(){return this.nf},function(a){var b=this.nf;b!==a&&(null!==a&&v.j(a,"function",$g,"errorFunction"),this.nf=a,this.h("errorFunction",b,a))});
$g.prototype.Wj=function(a,b){if(null!==this.Dc&&0!==this.me.length&&null!==this.Ah){var c=this.Ha.width,d=Go(this);a.textAlign=this.xd;Mm(this,a,this.Dc,!0,!1);(this.Vl||this.Ul)&&Mm(this,a,this.Dc,!1,!1);var e=this.Jk,f=0,h=!1,k=v.Mb(0,0);this.Zg.ub(k);var l=v.Mb(0,d);this.Zg.ub(l);var m=k.sf(l);v.v(k);v.v(l);k=b.scale;8>m*k*k&&(h=!0);b.lf!==a&&(h=!1);!1===b.$j("textGreeking")&&(h=!1);for(var m=this.Ij,k=this.Jj,l=this.Ee,n=0;n<l;n++){var p=e.kf[n],q=e.Ce[n];p>c&&(p=c);var f=f+m,r=q,q=a,s=f,t=c,
u=d,w=0;h?("start"===this.xd||"left"===this.xd?w=0:"end"===this.xd||"right"===this.xd?w=t-p:"center"===this.xd?w=(t-p)/2:v.k("textAlign must be start, end, left, right, or center: "+this.xd),q.fillRect(0+w,s+.25*u,p,1)):("start"===this.xd||"left"===this.xd?w=0:"end"===this.xd||"right"===this.xd?w=t:"center"===this.xd?w=t/2:v.k("textAlign must be start, end, left, right, or center: "+this.xd),q.fillText(r,0+w,s+u-.25*u),r=u/20|0,0===r&&(r=1),"end"===this.xd||"right"===this.xd?w-=p:"center"===this.xd&&
(w-=p/2),this.Vl&&(q.beginPath(),q.lineWidth=r,q.moveTo(0+w,s+u-.2*u),q.lineTo(0+w+p,s+u-.2*u),q.stroke()),this.Ul&&(q.beginPath(),q.lineWidth=r,s=s+u-u/2.2|0,0!==r%2&&(s+=.5),q.moveTo(0+w,s),q.lineTo(0+w+p,s),q.stroke()));f+=d+k}}};
$g.prototype.mp=function(a,b,c,d){this.jv=a;var e=this.Jk;e.reset();var f=0,h=0;if(isNaN(this.wa.width)){f=this.me.replace(/\r\n/g,"\n").replace(/\r/g,"\n");if(0===f.length)f=0;else if(this.Jw){for(var k=h=0,l=!1;!l;){var m=f.indexOf("\n",k);-1===m&&(m=f.length,l=!0);k=Ho(f.substr(k,m-k).replace(/^\s+|\s+$/g,""),this.Ah);k>h&&(h=k);k=m+1}f=h}else h=f.indexOf("\n",0),0<=h&&(f=f.substr(0,h)),f=k=Ho(f,this.Ah);f=Math.min(f,a/this.scale);f=Math.max(8,f)}else f=this.wa.width;null!==this.U&&(f=Math.min(f,
this.U.yf.width),f=Math.max(f,this.U.jh.width));h=Fo(this,f,e);m=h=isNaN(this.wa.height)?Math.min(h,b/this.scale):this.wa.height;if(0!==e.Se&&1!==e.Ce.length&&this.Rk===Do&&(b=this.Ah,l=this.Rk===Do?Io(b):0,k=this.Ij+this.Jj,k=Math.max(0,Go(this)+k),m=Math.min(this.JH-1,Math.max(Math.floor(m/k+.01)-1,0)),!(m+1>=e.Ce.length))){k=e.Ce[m];for(a=Math.max(1,a-l);Ho(k,b)>a&&1<k.length;)k=k.substr(0,k.length-1);k+=yo;a=Ho(k,b);e.Ce[m]=k;e.Ce=e.Ce.slice(0,m+1);e.kf[m]=a;e.kf=e.kf.slice(0,m+1);e.Mi=e.Ce.length;
e.Se=Math.max(e.Se,a);this.Ee=e.Mi}if(this.rF===Co||isNaN(this.wa.width))f=e.Se,isNaN(this.wa.width)&&(f=Math.max(8,f));f=Math.max(c,f);h=Math.max(d,h);Xa(this.Qc,f,h);Bm(this,0,0,f,h)};$g.prototype.Ni=function(a,b,c,d){Fm(this,a,b,c,d)};
function Eo(a,b,c,d){b=b.replace(/^\s+|\s+$/g,"");var e=0,f=0,h=0,k=a.Ah,f=a.Ij+a.Jj,l=Math.max(0,Go(a)+f),h=a.Rk===Do?Io(k):0;if(a.Ee>=a.zi)return new ia(0,l);if(a.wm===Bo){c.Mi=1;f=Ho(b,k);if(0===h||f<=d)return c.Se=f,c.kf.push(c.Se),c.Ce.push(b),new ia(f,l);var m=Jo(b);b=b.substr(m.length);for(var n=Jo(b),f=Ho(m+n,k);0<n.length&&f<=d;)m+=n,b=b.substr(n.length),n=Jo(b),f=Ho((m+n).replace(/^\s+|\s+$/g,""),k);m+=n.replace(/^\s+|\s+$/g,"");for(d=Math.max(1,d-h);Ho(m,k)>d&&1<m.length;)m=m.substr(0,
m.length-1);m+=yo;h=Ho(m,k);c.kf.push(h);c.Se=h;c.Ce.push(m);return new ia(h,l)}var p=0;0===b.length&&(p=1,c.kf.push(0),c.Ce.push(b));for(;0<b.length;){m=Jo(b);for(b=b.substr(m.length);Ho(m,k)>d;){n=1;f=Ho(m.substr(0,n),k);for(h=0;f<=d;)n++,h=f,f=Ho(m.substr(0,n),k);1===n?(c.kf[a.Ee+p]=f,e=Math.max(e,f)):(c.kf[a.Ee+p]=h,e=Math.max(e,h));n--;1>n&&(n=1);c.Ce[a.Ee+p]=m.substr(0,n);p++;m=m.substr(n);if(a.Ee+p>a.zi)break}n=Jo(b);for(f=Ho(m+n,k);0<n.length&&f<=d;)m+=n,b=b.substr(n.length),n=Jo(b),f=Ho((m+
n).replace(/^\s+|\s+$/g,""),k);m=m.replace(/^\s+|\s+$/g,"");if(""!==m&&(0===n.length?(c.kf.push(f),e=Math.max(e,f)):(h=Ho(m,k),c.kf.push(h),e=Math.max(e,h)),c.Ce.push(m),p++,a.Ee+p>a.zi))break}c.Mi=Math.min(a.zi,p);c.Se=Math.max(c.Se,e);return new ia(c.Se,l*c.Mi)}function Jo(a){for(var b=a.length,c=0;c<b&&" "!==a.charAt(c);)c++;for(;c<b&&" "===a.charAt(c);)c++;return c>=b?a:a.substr(0,c)}function Ho(a,b){zo!==b&&(zo=Ao.font=b);return Ao.measureText(a).width}
function Go(a){if(null!==a.Nn)return a.Nn;var b=a.Ah;zo!==b&&(zo=Ao.font=b);var c=0;void 0!==uo[b]&&5E3>vo?c=uo[b]:(c=1.3*Ao.measureText("M").width,uo[b]=c,vo++);return a.Nn=c}function Io(a){zo!==a&&(zo=Ao.font=a);var b=0;void 0!==wo[a]&&5E3>xo?b=wo[a]:(b=Ao.measureText(yo).width,wo[a]=b,xo++);return b}
function Fo(a,b,c){var d=a.me.replace(/\r\n/g,"\n").replace(/\r/g,"\n"),e=a.Ij+a.Jj,e=Math.max(0,Go(a)+e);if(0===d.length)return c.Se=0,a.Ee=1,e;if(!a.Jw){var f=d.indexOf("\n",0);0<=f&&(d=d.substr(0,f))}for(var f=0,h=a.Ee=0,k=-1,l=!1;!l;)k=d.indexOf("\n",h),-1===k&&(k=d.length,l=!0),h<=k&&(h=d.substr(h,k-h),a.wm!==Bo?(c.Mi=0,h=Eo(a,h,c,b),f+=h.height,a.Ee+=c.Mi):(Eo(a,h,c,b),f+=e,a.Ee++),a.Ee===a.zi&&(l=!0)),h=k+1;return a.ov=f}
v.defineProperty($g,{sA:"textValidation"},function(){return this.Tk},function(a){var b=this.Tk;b!==a&&(null!==a&&v.j(a,"function",$g,"textValidation"),this.Tk=a,this.h("textValidation",b,a))});v.defineProperty($g,{CK:"spacingAbove"},function(){return this.Ij},function(a){var b=this.Ij;b!==a&&(this.Ij=a,this.h("spacingAbove",b,a))});v.defineProperty($g,{DK:"spacingBelow"},function(){return this.Jj},function(a){var b=this.Jj;b!==a&&(this.Jj=a,this.h("spacingBelow",b,a))});
v.defineProperty($g,{JH:"maxLines"},function(){return this.zi},function(a){var b=this.zi;b!==a&&(a=Math.floor(a),0>=a&&v.va(a,"> 0",$g,"maxLines"),this.zi=a,this.h("maxLines",b,a),this.P())});v.u($g,{fK:"metrics"},function(){return this.Jk});function to(){this.Se=this.Mi=0;this.kf=[];this.Ce=[]}to.prototype.reset=function(){this.Se=this.Mi=0;this.kf=[];this.Ce=[]};to.prototype.Ys=function(a){this.Mi=a.Mi;this.Se=a.Se;this.kf=v.dl(a.kf);this.Ce=v.dl(a.Ce)};v.u(to,{rJ:"arrSize"},function(){return this.kf});
v.u(to,{sJ:"arrText"},function(){return this.Ce});v.u(to,{eK:"maxLineWidth"},function(){return this.Se});function kk(){G.call(this);this.Qe=null;this.ss="";this.Hj=Cd;this.Pn=Fe;this.Bo=this.Kj=this.nf=null;this.ny=!1;this.Su=!0;this.so=null}v.Ia(kk,G);v.ea("Picture",kk);kk.prototype.cloneProtected=function(a){G.prototype.cloneProtected.call(this,a);a.element=this.Qe;a.ss=this.ss;a.Hj=this.Hj.R();a.Pn=this.Pn;a.nf=this.nf;a.Kj=this.Kj;a.Su=this.Su;a.so=this.so};var Ko=new ta,Lo=0,ek=[];
function Mo(){var a=ek;if(0===a.length)for(var b=window.document.getElementsByTagName("canvas"),c=b.length,d=0;d<c;d++){var e=b[d];e.parentElement&&e.parentElement.S&&a.push(e.parentElement.S)}return a}var No;kk.clearCache=No=function(a){void 0===a&&(a="");v.j(a,"string",kk,"clearCache:url");""!==a?Ko[a]&&(delete Ko[a],Lo--):(Ko=new ta,Lo=0)};kk.prototype.toString=function(){return"Picture("+this.source+")#"+v.md(this)};
v.defineProperty(kk,{element:"element"},function(){return this.Qe},function(a){var b=this.Qe;if(b!==a){null===a||a instanceof HTMLImageElement||a instanceof HTMLVideoElement||a instanceof HTMLCanvasElement||v.k("Picture.element must be an instance of Image, Canvas, or Video, not: "+a);this.ny=a instanceof HTMLCanvasElement;this.Qe=a;if(null!==a)if(!0===a.complete||void 0===a.complete)a.Xu instanceof Event&&null!==this.nf&&this.nf(this,a.Xu),!0===a.py&&null!==this.Kj&&this.Kj(this,null),a.py=!0,this.wa.G()||
(Qk(this,!1),this.P());else{var c=this;a.DB||(a.addEventListener("load",function(b){Oo(a,b);c.wa.G()||(Qk(c,!1),c.P())}),a.addEventListener("error",function(b){Po(a,b)}),a.DB=!0)}this.h("element",b,a);this.pa()}});
v.defineProperty(kk,{source:"source"},function(){return this.ss},function(a){var b=this.ss;if(b!==a){v.j(a,"string",kk,"source");this.ss=a;var c=Ko,d=this.g;if(void 0!==c[a])var e=c[a].Ko[0].source;else{30<Lo&&(No(),c=Ko);var e=v.createElement("img"),f=this;e.addEventListener("load",function(a){Oo(e,a);f.wa.G()||(Qk(f,!1),f.P())});e.addEventListener("error",function(a){Po(e,a)});e.DB=!0;e.src=a;var h=this.so;null!==h&&(e.crossOrigin=h(this));c[a]=new Qo(e);Lo++}null!==d&&Ll(d,this);this.element=e;
null!==d&&Kl(d,this);this.P();this.pa();this.h("source",b,a)}});function Oo(a,b){a.py=!0;a.Xu=!1;for(var c=null,d=Mo(),e=d.length,f=0;f<e;f++){var h=d[f],k=h.mo.ja(a.src);if(null!==k){e=k.length;for(f=0;f<e;f++)c=k[f],c.wa.G()||(h.pC.add(c),h.ve()),null!==c.Kj&&c.Kj(c,b);h.pa()}}}function Po(a,b){a.Xu=b;for(var c=null,d=Mo(),e=d.length,f=0;f<e;f++)if(c=d[f].mo.ja(a.src),null!==c){for(var e=c.length,h=v.jb(),f=0;f<e;f++)h.push(c[f]);for(f=0;f<e;f++)c=h[f],null!==c.nf&&c.nf(c,b);v.sa(h)}}
v.defineProperty(kk,{BK:"sourceCrossOrigin"},function(){return this.so},function(a){if(this.so!==a&&(null!==a&&v.j(a,"function",kk,"sourceCrossOrigin"),this.so=a,null!==this.element)){var b=this.element.src;null===a&&"string"===typeof b?this.element.crossOrigin=null:null!==a&&(this.element.crossOrigin=a(this))}});v.defineProperty(kk,{aj:"sourceRect"},function(){return this.Hj},function(a){var b=this.Hj;b.K(a)||(v.A(a,B,kk,"sourceRect"),this.Hj=a=a.R(),this.pa(),this.h("sourceRect",b,a))});
v.defineProperty(kk,{eH:"imageStretch"},function(){return this.Pn},function(a){var b=this.Pn;b!==a&&(v.pb(a,G,kk,"imageStretch"),this.Pn=a,this.pa(),this.h("imageStretch",b,a))});v.defineProperty(kk,{mz:"errorFunction"},function(){return this.nf},function(a){var b=this.nf;b!==a&&(null!==a&&v.j(a,"function",kk,"errorFunction"),this.nf=a,this.h("errorFunction",b,a))});
v.defineProperty(kk,{LK:"successFunction"},function(){return this.Kj},function(a){var b=this.Kj;b!==a&&(null!==a&&v.j(a,"function",kk,"successFunction"),this.Kj=a,this.h("successFunction",b,a))});
kk.prototype.Wj=function(a,b){var c=this.Qe;if(null!==c){var d=c.src;null!==d&&""!==d||v.k('Element has no source ("src") attribute: '+c);if(!(c.Xu instanceof Event)&&!0===c.py){var d=this.Ha,e=0,f=0,h=this.ny,k=h?+c.width:c.naturalWidth,h=h?+c.height:c.naturalHeight;void 0===k&&c.videoWidth&&(k=c.videoWidth);void 0===h&&c.videoHeight&&(h=c.videoHeight);k=k||d.width;h=h||d.height;if(0!==k&&0!==h){var l=k,m=h;this.aj.G()&&(e=this.Hj.x,f=this.Hj.y,k=this.Hj.width,h=this.Hj.height);var n=k,p=h,q=this.Pn;
switch(q){case Ni:if(this.aj.G())break;e+=Math.max((n-d.width)/2,0);f+=Math.max((p-d.height)/2,0);k=Math.min(d.width,n);h=Math.min(d.height,p);break;case Fe:n=d.width;p=d.height;break;case Pi:case Qi:var r=0;q===Pi?(r=Math.min(d.height/p,d.width/n),n*=r,p*=r):q===Qi&&(r=Math.max(d.height/p,d.width/n),n*=r,p*=r,e+=(n-d.width)/2/n*k,f+=(p-d.height)/2/p*h,k*=1/(n/d.width),h*=1/(p/d.height),n=d.width,p=d.height)}var q=this.Ti()*b.scale,s=k*h/(n*q*p*q),r=Ko[this.source],q=null;if(void 0!==r&&16<s){2>r.Ko.length&&
(Ro(r,4,l,m),Ro(r,16,l,m));for(var l=r.Ko,m=l.length,q=l[0],t=0;t<m;t++)if(l[t].wp*l[t].wp<s)q=l[t];else break}if(!b.In){if(null===this.Bo)if(null===this.Qe)this.Bo=!1;else{l=(new Lc(null)).cl;l.drawImage(this.Qe,0,0);try{l.getImageData(0,0,1,1).data[3]&&(this.Bo=!1),this.Bo=!1}catch(u){this.Bo=!0}}if(this.Bo)return}if(b.$j("pictureRatioOptimization")&&!b.oy&&void 0!==r&&null!==q&&1!==q.wp){a.save();r=q.wp;try{a.drawImage(q.source,e/r,f/r,Math.min(q.source.width,k/r),Math.min(q.source.height,h/r),
Math.max((d.width-n)/2,0),Math.max((d.height-p)/2,0),Math.min(d.width,n),Math.min(d.height,p))}catch(w){this.Su=!1}a.restore()}else try{a.drawImage(c,e,f,k,h,Math.max((d.width-n)/2,0),Math.max((d.height-p)/2,0),Math.min(d.width,n),Math.min(d.height,p))}catch(x){this.Su=!1}}}}};v.u(kk,{Ha:"naturalBounds"},function(){return this.Qc});
kk.prototype.mp=function(a,b,c,d){var e=this.wa,f=Em(this,!0),h=this.Qe,k=this.ny;if(k||!this.vy&&h&&h.complete)this.vy=!0;null===h&&(isFinite(a)||(a=0),isFinite(b)||(b=0));isFinite(e.width)||f===Fe||f===um?(isFinite(a)||(a=this.aj.G()?this.aj.width:k?+h.width:h.naturalWidth),c=0):null!==h&&!1!==this.vy&&(a=this.aj.G()?this.aj.width:k?+h.width:h.naturalWidth);isFinite(e.height)||f===Fe||f===tm?(isFinite(b)||(b=this.aj.G()?this.aj.height:k?+h.height:h.naturalHeight),d=0):null!==h&&!1!==this.vy&&(b=
this.aj.G()?this.aj.height:k?+h.height:h.naturalHeight);isFinite(e.width)&&(a=e.width);isFinite(e.height)&&(b=e.height);e=this.yf;f=this.jh;c=Math.max(c,f.width);d=Math.max(d,f.height);a=Math.min(e.width,a);b=Math.min(e.height,b);a=Math.max(c,a);b=Math.max(d,b);null===h||h.complete||(isFinite(a)||(a=0),isFinite(b)||(b=0));Xa(this.Qc,a,b);Bm(this,0,0,a,b)};kk.prototype.Ni=function(a,b,c,d){Fm(this,a,b,c,d)};function Qo(a){this.Ko=[new So(a,1)]}
function Ro(a,b,c,d){var e=new Lc(null),f=e.cl,h=1/b;e.width=c/b;e.height=d/b;b=new So(e.zd,b);c=a.Ko[a.Ko.length-1];f.setTransform(h*c.wp,0,0,h*c.wp,0,0);f.drawImage(c.source,0,0);a.Ko.push(b)}function So(a,b){this.source=a;this.wp=b}function ma(){this.o=new re;this.Rb=null}g=ma.prototype;g.reset=function(){this.o=new re;this.Rb=null};
function N(a,b,c,d,e,f){null===a.o&&v.k("StreamGeometryContext has been closed");void 0!==e&&!0===e?(null===a.Rb&&v.k("Need to call beginFigure first"),d=new wf(hf),d.I=b,d.J=c,a.Rb.sb.add(d)):(a.Rb=new Ee,a.Rb.za=b,a.Rb.xa=c,a.Rb.tt=d,a.o.Ub.add(a.Rb));void 0!==f&&(a.Rb.Vn=f)}function P(a){null===a.o&&v.k("StreamGeometryContext has been closed");null===a.Rb&&v.k("Need to call beginFigure first");var b=a.Rb.sb.length;0<b&&a.Rb.sb.da(b-1).close()}
function ef(a){null===a.o&&v.k("StreamGeometryContext has been closed");null===a.Rb&&v.k("Need to call beginFigure first");0<a.Rb.sb.length&&(a.Rb.tt=!0)}g.Ya=function(a){null===this.o&&v.k("StreamGeometryContext has been closed");null===this.Rb&&v.k("Need to call beginFigure first");this.Rb.vl=a};g.moveTo=function(a,b,c){void 0===c&&(c=!1);null===this.o&&v.k("StreamGeometryContext has been closed");null===this.Rb&&v.k("Need to call beginFigure first");var d=new wf(hf);d.I=a;d.J=b;c&&d.close();this.Rb.sb.add(d)};
g.lineTo=function(a,b,c){void 0===c&&(c=!1);null===this.o&&v.k("StreamGeometryContext has been closed");null===this.Rb&&v.k("Need to call beginFigure first");var d=new wf($e);d.I=a;d.J=b;c&&d.close();this.Rb.sb.add(d)};function O(a,b,c,d,e,f,h,k){void 0===k&&(k=!1);null===a.o&&v.k("StreamGeometryContext has been closed");null===a.Rb&&v.k("Need to call beginFigure first");var l=new wf(jf);l.qc=b;l.Kc=c;l.lh=d;l.mh=e;l.I=f;l.J=h;k&&l.close();a.Rb.sb.add(l)}
function cf(a,b,c,d,e){var f;void 0===f&&(f=!1);null===a.o&&v.k("StreamGeometryContext has been closed");null===a.Rb&&v.k("Need to call beginFigure first");var h=new wf(kf);h.qc=b;h.Kc=c;h.I=d;h.J=e;f&&h.close();a.Rb.sb.add(h)}g.arcTo=function(a,b,c,d,e,f,h){void 0===f&&(f=0);void 0===h&&(h=!1);null===this.o&&v.k("StreamGeometryContext has been closed");null===this.Rb&&v.k("Need to call beginFigure first");var k=new wf(lf);k.ye=a;k.Bf=b;k.na=c;k.ua=d;k.radiusX=e;k.radiusY=0!==f?f:e;h&&k.close();this.Rb.sb.add(k)};
function df(a,b,c,d,e,f,h,k){var l;void 0===l&&(l=!1);null===a.o&&v.k("StreamGeometryContext has been closed");null===a.Rb&&v.k("Need to call beginFigure first");b=new wf(mf,h,k,b,c,d,e,f);l&&b.close();a.Rb.sb.add(b)}function To(a){a=Uo(a);var b=v.jb();b[0]=a[0];for(var c=1,d=1;d<a.length;)b[c]=a[d],b[c+1]=a[d],b[c+2]=a[d+1],d+=2,c+=3;v.sa(a);return b}
function Uo(a){var b=Vo(a),c=v.jb(),d=Math.floor(b.length/2),e=b.length-1;a=0===a%2?2:1;for(var f=0;f<e;f++){var h=b[f],k=b[f+1],l=b[(d+f-1)%e],m=b[(d+f+a)%e];c[2*f]=h;c[2*f+1]=$d(h.x,h.y,l.x,l.y,k.x,k.y,m.x,m.y,new y)}c[c.length]=c[0];v.sa(b);return c}function Vo(a){for(var b=v.jb(),c=1.5*Math.PI,d=0,e=0;e<a;e++)d=2*Math.PI/a*e+c,b[e]=new y(.5+.5*Math.cos(d),.5+.5*Math.sin(d));b.push(b[0]);return b}
var ko={None:"Rectangle",Rectangle:function(a,b,c){a=new re;a.type=He;a.za=0;a.xa=0;a.I=b;a.J=c;return a},Square:function(a,b,c){a=new re;a.Od=Pi;a.type=He;a.za=0;a.xa=0;a.I=Math.min(b,c);a.J=Math.min(b,c);return a},Ellipse:function(a,b,c){a=new re;a.type=Ie;a.za=0;a.xa=0;a.I=b;a.J=c;a.B=Dd;a.C=Ed;return a},Circle:function(a,b,c){a=new re;a.Od=Pi;a.type=Ie;a.za=0;a.xa=0;a.I=Math.min(b,c);a.J=Math.min(b,c);a.B=Dd;a.C=Ed;return a},Connector:"Ellipse",TriangleRight:function(a,b,c){a=new re;var d=new Ee,
e=new wf;e.I=b;e.J=.5*c;d.sb.add(e);b=new wf;b.I=0;b.J=c;d.sb.add(b.close());a.Ub.add(d);a.B=new L(0,.25);a.C=new L(.5,.75);return a},TriangleDown:function(a,b,c){a=new re;var d=new Ee,e=new wf;e.I=b;e.J=0;d.sb.add(e);e=new wf;e.I=.5*b;e.J=c;d.sb.add(e.close());a.Ub.add(d);a.B=new L(.25,0);a.C=new L(.75,.5);return a},TriangleLeft:function(a,b,c){a=new re;var d=new Ee;d.za=b;d.xa=c;var e=new wf;e.I=0;e.J=.5*c;d.sb.add(e);c=new wf;c.I=b;c.J=0;d.sb.add(c.close());a.Ub.add(d);a.B=new L(.5,.25);a.C=new L(1,
.75);return a},TriangleUp:function(a,b,c){a=new re;var d=new Ee;d.za=b;d.xa=c;var e=new wf;e.I=0;e.J=c;d.sb.add(e);c=new wf;c.I=.5*b;c.J=0;d.sb.add(c.close());a.Ub.add(d);a.B=new L(.25,.5);a.C=new L(.75,1);return a},Line1:function(a,b,c){a=new re;a.type=Ge;a.za=0;a.xa=0;a.I=b;a.J=c;return a},Line2:function(a,b,c){a=new re;a.type=Ge;a.za=b;a.xa=0;a.I=0;a.J=c;return a},MinusLine:"LineH",LineH:function(a,b,c){a=new re;a.type=Ge;a.za=0;a.xa=c/2;a.I=b;a.J=c/2;return a},LineV:function(a,b,c){a=new re;a.type=
Ge;a.za=b/2;a.xa=0;a.I=b/2;a.J=c;return a},BarH:"Rectangle",BarV:"Rectangle",Curve1:function(a,b,c){a=v.s();N(a,0,0,!1);O(a,Wc*b,0,1*b,(1-Wc)*c,b,c);b=a.o;v.q(a);return b},Curve2:function(a,b,c){a=v.s();N(a,0,0,!1);O(a,0,Wc*c,(1-Wc)*b,c,b,c);b=a.o;v.q(a);return b},Curve3:function(a,b,c){a=v.s();N(a,1*b,0,!1);O(a,1*b,Wc*c,Wc*b,1*c,0,1*c);b=a.o;v.q(a);return b},Curve4:function(a,b,c){a=v.s();N(a,1*b,0,!1);O(a,(1-Wc)*b,0,0,(1-Wc)*c,0,1*c);b=a.o;v.q(a);return b},Alternative:"Triangle",Merge:"Triangle",
Triangle:function(a,b,c){a=v.s();N(a,.5*b,0*c,!0);a.lineTo(0*b,1*c);a.lineTo(1*b,1*c,!0);b=a.o;b.B=new L(.25,.5);b.C=new L(.75,1);v.q(a);return b},Decision:"Diamond",Diamond:function(a,b,c){a=v.s();N(a,.5*b,0,!0);a.lineTo(0,.5*c);a.lineTo(.5*b,1*c);a.lineTo(1*b,.5*c,!0);b=a.o;b.B=new L(.25,.25);b.C=new L(.75,.75);v.q(a);return b},Pentagon:function(a,b,c){var d=Vo(5);a=v.s();N(a,d[0].x*b,d[0].y*c,!0);for(var e=1;5>e;e++)a.lineTo(d[e].x*b,d[e].y*c);v.sa(d);P(a);b=a.o;b.B=new L(.2,.22);b.C=new L(.8,
.9);v.q(a);return b},DataTransmission:"Hexagon",Hexagon:function(a,b,c){var d=Vo(6);a=v.s();N(a,d[0].x*b,d[0].y*c,!0);for(var e=1;6>e;e++)a.lineTo(d[e].x*b,d[e].y*c);v.sa(d);P(a);b=a.o;b.B=new L(.07,.25);b.C=new L(.93,.75);v.q(a);return b},Heptagon:function(a,b,c){var d=Vo(7);a=v.s();N(a,d[0].x*b,d[0].y*c,!0);for(var e=1;7>e;e++)a.lineTo(d[e].x*b,d[e].y*c);v.sa(d);P(a);b=a.o;b.B=new L(.2,.15);b.C=new L(.8,.85);v.q(a);return b},Octagon:function(a,b,c){var d=Vo(8);a=v.s();N(a,d[0].x*b,d[0].y*c,!0);
for(var e=1;8>e;e++)a.lineTo(d[e].x*b,d[e].y*c);v.sa(d);P(a);b=a.o;b.B=new L(.15,.15);b.C=new L(.85,.85);v.q(a);return b},Nonagon:function(a,b,c){var d=Vo(9);a=v.s();N(a,d[0].x*b,d[0].y*c,!0);for(var e=1;9>e;e++)a.lineTo(d[e].x*b,d[e].y*c);v.sa(d);P(a);b=a.o;b.B=new L(.17,.13);b.C=new L(.82,.82);v.q(a);return b},Decagon:function(a,b,c){var d=Vo(10);a=v.s();N(a,d[0].x*b,d[0].y*c,!0);for(var e=1;10>e;e++)a.lineTo(d[e].x*b,d[e].y*c);v.sa(d);P(a);b=a.o;b.B=new L(.16,.16);b.C=new L(.84,.84);v.q(a);return b},
Dodecagon:function(a,b,c){var d=Vo(12);a=v.s();N(a,d[0].x*b,d[0].y*c,!0);for(var e=1;12>e;e++)a.lineTo(d[e].x*b,d[e].y*c);v.sa(d);P(a);b=a.o;b.B=new L(.16,.16);b.C=new L(.84,.84);v.q(a);return b},FivePointedStar:function(a,b,c){var d=Uo(5);a=v.s();N(a,d[0].x*b,d[0].y*c,!0);for(var e=1;10>e;e++)a.lineTo(d[e].x*b,d[e].y*c);v.sa(d);P(a);b=a.o;b.B=new L(.312,.383);b.C=new L(.693,.765);v.q(a);return b},SixPointedStar:function(a,b,c){var d=Uo(6);a=v.s();N(a,d[0].x*b,d[0].y*c,!0);for(var e=1;12>e;e++)a.lineTo(d[e].x*
b,d[e].y*c);v.sa(d);P(a);b=a.o;b.B=new L(.17,.251);b.C=new L(.833,.755);v.q(a);return b},SevenPointedStar:function(a,b,c){var d=Uo(7);a=v.s();N(a,d[0].x*b,d[0].y*c,!0);for(var e=1;14>e;e++)a.lineTo(d[e].x*b,d[e].y*c);v.sa(d);P(a);b=a.o;b.B=new L(.363,.361);b.C=new L(.641,.709);v.q(a);return b},EightPointedStar:function(a,b,c){var d=Uo(8);a=v.s();N(a,d[0].x*b,d[0].y*c,!0);for(var e=1;16>e;e++)a.lineTo(d[e].x*b,d[e].y*c);v.sa(d);P(a);b=a.o;b.B=new L(.252,.255);b.C=new L(.75,.75);v.q(a);return b},NinePointedStar:function(a,
b,c){var d=Uo(9);a=v.s();N(a,d[0].x*b,d[0].y*c,!0);for(var e=1;18>e;e++)a.lineTo(d[e].x*b,d[e].y*c);v.sa(d);P(a);b=a.o;b.B=new L(.355,.361);b.C=new L(.645,.651);v.q(a);return b},TenPointedStar:function(a,b,c){var d=Uo(10);a=v.s();N(a,d[0].x*b,d[0].y*c,!0);for(var e=1;20>e;e++)a.lineTo(d[e].x*b,d[e].y*c);v.sa(d);P(a);b=a.o;b.B=new L(.281,.261);b.C=new L(.723,.748);v.q(a);return b},FivePointedBurst:function(a,b,c){var d=To(5);a=v.s();N(a,d[0].x*b,d[0].y*c,!0);for(var e=1;e<d.length;e+=3)O(a,d[e].x*
b,d[e].y*c,d[e+1].x*b,d[e+1].y*c,d[e+2].x*b,d[e+2].y*c);v.sa(d);P(a);b=a.o;b.B=new L(.312,.383);b.C=new L(.693,.765);v.q(a);return b},SixPointedBurst:function(a,b,c){var d=To(6);a=v.s();N(a,d[0].x*b,d[0].y*c,!0);for(var e=1;e<d.length;e+=3)O(a,d[e].x*b,d[e].y*c,d[e+1].x*b,d[e+1].y*c,d[e+2].x*b,d[e+2].y*c);v.sa(d);P(a);b=a.o;b.B=new L(.17,.251);b.C=new L(.833,.755);v.q(a);return b},SevenPointedBurst:function(a,b,c){var d=To(7);a=v.s();N(a,d[0].x*b,d[0].y*c,!0);for(var e=1;e<d.length;e+=3)O(a,d[e].x*
b,d[e].y*c,d[e+1].x*b,d[e+1].y*c,d[e+2].x*b,d[e+2].y*c);v.sa(d);P(a);b=a.o;b.B=new L(.363,.361);b.C=new L(.641,.709);v.q(a);return b},EightPointedBurst:function(a,b,c){var d=To(8);a=v.s();N(a,d[0].x*b,d[0].y*c,!0);for(var e=1;e<d.length;e+=3)O(a,d[e].x*b,d[e].y*c,d[e+1].x*b,d[e+1].y*c,d[e+2].x*b,d[e+2].y*c);v.sa(d);P(a);b=a.o;b.B=new L(.252,.255);b.C=new L(.75,.75);v.q(a);return b},NinePointedBurst:function(a,b,c){var d=To(9);a=v.s();N(a,d[0].x*b,d[0].y*c,!0);for(var e=1;e<d.length;e+=3)O(a,d[e].x*
b,d[e].y*c,d[e+1].x*b,d[e+1].y*c,d[e+2].x*b,d[e+2].y*c);v.sa(d);P(a);b=a.o;b.B=new L(.355,.361);b.C=new L(.645,.651);v.q(a);return b},TenPointedBurst:function(a,b,c){var d=To(10);a=v.s();N(a,d[0].x*b,d[0].y*c,!0);for(var e=1;e<d.length;e+=3)O(a,d[e].x*b,d[e].y*c,d[e+1].x*b,d[e+1].y*c,d[e+2].x*b,d[e+2].y*c);v.sa(d);P(a);b=a.o;b.B=new L(.281,.261);b.C=new L(.723,.748);v.q(a);return b},Cloud:function(a,b,c){a=v.s();N(a,.08034461*b,.1944299*c,!0);O(a,-.09239631*b,.07836421*c,.1406031*b,-.0542823*c,.2008615*
b,.05349299*c);O(a,.2450511*b,-.00697547*c,.3776197*b,-.01112067*c,.4338609*b,.074219*c);O(a,.4539471*b,0,.6066018*b,-.02526587*c,.6558228*b,.07004196*c);O(a,.6914277*b,-.01904177*c,.8921095*b,-.01220843*c,.8921095*b,.08370865*c);O(a,1.036446*b,.04105738*c,1.020377*b,.3022052*c,.9147671*b,.3194596*c);O(a,1.04448*b,.360238*c,.992256*b,.5219009*c,.9082935*b,.562044*c);O(a,1.032337*b,.5771781*c,1.018411*b,.8120651*c,.9212406*b,.8217117*c);O(a,1.028411*b,.9571472*c,.8556702*b,1.052487*c,.7592566*b,.9156953*
c);O(a,.7431877*b,1.009325*c,.5624123*b,1.021761*c,.5101666*b,.9310455*c);O(a,.4820677*b,1.031761*c,.3030112*b,1.002796*c,.2609328*b,.9344623*c);O(a,.2329994*b,1.01518*c,.03213784*b,1.01518*c,.08034461*b,.870098*c);O(a,-.02812061*b,.9032597*c,-.01205169*b,.6835638*c,.06829292*b,.6545475*c);O(a,-.01812061*b,.6089503*c,-.00606892*b,.4555777*c,.06427569*b,.4265613*c);O(a,-.01606892*b,.3892545*c,-.01205169*b,.1944299*c,.08034461*b,.1944299*c);P(a);b=a.o;b.B=new L(.1,.1);b.C=new L(.9,.9);v.q(a);return b},
Gate:"Crescent",Crescent:function(a,b,c){a=v.s();N(a,0,0,!0);O(a,1*b,0,1*b,1*c,0,1*c);O(a,.5*b,.75*c,.5*b,.25*c,0,0);P(a);b=a.o;b.B=new L(.511,.19);b.C=new L(.776,.76);v.q(a);return b},FramedRectangle:function(a,b,c){var d=v.s(),e=a?a.Ac:NaN;a=a?a.Lt:NaN;isNaN(e)&&(e=.1);isNaN(a)&&(a=.1);N(d,0,0,!0);d.lineTo(1*b,0);d.lineTo(1*b,1*c);d.lineTo(0,1*c,!0);N(d,e*b,a*c,!1,!0);d.lineTo(e*b,(1-a)*c);d.lineTo((1-e)*b,(1-a)*c);d.lineTo((1-e)*b,a*c,!0);b=d.o;b.B=new L(e,a);b.C=new L(1-e,1-a);v.q(d);return b},
Delay:"HalfEllipse",HalfEllipse:function(a,b,c){a=v.s();N(a,0,0,!0);O(a,Wc*b,0,1*b,(.5-Wc/2)*c,1*b,.5*c);O(a,1*b,(.5+Wc/2)*c,Wc*b,1*c,0,1*c);P(a);b=a.o;b.B=new L(0,.2);b.C=new L(.75,.8);v.q(a);return b},Heart:function(a,b,c){a=v.s();N(a,.5*b,1*c,!0);O(a,.1*b,.8*c,0,.5*c,0*b,.3*c);O(a,0*b,0,.45*b,0,.5*b,.3*c);O(a,.55*b,0,1*b,0,1*b,.3*c);O(a,b,.5*c,.9*b,.8*c,.5*b,1*c);P(a);b=a.o;b.B=new L(.15,.29);b.C=new L(.86,.68);v.q(a);return b},Spade:function(a,b,c){a=v.s();N(a,.5*b,0,!0);a.lineTo(.51*b,.01*c);
O(a,.6*b,.2*c,b,.25*c,b,.5*c);O(a,b,.8*c,.6*b,.8*c,.55*b,.7*c);O(a,.5*b,.75*c,.55*b,.95*c,.75*b,c);a.lineTo(.25*b,c);O(a,.45*b,.95*c,.5*b,.75*c,.45*b,.7*c);O(a,.4*b,.8*c,0,.8*c,0,.5*c);O(a,0,.25*c,.4*b,.2*c,.49*b,.01*c);P(a);b=a.o;b.B=new L(.19,.26);b.C=new L(.8,.68);v.q(a);return b},Club:function(a,b,c){a=v.s();N(a,.4*b,.6*c,!0);O(a,.5*b,.75*c,.45*b,.95*c,.15*b,1*c);a.lineTo(.85*b,c);O(a,.55*b,.95*c,.5*b,.75*c,.6*b,.6*c);var d=.2,e=.3,f=0,h=4*(Math.SQRT2-1)/3*d;O(a,(.5-d+e)*b,(.5+h+f)*c,(.5-h+e)*
b,(.5+d+f)*c,(.5+e)*b,(.5+d+f)*c);O(a,(.5+h+e)*b,(.5+d+f)*c,(.5+d+e)*b,(.5+h+f)*c,(.5+d+e)*b,(.5+f)*c);O(a,(.5+d+e)*b,(.5-h+f)*c,(.5+h+e)*b,(.5-d+f)*c,(.5+e)*b,(.5-d+f)*c);O(a,(.5-h+e)*b,(.5-d+f)*c,(.5-d+e+.05)*b,(.5-h+f-.02)*c,.65*b,.36771243*c);d=.2;e=0;f=-.3;h=4*(Math.SQRT2-1)/3*d;O(a,(.5+h+e)*b,(.5+d+f)*c,(.5+d+e)*b,(.5+h+f)*c,(.5+d+e)*b,(.5+f)*c);O(a,(.5+d+e)*b,(.5-h+f)*c,(.5+h+e)*b,(.5-d+f)*c,(.5+e)*b,(.5-d+f)*c);O(a,(.5-h+e)*b,(.5-d+f)*c,(.5-d+e)*b,(.5-h+f)*c,(.5-d+e)*b,(.5+f)*c);O(a,(.5-d+
e)*b,(.5+h+f)*c,(.5-h+e)*b,(.5+d+f)*c,.35*b,.36771243*c);d=.2;e=-.3;f=0;h=4*(Math.SQRT2-1)/3*d;O(a,(.5+d+e-.05)*b,(.5-h+f-.02)*c,(.5+h+e)*b,(.5-d+f)*c,(.5+e)*b,(.5-d+f)*c);O(a,(.5-h+e)*b,(.5-d+f)*c,(.5-d+e)*b,(.5-h+f)*c,(.5-d+e)*b,(.5+f)*c);O(a,(.5-d+e)*b,(.5+h+f)*c,(.5-h+e)*b,(.5+d+f)*c,(.5+e)*b,(.5+d+f)*c);O(a,(.5+h+e)*b,(.5+d+f)*c,(.5+d+e)*b,(.5+h+f)*c,.4*b,.6*c);P(a);b=a.o;b.B=new L(.06,.39);b.C=new L(.93,.58);v.q(a);return b},Ring:function(a,b,c){a=v.s();var d=4*(Math.SQRT2-1)/3*.5;N(a,b,.5*
c,!0);O(a,b,(.5-d)*c,(.5+d)*b,0,.5*b,0);O(a,(.5-d)*b,0,0,(.5-d)*c,0,.5*c);O(a,0,(.5+d)*c,(.5-d)*b,c,.5*b,c);O(a,(.5+d)*b,c,b,(.5+d)*c,b,.5*c);d=4*(Math.SQRT2-1)/3*.4;N(a,.5*b,.1*c,!0,!0);O(a,(.5+d)*b,.1*c,.9*b,(.5-d)*c,.9*b,.5*c);O(a,.9*b,(.5+d)*c,(.5+d)*b,.9*c,.5*b,.9*c);O(a,(.5-d)*b,.9*c,.1*b,(.5+d)*c,.1*b,.5*c);O(a,.1*b,(.5-d)*c,(.5-d)*b,.1*c,.5*b,.1*c);b=a.o;b.B=new L(.146,.146);b.C=new L(.853,.853);b.Od=Pi;v.q(a);return b},YinYang:function(a,b,c){var d=.5;a=v.s();d=.5;N(a,.5*b,0,!0);a.arcTo(270,
180,.5*b,.5*b,.5*b);O(a,1*b,d*c,0,d*c,d*b,0,!0);var d=.1,e=.25;N(a,(.5+d)*b,e*c,!0,!0);a.arcTo(0,-360,.5*b,c*e,d*b);P(a);N(a,.5*b,0,!1);a.arcTo(270,-180,.5*b,.5*b,.5*b);a.Ya(!1);e=.75;N(a,(.5+d)*b,e*c,!0);a.arcTo(0,360,.5*b,c*e,d*b);P(a);b=a.o;b.Od=Pi;v.q(a);return b},Peace:function(a,b,c){a=v.s();var d=4*(Math.SQRT2-1)/3*.5;N(a,b,.5*c,!0);O(a,b,(.5-d)*c,(.5+d)*b,0,.5*b,0);O(a,(.5-d)*b,0,0,(.5-d)*c,0,.5*c);O(a,0,(.5+d)*c,(.5-d)*b,c,.5*b,c);O(a,(.5+d)*b,c,b,(.5+d)*c,b,.5*c);d=4*(Math.SQRT2-1)/3*.4;
N(a,.5*b,.1*c,!0,!0);O(a,(.5+d)*b,.1*c,.9*b,(.5-d)*c,.9*b,.5*c);O(a,.9*b,(.5+d)*c,(.5+d)*b,.9*c,.5*b,.9*c);O(a,(.5-d)*b,.9*c,.1*b,(.5+d)*c,.1*b,.5*c);O(a,.1*b,(.5-d)*c,(.5-d)*b,.1*c,.5*b,.1*c);var d=.07,e=0,f=-.707*.11,h=4*(Math.SQRT2-1)/3*d;N(a,(.5+d+e)*b,(.5+f)*c,!0);O(a,(.5+d+e)*b,(.5-h+f)*c,(.5+h+e)*b,(.5-d+f)*c,(.5+e)*b,(.5-d+f)*c);O(a,(.5-h+e)*b,(.5-d+f)*c,(.5-d+e)*b,(.5-h+f)*c,(.5-d+e)*b,(.5+f)*c);O(a,(.5-d+e)*b,(.5+h+f)*c,(.5-h+e)*b,(.5+d+f)*c,(.5+e)*b,(.5+d+f)*c);O(a,(.5+h+e)*b,(.5+d+f)*
c,(.5+d+e)*b,(.5+h+f)*c,(.5+d+e)*b,(.5+f)*c);d=.07;e=-.707*.11;f=.707*.11;h=4*(Math.SQRT2-1)/3*d;N(a,(.5+d+e)*b,(.5+f)*c,!0);O(a,(.5+d+e)*b,(.5-h+f)*c,(.5+h+e)*b,(.5-d+f)*c,(.5+e)*b,(.5-d+f)*c);O(a,(.5-h+e)*b,(.5-d+f)*c,(.5-d+e)*b,(.5-h+f)*c,(.5-d+e)*b,(.5+f)*c);O(a,(.5-d+e)*b,(.5+h+f)*c,(.5-h+e)*b,(.5+d+f)*c,(.5+e)*b,(.5+d+f)*c);O(a,(.5+h+e)*b,(.5+d+f)*c,(.5+d+e)*b,(.5+h+f)*c,(.5+d+e)*b,(.5+f)*c);d=.07;e=.707*.11;f=.707*.11;h=4*(Math.SQRT2-1)/3*d;N(a,(.5+d+e)*b,(.5+f)*c,!0);O(a,(.5+d+e)*b,(.5-h+
f)*c,(.5+h+e)*b,(.5-d+f)*c,(.5+e)*b,(.5-d+f)*c);O(a,(.5-h+e)*b,(.5-d+f)*c,(.5-d+e)*b,(.5-h+f)*c,(.5-d+e)*b,(.5+f)*c);O(a,(.5-d+e)*b,(.5+h+f)*c,(.5-h+e)*b,(.5+d+f)*c,(.5+e)*b,(.5+d+f)*c);O(a,(.5+h+e)*b,(.5+d+f)*c,(.5+d+e)*b,(.5+h+f)*c,(.5+d+e)*b,(.5+f)*c);b=a.o;b.B=new L(.146,.146);b.C=new L(.853,.853);b.Od=Pi;v.q(a);return b},NotAllowed:function(a,b,c){var d=.5*Wc,e=.5;a=v.s();N(a,.5*b,(.5-e)*c,!0);O(a,(.5-d)*b,(.5-e)*c,(.5-e)*b,(.5-d)*c,(.5-e)*b,.5*c);O(a,(.5-e)*b,(.5+d)*c,(.5-d)*b,(.5+e)*c,.5*b,
(.5+e)*c);O(a,(.5+d)*b,(.5+e)*c,(.5+e)*b,(.5+d)*c,(.5+e)*b,.5*c);O(a,(.5+e)*b,(.5-d)*c,(.5+d)*b,(.5-e)*c,.5*b,(.5-e)*c);var e=.4,d=.4*Wc,f=v.L(),h=v.L(),k=v.L(),l=v.L();Sd(.5,.5-e,.5+d,.5-e,.5+e,.5-d,.5+e,.5,.42,f,h,k,l,l);var m=v.L(),n=v.L(),p=v.L();Sd(.5,.5-e,.5+d,.5-e,.5+e,.5-d,.5+e,.5,.58,l,l,p,m,n);var q=v.L(),r=v.L(),s=v.L();Sd(.5,.5+e,.5-d,.5+e,.5-e,.5+d,.5-e,.5,.42,q,r,s,l,l);var t=v.L(),u=v.L(),w=v.L();Sd(.5,.5+e,.5-d,.5+e,.5-e,.5+d,.5-e,.5,.58,l,l,w,t,u);N(a,w.x*b,w.y*c,!0,!0);O(a,t.x*b,
t.y*c,u.x*b,u.y*c,(.5-e)*b,.5*c);O(a,(.5-e)*b,(.5-d)*c,(.5-d)*b,(.5-e)*c,.5*b,(.5-e)*c);O(a,f.x*b,f.y*c,h.x*b,h.y*c,k.x*b,k.y*c);a.lineTo(w.x*b,w.y*c);P(a);N(a,s.x*b,s.y*c,!0,!0);a.lineTo(p.x*b,p.y*c);O(a,m.x*b,m.y*c,n.x*b,n.y*c,(.5+e)*b,.5*c);O(a,(.5+e)*b,(.5+d)*c,(.5+d)*b,(.5+e)*c,.5*b,(.5+e)*c);O(a,q.x*b,q.y*c,r.x*b,r.y*c,s.x*b,s.y*c);P(a);v.v(f);v.v(h);v.v(k);v.v(l);v.v(m);v.v(n);v.v(p);v.v(q);v.v(r);v.v(s);v.v(t);v.v(u);v.v(w);b=a.o;v.q(a);b.Od=Pi;return b},Fragile:function(a,b,c){a=v.s();N(a,
0,0,!0);a.lineTo(.25*b,0);a.lineTo(.2*b,.15*c);a.lineTo(.3*b,.25*c);a.lineTo(.29*b,.33*c);a.lineTo(.35*b,.25*c);a.lineTo(.3*b,.15*c);a.lineTo(.4*b,0);a.lineTo(1*b,0);O(a,1*b,.25*c,.75*b,.5*c,.55*b,.5*c);a.lineTo(.55*b,.9*c);a.lineTo(.7*b,.9*c);a.lineTo(.7*b,1*c);a.lineTo(.3*b,1*c);a.lineTo(.3*b,.9*c);a.lineTo(.45*b,.9*c);a.lineTo(.45*b,.5*c);O(a,.25*b,.5*c,0,.25*c,0,0);P(a);b=a.o;b.B=new L(.25,0);b.C=new L(.75,.4);v.q(a);return b},HourGlass:function(a,b,c){a=v.s();N(a,.65*b,.5*c,!0);a.lineTo(1*b,
1*c);a.lineTo(0,1*c);a.lineTo(.35*b,.5*c);a.lineTo(0,0);a.lineTo(1*b,0);P(a);b=a.o;v.q(a);return b},Lightning:function(a,b,c){a=v.s();N(a,0*b,.55*c,!0);a.lineTo(.75*b,0);a.lineTo(.25*b,.45*c);a.lineTo(.9*b,.48*c);a.lineTo(.4*b,1*c);a.lineTo(.65*b,.55*c);P(a);b=a.o;v.q(a);return b},Parallelogram1:function(a,b,c){a=a?a.Ac:NaN;isNaN(a)&&(a=.1);var d=v.s();N(d,a*b,0,!0);d.lineTo(1*b,0);d.lineTo((1-a)*b,1*c);d.lineTo(0,1*c);P(d);b=d.o;b.B=new L(a,0);b.C=new L(1-a,1);v.q(d);return b},Input:"Output",Output:function(a,
b,c){a=v.s();N(a,0,1*c,!0);a.lineTo(.1*b,0);a.lineTo(1*b,0);a.lineTo(.9*b,1*c);P(a);b=a.o;b.B=new L(.1,0);b.C=new L(.9,1);v.q(a);return b},Parallelogram2:function(a,b,c){a=a?a.Ac:NaN;isNaN(a)&&(a=.25);var d=v.s();N(d,a*b,0,!0);d.lineTo(1*b,0);d.lineTo((1-a)*b,1*c);d.lineTo(0,1*c);P(d);b=d.o;b.B=new L(a,0);b.C=new L(1-a,1);v.q(d);return b},ThickCross:function(a,b,c){a=a?a.Ac:NaN;isNaN(a)&&(a=.25);var d=v.s();N(d,(.5-a/2)*b,0,!0);d.lineTo((.5+a/2)*b,0);d.lineTo((.5+a/2)*b,(.5-a/2)*c);d.lineTo(1*b,(.5-
a/2)*c);d.lineTo(1*b,(.5+a/2)*c);d.lineTo((.5+a/2)*b,(.5+a/2)*c);d.lineTo((.5+a/2)*b,1*c);d.lineTo((.5-a/2)*b,1*c);d.lineTo((.5-a/2)*b,(.5+a/2)*c);d.lineTo(0,(.5+a/2)*c);d.lineTo(0,(.5-a/2)*c);d.lineTo((.5-a/2)*b,(.5-a/2)*c);P(d);b=d.o;b.B=new L(.5-a/2,.5-a/2);b.C=new L(.5+a/2,.5+a/2);v.q(d);return b},ThickX:function(a,b,c){a=.25/Math.SQRT2;var d=v.s();N(d,.3*b,0,!0);d.lineTo(.5*b,.2*c);d.lineTo(.7*b,0);d.lineTo(1*b,.3*c);d.lineTo(.8*b,.5*c);d.lineTo(1*b,.7*c);d.lineTo(.7*b,1*c);d.lineTo(.5*b,.8*
c);d.lineTo(.3*b,1*c);d.lineTo(0,.7*c);d.lineTo(.2*b,.5*c);d.lineTo(0,.3*c);P(d);b=d.o;b.B=new L(.5-a,.5-a);b.C=new L(.5+a,.5+a);v.q(d);return b},ThinCross:function(a,b,c){var d=a?a.Ac:NaN;isNaN(d)&&(d=.1);a=v.s();N(a,(.5-d/2)*b,0,!0);a.lineTo((.5+d/2)*b,0);a.lineTo((.5+d/2)*b,(.5-d/2)*c);a.lineTo(1*b,(.5-d/2)*c);a.lineTo(1*b,(.5+d/2)*c);a.lineTo((.5+d/2)*b,(.5+d/2)*c);a.lineTo((.5+d/2)*b,1*c);a.lineTo((.5-d/2)*b,1*c);a.lineTo((.5-d/2)*b,(.5+d/2)*c);a.lineTo(0,(.5+d/2)*c);a.lineTo(0,(.5-d/2)*c);a.lineTo((.5-
d/2)*b,(.5-d/2)*c);P(a);b=a.o;v.q(a);return b},ThinX:function(a,b,c){a=v.s();N(a,.1*b,0,!0);a.lineTo(.5*b,.4*c);a.lineTo(.9*b,0);a.lineTo(1*b,.1*c);a.lineTo(.6*b,.5*c);a.lineTo(1*b,.9*c);a.lineTo(.9*b,1*c);a.lineTo(.5*b,.6*c);a.lineTo(.1*b,1*c);a.lineTo(0,.9*c);a.lineTo(.4*b,.5*c);a.lineTo(0,.1*c);P(a);b=a.o;v.q(a);return b},RightTriangle:function(a,b,c){a=v.s();N(a,0,0,!0);a.lineTo(1*b,1*c);a.lineTo(0,1*c);P(a);b=a.o;b.B=new L(0,.5);b.C=new L(.5,1);v.q(a);return b},RoundedIBeam:function(a,b,c){a=
v.s();N(a,0,0,!0);a.lineTo(1*b,0);O(a,.5*b,.25*c,.5*b,.75*c,1*b,1*c);a.lineTo(0,1*c);O(a,.5*b,.75*c,.5*b,.25*c,0,0);P(a);b=a.o;v.q(a);return b},RoundedRectangle:function(a,b,c){var d=a?a.Ac:NaN;isNaN(d)&&(d=5);d=Math.min(d,b/3);d=Math.min(d,c/3);a=d*Wc;var e=v.s();N(e,d,0,!0);e.lineTo(b-d,0);O(e,b-a,0,b,a,b,d);e.lineTo(b,c-d);O(e,b,c-a,b-a,c,b-d,c);e.lineTo(d,c);O(e,a,c,0,c-a,0,c-d);e.lineTo(0,d);O(e,0,a,a,0,d,0);P(e);b=e.o;1<a?(b.B=new L(0,0,a,a),b.C=new L(1,1,-a,-a)):(b.B=tb,b.C=Fb);v.q(e);return b},
Border:function(a,b,c){var d=a?a.Ac:NaN;isNaN(d)&&(d=5);d=Math.min(d,b/3);d=Math.min(d,c/3);a=v.s();N(a,d,0,!0);a.lineTo(b-d,0);O(a,b-0,0,b,0,b,d);a.lineTo(b,c-d);O(a,b,c-0,b-0,c,b-d,c);a.lineTo(d,c);O(a,0,c,0,c-0,0,c-d);a.lineTo(0,d);O(a,0,0,0,0,d,0);P(a);b=a.o;b.B=tb;b.C=Fb;v.q(a);return b},SquareIBeam:function(a,b,c){var d=a?a.Ac:NaN;isNaN(d)&&(d=.2);a=v.s();N(a,0,0,!0);a.lineTo(1*b,0);a.lineTo(1*b,d*c);a.lineTo((.5+d/2)*b,d*c);a.lineTo((.5+d/2)*b,(1-d)*c);a.lineTo(1*b,(1-d)*c);a.lineTo(1*b,1*
c);a.lineTo(0,1*c);a.lineTo(0,(1-d)*c);a.lineTo((.5-d/2)*b,(1-d)*c);a.lineTo((.5-d/2)*b,d*c);a.lineTo(0,d*c);P(a);b=a.o;v.q(a);return b},Trapezoid:function(a,b,c){a=a?a.Ac:NaN;isNaN(a)&&(a=.2);var d=v.s();N(d,a*b,0,!0);d.lineTo((1-a)*b,0);d.lineTo(1*b,1*c);d.lineTo(0,1*c);P(d);b=d.o;b.B=new L(a,0);b.C=new L(1-a,1);v.q(d);return b},ManualLoop:"ManualOperation",ManualOperation:function(a,b,c){var d=a?a.Ac:NaN;isNaN(d)&&(d=0);a=v.s();N(a,d,0,!0);a.lineTo(0,0);a.lineTo(1*b,0);a.lineTo(.9*b,1*c);a.lineTo(.1*
b,1*c);P(a);b=a.o;b.B=new L(.1,0);b.C=new L(.9,1);v.q(a);return b},GenderMale:function(a,b,c){a=v.s();var d=.4*Wc,e=.4,f=v.L(),h=v.L(),k=v.L(),l=v.L();N(a,(.5-e)*b,.5*c,!0);O(a,(.5-e)*b,(.5-d)*c,(.5-d)*b,(.5-e)*c,.5*b,(.5-e)*c);Sd(.5,.5-e,.5+d,.5-e,.5+e,.5-d,.5+e,.5,.44,k,l,h,f,f);O(a,k.x*b,k.y*c,l.x*b,l.y*c,h.x*b,h.y*c);var m=v.Mb(h.x,h.y);Sd(.5,.5-e,.5+d,.5-e,.5+e,.5-d,.5+e,.5,.56,f,f,h,k,l);var n=v.Mb(h.x,h.y);a.lineTo((.1*m.x+.855)*b,.1*m.y*c);a.lineTo(.85*b,.1*m.y*c);a.lineTo(.85*b,0);a.lineTo(1*
b,0);a.lineTo(1*b,.15*c);a.lineTo((.1*n.x+.9)*b,.15*c);a.lineTo((.1*n.x+.9)*b,(.1*n.y+.05*.9)*c);a.lineTo(n.x*b,n.y*c);O(a,k.x*b,k.y*c,l.x*b,l.y*c,(.5+e)*b,.5*c);O(a,(.5+e)*b,(.5+d)*c,(.5+d)*b,(.5+e)*c,.5*b,(.5+e)*c);O(a,(.5-d)*b,(.5+e)*c,(.5-e)*b,(.5+d)*c,(.5-e)*b,.5*c);e=.35;d=.35*Wc;N(a,.5*b,(.5-e)*c,!0,!0);O(a,(.5-d)*b,(.5-e)*c,(.5-e)*b,(.5-d)*c,(.5-e)*b,.5*c);O(a,(.5-e)*b,(.5+d)*c,(.5-d)*b,(.5+e)*c,.5*b,(.5+e)*c);O(a,(.5+d)*b,(.5+e)*c,(.5+e)*b,(.5+d)*c,(.5+e)*b,.5*c);O(a,(.5+e)*b,(.5-d)*c,(.5+
d)*b,(.5-e)*c,.5*b,(.5-e)*c);N(a,(.5-e)*b,.5*c,!0);v.v(f);v.v(h);v.v(k);v.v(l);v.v(m);v.v(n);b=a.o;b.B=new L(.202,.257);b.C=new L(.692,.839);b.Od=Pi;v.q(a);return b},GenderFemale:function(a,b,c){a=v.s();var d=.375,e=0,f=-.125,h=4*(Math.SQRT2-1)/3*d;N(a,(.525+e)*b,(.5+d+f)*c,!0);O(a,(.5+h+e)*b,(.5+d+f)*c,(.5+d+e)*b,(.5+h+f)*c,(.5+d+e)*b,(.5+f)*c);O(a,(.5+d+e)*b,(.5-h+f)*c,(.5+h+e)*b,(.5-d+f)*c,(.5+e)*b,(.5-d+f)*c);O(a,(.5-h+e)*b,(.5-d+f)*c,(.5-d+e)*b,(.5-h+f)*c,(.5-d+e)*b,(.5+f)*c);O(a,(.5-d+e)*b,
(.5+h+f)*c,(.5-h+e)*b,(.5+d+f)*c,(.475+e)*b,(.5+d+f)*c);a.lineTo(.475*b,.85*c);a.lineTo(.425*b,.85*c);a.lineTo(.425*b,.9*c);a.lineTo(.475*b,.9*c);a.lineTo(.475*b,1*c);a.lineTo(.525*b,1*c);a.lineTo(.525*b,.9*c);a.lineTo(.575*b,.9*c);a.lineTo(.575*b,.85*c);a.lineTo(.525*b,.85*c);P(a);d=.325;e=0;f=-.125;h=4*(Math.SQRT2-1)/3*d;N(a,(.5+d+e)*b,(.5+f)*c,!0,!0);O(a,(.5+d+e)*b,(.5+h+f)*c,(.5+h+e)*b,(.5+d+f)*c,(.5+e)*b,(.5+d+f)*c);O(a,(.5-h+e)*b,(.5+d+f)*c,(.5-d+e)*b,(.5+h+f)*c,(.5-d+e)*b,(.5+f)*c);O(a,(.5-
d+e)*b,(.5-h+f)*c,(.5-h+e)*b,(.5-d+f)*c,(.5+e)*b,(.5-d+f)*c);O(a,(.5+h+e)*b,(.5-d+f)*c,(.5+d+e)*b,(.5-h+f)*c,(.5+d+e)*b,(.5+f)*c);N(a,(.525+e)*b,(.5+d+f)*c,!0);b=a.o;b.B=new L(.232,.136);b.C=new L(.782,.611);b.Od=Pi;v.q(a);return b},PlusLine:function(a,b,c){a=v.s();N(a,0,.5*c,!1);a.lineTo(1*b,.5*c);a.moveTo(.5*b,0);a.lineTo(.5*b,1*c);b=a.o;v.q(a);return b},XLine:function(a,b,c){a=v.s();N(a,0,1*c,!1);a.lineTo(1*b,0);a.moveTo(0,0);a.lineTo(1*b,1*c);b=a.o;v.q(a);return b},AsteriskLine:function(a,b,c){a=
v.s();var d=.2/Math.SQRT2;N(a,d*b,(1-d)*c,!1);a.lineTo((1-d)*b,d*c);a.moveTo(d*b,d*c);a.lineTo((1-d)*b,(1-d)*c);a.moveTo(0*b,.5*c);a.lineTo(1*b,.5*c);a.moveTo(.5*b,0*c);a.lineTo(.5*b,1*c);b=a.o;v.q(a);return b},CircleLine:function(a,b,c){var d=.5*Wc;a=v.s();N(a,1*b,.5*c,!1);O(a,1*b,(.5+d)*c,(.5+d)*b,1*c,.5*b,1*c);O(a,(.5-d)*b,1*c,0,(.5+d)*c,0,.5*c);O(a,0,(.5-d)*c,(.5-d)*b,0,.5*b,0);O(a,(.5+d)*b,0,1*b,(.5-d)*c,1*b,.5*c);b=a.o;b.B=new L(.146,.146);b.C=new L(.853,.853);b.Od=Pi;v.q(a);return b},Pie:function(a,
b,c){a=v.s();var d=4*(Math.SQRT2-1)/3*.5;N(a,(.5*Math.SQRT2/2+.5)*b,(.5-.5*Math.SQRT2/2)*c,!0);O(a,.7*b,0*c,.5*b,0*c,.5*b,0*c);O(a,(.5-d+0)*b,0*c,0*b,(.5-d+0)*c,0*b,.5*c);O(a,0*b,(.5+d+0)*c,(.5-d+0)*b,1*c,.5*b,1*c);O(a,(.5+d+0)*b,1*c,1*b,(.5+d+0)*c,1*b,.5*c);a.lineTo(.5*b,.5*c);P(a);b=a.o;v.q(a);return b},PiePiece:function(a,b,c){var d=Wc/Math.SQRT2*.5,e=Math.SQRT2/2,f=1-Math.SQRT2/2;a=v.s();N(a,b,c,!0);O(a,b,(1-d)*c,(e+d)*b,(f+d)*c,e*b,f*c);a.lineTo(0,c);P(a);b=a.o;v.q(a);return b},StopSign:function(a,
b,c){a=1/(Math.SQRT2+2);var d=v.s();N(d,a*b,0,!0);d.lineTo((1-a)*b,0);d.lineTo(1*b,a*c);d.lineTo(1*b,(1-a)*c);d.lineTo((1-a)*b,1*c);d.lineTo(a*b,1*c);d.lineTo(0,(1-a)*c);d.lineTo(0,a*c);P(d);b=d.o;b.B=new L(a/2,a/2);b.C=new L(1-a/2,1-a/2);v.q(d);return b},LogicImplies:function(a,b,c){var d=a?a.Ac:NaN;isNaN(d)&&(d=.2);a=v.s();N(a,(1-d)*b,0*c,!1);a.lineTo(1*b,.5*c);a.lineTo((1-d)*b,c);a.moveTo(0,.5*c);a.lineTo(b,.5*c);b=a.o;b.B=tb;b.C=new L(.8,.5);v.q(a);return b},LogicIff:function(a,b,c){var d=a?a.Ac:
NaN;isNaN(d)&&(d=.2);a=v.s();N(a,(1-d)*b,0*c,!1);a.lineTo(1*b,.5*c);a.lineTo((1-d)*b,c);a.moveTo(0,.5*c);a.lineTo(b,.5*c);a.moveTo(d*b,0);a.lineTo(0,.5*c);a.lineTo(d*b,c);b=a.o;b.B=new L(.2,0);b.C=new L(.8,.5);v.q(a);return b},LogicNot:function(a,b,c){a=v.s();N(a,0,0,!1);a.lineTo(1*b,0);a.lineTo(1*b,1*c);b=a.o;v.q(a);return b},LogicAnd:function(a,b,c){a=v.s();N(a,0,1*c,!1);a.lineTo(.5*b,0);a.lineTo(1*b,1*c);b=a.o;b.B=new L(.25,.5);b.C=new L(.75,1);v.q(a);return b},LogicOr:function(a,b,c){a=v.s();
N(a,0,0,!1);a.lineTo(.5*b,1*c);a.lineTo(1*b,0);b=a.o;b.B=new L(.219,0);b.C=new L(.78,.409);v.q(a);return b},LogicXor:function(a,b,c){a=v.s();N(a,.5*b,0,!1);a.lineTo(.5*b,1*c);a.moveTo(0,.5*c);a.lineTo(1*b,.5*c);var d=.5*Wc;O(a,1*b,(.5+d)*c,(.5+d)*b,1*c,.5*b,1*c);O(a,(.5-d)*b,1*c,0,(.5+d)*c,0,.5*c);O(a,0,(.5-d)*c,(.5-d)*b,0,.5*b,0);O(a,(.5+d)*b,0,1*b,(.5-d)*c,1*b,.5*c);b=a.o;b.Od=Pi;v.q(a);return b},LogicTruth:function(a,b,c){a=v.s();N(a,0,0,!1);a.lineTo(1*b,0);a.moveTo(.5*b,0);a.lineTo(.5*b,1*c);
b=a.o;v.q(a);return b},LogicFalsity:function(a,b,c){a=v.s();N(a,0,1*c,!1);a.lineTo(1*b,1*c);a.moveTo(.5*b,1*c);a.lineTo(.5*b,0);b=a.o;v.q(a);return b},LogicThereExists:function(a,b,c){a=v.s();N(a,0,0,!1);a.lineTo(1*b,0);a.lineTo(1*b,.5*c);a.lineTo(0,.5*c);a.moveTo(1*b,.5*c);a.lineTo(1*b,1*c);a.lineTo(0,1*c);b=a.o;v.q(a);return b},LogicForAll:function(a,b,c){a=v.s();N(a,0,0,!1);a.lineTo(.5*b,1*c);a.lineTo(1*b,0);a.moveTo(.25*b,.5*c);a.lineTo(.75*b,.5*c);b=a.o;b.B=new L(.25,0);b.C=new L(.75,.5);v.q(a);
return b},LogicIsDefinedAs:function(a,b,c){a=v.s();N(a,0,0,!1);a.lineTo(b,0);a.moveTo(0,.5*c);a.lineTo(b,.5*c);a.moveTo(0,c);a.lineTo(b,c);b=a.o;b.B=new L(.01,.01);b.C=new L(.99,.49);v.q(a);return b},LogicIntersect:function(a,b,c){var d=.5*Wc;a=v.s();N(a,0,1*c,!1);a.lineTo(0,.5*c);O(a,0,(.5-d)*c,(.5-d)*b,0,.5*b,0);O(a,(.5+d)*b,0,1*b,(.5-d)*c,1*b,.5*c);a.lineTo(1*b,1*c);b=a.o;b.B=new L(0,.5);b.C=Fb;v.q(a);return b},LogicUnion:function(a,b,c){var d=.5*Wc;a=v.s();N(a,1*b,0,!1);a.lineTo(1*b,.5*c);O(a,
1*b,(.5+d)*c,(.5+d)*b,1*c,.5*b,1*c);O(a,(.5-d)*b,1*c,0,(.5+d)*c,0,.5*c);a.lineTo(0,0);b=a.o;b.B=tb;b.C=new L(1,.5);v.q(a);return b},Arrow:function(a,b,c){var d=a?a.Ac:NaN,e=a?a.Lt:NaN;isNaN(d)&&(d=.3);isNaN(e)&&(e=.3);a=v.s();N(a,0,(.5-e/2)*c,!0);a.lineTo((1-d)*b,(.5-e/2)*c);a.lineTo((1-d)*b,0);a.lineTo(1*b,.5*c);a.lineTo((1-d)*b,1*c);a.lineTo((1-d)*b,(.5+e/2)*c);a.lineTo(0,(.5+e/2)*c);P(a);b=a.o;b.B=new L(0,.5-e/2);d=$d(0,.5+e/2,1,.5+e/2,1-d,1,1,.5,v.L());b.C=new L(d.x,d.y);v.v(d);v.q(a);return b},
ISOProcess:"Chevron",Chevron:function(a,b,c){a=v.s();N(a,0,0,!0);a.lineTo(.5*b,0);a.lineTo(1*b,.5*c);a.lineTo(.5*b,1*c);a.lineTo(0,1*c);a.lineTo(.5*b,.5*c);P(a);b=a.o;v.q(a);return b},DoubleArrow:function(a,b,c){a=v.s();N(a,0,0,!0);a.lineTo(.3*b,.214*c);a.lineTo(.3*b,0);a.lineTo(1*b,.5*c);a.lineTo(.3*b,1*c);a.lineTo(.3*b,.786*c);a.lineTo(0,1*c);P(a);N(a,.3*b,.214*c,!1);a.lineTo(.3*b,.786*c);a.Ya(!1);b=a.o;v.q(a);return b},DoubleEndArrow:function(a,b,c){a=v.s();N(a,1*b,.5*c,!0);a.lineTo(.7*b,1*c);
a.lineTo(.7*b,.7*c);a.lineTo(.3*b,.7*c);a.lineTo(.3*b,1*c);a.lineTo(0,.5*c);a.lineTo(.3*b,0);a.lineTo(.3*b,.3*c);a.lineTo(.7*b,.3*c);a.lineTo(.7*b,0);P(a);b=a.o;c=$d(0,.5,.3,0,0,.3,.3,.3,v.L());b.B=new L(c.x,c.y);c=$d(.7,1,1,.5,.7,.7,1,.7,c);b.C=new L(c.x,c.y);v.v(c);v.q(a);return b},IBeamArrow:function(a,b,c){a=v.s();N(a,1*b,.5*c,!0);a.lineTo(.7*b,1*c);a.lineTo(.7*b,.7*c);a.lineTo(.2*b,.7*c);a.lineTo(.2*b,1*c);a.lineTo(0,1*c);a.lineTo(0,0);a.lineTo(.2*b,0);a.lineTo(.2*b,.3*c);a.lineTo(.7*b,.3*c);
a.lineTo(.7*b,0);P(a);b=a.o;b.B=new L(0,.3);c=$d(.7,1,1,.5,.7,.7,1,.7,v.L());b.C=new L(c.x,c.y);v.v(c);v.q(a);return b},Pointer:function(a,b,c){a=v.s();N(a,1*b,.5*c,!0);a.lineTo(0,1*c);a.lineTo(.2*b,.5*c);a.lineTo(0,0);P(a);b=a.o;b.B=new L(.2,.35);c=$d(.2,.65,1,.65,0,1,1,.5,v.L());b.C=new L(c.x,c.y);v.v(c);v.q(a);return b},RoundedPointer:function(a,b,c){a=v.s();N(a,1*b,.5*c,!0);a.lineTo(0,1*c);O(a,.5*b,.75*c,.5*b,.25*c,0,0);P(a);b=a.o;b.B=new L(.4,.35);c=$d(.2,.65,1,.65,0,1,1,.5,v.L());b.C=new L(c.x,
c.y);v.v(c);v.q(a);return b},SplitEndArrow:function(a,b,c){a=v.s();N(a,1*b,.5*c,!0);a.lineTo(.7*b,1*c);a.lineTo(.7*b,.7*c);a.lineTo(0,.7*c);a.lineTo(.2*b,.5*c);a.lineTo(0,.3*c);a.lineTo(.7*b,.3*c);a.lineTo(.7*b,0);P(a);b=a.o;b.B=new L(.2,.3);c=$d(.7,1,1,.5,.7,.7,1,.7,v.L());b.C=new L(c.x,c.y);v.v(c);v.q(a);return b},MessageToUser:"SquareArrow",SquareArrow:function(a,b,c){a=v.s();N(a,1*b,.5*c,!0);a.lineTo(.7*b,1*c);a.lineTo(0,1*c);a.lineTo(0,0);a.lineTo(.7*b,0);P(a);b=a.o;b.B=tb;b.C=new L(.7,1);v.q(a);
return b},Cone1:function(a,b,c){var d=.5*Wc,e=.1*Wc;a=v.s();N(a,0,.9*c,!0);a.lineTo(.5*b,0);a.lineTo(1*b,.9*c);O(a,1*b,(.9+e)*c,(.5+d)*b,1*c,.5*b,1*c);O(a,(.5-d)*b,1*c,0,(.9+e)*c,0,.9*c);P(a);b=a.o;b.B=new L(.25,.5);b.C=new L(.75,.97);v.q(a);return b},Cone2:function(a,b,c){a=v.s();N(a,0,.9*c,!0);O(a,(1-.85/.9)*b,1*c,.85/.9*b,1*c,1*b,.9*c);a.lineTo(.5*b,0);a.lineTo(0,.9*c);P(a);N(a,0,.9*c,!1);O(a,(1-.85/.9)*b,.8*c,.85/.9*b,.8*c,1*b,.9*c);a.Ya(!1);b=a.o;b.B=new L(.25,.5);b.C=new L(.75,.82);v.q(a);return b},
Cube1:function(a,b,c){a=v.s();N(a,.5*b,1*c,!0);a.lineTo(1*b,.85*c);a.lineTo(1*b,.15*c);a.lineTo(.5*b,0*c);a.lineTo(0*b,.15*c);a.lineTo(0*b,.85*c);P(a);N(a,.5*b,1*c,!1);a.lineTo(.5*b,.3*c);a.lineTo(0,.15*c);a.moveTo(.5*b,.3*c);a.lineTo(1*b,.15*c);a.Ya(!1);b=a.o;b.B=new L(0,.3);b.C=new L(.5,.85);v.q(a);return b},Cube2:function(a,b,c){a=v.s();N(a,0,.3*c,!0);a.lineTo(0*b,1*c);a.lineTo(.7*b,c);a.lineTo(1*b,.7*c);a.lineTo(1*b,0*c);a.lineTo(.3*b,0*c);P(a);N(a,0,.3*c,!1);a.lineTo(.7*b,.3*c);a.lineTo(1*b,
0*c);a.moveTo(.7*b,.3*c);a.lineTo(.7*b,1*c);a.Ya(!1);b=a.o;b.B=new L(0,.3);b.C=new L(.7,1);v.q(a);return b},MagneticData:"Cylinder1",Cylinder1:function(a,b,c){var d=.5*Wc,e=.1*Wc;a=v.s();N(a,0,.1*c,!0);O(a,0,(.1-e)*c,(.5-d)*b,0,.5*b,0);O(a,(.5+d)*b,0,1*b,(.1-e)*c,1*b,.1*c);a.lineTo(b,.9*c);O(a,1*b,(.9+e)*c,(.5+d)*b,1*c,.5*b,1*c);O(a,(.5-d)*b,1*c,0,(.9+e)*c,0,.9*c);a.lineTo(0,.1*c);N(a,0,.1*c,!1);O(a,0,(.1+e)*c,(.5-d)*b,.2*c,.5*b,.2*c);O(a,(.5+d)*b,.2*c,1*b,(.1+e)*c,1*b,.1*c);a.Ya(!1);b=a.o;b.B=new L(0,
.2);b.C=new L(1,.9);v.q(a);return b},Cylinder2:function(a,b,c){var d=.5*Wc,e=.1*Wc;a=v.s();N(a,0,.9*c,!0);a.lineTo(0,.1*c);O(a,0,(.1-e)*c,(.5-d)*b,0,.5*b,0);O(a,(.5+d)*b,0,1*b,(.1-e)*c,1*b,.1*c);a.lineTo(1*b,.9*c);O(a,1*b,(.9+e)*c,(.5+d)*b,1*c,.5*b,1*c);O(a,(.5-d)*b,1*c,0,(.9+e)*c,0,.9*c);N(a,0,.9*c,!1);O(a,0,(.9-e)*c,(.5-d)*b,.8*c,.5*b,.8*c);O(a,(.5+d)*b,.8*c,1*b,(.9-e)*c,1*b,.9*c);a.Ya(!1);b=a.o;b.B=new L(0,.1);b.C=new L(1,.8);v.q(a);return b},Cylinder3:function(a,b,c){var d=.1*Wc,e=.5*Wc;a=v.s();
N(a,.1*b,0,!0);a.lineTo(.9*b,0);O(a,(.9+d)*b,0,1*b,(.5-e)*c,1*b,.5*c);O(a,1*b,(.5+e)*c,(.9+d)*b,1*c,.9*b,1*c);a.lineTo(.1*b,1*c);O(a,(.1-d)*b,1*c,0,(.5+e)*c,0,.5*c);O(a,0,(.5-e)*c,(.1-d)*b,0,.1*b,0);N(a,.1*b,0,!1);O(a,(.1+d)*b,0,.2*b,(.5-e)*c,.2*b,.5*c);O(a,.2*b,(.5+e)*c,(.1+d)*b,1*c,.1*b,1*c);a.Ya(!1);b=a.o;b.B=new L(.2,0);b.C=new L(.9,1);v.q(a);return b},DirectData:"Cylinder4",Cylinder4:function(a,b,c){var d=.1*Wc,e=.5*Wc;a=v.s();N(a,.9*b,0,!0);O(a,(.9+d)*b,0,1*b,(.5-e)*c,1*b,.5*c);O(a,1*b,(.5+
e)*c,(.9+d)*b,1*c,.9*b,1*c);a.lineTo(.1*b,1*c);O(a,(.1-d)*b,1*c,0,(.5+e)*c,0,.5*c);O(a,0,(.5-e)*c,(.1-d)*b,0,.1*b,0);a.lineTo(.9*b,0);N(a,.9*b,0,!1);O(a,(.9-d)*b,0,.8*b,(.5-e)*c,.8*b,.5*c);O(a,.8*b,(.5+e)*c,(.9-d)*b,1*c,.9*b,1*c);a.Ya(!1);b=a.o;b.B=new L(.1,0);b.C=new L(.8,1);v.q(a);return b},Prism1:function(a,b,c){a=v.s();N(a,.25*b,.25*c,!0);a.lineTo(.75*b,0);a.lineTo(b,.5*c);a.lineTo(.5*b,c);a.lineTo(0,c);P(a);N(a,.25*b,.25*c,!1);a.lineTo(.5*b,c);a.Ya(!1);b=a.o;b.B=new L(.408,.172);b.C=new L(.833,
.662);v.q(a);return b},Prism2:function(a,b,c){a=v.s();N(a,0,.25*c,!0);a.lineTo(.75*b,0);a.lineTo(1*b,.25*c);a.lineTo(.75*b,.75*c);a.lineTo(0,1*c);P(a);N(a,0,c,!1);a.lineTo(.25*b,.5*c);a.lineTo(b,.25*c);a.moveTo(0,.25*c);a.lineTo(.25*b,.5*c);a.Ya(!1);b=a.o;b.B=new L(.25,.5);b.C=new L(.75,.75);v.q(a);return b},Pyramid1:function(a,b,c){a=v.s();N(a,.5*b,0,!0);a.lineTo(b,.75*c);a.lineTo(.5*b,1*c);a.lineTo(0,.75*c);P(a);N(a,.5*b,0,!1);a.lineTo(.5*b,1*c);a.Ya(!1);b=a.o;b.B=new L(.25,.367);b.C=new L(.75,
.875);v.q(a);return b},Pyramid2:function(a,b,c){a=v.s();N(a,.5*b,0,!0);a.lineTo(b,.85*c);a.lineTo(.5*b,1*c);a.lineTo(0,.85*c);P(a);N(a,.5*b,0,!1);a.lineTo(.5*b,.7*c);a.lineTo(0,.85*c);a.moveTo(.5*b,.7*c);a.lineTo(1*b,.85*c);a.Ya(!1);b=a.o;b.B=new L(.25,.367);b.C=new L(.75,.875);v.q(a);return b},Actor:function(a,b,c){var d=.2*Wc,e=.1*Wc,f=.5,h=.1;a=v.s();N(a,f*b,(h+.1)*c,!0);O(a,(f-d)*b,(h+.1)*c,(f-.2)*b,(h+e)*c,(f-.2)*b,h*c);O(a,(f-.2)*b,(h-e)*c,(f-d)*b,(h-.1)*c,f*b,(h-.1)*c);O(a,(f+d)*b,(h-.1)*c,
(f+.2)*b,(h-e)*c,(f+.2)*b,h*c);O(a,(f+.2)*b,(h+e)*c,(f+d)*b,(h+.1)*c,f*b,(h+.1)*c);d=.05;e=Wc*d;N(a,.5*b,.2*c,!0);a.lineTo(.95*b,.2*c);f=.95;h=.25;O(a,(f+e)*b,(h-d)*c,(f+d)*b,(h-e)*c,(f+d)*b,h*c);a.lineTo(1*b,.6*c);a.lineTo(.85*b,.6*c);a.lineTo(.85*b,.35*c);d=.025;e=Wc*d;f=.825;h=.35;O(a,(f+d)*b,(h-e)*c,(f+e)*b,(h-d)*c,f*b,(h-d)*c);O(a,(f-e)*b,(h-d)*c,(f-d)*b,(h-e)*c,(f-d)*b,h*c);a.lineTo(.8*b,1*c);a.lineTo(.55*b,1*c);a.lineTo(.55*b,.7*c);d=.05;e=Wc*d;f=.5;h=.7;O(a,(f+d)*b,(h-e)*c,(f+e)*b,(h-d)*c,
f*b,(h-d)*c);O(a,(f-e)*b,(h-d)*c,(f-d)*b,(h-e)*c,(f-d)*b,h*c);a.lineTo(.45*b,1*c);a.lineTo(.2*b,1*c);a.lineTo(.2*b,.35*c);d=.025;e=Wc*d;f=.175;h=.35;O(a,(f+d)*b,(h-e)*c,(f+e)*b,(h-d)*c,f*b,(h-d)*c);O(a,(f-e)*b,(h-d)*c,(f-d)*b,(h-e)*c,(f-d)*b,h*c);a.lineTo(.15*b,.6*c);a.lineTo(0*b,.6*c);a.lineTo(0*b,.25*c);d=.05;e=Wc*d;f=.05;h=.25;O(a,(f-d)*b,(h-e)*c,(f-e)*b,(h-d)*c,f*b,(h-d)*c);a.lineTo(.5*b,.2*c);b=a.o;b.B=new L(.2,.2);b.C=new L(.8,.65);v.q(a);return b},Card:function(a,b,c){a=v.s();N(a,1*b,0*c,!0);
a.lineTo(1*b,1*c);a.lineTo(0*b,1*c);a.lineTo(0*b,.2*c);a.lineTo(.2*b,0*c);P(a);b=a.o;b.B=new L(0,.2);b.C=Fb;v.q(a);return b},Collate:function(a,b,c){a=v.s();N(a,.5*b,.5*c,!0);a.lineTo(0,0);a.lineTo(1*b,0);a.lineTo(.5*b,.5*c);N(a,.5*b,.5*c,!0);a.lineTo(1*b,1*c);a.lineTo(0,1*c);a.lineTo(.5*b,.5*c);b=a.o;b.B=new L(.25,0);b.C=new L(.75,.25);v.q(a);return b},CreateRequest:function(a,b,c){a=a?a.Ac:NaN;isNaN(a)&&(a=.1);var d=v.s();N(d,0,0,!0);d.lineTo(1*b,0);d.lineTo(1*b,1*c);d.lineTo(0,1*c);P(d);N(d,0,
a*c,!1);d.lineTo(1*b,a*c);d.moveTo(0,(1-a)*c);d.lineTo(1*b,(1-a)*c);d.Ya(!1);b=d.o;b.B=new L(0,a);b.C=new L(1,1-a);v.q(d);return b},Database:function(a,b,c){a=v.s();var d=.5*Wc,e=.1*Wc;N(a,1*b,.1*c,!0);a.lineTo(1*b,.9*c);O(a,1*b,(.9+e)*c,(.5+d)*b,1*c,.5*b,1*c);O(a,(.5-d)*b,1*c,0,(.9+e)*c,0,.9*c);a.lineTo(0,.1*c);O(a,0,(.1-e)*c,(.5-d)*b,0,.5*b,0);O(a,(.5+d)*b,0,1*b,(.1-e)*c,1*b,.1*c);N(a,1*b,.1*c,!1);O(a,1*b,(.1+e)*c,(.5+d)*b,.2*c,.5*b,.2*c);O(a,(.5-d)*b,.2*c,0,(.1+e)*c,0,.1*c);a.moveTo(1*b,.2*c);
O(a,1*b,(.2+e)*c,(.5+d)*b,.3*c,.5*b,.3*c);O(a,(.5-d)*b,.3*c,0,(.2+e)*c,0,.2*c);a.moveTo(1*b,.3*c);O(a,1*b,(.3+e)*c,(.5+d)*b,.4*c,.5*b,.4*c);O(a,(.5-d)*b,.4*c,0,(.3+e)*c,0,.3*c);a.Ya(!1);b=a.o;b.B=new L(0,.4);b.C=new L(1,.9);v.q(a);return b},StoredData:"DataStorage",DataStorage:function(a,b,c){a=v.s();N(a,0,0,!0);a.lineTo(.75*b,0);O(a,1*b,0,1*b,1*c,.75*b,1*c);a.lineTo(0,1*c);O(a,.25*b,.9*c,.25*b,.1*c,0,0);P(a);b=a.o;b.B=new L(.226,0);b.C=new L(.81,1);v.q(a);return b},DiskStorage:function(a,b,c){a=
v.s();var d=.5*Wc,e=.1*Wc;N(a,1*b,.1*c,!0);a.lineTo(1*b,.9*c);O(a,1*b,(.9+e)*c,(.5+d)*b,1*c,.5*b,1*c);O(a,(.5-d)*b,1*c,0,(.9+e)*c,0,.9*c);a.lineTo(0,.1*c);O(a,0,(.1-e)*c,(.5-d)*b,0,.5*b,0);O(a,(.5+d)*b,0,1*b,(.1-e)*c,1*b,.1*c);N(a,1*b,.1*c,!1);O(a,1*b,(.1+e)*c,(.5+d)*b,.2*c,.5*b,.2*c);O(a,(.5-d)*b,.2*c,0,(.1+e)*c,0,.1*c);a.moveTo(1*b,.2*c);O(a,1*b,(.2+e)*c,(.5+d)*b,.3*c,.5*b,.3*c);O(a,(.5-d)*b,.3*c,0,(.2+e)*c,0,.2*c);a.Ya(!1);b=a.o;b.B=new L(0,.3);b.C=new L(1,.9);v.q(a);return b},Display:function(a,
b,c){a=v.s();N(a,.25*b,0,!0);a.lineTo(.75*b,0);O(a,1*b,0,1*b,1*c,.75*b,1*c);a.lineTo(.25*b,1*c);a.lineTo(0,.5*c);P(a);b=a.o;b.B=new L(.25,0);b.C=new L(.75,1);v.q(a);return b},DividedEvent:function(a,b,c){a=a?a.Ac:NaN;isNaN(a)?a=.2:.15>a&&(a=.15);var d=v.s(),e=.2*Wc;N(d,0,.2*c,!0);O(d,0,(.2-e)*c,(.2-e)*b,0,.2*b,0);d.lineTo(.8*b,0);O(d,(.8+e)*b,0,1*b,(.2-e)*c,1*b,.2*c);d.lineTo(1*b,.8*c);O(d,1*b,(.8+e)*c,(.8+e)*b,1*c,.8*b,1*c);d.lineTo(.2*b,1*c);O(d,(.2-e)*b,1*c,0,(.8+e)*c,0,.8*c);d.lineTo(0,.2*c);
N(d,0,a*c,!1);d.lineTo(1*b,a*c);d.Ya(!1);b=d.o;b.B=new L(0,a);b.C=new L(1,1-a);v.q(d);return b},DividedProcess:function(a,b,c){a=a?a.Ac:NaN;if(isNaN(a)||.1>a)a=.1;var d=v.s();N(d,0,0,!0);d.lineTo(1*b,0);d.lineTo(1*b,1*c);d.lineTo(0,1*c);P(d);N(d,0,a*c,!1);d.lineTo(1*b,a*c);d.Ya(!1);b=d.o;b.B=new L(0,a);b.C=Fb;v.q(d);return b},Document:function(a,b,c){c/=.8;a=v.s();N(a,0,.7*c,!0);a.lineTo(0,0);a.lineTo(1*b,0);a.lineTo(1*b,.7*c);O(a,.5*b,.4*c,.5*b,1*c,0,.7*c);P(a);b=a.o;b.B=tb;b.C=new L(1,.6);v.q(a);
return b},ExternalOrganization:function(a,b,c){a=a?a.Ac:NaN;if(isNaN(a)||.2>a)a=.2;var d=v.s();N(d,0,0,!0);d.lineTo(1*b,0);d.lineTo(1*b,1*c);d.lineTo(0,1*c);P(d);N(d,a*b,0,!1);d.lineTo(0,a*c);d.moveTo(1*b,a*c);d.lineTo((1-a)*b,0);d.moveTo(0,(1-a)*c);d.lineTo(a*b,1*c);d.moveTo((1-a)*b,1*c);d.lineTo(1*b,(1-a)*c);d.Ya(!1);b=d.o;b.B=new L(a/2,a/2);b.C=new L(1-a/2,1-a/2);v.q(d);return b},ExternalProcess:function(a,b,c){a=v.s();N(a,.5*b,0,!0);a.lineTo(1*b,.5*c);a.lineTo(.5*b,1*c);a.lineTo(0,.5*c);P(a);
N(a,.1*b,.4*c,!1);a.lineTo(.1*b,.6*c);a.moveTo(.9*b,.6*c);a.lineTo(.9*b,.4*c);a.moveTo(.6*b,.1*c);a.lineTo(.4*b,.1*c);a.moveTo(.4*b,.9*c);a.lineTo(.6*b,.9*c);a.Ya(!1);b=a.o;b.B=new L(.25,.25);b.C=new L(.75,.75);v.q(a);return b},File:function(a,b,c){a=v.s();N(a,0,0,!0);a.lineTo(.75*b,0);a.lineTo(1*b,.25*c);a.lineTo(1*b,1*c);a.lineTo(0,1*c);P(a);N(a,.75*b,0,!1);a.lineTo(.75*b,.25*c);a.lineTo(1*b,.25*c);a.Ya(!1);b=a.o;b.B=new L(0,.25);b.C=Fb;v.q(a);return b},Interrupt:function(a,b,c){a=v.s();N(a,1*b,
.5*c,!0);a.lineTo(0,1*c);a.lineTo(0,0);a.lineTo(1*b,.5*c);N(a,1*b,.5*c,!1);a.lineTo(1*b,1*c);N(a,1*b,.5*c,!1);a.lineTo(1*b,0);b=a.o;b.B=new L(0,.25);b.C=new L(.5,.75);v.q(a);return b},InternalStorage:function(a,b,c){var d=a?a.Ac:NaN;a=a?a.Lt:NaN;isNaN(d)&&(d=.1);isNaN(a)&&(a=.1);var e=v.s();N(e,0,0,!0);e.lineTo(1*b,0);e.lineTo(1*b,1*c);e.lineTo(0,1*c);P(e);N(e,d*b,0,!1);e.lineTo(d*b,1*c);e.moveTo(0,a*c);e.lineTo(1*b,a*c);e.Ya(!1);b=e.o;b.B=new L(d,a);b.C=Fb;v.q(e);return b},Junction:function(a,b,
c){a=v.s();var d=1/Math.SQRT2,e=(1-1/Math.SQRT2)/2,f=.5*Wc;N(a,1*b,.5*c,!0);O(a,1*b,(.5+f)*c,(.5+f)*b,1*c,.5*b,1*c);O(a,(.5-f)*b,1*c,0,(.5+f)*c,0,.5*c);O(a,0,(.5-f)*c,(.5-f)*b,0,.5*b,0);O(a,(.5+f)*b,0,1*b,(.5-f)*c,1*b,.5*c);N(a,(e+d)*b,(e+d)*c,!1);a.lineTo(e*b,e*c);a.moveTo(e*b,(e+d)*c);a.lineTo((e+d)*b,e*c);a.Ya(!1);b=a.o;b.Od=Pi;v.q(a);return b},LinedDocument:function(a,b,c){c/=.8;a=v.s();N(a,0,.7*c,!0);a.lineTo(0,0);a.lineTo(1*b,0);a.lineTo(1*b,.7*c);O(a,.5*b,.4*c,.5*b,1*c,0,.7*c);P(a);N(a,.1*
b,0,!1);a.lineTo(.1*b,.75*c);a.Ya(!1);b=a.o;b.B=new L(.1,0);b.C=new L(1,.6);v.q(a);return b},LoopLimit:function(a,b,c){a=v.s();N(a,0,1*c,!0);a.lineTo(0,.25*c);a.lineTo(.25*b,0);a.lineTo(.75*b,0);a.lineTo(1*b,.25*c);a.lineTo(1*b,1*c);P(a);b=a.o;b.B=new L(0,.25);b.C=Fb;v.q(a);return b},SequentialData:"MagneticTape",MagneticTape:function(a,b,c){a=v.s();var d=.5*Wc;N(a,.5*b,1*c,!0);O(a,(.5-d)*b,1*c,0,(.5+d)*c,0,.5*c);O(a,0,(.5-d)*c,(.5-d)*b,0,.5*b,0);O(a,(.5+d)*b,0,1*b,(.5-d)*c,1*b,.5*c);O(a,1*b,(.5+
d)*c,(.5+d)*b,.9*c,.6*b,.9*c);a.lineTo(1*b,.9*c);a.lineTo(1*b,1*c);a.lineTo(.5*b,1*c);b=a.o;b.B=new L(.15,.15);b.C=new L(.85,.8);v.q(a);return b},ManualInput:function(a,b,c){a=v.s();N(a,1*b,0,!0);a.lineTo(1*b,1*c);a.lineTo(0,1*c);a.lineTo(0,.25*c);P(a);b=a.o;b.B=new L(0,.25);b.C=Fb;v.q(a);return b},MessageFromUser:function(a,b,c){a=a?a.Ac:NaN;isNaN(a)&&(a=.7);var d=v.s();N(d,0,0,!0);d.lineTo(1*b,0);d.lineTo(a*b,.5*c);d.lineTo(1*b,1*c);d.lineTo(0,1*c);P(d);b=d.o;b.B=tb;b.C=new L(a,1);v.q(d);return b},
MicroformProcessing:function(a,b,c){a=a?a.Ac:NaN;isNaN(a)&&(a=.25);var d=v.s();N(d,0,0,!0);d.lineTo(.5*b,a*c);d.lineTo(1*b,0);d.lineTo(1*b,1*c);d.lineTo(.5*b,(1-a)*c);d.lineTo(0,1*c);P(d);b=d.o;b.B=new L(0,a);b.C=new L(1,1-a);v.q(d);return b},MicroformRecording:function(a,b,c){a=v.s();N(a,0,0,!0);a.lineTo(.75*b,.25*c);a.lineTo(1*b,.15*c);a.lineTo(1*b,.85*c);a.lineTo(.75*b,.75*c);a.lineTo(0,1*c);P(a);b=a.o;b.B=new L(0,.25);b.C=new L(1,.75);v.q(a);return b},MultiDocument:function(a,b,c){c/=.8;a=v.s();
N(a,b,0,!0);a.lineTo(b,.5*c);O(a,.96*b,.47*c,.93*b,.45*c,.9*b,.44*c);a.lineTo(.9*b,.6*c);O(a,.86*b,.57*c,.83*b,.55*c,.8*b,.54*c);a.lineTo(.8*b,.7*c);O(a,.4*b,.4*c,.4*b,1*c,0,.7*c);a.lineTo(0,.2*c);a.lineTo(.1*b,.2*c);a.lineTo(.1*b,.1*c);a.lineTo(.2*b,.1*c);a.lineTo(.2*b,0);P(a);N(a,.1*b,.2*c,!1);a.lineTo(.8*b,.2*c);a.lineTo(.8*b,.54*c);a.moveTo(.2*b,.1*c);a.lineTo(.9*b,.1*c);a.lineTo(.9*b,.44*c);a.Ya(!1);b=a.o;b.B=new L(0,.25);b.C=new L(.8,.77);v.q(a);return b},MultiProcess:function(a,b,c){a=v.s();
N(a,.1*b,.1*c,!0);a.lineTo(.2*b,.1*c);a.lineTo(.2*b,0);a.lineTo(1*b,0);a.lineTo(1*b,.8*c);a.lineTo(.9*b,.8*c);a.lineTo(.9*b,.9*c);a.lineTo(.8*b,.9*c);a.lineTo(.8*b,1*c);a.lineTo(0,1*c);a.lineTo(0,.2*c);a.lineTo(.1*b,.2*c);P(a);N(a,.2*b,.1*c,!1);a.lineTo(.9*b,.1*c);a.lineTo(.9*b,.8*c);a.moveTo(.1*b,.2*c);a.lineTo(.8*b,.2*c);a.lineTo(.8*b,.9*c);a.Ya(!1);b=a.o;b.B=new L(0,.2);b.C=new L(.8,1);v.q(a);return b},OfflineStorage:function(a,b,c){a=a?a.Ac:NaN;isNaN(a)&&(a=.1);var d=1-a,e=v.s();N(e,0,0,!0);e.lineTo(1*
b,0);e.lineTo(.5*b,1*c);P(e);N(e,.5*a*b,a*c,!1);e.lineTo((1-.5*a)*b,a*c);e.Ya(!1);b=e.o;b.B=new L(d/4+.5*a,a);b.C=new L(3*d/4+.5*a,a+.5*d);v.q(e);return b},OffPageConnector:function(a,b,c){a=v.s();N(a,0,0,!0);a.lineTo(.75*b,0);a.lineTo(1*b,.5*c);a.lineTo(.75*b,1*c);a.lineTo(0,1*c);P(a);b=a.o;b.B=tb;b.C=new L(.75,1);v.q(a);return b},Or:function(a,b,c){a=v.s();var d=.5*Wc;N(a,1*b,.5*c,!0);O(a,1*b,(.5+d)*c,(.5+d)*b,1*c,.5*b,1*c);O(a,(.5-d)*b,1*c,0,(.5+d)*c,0,.5*c);O(a,0,(.5-d)*c,(.5-d)*b,0,.5*b,0);O(a,
(.5+d)*b,0,1*b,(.5-d)*c,1*b,.5*c);N(a,1*b,.5*c,!1);a.lineTo(0,.5*c);a.moveTo(.5*b,1*c);a.lineTo(.5*b,0);a.Ya(!1);b=a.o;b.Od=Pi;v.q(a);return b},PaperTape:function(a,b,c){c/=.8;a=v.s();N(a,0,.7*c,!0);a.lineTo(0,.3*c);O(a,.5*b,.6*c,.5*b,0,1*b,.3*c);a.lineTo(1*b,.7*c);O(a,.5*b,.4*c,.5*b,1*c,0,.7*c);P(a);b=a.o;b.B=new L(0,.49);b.C=new L(1,.75);v.q(a);return b},PrimitiveFromCall:function(a,b,c){var d=a?a.Ac:NaN;a=a?a.Lt:NaN;isNaN(d)&&(d=.1);isNaN(a)&&(a=.3);var e=v.s();N(e,0,0,!0);e.lineTo(1*b,0);e.lineTo((1-
a)*b,.5*c);e.lineTo(1*b,1*c);e.lineTo(0,1*c);P(e);b=e.o;b.B=new L(d,0);b.C=new L(1-a,1);v.q(e);return b},PrimitiveToCall:function(a,b,c){var d=a?a.Ac:NaN;a=a?a.Lt:NaN;isNaN(d)&&(d=.1);isNaN(a)&&(a=.3);var e=v.s();N(e,0,0,!0);e.lineTo((1-a)*b,0);e.lineTo(1*b,.5*c);e.lineTo((1-a)*b,1*c);e.lineTo(0,1*c);P(e);b=e.o;b.B=new L(d,0);b.C=new L(1-a,1);v.q(e);return b},Subroutine:"Procedure",Procedure:function(a,b,c){a=a?a.Ac:NaN;isNaN(a)&&(a=.1);var d=v.s();N(d,0,0,!0);d.lineTo(1*b,0);d.lineTo(1*b,1*c);d.lineTo(0,
1*c);P(d);N(d,(1-a)*b,0,!1);d.lineTo((1-a)*b,1*c);d.moveTo(a*b,0);d.lineTo(a*b,1*c);d.Ya(!1);b=d.o;b.B=new L(a,0);b.C=new L(1-a,1);v.q(d);return b},Process:function(a,b,c){a=a?a.Ac:NaN;isNaN(a)&&(a=.1);var d=v.s();N(d,0,0,!0);d.lineTo(1*b,0);d.lineTo(1*b,1*c);d.lineTo(0,1*c);P(d);N(d,a*b,0,!1);d.lineTo(a*b,1*c);d.Ya(!1);b=d.o;b.B=new L(a,0);b.C=Fb;v.q(d);return b},Sort:function(a,b,c){a=v.s();N(a,.5*b,0,!0);a.lineTo(1*b,.5*c);a.lineTo(.5*b,1*c);a.lineTo(0,.5*c);P(a);N(a,0,.5*c,!1);a.lineTo(1*b,.5*
c);a.Ya(!1);b=a.o;b.B=new L(.25,.25);b.C=new L(.75,.5);v.q(a);return b},Start:function(a,b,c){a=v.s();N(a,.25*b,0,!0);N(a,.25*b,0,!0);a.arcTo(270,180,.75*b,.5*c,.25*b,.5*c);a.arcTo(90,180,.25*b,.5*c,.25*b,.5*c);N(a,.25*b,0,!1);a.lineTo(.25*b,1*c);a.moveTo(.75*b,0);a.lineTo(.75*b,1*c);a.Ya(!1);b=a.o;b.B=new L(.25,0);b.C=new L(.75,1);v.q(a);return b},Terminator:function(a,b,c){a=v.s();N(a,.25*b,0,!0);a.arcTo(270,180,.75*b,.5*c,.25*b,.5*c);a.arcTo(90,180,.25*b,.5*c,.25*b,.5*c);b=a.o;b.B=new L(.23,0);
b.C=new L(.77,1);v.q(a);return b},TransmittalTape:function(a,b,c){a=a?a.Ac:NaN;isNaN(a)&&(a=.1);var d=v.s();N(d,0,0,!0);d.lineTo(1*b,0);d.lineTo(1*b,1*c);d.lineTo(.75*b,(1-a)*c);d.lineTo(0,(1-a)*c);P(d);b=d.o;b.B=tb;b.C=new L(1,1-a);v.q(d);return b},AndGate:function(a,b,c){a=v.s();var d=.5*Wc;N(a,0,0,!0);a.lineTo(.5*b,0);O(a,(.5+d)*b,0,1*b,(.5-d)*c,1*b,.5*c);O(a,1*b,(.5+d)*c,(.5+d)*b,1*c,.5*b,1*c);a.lineTo(0,1*c);P(a);b=a.o;b.B=tb;b.C=new L(.55,1);v.q(a);return b},Buffer:function(a,b,c){a=v.s();N(a,
0,0,!0);a.lineTo(1*b,.5*c);a.lineTo(0,1*c);P(a);b=a.o;b.B=new L(0,.25);b.C=new L(.5,.75);v.q(a);return b},Clock:function(a,b,c){a=v.s();var d=.5*Wc;N(a,1*b,.5*c,!0);O(a,1*b,(.5+d)*c,(.5+d)*b,1*c,.5*b,1*c);O(a,(.5-d)*b,1*c,0,(.5+d)*c,0,.5*c);O(a,0,(.5-d)*c,(.5-d)*b,0,.5*b,0);O(a,(.5+d)*b,0,1*b,(.5-d)*c,1*b,.5*c);N(a,1*b,.5*c,!1);a.lineTo(1*b,.5*c);N(a,.8*b,.75*c,!1);a.lineTo(.8*b,.25*c);a.lineTo(.6*b,.25*c);a.lineTo(.6*b,.75*c);a.lineTo(.4*b,.75*c);a.lineTo(.4*b,.25*c);a.lineTo(.2*b,.25*c);a.lineTo(.2*
b,.75*c);a.Ya(!1);b=a.o;b.Od=Pi;v.q(a);return b},Ground:function(a,b,c){a=v.s();N(a,.5*b,0,!1);a.lineTo(.5*b,.4*c);a.moveTo(.2*b,.6*c);a.lineTo(.8*b,.6*c);a.moveTo(.3*b,.8*c);a.lineTo(.7*b,.8*c);a.moveTo(.4*b,1*c);a.lineTo(.6*b,1*c);b=a.o;v.q(a);return b},Inverter:function(a,b,c){a=v.s();var d=.1*Wc;N(a,.8*b,.5*c,!0);a.lineTo(0,1*c);a.lineTo(0,0);a.lineTo(.8*b,.5*c);N(a,1*b,.5*c,!0);O(a,1*b,(.5+d)*c,(.9+d)*b,.6*c,.9*b,.6*c);O(a,(.9-d)*b,.6*c,.8*b,(.5+d)*c,.8*b,.5*c);O(a,.8*b,(.5-d)*c,(.9-d)*b,.4*
c,.9*b,.4*c);O(a,(.9+d)*b,.4*c,1*b,(.5-d)*c,1*b,.5*c);b=a.o;b.B=new L(0,.25);b.C=new L(.4,.75);v.q(a);return b},NandGate:function(a,b,c){a=v.s();var d=.5*Wc,e=.4*Wc,f=.1*Wc;N(a,.8*b,.5*c,!0);O(a,.8*b,(.5+e)*c,(.4+d)*b,1*c,.4*b,1*c);a.lineTo(0,1*c);a.lineTo(0,0);a.lineTo(.4*b,0);O(a,(.4+d)*b,0,.8*b,(.5-e)*c,.8*b,.5*c);N(a,1*b,.5*c,!0);O(a,1*b,(.5+f)*c,(.9+f)*b,.6*c,.9*b,.6*c);O(a,(.9-f)*b,.6*c,.8*b,(.5+f)*c,.8*b,.5*c);O(a,.8*b,(.5-f)*c,(.9-f)*b,.4*c,.9*b,.4*c);O(a,(.9+f)*b,.4*c,1*b,(.5-f)*c,1*b,.5*
c);b=a.o;b.B=new L(0,.05);b.C=new L(.55,.95);v.q(a);return b},NorGate:function(a,b,c){a=v.s();var d=.5,e=Wc*d,f=0,h=.5;N(a,.8*b,.5*c,!0);O(a,.7*b,(h+e)*c,(f+e)*b,(h+d)*c,0,1*c);O(a,.25*b,.75*c,.25*b,.25*c,0,0);O(a,(f+e)*b,(h-d)*c,.7*b,(h-e)*c,.8*b,.5*c);d=.1;e=.1*Wc;f=.9;h=.5;N(a,(f-d)*b,h*c,!0);O(a,(f-d)*b,(h-e)*c,(f-e)*b,(h-d)*c,f*b,(h-d)*c);O(a,(f+e)*b,(h-d)*c,(f+d)*b,(h-e)*c,(f+d)*b,h*c);O(a,(f+d)*b,(h+e)*c,(f+e)*b,(h+d)*c,f*b,(h+d)*c);O(a,(f-e)*b,(h+d)*c,(f-d)*b,(h+e)*c,(f-d)*b,h*c);b=a.o;b.B=
new L(.2,.25);b.C=new L(.6,.75);v.q(a);return b},OrGate:function(a,b,c){a=v.s();var d=.5*Wc;N(a,0,0,!0);O(a,(0+d+d)*b,0*c,.8*b,(.5-d)*c,1*b,.5*c);O(a,.8*b,(.5+d)*c,(0+d+d)*b,1*c,0,1*c);O(a,.25*b,.75*c,.25*b,.25*c,0,0);P(a);b=a.o;b.B=new L(.2,.25);b.C=new L(.75,.75);v.q(a);return b},XnorGate:function(a,b,c){a=v.s();var d=.5,e=Wc*d,f=.2,h=.5;N(a,.1*b,0,!1);O(a,.35*b,.25*c,.35*b,.75*c,.1*b,1*c);N(a,.8*b,.5*c,!0);O(a,.7*b,(h+e)*c,(f+e)*b,(h+d)*c,.2*b,1*c);O(a,.45*b,.75*c,.45*b,.25*c,.2*b,0);O(a,(f+e)*
b,(h-d)*c,.7*b,(h-e)*c,.8*b,.5*c);d=.1;e=.1*Wc;f=.9;h=.5;N(a,(f-d)*b,h*c,!0);O(a,(f-d)*b,(h-e)*c,(f-e)*b,(h-d)*c,f*b,(h-d)*c);O(a,(f+e)*b,(h-d)*c,(f+d)*b,(h-e)*c,(f+d)*b,h*c);O(a,(f+d)*b,(h+e)*c,(f+e)*b,(h+d)*c,f*b,(h+d)*c);O(a,(f-e)*b,(h+d)*c,(f-d)*b,(h+e)*c,(f-d)*b,h*c);b=a.o;b.B=new L(.4,.25);b.C=new L(.65,.75);v.q(a);return b},XorGate:function(a,b,c){a=v.s();var d=.5*Wc;N(a,.1*b,0,!1);O(a,.35*b,.25*c,.35*b,.75*c,.1*b,1*c);N(a,.2*b,0,!0);O(a,(.2+d)*b,0*c,.9*b,(.5-d)*c,1*b,.5*c);O(a,.9*b,(.5+d)*
c,(.2+d)*b,1*c,.2*b,1*c);O(a,.45*b,.75*c,.45*b,.25*c,.2*b,0);P(a);b=a.o;b.B=new L(.4,.25);b.C=new L(.8,.75);v.q(a);return b},Capacitor:function(a,b,c){a=v.s();N(a,0,0,!1);a.lineTo(0,1*c);a.moveTo(1*b,0);a.lineTo(1*b,1*c);b=a.o;v.q(a);return b},Resistor:function(a,b,c){a=v.s();N(a,0,.5*c,!1);a.lineTo(.1*b,0);a.lineTo(.2*b,1*c);a.lineTo(.3*b,0);a.lineTo(.4*b,1*c);a.lineTo(.5*b,0);a.lineTo(.6*b,1*c);a.lineTo(.7*b,.5*c);b=a.o;v.q(a);return b},Inductor:function(a,b,c){a=v.s();var d=.1*Wc,e=.1;N(a,(e-.5*
d)*b,c,!1);O(a,(e-d)*b,c,(e-.1)*b,0,(e+.1)*b,0);e=.3;O(a,(e+.1)*b,0,(e+d)*b,c,e*b,c);O(a,(e-d)*b,c,(e-.1)*b,0,(e+.1)*b,0);e=.5;O(a,(e+.1)*b,0,(e+d)*b,c,e*b,c);O(a,(e-d)*b,c,(e-.1)*b,0,(e+.1)*b,0);e=.7;O(a,(e+.1)*b,0,(e+d)*b,c,e*b,c);O(a,(e-d)*b,c,(e-.1)*b,0,(e+.1)*b,0);e=.9;O(a,(e+.1)*b,0,(e+d)*b,c,(e+.5*d)*b,c);b=a.o;v.q(a);return b},ACvoltageSource:function(a,b,c){a=v.s();var d=.5*Wc;N(a,0*b,.5*c,!1);O(a,0*b,(.5-d)*c,(.5-d)*b,0*c,.5*b,0*c);O(a,(.5+d)*b,0*c,1*b,(.5-d)*c,1*b,.5*c);O(a,1*b,(.5+d)*
c,(.5+d)*b,1*c,.5*b,1*c);O(a,(.5-d)*b,1*c,0*b,(.5+d)*c,0*b,.5*c);a.moveTo(.1*b,.5*c);O(a,.5*b,0*c,.5*b,1*c,.9*b,.5*c);b=a.o;b.Od=Pi;v.q(a);return b},DCvoltageSource:function(a,b,c){a=v.s();N(a,0,.75*c,!1);a.lineTo(0,.25*c);a.moveTo(1*b,0);a.lineTo(1*b,1*c);b=a.o;v.q(a);return b},Diode:function(a,b,c){a=v.s();N(a,1*b,0,!1);a.lineTo(1*b,.5*c);a.lineTo(0,1*c);a.lineTo(0,0);a.lineTo(1*b,.5*c);a.lineTo(1*b,1*c);b=a.o;b.B=new L(0,.25);b.C=new L(.5,.75);v.q(a);return b},Wifi:function(a,b,c){var d=b,e=c;
b*=.38;c*=.6;a=v.s();var f=.8*Wc,h=.8,k=0,l=.5,d=(d-b)/2,e=(e-c)/2;N(a,k*b+d,(l+h)*c+e,!0);O(a,(k-f)*b+d,(l+h)*c+e,(k-h)*b+d,(l+f)*c+e,(k-h)*b+d,l*c+e);O(a,(k-h)*b+d,(l-f)*c+e,(k-f)*b+d,(l-h)*c+e,k*b+d,(l-h)*c+e);O(a,k*b+d,(l-h)*c+e,(k-h+.5*f)*b+d,(l-f)*c+e,(k-h+.5*f)*b+d,l*c+e);O(a,(k-h+.5*f)*b+d,(l+f)*c+e,k*b+d,(l+h)*c+e,k*b+d,(l+h)*c+e);P(a);f=.4*Wc;h=.4;k=.2;l=.5;N(a,k*b+d,(l+h)*c+e,!0);O(a,(k-f)*b+d,(l+h)*c+e,(k-h)*b+d,(l+f)*c+e,(k-h)*b+d,l*c+e);O(a,(k-h)*b+d,(l-f)*c+e,(k-f)*b+d,(l-h)*c+e,k*
b+d,(l-h)*c+e);O(a,k*b+d,(l-h)*c+e,(k-h+.5*f)*b+d,(l-f)*c+e,(k-h+.5*f)*b+d,l*c+e);O(a,(k-h+.5*f)*b+d,(l+f)*c+e,k*b+d,(l+h)*c+e,k*b+d,(l+h)*c+e);P(a);f=.2*Wc;h=.2;l=k=.5;N(a,(k-h)*b+d,l*c+e,!0);O(a,(k-h)*b+d,(l-f)*c+e,(k-f)*b+d,(l-h)*c+e,k*b+d,(l-h)*c+e);O(a,(k+f)*b+d,(l-h)*c+e,(k+h)*b+d,(l-f)*c+e,(k+h)*b+d,l*c+e);O(a,(k+h)*b+d,(l+f)*c+e,(k+f)*b+d,(l+h)*c+e,k*b+d,(l+h)*c+e);O(a,(k-f)*b+d,(l+h)*c+e,(k-h)*b+d,(l+f)*c+e,(k-h)*b+d,l*c+e);f=.4*Wc;h=.4;k=.8;l=.5;N(a,k*b+d,(l-h)*c+e,!0);O(a,(k+f)*b+d,(l-
h)*c+e,(k+h)*b+d,(l-f)*c+e,(k+h)*b+d,l*c+e);O(a,(k+h)*b+d,(l+f)*c+e,(k+f)*b+d,(l+h)*c+e,k*b+d,(l+h)*c+e);O(a,k*b+d,(l+h)*c+e,(k+h-.5*f)*b+d,(l+f)*c+e,(k+h-.5*f)*b+d,l*c+e);O(a,(k+h-.5*f)*b+d,(l-f)*c+e,k*b+d,(l-h)*c+e,k*b+d,(l-h)*c+e);P(a);f=.8*Wc;h=.8;k=1;l=.5;N(a,k*b+d,(l-h)*c+e,!0);O(a,(k+f)*b+d,(l-h)*c+e,(k+h)*b+d,(l-f)*c+e,(k+h)*b+d,l*c+e);O(a,(k+h)*b+d,(l+f)*c+e,(k+f)*b+d,(l+h)*c+e,k*b+d,(l+h)*c+e);O(a,k*b+d,(l+h)*c+e,(k+h-.5*f)*b+d,(l+f)*c+e,(k+h-.5*f)*b+d,l*c+e);O(a,(k+h-.5*f)*b+d,(l-f)*c+
e,k*b+d,(l-h)*c+e,k*b+d,(l-h)*c+e);P(a);b=a.o;v.q(a);return b},Email:function(a,b,c){a=v.s();N(a,0,0,!0);a.lineTo(1*b,0);a.lineTo(1*b,1*c);a.lineTo(0,1*c);a.lineTo(0,0);P(a);N(a,0,0,!1);a.lineTo(.5*b,.6*c);a.lineTo(1*b,0);a.moveTo(0,1*c);a.lineTo(.45*b,.54*c);a.moveTo(1*b,1*c);a.lineTo(.55*b,.54*c);a.Ya(!1);b=a.o;v.q(a);return b},Ethernet:function(a,b,c){a=v.s();N(a,.35*b,0,!0);a.lineTo(.65*b,0);a.lineTo(.65*b,.4*c);a.lineTo(.35*b,.4*c);a.lineTo(.35*b,0);P(a);N(a,.1*b,1*c,!0,!0);a.lineTo(.4*b,1*c);
a.lineTo(.4*b,.6*c);a.lineTo(.1*b,.6*c);a.lineTo(.1*b,1*c);P(a);N(a,.6*b,1*c,!0,!0);a.lineTo(.9*b,1*c);a.lineTo(.9*b,.6*c);a.lineTo(.6*b,.6*c);a.lineTo(.6*b,1*c);P(a);N(a,0,.5*c,!1);a.lineTo(1*b,.5*c);a.moveTo(.5*b,.5*c);a.lineTo(.5*b,.4*c);a.moveTo(.75*b,.5*c);a.lineTo(.75*b,.6*c);a.moveTo(.25*b,.5*c);a.lineTo(.25*b,.6*c);a.Ya(!1);b=a.o;v.q(a);return b},Power:function(a,b,c){a=v.s();var d=.4*Wc,e=.4,f=v.L(),h=v.L(),k=v.L(),l=v.L();Sd(.5,.5-e,.5+d,.5-e,.5+e,.5-d,.5+e,.5,.5,f,f,h,k,l);var m=v.Mb(h.x,
h.y);N(a,h.x*b,h.y*c,!0);O(a,k.x*b,k.y*c,l.x*b,l.y*c,(.5+e)*b,.5*c);O(a,(.5+e)*b,(.5+d)*c,(.5+d)*b,(.5+e)*c,.5*b,(.5+e)*c);O(a,(.5-d)*b,(.5+e)*c,(.5-e)*b,(.5+d)*c,(.5-e)*b,.5*c);Sd(.5-e,.5,.5-e,.5-d,.5-d,.5-e,.5,.5-e,.5,k,l,h,f,f);O(a,k.x*b,k.y*c,l.x*b,l.y*c,h.x*b,h.y*c);d=.3*Wc;e=.3;Sd(.5-e,.5,.5-e,.5-d,.5-d,.5-e,.5,.5-e,.5,k,l,h,f,f);a.lineTo(h.x*b,h.y*c);O(a,l.x*b,l.y*c,k.x*b,k.y*c,(.5-e)*b,.5*c);O(a,(.5-e)*b,(.5+d)*c,(.5-d)*b,(.5+e)*c,.5*b,(.5+e)*c);O(a,(.5+d)*b,(.5+e)*c,(.5+e)*b,(.5+d)*c,(.5+
e)*b,.5*c);Sd(.5,.5-e,.5+d,.5-e,.5+e,.5-d,.5+e,.5,.5,f,f,h,k,l);O(a,l.x*b,l.y*c,k.x*b,k.y*c,h.x*b,h.y*c);P(a);N(a,.45*b,0,!0);a.lineTo(.45*b,.5*c);a.lineTo(.55*b,.5*c);a.lineTo(.55*b,0);P(a);v.v(f);v.v(h);v.v(k);v.v(l);v.v(m);b=a.o;b.B=new L(.25,.55);b.C=new L(.75,.8);v.q(a);return b},Fallout:function(a,b,c){a=v.s();var d=.5*Wc;N(a,0*b,.5*c,!0);O(a,0*b,(.5-d)*c,(.5-d)*b,0*c,.5*b,0*c);O(a,(.5+d)*b,0*c,1*b,(.5-d)*c,1*b,.5*c);O(a,1*b,(.5+d)*c,(.5+d)*b,1*c,.5*b,1*c);O(a,(.5-d)*b,1*c,0*b,(.5+d)*c,0*b,
.5*c);var e=d=0;N(a,(.3+d)*b,(.8+e)*c,!0,!0);a.lineTo((.5+d)*b,(.5+e)*c);a.lineTo((.1+d)*b,(.5+e)*c);a.lineTo((.3+d)*b,(.8+e)*c);d=.4;e=0;P(a);N(a,(.3+d)*b,(.8+e)*c,!0,!0);a.lineTo((.5+d)*b,(.5+e)*c);a.lineTo((.1+d)*b,(.5+e)*c);a.lineTo((.3+d)*b,(.8+e)*c);d=.2;e=-.3;P(a);N(a,(.3+d)*b,(.8+e)*c,!0,!0);a.lineTo((.5+d)*b,(.5+e)*c);a.lineTo((.1+d)*b,(.5+e)*c);a.lineTo((.3+d)*b,(.8+e)*c);P(a);b=a.o;b.Od=Pi;v.q(a);return b},IrritationHazard:function(a,b,c){a=v.s();N(a,.2*b,0*c,!0);a.lineTo(.5*b,.3*c);a.lineTo(.8*
b,0*c);a.lineTo(1*b,.2*c);a.lineTo(.7*b,.5*c);a.lineTo(1*b,.8*c);a.lineTo(.8*b,1*c);a.lineTo(.5*b,.7*c);a.lineTo(.2*b,1*c);a.lineTo(0*b,.8*c);a.lineTo(.3*b,.5*c);a.lineTo(0*b,.2*c);P(a);b=a.o;b.B=new L(.3,.3);b.C=new L(.7,.7);v.q(a);return b},ElectricalHazard:function(a,b,c){a=v.s();N(a,.37*b,0*c,!0);a.lineTo(.5*b,.11*c);a.lineTo(.77*b,.04*c);a.lineTo(.33*b,.49*c);a.lineTo(1*b,.37*c);a.lineTo(.63*b,.86*c);a.lineTo(.77*b,.91*c);a.lineTo(.34*b,1*c);a.lineTo(.34*b,.78*c);a.lineTo(.44*b,.8*c);a.lineTo(.65*
b,.56*c);a.lineTo(0*b,.68*c);P(a);b=a.o;v.q(a);return b},FireHazard:function(a,b,c){a=v.s();N(a,.1*b,1*c,!0);O(a,-.25*b,.63*c,.45*b,.44*c,.29*b,0*c);O(a,.48*b,.17*c,.54*b,.35*c,.51*b,.42*c);O(a,.59*b,.29*c,.58*b,.28*c,.59*b,.18*c);O(a,.8*b,.34*c,.88*b,.43*c,.75*b,.6*c);O(a,.87*b,.48*c,.88*b,.43*c,.88*b,.31*c);O(a,1.17*b,.76*c,.82*b,.8*c,.9*b,1*c);P(a);b=a.o;b.B=new L(.05,.645);b.C=new L(.884,.908);v.q(a);return b},BpmnActivityLoop:function(a,b,c){a=v.s();var d=4*(Math.SQRT2-1)/3*.5;N(a,.65*b,1*c,
!1);O(a,(1-d+0)*b,1*c,1*b,(.5+d+0)*c,1*b,.5*c);O(a,1*b,(.5-d+0)*c,(.5+d+0)*b,0*c,.5*b,0*c);O(a,(.5-d+0)*b,0*c,0*b,(.5-d+0)*c,0*b,.5*c);O(a,0*b,(.5+d+0)*c,(.5-d+0)*b,1*c,.35*b,.98*c);a.moveTo(.25*b,.8*c);a.lineTo(.35*b,1*c);a.lineTo(.1*b,1*c);b=a.o;v.q(a);return b},BpmnActivityParallel:function(a,b,c){a=v.s();N(a,0,0,!1);a.lineTo(0,1*c);a.moveTo(.5*b,0);a.lineTo(.5*b,1*c);a.moveTo(1*b,0);a.lineTo(1*b,1*c);b=a.o;v.q(a);return b},BpmnActivitySequential:function(a,b,c){a=v.s();N(a,0,0,!1);a.lineTo(1*
b,0);a.moveTo(0,.5*c);a.lineTo(1*b,.5*c);a.moveTo(0,1*c);a.lineTo(1*b,1*c);b=a.o;v.q(a);return b},BpmnActivityAdHoc:function(a,b,c){a=v.s();N(a,0,0,!1);N(a,1*b,1*c,!1);N(a,0,.5*c,!1);O(a,.2*b,.35*c,.3*b,.35*c,.5*b,.5*c);O(a,.7*b,.65*c,.8*b,.65*c,1*b,.5*c);b=a.o;v.q(a);return b},BpmnActivityCompensation:function(a,b,c){a=v.s();N(a,0,.5*c,!0);a.lineTo(.5*b,0);a.lineTo(.5*b,.5*c);a.lineTo(1*b,1*c);a.lineTo(1*b,0);a.lineTo(.5*b,.5*c);a.lineTo(.5*b,1*c);P(a);b=a.o;v.q(a);return b},BpmnTaskMessage:function(a,
b,c){a=v.s();N(a,0,.2*c,!0);a.lineTo(1*b,.2*c);a.lineTo(1*b,.8*c);a.lineTo(0,.8*c);a.lineTo(0,.8*c);P(a);N(a,0,.2*c,!1);a.lineTo(.5*b,.5*c);a.lineTo(1*b,.2*c);a.Ya(!1);b=a.o;v.q(a);return b},BpmnTaskScript:function(a,b,c){a=v.s();N(a,.7*b,1*c,!0);a.lineTo(.3*b,1*c);O(a,.6*b,.5*c,0,.5*c,.3*b,0);a.lineTo(.7*b,0);O(a,.4*b,.5*c,1*b,.5*c,.7*b,1*c);P(a);N(a,.45*b,.73*c,!1);a.lineTo(.7*b,.73*c);a.moveTo(.38*b,.5*c);a.lineTo(.63*b,.5*c);a.moveTo(.31*b,.27*c);a.lineTo(.56*b,.27*c);a.Ya(!1);b=a.o;v.q(a);return b},
BpmnTaskUser:function(a,b,c){a=v.s();N(a,0,0,!1);N(a,.335*b,(1-.555)*c,!0);a.lineTo(.335*b,.595*c);a.lineTo(.665*b,.595*c);a.lineTo(.665*b,(1-.555)*c);O(a,.88*b,.46*c,.98*b,.54*c,1*b,.68*c);a.lineTo(1*b,1*c);a.lineTo(0,1*c);a.lineTo(0,.68*c);O(a,.02*b,.54*c,.12*b,.46*c,.335*b,(1-.555)*c);a.lineTo(.365*b,.405*c);var d=.5-.285,e=Math.PI/4,f=4*(1-Math.cos(e))/(3*Math.sin(e)),e=f*d,f=f*d;O(a,(.5-(e+d)/2)*b,(d+(d+f)/2)*c,(.5-d)*b,(d+f)*c,(.5-d)*b,d*c);O(a,(.5-d)*b,(d-f)*c,(.5-e)*b,(d-d)*c,.5*b,(d-d)*c);
O(a,(.5+e)*b,(d-d)*c,(.5+d)*b,(d-f)*c,(.5+d)*b,d*c);O(a,(.5+d)*b,(d+f)*c,(.5+(e+d)/2)*b,(d+(d+f)/2)*c,.635*b,.405*c);a.lineTo(.635*b,.405*c);a.lineTo(.665*b,(1-.555)*c);a.lineTo(.665*b,.595*c);a.lineTo(.335*b,.595*c);N(a,.2*b,1*c,!1);a.lineTo(.2*b,.8*c);N(a,.8*b,1*c,!1);a.lineTo(.8*b,.8*c);b=a.o;v.q(a);return b},BpmnEventConditional:function(a,b,c){a=v.s();N(a,.1*b,0,!0);a.lineTo(.9*b,0);a.lineTo(.9*b,1*c);a.lineTo(.1*b,1*c);P(a);N(a,.2*b,.2*c,!1);a.lineTo(.8*b,.2*c);a.moveTo(.2*b,.4*c);a.lineTo(.8*
b,.4*c);a.moveTo(.2*b,.6*c);a.lineTo(.8*b,.6*c);a.moveTo(.2*b,.8*c);a.lineTo(.8*b,.8*c);a.Ya(!1);b=a.o;v.q(a);return b},BpmnEventError:function(a,b,c){a=v.s();N(a,0,1*c,!0);a.lineTo(.33*b,0);a.lineTo(.66*b,.5*c);a.lineTo(1*b,0);a.lineTo(.66*b,1*c);a.lineTo(.33*b,.5*c);P(a);b=a.o;v.q(a);return b},BpmnEventEscalation:function(a,b,c){a=v.s();N(a,0,0,!1);N(a,1*b,1*c,!1);N(a,.1*b,1*c,!0);a.lineTo(.5*b,0);a.lineTo(.9*b,1*c);a.lineTo(.5*b,.5*c);P(a);b=a.o;v.q(a);return b},BpmnEventTimer:function(a,b,c){a=
v.s();var d=.5*Wc;N(a,1*b,.5*c,!0);O(a,1*b,(.5+d)*c,(.5+d)*b,1*c,.5*b,1*c);O(a,(.5-d)*b,1*c,0,(.5+d)*c,0,.5*c);O(a,0,(.5-d)*c,(.5-d)*b,0,.5*b,0);O(a,(.5+d)*b,0,1*b,(.5-d)*c,1*b,.5*c);N(a,.5*b,0,!1);a.lineTo(.5*b,.15*c);a.moveTo(.5*b,1*c);a.lineTo(.5*b,.85*c);a.moveTo(0,.5*c);a.lineTo(.15*b,.5*c);a.moveTo(1*b,.5*c);a.lineTo(.85*b,.5*c);a.moveTo(.5*b,.5*c);a.lineTo(.58*b,.1*c);a.moveTo(.5*b,.5*c);a.lineTo(.78*b,.54*c);a.Ya(!1);b=a.o;b.Od=Pi;v.q(a);return b}},Wo;for(Wo in ko)ko[Wo.toLowerCase()]=Wo;
var Xo={"":"",Standard:"F1 m 0,0 l 8,4 -8,4 2,-4 z",Backward:"F1 m 8,0 l -2,4 2,4 -8,-4 z",Triangle:"F1 m 0,0 l 8,4.62 -8,4.62 z",BackwardTriangle:"F1 m 8,4 l 0,4 -8,-4 8,-4 0,4 z",Boomerang:"F1 m 0,0 l 8,4 -8,4 4,-4 -4,-4 z",BackwardBoomerang:"F1 m 8,0 l -8,4 8,4 -4,-4 4,-4 z",SidewaysV:"m 0,0 l 8,4 -8,4 0,-1 6,-3 -6,-3 0,-1 z",BackwardV:"m 8,0 l -8,4 8,4 0,-1 -6,-3 6,-3 0,-1 z",OpenTriangle:"m 0,0 l 8,4 -8,4",BackwardOpenTriangle:"m 8,0 l -8,4 8,4",OpenTriangleLine:"m 0,0 l 8,4 -8,4 m 8.5,0 l 0,-8",
BackwardOpenTriangleLine:"m 8,0 l  -8,4 8,4 m -8.5,0 l 0,-8",OpenTriangleTop:"m 0,0 l 8,4 m 0,4",BackwardOpenTriangleTop:"m 8,0 l -8,4 m 0,4",OpenTriangleBottom:"m 0,8 l 8,-4",BackwardOpenTriangleBottom:"m 0,4 l 8,4",HalfTriangleTop:"F1 m 0,0 l 0,4 8,0 z m 0,8",BackwardHalfTriangleTop:"F1 m 8,0 l 0,4 -8,0 z m 0,8",HalfTriangleBottom:"F1 m 0,4 l 0,4 8,-4 z",BackwardHalfTriangleBottom:"F1 m 8,4 l 0,4 -8,-4 z",ForwardSemiCircle:"m 4,0 b 270 180 0 4 4",BackwardSemiCircle:"m 4,8 b 90 180 0 -4 4",Feather:"m 0,0 l 3,4 -3,4",
BackwardFeather:"m 3,0 l -3,4 3,4",DoubleFeathers:"m 0,0 l 3,4 -3,4 m 3,-8 l 3,4 -3,4",BackwardDoubleFeathers:"m 3,0 l -3,4 3,4 m 3,-8 l -3,4 3,4",TripleFeathers:"m 0,0 l 3,4 -3,4 m 3,-8 l 3,4 -3,4 m 3,-8 l 3,4 -3,4",BackwardTripleFeathers:"m 3,0 l -3,4 3,4 m 3,-8 l -3,4 3,4 m 3,-8 l -3,4 3,4",ForwardSlash:"m 0,8 l 5,-8",BackSlash:"m 0,0 l 5,8",DoubleForwardSlash:"m 0,8 l 4,-8 m -2,8 l 4,-8",DoubleBackSlash:"m 0,0 l 4,8 m -2,-8 l 4,8",TripleForwardSlash:"m 0,8 l 4,-8 m -2,8 l 4,-8 m -2,8 l 4,-8",
TripleBackSlash:"m 0,0 l 4,8 m -2,-8 l 4,8 m -2,-8 l 4,8",Fork:"m 0,4 l 8,0 m -8,0 l 8,-4 m -8,4 l 8,4",BackwardFork:"m 8,4 l -8,0 m 8,0 l -8,-4 m 8,4 l -8,4",LineFork:"m 0,0 l 0,8 m 0,-4 l 8,0 m -8,0 l 8,-4 m -8,4 l 8,4",BackwardLineFork:"m 8,4 l -8,0 m 8,0 l -8,-4 m 8,4 l -8,4 m 8,-8 l 0,8",CircleFork:"F1 m 6,4 b 0 360 -3 0 3 z m 0,0 l 6,0 m -6,0 l 6,-4 m -6,4 l 6,4",BackwardCircleFork:"F1 m 0,4 l 6,0 m -6,-4 l 6,4 m -6,4 l 6,-4 m 6,0 b 0 360 -3 0 3",CircleLineFork:"F1 m 6,4 b 0 360 -3 0 3 z m 1,-4 l 0,8 m 0,-4 l 6,0 m -6,0 l 6,-4 m -6,4 l 6,4",
BackwardCircleLineFork:"F1 m 0,4 l 6,0 m -6,-4 l 6,4 m -6,4 l 6,-4 m 0,-4 l 0,8 m 7,-4 b 0 360 -3 0 3",Circle:"F1 m 8,4 b 0 360 -4 0 4 z",Block:"F1 m 0,0 l 0,8 8,0 0,-8 z",StretchedDiamond:"F1 m 0,3 l 5,-3 5,3 -5,3 -5,-3 z",Diamond:"F1 m 0,4 l 4,-4 4,4 -4,4 -4,-4 z",Chevron:"F1 m 0,0 l 5,0 3,4 -3,4 -5,0 3,-4 -3,-4 z",StretchedChevron:"F1 m 0,0 l 8,0 3,4 -3,4 -8,0 3,-4 -3,-4 z",NormalArrow:"F1 m 0,2 l 4,0 0,-2 4,4 -4,4 0,-2 -4,0 z",X:"m 0,0 l 8,8 m 0,-8 l -8,8",TailedNormalArrow:"F1 m 0,0 l 2,0 1,2 3,0 0,-2 2,4 -2,4 0,-2 -3,0 -1,2 -2,0 1,-4 -1,-4 z",
DoubleTriangle:"F1 m 0,0 l 4,4 -4,4 0,-8 z  m 4,0 l 4,4 -4,4 0,-8 z",BigEndArrow:"F1 m 0,0 l 5,2 0,-2 3,4 -3,4 0,-2 -5,2 0,-8 z",ConcaveTailArrow:"F1 m 0,2 h 4 v -2 l 4,4 -4,4 v -2 h -4 l 2,-2 -2,-2 z",RoundedTriangle:"F1 m 0,1 a 1,1 0 0 1 1,-1 l 7,3 a 0.5,1 0 0 1 0,2 l -7,3 a 1,1 0 0 1 -1,-1 l 0,-6 z",SimpleArrow:"F1 m 1,2 l -1,-2 2,0 1,2 -1,2 -2,0 1,-2 5,0 0,-2 2,2 -2,2 0,-2 z",AccelerationArrow:"F1 m 0,0 l 0,8 0.2,0 0,-8 -0.2,0 z m 2,0 l 0,8 1,0 0,-8 -1,0 z m 3,0 l 2,0 2,4 -2,4 -2,0 0,-8 z",BoxArrow:"F1 m 0,0 l 4,0 0,2 2,0 0,-2 2,4 -2,4 0,-2 -2,0 0,2 -4,0 0,-8 z",
TriangleLine:"F1 m 8,4 l -8,-4 0,8 8,-4 z m 0.5,4 l 0,-8",CircleEndedArrow:"F1 m 10,4 l -2,-3 0,2 -2,0 0,2 2,0 0,2 2,-3 z m -4,0 b 0 360 -3 0 3 z",DynamicWidthArrow:"F1 m 0,3 l 2,0 2,-1 2,-2 2,4 -2,4 -2,-2 -2,-1 -2,0 0,-2 z",EquilibriumArrow:"m 0,3 l 8,0 -3,-3 m 3,5 l -8,0 3,3",FastForward:"F1 m 0,0 l 3.5,4 0,-4 3.5,4 0,-4 1,0 0,8 -1,0 0,-4 -3.5,4 0,-4 -3.5,4 0,-8 z",Kite:"F1 m 0,4 l 2,-4 6,4 -6,4 -2,-4 z",HalfArrowTop:"F1 m 0,0 l 4,4 4,0 -8,-4 z m 0,8",HalfArrowBottom:"F1 m 0,8 l 4,-4 4,0 -8,4 z",
OpposingDirectionDoubleArrow:"F1 m 0,4 l 2,-4 0,2 4,0 0,-2 2,4 -2,4 0,-2 -4,0 0,2 -2,-4 z",PartialDoubleTriangle:"F1 m 0,0 4,3 0,-3 4,4 -4,4 0,-3 -4,3 0,-8 z",LineCircle:"F1 m 0,0 l 0,8 m 7 -4 b 0 360 -3 0 3 z",DoubleLineCircle:"F1 m 0,0 l 0,8 m 2,-8 l 0,8 m 7 -4 b 0 360 -3 0 3 z",TripleLineCircle:"F1 m 0,0 l 0,8 m 2,-8 l 0,8 m 2,-8 l 0,8 m 7 -4 b 0 360 -3 0 3 z",CircleLine:"F1 m 6 4 b 0 360 -3 0 3 z m 1,-4 l 0,8",DiamondCircle:"F1 m 8,4 l -4,4 -4,-4 4,-4 4,4 m 8,0 b 0 360 -4 0 4 z",PlusCircle:"F1 m 8,4 b 0 360 -4 0 4 l -8 0 z m -4 -4 l 0 8",
OpenRightTriangleTop:"m 8,0 l 0,4 -8,0 m 0,4",OpenRightTriangleBottom:"m 8,8 l 0,-4 -8,0",Line:"m 0,0 l 0,8",DoubleLine:"m 0,0 l 0,8 m 2,0 l 0,-8",TripleLine:"m 0,0 l 0,8 m 2,0 l 0,-8 m 2,0 l 0,8",PentagonArrow:"F1 m 8,4 l -4,-4 -4,0 0,8 4,0 4,-4 z"};
function oo(a){if(null!==Xo){for(var b in Xo){var c=bf(Xo[b],!1);Gd[b]=c;b.toLowerCase()!==b&&(Gd[b.toLowerCase()]=b)}Xo=null}b=Gd[a];if(void 0===b){b=a.toLowerCase();if("none"===b)return"None";b=Gd[b]}return"string"===typeof b?b:b instanceof re?a:null}
function R(a){0===arguments.length?D.call(this):D.call(this,a);this.Q=311807;this.Ik=this.fi="";this.Xr=this.Ur=this.gs=this.dr=null;this.js="";this.di=this.hs=this.qm=null;this.Wr="";this.oo=null;this.Vr=Bd;this.Yr="";this.po=null;this.me="";this.kv=this.gq=this.uk=null;this.yi=(new y(NaN,NaN)).freeze();this.ir="";this.Nk=null;this.jr=tb;this.sr=hd;this.lr=id;this.zq=null;this.er=Yo;this.sm=gd;this.rm="gray";this.pg=4;this.YB=-1;this.Ls=NaN;this.xF=new B;this.em=null;this.xj=NaN}v.Ia(R,D);
v.ea("Part",R);R.prototype.cloneProtected=function(a){D.prototype.cloneProtected.call(this,a);a.Q=this.Q&-4097|49152;a.fi=this.fi;a.Ik=this.Ik;a.dr=this.dr;a.gs=this.gs;a.Ur=this.Ur;a.Xr=this.Xr;a.js=this.js;a.hs=this.hs;a.di=null;a.Wr=this.Wr;a.Vr=this.Vr.R();a.Yr=this.Yr;a.me=this.me;a.gq=this.gq;a.yi.assign(this.yi);a.ir=this.ir;a.jr=this.jr.R();a.sr=this.sr.R();a.lr=this.lr.R();a.zq=this.zq;a.er=this.er;a.sm=this.sm.R();a.rm=this.rm;a.pg=this.pg;a.Ls=this.Ls};
R.prototype.Xh=function(a){D.prototype.Xh.call(this,a);a.ql();a.qm=null;a.oo=null;a.po=null;a.Nk=null;a.em=null};R.prototype.toString=function(){var a=v.af(Object.getPrototypeOf(this))+"#"+v.md(this);null!==this.data&&(a+="("+Ef(this.data)+")");return a};R.LayoutNone=0;var ml;R.LayoutAdded=ml=1;var ul;R.LayoutRemoved=ul=2;R.LayoutShown=4;R.LayoutHidden=8;R.LayoutNodeSized=16;var Yl;R.LayoutGroupLayout=Yl=32;R.LayoutNodeReplaced=64;var Yo;R.LayoutStandard=Yo=ml|ul|28|Yl|64;R.LayoutAll=16777215;
R.prototype.$m=function(a,b,c,d,e,f,h){var k=this.g;null!==k&&(a===Cf&&"elements"===b?e instanceof D?nl(e,function(a){pl(k,a);ol(k,a)}):e instanceof kk&&Kl(k,e):a===Df&&"elements"===b&&(e instanceof D?nl(e,function(a){tl(k,a);sl(k,a)}):e instanceof kk&&Ll(k,e)),k.Lc(a,b,c,d,e,f,h))};R.prototype.updateTargetBindings=R.prototype.Hb=function(a){D.prototype.Hb.call(this,a);if(null!==this.data){a=this.ya.n;for(var b=a.length,c=0;c<b;c++){var d=a[c];d instanceof D&&nl(d,function(a){null!==a.data&&a.Hb()})}}};
R.prototype.updateRelationshipsFromData=function(){var a=this.data;if(null!==a){var b=this.g;if(null!==b){var c=b.ba;if(c instanceof Q){var d=c.Nm(a),b=b.OG(d),e=this.Sa;b!==e&&(b=null!==e?c.gb(e.data):void 0,e=c.tp,"function"===typeof e?e(a,b):a[e]=b,c.kx(a,d))}}}};v.u(R,{fw:"adornments"},function(){return null===this.di?xa:this.di.kE});R.prototype.findAdornment=R.prototype.Uo=function(a){var b=this.di;return null===b?null:b.ja(a)};
R.prototype.addAdornment=R.prototype.Wk=function(a,b){if(null!==b){var c=null,d=this.di;null!==d&&(c=d.ja(a));if(c!==b){if(null!==c){var e=c.g;null!==e&&e.remove(c)}null===d&&(this.di=d=new na("string",Tg));b.fi!==a&&(b.gc=a);d.add(a,b);c=this.g;null!==c&&(c.add(b),b.data=this.data)}}};R.prototype.removeAdornment=R.prototype.$i=function(a){var b=this.di;if(null!==b){var c=b.ja(a);if(null!==c){var d=c.g;null!==d&&d.remove(c)}b.remove(a);0===b.count&&(this.di=null)}};
R.prototype.clearAdornments=R.prototype.Us=function(){var a=this.di;if(null!==a){for(var b=v.jb(),a=a.i;a.next();)b.push(a.key);for(var a=b.length,c=0;c<a;c++)this.$i(b[c]);v.sa(b)}};
R.prototype.updateAdornments=function(){var a=this.g;if(null!==a){a:{if(this.hb&&this.sI){var b=this.Vt;if(!(null!==b&&this.V.G()&&this.isVisible()&&b.wl()&&b.V.G()))break a;var c=this.Uo("Selection");if(null===c){c=this.tI;null===c&&(c=this instanceof W?a.FH:this instanceof V?a.$G:a.WH);if(!(c instanceof Tg))break a;Vg(c);c=c.copy();null!==c&&(c.gc="Selection",c.Yb=b)}if(null!==c){var d=c.placeholder;if(null!==d){var e=b.Ti(),f=0;b instanceof X&&(f=b.lb);var h=v.Fl();h.m((b.Ha.width+f)*e,(b.Ha.height+
f)*e);d.wa=h;v.Yj(h)}c.angle=b.nl();c.type!==xi&&(d=v.L(),c.location=b.Xa(tb,d),v.v(d));this.Wk("Selection",c);break a}}this.$i("Selection")}Zo(this,a);for(a=this.fw;a.next();)b=a.value,b.Hb(),b.P()}};function Zo(a,b){b.Za.Oe.each(function(b){b.isEnabled&&b.updateAdornments(a)});b.Za.updateAdornments(a)}v.u(R,{layer:"layer"},function(){return this.kv});v.u(R,{g:"diagram"},function(){var a=this.kv;return null!==a?a.g:null});
v.defineProperty(R,{Uf:"layerName"},function(){return this.Ik},function(a){var b=this.Ik;if(b!==a){v.j(a,"string",R,"layerName");var c=this.g;if(null===c||null!==c.ct(a)&&!c.Qp)if(this.Ik=a,null!==c&&c.pc(),this.h("layerName",b,a),b=this.layer,null!==b&&b.name!==a&&(c=b.g,null!==c&&(a=c.ct(a),null!==a&&a!==b))){var d=b.Me(-1,this,!0);0<=d&&c.Lc(Df,"parts",b,this,null,d,!0);b.visible!==a.visible&&this.od(a.visible);d=a.dp(99999999,this,!0);0<=d&&c.Lc(Cf,"parts",a,null,this,!0,d);d=this.yt;if(null!==
d){var e=c.Qa;c.Qa=!0;d(this,b,a);c.Qa=e}}}});v.defineProperty(R,{yt:"layerChanged"},function(){return this.dr},function(a){var b=this.dr;b!==a&&(null!==a&&v.j(a,"function",R,"layerChanged"),this.dr=a,this.h("layerChanged",b,a))});v.defineProperty(R,{kn:"zOrder"},function(){return this.Ls},function(a){var b=this.Ls;if(b!==a){v.j(a,"number",R,"zOrder");this.Ls=a;var c=this.layer;null!==c&&bk(c,-1,this);this.h("zOrder",b,a);a=this.g;null!==a&&a.pa()}});
R.prototype.invalidateAdornments=R.prototype.Qd=function(){var a=this.g;null!==a&&(xk(a),0!==(this.Q&16384)!==!0&&(this.Q|=16384,a.ve()))};function Xj(a){0!==(a.Q&16384)!==!1&&(a.updateAdornments(),a.Q&=-16385)}function Wm(a){if(!1===fl(a)){var b=a.g;null!==b&&(b.gg.add(a),a instanceof S&&!b.la.ib&&a.cf(),b.ve());$o(a,!0);a.ti()}}function ap(a){if(!1!==fl(a)){var b=a.position,c=a.location;c.G()&&b.G()||bp(a,b,c);var c=a.mc,d=c.copy();c.Oa();c.x=b.x;c.y=b.y;c.freeze();a.Sw(d,c);$o(a,!1)}}
v.u(R,{bc:"locationObject"},function(){if(null===this.Nk){var a=this.Hz;""!==a?(a=this.de(a),this.Nk=null!==a?a:this):this.Nk=this instanceof Tg?this.type!==xi&&null!==this.placeholder?this.placeholder:this:this}return this.Nk.visible?this.Nk:this});v.defineProperty(R,{PH:"minLocation"},function(){return this.sr},function(a){var b=this.sr;b.K(a)||(this.sr=a=a.R(),this.h("minLocation",b,a))});
v.defineProperty(R,{KH:"maxLocation"},function(){return this.lr},function(a){var b=this.lr;b.K(a)||(this.lr=a=a.R(),this.h("maxLocation",b,a))});v.defineProperty(R,{Hz:"locationObjectName"},function(){return this.ir},function(a){var b=this.ir;b!==a&&(this.ir=a,this.Nk=null,Qm(this),this.h("locationObjectName",b,a))});v.defineProperty(R,{ef:"locationSpot"},function(){return this.jr},function(a){var b=this.jr;b.K(a)||(this.jr=a=a.R(),Qm(this),this.h("locationSpot",b,a))});
R.prototype.move=function(a){this.position=a};R.prototype.moveTo=R.prototype.moveTo=function(a,b){var c=v.Mb(a,b);this.move(c);v.v(c)};R.prototype.isVisible=function(){if(!this.visible)return!1;var a=this.layer;if(null!==a&&!a.visible)return!1;a=this.g;if(null!==a&&(a=a.Na,a.df&&(a=a.gm.ja(this),null!==a&&a.$w)))return!0;a=this.Sa;return null===a||a.fe&&a.isVisible()?!0:!1};
R.prototype.od=function(a){var b=this.g;a?(this.H(4),this.Qd(),null!==b&&b.gg.add(this)):(this.H(8),this.Us());this.ql();null!==b&&(b.pc(),b.pa())};
R.prototype.findObject=R.prototype.de=function(a){if(this.name===a)return this;var b=this.em;null===b&&(this.em=b=new ta);if(void 0!==b[a])return b[a];for(var c=this.ya.n,d=c.length,e=0;e<d;e++){var f=c[e];if(f.name===a)return b[a]=f;if(f instanceof D)if(null===f.sj&&null===f.ig){if(f=f.de(a),null!==f)return b[a]=f}else if(Il(f)&&(f=f.ya.first(),null!==f&&f.name===a))return b[a]=f}return b[a]=null};
function cp(a,b,c,d){void 0===d&&(d=new y);c=c.te()?Ab:c;var e=b.Ha;d.m(e.width*c.x+c.offsetX,e.height*c.y+c.offsetY);if(null===b||b===a)return d;b.transform.ub(d);for(b=b.U;null!==b&&b!==a;)b.transform.ub(d),b=b.U;a.Mk.ub(d);d.offset(-a.kd.x,-a.kd.y);return d}R.prototype.ensureBounds=R.prototype.tf=function(){fj(this,Infinity,Infinity);this.Ec()};
function ak(a,b){var c=a.xF,d;isNaN(a.xj)&&(a.xj=ao(a));d=a.xj;var e=2*d;if(!a.vl)return c.m(b.x-1-d,b.y-1-d,b.width+2+e,b.height+2+e),c;d=b.x;var e=b.y,f=b.width,h=b.height,k=a.shadowBlur,l=a.yI,f=f+k,h=h+k;d-=k/2;e-=k/2;0<l.x?f+=l.x:(d+=l.x,f-=l.x);0<l.y?h+=l.y:(e+=l.y,h-=l.y);c.m(d-1,e-1,f+2,h+2);return c}
R.prototype.Ec=function(){this.ti();if(!1===el(this))ap(this);else{var a=this.mc,b=v.bg();b.assign(a);a.Oa();var c=Wj(this);this.Ni(0,0,this.kd.width,this.kd.height);var d=this.position;bp(this,d,this.location);a.x=d.x;a.y=d.y;a.freeze();this.Sw(b,a);b.K(a)?this.zf(c):!this.Rd()||K(b.width,a.width)&&K(b.height,a.height)||0<=this.YB&&this.H(16);v.Vb(b);$o(this,!1)}};
R.prototype.Sw=function(a,b){Gm(this,!1);var c=this.g;if(null!==c){var d=!1;if(!1===c.pj&&a.G()){var e=c.ae,f=c.padding,h=e.x+f.left,k=e.y+f.top,l=e.width-2*f.right,e=e.height-2*f.bottom;a.x>h&&a.y>k&&a.right<l&&a.bottom<e&&b.x>h&&b.y>k&&b.right<l&&b.bottom<e&&(d=!0)}0!==(this.Q&65536)!==!0&&a.K(b)||ql(this,d,c);c.pa();a.K(b)||this.ql()}};
v.defineProperty(R,{location:"location"},function(){return this.yi},function(a){var b=this.yi;if(!b.K(a)){a=a.R();var c;c=a;if(this instanceof W)c=!1;else{this.yi=c;if(!1===el(this)){Wm(this);var d=this.kb;if(d.G()){var e=d.copy();d.m(d.x+(c.x-b.x),d.y+(c.y-b.y));dp(this,this.g,d,e);this.h("position",e,d)}}c=!0}c&&this.h("location",b,a)}});
R.prototype.lA=function(a,b){if(this instanceof W||!a.G())return!1;var c=this.g;if(null!==c&&(dp(this,c,a,b),!0===c.la.ib))return!0;this.kb=a;c=this.yi;if(c.G()){var d=c.copy();c.m(c.x+(a.x-b.x),c.y+(a.y-b.y));this.h("location",d,c)}!1===fl(this)&&!1===el(this)&&(Wm(this),ap(this));return!0};function dp(a,b,c,d){null===b||a instanceof Tg||(b=b.Na,b.uc&&Kj(b,a,"position",d.copy(),c.copy(),!1))}
R.prototype.mx=function(a,b){var c=this.yi,d=this.kb;fl(this)||el(this)?c.m(NaN,NaN):c.m(c.x+a-d.x,c.y+b-d.y);d.m(a,b);Wm(this)};
function bp(a,b,c){var d=v.L(),e=a.ef,f=a.bc;e.te()&&v.k("determineOffset: Part's locationSpot must be real: "+e.toString());var h=f.Ha,k=f instanceof X?f.lb:0;d.Zt(0,0,h.width+k,h.height+k,e);if(f!==a)for(d.offset(-k/2,-k/2),f.transform.ub(d),e=f.U;null!==e&&e!==a;)e.transform.ub(d),e=e.U;a.Mk.ub(d);d.offset(-a.kd.x,-a.kd.y);e=a.g;c.G()?(f=b.x,h=b.y,b.m(c.x-d.x,c.y-d.y),null!==e&&(c=e.Na,(k=c.qj)||!c.uc||a instanceof Tg||Kj(c,a,"position",new y(f,h),b,!1),k||b.x===f&&b.y===h||(k=e.tb,e.tb=!0,a.h("position",
new y(f,h),b),e.tb=k))):b.G()&&(f=c.copy(),c.m(b.x+d.x,b.y+d.y),c.K(f)||null===e||(k=e.tb,e.tb=!0,a.h("location",f,c),e.tb=k));v.v(d);a.ti()}function ql(a,b,c){Hm(a,!1);a instanceof S&&fm(c,a);a.layer.Gc||b||c.pc();b=a.mc;var d=c.rb;d.G()?(Wj(a)?$a(b,d)||a.zf(!1):b.yg(d)&&a.zf(!0),a.updateAdornments()):c.Ek=!0}R.prototype.ul=function(){return!0};
function Yj(a,b){var c=a.mc;if(0!==c.width&&0!==c.height&&!isNaN(c.x)&&!isNaN(c.y)&&a.isVisible()){var d=a.transform;null!==a.nc&&(Mm(a,b,a.nc,!0,!0),b.fillRect(c.x,c.y,c.width,c.height));null===a.nc&&null===a.Ib&&(Mm(a,b,"rgba(0,0,0,0.4)",!0,!1),b.fillRect(c.x,c.y,c.width,c.height));null!==a.Ib&&(d.ut()||b.transform(d.m11,d.m12,d.m21,d.m22,d.dx,d.dy),c=a.Ha,Mm(a,b,a.Ib,!0,!1),b.fillRect(0,0,c.width,c.height),d.ut()||(c=1/(d.m11*d.m22-d.m12*d.m21),b.transform(d.m22*c,-d.m12*c,-d.m21*c,d.m11*c,c*(d.m21*
d.dy-d.m22*d.dx),c*(d.m12*d.dx-d.m11*d.dy))))}}R.prototype.Rd=function(){return!0};
v.defineProperty(R,{gc:"category"},function(){return this.fi},function(a){var b=this.fi;if(b!==a){v.j(a,"string",R,"category");var c=this.g,d=this.data,e=null;if(null!==c&&null!==d&&!(this instanceof Tg)){var f=c.ba.la;f.isEnabled&&!f.ib&&(e=this.clone(),e.ya.Tc(this.ya))}this.fi=a;this.h("category",b,a);null===c||null===d||this instanceof Tg?(e=this.Nf,null!==e&&(a=e.di,null!==a&&a.remove(b),e.Wk(this.gc,this))):(f=c.ba,f.la.ib||(this instanceof W?(f instanceof Q?f.SE(d,a):f instanceof Pf&&f.wI(d,
a),c=Sl(c,a),null!==c&&(Vg(c),c=c.copy(),null!==c&&ep(this,c,b,a))):(null!==f&&f.ix(d,a),c=Pl(c,d,a),null!==c&&(Vg(c),c=c.copy(),null===c||c instanceof W||(c.location=this.location,ep(this,c,b,a)))),null!==e&&(b=this.clone(),b.ya.Tc(this.ya),this.h("self",e,b))))}});v.defineProperty(R,{self:"self"},function(){return this},function(a){ep(this,a,this.gc,a.gc)});var fp=!1;
function ep(a,b,c,d){b.constructor===a.constructor||fp||(fp=!0,v.trace('Should not change the class of the Part when changing category from "'+c+'" to "'+d+'"'),v.trace("  Old class: "+v.af(a)+", new class: "+v.af(b)+", part: "+a.toString()));a.Us();var e=a.data;c=a.Uf;var f=a.hb,h=a.gh,k=!0,l=!0,m=!1;if(a instanceof S)var n=a,k=n.Xi,l=n.nd,m=n.gu;b.Xh(a);b.cloneProtected(a);a.fi=d;a.P();a.pa();b=a.g;d=!0;null!==b&&(d=b.tb,b.tb=!0);a.ke=e;null!==e&&a.Hb();null!==b&&(b.tb=d);e=a.Uf;e!==c&&(a.Ik=c,
a.Uf=e);a instanceof S&&(n=a,n.Xi=k,n.nd=l,n.gu=m,n.Rd()&&n.H(64));a.hb=f;a.gh=h}R.prototype.canCopy=function(){if(!this.xG)return!1;var a=this.layer;if(null===a)return!0;if(!a.Tj)return!1;a=a.g;return null===a?!0:a.Tj?!0:!1};R.prototype.canDelete=function(){if(!this.CG)return!1;var a=this.layer;if(null===a)return!0;if(!a.ym)return!1;a=a.g;return null===a?!0:a.ym?!0:!1};
R.prototype.canEdit=function(){if(!this.FI)return!1;var a=this.layer;if(null===a)return!0;if(!a.jw)return!1;a=a.g;return null===a?!0:a.jw?!0:!1};R.prototype.canGroup=function(){if(!this.aH)return!1;var a=this.layer;if(null===a)return!0;if(!a.gw)return!1;a=a.g;return null===a?!0:a.gw?!0:!1};R.prototype.canMove=function(){if(!this.UH)return!1;var a=this.layer;if(null===a)return!0;if(!a.$k)return!1;a=a.g;return null===a?!0:a.$k?!0:!1};
R.prototype.canReshape=function(){if(!this.hI)return!1;var a=this.layer;if(null===a)return!0;if(!a.hw)return!1;a=a.g;return null===a?!0:a.hw?!0:!1};R.prototype.canResize=function(){if(!this.iI)return!1;var a=this.layer;if(null===a)return!0;if(!a.Ts)return!1;a=a.g;return null===a?!0:a.Ts?!0:!1};R.prototype.canRotate=function(){if(!this.lI)return!1;var a=this.layer;if(null===a)return!0;if(!a.iw)return!1;a=a.g;return null===a?!0:a.iw?!0:!1};
R.prototype.canSelect=function(){if(!this.Al)return!1;var a=this.layer;if(null===a)return!0;if(!a.of)return!1;a=a.g;return null===a?!0:a.of?!0:!1};v.defineProperty(R,{xG:"copyable"},function(){return 0!==(this.Q&1)},function(a){var b=0!==(this.Q&1);b!==a&&(this.Q^=1,this.h("copyable",b,a))});v.defineProperty(R,{CG:"deletable"},function(){return 0!==(this.Q&2)},function(a){var b=0!==(this.Q&2);b!==a&&(this.Q^=2,this.h("deletable",b,a))});
v.defineProperty(R,{FI:"textEditable"},function(){return 0!==(this.Q&4)},function(a){var b=0!==(this.Q&4);b!==a&&(this.Q^=4,this.h("textEditable",b,a),this.Qd())});v.defineProperty(R,{aH:"groupable"},function(){return 0!==(this.Q&8)},function(a){var b=0!==(this.Q&8);b!==a&&(this.Q^=8,this.h("groupable",b,a))});v.defineProperty(R,{UH:"movable"},function(){return 0!==(this.Q&16)},function(a){var b=0!==(this.Q&16);b!==a&&(this.Q^=16,this.h("movable",b,a))});
v.defineProperty(R,{sI:"selectionAdorned"},function(){return 0!==(this.Q&32)},function(a){var b=0!==(this.Q&32);b!==a&&(this.Q^=32,this.h("selectionAdorned",b,a),this.Qd())});v.defineProperty(R,{Cz:"isInDocumentBounds"},function(){return 0!==(this.Q&64)},function(a){var b=0!==(this.Q&64);if(b!==a){this.Q^=64;var c=this.g;null!==c&&c.pc();this.h("isInDocumentBounds",b,a)}});
v.defineProperty(R,{fE:"isLayoutPositioned"},function(){return 0!==(this.Q&128)},function(a){var b=0!==(this.Q&128);b!==a&&(this.Q^=128,this.h("isLayoutPositioned",b,a),this.H(a?4:8))});v.defineProperty(R,{Al:"selectable"},function(){return 0!==(this.Q&256)},function(a){var b=0!==(this.Q&256);b!==a&&(this.Q^=256,this.h("selectable",b,a),this.Qd())});
v.defineProperty(R,{hI:"reshapable"},function(){return 0!==(this.Q&512)},function(a){var b=0!==(this.Q&512);b!==a&&(this.Q^=512,this.h("reshapable",b,a),this.Qd())});v.defineProperty(R,{iI:"resizable"},function(){return 0!==(this.Q&1024)},function(a){var b=0!==(this.Q&1024);b!==a&&(this.Q^=1024,this.h("resizable",b,a),this.Qd())});v.defineProperty(R,{lI:"rotatable"},function(){return 0!==(this.Q&2048)},function(a){var b=0!==(this.Q&2048);b!==a&&(this.Q^=2048,this.h("rotatable",b,a),this.Qd())});
v.defineProperty(R,{hb:"isSelected"},function(){return 0!==(this.Q&4096)},function(a){var b=0!==(this.Q&4096);if(b!==a){var c=this.g;if(!a||this.canSelect()&&!(null!==c&&c.selection.count>=c.LH)){this.Q^=4096;var d=!1;if(null!==c){d=c.tb;c.tb=!0;var e=c.selection;e.Oa();a?e.add(this):e.remove(this);e.freeze()}this.h("isSelected",b,a);this.Qd();a=this.uI;null!==a&&a(this);null!==c&&(c.ve(),c.tb=d)}}});
v.defineProperty(R,{gh:"isHighlighted"},function(){return 0!==(this.Q&524288)},function(a){var b=0!==(this.Q&524288);if(b!==a){this.Q^=524288;var c=this.g;null!==c&&(c=c.Pm,c.Oa(),a?c.add(this):c.remove(this),c.freeze());this.h("isHighlighted",b,a);this.pa()}});v.defineProperty(R,{vl:"isShadowed"},function(){return 0!==(this.Q&8192)},function(a){var b=0!==(this.Q&8192);b!==a&&(this.Q^=8192,this.h("isShadowed",b,a),this.pa())});function fl(a){return 0!==(a.Q&32768)}
function $o(a,b){a.Q=b?a.Q|32768:a.Q&-32769}function Hm(a,b){a.Q=b?a.Q|65536:a.Q&-65537}function Wj(a){return 0!==(a.Q&131072)}R.prototype.zf=function(a){this.Q=a?this.Q|131072:this.Q&-131073};function gp(a,b){a.Q=b?a.Q|1048576:a.Q&-1048577}v.defineProperty(R,{YD:"isAnimated"},function(){return 0!==(this.Q&262144)},function(a){var b=0!==(this.Q&262144);b!==a&&(this.Q^=262144,this.h("isAnimated",b,a))});
v.defineProperty(R,{hA:"selectionObjectName"},function(){return this.js},function(a){var b=this.js;b!==a&&(this.js=a,this.qm=null,this.h("selectionObjectName",b,a))});v.defineProperty(R,{tI:"selectionAdornmentTemplate"},function(){return this.gs},function(a){var b=this.gs;b!==a&&(this instanceof W&&(a.type=xi),this.gs=a,this.h("selectionAdornmentTemplate",b,a))});
v.u(R,{Vt:"selectionObject"},function(){if(null===this.qm){var a=this.hA;null!==a&&""!==a?(a=this.de(a),this.qm=null!==a?a:this):this instanceof W?(a=this.path,this.qm=null!==a?a:this):this.qm=this}return this.qm});v.defineProperty(R,{uI:"selectionChanged"},function(){return this.hs},function(a){var b=this.hs;b!==a&&(null!==a&&v.j(a,"function",R,"selectionChanged"),this.hs=a,this.h("selectionChanged",b,a))});
v.defineProperty(R,{GE:"resizeAdornmentTemplate"},function(){return this.Ur},function(a){var b=this.Ur;b!==a&&(this.Ur=a,this.h("resizeAdornmentTemplate",b,a))});v.defineProperty(R,{IE:"resizeObjectName"},function(){return this.Wr},function(a){var b=this.Wr;b!==a&&(this.Wr=a,this.oo=null,this.h("resizeObjectName",b,a))});v.u(R,{HE:"resizeObject"},function(){if(null===this.oo){var a=this.IE;null!==a&&""!==a?(a=this.de(a),this.oo=null!==a?a:this):this.oo=this}return this.oo});
v.defineProperty(R,{jI:"resizeCellSize"},function(){return this.Vr},function(a){var b=this.Vr;b.K(a)||(this.Vr=a=a.R(),this.h("resizeCellSize",b,a))});v.defineProperty(R,{mI:"rotateAdornmentTemplate"},function(){return this.Xr},function(a){var b=this.Xr;b!==a&&(this.Xr=a,this.h("rotateAdornmentTemplate",b,a))});v.defineProperty(R,{nI:"rotateObjectName"},function(){return this.Yr},function(a){var b=this.Yr;b!==a&&(this.Yr=a,this.po=null,this.h("rotateObjectName",b,a))});
v.u(R,{KE:"rotateObject"},function(){if(null===this.po){var a=this.nI;null!==a&&""!==a?(a=this.de(a),this.po=null!==a?a:this):this.po=this}return this.po});v.defineProperty(R,{text:"text"},function(){return this.me},function(a){var b=this.me;b!==a&&(this.me=a,this.h("text",b,a))});
v.defineProperty(R,{Sa:"containingGroup"},function(){return this.uk},function(a){if(this.Rd()){var b=this.uk;if(b!==a){null===a||this!==a&&!a.Zh(this)||(this===a&&v.k("Cannot make a Group a member of itself: "+this.toString()),v.k("Cannot make a Group indirectly contain itself: "+this.toString()+" already contains "+a.toString()));this.H(ul);var c=this.g;null!==b?hp(b,this):this instanceof V&&null!==c&&c.Uk.remove(this);this.uk=a;null!==a?ip(a,this):this instanceof V&&null!==c&&c.Uk.add(this);this.H(ml);
if(null!==c){var d=this.data,e=c.ba;null!==d&&e instanceof Q&&e.kx(d,e.gb(null!==a?a.data:null))}d=this.rD;null!==d&&(e=!0,null!==c&&(e=c.Qa,c.Qa=!0),d(this,b,a),null!==c&&(c.Qa=e));if(this instanceof V)for(c=new J(R),Sg(c,this,!0,0,!0),c=c.i;c.next();)if(d=c.value,d instanceof S)for(d=d.ue;d.next();)Nl(d.value);if(this instanceof S)for(d=this.ue;d.next();)Nl(d.value);this.h("containingGroup",b,a);null!==a&&(b=a.layer,null!==b&&bk(b,-1,a))}}else v.k("cannot set the Part.containingGroup of a Link or Adornment")});
g=R.prototype;g.ql=function(){var a=this.Sa;null!==a&&(a.P(),null!==a.Gb&&a.Gb.P(),a.cf())};g.pa=function(){var a=this.g;null!==a&&!el(this)&&!fl(this)&&this.isVisible()&&this.mc.G()&&a.pa(ak(this,this.mc))};g.pt=function(a){a||(a=this.uk,null!==a&&ip(a,this))};g.qt=function(a){a||(a=this.uk,null!==a&&hp(a,this))};g.Km=function(){var a=this.data;if(null!==a){var b=this.g;null!==b&&(b=b.ba,null!==b&&b.bx(a))}};
v.defineProperty(R,{rD:"containingGroupChanged"},function(){return this.gq},function(a){var b=this.gq;b!==a&&(null!==a&&v.j(a,"function",R,"containingGroupChanged"),this.gq=a,this.h("containingGroupChanged",b,a))});R.prototype.findSubGraphLevel=function(){return jp(this,this)};function jp(a,b){var c=b.Sa;return null!==c?1+jp(a,c):b instanceof S&&(c=b.ge,null!==c)?jp(a,c):0}R.prototype.findTopLevelPart=function(){return kp(this,this)};
function kp(a,b){var c=b.Sa;return null!==c?kp(a,c):b instanceof S&&(c=b.ge,null!==c)?kp(a,c):b}v.u(R,{fp:"isTopLevel"},function(){return null!==this.Sa||this instanceof S&&this.vf?!1:!0});R.prototype.isMemberOf=R.prototype.Zh=function(a){return a instanceof V?lp(this,this,a):!1};function lp(a,b,c){if(b===c||null===c)return!1;var d=b.Sa;return null===d||d!==c&&!lp(a,d,c)?b instanceof S&&(b=b.ge,null!==b)?lp(a,b,c):!1:!0}
R.prototype.findCommonContainingGroup=R.prototype.KG=function(a){if(null===a)return null;if(this===a)return this.Sa;for(var b=this;null!==b;)b instanceof V&&gp(b,!0),b=b.Sa;for(var c=null,b=a;null!==b;){if(0!==(b.Q&1048576)){c=b;break}b=b.Sa}for(b=this;null!==b;)b instanceof V&&gp(b,!1),b=b.Sa;return c};v.defineProperty(R,{AH:"layoutConditions"},function(){return this.er},function(a){var b=this.er;b!==a&&(this.er=a,this.h("layoutConditions",b,a))});
R.prototype.canLayout=function(){if(!this.fE||!this.isVisible())return!1;var a=this.layer;return null!==a&&a.Gc||this instanceof S&&this.vf?!1:!0};R.prototype.invalidateLayout=R.prototype.H=function(a){void 0===a&&(a=16777215);var b;this.fE&&0!==(a&this.AH)?(b=this.layer,null!==b&&b.Gc||this instanceof S&&this.vf?b=!1:(b=this.g,b=null!==b&&b.la.ib?!1:!0)):b=!1;if(b)if(b=this.uk,null!==b){var c=b.Pb;null!==c?c.H():b.H(a)}else a=this.g,null!==a&&(c=a.Pb,null!==c&&c.H())};
function rl(a){if(!a.isVisible())return!1;a=a.layer;return null!==a&&a.Gc?!1:!0}v.defineProperty(R,{CD:"dragComputation"},function(){return this.zq},function(a){var b=this.zq;b!==a&&(null!==a&&v.j(a,"function",R,"dragComputation"),this.zq=a,this.h("dragComputation",b,a))});v.defineProperty(R,{yI:"shadowOffset"},function(){return this.sm},function(a){var b=this.sm;b.K(a)||(this.sm=a=a.R(),this.pa(),this.h("shadowOffset",b,a))});
v.defineProperty(R,{shadowColor:"shadowColor"},function(){return this.rm},function(a){var b=this.rm;b!==a&&(this.rm=a,this.pa(),this.h("shadowColor",b,a))});v.defineProperty(R,{shadowBlur:"shadowBlur"},function(){return this.pg},function(a){var b=this.pg;b!==a&&(this.pg=a,this.pa(),this.h("shadowBlur",b,a))});function Tg(a){0===arguments.length?R.call(this,Si):R.call(this,a);this.Q&=-257;this.Ik="Adornment";this.Gb=this.Mg=this.Db=null}v.Ia(Tg,R);v.ea("Adornment",Tg);
Tg.prototype.toString=function(){var a=this.Nf;return"Adornment("+this.gc+")"+(null!==a?a.toString():"")};Tg.prototype.updateRelationshipsFromData=function(){};Tg.prototype.Vm=function(a){var b=this.Yb.Y,c=this.Yb;if(b instanceof W&&c instanceof X){var d=b.path,c=d.Ra;b.Vm(a);c=d.Ra;a=this.ya.n;b=a.length;for(d=0;d<b;d++){var e=a[d];e.Sf&&e instanceof X&&(e.Ra=c)}}};v.u(Tg,{placeholder:"placeholder"},function(){return this.Gb});
v.defineProperty(Tg,{Yb:"adornedObject"},function(){return this.Db},function(a){var b=this.Nf,c=null;null!==a&&(c=a.Y);null===b||null!==a&&b===c||b.$i(this.gc);this.Db=a;null!==c&&c.Wk(this.gc,this)});v.u(Tg,{Nf:"adornedPart"},function(){var a=this.Db;return null!==a?a.Y:null});Tg.prototype.ul=function(){var a=this.Db;if(null===a)return!0;a=a.Y;return null===a||!el(a)};Tg.prototype.Rd=function(){return!1};v.u(Tg,{Sa:"containingGroup"},function(){return null});
Tg.prototype.$m=function(a,b,c,d,e,f,h){if(a===Cf&&"elements"===b)if(e instanceof Mi){var k=e;null===this.Gb?this.Gb=k:this.Gb!==k&&v.k("Cannot insert a second Placeholder into the visual tree of an Adornment.")}else e instanceof D&&(k=e.bt(function(a){return a instanceof Mi}),k instanceof Mi&&(null===this.Gb?this.Gb=k:this.Gb!==k&&v.k("Cannot insert a second Placeholder into the visual tree of an Adornment.")));else a===Df&&"elements"===b&&null!==this.Gb&&(d===this.Gb?this.Gb=null:d instanceof D&&
this.Gb.tl(d)&&(this.Gb=null));R.prototype.$m.call(this,a,b,c,d,e,f,h)};Tg.prototype.updateAdornments=function(){};Tg.prototype.Km=function(){};function S(a){0===arguments.length?R.call(this,Si):R.call(this,a);this.fc=new I(W);this.Zn=this.Lk=this.gr=this.fr=null;this.Yq=!0;this.Is=!1;this.Ds=null;this.Zp=this.Zq=!0;this.$p=fd;this.Yd=this.uh=null;this.Mr=mp;this.Qj=!1}v.Ia(S,R);v.ea("Node",S);
S.prototype.cloneProtected=function(a){R.prototype.cloneProtected.call(this,a);a.fr=this.fr;a.gr=this.gr;a.Lk=this.Lk;a.Yq=this.Yq;a.Is=this.Is;a.Ds=this.Ds;a.Zq=this.Zq;a.Zp=this.Zp;a.$p=this.$p.R();a.Mr=this.Mr};S.prototype.Xh=function(a){R.prototype.Xh.call(this,a);a.cf();a.uh=this.uh;a.Yd=null};var np;S.DirectionDefault=np=v.p(S,"DirectionDefault",0);S.DirectionAbsolute=v.p(S,"DirectionAbsolute",1);var op;S.DirectionRotatedNode=op=v.p(S,"DirectionRotatedNode",2);var ym;
S.DirectionRotatedNodeOrthogonal=ym=v.p(S,"DirectionRotatedNodeOrthogonal",3);S.SpreadingNone=v.p(S,"SpreadingNone",10);var mp;S.SpreadingEvenly=mp=v.p(S,"SpreadingEvenly",11);var pp;S.SpreadingPacked=pp=v.p(S,"SpreadingPacked",12);function qp(a,b){null!==b&&(null===a.uh&&(a.uh=new J(lk)),a.uh.add(b))}
function rp(a,b,c,d){if(null===b||null===a.uh)return null;for(var e=a.uh.i;e.next();){var f=e.value;if(f.sp===a&&f.It===b&&f.Vw===c&&f.Ww===d||f.sp===b&&f.It===a&&f.Vw===d&&f.Ww===c)return f}return null}S.prototype.invalidateLinkBundle=function(a,b,c){if(void 0===b||null===b)b="";if(void 0===c||null===c)c="";a=rp(this,a,b,c);null!==a&&a.Qm()};
S.prototype.$m=function(a,b,c,d,e,f,h){a===Cf&&"elements"===b?this.Yd=null:a===Df&&"elements"===b&&(null===this.g?this.Yd=null:d instanceof G&&Xn(this,d,function(a,b){Xm(a,b,!0)}));R.prototype.$m.call(this,a,b,c,d,e,f,h)};S.prototype.invalidateConnectedLinks=S.prototype.cf=function(a){void 0===a&&(a=null);for(var b=this.ue;b.next();){var c=b.value;null!==a&&a.contains(c)||(sp(this,c.bd),sp(this,c.Hd),c.ic())}};function sp(a,b){if(null!==b){b.km=null;var c=a.Sa;null===c||c.fe||sp(c,c.jl(""))}}
S.prototype.ul=function(){return!0};v.defineProperty(S,{bI:"portSpreading"},function(){return this.Mr},function(a){var b=this.Mr;b!==a&&(this.Mr=a,this.h("portSpreading",b,a),a=this.g,null!==a&&a.la.ib||this.cf())});v.defineProperty(S,{jD:"avoidable"},function(){return this.Zp},function(a){var b=this.Zp;if(b!==a){this.Zp=a;var c=this.g;null!==c&&fm(c,this);this.h("avoidable",b,a)}});
v.defineProperty(S,{gG:"avoidableMargin"},function(){return this.$p},function(a){"number"===typeof a?a=new eb(a):v.A(a,eb,S,"avoidableMargin");var b=this.$p;if(!b.K(a)){this.$p=a=a.R();var c=this.g;null!==c&&fm(c,this);this.h("avoidableMargin",b,a)}});S.prototype.canAvoid=function(){return this.jD&&!this.vf};S.prototype.getAvoidableRect=function(a){a.set(this.V);a.ew(this.gG);return a};S.prototype.findVisibleNode=function(){for(var a=this;null!==a&&!a.isVisible();)a=a.Sa;return a};
S.prototype.isVisible=function(){if(!R.prototype.isVisible.call(this))return!1;var a=!0,b=!0,c=this.g;if(null!==c){a=c.Na;if(a.df&&(a=a.gm.ja(this),null!==a&&a.$w))return!0;a=c.Sd;b=c.vA===hk}if(b){if(c=this.kl(),null!==c&&!c.nd)return!1}else if(c=a?this.MG():this.NG(),0<c.count&&c.all(function(a){return!a.nd}))return!1;c=this.ge;return null!==c?c.isVisible():!0};S.prototype.od=function(a){R.prototype.od.call(this,a);for(var b=this.ue;b.next();)b.value.od(a)};v.u(S,{ue:"linksConnected"},function(){return this.fc.i});
S.prototype.findLinksConnected=S.prototype.GD=function(a){void 0===a&&(a=null);if(null===a)return this.fc.i;var b=new Aa(this.fc),c=this;b.Ym=function(b){return b.T===c&&b.xg===a||b.Z===c&&b.rh===a};return b};S.prototype.findLinksOutOf=S.prototype.zw=function(a){void 0===a&&(a=null);var b=new Aa(this.fc),c=this;b.Ym=function(b){return b.T!==c?!1:null===a?!0:b.xg===a};return b};
S.prototype.findLinksInto=S.prototype.wg=function(a){void 0===a&&(a=null);var b=new Aa(this.fc),c=this;b.Ym=function(b){return b.Z!==c?!1:null===a?!0:b.rh===a};return b};
S.prototype.findNodesConnected=S.prototype.HD=function(a){void 0===a&&(a=null);for(var b=null,c=null,d=this.fc.i;d.next();){var e=d.value;if(e.T===this){if(null===a||e.xg===a)e=e.Z,null!==b?b.add(e):null!==c&&c!==e?(b=new J(S),b.add(c),b.add(e)):c=e}else e.Z!==this||null!==a&&e.rh!==a||(e=e.T,null!==b?b.add(e):null!==c&&c!==e?(b=new J(S),b.add(c),b.add(e)):c=e)}return null!==b?b.i:null!==c?new ya(c):xa};
S.prototype.findNodesOutOf=S.prototype.NG=function(a){void 0===a&&(a=null);for(var b=null,c=null,d=this.fc.i;d.next();){var e=d.value;e.T!==this||null!==a&&e.xg!==a||(e=e.Z,null!==b?b.add(e):null!==c&&c!==e?(b=new J(S),b.add(c),b.add(e)):c=e)}return null!==b?b.i:null!==c?new ya(c):xa};
S.prototype.findNodesInto=S.prototype.MG=function(a){void 0===a&&(a=null);for(var b=null,c=null,d=this.fc.i;d.next();){var e=d.value;e.Z!==this||null!==a&&e.rh!==a||(e=e.T,null!==b?b.add(e):null!==c&&c!==e?(b=new J(S),b.add(c),b.add(e)):c=e)}return null!==b?b.i:null!==c?new ya(c):xa};
S.prototype.findLinksBetween=function(a,b,c){void 0===b&&(b=null);void 0===c&&(c=null);var d=new Aa(this.fc),e=this;d.Ym=function(d){return(d.T!==e||d.Z!==a||null!==b&&d.xg!==b||null!==c&&d.rh!==c)&&(d.T!==a||d.Z!==e||null!==c&&d.xg!==c||null!==b&&d.rh!==b)?!1:!0};return d};S.prototype.findLinksTo=function(a,b,c){void 0===b&&(b=null);void 0===c&&(c=null);var d=new Aa(this.fc),e=this;d.Ym=function(d){return d.T!==e||d.Z!==a||null!==b&&d.xg!==b||null!==c&&d.rh===c?!1:!0};return d};
v.defineProperty(S,{CH:"linkConnected"},function(){return this.fr},function(a){var b=this.fr;b!==a&&(null!==a&&v.j(a,"function",S,"linkConnected"),this.fr=a,this.h("linkConnected",b,a))});v.defineProperty(S,{DH:"linkDisconnected"},function(){return this.gr},function(a){var b=this.gr;b!==a&&(null!==a&&v.j(a,"function",S,"linkDisconnected"),this.gr=a,this.h("linkDisconnected",b,a))});
v.defineProperty(S,{Ow:"linkValidation"},function(){return this.Lk},function(a){var b=this.Lk;b!==a&&(null!==a&&v.j(a,"function",S,"linkValidation"),this.Lk=a,this.h("linkValidation",b,a))});
function tp(a,b,c){sp(a,c);if(!a.fc.contains(b)){a.fc.add(b);var d=a.CH;if(null!==d){var e=!0,f=a.g;null!==f&&(e=f.Qa,f.Qa=!0);d(a,b,c);null!==f&&(f.Qa=e)}b.Hc&&(c=b.T,b=b.Z,null!==c&&null!==b&&c!==b&&(d=!0,f=a.g,null!==f&&(d=f.Sd),a=d?b:c,e=d?c:b,a.Qj||(a.Qj=e),!e.Xi||null!==f&&f.la.ib||(d?c===e&&(e.Xi=!1):b===e&&(e.Xi=!1))))}}
function up(a,b,c){sp(a,c);if(a.fc.remove(b)){var d=a.DH,e=a.g;if(null!==d){var f=!0;null!==e&&(f=e.Qa,e.Qa=!0);d(a,b,c);null!==e&&(e.Qa=f)}b.Hc&&(c=!0,null!==e&&(c=e.Sd),a=c?b.Z:b.T,b=c?b.T:b.Z,null!==a&&(a.Qj=!1),null===b||b.Xi||(0===b.fc.count?(b.Qj=null,null!==e&&e.la.ib||(b.Xi=!0)):Zl(b)))}}
function Zl(a){a.Qj=!1;if(0!==a.fc.count){var b=!0,c=a.g;if(null===c||!c.la.ib){null!==c&&(b=c.Sd);for(c=a.fc.i;c.next();){var d=c.value;if(d.Hc)if(b){if(d.T===a){a.Xi=!1;return}}else if(d.Z===a){a.Xi=!1;return}}a.Xi=!0}}}
S.prototype.updateRelationshipsFromData=function(){R.prototype.updateRelationshipsFromData.call(this);var a=this.data;if(null!==a){var b=this.g;if(null!==b){var c=b.ba;if(c instanceof Pf){var d=c.Om(a),b=b.Ze(d),e=this.kl();b!==e&&(b=null!==e?c.gb(e.data):void 0,e=c.vp,"function"===typeof e?e(a,b):a[e]=b,c.ph(a,d))}}}};S.prototype.pt=function(a){R.prototype.pt.call(this,a);a||(Zl(this),a=this.Zn,null!==a&&vp(a,this))};
S.prototype.qt=function(a){R.prototype.qt.call(this,a);a||(a=this.Zn,null!==a&&null!==a.De&&(a.De.remove(this),a.P()))};S.prototype.Km=function(){if(0<this.fc.count){var a=this.g;if(null!==a)for(var b=a.nb.BD,c=this.fc.copy().i;c.next();){var d=c.value;b?a.remove(d):(d.T===this&&(d.T=null),d.Z===this&&(d.Z=null))}}this.ge=null;R.prototype.Km.call(this)};v.u(S,{vf:"isLinkLabel"},function(){return null!==this.Zn});
v.defineProperty(S,{ge:"labeledLink"},function(){return this.Zn},function(a){var b=this.Zn;if(b!==a){var c=this.g,d=this.data;if(null!==b&&(null!==b.De&&(b.De.remove(this),b.P()),null!==c&&null!==d&&!c.la.ib)){var e=b.data,f=c.ba;if(null!==e&&f instanceof Q){var h=f.gb(d);void 0!==h&&f.BE(e,h)}}this.Zn=a;null!==a&&(vp(a,this),null===c||null===d||c.la.ib||(e=a.data,f=c.ba,null!==e&&f instanceof Q&&(h=f.gb(d),void 0!==h&&f.Vy(e,h))));Qm(this);this.h("labeledLink",b,a)}});
S.prototype.findPort=S.prototype.jl=function(a){if(null===this.Yd){if(""===a&&!1===this.Ch)return this;Ym(this)}var b=this.Yd.ja(a);return null!==b||""!==a&&(b=this.Yd.ja(""),null!==b)?b:this};v.u(S,{port:"port"},function(){return this.jl("")});v.u(S,{ports:"ports"},function(){null===this.Yd&&Ym(this);return this.Yd.kE});function Ym(a){null===a.Yd?a.Yd=new na("string",G):a.Yd.clear();Xn(a,a,function(a,c){var d=c.Ud;null!==d&&a.Yd.add(d,c)});0===a.Yd.count&&a.Yd.add("",a)}
function Xm(a,b,c){var d=b.Ud;if(null!==d&&(null!==a.Yd&&a.Yd.remove(d),b=a.g,null!==b&&c)){c=null;for(d=a.GD(d);d.next();)a=d.value,null===c&&(c=v.jb()),c.push(a);if(null!==c){for(d=0;d<c.length;d++)a=c[d],b.remove(a);v.sa(c)}}}
S.prototype.isInTreeOf=function(a){if(null===a||a===this)return!1;var b=!0,c=this.g;null!==c&&(b=c.Sd);c=this;if(b)for(;c!==a;){for(var b=null,d=c.fc.i;d.next();){var e=d.value;if(e.Hc&&(b=e.T,b!==c&&b!==this))break}if(b===this||null===b||b===c)return!1;c=b}else for(;c!==a;){b=null;for(d=c.fc.i;d.next()&&(e=d.value,!e.Hc||(b=e.Z,b===c||b===this)););if(b===this||null===b||b===c)return!1;c=b}return!0};
S.prototype.findTreeRoot=function(){var a=!0,b=this.g;null!==b&&(a=b.Sd);b=this;if(a)for(;;){for(var a=null,c=b.fc.i;c.next();){var d=c.value;if(d.Hc&&(a=d.T,a!==b&&a!==this))break}if(a===this)return this;if(null===a||a===b)return b;b=a}else for(;;){a=null;for(c=b.fc.i;c.next()&&(d=c.value,!d.Hc||(a=d.Z,a===b||a===this)););if(a===this)return this;if(null===a||a===b)return b;b=a}};
S.prototype.findCommonTreeParent=function(a){if(null===a)return null;if(this===a)return this;for(var b=this;null!==b;)gp(b,!0),b=b.kl();for(var c=null,b=a;null!==b;){if(0!==(b.Q&1048576)){c=b;break}b=b.kl()}for(b=this;null!==b;)gp(b,!1),b=b.kl();return c};S.prototype.findTreeParentLink=S.prototype.Xo=function(){var a=!0,b=this.g;null!==b&&(a=b.Sd);b=this.fc.i;if(a)for(;b.next();){if(a=b.value,a.Hc&&a.T!==this)return a}else for(;b.next();)if(a=b.value,a.Hc&&a.Z!==this)return a;return null};
S.prototype.findTreeParentNode=S.prototype.kl=function(){var a=this.Qj;if(null===a)return null;if(a instanceof S)return a;var b=!0,a=this.g;null!==a&&(b=a.Sd);a=this.fc.i;if(b)for(;a.next();){if(b=a.value,b.Hc&&(b=b.T,b!==this))return this.Qj=b}else for(;a.next();)if(b=a.value,b.Hc&&(b=b.Z,b!==this))return this.Qj=b;return this.Qj=null};S.prototype.findTreeParentChain=function(){function a(b,d){if(null!==b){d.add(b);var e=b.Xo();null!==e&&(d.add(e),a(b.kl(),d))}}var b=new J(R);a(this,b);return b};
S.prototype.findTreeLevel=function(){return wp(this,this)};function wp(a,b){var c=b.kl();return null===c?0:1+wp(a,c)}S.prototype.findTreeChildrenLinks=S.prototype.Bw=function(){var a=!0,b=this.g;null!==b&&(a=b.Sd);if(a){var a=new Aa(this.fc),c=this;a.Ym=function(a){return a.Hc&&a.T===c?!0:!1}}else a=new Aa(this.fc),c=this,a.Ym=function(a){return a.Hc&&a.Z===c?!0:!1};return a};
S.prototype.findTreeChildrenNodes=S.prototype.KD=function(){var a=!0,b=this.g;null!==b&&(a=b.Sd);var c=b=null,d=this.fc.i;if(a)for(;d.next();)a=d.value,a.Hc&&a.T===this&&(a=a.Z,null!==b?b.add(a):null!==c&&c!==a?(b=new I(S),b.add(c),b.add(a)):c=a);else for(;d.next();)a=d.value,a.Hc&&a.Z===this&&(a=a.T,null!==b?b.add(a):null!==c&&c!==a?(b=new I(S),b.add(c),b.add(a)):c=a);return null!==b?b.i:null!==c?new ya(c):xa};
S.prototype.findTreeParts=function(a){void 0===a&&(a=Infinity);v.j(a,"number",S,"collapseTree:level");var b=new J(R);Sg(b,this,!1,a,!0);return b};S.prototype.collapseTree=S.prototype.collapseTree=function(a){void 0===a&&(a=1);v.Ve(a,S,"collapseTree:level");1>a&&(a=1);var b=this.g;if(null!==b&&!b.fh){b.fh=!0;var c=new J(S);c.add(this);xp(this,c,b.Sd,a,b.Na,this,b.vA===hk);b.fh=!1}};
function xp(a,b,c,d,e,f,h){if(1<d)for(var k=c?a.zw():a.wg();k.next();){var l=k.value;l.Hc&&(l=l.uz(a),null===l||l===a||b.contains(l)||(b.add(l),xp(l,b,c,d-1,e,f,h)))}else yp(a,b,c,e,f,h)}function yp(a,b,c,d,e,f){for(var h=e===a?!0:a.nd,k=c?a.zw():a.wg();k.next();){var l=k.value;l.Hc&&(l=l.uz(a),null===l||l===a||b.contains(l)||(b.add(l),h&&(f&&Tj(d,l,e),l.ql(),l.od(!1)),l.nd&&(l.gu=l.nd,yp(l,b,c,d,e,f))))}a.nd=!1}
S.prototype.expandTree=S.prototype.expandTree=function(a){void 0===a&&(a=2);v.Ve(a,S,"expandTree:level");2>a&&(a=2);var b=this.g;if(null!==b&&!b.fh){b.fh=!0;var c=new J(S);c.add(this);zp(this,c,b.Sd,a,b.Na,this,b.vA===hk);b.fh=!1}};function zp(a,b,c,d,e,f,h){for(var k=f===a?!1:a.nd,l=c?a.zw():a.wg();l.next();){var m=l.value;m.Hc&&(k||m.Mf||m.ic(),m=m.uz(a),null!==m&&m!==a&&!b.contains(m)&&(b.add(m),k||(m.od(!0),m.ql(),h&&Sj(e,m,f)),2<d||m.gu))&&(m.gu=!1,zp(m,b,c,d-1,e,f,h))}a.nd=!0}
v.defineProperty(S,{nd:"isTreeExpanded"},function(){return this.Yq},function(a){var b=this.Yq;if(b!==a){this.Yq=a;var c=this.g;this.h("isTreeExpanded",b,a);b=this.MI;if(null!==b){var d=!0;null!==c&&(d=c.Qa,c.Qa=!0);b(this);null!==c&&(c.Qa=d)}null!==c&&c.la.ib?this.od(a):a?this.expandTree():this.collapseTree()}});v.defineProperty(S,{gu:"wasTreeExpanded"},function(){return this.Is},function(a){var b=this.Is;b!==a&&(this.Is=a,this.h("wasTreeExpanded",b,a))});
v.defineProperty(S,{MI:"treeExpandedChanged"},function(){return this.Ds},function(a){var b=this.Ds;b!==a&&(null!==a&&v.j(a,"function",S,"treeExpandedChanged"),this.Ds=a,this.h("treeExpandedChanged",b,a))});v.defineProperty(S,{Xi:"isTreeLeaf"},function(){return this.Zq},function(a){var b=this.Zq;b!==a&&(this.Zq=a,this.h("isTreeLeaf",b,a))});
function W(){R.call(this,xi);this.fg=null;this.Bh="";this.rg=this.Hq=null;this.Th="";this.Cs=null;this.Tr=this.Sr=this.Rr=!1;this.$q=!0;this.Rp=Ai;this.lq=0;this.oq=Ai;this.pq=NaN;this.mm=fn;this.rs=.5;this.De=null;this.Zc=(new I(y)).freeze();this.qo=this.Fe=null;this.Mf=!1;this.Gv=null;this.Jy=!1;this.Mg=this.Fn=this.Bn=this.ei=this.ri=this.Ra=null;this.My=new y;this.HC=this.FC=null;this.Mx=!1;this.ga=null}v.Ia(W,R);v.ea("Link",W);
W.prototype.cloneProtected=function(a){R.prototype.cloneProtected.call(this,a);a.Bh=this.Bh;a.Hq=this.Hq;a.Th=this.Th;a.Cs=this.Cs;a.Rr=this.Rr;a.Sr=this.Sr;a.Tr=this.Tr;a.$q=this.$q;a.Rp=this.Rp;a.lq=this.lq;a.oq=this.oq;a.pq=this.pq;a.mm=this.mm;a.rs=this.rs;null!==this.ga&&(a.ga=this.ga.copy())};W.prototype.Xh=function(a){R.prototype.Xh.call(this,a);this.Bh=a.Bh;this.Th=a.Th;a.Fe=null;a.ic();a.ei=this.ei};var fn;W.Normal=fn=v.p(W,"Normal",1);W.Orthogonal=v.p(W,"Orthogonal",2);
W.AvoidsNodes=v.p(W,"AvoidsNodes",6);var Ap;W.AvoidsNodesStraight=Ap=v.p(W,"AvoidsNodesStraight",7);var Ai;W.None=Ai=v.p(W,"None",0);var Hi;W.Bezier=Hi=v.p(W,"Bezier",9);var zi;W.JumpGap=zi=v.p(W,"JumpGap",10);var yi;W.JumpOver=yi=v.p(W,"JumpOver",11);var cn;W.End=cn=v.p(W,"End",17);var dn;W.Scale=dn=v.p(W,"Scale",18);var en;W.Stretch=en=v.p(W,"Stretch",19);var qo;W.OrientAlong=qo=v.p(W,"OrientAlong",21);var Bp;W.OrientPlus90=Bp=v.p(W,"OrientPlus90",22);var Cp;
W.OrientMinus90=Cp=v.p(W,"OrientMinus90",23);var Dp;W.OrientOpposite=Dp=v.p(W,"OrientOpposite",24);var Ep;W.OrientUpright=Ep=v.p(W,"OrientUpright",25);var Fp;W.OrientPlus90Upright=Fp=v.p(W,"OrientPlus90Upright",26);var Gp;W.OrientMinus90Upright=Gp=v.p(W,"OrientMinus90Upright",27);var Hp;W.OrientUpright45=Hp=v.p(W,"OrientUpright45",28);W.prototype.Le=function(){null===this.ga&&(this.ga=new xm)};
W.prototype.ul=function(){var a=this.T;if(null!==a){var b=a.findVisibleNode();null!==b&&(a=b);if(el(a)||fl(a))return!1}a=this.Z;return null!==a&&(b=a.findVisibleNode(),null!==b&&(a=b),el(a)||fl(a))?!1:!0};W.prototype.lA=function(){return!1};W.prototype.Rd=function(){return!1};
W.prototype.computeAngle=function(a,b,c){a=0;switch(b){default:case Ai:a=0;break;case qo:a=c;break;case Bp:a=c+90;break;case Cp:a=c-90;break;case Dp:a=c+180;break;case Ep:a=ne(c);90<a&&270>a&&(a-=180);break;case Fp:a=ne(c+90);90<a&&270>a&&(a-=180);break;case Gp:a=ne(c-90);90<a&&270>a&&(a-=180);break;case Hp:a=ne(c);if(45<a&&135>a||225<a&&315>a)return 0;90<a&&270>a&&(a-=180)}return ne(a)};
v.defineProperty(W,{T:"fromNode"},function(){return this.fg},function(a){var b=this.fg;if(b!==a){var c=this.bd;null!==b&&(this.rg!==b&&up(b,this,c),Ip(this),this.H(ul));this.fg=a;null!==a&&this.od(a.isVisible());this.ri=null;this.ic();var d=this.g;if(null!==d){var e=this.data,f=d.ba;if(null!==e)if(f instanceof Q){var h=null!==a?a.data:null;f.jx(e,f.gb(h))}else f instanceof Pf&&(h=null!==a?a.data:null,d.Sd?f.ph(e,f.gb(h)):(null!==b&&f.ph(b.data,void 0),f.ph(h,f.gb(null!==this.rg?this.rg.data:null))))}e=
this.bd;f=this.ND;null!==f&&(h=!0,null!==d&&(h=d.Qa,d.Qa=!0),f(this,c,e),null!==d&&(d.Qa=h));null!==a&&(this.rg!==a&&tp(a,this,e),Jp(this),this.H(ml));this.h("fromNode",b,a);Nl(this)}});
v.defineProperty(W,{xg:"fromPortId"},function(){return this.Bh},function(a){var b=this.Bh;if(b!==a){var c=this.bd;null!==c&&sp(this.T,c);Ip(this);this.Bh=a;var d=this.bd;null!==d&&sp(this.T,d);var e=this.g;if(null!==e){var f=this.data,h=e.ba;null!==f&&h instanceof Q&&h.jA(f,a)}c!==d&&(this.ri=null,this.ic(),f=this.ND,null!==f&&(h=!0,null!==e&&(h=e.Qa,e.Qa=!0),f(this,c,d),null!==e&&(e.Qa=h)));Jp(this);this.h("fromPortId",b,a)}});v.u(W,{bd:"fromPort"},function(){var a=this.fg;return null===a?null:a.jl(this.Bh)});
v.defineProperty(W,{ND:"fromPortChanged"},function(){return this.Hq},function(a){var b=this.Hq;b!==a&&(null!==a&&v.j(a,"function",W,"fromPortChanged"),this.Hq=a,this.h("fromPortChanged",b,a))});
v.defineProperty(W,{Z:"toNode"},function(){return this.rg},function(a){var b=this.rg;if(b!==a){var c=this.Hd;null!==b&&(this.fg!==b&&up(b,this,c),Ip(this),this.H(ul));this.rg=a;null!==a&&this.od(a.isVisible());this.ri=null;this.ic();var d=this.g;if(null!==d){var e=this.data,f=d.ba;if(null!==e)if(f instanceof Q){var h=null!==a?a.data:null;f.nx(e,f.gb(h))}else f instanceof Pf&&(h=null!==a?a.data:null,d.Sd?(null!==b&&f.ph(b.data,void 0),f.ph(h,f.gb(null!==this.fg?this.fg.data:null))):f.ph(e,f.gb(h)))}e=
this.Hd;f=this.cF;null!==f&&(h=!0,null!==d&&(h=d.Qa,d.Qa=!0),f(this,c,e),null!==d&&(d.Qa=h));null!==a&&(this.fg!==a&&tp(a,this,e),Jp(this),this.H(ml));this.h("toNode",b,a);Nl(this)}});
v.defineProperty(W,{rh:"toPortId"},function(){return this.Th},function(a){var b=this.Th;if(b!==a){var c=this.Hd;null!==c&&sp(this.Z,c);Ip(this);this.Th=a;var d=this.Hd;null!==d&&sp(this.Z,d);var e=this.g;if(null!==e){var f=this.data,h=e.ba;null!==f&&h instanceof Q&&h.mA(f,a)}c!==d&&(this.ri=null,this.ic(),f=this.cF,null!==f&&(h=!0,null!==e&&(h=e.Qa,e.Qa=!0),f(this,c,d),null!==e&&(e.Qa=h)));Jp(this);this.h("toPortId",b,a)}});v.u(W,{Hd:"toPort"},function(){var a=this.rg;return null===a?null:a.jl(this.Th)});
v.defineProperty(W,{cF:"toPortChanged"},function(){return this.Cs},function(a){var b=this.Cs;b!==a&&(null!==a&&v.j(a,"function",W,"toPortChanged"),this.Cs=a,this.h("toPortChanged",b,a))});v.defineProperty(W,{xb:"fromSpot"},function(){return null!==this.ga?this.ga.nj:kc},function(a){this.Le();var b=this.ga.nj;b.K(a)||(a=a.R(),this.ga.nj=a,this.h("fromSpot",b,a),this.ic())});
v.defineProperty(W,{ll:"fromEndSegmentLength"},function(){return null!==this.ga?this.ga.lj:NaN},function(a){this.Le();var b=this.ga.lj;b!==a&&(0>a&&v.va(a,">= 0",W,"fromEndSegmentLength"),this.ga.lj=a,this.h("fromEndSegmentLength",b,a),this.ic())});v.defineProperty(W,{jt:"fromEndSegmentDirection"},function(){return null!==this.ga?this.ga.kj:np},function(a){this.Le();var b=this.ga.kj;b!==a&&(this.ga.kj=a,this.h("fromEndSegmentDirection",b,a),this.ic())});
v.defineProperty(W,{kt:"fromShortLength"},function(){return null!==this.ga?this.ga.mj:NaN},function(a){this.Le();var b=this.ga.mj;b!==a&&(this.ga.mj=a,this.h("fromShortLength",b,a),this.ic())});v.defineProperty(W,{yb:"toSpot"},function(){return null!==this.ga?this.ga.Pj:kc},function(a){this.Le();var b=this.ga.Pj;b.K(a)||(a=a.R(),this.ga.Pj=a,this.h("toSpot",b,a),this.ic())});
v.defineProperty(W,{Gl:"toEndSegmentLength"},function(){return null!==this.ga?this.ga.Nj:NaN},function(a){this.Le();var b=this.ga.Nj;b!==a&&(0>a&&v.va(a,">= 0",W,"toEndSegmentLength"),this.ga.Nj=a,this.h("toEndSegmentLength",b,a),this.ic())});v.defineProperty(W,{du:"toEndSegmentDirection"},function(){return null!==this.ga?this.ga.Mj:np},function(a){this.Le();var b=this.ga.Mj;b!==a&&(this.ga.Mj=a,this.h("toEndSegmentDirection",b,a),this.ic())});
v.defineProperty(W,{eu:"toShortLength"},function(){return null!==this.ga?this.ga.Oj:NaN},function(a){this.Le();var b=this.ga.Oj;b!==a&&(this.ga.Oj=a,this.h("toShortLength",b,a),this.ic())});function Nl(a){var b=a.T,c=a.Z;null!==b?null!==c?Kp(a,b.KG(c)):Kp(a,null):Kp(a,null)}function Kp(a,b){var c=a.uk;if(c!==b){null!==c&&hp(c,a);a.uk=b;null!==b&&ip(b,a);var d=a.rD;if(null!==d){var e=!0,f=a.g;null!==f&&(e=f.Qa,f.Qa=!0);d(a,c,b);null!==f&&(f.Qa=e)}!a.Mf||a.FC!==c&&a.HC!==c||a.ic()}}
W.prototype.ql=function(){var a=this.Sa;null!==a&&this.T!==a&&this.Z!==a&&a.pw&&R.prototype.ql.call(this)};W.prototype.getOtherNode=W.prototype.uz=function(a){var b=this.T;return a===b?this.Z:b};W.prototype.getOtherPort=function(a){var b=this.bd;return a===b?this.Hd:b};v.u(W,{SJ:"isLabeledLink"},function(){return null===this.De?!1:0<this.De.count});v.u(W,{Tf:"labelNodes"},function(){return null===this.De?xa:this.De.i});function vp(a,b){null===a.De&&(a.De=new J(S));a.De.add(b);a.P()}
W.prototype.pt=function(a){R.prototype.pt.call(this,a);Lp(this)&&Bi(this,this.V);a||(a=this.fg,null!==a&&tp(a,this,this.bd),a=this.rg,null!==a&&tp(a,this,this.Hd),Jp(this))};W.prototype.qt=function(a){R.prototype.qt.call(this,a);Lp(this)&&Bi(this,this.V);a||(a=this.fg,null!==a&&up(a,this,this.bd),a=this.rg,null!==a&&up(a,this,this.Hd),Ip(this))};
W.prototype.Km=function(){this.Mf=!0;if(null!==this.De){var a=this.g;if(null!==a)for(var b=this.De.copy().i;b.next();)a.remove(b.value)}b=this.data;null!==b&&(a=this.g,null!==a&&(a=a.ba,a instanceof Q?a.ax(b):a instanceof Pf&&a.ph(b,void 0)))};
W.prototype.updateRelationshipsFromData=function(){var a=this.data;if(null!==a){var b=this.g;if(null!==b){var c=b.ba;if(c instanceof Q){var d=c.ol(a),e=b.Ze(d),f=this.T;e!==f&&(e=null!==f?c.gb(f.data):void 0,f=c.ip,"function"===typeof f?f(a,e):a[f]=e,c.jx(a,d));d=c.pl(a);e=b.Ze(d);f=this.Z;e!==f&&(e=null!==f?c.gb(f.data):void 0,f=c.kp,"function"===typeof f?f(a,e):a[f]=e,c.nx(a,d));var h=c.Zj(a);if(0<h.length||0<this.Tf.count){if(1===h.length&&1===this.Tf.count&&(b=h[0],d=this.Tf.first(),c.gb(d.data)===
b))return;var d=(new J).Tc(h),k=new J;this.Tf.each(function(a){null!==a.data&&(a=c.gb(a.data),void 0!==a&&k.add(a))});b=k.copy();b.bA(d);d=d.copy();d.bA(k);if(0<b.count||0<d.count)h.length=0,k.each(function(a){h.push(a)}),b.each(function(b){c.BE(a,b)}),d.each(function(b){c.Vy(a,b)})}}}}};
W.prototype.move=function(a){var b=this.position,c=b.x;isNaN(c)&&(c=0);b=b.y;isNaN(b)&&(b=0);c=a.x-c;b=a.y-b;R.prototype.move.call(this,a);this.xl(c,b);for(a=this.Tf;a.next();){var d=a.value,e=d.position;d.moveTo(e.x+c,e.y+b)}};v.defineProperty(W,{eI:"relinkableFrom"},function(){return this.Rr},function(a){var b=this.Rr;b!==a&&(this.Rr=a,this.h("relinkableFrom",b,a),this.Qd())});
v.defineProperty(W,{fI:"relinkableTo"},function(){return this.Sr},function(a){var b=this.Sr;b!==a&&(this.Sr=a,this.h("relinkableTo",b,a),this.Qd())});W.prototype.canRelinkFrom=function(){if(!this.eI)return!1;var a=this.layer;if(null===a)return!0;if(!a.zm)return!1;a=a.g;return null===a||a.zm?!0:!1};W.prototype.canRelinkTo=function(){if(!this.fI)return!1;var a=this.layer;if(null===a)return!0;if(!a.zm)return!1;a=a.g;return null===a||a.zm?!0:!1};
v.defineProperty(W,{Qt:"resegmentable"},function(){return this.Tr},function(a){var b=this.Tr;b!==a&&(this.Tr=a,this.h("resegmentable",b,a),this.Qd())});v.defineProperty(W,{Hc:"isTreeLink"},function(){return this.$q},function(a){var b=this.$q;b!==a&&(this.$q=a,this.h("isTreeLink",b,a),null!==this.T&&Zl(this.T),null!==this.Z&&Zl(this.Z))});v.u(W,{path:"path"},function(){var a=this.Ye();return a instanceof X?a:null});
v.u(W,{an:"routeBounds"},function(){this.gn();var a=new B;var b=Infinity,c=Infinity,d=this.oa;if(0===d)a.m(NaN,NaN,0,0);else{if(1===d)d=this.l(0),b=Math.min(d.x,b),c=Math.min(d.y,c),a.m(d.x,d.y,0,0);else if(2===d){var e=this.l(0),f=this.l(1),b=Math.min(e.x,f.x),c=Math.min(e.y,f.y);a.m(e.x,e.y,0,0);a.dj(f)}else if(this.computeCurve()===Hi&&3<=d&&!this.jc)if(e=this.l(0),b=e.x,c=e.y,a.m(b,c,0,0),3===d)d=this.l(1),b=Math.min(d.x,b),c=Math.min(d.y,c),f=this.l(2),b=Math.min(f.x,b),c=Math.min(f.y,c),Qd(e.x,
e.y,d.x,d.y,d.x,d.y,f.x,f.y,.5,a);else for(var h=3;h<d;h+=3){var k=this.l(h-2);h+3>=d&&(h=d-1);var l=this.l(h-1),f=this.l(h);Qd(e.x,e.y,k.x,k.y,l.x,l.y,f.x,f.y,.5,a);b=Math.min(f.x,b);c=Math.min(f.y,c);e=f}else for(e=this.l(0),f=this.l(1),b=Math.min(e.x,f.x),c=Math.min(e.y,f.y),a.m(e.x,e.y,0,0),a.dj(f),h=2;h<d;h++)e=this.l(h),b=Math.min(e.x,b),c=Math.min(e.y,c),a.dj(e);this.My.m(b-a.x,c-a.y)}return this.Gv=a});v.u(W,{qE:"midPoint"},function(){this.gn();return this.computeMidPoint(new y)});
W.prototype.computeMidPoint=function(a){var b=this.oa;if(0===b)return a.assign(Ad),a;if(1===b)return a.assign(this.l(0)),a;if(2===b){var c=this.l(0),d=this.l(1);a.m((c.x+d.x)/2,(c.y+d.y)/2);return a}if(this.computeCurve()===Hi&&3<=b&&!this.jc){if(3===b)return this.l(1);var c=(b-1)/3|0,e=3*(c/2|0);if(1===c%2){var c=this.l(e),d=this.l(e+1),f=this.l(e+2),e=this.l(e+3),b=d.x,h=d.y,d=f.x,k=f.y,f=(b+d)/2,l=(h+k)/2,h=((c.y+h)/2+l)/2,k=(l+(k+e.y)/2)/2;a.x=(((c.x+b)/2+f)/2+(f+(d+e.x)/2)/2)/2;a.y=(h+k)/2}else a.assign(this.l(e));
return a}e=0;f=v.jb();for(h=0;h<b-1;h++)c=0,c=this.l(h),d=this.l(h+1),Dc(c.x,d.x)?(c=d.y-c.y,0>c&&(c=-c)):Dc(c.y,d.y)?(c=d.x-c.x,0>c&&(c=-c)):c=Math.sqrt(c.sf(d)),f.push(c),e+=c;for(d=h=c=0;c<e/2&&h<b;){d=f[h];if(c+d>e/2)break;c+=d;h++}v.sa(f);b=this.l(h);f=this.l(h+1);b.x===f.x?b.y>f.y?a.m(b.x,b.y-(e/2-c)):a.m(b.x,b.y+(e/2-c)):b.y===f.y?b.x>f.x?a.m(b.x-(e/2-c),b.y):a.m(b.x+(e/2-c),b.y):(c=(e/2-c)/d,a.m(b.x+c*(f.x-b.x),b.y+c*(f.y-b.y)));return a};v.u(W,{pE:"midAngle"},function(){this.gn();return this.computeMidAngle()});
W.prototype.computeMidAngle=function(){var a=this.oa;if(2>a)return NaN;if(this.computeCurve()===Hi&&4<=a&&!this.jc){var b=(a-1)/3|0,c=3*(b/2|0);if(1===b%2){var c=Math.floor(c),b=this.l(c),d=this.l(c+1),a=this.l(c+2),c=this.l(c+3),e=d.x,d=d.y,f=a.x,a=a.y,h=(e+f)/2,k=(d+a)/2;return Wa(((b.x+e)/2+h)/2,((b.y+d)/2+k)/2,(h+(f+c.x)/2)/2,(k+(a+c.y)/2)/2)}if(0<c&&c+1<a)return b=this.l(c-1),d=this.l(c+1),b.xc(d)}c=a/2|0;if(0===a%2)return b=this.l(c-1),d=this.l(c),4<=a&&b.Fc(d)&&(b=this.l(c-2),a=this.l(c+1),
c=b.sf(d),e=d.sf(a),!(c>e+10))?e>c+10?d.xc(a):b.xc(a):b.xc(d);b=this.l(c-1);d=this.l(c);a=this.l(c+1);c=b.sf(d);e=d.sf(a);return c>e+10?b.xc(d):e>c+10?d.xc(a):b.xc(a)};
v.defineProperty(W,{points:"points"},function(){return this.Zc},function(a){var b=this.Zc;if(b!==a){var c=null;if(Array.isArray(a)){var d=0===a.length%2;if(d)for(var e=0;e<a.length;e++)if("number"!==typeof a[e]||isNaN(a[e])){d=!1;break}if(d)for(c=new I(y),d=0;d<a.length/2;d++)e=(new y(a[2*d],a[2*d+1])).freeze(),c.add(e);else{for(var f=!0,d=0;d<a.length;d++)if(e=a[d],!v.Ta(e)||"number"!==typeof e.x||isNaN(e.x)||"number"!==typeof e.y||isNaN(e.y)){f=!1;break}if(f)for(c=new I(y),d=0;d<a.length;d++)e=
a[d],c.add((new y(e.x,e.y)).freeze());else v.k("Link.points array must contain only an even number of numbers or objects with x and y properties, not: "+a)}}else if(a instanceof I)for(c=a.copy(),a=c.i;a.next();)a.value.freeze();else v.k("Link.points value is not an instance of List or Array: "+a);c.freeze();this.Zc=c;this.se();this.P();Mp(this);a=this.g;null!==a&&(a.Sm||a.la.ib||a.Pw.add(this),a.Na.uc&&(this.qo=c));this.h("points",b,c)}});v.u(W,{oa:"pointsCount"},function(){return this.Zc.count});
W.prototype.getPoint=W.prototype.l=function(a){return this.Zc.n[a]};W.prototype.setPoint=W.prototype.Af=function(a,b){null===this.Fe&&v.k("Call Link.startRoute before modifying the points of the route.");this.Zc.Ig(a,b)};W.prototype.setPointAt=W.prototype.W=function(a,b,c){null===this.Fe&&v.k("Call Link.startRoute before modifying the points of the route.");this.Zc.Ig(a,new y(b,c))};
W.prototype.insertPoint=function(a,b){null===this.Fe&&v.k("Call Link.startRoute before modifying the points of the route.");this.Zc.Cd(a,b)};W.prototype.insertPointAt=W.prototype.w=function(a,b,c){null===this.Fe&&v.k("Call Link.startRoute before modifying the points of the route.");this.Zc.Cd(a,new y(b,c))};W.prototype.addPoint=W.prototype.Uh=function(a){null===this.Fe&&v.k("Call Link.startRoute before modifying the points of the route.");this.Zc.add(a)};
W.prototype.addPointAt=W.prototype.Yk=function(a,b){null===this.Fe&&v.k("Call Link.startRoute before modifying the points of the route.");this.Zc.add(new y(a,b))};W.prototype.removePoint=W.prototype.CE=function(a){null===this.Fe&&v.k("Call Link.startRoute before modifying the points of the route.");this.Zc.Vc(a)};W.prototype.clearPoints=W.prototype.Oo=function(){null===this.Fe&&v.k("Call Link.startRoute before modifying the points of the route.");this.Zc.clear()};
W.prototype.movePoints=W.prototype.xl=function(a,b){for(var c=new I(y),d=this.Zc.i;d.next();){var e=d.value;c.add((new y(e.x+a,e.y+b)).freeze())}c.freeze();d=this.Zc;this.Zc=c;this.P();Mp(this);e=this.g;null!==e&&e.Na.uc&&(this.qo=c);this.h("points",d,c)};W.prototype.startRoute=W.prototype.Cl=function(){null===this.Fe&&(this.Fe=this.Zc,this.Zc=this.Zc.copy())};
W.prototype.commitRoute=W.prototype.Pi=function(){if(null!==this.Fe){for(var a=this.Fe,b=this.Zc,c=Infinity,d=Infinity,e=a.n,f=e.length,h=0;h<f;h++)var k=e[h],c=Math.min(k.x,c),d=Math.min(k.y,d);for(var l=Infinity,m=Infinity,n=b.n,p=n.length,h=0;h<p;h++)k=n[h],l=Math.min(k.x,l),m=Math.min(k.y,m),k.freeze();b.freeze();if(p===f)for(h=0;h<p;h++){if(f=e[h],k=n[h],f.x-c!==k.x-l||f.y-d!==k.y-m){this.P();this.se();break}}else this.P(),this.se();this.Fe=null;c=this.g;null!==c&&c.Na.uc&&(this.qo=b);Mp(this);
this.h("points",a,b)}};W.prototype.rollbackRoute=W.prototype.kI=function(){null!==this.Fe&&(this.Zc=this.Fe,this.Fe=null)};function Mp(a){0===a.Zc.count?a.Mf=!1:(a.Mf=!0,a.Bn=a.l(0).copy(),a.Fn=a.l(a.oa-1).copy(),Np(a,!1))}
W.prototype.invalidateRoute=W.prototype.ic=function(){if(!this.Jy){var a=this.g;if(!a||!(a.Pw.contains(this)||a.la.ib||a.Na.uH&&!a.Na.df))if(a=this.path,null!==a){if(this.Mf){var b=this.bd;null!==b&&(b=b.km,null!==b&&b.Qm());b=this.Hd;null!==b&&(b=b.km,null!==b&&b.Qm())}this.Mf=!1;this.P();a.P()}}};v.defineProperty(W,{Jp:"suspendsRouting"},function(){return this.Jy},function(a){this.Jy=a});
W.prototype.updateRoute=W.prototype.gn=function(){if(!this.Mf&&!this.Mx){var a=!0;try{this.Mx=!0,this.Cl(),a=this.computePoints()}finally{this.Mx=!1,a?this.Pi():this.kI()}}};
W.prototype.computePoints=function(){var a=this.g;if(null===a)return!1;var b=this.T,c=null;null===b?(a.nm||(a.Hv=new X,a.Hv.wa=jd,a.Hv.lb=0,a.nm=new S,a.nm.add(a.Hv),a.nm.tf()),this.Bn&&(a.nm.position=a.nm.location=this.Bn,a.nm.tf(),b=a.nm,c=a.Hv)):c=this.bd;if(null!==c&&!b.isVisible()){var d=b.findVisibleNode();null!==d&&d!==b?(b=d,c=d.jl("")):b=d}this.FC=b;if(null===b||null===c||!b.location.G()||!c.V.G())return!1;var d=this.Z,e=null;null===d?(a.om||(a.Iv=new X,a.Iv.wa=jd,a.Iv.lb=0,a.om=new S,a.om.add(a.Iv),
a.om.tf()),this.Fn&&(a.om.position=a.om.location=this.Fn,a.om.tf(),d=a.om,e=a.Iv)):e=this.Hd;null===e||d.isVisible()||(a=d.findVisibleNode(),null!==a&&a!==d?(d=a,e=a.jl("")):d=a);this.HC=d;if(null===d||null===e)return!1;if(!d.location.G()||!e.V.G())return v.SF||(v.SF=!0,v.trace('Caution: Failure routing "'+this+'" probably because the .toNode has no real location or because the .toPort is not visible.')),!1;var a=this.oa,f=Op(this,c),h=Pp(this,e),k=c===e&&null!==c,l=this.jc,m=this.Je===Hi;this.ri=
k&&!l?m=!0:!1;var n=this.Ps===Ai||k;if(l||f!==sb||h!==sb||k){m=this.rl;n&&(l&&m||k)&&this.Oo();var p=k?this.computeCurviness():0,q=this.getLinkPoint(b,c,f,!0,l,d,e),r=0,s=0,t=0;if(l||f!==sb||k){var u=this.computeEndSegmentLength(b,c,f,!0),t=this.getLinkDirection(b,c,q,f,!0,l,d,e);k&&(t-=l?90:30,0>p&&(t-=180));0>t?t+=360:360<=t&&(t-=360);k&&(u+=Math.abs(p));0===t?r=u:90===t?s=u:180===t?r=-u:270===t?s=-u:(r=u*Math.cos(t*Math.PI/180),s=u*Math.sin(t*Math.PI/180));if(f.te()&&k){var w=c.Xa(Ab,v.L()),x=
v.Mb(w.x+1E3*r,w.y+1E3*s);this.getLinkPointFromPoint(b,c,w,x,!0,q);v.v(w);v.v(x)}}var u=this.getLinkPoint(d,e,h,!1,l,b,c),z=0,A=0,H=0;if(l||h!==sb||k)w=this.computeEndSegmentLength(d,e,h,!1),H=this.getLinkDirection(d,e,u,h,!1,l,b,c),k&&(H+=l?0:30,0>p&&(H+=180)),0>H?H+=360:360<=H&&(H-=360),k&&(w+=Math.abs(p)),0===H?z=w:90===H?A=w:180===H?z=-w:270===H?A=-w:(z=w*Math.cos(H*Math.PI/180),A=w*Math.sin(H*Math.PI/180)),h.te()&&k&&(w=e.Xa(Ab,v.L()),x=v.Mb(w.x+1E3*z,w.y+1E3*A),this.getLinkPointFromPoint(d,
e,w,x,!1,u),v.v(w),v.v(x));e=q;if(l||f!==sb||k)e=new y(q.x+r,q.y+s);c=u;if(l||h!==sb||k)c=new y(u.x+z,u.y+A);!n&&!l&&f===sb&&3<a&&this.adjustPoints(0,q,a-2,c)?this.Af(a-1,u):!n&&!l&&h===sb&&3<a&&this.adjustPoints(1,e,a-1,u)?this.Af(0,q):!n&&!l&&4<a&&this.adjustPoints(1,e,a-2,c)?(this.Af(0,q),this.Af(a-1,u)):!n&&l&&6<=a&&!m&&this.adjustPoints(1,e,a-2,c)?(this.Af(0,q),this.Af(a-1,u)):(this.Oo(),this.Uh(q),(l||f!==sb||k)&&this.Uh(e),l&&this.addOrthoPoints(e,t,c,H,b,d),(l||h!==sb||k)&&this.Uh(c),this.Uh(u))}else f=
!1,!n&&3<=a&&(n=this.getLinkPoint(b,c,sb,!0,!1,d,e),h=this.getLinkPoint(d,e,sb,!1,!1,b,c),f=this.adjustPoints(0,n,a-1,h))&&(n=this.getLinkPoint(b,c,sb,!0,!1,d,e),h=this.getLinkPoint(d,e,sb,!1,!1,b,c),this.adjustPoints(0,n,a-1,h)),f||(this.Oo(),m?(a=this.getLinkPoint(b,c,sb,!0,!1,d,e),n=this.getLinkPoint(d,e,sb,!1,!1,b,c),f=n.x-a.x,h=n.y-a.y,k=this.computeCurviness(),m=l=0,q=a.x+f/3,t=a.y+h/3,r=q,s=t,K(h,0)?s=0<f?s-k:s+k:(l=-f/h,m=Math.sqrt(k*k/(l*l+1)),0>k&&(m=-m),r=(0>h?-1:1)*m+q,s=l*(r-q)+t),q=
a.x+2*f/3,t=a.y+2*h/3,u=q,z=t,K(h,0)?z=0<f?z-k:z+k:(u=(0>h?-1:1)*m+q,z=l*(u-q)+t),this.Oo(),this.Uh(a),this.Yk(r,s),this.Yk(u,z),this.Uh(n),this.Af(0,this.getLinkPoint(b,c,sb,!0,!1,d,e)),this.Af(3,this.getLinkPoint(d,e,sb,!1,!1,b,c))):(a=d,d=this.getLinkPoint(b,c,sb,!0,!1,a,e),e=this.getLinkPoint(a,e,sb,!1,!1,b,c),this.hasCurviness()?(h=e.x-d.x,b=e.y-d.y,c=this.computeCurviness(),a=d.x+h/2,n=d.y+b/2,f=a,k=n,K(b,0)?k=0<h?k-c:k+c:(h=-h/b,f=Math.sqrt(c*c/(h*h+1)),0>c&&(f=-f),f=(0>b?-1:1)*f+a,k=h*(f-
a)+n),this.Uh(d),this.Yk(f,k)):this.Uh(d),this.Uh(e)));return!0};function Qp(a,b){Math.abs(b.x-a.x)>Math.abs(b.y-a.y)?(b.x=b.x>=a.x?a.x+9E9:a.x-9E9,b.y=a.y):(b.y=b.y>=a.y?a.y+9E9:a.y-9E9,b.x=a.x);return b}
W.prototype.getLinkPointFromPoint=function(a,b,c,d,e,f){void 0===f&&(f=new y);if(null===a||null===b)return f.assign(c),f;a.isVisible()||(e=a.findVisibleNode(),null!==e&&e!==a&&(b=e.port));var h=e=0,k=0,l=0;a=null;e=b.U;null===e||e.Lg()||(e=e.U);if(null===e)e=d.x,h=d.y,k=c.x,l=c.y;else{a=e.Zg;e=1/(a.m11*a.m22-a.m12*a.m21);var k=a.m22*e,l=-a.m12*e,m=-a.m21*e,n=a.m11*e,p=e*(a.m21*a.dy-a.m22*a.dx),q=e*(a.m12*a.dx-a.m11*a.dy);e=d.x*k+d.y*m+p;h=d.x*l+d.y*n+q;k=c.x*k+c.y*m+p;l=c.x*l+c.y*n+q}b.ap(e,h,k,l,
f);null!==a&&f.transform(a);return f};function Rp(a,b){var c=b.km;null===c&&(c=new Sp,c.port=b,c.Jc=b.Y,b.km=c);return Tp(c,a)}
W.prototype.getLinkPoint=function(a,b,c,d,e,f,h,k){void 0===k&&(k=new y);if(c.cd())return b.Xa(c,k),k;if(c.Vi()&&(c=Rp(this,b),null!==c)){k.assign(c.jp);if(e&&this.gx===Ap){var l=Rp(this,h);if(null!==l&&c.Im<l.Im){c=v.L();var l=v.L(),m=new B(b.Xa(tb,c),b.Xa(Fb,l)),n=this.computeSpot(!d);a=this.getLinkPoint(f,h,n,!d,e,a,b,l);a.x>=m.x&&a.x<=m.x+m.width?k.x=a.x:a.y>=m.y&&a.y<=m.y+m.height&&(k.y=a.y);v.v(c);v.v(l)}}return k}f=b.Xa(Ab,v.L());l=c=null;this.oa>(e?6:2)?(l=d?this.l(1):this.l(this.oa-2),e&&
(l=Qp(f,l.copy()))):(c=v.L(),l=h.Xa(Ab,c),e&&(l=Qp(f,l)),v.v(c));this.getLinkPointFromPoint(a,b,f,l,d,k);v.v(f);return k};
W.prototype.getLinkDirection=function(a,b,c,d,e,f,h,k){a:if(d.cd())c=d.x>d.y?d.x>1-d.y?0:d.x<1-d.y?270:315:d.x<d.y?d.x>1-d.y?90:d.x<1-d.y?180:135:.5>d.x?225:.5<d.x?45:0;else{if(d.Vi()){var l=Rp(this,b);if(null!==l)switch(l.he){case v.ed:c=270;break a;case v.Nc:c=180;break a;default:case v.Xc:c=0;break a;case v.Wc:c=90;break a}}var l=b.Xa(Ab,v.L()),m=null,n=null;this.oa>(f?6:2)?(n=e?this.l(1):this.l(this.oa-2),n=f?Qp(l,n.copy()):c):(m=v.L(),n=k.Xa(Ab,m),v.v(m));c=0;c=Math.abs(n.x-l.x)>Math.abs(n.y-
l.y)?n.x>=l.x?0:180:n.y>=l.y?90:270;v.v(l)}d.te()&&h.Zh(a)&&(c+=180,360<=c&&(c-=360));a=np;a=e?this.jt:this.du;a===np&&(a=e?b.jt:b.du);switch(a){case op:b=b.nl();c+=b;360<=c&&(c-=360);break;case np:case ym:b=b.nl();if(0===b)break;45<=b&&135>b?c+=90:135<=b&&225>b?c+=180:225<=b&&315>b&&(c+=270);360<=c&&(c-=360)}return c};
W.prototype.computeEndSegmentLength=function(a,b,c,d){if(null!==b&&c.Vi()&&(a=Rp(this,b),null!==a))return a.vw;a=NaN;a=d?this.ll:this.Gl;null!==b&&isNaN(a)&&(a=d?b.ll:b.Gl);isNaN(a)&&(a=10);return a};W.prototype.computeSpot=function(a){return a?Op(this,this.bd):Pp(this,this.Hd)};function Op(a,b){if(null===b)return Ab;var c=a.xb;c.Uc()&&(void 0===b&&(b=a.bd),null!==b&&(c=b.xb));return c===kc?sb:c}
function Pp(a,b){if(null===b)return Ab;var c=a.yb;c.Uc()&&(void 0===b&&(b=a.Hd),null!==b&&(c=b.yb));return c===kc?sb:c}W.prototype.computeOtherPoint=function(a,b){var c=b.Xa(Ab),d;d=b.km;d=null!==d?Tp(d,this):null;null!==d&&(c=d.jp);return c};W.prototype.computeShortLength=function(a){return a?Up(this):Vp(this)};function Up(a){var b=a.kt;isNaN(b)&&(a=a.bd,null!==a&&(b=a.kt));return isNaN(b)?0:b}function Vp(a){var b=a.eu;isNaN(b)&&(a=a.Hd,null!==a&&(b=a.eu));return isNaN(b)?0:b}
W.prototype.Xj=function(a,b,c,d,e,f){if(!1===this.Hg)return!1;void 0===b&&(b=null);void 0===c&&(c=null);var h=f;void 0===f&&(h=v.qh(),h.reset());h.multiply(this.transform);if(this.Fm(a,h))return bo(this,b,c,e),void 0===f&&v.$e(h),!0;if(this.yg(a,h)){var k=!1;if(!this.Qg)for(var l=this.ya.n,m=l.length;m--;){var n=l[m];if(n.visible||n===this.bc){var p=n.V,q=this.Ha;if(!(p.x>q.width||p.y>q.height||0>p.x+p.width||0>p.y+p.height)){p=v.qh();p.set(h);if(n instanceof D)k=n.Xj(a,b,c,d,e,p);else if(this.path===
n){var k=n,r=a,s=d,q=p;if(!1===k.Hg)k=!1;else if(q.multiply(k.transform),s)b:{var t=r,u=q;if(k.Fm(t,u))k=!0;else{if(void 0===u&&(u=k.transform,t.Vj(k.V))){k=!0;break b}var q=t.left,r=t.right,s=t.top,t=t.bottom,w=v.L(),x=v.L(),z=v.L(),A=v.qh();A.set(u);A.sE(k.transform);A.zz();x.x=r;x.y=s;x.transform(A);w.x=q;w.y=s;w.transform(A);u=!1;no(k,w,x,z)?u=!0:(w.x=r,w.y=t,w.transform(A),no(k,w,x,z)?u=!0:(x.x=q,x.y=t,x.transform(A),no(k,w,x,z)?u=!0:(w.x=q,w.y=s,w.transform(A),no(k,w,x,z)&&(u=!0))));v.$e(A);
v.v(w);v.v(x);v.v(z);k=u}}else k=k.Fm(r,q)}else k=Dm(n,a,d,p);k&&(null!==b&&(n=b(n)),n&&(null===c||c(n))&&e.add(n));v.$e(p)}}}void 0===f&&v.$e(h);return k||null!==this.background||null!==this.Am}void 0===f&&v.$e(h);return!1};v.u(W,{jc:"isOrthogonal"},function(){return 2===(this.mm.value&2)});v.u(W,{rl:"isAvoiding"},function(){return 4===(this.mm.value&4)});W.prototype.computeCurve=function(){if(null===this.ri){var a=this.bd,b=this.jc;this.ri=null!==a&&a===this.Hd&&!b}return this.ri?Hi:this.Je};
W.prototype.computeCorner=function(){if(this.Je===Hi)return 0;var a=this.gz;if(isNaN(a)||0>a)a=10;return a};W.prototype.findMidLabel=function(){for(var a=this.path,b=this.ya.n,c=b.length,d=0;d<c;d++){var e=b[d];if(e!==a&&!e.Sf&&(-Infinity===e.we||isNaN(e.we)))return e}for(a=this.Tf;a.next();)if(b=a.value,-Infinity===b.we||isNaN(b.we))return b;return null};
W.prototype.computeSpacing=function(){if(!this.isVisible())return 0;var a;a=Math.max(14,this.computeThickness());var b=this.bd,c=this.Hd;if(null!==b&&null!==c){var d=this.findMidLabel();if(null!==d){var e=d.Ha,f=d.margin,h=isNaN(e.width)?30:e.width*d.scale+f.left+f.right,e=isNaN(e.height)?14:e.height*d.scale+f.top+f.bottom,d=d.Ut;d===qo||d===Ep||d===Dp?a=Math.max(a,e):d===Cp||d===Gp||d===Bp||d===Fp?a=Math.max(a,h):(b=b.Xa(Ab).xc(c.Xa(Ab))/180*Math.PI,a=Math.max(a,Math.abs(Math.sin(b)*h)+Math.abs(Math.cos(b)*
e)+1));this.Je===Hi&&(a*=1.333)}}return a};W.prototype.arrangeBundledLinks=function(a,b){if(b)for(var c=0;c<a.length;c++)a[c].ic()};W.prototype.computeCurviness=function(){var a=this.rw;if(isNaN(a)){var a=16,b=this.ei;if(null!==b){for(var c=v.jb(),d=0,e=b.links,f=0;f<e.length;f++){var h=e[f],h=h.computeSpacing();c.push(h);d+=h}d=-d/2;for(f=0;f<e.length;f++){h=e[f];if(h===this){a=d+c[f]/2;break}d+=c[f]}b.sp===this.T&&(a=-a);v.sa(c)}}return a};
W.prototype.computeThickness=function(){if(!this.isVisible())return 0;var a=this.path;return null!==a?Math.max(a.lb,1):1};W.prototype.hasCurviness=function(){return!isNaN(this.rw)||null!==this.ei};
W.prototype.adjustPoints=function(a,b,c,d){var e=this.Ps;if(this.jc){if(e===dn)return!1;e===en&&(e=cn)}switch(e){case dn:var f=this.l(a),h=this.l(c);if(!f.Fc(b)||!h.Fc(d)){var e=f.x,f=f.y,k=h.x-e,l=h.y-f,m=Math.sqrt(k*k+l*l);if(!Dc(m,0)){var n=0;Dc(k,0)?n=0>l?-Math.PI/2:Math.PI/2:(n=Math.atan(l/Math.abs(k)),0>k&&(n=Math.PI-n));var h=b.x,p=b.y,l=d.x-h,q=d.y-p,r=Math.sqrt(l*l+q*q),k=0;Dc(l,0)?k=0>q?-Math.PI/2:Math.PI/2:(k=Math.atan(q/Math.abs(l)),0>l&&(k=Math.PI-k));m=r/m;n=k-n;this.Af(a,b);for(a+=
1;a<c;a++)b=this.l(a),k=b.x-e,l=b.y-f,b=Math.sqrt(k*k+l*l),Dc(b,0)||(q=0,Dc(k,0)?q=0>l?-Math.PI/2:Math.PI/2:(q=Math.atan(l/Math.abs(k)),0>k&&(q=Math.PI-q)),k=q+n,b*=m,this.W(a,h+b*Math.cos(k),p+b*Math.sin(k)));this.Af(c,d)}}return!0;case en:f=this.l(a);p=this.l(c);if(!f.Fc(b)||!p.Fc(d)){var e=f.x,f=f.y,h=p.x,p=p.y,m=(h-e)*(h-e)+(p-f)*(p-f),k=b.x,n=b.y,l=d.x,q=d.y,r=0,s=1;0!==l-k?(r=(q-n)/(l-k),s=Math.sqrt(1+1/(r*r))):r=9E9;this.Af(a,b);for(a+=1;a<c;a++){b=this.l(a);var t=b.x,u=b.y,w=.5;0!==m&&(w=
((e-t)*(e-h)+(f-u)*(f-p))/m);var x=e+w*(h-e),z=f+w*(p-f);b=Math.sqrt((t-x)*(t-x)+(u-z)*(u-z));u<r*(t-x)+z&&(b=-b);0<r&&(b=-b);t=k+w*(l-k);w=n+w*(q-n);0!==r?(b=t+b/s,this.W(a,b,w-(b-t)/r)):this.W(a,t,w+b)}this.Af(c,d)}return!0;case cn:return this.jc&&(e=this.l(a),f=this.l(a+1),h=this.l(a+2),K(e.y,f.y)?K(f.x,h.x)?this.W(a+1,f.x,b.y):K(f.y,h.y)&&this.W(a+1,b.x,f.y):K(e.x,f.x)&&(K(f.y,h.y)?this.W(a+1,b.x,f.y):K(f.x,h.x)&&this.W(a+1,f.x,b.y)),e=this.l(c),f=this.l(c-1),h=this.l(c-2),K(e.y,f.y)?K(f.x,h.x)?
this.W(c-1,f.x,d.y):K(f.y,h.y)&&this.W(c-1,d.x,f.y):K(e.x,f.x)&&(K(f.y,h.y)?this.W(c-1,d.x,f.y):K(f.x,h.x)&&this.W(c-1,f.x,d.y))),this.Af(a,b),this.Af(c,d),!0;default:return!1}};
W.prototype.addOrthoPoints=function(a,b,c,d,e,f){b=-45<=b&&45>b?0:45<=b&&135>b?90:135<=b&&225>b?180:270;d=-45<=d&&45>d?0:45<=d&&135>d?90:135<=d&&225>d?180:270;var h=e.V.copy(),k=f.V.copy();if(h.G()&&k.G()){h.Rf(8,8);k.Rf(8,8);h.dj(a);k.dj(c);var l,m;if(0===b)if(c.x>a.x||270===d&&c.y<a.y&&k.right>a.x||90===d&&c.y>a.y&&k.right>a.x)l=new y(c.x,a.y),m=new y(c.x,(a.y+c.y)/2),180===d?(l.x=this.computeMidOrthoPosition(a.x,c.x,!1),m.x=l.x,m.y=c.y):270===d&&c.y<a.y||90===d&&c.y>a.y?(l.x=a.x<k.left?this.computeMidOrthoPosition(a.x,
k.left,!1):a.x<k.right&&(270===d&&a.y<k.top||90===d&&a.y>k.bottom)?this.computeMidOrthoPosition(a.x,c.x,!1):k.right,m.x=l.x,m.y=c.y):0===d&&a.x<k.left&&a.y>k.top&&a.y<k.bottom&&(l.x=a.x,l.y=a.y<c.y?Math.min(c.y,k.top):Math.max(c.y,k.bottom),m.y=l.y);else{l=new y(a.x,c.y);m=new y((a.x+c.x)/2,c.y);if(180===d||90===d&&c.y<h.top||270===d&&c.y>h.bottom)180===d&&(k.Fa(a)||h.Fa(c))?l.y=this.computeMidOrthoPosition(a.y,c.y,!0):c.y<a.y&&(180===d||90===d)?l.y=this.computeMidOrthoPosition(h.top,Math.max(c.y,
k.bottom),!0):c.y>a.y&&(180===d||270===d)&&(l.y=this.computeMidOrthoPosition(h.bottom,Math.min(c.y,k.top),!0)),m.x=c.x,m.y=l.y;if(l.y>h.top&&l.y<h.bottom)if(c.x>=h.left&&c.x<=a.x||a.x<=k.right&&a.x>=c.x){if(90===d||270===d)l=new y(Math.max((a.x+c.x)/2,a.x),a.y),m=new y(l.x,c.y)}else l.y=270===d||(0===d||180===d)&&c.y<a.y?Math.min(c.y,0===d?h.top:Math.min(h.top,k.top)):Math.max(c.y,0===d?h.bottom:Math.max(h.bottom,k.bottom)),m.x=c.x,m.y=l.y}else if(180===b)if(c.x<a.x||270===d&&c.y<a.y&&k.left<a.x||
90===d&&c.y>a.y&&k.left<a.x)l=new y(c.x,a.y),m=new y(c.x,(a.y+c.y)/2),0===d?(l.x=this.computeMidOrthoPosition(a.x,c.x,!1),m.x=l.x,m.y=c.y):270===d&&c.y<a.y||90===d&&c.y>a.y?(l.x=a.x>k.right?this.computeMidOrthoPosition(a.x,k.right,!1):a.x>k.left&&(270===d&&a.y<k.top||90===d&&a.y>k.bottom)?this.computeMidOrthoPosition(a.x,c.x,!1):k.left,m.x=l.x,m.y=c.y):180===d&&a.x>k.right&&a.y>k.top&&a.y<k.bottom&&(l.x=a.x,l.y=a.y<c.y?Math.min(c.y,k.top):Math.max(c.y,k.bottom),m.y=l.y);else{l=new y(a.x,c.y);m=new y((a.x+
c.x)/2,c.y);if(0===d||90===d&&c.y<h.top||270===d&&c.y>h.bottom)0===d&&(k.Fa(a)||h.Fa(c))?l.y=this.computeMidOrthoPosition(a.y,c.y,!0):c.y<a.y&&(0===d||90===d)?l.y=this.computeMidOrthoPosition(h.top,Math.max(c.y,k.bottom),!0):c.y>a.y&&(0===d||270===d)&&(l.y=this.computeMidOrthoPosition(h.bottom,Math.min(c.y,k.top),!0)),m.x=c.x,m.y=l.y;if(l.y>h.top&&l.y<h.bottom)if(c.x<=h.right&&c.x>=a.x||a.x>=k.left&&a.x<=c.x){if(90===d||270===d)l=new y(Math.min((a.x+c.x)/2,a.x),a.y),m=new y(l.x,c.y)}else l.y=270===
d||(0===d||180===d)&&c.y<a.y?Math.min(c.y,180===d?h.top:Math.min(h.top,k.top)):Math.max(c.y,180===d?h.bottom:Math.max(h.bottom,k.bottom)),m.x=c.x,m.y=l.y}else if(90===b)if(c.y>a.y||180===d&&c.x<a.x&&k.bottom>a.y||0===d&&c.x>a.x&&k.bottom>a.y)l=new y(a.x,c.y),m=new y((a.x+c.x)/2,c.y),270===d?(l.y=this.computeMidOrthoPosition(a.y,c.y,!0),m.x=c.x,m.y=l.y):180===d&&c.x<a.x||0===d&&c.x>a.x?(l.y=a.y<k.top?this.computeMidOrthoPosition(a.y,k.top,!0):a.y<k.bottom&&(180===d&&a.x<k.left||0===d&&a.x>k.right)?
this.computeMidOrthoPosition(a.y,c.y,!0):k.bottom,m.x=c.x,m.y=l.y):90===d&&a.y<k.top&&a.x>k.left&&a.x<k.right&&(l.x=a.x<c.x?Math.min(c.x,k.left):Math.max(c.x,k.right),l.y=a.y,m.x=l.x);else{l=new y(c.x,a.y);m=new y(c.x,(a.y+c.y)/2);if(270===d||0===d&&c.x<h.left||180===d&&c.x>h.right)270===d&&(k.Fa(a)||h.Fa(c))?l.x=this.computeMidOrthoPosition(a.x,c.x,!1):c.x<a.x&&(270===d||0===d)?l.x=this.computeMidOrthoPosition(h.left,Math.max(c.x,k.right),!1):c.x>a.x&&(270===d||180===d)&&(l.x=this.computeMidOrthoPosition(h.right,
Math.min(c.x,k.left),!1)),m.x=l.x,m.y=c.y;if(l.x>h.left&&l.x<h.right)if(c.y>=h.top&&c.y<=a.y||a.y<=k.bottom&&a.y>=c.y){if(0===d||180===d)l=new y(a.x,Math.max((a.y+c.y)/2,a.y)),m=new y(c.x,l.y)}else l.x=180===d||(90===d||270===d)&&c.x<a.x?Math.min(c.x,90===d?h.left:Math.min(h.left,k.left)):Math.max(c.x,90===d?h.right:Math.max(h.right,k.right)),m.x=l.x,m.y=c.y}else if(c.y<a.y||180===d&&c.x<a.x&&k.top<a.y||0===d&&c.x>a.x&&k.top<a.y)l=new y(a.x,c.y),m=new y((a.x+c.x)/2,c.y),90===d?(l.y=this.computeMidOrthoPosition(a.y,
c.y,!0),m.x=c.x,m.y=l.y):180===d&&c.x<a.x||0===d&&c.x>=a.x?(l.y=a.y>k.bottom?this.computeMidOrthoPosition(a.y,k.bottom,!0):a.y>k.top&&(180===d&&a.x<k.left||0===d&&a.x>k.right)?this.computeMidOrthoPosition(a.y,c.y,!0):k.top,m.x=c.x,m.y=l.y):270===d&&a.y>k.bottom&&a.x>k.left&&a.x<k.right&&(l.x=a.x<c.x?Math.min(c.x,k.left):Math.max(c.x,k.right),l.y=a.y,m.x=l.x);else{l=new y(c.x,a.y);m=new y(c.x,(a.y+c.y)/2);if(90===d||0===d&&c.x<h.left||180===d&&c.x>h.right)90===d&&(k.Fa(a)||h.Fa(c))?l.x=this.computeMidOrthoPosition(a.x,
c.x,!1):c.x<a.x&&(90===d||0===d)?l.x=this.computeMidOrthoPosition(h.left,Math.max(c.x,k.right),!1):c.x>a.x&&(90===d||180===d)&&(l.x=this.computeMidOrthoPosition(h.right,Math.min(c.x,k.left),!1)),m.x=l.x,m.y=c.y;if(l.x>h.left&&l.x<h.right)if(c.y<=h.bottom&&c.y>=a.y||a.y>=k.top&&a.y<=c.y){if(0===d||180===d)l=new y(a.x,Math.min((a.y+c.y)/2,a.y)),m=new y(c.x,l.y)}else l.x=180===d||(90===d||270===d)&&c.x<a.x?Math.min(c.x,270===d?h.left:Math.min(h.left,k.left)):Math.max(c.x,270===d?h.right:Math.max(h.right,
k.right)),m.x=l.x,m.y=c.y}var n=l,p=m;if(this.rl){var q=this.g,r;(r=null===q)||(q.Na.df?r=!1:(r=q.Wa,r=r instanceof Xg?!r.Wv||r.lH:!0),r=!r);if(r||h.Fa(c)&&!f.Zh(e)||k.Fa(a)&&!e.Zh(f)||e===f||this.layer.Gc)a=!1;else if(e=am(q,!0,this.Sa,null),e.hp(Math.min(a.x,n.x),Math.min(a.y,n.y),Math.abs(a.x-n.x),Math.abs(a.y-n.y))&&e.hp(Math.min(n.x,p.x),Math.min(n.y,p.y),Math.abs(n.x-p.x),Math.abs(n.y-p.y))&&e.hp(Math.min(p.x,c.x),Math.min(p.y,c.y),Math.abs(p.x-c.x),Math.abs(p.y-c.y)))a=!1;else if(h=h.copy().ci(k),
h.Rf(2*e.No,2*e.Lo),Wp(e,a,b,c,d,h),k=Xp(e,c.x,c.y),e.abort||999999!==k||(dm(e),k=e.XE,h.Rf(e.No*k,e.Lo*k),Wp(e,a,b,c,d,h),k=Xp(e,c.x,c.y)),e.abort||999999!==k||(dm(e),k=e.lE,h.Rf(e.No*k,e.Lo*k),Wp(e,a,b,c,d,h),k=Xp(e,c.x,c.y)),!e.abort&&999999===k&&e.pF&&(dm(e),Wp(e,a,b,c,d,e.mb),k=Xp(e,c.x,c.y)),!e.abort&&999999>k&&0!==Xp(e,c.x,c.y)){Yp(this,e,c.x,c.y,d,!0);d=this.l(2);if(4>this.oa)0===b||180===b?(d.x=a.x,d.y=c.y):(d.x=c.x,d.y=a.y),this.W(2,d.x,d.y),this.w(3,d.x,d.y);else if(c=this.l(3),0===b||
180===b)K(d.x,c.x)?(b=0===b?Math.max(d.x,a.x):Math.min(d.x,a.x),this.W(2,b,a.y),this.W(3,b,c.y)):K(d.y,c.y)?(Math.abs(a.y-d.y)<=e.Lo/2&&(this.W(2,d.x,a.y),this.W(3,c.x,a.y)),this.w(2,d.x,a.y)):this.W(2,a.x,d.y);else if(90===b||270===b)K(d.y,c.y)?(b=90===b?Math.max(d.y,a.y):Math.min(d.y,a.y),this.W(2,a.x,b),this.W(3,c.x,b)):K(d.x,c.x)?(Math.abs(a.x-d.x)<=e.No/2&&(this.W(2,a.x,d.y),this.W(3,a.x,c.y)),this.w(2,a.x,d.y)):this.W(2,d.x,a.y);a=!0}else a=!1}else a=!1;a||(this.Uh(l),this.Uh(m))}};
W.prototype.computeMidOrthoPosition=function(a,b){if(this.hasCurviness()){var c=this.computeCurviness();return(a+b)/2+c}return(a+b)/2};function Gh(a){if(!a.rl)return!1;var b=a.points.n,c=b.length;if(4>c)return!1;a=am(a.g,!0,a.Sa,null);for(var d=1;d<c-2;d++){var e=b[d],f=b[d+1];if(!a.hp(Math.min(e.x,f.x),Math.min(e.y,f.y),Math.abs(e.x-f.x),Math.abs(e.y-f.y)))return!0}return!1}
function Yp(a,b,c,d,e,f){var h=b.No,k=b.Lo,l=Xp(b,c,d),m=c,n=d;for(0===e?m+=h:90===e?n+=k:180===e?m-=h:n-=k;1<l&&Xp(b,m,n)===l-1;)c=m,d=n,0===e?m+=h:90===e?n+=k:180===e?m-=h:n-=k,l-=1;if(f){if(1<l)if(180===e||0===e)c=Math.floor(c/h)*h+h/2;else if(90===e||270===e)d=Math.floor(d/k)*k+k/2}else c=Math.floor(c/h)*h+h/2,d=Math.floor(d/k)*k+k/2;1<l&&(f=e,m=c,n=d,0===e?(f=90,n+=k):90===e?(f=180,m-=h):180===e?(f=270,n-=k):270===e&&(f=0,m+=h),Xp(b,m,n)===l-1?Yp(a,b,m,n,f,!1):(m=c,n=d,0===e?(f=270,n-=k):90===
e?(f=0,m+=h):180===e?(f=90,n+=k):270===e&&(f=180,m-=h),Xp(b,m,n)===l-1&&Yp(a,b,m,n,f,!1)));a.Yk(c,d)}W.prototype.findClosestSegment=function(a){var b=a.x;a=a.y;for(var c=this.l(0),d=this.l(1),e=Sa(b,a,c.x,c.y,d.x,d.y),f=0,h=1;h<this.oa-1;h++){var c=this.l(h+1),k=Sa(b,a,d.x,d.y,c.x,c.y),d=c;k<e&&(f=h,e=k)}return f};W.prototype.invalidateGeometry=W.prototype.se=function(){this.Ra=null};v.u(W,{ml:"geometry"},function(){null===this.Ra&&(this.gn(),this.Ra=this.makeGeometry());return this.Ra});
W.prototype.Vm=function(a){if(!a){if(!1===this.Mf)return;a=this.Ye();if(null!==this.Ra&&(null===a||null!==a.ml))return}this.Ra=this.makeGeometry();a=this.path;if(null!==a){a.Ra=this.Ra;for(var b=this.ya.n,c=b.length,d=0;d<c;d++){var e=b[d];e!==a&&e.Sf&&e instanceof X&&(e.Ra=this.Ra)}}};
W.prototype.makeGeometry=function(){var a=this.oa;if(2>a){var b=new re(De),c=new Ee(0,0);b.Ub.add(c);return b}var d=!1,b=this.g;null!==b&&Lp(this)&&b.xk.contains(this)&&null!==this.Gv&&(d=!0);var c=b=0,e=this.l(0).copy(),f=e.copy(),b=this.Zc.n,h=this.computeCurve();if(h===Hi&&3<=a&&!Dc(this.Hp,0))if(3===a)var k=this.l(1),b=Math.min(e.x,k.x),c=Math.min(e.y,k.y),k=this.l(2),b=Math.min(b,k.x),c=Math.min(c,k.y);else{if(this.jc)for(k=0;k<a;k++)c=b[k],f.x=Math.min(c.x,f.x),f.y=Math.min(c.y,f.y);else for(k=
3;k<a;k+=3)k+3>=a&&(k=a-1),b=this.l(k),f.x=Math.min(b.x,f.x),f.y=Math.min(b.y,f.y);b=f.x;c=f.y}else{for(k=0;k<a;k++)c=b[k],f.x=Math.min(c.x,f.x),f.y=Math.min(c.y,f.y);b=f.x;c=f.y}b-=this.My.x;c-=this.My.y;e.x-=b;e.y-=c;if(2===a){var l=this.l(1).copy();l.x-=b;l.y-=c;0!==Up(this)&&Zp(this,e,!0,f);0!==Vp(this)&&Zp(this,l,!1,f);b=new re(Ge);b.za=e.x;b.xa=e.y;b.I=l.x;b.J=l.y}else{l=v.s();0!==Up(this)&&Zp(this,e,!0,f);N(l,e.x,e.y,!1,!1);if(h===Hi&&3<=a&&!Dc(this.Hp,0))if(3===a)k=this.l(1),a=k.x-b,d=k.y-
c,k=this.l(2).copy(),k.x-=b,k.y-=c,0!==Vp(this)&&Zp(this,k,!1,f),O(l,a,d,a,d,k.x,k.y);else if(this.jc){for(var f=new y(b,c),e=this.l(1).copy(),h=new y(b,c),a=new y(b,c),d=this.l(0),m=null,n=this.Hp/3,k=1;k<this.oa-1;k++){var m=this.l(k),p=d,q=m,r=this.l($p(this,m,k,!1));if(!Dc(p.x,q.x)||!Dc(q.x,r.x))if(!Dc(p.y,q.y)||!Dc(q.y,r.y)){var s=n,t=h,u=a;isNaN(s)&&(s=this.Hp/3);var w=p.x,p=p.y,x=q.x,q=q.y,z=r.x,r=r.y,A=s*aq(w,p,x,q),s=s*aq(x,q,z,r);Dc(p,q)&&Dc(x,z)&&(x>w?r>q?(t.x=x-A,t.y=q-A,u.x=x+s,u.y=q+
s):(t.x=x-A,t.y=q+A,u.x=x+s,u.y=q-s):r>q?(t.x=x+A,t.y=q-A,u.x=x-s,u.y=q+s):(t.x=x+A,t.y=q+A,u.x=x-s,u.y=q-s));Dc(w,x)&&Dc(q,r)&&(q>p?(z>x?(t.x=x-A,t.y=q-A,u.x=x+s):(t.x=x+A,t.y=q-A,u.x=x-s),u.y=q+s):(z>x?(t.x=x-A,t.y=q+A,u.x=x+s):(t.x=x+A,t.y=q+A,u.x=x-s),u.y=q-s));if(Dc(w,x)&&Dc(x,z)||Dc(p,q)&&Dc(q,r))w=.5*(w+z),p=.5*(p+r),t.x=w,t.y=p,u.x=w,u.y=p;1===k?(e.x=.5*(d.x+m.x),e.y=.5*(d.y+m.y)):2===k&&Dc(d.x,this.l(0).x)&&Dc(d.y,this.l(0).y)&&(e.x=.5*(d.x+m.x),e.y=.5*(d.y+m.y));O(l,e.x-b,e.y-c,h.x-b,h.y-
c,m.x-b,m.y-c);f.set(h);e.set(a);d=m}}k=d.x;d=d.y;f=this.l(this.oa-1);k=.5*(k+f.x);d=.5*(d+f.y);O(l,a.x-b,a.y-c,k-b,d-c,f.x-b,f.y-c)}else for(k=3;k<a;k+=3)d=this.l(k-2),k+3>=a&&(k=a-1),f=this.l(k-1),e=this.l(k),k===a-1&&0!==Vp(this)&&(e=e.copy(),Zp(this,e,!1,Xc)),O(l,d.x-b,d.y-c,f.x-b,f.y-c,e.x-b,e.y-c);else{f=v.L();f.assign(this.l(0));for(k=1;k<a;){k=$p(this,f,k,1<k);t=this.l(k);if(k>=a-1){f!==t&&(0!==Vp(this)&&(t=t.copy(),Zp(this,t,!1,Xc)),bq(this,l,-b,-c,f,t,d));break}k=$p(this,t,k+1,k<a-3);e=
l;h=-b;m=-c;n=f;u=this.l(k);w=f;p=d;K(n.y,t.y)&&K(t.x,u.x)?(s=this.computeCorner(),s=Math.min(s,Math.abs(t.x-n.x)/2),s=x=Math.min(s,Math.abs(u.y-t.y)/2),K(s,0)?(bq(this,e,h,m,n,t,p),w.assign(t)):(q=t.x,z=t.y,r=q,A=z,q=t.x>n.x?t.x-s:t.x+s,A=u.y>t.y?t.y+x:t.y-x,bq(this,e,h,m,n,new y(q,z),p),cf(e,t.x+h,t.y+m,r+h,A+m),w.m(r,A))):K(n.x,t.x)&&K(t.y,u.y)?(s=this.computeCorner(),x=Math.min(s,Math.abs(t.y-n.y)/2),x=s=Math.min(x,Math.abs(u.x-t.x)/2),K(s,0)?(bq(this,e,h,m,n,t,p),w.assign(t)):(q=t.x,A=z=t.y,
z=t.y>n.y?t.y-x:t.y+x,r=u.x>t.x?t.x+s:t.x-s,bq(this,e,h,m,n,new y(q,z),p),cf(e,t.x+h,t.y+m,r+h,A+m),w.m(r,A))):(bq(this,e,h,m,n,t,p),w.assign(t))}v.v(f)}b=l.o;v.q(l)}return b};function aq(a,b,c,d){a=c-a;if(isNaN(a)||Infinity===a||-Infinity===a)return NaN;0>a&&(a=-a);b=d-b;if(isNaN(b)||Infinity===b||-Infinity===b)return NaN;0>b&&(b=-b);return Dc(a,0)?b:Dc(b,0)?a:Math.sqrt(a*a+b*b)}
function Zp(a,b,c,d){var e=a.oa;if(!(2>e))if(c){var f=a.l(1);c=f.x-d.x;d=f.y-d.y;f=aq(b.x,b.y,c,d);0!==f&&(e=2===e?.5*f:f,a=Up(a),a>e&&(a=e),c=a*(c-b.x)/f,a=a*(d-b.y)/f,b.x+=c,b.y+=a)}else f=a.l(e-2),c=f.x-d.x,d=f.y-d.y,f=aq(b.x,b.y,c,d),0!==f&&(e=2===e?.5*f:f,a=Vp(a),a>e&&(a=e),c=a*(b.x-c)/f,a=a*(b.y-d)/f,b.x-=c,b.y-=a)}
function $p(a,b,c,d){for(var e=a.oa,f=b;Dc(b.x,f.x)&&Dc(b.y,f.y);){if(c>=e)return e-1;f=a.l(c++)}if(!Dc(b.x,f.x)&&!Dc(b.y,f.y))return c-1;for(var h=f;Dc(b.x,f.x)&&Dc(f.x,h.x)&&(!d||(b.y>=f.y?f.y>=h.y:f.y<=h.y))||Dc(b.y,f.y)&&Dc(f.y,h.y)&&(!d||(b.x>=f.x?f.x>=h.x:f.x<=h.x));){if(c>=e)return e-1;h=a.l(c++)}return c-2}
function bq(a,b,c,d,e,f,h){if(!h&&Lp(a)){h=[];var k=0;a.isVisible()&&(k=cq(a,e,f,h));var l=e.x,l=e.y;if(0<k)if(K(e.y,f.y))if(e.x<f.x)for(var m=0;m<k;){var n=Math.max(e.x,Math.min(h[m++]-5,f.x-10));b.lineTo(n+c,f.y+d);for(var l=n+c,p=Math.min(n+10,f.x);m<k;){var q=h[m];if(q<p+10)m++,p=Math.min(q+5,f.x);else break}q=(n+p)/2+c;q=f.y-10+d;n=p+c;p=f.y+d;a.Je===zi?N(b,n,p,!1,!1):O(b,l,q,n,q,n,p)}else for(m=k-1;0<=m;){n=Math.min(e.x,Math.max(h[m--]+5,f.x+10));b.lineTo(n+c,f.y+d);l=n+c;for(p=Math.max(n-10,
f.x);0<=m;)if(q=h[m],q>p-10)m--,p=Math.max(q-5,f.x);else break;q=f.y-10+d;n=p+c;p=f.y+d;a.Je===zi?N(b,n,p,!1,!1):O(b,l,q,n,q,n,p)}else if(K(e.x,f.x))if(e.y<f.y)for(m=0;m<k;){n=Math.max(e.y,Math.min(h[m++]-5,f.y-10));b.lineTo(f.x+c,n+d);l=n+d;for(p=Math.min(n+10,f.y);m<k;)if(q=h[m],q<p+10)m++,p=Math.min(q+5,f.y);else break;q=f.x-10+c;n=f.x+c;p+=d;a.Je===zi?N(b,n,p,!1,!1):O(b,q,l,q,p,n,p)}else for(m=k-1;0<=m;){n=Math.min(e.y,Math.max(h[m--]+5,f.y+10));b.lineTo(f.x+c,n+d);l=n+d;for(p=Math.max(n-10,f.y);0<=
m;)if(q=h[m],q>p-10)m--,p=Math.max(q-5,f.y);else break;q=f.x-10+c;n=f.x+c;p+=d;a.Je===zi?N(b,n,p,!1,!1):O(b,q,l,q,p,n,p)}}b.lineTo(f.x+c,f.y+d)}
function cq(a,b,c,d){var e=a.g;if(null===e||b.K(c))return 0;for(e=e.Nw;e.next();){var f=e.value;if(null!==f&&f.visible)for(var f=f.wb.n,h=f.length,k=0;k<h;k++){var l=f[k];if(l instanceof W){if(l===a)return 0<d.length&&d.sort(function(a,b){return a-b}),d.length;if(l.isVisible()&&Lp(l)){var m=l.an;m.G()&&a.an.yg(m)&&!a.usesSamePort(l)&&(m=l.path,null!==m&&m.wl()&&dq(b,c,d,l))}}}}0<d.length&&d.sort(function(a,b){return a-b});return d.length}
function dq(a,b,c,d){for(var e=K(a.y,b.y),f=d.oa,h=d.l(0),k=v.L(),l=1;l<f;l++){var m=d.l(l);if(l<f-1){var n=d.l(l+1);if(h.y===m.y&&m.y===n.y){if(m.x>h.x&&n.x>m.x||m.x<h.x&&n.x<m.x)m=n,l++}else h.x===m.x&&m.x===n.x&&(m.y>h.y&&n.y>m.y||m.y<h.y&&n.y<m.y)&&(m=n,l++)}a:{var n=k,p=a.x,q=a.y,r=b.x,s=b.y,t=h.x,h=h.y,u=m.x,w=m.y;if(!K(p,r)){if(K(q,s)&&K(t,u)&&Math.min(p,r)<t&&Math.max(p,r)>t&&Math.min(h,w)<q&&Math.max(h,w)>q&&!K(h,w)){n.x=t;n.y=q;n=!0;break a}}else if(!K(q,s)&&K(h,w)&&Math.min(q,s)<h&&Math.max(q,
s)>h&&Math.min(t,u)<p&&Math.max(t,u)>p&&!K(t,u)){n.x=p;n.y=h;n=!0;break a}n.x=0;n.y=0;n=!1}n&&(e?c.push(k.x):c.push(k.y));h=m}v.v(k)}v.u(W,{gt:"firstPickIndex"},function(){return 2>=this.oa?0:this.jc||Op(this)!==sb?1:0});v.u(W,{Mw:"lastPickIndex"},function(){var a=this.oa;return 0===a?0:2>=a?a-1:this.jc||Pp(this)!==sb?a-2:a-1});function Lp(a){a=a.Je;return a===yi||a===zi}function Np(a,b){if(b||Lp(a)){var c=a.g;null===c||c.xk.contains(a)||null===a.Gv||c.xk.add(a,a.Gv)}}
function Bi(a,b){var c=a.layer;if(null!==c&&c.visible&&!c.Gc){var d=c.g;if(null!==d)for(var e=!1,d=d.Nw;d.next();){var f=d.value;if(f.visible)if(f===c)for(var e=!0,h=!1,f=f.wb.n,k=f.length,l=0;l<k;l++){var m=f[l];m instanceof W&&(m===a?h=!0:h&&eq(a,m,b))}else if(e)for(f=f.wb.n,k=f.length,l=0;l<k;l++)m=f[l],m instanceof W&&eq(a,m,b)}}}function eq(a,b,c){if(null!==b&&null!==b.Ra&&Lp(b)){var d=b.an;d.G()&&(a.an.yg(d)||c.yg(d))&&(a.usesSamePort(b)||b.se())}}
W.prototype.usesSamePort=function(a){var b=this.oa,c=a.oa;if(0<b&&0<c){var d=this.l(0),e=a.l(0);if(d.Fc(e))return!0;b=this.l(b-1);a=a.l(c-1);if(b.Fc(a)||d.Fc(a)||b.Fc(e))return!0}else if(this.T===a.T||this.Z===a.Z||this.T===a.Z||this.Z===a.T)return!0;return!1};
W.prototype.isVisible=function(){if(!R.prototype.isVisible.call(this))return!1;var a=this.Sa,b=!0,c=this.g;null!==c&&(b=c.Sd);c=this.T;if(null!==c){if(this.Hc&&b&&!c.nd)return!1;if(c===a)return!0;c=c.findVisibleNode();if(null===c||c===a)return!1}c=this.Z;if(null!==c){if(this.Hc&&!b&&!c.nd)return!1;if(c===a)return!0;b=c.findVisibleNode();if(null===b||b===a)return!1}return!0};W.prototype.od=function(a){R.prototype.od.call(this,a);null!==this.ei&&this.ei.Qm();if(null!==this.De)for(var b=this.De.i;b.next();)b.value.od(a)};
v.defineProperty(W,{Ps:"adjusting"},function(){return this.Rp},function(a){var b=this.Rp;b!==a&&(this.Rp=a,this.h("adjusting",b,a))});v.defineProperty(W,{gz:"corner"},function(){return this.lq},function(a){var b=this.lq;b!==a&&(this.lq=a,this.se(),this.h("corner",b,a))});v.defineProperty(W,{Je:"curve"},function(){return this.oq},function(a){var b=this.oq;b!==a&&(this.oq=a,this.ic(),this.se(),Np(this,b===zi||b===yi||a===zi||a===yi),this.h("curve",b,a))});
v.defineProperty(W,{rw:"curviness"},function(){return this.pq},function(a){var b=this.pq;b!==a&&(this.pq=a,this.ic(),this.se(),this.h("curviness",b,a))});v.defineProperty(W,{gx:"routing"},function(){return this.mm},function(a){var b=this.mm;b!==a&&(this.mm=a,this.ri=null,this.ic(),Np(this,2===(b.value&2)||2===(a.value&2)),this.h("routing",b,a))});v.defineProperty(W,{Hp:"smoothness"},function(){return this.rs},function(a){var b=this.rs;b!==a&&(this.rs=a,this.se(),this.h("smoothness",b,a))});
function Jp(a){var b=a.fg;if(null!==b){var c=a.rg;if(null!==c){var d=a.Bh;a=a.Th;for(var e=null,f=null,h=b.fc.n,k=h.length,l=0;l<k;l++){var m=h[l];if(m.fg===b&&m.Bh===d&&m.rg===c&&m.Th===a||m.fg===c&&m.Bh===a&&m.rg===b&&m.Th===d)null===f?f=m:(null===e&&(e=[],e.push(f)),e.push(m))}if(null!==e){f=rp(b,c,d,a);null===f&&(f=new lk,f.sp=b,f.Vw=d,f.It=c,f.Ww=a,qp(b,f),qp(c,f));f.links=e;for(l=0;l<e.length;l++)m=e[l],m.ei=f;f.Qm()}}}}
function Ip(a){var b=a.ei;null!==b&&(a.ei=null,a=b.links.indexOf(a),0<=a&&(v.Vh(b.links,a),b.Qm()))}function lk(){v.ec(this);this.ev=!1;this.Ww=this.It=this.Vw=this.sp=null;this.links=[]}lk.prototype.Qm=function(){if(!this.ev){var a=this.links;0<a.length&&(a=a[0].g,null!==a&&a.GB.add(this))}this.ev=!0};
lk.prototype.xA=function(){if(this.ev){this.ev=!1;var a=this.links;if(0<a.length){var b=a[0],c=b.g;b.arrangeBundledLinks(a,null===c||c.Sm);1===a.length&&(b.ei=null,a.length=0)}0===a.length&&(a=this.sp,null!==this&&null!==a.uh&&a.uh.remove(this),a=this.It,null!==this&&null!==a.uh&&a.uh.remove(this))}};v.Pd(lk,{sp:!0,Vw:!0,It:!0,Ww:!0,links:!0,spacing:!0});
function bm(){v.ec(this);this.oA=this.group=null;this.rt=!0;this.abort=!1;this.mg=this.lg=1;this.nr=this.mr=-1;this.je=this.ie=8;this.oc=null;this.pF=!1;this.XE=22;this.lE=111}v.Pd(bm,{group:!0,oA:!0,rt:!0,abort:!0,pF:!0,XE:!0,lE:!0});
bm.prototype.initialize=function(a){if(!(0>=a.width||0>=a.height)){var b=a.y,c=a.x+a.width,d=a.y+a.height;this.lg=Math.floor((a.x-this.ie)/this.ie)*this.ie;this.mg=Math.floor((b-this.je)/this.je)*this.je;this.mr=Math.ceil((c+2*this.ie)/this.ie)*this.ie;this.nr=Math.ceil((d+2*this.je)/this.je)*this.je;a=1+(Math.ceil((this.mr-this.lg)/this.ie)|0);b=1+(Math.ceil((this.nr-this.mg)/this.je)|0);if(null===this.oc||this.Fo<a-1||this.Go<b-1){c=[];for(d=0;d<=a;d++){for(var e=[],f=0;f<=b;f++)e[f]=0;c[d]=e}this.oc=
c;this.Fo=a-1;this.Go=b-1}if(null!==this.oc)for(a=0;a<=this.Fo;a++)for(b=0;b<=this.Go;b++)this.oc[a][b]=999999}};v.u(bm,{mb:null},function(){return new B(this.lg,this.mg,this.mr-this.lg,this.nr-this.mg)});v.defineProperty(bm,{No:null},function(){return this.ie},function(a){0<a&&a!==this.ie&&(this.ie=a,this.initialize(this.mb))});v.defineProperty(bm,{Lo:null},function(){return this.je},function(a){0<a&&a!==this.je&&(this.je=a,this.initialize(this.mb))});
function fq(a,b,c){return a.lg<=b&&b<=a.mr&&a.mg<=c&&c<=a.nr}function Xp(a,b,c){if(!fq(a,b,c))return 0;b-=a.lg;b/=a.ie;c-=a.mg;c/=a.je;return a.oc[b|0][c|0]}function em(a,b,c){fq(a,b,c)&&(b-=a.lg,b/=a.ie,c-=a.mg,c/=a.je,a.oc[b|0][c|0]=0)}function dm(a){if(null!==a.oc)for(var b=0;b<=a.Fo;b++)for(var c=0;c<=a.Go;c++)1<=a.oc[b][c]&&(a.oc[b][c]|=999999)}
bm.prototype.hp=function(a,b,c,d){if(a>this.mr||a+c<this.lg||b>this.nr||b+d<this.mg)return!0;a=(a-this.lg)/this.ie|0;b=(b-this.mg)/this.je|0;c=Math.max(0,c)/this.ie+1|0;var e=Math.max(0,d)/this.je+1|0;0>a&&(c+=a,a=0);0>b&&(e+=b,b=0);if(0>c||0>e)return!0;d=Math.min(a+c-1,this.Fo)|0;for(c=Math.min(b+e-1,this.Go)|0;a<=d;a++)for(e=b;e<=c;e++)if(0===this.oc[a][e])return!1;return!0};
function gq(a,b,c,d,e,f,h,k,l){if(!(b<f||b>h||c<k||c>l)){var m,n;m=b|0;n=c|0;var p=a.oc[m][n];if(1<=p&&999999>p)for(e?n+=d:m+=d,p+=1;f<=m&&m<=h&&k<=n&&n<=l&&!(p>=a.oc[m][n]);)a.oc[m][n]=p,p+=1,e?n+=d:m+=d;m=e?n:m;if(e)if(0<d)for(c+=d;c<m;c+=d)gq(a,b,c,1,!e,f,h,k,l),gq(a,b,c,-1,!e,f,h,k,l);else for(c+=d;c>m;c+=d)gq(a,b,c,1,!e,f,h,k,l),gq(a,b,c,-1,!e,f,h,k,l);else if(0<d)for(b+=d;b<m;b+=d)gq(a,b,c,1,!e,f,h,k,l),gq(a,b,c,-1,!e,f,h,k,l);else for(b+=d;b>m;b+=d)gq(a,b,c,1,!e,f,h,k,l),gq(a,b,c,-1,!e,f,h,
k,l)}}function hq(a,b,c,d,e,f,h,k,l,m,n){for(var p=b|0,q=c|0,r=a.oc[p][q];0===r&&p>k&&p<l&&q>m&&q<n;)if(h?q+=f:p+=f,r=a.oc[p][q],1>=Math.abs(p-d)&&1>=Math.abs(q-e))return a.abort=!0,0;p=b|0;q=c|0;r=a.oc[p][q];b=1;for(a.oc[p][q]=b;0===r&&p>k&&p<l&&q>m&&q<n;)h?q+=f:p+=f,r=a.oc[p][q],a.oc[p][q]=b,b+=1;return h?q:p}
function Wp(a,b,c,d,e,f){if(null!==a.oc){a.abort=!1;var h=b.x,k=b.y;if(fq(a,h,k)){var h=h-a.lg,h=h/a.ie,k=k-a.mg,k=k/a.je,l=d.x,m=d.y;if(fq(a,l,m))if(l-=a.lg,l/=a.ie,m-=a.mg,m/=a.je,1>=Math.abs(h-l)&&1>=Math.abs(k-m))a.abort=!0;else{var n=f.x;b=f.y;d=f.x+f.width;var p=f.y+f.height,n=n-a.lg,n=n/a.ie;b-=a.mg;b/=a.je;d-=a.lg;d/=a.ie;p-=a.mg;p/=a.je;f=Math.max(0,Math.min(a.Fo,n|0));d=Math.min(a.Fo,Math.max(0,d|0));b=Math.max(0,Math.min(a.Go,b|0));var p=Math.min(a.Go,Math.max(0,p|0)),h=h|0,k=k|0,l=l|0,
m=m|0,n=h,q=k,r=0===c||90===c?1:-1;(c=90===c||270===c)?q=hq(a,h,k,l,m,r,c,f,d,b,p):n=hq(a,h,k,l,m,r,c,f,d,b,p);if(!a.abort){a:{c=0===e||90===e?1:-1;e=90===e||270===e;for(var r=l|0,s=m|0,t=a.oc[r][s];0===t&&r>f&&r<d&&s>b&&s<p;)if(e?s+=c:r+=c,t=a.oc[r][s],1>=Math.abs(r-h)&&1>=Math.abs(s-k)){a.abort=!0;break a}r=l|0;s=m|0;t=a.oc[r][s];for(a.oc[r][s]=999999;0===t&&r>f&&r<d&&s>b&&s<p;)e?s+=c:r+=c,t=a.oc[r][s],a.oc[r][s]=999999}a.abort||(gq(a,n,q,1,!1,f,d,b,p),gq(a,n,q,-1,!1,f,d,b,p),gq(a,n,q,1,!0,f,d,
b,p),gq(a,n,q,-1,!0,f,d,b,p))}}}}}function Sp(){v.ec(this);this.port=this.Jc=null;this.Yf=[];this.rp=!1}v.Pd(Sp,{Jc:!0,port:!0,Yf:!0,rp:!0});Sp.prototype.toString=function(){for(var a=this.Yf,b=this.Jc.toString()+" "+a.length.toString()+":",c=0;c<a.length;c++){var d=a[c];null!==d&&(b+="\n  "+d.toString())}return b};
function iq(a,b,c,d){b=b.offsetY;switch(b){case v.Wc:return 90;case v.Nc:return 180;case v.ed:return 270;case v.Xc:return 0}switch(b){case v.Wc|v.ed:return 180<c?270:90;case v.Nc|v.Xc:return 90<c&&270>=c?180:0}a=180*Math.atan2(a.height,a.width)/Math.PI;switch(b){case v.Nc|v.ed:return c>a&&c<=180+a?180:270;case v.ed|v.Xc:return c>180-a&&c<=360-a?270:0;case v.Xc|v.Wc:return c>a&&c<=180+a?90:0;case v.Wc|v.Nc:return c>180-a&&c<=360-a?180:90;case v.Nc|v.ed|v.Xc:return 90<c&&c<=180+a?180:c>180+a&&c<=360-
a?270:0;case v.ed|v.Xc|v.Wc:return 180<c&&c<=360-a?270:c>a&&180>=c?90:0;case v.Xc|v.Wc|v.Nc:return c>a&&c<=180-a?90:c>180-a&&270>=c?180:0;case v.Wc|v.Nc|v.ed:return c>180-a&&c<=180+a?180:c>180+a?270:90}d&&b!==(v.Nc|v.ed|v.Xc|v.Wc)&&(c-=15,0>c&&(c+=360));return c>a&&c<180-a?90:c>=180-a&&c<=180+a?180:c>180+a&&c<360-a?270:0}Sp.prototype.Qm=function(){this.Yf.length=0};
function Tp(a,b){var c=a.Yf;if(0===c.length){a:if(!a.rp){c=a.rp;a.rp=!0;var d,e=null,f=a.Jc,f=f instanceof V?f:null;if(null===f||f.fe)d=a.Jc.GD(a.port.Ud);else{if(!f.V.G()){a.rp=c;break a}e=f;d=e.FD()}var h=a.Yf.length=0,k=a.port.Xa(tb,v.L()),l=a.port.Xa(Fb,v.L()),f=v.gk(k.x,k.y,0,0);f.dj(l);v.v(k);v.v(l);k=v.Mb(f.x+f.width/2,f.y+f.height/2);for(d=d.i;d.next();)if(l=d.value,l.isVisible()){var m=sb,n=l.bd===a.port||l.T.Zh(e),m=n?Op(l,a.port):Pp(l,a.port);if(m.Vi()&&(n=n?l.Hd:l.bd,null!==n)){var p=
n.Y;if(null!==p){var n=l.computeOtherPoint(p,n),p=k.xc(n),m=iq(f,m,p,l.jc),q=0;0===m?(q=v.Xc,180<p&&(p-=360)):q=90===m?v.Wc:180===m?v.Nc:v.ed;m=a.Yf[h];void 0===m?(m=new jq(l,p,q),a.Yf[h]=m):(m.link=l,m.angle=p,m.he=q);m.Tw.set(n);h++}}}v.v(k);a.Yf.sort(Sp.prototype.VH);e=a.Yf.length;k=-1;for(h=d=0;h<e;h++)m=a.Yf[h],void 0!==m&&(m.he!==k&&(k=m.he,d=0),m.cp=d,d++);k=-1;d=0;for(h=e-1;0<=h;h--)m=a.Yf[h],void 0!==m&&(m.he!==k&&(k=m.he,d=m.cp+1),m.Im=d);h=a.Yf;n=a.port;e=a.Jc.bI;k=v.L();d=v.L();l=v.L();
m=v.L();n.Xa(tb,k);n.Xa(vb,d);n.Xa(Fb,l);n.Xa(Db,m);var r=q=p=n=0;if(e===pp)for(var s=0;s<h.length;s++){var t=h[s];if(null!==t){var u=t.link.computeThickness();switch(t.he){case v.Wc:q+=u;break;case v.Nc:r+=u;break;case v.ed:n+=u;break;default:case v.Xc:p+=u}}}for(var w=0,x=0,z=1,s=0;s<h.length;s++)if(t=h[s],null!==t){var A,H;if(w!==t.he){w=t.he;switch(w){case v.Wc:A=l;H=m;break;case v.Nc:A=m;H=k;break;case v.ed:A=k;H=d;break;default:case v.Xc:A=d,H=l}var C=H.x-A.x;H=H.y-A.y;switch(w){case v.Wc:q>
Math.abs(C)?(z=Math.abs(C)/q,q=Math.abs(C)):z=1;break;case v.Nc:r>Math.abs(H)?(z=Math.abs(H)/r,r=Math.abs(H)):z=1;break;case v.ed:n>Math.abs(C)?(z=Math.abs(C)/n,n=Math.abs(C)):z=1;break;default:case v.Xc:p>Math.abs(H)?(z=Math.abs(H)/p,p=Math.abs(H)):z=1}x=0}var T=t.jp;if(e===pp){u=t.link.computeThickness();u*=z;T.set(A);switch(w){case v.Wc:T.x=A.x+C/2+q/2-x-u/2;break;case v.Nc:T.y=A.y+H/2+r/2-x-u/2;break;case v.ed:T.x=A.x+C/2-n/2+x+u/2;break;default:case v.Xc:T.y=A.y+H/2-p/2+x+u/2}x+=u}else u=.5,
e===mp&&(u=(t.cp+1)/(t.Im+1)),T.x=A.x+C*u,T.y=A.y+H*u}v.v(k);v.v(d);v.v(l);v.v(m);A=a.Yf;for(C=0;C<A.length;C++)H=A[C],null!==H&&(H.vw=a.computeEndSegmentLength(H));a.rp=c;v.Vb(f)}c=a.Yf}for(f=0;f<c.length;f++)if(A=c[f],null!==A&&A.link===b)return A;return null}Sp.prototype.VH=function(a,b){return a===b?0:null===a?-1:null===b?1:a.he<b.he?-1:a.he>b.he?1:a.angle<b.angle?-1:a.angle>b.angle?1:0};
Sp.prototype.computeEndSegmentLength=function(a){var b=a.link,c=b.computeEndSegmentLength(this.Jc,this.port,sb,b.bd===this.port),d=a.cp;if(0>d)return c;var e=a.Im;if(1>=e||!b.jc)return c;var b=a.Tw,f=a.jp;if(a.he===v.Nc||a.he===v.Wc)d=e-1-d;return((a=a.he===v.Nc||a.he===v.Xc)?b.y<f.y:b.x<f.x)?c+8*d:(a?b.y===f.y:b.x===f.x)?c:c+8*(e-1-d)};function jq(a,b,c){this.link=a;this.angle=b;this.he=c;this.Tw=new y;this.Im=this.cp=0;this.jp=new y;this.vw=0}
v.Pd(jq,{link:!0,angle:!0,he:!0,Tw:!0,cp:!0,Im:!0,jp:!0,vw:!0});jq.prototype.toString=function(){return this.link.toString()+" "+this.angle.toString()+" "+this.he.toString()+":"+this.cp.toString()+"/"+this.Im.toString()+" "+this.jp.toString()+" "+this.vw.toString()+" "+this.Tw.toString()};function xm(){this.Pj=this.nj=kc;this.Nj=this.lj=NaN;this.Mj=this.kj=np;this.Oj=this.mj=NaN}
xm.prototype.copy=function(){var a=new xm;a.nj=this.nj.R();a.Pj=this.Pj.R();a.lj=this.lj;a.Nj=this.Nj;a.kj=this.kj;a.Mj=this.Mj;a.mj=this.mj;a.Oj=this.Oj;return a};function V(a){0===arguments.length?S.call(this,Si):S.call(this,a);this.pr=new J(R);this.io=new J(V);this.Ok=this.qr=this.or=null;this.Fs=!1;this.Wq=!0;this.Hs=!1;this.Gb=this.vs=null;this.dq=!1;this.eq=!0;this.Mq=this.fq=!1;this.Wd=new Yf;this.Wd.group=this;this.By=!1}v.Ia(V,S);v.ea("Group",V);
V.prototype.cloneProtected=function(a){S.prototype.cloneProtected.call(this,a);a.or=this.or;a.qr=this.qr;a.Ok=this.Ok;a.Fs=this.Fs;a.Wq=this.Wq;a.Hs=this.Hs;a.vs=this.vs;var b=a.bt(function(a){return a instanceof Mi});a.Gb=b instanceof Mi?b:null;a.dq=this.dq;a.eq=this.eq;a.fq=this.fq;a.Mq=this.Mq;null!==this.Wd?(a.Wd=this.Wd.copy(),a.Wd.group=a):(null!==a.Wd&&(a.Wd.group=null),a.Wd=null)};
V.prototype.Xh=function(a){S.prototype.Xh.call(this,a);var b=a.Vo();for(a=a.Ic;a.next();){var c=a.value;c.P();c.H(8);c.Us();if(c instanceof S)c.cf(b);else if(c instanceof W)for(c=c.Tf;c.next();)c.value.cf(b)}};
V.prototype.$m=function(a,b,c,d,e,f,h){if(a===Cf&&"elements"===b)if(e instanceof Mi){var k=e;null===this.Gb?this.Gb=k:this.Gb!==k&&v.k("Cannot insert a second Placeholder into the visual tree of a Group.")}else e instanceof D&&(k=e.bt(function(a){return a instanceof Mi}),k instanceof Mi&&(null===this.Gb?this.Gb=k:this.Gb!==k&&v.k("Cannot insert a second Placeholder into the visual tree of a Group.")));else a===Df&&"elements"===b&&null!==this.Gb&&(d===this.Gb?this.Gb=null:d instanceof D&&this.Gb.tl(d)&&
(this.Gb=null));S.prototype.$m.call(this,a,b,c,d,e,f,h)};V.prototype.Ni=function(a,b,c,d){this.Nk=this.Gb;D.prototype.Ni.call(this,a,b,c,d)};V.prototype.ul=function(){if(!S.prototype.ul.call(this))return!1;for(var a=this.Ic;a.next();){var b=a.value;if(b instanceof S){if(b.isVisible()&&el(b))return!1}else if(b instanceof W&&b.isVisible()&&el(b)&&b.T!==this&&b.Z!==this)return!1}return!0};v.u(V,{placeholder:"placeholder"},function(){return this.Gb});
v.defineProperty(V,{qD:"computesBoundsAfterDrag"},function(){return this.dq},function(a){var b=this.dq;b!==a&&(v.j(a,"boolean",V,"computesBoundsAfterDrag"),this.dq=a,this.h("computesBoundsAfterDrag",b,a))});v.defineProperty(V,{pw:"computesBoundsIncludingLinks"},function(){return this.eq},function(a){v.j(a,"boolean",V,"computesBoundsIncludingLinks");var b=this.eq;b!==a&&(this.eq=a,this.h("computesBoundsIncludingLinks",b,a))});
v.defineProperty(V,{rG:"computesBoundsIncludingLocation"},function(){return this.fq},function(a){v.j(a,"boolean",V,"computesBoundsIncludingLocation");var b=this.fq;b!==a&&(this.fq=a,this.h("computesBoundsIncludingLocation",b,a))});v.defineProperty(V,{bH:"handlesDragDropForMembers"},function(){return this.Mq},function(a){v.j(a,"boolean",V,"handlesDragDropForMembers");var b=this.Mq;b!==a&&(this.Mq=a,this.h("handlesDragDropForMembers",b,a))});v.u(V,{Ic:"memberParts"},function(){return this.pr.i});
function ip(a,b){if(a.pr.add(b)){b instanceof V&&a.io.add(b);var c=a.MH;if(null!==c){var d=!0,e=a.g;null!==e&&(d=e.Qa,e.Qa=!0);c(a,b);null!==e&&(e.Qa=d)}a.isVisible()&&a.fe||b.od(!1)}b instanceof W&&!a.pw||(c=a.Gb,null===c&&(c=a),c.P())}function hp(a,b){if(a.pr.remove(b)){b instanceof V&&a.io.remove(b);var c=a.NH;if(null!==c){var d=!0,e=a.g;null!==e&&(d=e.Qa,e.Qa=!0);c(a,b);null!==e&&(e.Qa=d)}a.isVisible()&&a.fe||b.od(!0)}b instanceof W&&!a.pw||(c=a.Gb,null===c&&(c=a),c.P())}
V.prototype.Km=function(){if(0<this.pr.count){var a=this.g;if(null!==a)for(var b=this.pr.copy().i;b.next();)a.remove(b.value)}S.prototype.Km.call(this)};v.defineProperty(V,{Pb:"layout"},function(){return this.Wd},function(a){var b=this.Wd;b!==a&&(null!==a&&v.A(a,Yf,V,"layout"),null!==b&&(b.g=null,b.group=null),this.Wd=a,null!==a&&(a.g=this.g,a.group=this),this.h("layout",b,a))});
v.defineProperty(V,{MH:"memberAdded"},function(){return this.or},function(a){var b=this.or;b!==a&&(null!==a&&v.j(a,"function",V,"memberAdded"),this.or=a,this.h("memberAdded",b,a))});v.defineProperty(V,{NH:"memberRemoved"},function(){return this.qr},function(a){var b=this.qr;b!==a&&(null!==a&&v.j(a,"function",V,"memberRemoved"),this.qr=a,this.h("memberRemoved",b,a))});
v.defineProperty(V,{Lz:"memberValidation"},function(){return this.Ok},function(a){var b=this.Ok;b!==a&&(null!==a&&v.j(a,"function",V,"memberValidation"),this.Ok=a,this.h("memberValidation",b,a))});V.prototype.canAddMembers=function(a){var b=this.g;if(null===b)return!1;b=b.nb;for(a=Zg(a).i;a.next();)if(!b.isValidMember(this,a.value))return!1;return!0};
V.prototype.addMembers=function(a,b){var c=this.g;if(null===c)return!1;for(var c=c.nb,d=!0,e=Zg(a).i;e.next();){var f=e.value;!b||c.isValidMember(this,f)?f.Sa=this:d=!1}return d};v.defineProperty(V,{OI:"ungroupable"},function(){return this.Fs},function(a){var b=this.Fs;b!==a&&(v.j(a,"boolean",V,"ungroupable"),this.Fs=a,this.h("ungroupable",b,a))});V.prototype.canUngroup=function(){if(!this.OI)return!1;var a=this.layer;if(null!==a&&!a.kw)return!1;a=a.g;return null===a||a.kw?!0:!1};
V.prototype.cf=function(a){void 0===a&&(a=null);S.prototype.cf.call(this,a);for(var b=this.FD();b.next();){var c=b.value;if(null===a||!a.contains(c)){var d=c.T;null!==d&&d!==this&&d.Zh(this)&&!d.isVisible()?c.ic():(d=c.Z,null!==d&&d!==this&&d.Zh(this)&&!d.isVisible()&&c.ic())}}};V.prototype.findExternalLinksConnected=V.prototype.FD=function(){var a=this.Vo();a.add(this);for(var b=new J(W),c=a.i;c.next();){var d=c.value;if(d instanceof S)for(d=d.ue;d.next();){var e=d.value;a.contains(e)||b.add(e)}}return b.i};
V.prototype.findExternalNodesConnected=function(){var a=this.Vo();a.add(this);for(var b=new J(S),c=a.i;c.next();){var d=c.value;if(d instanceof S)for(d=d.ue;d.next();){var e=d.value,f=e.T;a.contains(f)&&f!==this||b.add(f);e=e.Z;a.contains(e)&&e!==this||b.add(e)}}return b.i};V.prototype.findContainingGroupChain=function(){function a(b,d){null!==b&&(d.add(b),a(b.Sa,d))}var b=new J(R);a(this,b);return b};
V.prototype.findSubGraphParts=V.prototype.Vo=function(){var a=new J(R);Sg(a,this,!0,0,!0);a.remove(this);return a};V.prototype.od=function(a){S.prototype.od.call(this,a);for(var b=this.Ic;b.next();)b.value.od(a)};V.prototype.collapseSubGraph=V.prototype.collapseSubGraph=function(){var a=this.g;if(null!==a&&!a.fh){a.fh=!0;var b=this.Vo();kq(this,b,a.Na,this);a.fh=!1}};
function kq(a,b,c,d){for(var e=a.Ic;e.next();){var f=e.value;f.od(!1);if(f instanceof V){var h=f;h.fe&&(h.zA=h.fe,kq(h,b,c,d))}if(f instanceof S)f.cf(b),Tj(c,f,d);else if(f instanceof W)for(f=f.Tf;f.next();)f.value.cf(b)}a.fe=!1}V.prototype.expandSubGraph=V.prototype.expandSubGraph=function(){var a=this.g;if(null!==a&&!a.fh){a.fh=!0;var b=this.Vo();lq(this,b,a.Na,this);a.fh=!1}};
function lq(a,b,c,d){for(var e=a.Ic;e.next();){var f=e.value;f.od(!0);if(f instanceof V){var h=f;h.zA&&(h.zA=!1,lq(h,b,c,d))}if(f instanceof S)f.cf(b),Sj(c,f,d);else if(f instanceof W)for(f=f.Tf;f.next();)f.value.cf(b)}a.fe=!0}
v.defineProperty(V,{fe:"isSubGraphExpanded"},function(){return this.Wq},function(a){var b=this.Wq;if(b!==a){v.j(a,"boolean",V,"isSubGraphExpanded");this.Wq=a;var c=this.g;this.h("isSubGraphExpanded",b,a);b=this.DI;if(null!==b){var d=!0;null!==c&&(d=c.Qa,c.Qa=!0);b(this);null!==c&&(c.Qa=d)}null!==c&&c.la.ib?null!==this.Gb&&this.Gb.P():a?this.expandSubGraph():this.collapseSubGraph()}});
v.defineProperty(V,{zA:"wasSubGraphExpanded"},function(){return this.Hs},function(a){var b=this.Hs;b!==a&&(v.j(a,"boolean",V,"wasSubGraphExpanded"),this.Hs=a,this.h("wasSubGraphExpanded",b,a))});v.defineProperty(V,{DI:"subGraphExpandedChanged"},function(){return this.vs},function(a){var b=this.vs;b!==a&&(null!==a&&v.j(a,"function",V,"subGraphExpandedChanged"),this.vs=a,this.h("subGraphExpandedChanged",b,a))});
V.prototype.move=function(a){var b=this.position,c=b.x;isNaN(c)&&(c=0);b=b.y;isNaN(b)&&(b=0);var c=a.x-c,b=a.y-b,d=v.Mb(c,b);S.prototype.move.call(this,a);for(a=this.Vo().i;a.next();){var e=a.value;if(!(e instanceof W||e instanceof S&&e.vf)){var f=e.position,h=e.location;f.G()?(d.x=f.x+c,d.y=f.y+b,e.position=d):h.G()&&(d.x=h.x+c,d.y=h.y+b,e.location=d)}}for(a.reset();a.next();)e=a.value,e instanceof W&&(f=e.position,d.x=f.x+c,d.y=f.y+b,e.move(d));v.v(d)};
function Mi(){G.call(this);this.Te=Zc;this.as=new B(NaN,NaN,NaN,NaN)}v.Ia(Mi,G);v.ea("Placeholder",Mi);Mi.prototype.cloneProtected=function(a){G.prototype.cloneProtected.call(this,a);a.Te=this.Te.R();a.as=this.as.copy()};Mi.prototype.Uj=function(a){if(null===this.background&&null===this.Am)return!1;var b=this.Ha;return db(0,0,b.width,b.height,a.x,a.y)};
Mi.prototype.mp=function(){var a=this.Y;null!==a&&(a instanceof V||a instanceof Tg)||v.k("Placeholder is not inside a Group or Adornment.");if(a instanceof V){var b=this.computeBorder(this.as),c=this.Qc;Xa(c,b.width||0,b.height||0);Bm(this,0,0,c.width,c.height);for(var c=a.Ic,d=!1;c.next();)if(c.value.isVisible()){d=!0;break}!d||isNaN(b.x)||isNaN(b.y)||(c=new y,c.Xt(b,a.ef),a.location=new y(c.x,c.y))}else{var b=this.wa,c=this.Qc,d=this.padding,e=d.left+d.right,f=d.top+d.bottom;if(b.G())Xa(c,b.width+
e||0,b.height+f||0),Bm(this,-d.left,-d.top,c.width,c.height);else{var h=a.Yb,k=h.Xa(tb,v.L()),b=v.gk(k.x,k.y,0,0);b.dj(h.Xa(Fb,k));b.dj(h.Xa(vb,k));b.dj(h.Xa(Db,k));a.yi.m(b.x,b.y);Xa(c,b.width+e||0,b.height+f||0);Bm(this,-d.left,-d.top,c.width,c.height);v.v(k);v.Vb(b)}}};Mi.prototype.Ni=function(a,b,c,d){var e=this.V;e.x=a;e.y=b;e.width=c;e.height=d};
Mi.prototype.computeBorder=function(a){var b=this.Y;if(b instanceof V){var c=b;if(c.qD&&this.as.G()){var d=c.g;if(null!==d&&(d=d.Wa,d instanceof Xg&&!d.Aq&&null!==d.ac&&!d.ac.contains(c)))return a.assign(this.as),a}}var c=v.bg(),d=this.computeMemberBounds(c),e=this.padding;a.m(d.x-e.left,d.y-e.top,d.width+e.left+e.right,d.height+e.top+e.bottom);v.Vb(c);b instanceof V&&(c=b,c.rG&&c.location.G()&&a.dj(c.location));return a};
Mi.prototype.computeMemberBounds=function(a){if(!(this.Y instanceof V))return a.m(0,0,0,0),a;for(var b=this.Y,c=Infinity,d=Infinity,e=-Infinity,f=-Infinity,h=b.Ic;h.next();){var k=h.value;if(k.isVisible()){if(k instanceof W){var l=k;if(!b.pw)continue;if(dl(l))continue;if(l.T===b||l.Z===b)continue}k=k.V;k.left<c&&(c=k.left);k.top<d&&(d=k.top);k.right>e&&(e=k.right);k.bottom>f&&(f=k.bottom)}}isFinite(c)&&isFinite(d)?a.m(c,d,e-c,f-d):(b=b.location,c=this.padding,a.m(b.x+c.left,b.y+c.top,0,0));return a};
v.defineProperty(Mi,{padding:"padding"},function(){return this.Te},function(a){"number"===typeof a?((isNaN(a)||0>a)&&v.va(a,">= 0",Mi,"padding"),a=new eb(a)):(v.A(a,eb,Mi,"padding"),(isNaN(a.left)||0>a.left)&&v.va(a.left,">= 0",Mi,"padding:value.left"),(isNaN(a.right)||0>a.right)&&v.va(a.right,">= 0",Mi,"padding:value.right"),(isNaN(a.top)||0>a.top)&&v.va(a.top,">= 0",Mi,"padding:value.top"),(isNaN(a.bottom)||0>a.bottom)&&v.va(a.bottom,">= 0",Mi,"padding:value.bottom"));var b=this.Te;b.K(a)||(this.Te=
a=a.R(),this.h("padding",b,a))});function Yf(){0<arguments.length&&v.dd(Yf);v.ec(this);this.ly=this.S=null;this.rj=this.Tq=!0;this.ar=!1;this.Wp=(new y(0,0)).freeze();this.Uq=this.Vq=!0;this.sB="";this.Xn=!1;this.Cy=null}v.ea("Layout",Yf);Yf.prototype.cloneProtected=function(a){a.Tq=this.Tq;a.rj=this.rj;a.ar=this.ar;a.Wp.assign(this.Wp);a.Vq=this.Vq;a.Uq=this.Uq;a.sB=this.sB;this.rj||(a.Xn=!0)};Yf.prototype.copy=function(){var a=new this.constructor;this.cloneProtected(a);return a};
Yf.prototype.toString=function(){var a=v.af(Object.getPrototypeOf(this)),a=a+"(";null!==this.group&&(a+=" in "+this.group);null!==this.g&&(a+=" for "+this.g);return a+")"};v.defineProperty(Yf,{g:"diagram"},function(){return this.S},function(a){null!==a&&v.A(a,E,Yf,"diagram");this.S=a});v.defineProperty(Yf,{group:"group"},function(){return this.ly},function(a){this.ly!==a&&(null!==a&&v.A(a,V,Yf,"group"),this.ly=a,null!==a&&(this.S=a.g))});
v.defineProperty(Yf,{sH:"isOngoing"},function(){return this.Tq},function(a){this.Tq!==a&&(v.j(a,"boolean",Yf,"isOngoing"),this.Tq=a)});v.defineProperty(Yf,{eE:"isInitial"},function(){return this.rj},function(a){v.j(a,"boolean",Yf,"isInitial");this.rj=a;a||(this.Xn=!0)});v.defineProperty(Yf,{Kw:"isViewportSized"},function(){return this.ar},function(a){this.ar!==a&&(v.j(a,"boolean",Yf,"isViewportSized"),(this.ar=a)&&this.H())});
v.defineProperty(Yf,{wt:"isRouting"},function(){return this.Vq},function(a){this.Vq!==a&&(v.j(a,"boolean",Yf,"isRouting"),this.Vq=a)});v.defineProperty(Yf,{gE:"isRealtime"},function(){return this.Uq},function(a){this.Uq!==a&&(v.j(a,"boolean",Yf,"isRealtime"),this.Uq=a)});v.defineProperty(Yf,{xf:"isValidLayout"},function(){return this.Xn},function(a){this.Xn!==a&&(v.j(a,"boolean",Yf,"isValidLayout"),this.Xn=a,a||(a=this.g,null!==a&&(a.uu=!0)))});
Yf.prototype.invalidateLayout=Yf.prototype.H=function(){if(this.Xn){var a=this.g;if(null!==a&&!a.la.ib){var b=a.Na;!b.Wn&&(b.df&&b.ai(),this.sH&&a.Sm||this.eE&&!a.Sm)&&(this.xf=!1,a.ve())}}};v.defineProperty(Yf,{network:"network"},function(){return this.Cy},function(a){var b=this.Cy;b!==a&&(null!==a&&v.A(a,Zf,Yf,"network"),null!==b&&(b.Pb=null),this.Cy=a,null!==a&&(a.Pb=this))});Yf.prototype.createNetwork=function(){return new Zf};
Yf.prototype.makeNetwork=function(a){var b=this.createNetwork();b.Pb=this;a instanceof E?(b.Rj(a.Bg,!0),b.Rj(a.links,!0)):a instanceof V?b.Rj(a.Ic):b.Rj(a.i);return b};Yf.prototype.updateParts=function(){var a=this.g;if(null===a&&null!==this.network)for(var b=this.network.vertexes.i;b.next();){var c=b.value.Jc;if(null!==c&&(a=c.g,null!==a))break}this.xf=!0;try{null!==a&&a.Qb("Layout"),this.commitLayout()}finally{null!==a&&a.yd("Layout")}};
Yf.prototype.commitLayout=function(){for(var a=this.network.vertexes.i;a.next();)a.value.commit();if(this.wt)for(a=this.network.edges.i;a.next();)a.value.commit()};
Yf.prototype.doLayout=function(a){null===a&&v.k("Layout.doLayout(collection) argument must not be null but a Diagram, a Group, or an Iterable of Parts");var b=new J(R);a instanceof E?(mq(this,b,a.Bg,!0,this.Qz,!0,!1,!0),mq(this,b,a.dk,!0,this.Qz,!0,!1,!0)):a instanceof V?mq(this,b,a.Ic,!1,this.Qz,!0,!1,!0):b.Tc(a.i);var c=b.count;if(0<c){a=this.g;null!==a&&a.Qb("Layout");for(var c=Math.ceil(Math.sqrt(c)),d=this.Zd.x,e=d,f=this.Zd.y,h=0,k=0,b=b.i;b.next();){var l=b.value;l.tf();var m=l.Ca,n=m.width,
m=m.height;l.moveTo(e,f);l.By=!1;e+=Math.max(n,50)+20;k=Math.max(k,Math.max(m,50));h>=c-1?(h=0,e=d,f+=k+20,k=0):h++}null!==a&&a.yd("Layout")}this.xf=!0};Yf.prototype.Qz=function(a){return!a.location.G()||a instanceof V&&a.By?!0:!1};
function mq(a,b,c,d,e,f,h,k){for(c=c.i;c.next();){var l=c.value;d&&!l.fp||null!==e&&!e(l)||!l.canLayout()||(f&&l instanceof S?l.vf||(l instanceof V?null===l.Pb?mq(a,b,l.Ic,!1,e,f,h,k):b.add(l):b.add(l)):h&&l instanceof W?b.add(l):!k||!l.Rd()||l instanceof S||b.add(l))}}
Yf.prototype.collectParts=Yf.prototype.lG=function(a){var b=new J(R);a instanceof E?(mq(this,b,a.Bg,!0,null,!0,!0,!0),mq(this,b,a.links,!0,null,!0,!0,!0),mq(this,b,a.dk,!0,null,!0,!0,!0)):a instanceof V?mq(this,b,a.Ic,!1,null,!0,!0,!0):mq(this,b,a.i,!1,null,!0,!0,!0);return b};v.defineProperty(Yf,{Zd:"arrangementOrigin"},function(){return this.Wp},function(a){v.A(a,y,Yf,"arrangementOrigin");this.Wp.K(a)||(this.Wp.assign(a),this.H())});
Yf.prototype.initialOrigin=function(a){var b=this.group;if(null!==b){var c=b.position.copy();(isNaN(c.x)||isNaN(c.y))&&c.set(a);b=b.placeholder;null!==b&&(c=b.Xa(tb),(isNaN(c.x)||isNaN(c.y))&&c.set(a),c.x+=b.padding.left,c.y+=b.padding.top);return c}return a};function Zf(){v.ec(this);this.Wd=null;this.clear()}v.ea("LayoutNetwork",Zf);
Zf.prototype.clear=function(){if(this.vertexes)for(var a=this.vertexes.i;a.next();){var b=a.value;b.clear();b.network=null}if(this.edges)for(a=this.edges.i;a.next();)b=a.value,b.clear(),b.network=null;this.vertexes=new J(nq);this.edges=new J(oq);this.Uz=new na(S,nq);this.Gz=new na(W,oq)};
Zf.prototype.toString=function(a){void 0===a&&(a=0);var b="LayoutNetwork"+(null!==this.Pb?"("+this.Pb.toString()+")":"");if(0>=a)return b;b+=" vertexes: "+this.vertexes.count+" edges: "+this.edges.count;if(1<a){for(var c=this.vertexes.i;c.next();)b+="\n    "+c.value.toString(a-1);for(c=this.edges.i;c.next();)b+="\n    "+c.value.toString(a-1)}return b};v.defineProperty(Zf,{Pb:"layout"},function(){return this.Wd},function(a){this.Wd=a});Zf.prototype.createVertex=function(){return new nq};
Zf.prototype.createEdge=function(){return new oq};
Zf.prototype.addParts=Zf.prototype.Rj=function(a,b,c){if(null!==a){void 0===b&&(b=!1);v.j(b,"boolean",Zf,"addParts:toplevelonly");void 0===c&&(c=null);null===c&&(c=function(a){if(a instanceof S)return!a.vf;if(a instanceof W){var b=a.T;if(null===b||b.vf)return!1;a=a.Z;return null===a||a.vf?!1:!0}return!1});for(a=a.i;a.next();){var d=a.value;if(d instanceof S&&(!b||d.fp)&&d.canLayout()&&c(d))if(d instanceof V&&null===d.Pb)this.Rj(d.Ic,!1);else if(null===this.Mm(d)){var e=this.createVertex();e.Jc=d;
this.Zk(e)}}for(a.reset();a.next();)if(d=a.value,d instanceof W&&(!b||d.fp)&&d.canLayout()&&c(d)&&null===this.xw(d)){var f=d.T,e=d.Z;null!==f&&null!==e&&f!==e&&(f=this.findGroupVertex(f),e=this.findGroupVertex(e),null!==f&&null!==e&&this.lp(f,e,d))}}};Zf.prototype.findGroupVertex=function(a){if(null===a)return null;var b=a.findVisibleNode();if(null===b)return null;a=this.Mm(b);if(null!==a)return a;for(b=b.Sa;null!==b;){a=this.Mm(b);if(null!==a)return a;b=b.Sa}return null};
Zf.prototype.addVertex=Zf.prototype.Zk=function(a){if(null!==a){this.vertexes.add(a);var b=a.Jc;null!==b&&this.Uz.add(b,a);a.network=this}};Zf.prototype.addNode=Zf.prototype.Os=function(a){if(null===a)return null;var b=this.Mm(a);null===b&&(b=this.createVertex(),b.Jc=a,this.Zk(b));return b};Zf.prototype.deleteVertex=Zf.prototype.AD=function(a){if(null!==a&&pq(this,a)){for(var b=a.Pe,c=b.count-1;0<=c;c--){var d=b.da(c);this.Ro(d)}b=a.Ke;for(c=b.count-1;0<=c;c--)d=b.da(c),this.Ro(d)}};
function pq(a,b){if(null===b)return!1;var c=a.vertexes.remove(b);c&&(a.Uz.remove(b.Jc),b.network=null);return c}Zf.prototype.deleteNode=function(a){null!==a&&(a=this.Mm(a),null!==a&&this.AD(a))};Zf.prototype.findVertex=Zf.prototype.Mm=function(a){return null===a?null:this.Uz.ja(a)};Zf.prototype.addEdge=Zf.prototype.Io=function(a){if(null!==a){this.edges.add(a);var b=a.link;null!==b&&null===this.xw(b)&&this.Gz.add(b,a);b=a.toVertex;null!==b&&b.bD(a);b=a.fromVertex;null!==b&&b.aD(a);a.network=this}};
Zf.prototype.addLink=function(a){if(null===a)return null;var b=a.T,c=a.Z,d=this.xw(a);null===d?(d=this.createEdge(),d.link=a,null!==b&&(d.fromVertex=this.Os(b)),null!==c&&(d.toVertex=this.Os(c)),this.Io(d)):(d.fromVertex=null!==b?this.Os(b):null,d.toVertex=null!==c?this.Os(c):null);return d};Zf.prototype.deleteEdge=Zf.prototype.Ro=function(a){if(null!==a){var b=a.toVertex;null!==b&&b.zD(a);b=a.fromVertex;null!==b&&b.yD(a);qq(this,a)}};
function qq(a,b){null!==b&&a.edges.remove(b)&&(a.Gz.remove(b.link),b.network=null)}Zf.prototype.deleteLink=function(a){null!==a&&(a=this.xw(a),null!==a&&this.Ro(a))};Zf.prototype.findEdge=Zf.prototype.xw=function(a){return null===a?null:this.Gz.ja(a)};Zf.prototype.linkVertexes=Zf.prototype.lp=function(a,b,c){if(null===a||null===b)return null;if(a.network===this&&b.network===this){var d=this.createEdge();d.link=c;d.fromVertex=a;d.toVertex=b;this.Io(d);return d}return null};
Zf.prototype.reverseEdge=Zf.prototype.ex=function(a){if(null!==a){var b=a.fromVertex,c=a.toVertex;null!==b&&null!==c&&(b.yD(a),c.zD(a),a.ex(),b.bD(a),c.aD(a))}};Zf.prototype.deleteSelfEdges=Zf.prototype.tw=function(){for(var a=v.jb(),b=this.edges.i;b.next();){var c=b.value;c.fromVertex===c.toVertex&&a.push(c)}b=a.length;for(c=0;c<b;c++)this.Ro(a[c]);v.sa(a)};
Zf.prototype.deleteArtificialVertexes=function(){for(var a=v.jb(),b=this.vertexes.i;b.next();){var c=b.value;null===c.Jc&&a.push(c)}c=a.length;for(b=0;b<c;b++)this.AD(a[b]);c=v.jb();for(b=this.edges.i;b.next();){var d=b.value;null===d.link&&c.push(d)}d=c.length;for(b=0;b<d;b++)this.Ro(c[b]);v.sa(a);v.sa(c)};function rq(a){for(var b=v.jb(),c=a.edges.i;c.next();){var d=c.value;null!==d.fromVertex&&null!==d.toVertex||b.push(d)}c=b.length;for(d=0;d<c;d++)a.Ro(b[d]);v.sa(b)}
Zf.prototype.splitIntoSubNetworks=Zf.prototype.CI=function(){this.deleteArtificialVertexes();rq(this);this.tw();for(var a=new I(Zf),b=!0;b;)for(var b=!1,c=this.vertexes.i;c.next();){var d=c.value;if(0<d.Pe.count||0<d.Ke.count){b=this.Pb.createNetwork();a.add(b);sq(this,b,d);b=!0;break}}a.sort(function(a,b){return null===a||null===b||a===b?0:b.vertexes.count-a.vertexes.count});return a};
function sq(a,b,c){if(null!==c&&c.network!==b){pq(a,c);b.Zk(c);for(var d=c.lc;d.next();){var e=d.value;e.network!==b&&(qq(a,e),b.Io(e),sq(a,b,e.fromVertex))}for(d=c.$b;d.next();)c=d.value,c.network!==b&&(qq(a,c),b.Io(c),sq(a,b,c.toVertex))}}Zf.prototype.findAllParts=function(){for(var a=new J(R),b=this.vertexes.i;b.next();)a.add(b.value.Jc);for(b=this.edges.i;b.next();)a.add(b.value.link);return a};
function nq(){v.ec(this);this.network=null;this.M=(new B(0,0,10,10)).freeze();this.O=(new y(5,5)).freeze();this.clear()}v.ea("LayoutVertex",nq);nq.prototype.clear=function(){this.rd=this.ke=null;this.Pe=new I(oq);this.Ke=new I(oq)};
nq.prototype.toString=function(a){void 0===a&&(a=0);var b="LayoutVertex#"+v.md(this);if(0<a&&(b+=null!==this.Jc?"("+this.Jc.toString()+")":"",1<a)){a="";for(var c=!0,d=this.Pe.i;d.next();){var e=d.value;c?c=!1:a+=",";a+=e.toString(0)}e="";c=!0;for(d=this.Ke.i;d.next();){var f=d.value;c?c=!1:e+=",";e+=f.toString(0)}b+=" sources: "+a+" destinations: "+e}return b};
v.defineProperty(nq,{data:"data"},function(){return this.ke},function(a){this.ke=a;if(null!==a){var b=a.bounds;a=b.x;var c=b.y,d=b.width,b=b.height;this.O.m(d/2,b/2);this.M.m(a,c,d,b)}});v.defineProperty(nq,{Jc:"node"},function(){return this.rd},function(a){if(this.rd!==a){this.rd=a;a.tf();var b=a.V,c=b.x,d=b.y,e=b.width,b=b.height;isNaN(c)&&(c=0);isNaN(d)&&(d=0);this.M.m(c,d,e,b);if(!(a instanceof V)&&(a=a.bc.Xa(Ab),a.G())){this.O.m(a.x-c,a.y-d);return}this.O.m(e/2,b/2)}});
v.defineProperty(nq,{mb:"bounds"},function(){return this.M},function(a){this.M.K(a)||this.M.assign(a)});v.defineProperty(nq,{focus:"focus"},function(){return this.O},function(a){this.O.K(a)||this.O.assign(a)});v.defineProperty(nq,{na:"centerX"},function(){return this.M.x+this.O.x},function(a){var b=this.M;b.x+this.O.x!==a&&(b.Oa(),b.x=a-this.O.x,b.freeze())});v.defineProperty(nq,{ua:"centerY"},function(){return this.M.y+this.O.y},function(a){var b=this.M;b.y+this.O.y!==a&&(b.Oa(),b.y=a-this.O.y,b.freeze())});
v.defineProperty(nq,{ht:"focusX"},function(){return this.O.x},function(a){var b=this.O;b.x!==a&&(b.Oa(),b.x=a,b.freeze())});v.defineProperty(nq,{it:"focusY"},function(){return this.O.y},function(a){var b=this.O;b.y!==a&&(b.Oa(),b.y=a,b.freeze())});v.defineProperty(nq,{x:"x"},function(){return this.M.x},function(a){var b=this.M;b.x!==a&&(b.Oa(),b.x=a,b.freeze())});v.defineProperty(nq,{y:"y"},function(){return this.M.y},function(a){var b=this.M;b.y!==a&&(b.Oa(),b.y=a,b.freeze())});
v.defineProperty(nq,{width:"width"},function(){return this.M.width},function(a){var b=this.M;b.width!==a&&(b.Oa(),b.width=a,b.freeze())});v.defineProperty(nq,{height:"height"},function(){return this.M.height},function(a){var b=this.M;b.height!==a&&(b.Oa(),b.height=a,b.freeze())});
nq.prototype.commit=function(){var a=this.ke;if(null!==a){var b=this.mb,c=a.bounds;v.Ta(c)?(c.x=b.x,c.y=b.y,c.width=b.width,c.height=b.height):a.bounds=b.copy()}else if(a=this.Jc,null!==a){b=this.mb;if(!(a instanceof V)){var c=a.V,d=a.bc.Xa(Ab);if(c.G()&&d.G()){a.moveTo(b.x+this.ht-(d.x-c.x),b.y+this.it-(d.y-c.y));return}}a.moveTo(b.x,b.y)}};nq.prototype.addSourceEdge=nq.prototype.bD=function(a){null!==a&&(this.Pe.contains(a)||this.Pe.add(a))};
nq.prototype.deleteSourceEdge=nq.prototype.zD=function(a){null!==a&&this.Pe.remove(a)};nq.prototype.addDestinationEdge=nq.prototype.aD=function(a){null!==a&&(this.Ke.contains(a)||this.Ke.add(a))};nq.prototype.deleteDestinationEdge=nq.prototype.yD=function(a){null!==a&&this.Ke.remove(a)};v.u(nq,{BI:"sourceVertexes"},function(){for(var a=new J(nq),b=this.lc;b.next();)a.add(b.value.fromVertex);return a.i});
v.u(nq,{EG:"destinationVertexes"},function(){for(var a=new J(nq),b=this.$b;b.next();)a.add(b.value.toVertex);return a.i});v.u(nq,{vertexes:"vertexes"},function(){for(var a=new J(nq),b=this.lc;b.next();)a.add(b.value.fromVertex);for(b=this.$b;b.next();)a.add(b.value.toVertex);return a.i});v.u(nq,{lc:"sourceEdges"},function(){return this.Pe.i});v.u(nq,{$b:"destinationEdges"},function(){return this.Ke.i});
v.u(nq,{edges:"edges"},function(){for(var a=new I(oq),b=this.lc;b.next();)a.add(b.value);for(b=this.$b;b.next();)a.add(b.value);return a.i});v.u(nq,{JG:"edgesCount"},function(){return this.Pe.count+this.Ke.count});var tq;nq.standardComparer=tq=function(a,b){var c=a.rd,d=b.rd;return c?d?(c=c.text,d=d.text,c<d?-1:c>d?1:0):1:null!==d?-1:0};
nq.smartComparer=function(a,b){if(null!==a){if(null!==b){var c=a.rd,d=b.rd;if(null!==c){if(null!==d){for(var c=c.text.toLocaleLowerCase().split(/([+\-]?[\.]?\d+(?:\.\d*)?(?:e[+\-]?\d+)?)/),d=d.text.toLocaleLowerCase().split(/([+\-]?[\.]?\d+(?:\.\d*)?(?:e[+\-]?\d+)?)/),e=0;e<c.length;e++)if(""!==d[e]&&void 0!==d[e]){var f=parseFloat(c[e]),h=parseFloat(d[e]);if(isNaN(f)){if(!isNaN(h))return 1;if(0!==c[e].localeCompare(d[e]))return c[e].localeCompare(d[e])}else{if(isNaN(h))return-1;if(0!==f-h)return f-
h}}else if(""!==c[e])return 1;return""!==d[e]&&void 0!==d[e]?-1:0}return 1}return null!==d?-1:0}return 1}return null!==b?-1:0};function oq(){v.ec(this);this.network=null;this.clear()}v.ea("LayoutEdge",oq);oq.prototype.clear=function(){this.toVertex=this.fromVertex=this.link=this.data=null};
oq.prototype.toString=function(a){void 0===a&&(a=0);var b="LayoutEdge#"+v.md(this);0<a&&(b+=null!==this.link?"("+this.link.toString()+")":"",1<a&&(b+=" "+(this.fromVertex?this.fromVertex.toString():"null")+" --\x3e "+(this.toVertex?this.toVertex.toString():"null")));return b};oq.prototype.ex=function(){var a=this.fromVertex;this.fromVertex=this.toVertex;this.toVertex=a};oq.prototype.commit=function(){};
oq.prototype.getOtherVertex=oq.prototype.UG=function(a){return this.toVertex===a?this.fromVertex:this.fromVertex===a?this.toVertex:null};function lm(){0<arguments.length&&v.dd(lm);Yf.call(this);this.Kw=!0;this.Js=this.Ks=NaN;this.gj=(new ia(NaN,NaN)).freeze();this.Oh=(new ia(10,10)).freeze();this.Be=tn;this.fd=mn;this.Nh=hn;this.wh=uq}v.Ia(lm,Yf);v.ea("GridLayout",lm);
lm.prototype.cloneProtected=function(a){Yf.prototype.cloneProtected.call(this,a);a.Ks=this.Ks;a.Js=this.Js;a.gj.assign(this.gj);a.Oh.assign(this.Oh);a.Be=this.Be;a.fd=this.fd;a.Nh=this.Nh;a.wh=this.wh};
lm.prototype.doLayout=function(a){null===a&&v.k("Layout.doLayout(collection) argument must not be null but a Diagram, a Group, or an Iterable of Parts");this.Zd=this.initialOrigin(this.Zd);var b=this.g;a=this.lG(a);for(var c=a.copy().i;c.next();){var d=c.value;if(d instanceof W){var e=d;if(null!==e.T||null!==e.Z){a.remove(e);continue}}d.tf();if(d instanceof V)for(d=d.Ic;d.next();)a.remove(d.value)}e=a.dc();if(0!==e.length){switch(this.sorting){case ln:e.reverse();break;case hn:e.sort(this.comparer);
break;case jn:e.sort(this.comparer),e.reverse()}var f=this.TI;isNaN(f)&&(f=0);var h=this.sF,h=isNaN(h)&&null!==b?Math.max(b.rb.width-b.padding.left-b.padding.right,0):Math.max(this.sF,0);0>=f&&0>=h&&(f=1);a=this.spacing.width;isFinite(a)||(a=0);c=this.spacing.height;isFinite(c)||(c=0);null!==b&&b.Qb("Layout");d=[];switch(this.alignment){case un:var k=a,l=c,m=Math.max(this.Mo.width,1);if(!isFinite(m))for(var n=m=0;n<e.length;n++)var p=e[n],q=p.Ca,m=Math.max(m,q.width);var m=Math.max(m+k,1),r=Math.max(this.Mo.height,
1);if(!isFinite(r))for(n=r=0;n<e.length;n++)p=e[n],q=p.Ca,r=Math.max(r,q.height);for(var r=Math.max(r+l,1),s=this.Of,t=this.Zd.x,u=t,w=this.Zd.y,x=0,z=0,n=0;n<e.length;n++){var p=e[n],q=p.Ca,A=Math.ceil((q.width+k)/m)*m,H=Math.ceil((q.height+l)/r)*r,C=0;switch(s){case nn:C=Math.abs(u-q.width);break;default:C=u+q.width}if(0<f&&x>f-1||0<h&&0<x&&C>h)d.push(new B(0,w,h+k,z)),x=0,u=t,w+=z,z=0;z=Math.max(z,H);H=0;switch(s){case nn:H=-q.width;break;default:H=0}p.moveTo(u+H,w);switch(s){case nn:u-=A;break;
default:u+=A}x++}d.push(new B(0,w,h+k,z));break;case tn:k=f;l=a;m=c;n=Math.max(this.Mo.width,1);p=w=A=0;q=v.L();for(f=0;f<e.length;f++)r=e[f],s=r.Ca,t=cp(r,r.bc,r.ef,q),A=Math.max(A,t.x),w=Math.max(w,s.width-t.x),p=Math.max(p,t.y);u=this.Of;switch(u){case nn:A+=l;break;default:w+=l}var n=isFinite(n)?Math.max(n+l,1):Math.max(A+w,1),T=w=this.Zd.x,x=this.Zd.y,z=0;h>=A&&(h-=A);for(var A=H=0,C=Math.max(this.Mo.height,1),ba=p=0,U=!0,M=v.L(),f=0;f<e.length;f++){r=e[f];s=r.Ca;t=cp(r,r.bc,r.ef,q);if(0<z)switch(u){case nn:T=
(T-w-(s.width-t.x))/n;T=Dc(Math.round(T),T)?Math.round(T):Math.floor(T);T=T*n+w;break;default:T=(T-w+t.x)/n,T=Dc(Math.round(T),T)?Math.round(T):Math.ceil(T),T=T*n+w}else switch(u){case nn:H=T+t.x+s.width;break;default:H=T-t.x}var aa=0;switch(u){case nn:aa=-(T+t.x)+H;break;default:aa=T+s.width-t.x-H}if(0<k&&z>k-1||0<h&&0<z&&aa>h){d.push(new B(0,U?x-p:x,h+l,ba+p+m));for(T=0;T<z&&f!==z;T++){var aa=e[f-z+T],Ia=cp(aa,aa.bc,aa.ef,M);aa.moveTo(aa.position.x,aa.position.y+p-Ia.y)}ba+=m;x=U?x+ba:x+(ba+p);
z=ba=p=0;T=w;U=!1}T===w&&(A=u===nn?Math.max(A,s.width-t.x):Math.min(A,-t.x));p=Math.max(p,t.y);ba=Math.max(ba,s.height-t.y);isFinite(C)&&(ba=Math.max(ba,Math.max(s.height,C)-t.y));U?r.moveTo(T-t.x,x-t.y):r.moveTo(T-t.x,x);switch(u){case nn:T-=t.x+l;break;default:T+=s.width-t.x+l}z++}d.push(new B(0,x,h+l,(U?ba:ba+p)+m));for(T=0;T<z&&f!==z;T++)aa=e[f-z+T],Ia=cp(aa,aa.bc,aa.ef,q),aa.moveTo(aa.position.x,aa.position.y+p-Ia.y);v.v(q);v.v(M);if(u===nn)for(f=0;f<d.length;f++)e=d[f],e.width+=A,e.x-=A;else for(f=
0;f<d.length;f++)e=d[f],e.x>A&&(e.width+=e.x-A,e.x=A)}for(k=f=h=e=0;k<d.length;k++)l=d[k],e=Math.min(e,l.x),h=Math.min(h,l.y),f=Math.max(f,l.x+l.width);this.Of===nn?this.commitLayers(d,new y(e+a/2-(f+e),h-c/2)):this.commitLayers(d,new y(e-a/2,h-c/2));null!==b&&b.yd("Layout");this.xf=!0}};lm.prototype.commitLayers=function(){};
v.defineProperty(lm,{sF:"wrappingWidth"},function(){return this.Ks},function(a){this.Ks!==a&&(v.j(a,"number",lm,"wrappingWidth"),0<a||isNaN(a))&&(this.Ks=a,this.Kw=isNaN(a),this.H())});v.defineProperty(lm,{TI:"wrappingColumn"},function(){return this.Js},function(a){this.Js!==a&&(v.j(a,"number",lm,"wrappingColumn"),0<a||isNaN(a))&&(this.Js=a,this.H())});v.defineProperty(lm,{Mo:"cellSize"},function(){return this.gj},function(a){v.A(a,ia,lm,"cellSize");this.gj.K(a)||(this.gj.assign(a),this.H())});
v.defineProperty(lm,{spacing:"spacing"},function(){return this.Oh},function(a){v.A(a,ia,lm,"spacing");this.Oh.K(a)||(this.Oh.assign(a),this.H())});v.defineProperty(lm,{alignment:"alignment"},function(){return this.Be},function(a){this.Be!==a&&(v.pb(a,lm,lm,"alignment"),a===tn||a===un)&&(this.Be=a,this.H())});v.defineProperty(lm,{Of:"arrangement"},function(){return this.fd},function(a){this.fd!==a&&(v.pb(a,lm,lm,"arrangement"),a===mn||a===nn)&&(this.fd=a,this.H())});
v.defineProperty(lm,{sorting:"sorting"},function(){return this.Nh},function(a){this.Nh!==a&&(v.pb(a,lm,lm,"sorting"),a===kn||a===ln||a===hn||a===jn)&&(this.Nh=a,this.H())});v.defineProperty(lm,{comparer:"comparer"},function(){return this.wh},function(a){this.wh!==a&&(v.j(a,"function",lm,"comparer"),this.wh=a,this.H())});var uq;lm.standardComparer=uq=function(a,b){var c=a.text,d=b.text;return c<d?-1:c>d?1:0};
lm.smartComparer=function(a,b){if(null!==a){if(null!==b){for(var c=a.text.toLocaleLowerCase().split(/([+\-]?[\.]?\d+(?:\.\d*)?(?:e[+\-]?\d+)?)/),d=b.text.toLocaleLowerCase().split(/([+\-]?[\.]?\d+(?:\.\d*)?(?:e[+\-]?\d+)?)/),e=0;e<c.length;e++)if(""!==d[e]&&void 0!==d[e]){var f=parseFloat(c[e]),h=parseFloat(d[e]);if(isNaN(f)){if(!isNaN(h))return 1;if(0!==c[e].localeCompare(d[e]))return c[e].localeCompare(d[e])}else{if(isNaN(h))return-1;if(0!==f-h)return f-h}}else if(""!==c[e])return 1;return""!==
d[e]&&void 0!==d[e]?-1:0}return 1}return null!==b?-1:0};var un;lm.Position=un=v.p(lm,"Position",0);var tn;lm.Location=tn=v.p(lm,"Location",1);var mn;lm.LeftToRight=mn=v.p(lm,"LeftToRight",2);var nn;lm.RightToLeft=nn=v.p(lm,"RightToLeft",3);var kn;lm.Forward=kn=v.p(lm,"Forward",4);var ln;lm.Reverse=ln=v.p(lm,"Reverse",5);var hn;lm.Ascending=hn=v.p(lm,"Ascending",6);var jn;lm.Descending=jn=v.p(lm,"Descending",7);
function vn(){0<arguments.length&&v.dd(vn);Yf.call(this);this.$x=this.Jn=this.Ld=0;this.Bq=360;this.Zx=Hn;this.yk=0;this.zB=Hn;this.Cu=this.tg=this.QC=0;this.bw=new vq;this.Eu=this.hm=0;this.JF=600;this.Nr=NaN;this.Yp=1;this.us=0;this.ws=360;this.fd=Hn;this.aa=Dn;this.Nh=An;this.wh=tq;this.Oh=6;this.Dr=Kn}v.Ia(vn,Yf);v.ea("CircularLayout",vn);
vn.prototype.cloneProtected=function(a){Yf.prototype.cloneProtected.call(this,a);a.Nr=this.Nr;a.Yp=this.Yp;a.us=this.us;a.ws=this.ws;a.fd=this.fd;a.aa=this.aa;a.Nh=this.Nh;a.wh=this.wh;a.Oh=this.Oh;a.Dr=this.Dr};vn.prototype.createNetwork=function(){return new wq};
vn.prototype.doLayout=function(a){null===a&&v.k("Layout.doLayout(collection) argument must not be null but a Diagram, a Group, or an Iterable of Parts");null===this.network&&(this.network=this.makeNetwork(a));a=this.network.vertexes;if(1>=a.count)1===a.count&&(a=a.first(),a.na=0,a.ua=0);else{var b=new I(xq);b.Tc(a.i);a=new I(xq);var c=new I(xq),d;d=this.sort(b);var e=this.Zx,f=this.zB,h=this.Ld,k=this.Jn,l=this.$x,m=this.Bq,b=this.yk,n=this.QC,p=this.tg,q=this.Cu,e=this.Of,f=this.Qw,h=this.cI;if(!isFinite(h)||
0>=h)h=NaN;k=this.fG;if(!isFinite(k)||0>=k)k=1;l=this.ye;isFinite(l)||(l=0);m=this.Bf;if(!isFinite(m)||360<m||1>m)m=360;b=this.spacing;isFinite(b)||(b=NaN);e===In&&f===Jn?e=Hn:e===In&&f!==Jn&&(f=Jn,e=this.Of);if((this.direction===Bn||this.direction===Cn)&&this.sorting!==An){for(var r=0;!(r>=d.length);r+=2){a.add(d.da(r));if(r+1>=d.length)break;c.add(d.da(r+1))}this.direction===Bn?(this.Of===In&&a.reverse(),d=new I(xq),d.Tc(a),d.Tc(c)):(this.Of===In&&c.reverse(),d=new I(xq),d.Tc(c),d.Tc(a))}for(var s=
d.length,t=n=0,r=0;r<d.length;r++){var p=l+m*t*(this.direction===Dn?1:-1)/s,u=d.da(r).diameter;isNaN(u)&&(u=yq(d.da(r),p));360>m&&(0===r||r===d.length-1)&&(u/=2);n+=u;t++}if(isNaN(h)||e===In){isNaN(b)&&(b=6);if(e!==Hn&&e!==In){u=-Infinity;for(r=0;r<s;r++){var q=d.da(r),w=d.da(r===s-1?0:r+1);isNaN(q.diameter)&&yq(q,0);isNaN(w.diameter)&&yq(w,0);u=Math.max(u,(q.diameter+w.diameter)/2)}q=u+b;e===Fn?(p=2*Math.PI/s,h=(u+b)/p):h=zq(this,q*(360<=m?s:s-1),k,l*Math.PI/180,m*Math.PI/180)}else h=zq(this,n+(360<=
m?s:s-1)*(e!==In?b:1.6*b),k,l*Math.PI/180,m*Math.PI/180);p=h*k}else if(p=h*k,t=Aq(this,h,p,l*Math.PI/180,m*Math.PI/180),isNaN(b)){if(e===Hn||e===In)b=(t-n)/(360<=m?s:s-1)}else if(e===Hn||e===In)r=(t-n)/(360<=m?s:s-1),r<b?(h=zq(this,n+b*(360<=m?s:s-1),k,l*Math.PI/180,m*Math.PI/180),p=h*k):b=r;else{u=-Infinity;for(r=0;r<s;r++)q=d.da(r),w=d.da(r===s-1?0:r+1),isNaN(q.diameter)&&yq(q,0),isNaN(w.diameter)&&yq(w,0),u=Math.max(u,(q.diameter+w.diameter)/2);q=u+b;r=zq(this,q*(360<=m?s:s-1),k,l*Math.PI/180,
m*Math.PI/180);r>h?(h=r,p=h*k):q=t/(360<=m?s:s-1)}this.Zx=e;this.zB=f;this.Ld=h;this.Jn=k;this.$x=l;this.Bq=m;this.yk=b;this.QC=n;this.tg=p;this.Cu=q;b=d;d=this.Zx;e=this.Ld;f=this.$x;k=this.Bq;l=this.yk;m=this.tg;n=this.Cu;if(this.direction!==Bn&&this.direction!==Cn||d!==In)if(this.direction===Bn||this.direction===Cn){h=0;switch(d){case Gn:h=180*Bq(this,e,m,f,n)/Math.PI;break;case Hn:n=b=0;h=a.first();null!==h&&(b=yq(h,Math.PI/2));h=c.first();null!==h&&(n=yq(h,Math.PI/2));h=180*Bq(this,e,m,f,l+(b+
n)/2)/Math.PI;break;case Fn:h=k/b.length}if(this.direction===Bn){switch(d){case Gn:Cq(this,a,f,En);break;case Hn:Dq(this,a,f,En);break;case Fn:Eq(this,a,k/2,f,En)}switch(d){case Gn:Cq(this,c,f+h,Dn);break;case Hn:Dq(this,c,f+h,Dn);break;case Fn:Eq(this,c,k/2,f+h,Dn)}}else{switch(d){case Gn:Cq(this,c,f,En);break;case Hn:Dq(this,c,f,En);break;case Fn:Eq(this,c,k/2,f,En)}switch(d){case Gn:Cq(this,a,f+h,Dn);break;case Hn:Dq(this,a,f+h,Dn);break;case Fn:Eq(this,a,k/2,f+h,Dn)}}}else switch(d){case Gn:Cq(this,
b,f,this.direction);break;case Hn:Dq(this,b,f,this.direction);break;case Fn:Eq(this,b,k,f,this.direction);break;case In:Fq(this,b,k,f,this.direction)}else Fq(this,b,k,f-k/2,Dn)}this.updateParts();this.network=null;this.xf=!0};
function Eq(a,b,c,d,e){var f=a.Bq,h=a.Ld;a=a.tg;d=d*Math.PI/180;c=c*Math.PI/180;for(var k=b.length,l=0;l<k;l++){var m=d+(e===Dn?l*c/(360<=f?k:k-1):-(l*c)/k),n=b.da(l),p=h*Math.tan(m)/a,p=Math.sqrt((h*h+a*a*p*p)/(1+p*p));n.na=p*Math.cos(m);n.ua=p*Math.sin(m);n.actualAngle=180*m/Math.PI}}
function Dq(a,b,c,d){var e=a.Ld,f=a.tg,h=a.yk;c=c*Math.PI/180;for(var k=b.length,l=0;l<k;l++){var m=b.da(l),n=b.da(l===k-1?0:l+1),p=f*Math.sin(c);m.na=e*Math.cos(c);m.ua=p;m.actualAngle=180*c/Math.PI;isNaN(m.diameter)&&yq(m,0);isNaN(n.diameter)&&yq(n,0);m=Bq(a,e,f,d===Dn?c:-c,(m.diameter+n.diameter)/2+h);c+=d===Dn?m:-m}}
function Cq(a,b,c,d){var e=a.Ld,f=a.tg,h=a.Cu;c=c*Math.PI/180;for(var k=b.length,l=0;l<k;l++){var m=b.da(l);m.na=e*Math.cos(c);m.ua=f*Math.sin(c);m.actualAngle=180*c/Math.PI;m=Bq(a,e,f,d===Dn?c:-c,h);c+=d===Dn?m:-m}}function Fq(a,b,c,d,e){var f=a.Eu,f=a.Bq;a.hm=0;a.bw=new vq;if(360>c){for(f=d+(e===Dn?f:-f);0>f;)f+=360;f%=360;180<f&&(f-=360);f*=Math.PI/180;a.Eu=f;Gq(a,b,c,d,e)}else Hq(a,b,c,d,e);a.bw.commit(b)}
function Hq(a,b,c,d,e){var f=a.Ld,h=a.yk,k=a.Jn,l=f*Math.cos(d*Math.PI/180),m=a.tg*Math.sin(d*Math.PI/180),n=b.dc();if(3===n.length)n[0].na=f,n[0].ua=0,n[1].na=n[0].na-n[0].width/2-n[1].width/2-h,n[1].y=n[0].y,n[2].na=(n[0].na+n[1].na)/2,n[2].y=n[0].y-n[2].height-h;else if(4===n.length)n[0].na=f,n[0].ua=0,n[2].na=-n[0].na,n[2].ua=n[0].ua,n[1].na=0,n[1].y=Math.min(n[0].y,n[2].y)-n[1].height-h,n[3].na=0,n[3].y=Math.max(n[0].y+n[0].height+h,n[2].y+n[2].height+h);else{for(var f=v.L(),p=0;p<n.length;p++){n[p].na=
l;n[p].ua=m;if(p>=n.length-1)break;Iq(a,l,m,n,p,e,f)||Jq(a,l,m,n,p,e,f);l=f.x;m=f.y}v.v(f);a.hm++;if(!(23<a.hm)){var l=n[0].na,m=n[0].ua,f=n[n.length-1].na,p=n[n.length-1].ua,q=Math.abs(l-f)-((n[0].width+n[n.length-1].width)/2+h),r=Math.abs(m-p)-((n[0].height+n[n.length-1].height)/2+h),h=0;1>Math.abs(r)?Math.abs(l-f)<(n[0].width+n[n.length-1].width)/2&&(h=0):h=0<r?r:1>Math.abs(q)?0:q;q=!1;q=Math.abs(f)>Math.abs(p)?0<f!==m>p:0<p!==l<f;if(q=e===Dn?q:!q)h=-Math.abs(h),h=Math.min(h,-n[n.length-1].width),
h=Math.min(h,-n[n.length-1].height);a.bw.compare(h,n);1<Math.abs(h)&&(a.Ld=8>a.hm?a.Ld-h/(2*Math.PI):5>n.length&&10<h?a.Ld/2:a.Ld-(0<h?1.7:-2.3),a.tg=a.Ld*k,Hq(a,b,c,d,e))}}}
function Gq(a,b,c,d,e){for(var f=a.Ld,h=a.tg,k=a.Jn,l=f*Math.cos(d*Math.PI/180),m=h*Math.sin(d*Math.PI/180),n=v.L(),p=b.dc(),q=0;q<p.length;q++){p[q].na=l;p[q].ua=m;if(q>=p.length-1)break;Iq(a,l,m,p,q,e,n)||Jq(a,l,m,p,q,e,n);l=n.x;m=n.y}v.v(n);a.hm++;if(!(23<a.hm)){l=Math.atan2(m,l);l=e===Dn?a.Eu-l:l-a.Eu;l=Math.abs(l)<Math.abs(l-2*Math.PI)?l:l-2*Math.PI;f=l*(f+h)/2;h=a.bw;if(Math.abs(f)<Math.abs(h.Yo))for(h.Yo=f,h.jn=[],h.Lp=[],l=0;l<p.length;l++)h.jn[l]=p[l].mb.x,h.Lp[l]=p[l].mb.y;1<Math.abs(f)&&
(a.Ld=8>a.hm?a.Ld-f/(2*Math.PI):a.Ld-(0<f?1.7:-2.3),a.tg=a.Ld*k,Gq(a,b,c,d,e))}}function Iq(a,b,c,d,e,f,h){var k=a.Ld,l=a.tg,m=0,n=0;a=(d[e].width+d[e+1].width)/2+a.yk;var p=!1;if(0<=c!==(f===Dn)){if(m=b+a,m>k){m=b-a;if(m<-k)return h.x=m,h.y=n,!1;p=!0}}else if(m=b-a,m<-k){m=b+a;if(m>k)return h.x=m,h.y=n,!1;p=!0}n=Math.sqrt(1-Math.min(1,m*m/(k*k)))*l;0>c!==p&&(n=-n);if(Math.abs(c-n)>(d[e].height+d[e+1].height)/2)return h.x=m,h.y=n,!1;h.x=m;h.y=n;return!0}
function Jq(a,b,c,d,e,f,h){var k=a.Ld,l=a.tg,m=0,n=0;a=(d[e].height+d[e+1].height)/2+a.yk;d=!1;if(0<=b!==(f===Dn)){if(n=c-a,n<-l){n=c+a;if(n>l){h.x=m;h.y=n;return}d=!0}}else if(n=c+a,n>l){n=c-a;if(n<-l){h.x=m;h.y=n;return}d=!0}m=Math.sqrt(1-Math.min(1,n*n/(l*l)))*k;0>b!==d&&(m=-m);h.x=m;h.y=n}vn.prototype.commitLayout=function(){this.commitNodes();this.wt&&this.commitLinks()};
vn.prototype.commitNodes=function(){for(var a=this.VF,b=this.network.vertexes.i;b.next();){var c=b.value;c.x+=a.x;c.y+=a.y;c.commit()}};vn.prototype.commitLinks=function(){for(var a=this.network.edges.i;a.next();)a.value.commit()};
function Aq(a,b,c,d,e){var f=a.JF;if(.001>Math.abs(a.Jn-1))return void 0!==d&&void 0!==e?e*b:2*Math.PI*b;a=b>c?Math.sqrt(b*b-c*c)/b:Math.sqrt(c*c-b*b)/c;for(var h=0,k=0,k=void 0!==d&&void 0!==e?e/(f+1):Math.PI/(2*(f+1)),l=0,m=0;m<=f;m++)l=void 0!==d&&void 0!==e?d+m*e/f:m*Math.PI/(2*f),l=Math.sin(l),h+=Math.sqrt(1-a*a*l*l)*k;return void 0!==d&&void 0!==e?(b>c?b:c)*h:4*(b>c?b:c)*h}function zq(a,b,c,d,e){var f=0,f=void 0!==d&&void 0!==e?Aq(a,1,c,d,e):Aq(a,1,c);return b/f}
function Bq(a,b,c,d,e){if(.001>Math.abs(a.Jn-1))return e/b;var f=b>c?Math.sqrt(b*b-c*c)/b:Math.sqrt(c*c-b*b)/c,h=0;a=2*Math.PI/(700*a.network.vertexes.count);b>c&&(d+=Math.PI/2);for(var k=0;;k++){var l=Math.sin(d+k*a),h=h+(b>c?b:c)*Math.sqrt(1-f*f*l*l)*a;if(h>=e)return k*a}}
vn.prototype.sort=function(a){switch(this.sorting){case yn:break;case zn:a.reverse();break;case wn:a.sort(this.comparer);break;case xn:a.sort(this.comparer);a.reverse();break;case An:for(var b=[],c=0;c<a.length;c++)b.push(0);for(var d=new I(xq),c=0;c<a.length;c++){var e=-1,f=-1;if(0===c)for(var h=0;h<a.length;h++){var k=a.da(h).JG;k>e&&(e=k,f=h)}else for(h=0;h<a.length;h++)k=b[h],k>e&&(e=k,f=h);d.add(a.da(f));b[f]=-1;f=a.da(f);e=0;for(h=f.lc;h.next();)e=a.indexOf(h.value.fromVertex),0>e||0<=b[e]&&
b[e]++;for(f=f.$b;f.next();)e=a.indexOf(f.value.toVertex),0>e||0<=b[e]&&b[e]++}a=[];for(b=0;b<d.length;b++){h=d.da(b);a[b]=[];for(var l=0,c=h.$b;c.next();)l=d.indexOf(c.value.toVertex),l!==b&&0>a[b].indexOf(l)&&a[b].push(l);for(c=h.lc;c.next();)l=d.indexOf(c.value.fromVertex),l!==b&&0>a[b].indexOf(l)&&a[b].push(l)}h=[];for(b=0;b<a.length;b++)h[b]=0;for(var c=[],k=[],m=[],e=[],f=new I(xq),n=0,b=0;b<a.length;b++){var p=a[b].length;if(1===p)e.push(b);else if(0===p)f.add(d.da(b));else{if(0===n)c.push(b);
else{for(var q=Infinity,r=Infinity,s=-1,t=[],p=0;p<c.length;p++)0>a[c[p]].indexOf(c[p===c.length-1?0:p+1])&&t.push(p===c.length-1?0:p+1);if(0===t.length)for(p=0;p<c.length;p++)t.push(p);for(p=0;p<t.length;p++){var u=t[p],w,l=a[b];w=k;for(var x=m,z=h,A=u,H=c,C=0,T=0;T<w.length;T++){var ba=z[w[T]],U=z[x[T]],M=0,aa=0;ba<U?(M=ba,aa=U):(M=U,aa=ba);if(M<A&&A<=aa)for(ba=0;ba<l.length;ba++)U=l[ba],0>H.indexOf(U)||M<z[U]&&z[U]<aa||M===z[U]||aa===z[U]||C++;else for(ba=0;ba<l.length;ba++)U=l[ba],0>H.indexOf(U)||
M<z[U]&&z[U]<aa&&M!==z[U]&&aa!==z[U]&&C++}w=C;for(z=x=0;z<a[b].length;z++)l=c.indexOf(a[b][z]),0<=l&&(l=Math.abs(u-(l>=u?l+1:l)),x+=l<c.length+1-l?l:c.length+1-l);for(z=0;z<k.length;z++)l=h[k[z]],A=h[m[z]],l>=u&&l++,A>=u&&A++,l>A&&(H=A,A=l,l=H),A-l<(c.length+2)/2===(l<u&&u<=A)&&x++;if(w<q||w===q&&x<r)q=w,r=x,s=u}c.splice(s,0,b);for(p=0;p<c.length;p++)h[c[p]]=p;for(p=0;p<a[b].length;p++)q=a[b][p],0<=c.indexOf(q)&&(k.push(b),m.push(q))}n++}}k=!1;for(m=c.length;;){k=!0;for(h=0;h<e.length;h++)if(b=e[h],
n=a[b][0],l=c.indexOf(n),0<=l){for(r=p=0;r<a[n].length;r++)q=a[n][r],q=c.indexOf(q),0>q||q===l||(s=q>l?q-l:l-q,p+=q<l!==s>m-s?1:-1);c.splice(0>p?l:l+1,0,b);e.splice(h,1);h--}else k=!1;if(k)break;else c.push(e[0]),e.splice(0,1)}for(b=0;b<c.length;b++)l=c[b],f.add(d.da(l));return f;default:v.k("Invalid sorting type.")}return a};v.defineProperty(vn,{cI:"radius"},function(){return this.Nr},function(a){this.Nr!==a&&(v.j(a,"number",vn,"radius"),0<a||isNaN(a))&&(this.Nr=a,this.H())});
v.defineProperty(vn,{fG:"aspectRatio"},function(){return this.Yp},function(a){this.Yp!==a&&(v.j(a,"number",vn,"aspectRatio"),0<a&&(this.Yp=a,this.H()))});v.defineProperty(vn,{ye:"startAngle"},function(){return this.us},function(a){this.us!==a&&(v.j(a,"number",vn,"startAngle"),this.us=a,this.H())});v.defineProperty(vn,{Bf:"sweepAngle"},function(){return this.ws},function(a){this.ws!==a&&(v.j(a,"number",vn,"sweepAngle"),this.ws=0<a&&360>=a?a:360,this.H())});
v.defineProperty(vn,{Of:"arrangement"},function(){return this.fd},function(a){this.fd!==a&&(v.pb(a,vn,vn,"arrangement"),a===In||a===Hn||a===Gn||a===Fn)&&(this.fd=a,this.H())});v.defineProperty(vn,{direction:"direction"},function(){return this.aa},function(a){this.aa!==a&&(v.pb(a,vn,vn,"direction"),a===Dn||a===En||a===Bn||a===Cn)&&(this.aa=a,this.H())});
v.defineProperty(vn,{sorting:"sorting"},function(){return this.Nh},function(a){this.Nh!==a&&(v.pb(a,vn,vn,"sorting"),a===yn||a===zn||a===wn||xn||a===An)&&(this.Nh=a,this.H())});v.defineProperty(vn,{comparer:"comparer"},function(){return this.wh},function(a){this.wh!==a&&(v.j(a,"function",vn,"comparer"),this.wh=a,this.H())});v.defineProperty(vn,{spacing:"spacing"},function(){return this.Oh},function(a){this.Oh!==a&&(v.j(a,"number",vn,"spacing"),this.Oh=a,this.H())});
v.defineProperty(vn,{Qw:"nodeDiameterFormula"},function(){return this.Dr},function(a){this.Dr!==a&&(v.pb(a,vn,vn,"nodeDiameterFormula"),a===Kn||a===Jn)&&(this.Dr=a,this.H())});v.u(vn,{WF:"actualXRadius"},function(){return this.Ld});v.u(vn,{XF:"actualYRadius"},function(){return this.tg});v.u(vn,{WI:"actualSpacing"},function(){return this.yk});v.u(vn,{VF:"actualCenter"},function(){return isNaN(this.Zd.x)||isNaN(this.Zd.y)?new y(0,0):new y(this.Zd.x+this.WF,this.Zd.y+this.XF)});var Hn;
vn.ConstantSpacing=Hn=v.p(vn,"ConstantSpacing",0);var Gn;vn.ConstantDistance=Gn=v.p(vn,"ConstantDistance",1);var Fn;vn.ConstantAngle=Fn=v.p(vn,"ConstantAngle",2);var In;vn.Packed=In=v.p(vn,"Packed",3);var Dn;vn.Clockwise=Dn=v.p(vn,"Clockwise",4);var En;vn.Counterclockwise=En=v.p(vn,"Counterclockwise",5);var Bn;vn.BidirectionalLeft=Bn=v.p(vn,"BidirectionalLeft",6);var Cn;vn.BidirectionalRight=Cn=v.p(vn,"BidirectionalRight",7);var yn;vn.Forwards=yn=v.p(vn,"Forwards",8);var zn;
vn.Reverse=zn=v.p(vn,"Reverse",9);var wn;vn.Ascending=wn=v.p(vn,"Ascending",10);var xn;vn.Descending=xn=v.p(vn,"Descending",11);var An;vn.Optimized=An=v.p(vn,"Optimized",12);var Kn;vn.Pythagorean=Kn=v.p(vn,"Pythagorean",13);var Jn;vn.Circular=Jn=v.p(vn,"Circular",14);function vq(){this.Yo=-Infinity;this.Lp=this.jn=null}
vq.prototype.compare=function(a,b){if(0<a&&0>this.Yo||Math.abs(a)<Math.abs(this.Yo)&&!(0>a&&0<this.Yo)){this.Yo=a;this.jn=[];this.Lp=[];for(var c=0;c<b.length;c++)this.jn[c]=b[c].mb.x,this.Lp[c]=b[c].mb.y}};vq.prototype.commit=function(a){if(null!==this.jn&&null!==this.Lp)for(var b=0;b<this.jn.length;b++){var c=a.da(b);c.x=this.jn[b];c.y=this.Lp[b]}};function wq(){Zf.call(this)}v.Ia(wq,Zf);v.ea("CircularNetwork",wq);wq.prototype.createVertex=function(){return new xq};wq.prototype.createEdge=function(){return new Kq};
function xq(){nq.call(this);this.actualAngle=this.diameter=NaN}v.Ia(xq,nq);v.ea("CircularVertex",xq);
function yq(a,b){var c=a.network;if(null===c)return NaN;c=c.Pb;if(null===c)return NaN;if(c.Of===In)if(c.Qw===Jn)a.diameter=Math.max(a.width,a.height);else{var c=Math.abs(Math.sin(b)),d=Math.abs(Math.cos(b));if(0===c)return a.width;if(0===d)return a.height;a.diameter=Math.min(a.height/c,a.width/d)}else a.diameter=c.Qw===Jn?Math.max(a.width,a.height):Math.sqrt(a.width*a.width+a.height*a.height);return a.diameter}function Kq(){oq.call(this)}v.Ia(Kq,oq);v.ea("CircularEdge",Kq);
function Lq(){0<arguments.length&&v.dd(Lq);Yf.call(this);this.sg=null;this.cr=0;this.cg=(new ia(100,100)).freeze();this.Xp=!1;this.Mh=!0;this.vh=!1;this.ho=100;this.Dq=1;this.Dh=1E3;this.Pr=Math;this.En=.05;this.Dn=50;this.An=150;this.Cn=0;this.tq=10;this.sq=5}v.Ia(Lq,Yf);v.ea("ForceDirectedLayout",Lq);
Lq.prototype.cloneProtected=function(a){Yf.prototype.cloneProtected.call(this,a);a.cg.assign(this.cg);a.Xp=this.Xp;a.Mh=this.Mh;a.vh=this.vh;a.ho=this.ho;a.Dq=this.Dq;a.Dh=this.Dh;a.Pr=this.Pr;a.En=this.En;a.Dn=this.Dn;a.An=this.An;a.Cn=this.Cn;a.tq=this.tq;a.sq=this.sq};Lq.prototype.createNetwork=function(){return new Mq};
Lq.prototype.doLayout=function(a){null===a&&v.k("Layout.doLayout(collection) argument must not be null but a Diagram, a Group, or an Iterable of Parts");null===this.network&&(this.network=this.makeNetwork(a));a=this.Kz;if(0<this.network.vertexes.count){this.network.tw();for(var b=this.network.vertexes.i;b.next();){var c=b.value;c.charge=this.electricalCharge(c);c.mass=this.gravitationalMass(c)}for(b=this.network.edges.i;b.next();)c=b.value,c.stiffness=this.springStiffness(c),c.length=this.springLength(c);
this.Xy();this.cr=0;if(this.needsClusterLayout()){b=this.network;for(c=b.CI().i;c.next();){this.network=c.value;for(var d=this.network.vertexes.i;d.next();){var e=d.value;e.$f=e.vertexes.count;e.ck=1;e.Em=null;e.oh=null}Nq(this,0,a)}this.network=b;c.reset();for(var d=this.gD,f=c.count,h=!0,k=e=0,l=v.jb(),m=0;m<f+b.vertexes.count+2;m++)l[m]=null;f=0;c.reset();for(var n=v.bg();c.next();)if(m=c.value,this.ah(m,n),h)h=!1,e=n.x+n.width/2,k=n.y+n.height/2,l[0]=new y(n.x+n.width+d.width,n.y),l[1]=new y(n.x,
n.y+n.height+d.height),f=2;else{var p=Oq(l,f,e,k,n.width,n.height,d),q=l[p],r=new y(q.x+n.width+d.width,q.y),s=new y(q.x,q.y+n.height+d.height);p+1<f&&l.splice(p+1,0,null);l[p]=r;l[p+1]=s;f++;p=q.x-n.x;q=q.y-n.y;for(m=m.vertexes.i;m.next();)r=m.value,r.na+=p,r.ua+=q}v.Vb(n);for(m=b.vertexes.i;m.next();)h=m.value,n=h.mb,2>f?(e=n.x+n.width/2,k=n.y+n.height/2,l[0]=new y(n.x+n.width+d.width,n.y),l[1]=new y(n.x,n.y+n.height+d.height),f=2):(p=Oq(l,f,e,k,n.width,n.height,d),q=l[p],r=new y(q.x+n.width+d.width,
q.y),s=new y(q.x,q.y+n.height+d.height),p+1<f&&l.splice(p+1,0,null),l[p]=r,l[p+1]=s,f++,h.na=q.x+h.width/2,h.ua=q.y+h.height/2);v.sa(l);for(c.reset();c.next();){d=c.value;for(e=d.vertexes.i;e.next();)b.Zk(e.value);for(d=d.edges.i;d.next();)b.Io(d.value)}}Pq(this,a);this.updateParts()}this.ho=a;this.network=null;this.xf=!0};
Lq.prototype.needsClusterLayout=function(){if(3>this.network.vertexes.count)return!1;for(var a=0,b=0,c=this.network.vertexes.first().mb,d=this.network.vertexes.i;d.next();){if(d.value.mb.yg(c)&&(a++,2<a))return!0;if(10<b)break;b++}return!1};Lq.prototype.ah=function(a,b){for(var c=!0,d=a.vertexes.i;d.next();){var e=d.value;c?(c=!1,b.set(e.mb)):b.ci(e.mb)}return b};
function Nq(a,b,c){if(Qq(a,b)){var d=a.Dh;a.Dh*=1+1/(b+1);var e=Zq(a,b),f=Math.max(0,Math.max(Math.min(a.network.vertexes.count,c*(b+1)/11),10));a.Kz+=f;Nq(a,b+1,c);Pq(a,f);er(a,e);b=a.sg;null===b?b=new I(fr):b.clear();b.Tc(e.vertexes);b.sort(function(a,b){return null===a||null===b||a===b?0:b.$f-a.$f});for(e=b.i;e.next();)gr(a,e.value);a.Dh=d}}
function Qq(a,b){if(10<b||3>a.network.vertexes.count)return!1;null===a.sg?a.sg=new I(fr):a.sg.clear();a.sg.Tc(a.network.vertexes);var c=a.sg;c.sort(function(a,b){return null===a||null===b||a===b?0:b.$f-a.$f});for(var d=c.count-1;0<=d&&1>=c.da(d).$f;)d--;return 1<c.count-d}
function Zq(a,b){for(var c=a.network,d=new Mq,e=a.sg.i;e.next();){var f=e.value;if(1<f.$f){d.Zk(f);var h=new hr;h.xx=f.$f;h.yx=f.width;h.wx=f.height;h.DA=f.O.x;h.EA=f.O.y;null===f.oh&&(f.oh=new I(hr));f.oh.add(h);f.eA=f.oh.count-1}else break}for(var k=c.edges.i;k.next();)if(e=k.value,e.fromVertex.network===d&&e.toVertex.network===d)d.Io(e);else if(e.fromVertex.network===d){var l=e.fromVertex.Em;null===l&&(l=new I(fr),e.fromVertex.Em=l);l.add(e.toVertex);e.fromVertex.$f--;e.fromVertex.ck+=e.toVertex.ck}else e.toVertex.network===
d&&(l=e.toVertex.Em,null===l&&(l=new I(fr),e.toVertex.Em=l),l.add(e.fromVertex),e.toVertex.$f--,e.toVertex.ck+=e.fromVertex.ck);for(e=d.edges.i;e.next();)f=e.value,f.length*=Math.max(1,Id((f.fromVertex.ck+f.toVertex.ck)/(4*b+1)));for(e=d.vertexes.i;e.next();)if(f=e.value,l=f.Em,null!==l&&0<l.count&&(h=f.oh.da(f.oh.count-1),h=h.xx-f.$f,!(0>=h))){for(var m=0,n=0,p=l.count-h;p<l.count;p++){for(var q=l.da(p),r=null,k=q.edges.i;k.next();){var s=k.value;if(s.UG(q)===f){r=s;break}}null!==r&&(n+=r.length,
m+=q.width*q.height)}l=f.na;k=f.ua;p=f.width;q=f.height;r=f.O;s=p*q;1>s&&(s=1);m=Id((m+s+n*n*4/(h*h))/s);h=(m-1)*p/2;m=(m-1)*q/2;f.mb=new B(l-r.x-h,k-r.y-m,p+2*h,q+2*m);f.focus=new y(r.x+h,r.y+m)}a.network=d;return c}function er(a,b){for(var c=a.network.vertexes.i;c.next();){var d=c.value;d.network=b;if(null!==d.oh){var e=d.oh.da(d.eA);d.$f=e.xx;var f=e.DA,h=e.EA;d.mb=new B(d.na-f,d.ua-h,e.yx,e.wx);d.focus=new y(f,h);d.eA--}}for(c=a.network.edges.i;c.next();)c.value.network=b;a.network=b}
function gr(a,b){var c=b.Em;if(null!==c&&0!==c.count){var d=b.na,e=b.ua,f=b.width,h=b.height;null!==b.oh&&0<b.oh.count&&(h=b.oh.da(0),f=h.yx,h=h.wx);for(var f=Id(f*f+h*h)/2,k=!1,l=h=0,m=0,n=b.vertexes.i;n.next();){var p=n.value;1>=p.$f?l++:(k=!0,m++,h+=Math.atan2(b.ua-p.ua,b.na-p.na))}if(0!==l)for(0<m&&(h/=m),n=m=0,m=k?2*Math.PI/(l+1):2*Math.PI/l,0===l%2&&(n=m/2),1<c.count&&c.sort(function(a,b){return null===a||null===b||a===b?0:b.width*b.height-a.width*a.height}),k=0===l%2?0:1,c=c.i;c.next();)if(l=
c.value,!(1<l.$f||a.isFixed(l))){for(var p=null,q=l.edges.i;q.next();){p=q.value;break}var q=l.width,r=l.height,q=Id(q*q+r*r)/2,p=f+p.length+q,q=h+(m*(k/2>>1)+n)*(0===k%2?1:-1);l.na=d+p*Math.cos(q);l.ua=e+p*Math.sin(q);k++}}}function Oq(a,b,c,d,e,f,h){var k=9E19,l=-1,m=0;a:for(;m<b;m++){var n=a[m],p=n.x-c,q=n.y-d,p=p*p+q*q;if(p<k){for(q=m-1;0<=q;q--)if(a[q].y>n.y&&a[q].x-n.x<e+h.width)continue a;for(q=m+1;q<b;q++)if(a[q].x>n.x&&a[q].y-n.y<f+h.height)continue a;l=m;k=p}}return l}
Lq.prototype.Xy=function(){if(this.comments)for(var a=this.network.vertexes.i;a.next();)this.addComments(a.value)};
Lq.prototype.addComments=function(a){var b=a.Jc;if(null!==b)for(b=b.HD();b.next();){var c=b.value;if("Comment"===c.gc&&c.isVisible()){var d=this.network.Mm(c);null===d&&(d=this.network.Os(c));d.charge=this.zG;for(var c=null,e=d.$b;e.next();){var f=e.value;if(f.toVertex===a){c=f;break}}if(null===c)for(e=d.lc;e.next();)if(f=e.value,f.fromVertex===a){c=f;break}null===c&&(c=this.network.lp(a,d,null));c.length=this.AG}}};
function ir(a,b){var c=a.M,d=c.x,e=c.y,f=c.width,c=c.height,h=b.M,k=h.x,l=h.y,m=h.width,h=h.height;return d+f<k?e>l+h?(d=d+f-k,e=e-l-h,Id(d*d+e*e)):e+c<l?(d=d+f-k,e=e+c-l,Id(d*d+e*e)):k-(d+f):d>k+m?e>l+h?(d=d-k-m,e=e-l-h,Id(d*d+e*e)):e+c<l?(d=d-k-m,e=e+c-l,Id(d*d+e*e)):d-(k+m):e>l+h?e-(l+h):e+c<l?l-(e+c):.1}function Pq(a,b){a.sg=null;for(var c=a.cr+b;a.cr<c&&(a.cr++,jr(a)););a.sg=null}
function jr(a){null===a.sg&&(a.sg=new I(fr),a.sg.Tc(a.network.vertexes));var b=a.sg.n;if(0>=b.length)return!1;var c=b[0];c.forceX=0;c.forceY=0;for(var d=c.na,e=d,f=c.ua,h=f,c=1;c<b.length;c++){var k=b[c];k.forceX=0;k.forceY=0;var l=k.na,k=k.ua,d=Math.min(d,l),e=Math.max(e,l),f=Math.min(f,k),h=Math.max(h,k)}(f=e-d>h-f)?b.sort(function(a,b){return null===a||null===b||a===b?0:a.na-b.na}):b.sort(function(a,b){return null===a||null===b||a===b?0:a.ua-b.ua});for(var h=a.Dh,m=0,n=0,p=0,c=0;c<b.length;c++){var k=
b[c],l=k.M,q=k.O,d=l.x+q.x,l=l.y+q.y,n=k.charge*a.electricalFieldX(d,l),p=k.charge*a.electricalFieldY(d,l),n=n+k.mass*a.gravitationalFieldX(d,l),p=p+k.mass*a.gravitationalFieldY(d,l);k.forceX+=n;k.forceY+=p;for(q=c+1;q<b.length;q++)if(e=b[q],e!==k){var r=e.M,n=e.O,p=r.x+n.x,r=r.y+n.y;if(d-p>h||p-d>h){if(f)break}else if(l-r>h||r-l>h){if(!f)break}else{var s=ir(k,e);1>s?(n=a.Yw,null===n&&(a.Yw=n=new va(0)),m=n.random(),s=n.random(),d>p?(n=Math.abs(e.M.right-k.M.x),n=(1+n)*m):d<p?(n=Math.abs(e.M.x-k.M.right),
n=-(1+n)*m):(n=Math.max(e.width,k.width),n=(1+n)*m-n/2),l>r?(p=Math.abs(e.M.bottom-k.M.y),p=(1+p)*s):d<p?(p=Math.abs(e.M.y-k.M.bottom),p=-(1+p)*s):(p=Math.max(e.height,k.height),p=(1+p)*s-p/2)):(m=-(k.charge*e.charge)/(s*s),n=(p-d)/s*m,p=(r-l)/s*m);k.forceX+=n;k.forceY+=p;e.forceX-=n;e.forceY-=p}}}for(c=a.network.edges.i;c.next();)f=c.value,k=f.fromVertex,e=f.toVertex,l=k.M,q=k.O,d=l.x+q.x,l=l.y+q.y,r=e.M,n=e.O,p=r.x+n.x,r=r.y+n.y,s=ir(k,e),1>s?(n=a.Yw,null===n&&(a.Yw=n=new va(0)),m=n.random(),s=
n.random(),n=(d>p?1:-1)*(1+(e.width>k.width)?e.width:k.width)*m,p=(l>r?1:-1)*(1+(e.height>k.height)?e.height:k.height)*s):(m=f.stiffness*(s-f.length),n=(p-d)/s*m,p=(r-l)/s*m),k.forceX+=n,k.forceY+=p,e.forceX-=n,e.forceY-=p;c=0;d=Math.max(a.Dh/20,50);for(e=0;e<b.length;e++)k=b[e],a.isFixed(k)?a.moveFixedVertex(k):(f=k.forceX,h=k.forceY,f<-d?f=-d:f>d&&(f=d),h<-d?h=-d:h>d&&(h=d),k.na+=f,k.ua+=h,c=Math.max(c,f*f+h*h));return c>a.ED*a.ED}Lq.prototype.moveFixedVertex=function(){};
Lq.prototype.commitLayout=function(){this.kA();this.commitNodes();this.wt&&this.commitLinks()};Lq.prototype.kA=function(){if(this.Fp)for(var a=this.network.edges.i;a.next();){var b=a.value.link;null!==b&&(b.xb=kc,b.yb=kc)}};Lq.prototype.commitNodes=function(){var a=0,b=0;if(this.eG){var c=v.bg();this.ah(this.network,c);b=this.Zd;a=b.x-c.x;b=b.y-c.y;v.Vb(c)}for(var c=v.bg(),d=this.network.vertexes.i;d.next();){var e=d.value;if(0!==a||0!==b)c.assign(e.mb),c.x+=a,c.y+=b,e.mb=c;e.commit()}v.Vb(c)};
Lq.prototype.commitLinks=function(){for(var a=this.network.edges.i;a.next();)a.value.commit()};Lq.prototype.springStiffness=function(a){a=a.stiffness;return isNaN(a)?this.En:a};Lq.prototype.springLength=function(a){a=a.length;return isNaN(a)?this.Dn:a};Lq.prototype.electricalCharge=function(a){a=a.charge;return isNaN(a)?this.An:a};Lq.prototype.electricalFieldX=function(){return 0};Lq.prototype.electricalFieldY=function(){return 0};
Lq.prototype.gravitationalMass=function(a){a=a.mass;return isNaN(a)?this.Cn:a};Lq.prototype.gravitationalFieldX=function(){return 0};Lq.prototype.gravitationalFieldY=function(){return 0};Lq.prototype.isFixed=function(a){return a.isFixed};v.u(Lq,{wJ:"currentIteration"},function(){return this.cr});v.defineProperty(Lq,{gD:"arrangementSpacing"},function(){return this.cg},function(a){v.A(a,ia,Lq,"arrangementSpacing");this.cg.K(a)||(this.cg.assign(a),this.H())});
v.defineProperty(Lq,{eG:"arrangesToOrigin"},function(){return this.Xp},function(a){this.Xp!==a&&(v.j(a,"boolean",Lq,"arrangesToOrigin"),this.Xp=a,this.H())});v.defineProperty(Lq,{Fp:"setsPortSpots"},function(){return this.Mh},function(a){this.Mh!==a&&(v.j(a,"boolean",Lq,"setsPortSpots"),this.Mh=a,this.H())});v.defineProperty(Lq,{comments:"comments"},function(){return this.vh},function(a){this.vh!==a&&(v.j(a,"boolean",Lq,"comments"),this.vh=a,this.H())});
v.defineProperty(Lq,{Kz:"maxIterations"},function(){return this.ho},function(a){this.ho!==a&&(v.j(a,"number",Lq,"maxIterations"),0<=a&&(this.ho=a,this.H()))});v.defineProperty(Lq,{ED:"epsilonDistance"},function(){return this.Dq},function(a){this.Dq!==a&&(v.j(a,"number",Lq,"epsilonDistance"),0<a&&(this.Dq=a,this.H()))});v.defineProperty(Lq,{NJ:"infinityDistance"},function(){return this.Dh},function(a){this.Dh!==a&&(v.j(a,"number",Lq,"infinityDistance"),1<a&&(this.Dh=a,this.H()))});
v.defineProperty(Lq,{Yw:"randomNumberGenerator"},function(){return this.Pr},function(a){this.Pr!==a&&(null!==a&&"function"!==typeof a.random&&v.k('ForceDirectedLayout.randomNumberGenerator must have a "random()" function on it: '+a),this.Pr=a)});v.defineProperty(Lq,{IJ:"defaultSpringStiffness"},function(){return this.En},function(a){this.En!==a&&(v.j(a,"number",Lq,"defaultSpringStiffness"),this.En=a,this.H())});
v.defineProperty(Lq,{HJ:"defaultSpringLength"},function(){return this.Dn},function(a){this.Dn!==a&&(v.j(a,"number",Lq,"defaultSpringLength"),this.Dn=a,this.H())});v.defineProperty(Lq,{BJ:"defaultElectricalCharge"},function(){return this.An},function(a){this.An!==a&&(v.j(a,"number",Lq,"defaultElectricalCharge"),this.An=a,this.H())});v.defineProperty(Lq,{CJ:"defaultGravitationalMass"},function(){return this.Cn},function(a){this.Cn!==a&&(v.j(a,"number",Lq,"defaultGravitationalMass"),this.Cn=a,this.H())});
v.defineProperty(Lq,{AG:"defaultCommentSpringLength"},function(){return this.tq},function(a){this.tq!==a&&(v.j(a,"number",Lq,"defaultCommentSpringLength"),this.tq=a,this.H())});v.defineProperty(Lq,{zG:"defaultCommentElectricalCharge"},function(){return this.sq},function(a){this.sq!==a&&(v.j(a,"number",Lq,"defaultCommentElectricalCharge"),this.sq=a,this.H())});function hr(){this.EA=this.DA=this.wx=this.yx=this.xx=0}function Mq(){Zf.call(this)}v.Ia(Mq,Zf);v.ea("ForceDirectedNetwork",Mq);
Mq.prototype.createVertex=function(){return new fr};Mq.prototype.createEdge=function(){return new kr};function fr(){nq.call(this);this.isFixed=!1;this.mass=this.charge=NaN;this.ck=this.$f=this.forceY=this.forceX=0;this.oh=this.Em=null;this.eA=0}v.Ia(fr,nq);v.ea("ForceDirectedVertex",fr);function kr(){oq.call(this);this.length=this.stiffness=NaN}v.Ia(kr,oq);v.ea("ForceDirectedEdge",kr);
function gn(){0<arguments.length&&v.dd(gn);Yf.call(this);this.Kd=this.$l=25;this.aa=0;this.zn=lr;this.ao=mr;this.Rn=nr;this.Xl=4;this.mn=or;this.Fi=pr;this.Mh=!0;this.hr=4;this.Fb=this.nv=this.ob=-1;this.If=this.rr=0;this.Lb=this.Ff=this.Gf=this.jg=this.Vd=null;this.zr=0;this.yr=this.dm=null;this.ng=0;this.Ar=null;this.Tg=[];this.Tg.length=100}v.Ia(gn,Yf);v.ea("LayeredDigraphLayout",gn);
gn.prototype.cloneProtected=function(a){Yf.prototype.cloneProtected.call(this,a);a.$l=this.$l;a.Kd=this.Kd;a.aa=this.aa;a.zn=this.zn;a.ao=this.ao;a.Rn=this.Rn;a.Xl=this.Xl;a.mn=this.mn;a.Fi=this.Fi;a.Mh=this.Mh;a.hr=this.hr};gn.prototype.createNetwork=function(){return new qr};
gn.prototype.doLayout=function(a){null===a&&v.k("Layout.doLayout(collection) argument must not be null but a Diagram, a Group, or an Iterable of Parts");null===this.network&&(this.network=this.makeNetwork(a));this.Zd=this.initialOrigin(this.Zd);this.nv=-1;this.If=this.rr=0;this.Ar=this.yr=this.dm=null;for(a=0;a<this.Tg.length;a++)this.Tg[a]=null;if(0<this.network.vertexes.count){this.network.tw();for(a=this.network.edges.i;a.next();)a.value.rev=!1;switch(this.zn){default:case rr:var b=0,c=this.network.vertexes.count-
1;a=[];a.length=c+1;for(var d=this.network.vertexes.i;d.next();)d.value.valid=!0;for(;null!==sr(this.network);){for(d=tr(this.network);null!==d;)a[c]=d,c--,d.valid=!1,d=tr(this.network);for(d=ur(this.network);null!==d;)a[b]=d,b++,d.valid=!1,d=ur(this.network);for(var d=null,e=0,f=this.network.vertexes.i;f.next();){var h=f.value;if(h.valid){for(var k=0,l=h.$b;l.next();)l.value.toVertex.valid&&k++;for(var l=0,m=h.lc;m.next();)m.value.fromVertex.valid&&l++;if(null===d||e<k-l)d=h,e=k-l}}null!==d&&(a[b]=
d,b++,d.valid=!1)}for(b=0;b<this.network.vertexes.count;b++)a[b].index=b;for(a=this.network.edges.i;a.next();)b=a.value,b.fromVertex.index>b.toVertex.index&&(this.network.ex(b),b.rev=!0);break;case lr:for(b=this.network.vertexes.i;b.next();)a=b.value,a.So=-1,a.finish=-1;for(a=this.network.edges.i;a.next();)a.value.forest=!1;this.zr=0;for(b.reset();b.next();)c=b.value,0===c.lc.count&&vr(this,c);for(b.reset();b.next();)c=b.value,-1===c.So&&vr(this,c);for(a.reset();a.next();)b=a.value,b.forest||(c=b.fromVertex,
d=c.finish,e=b.toVertex,f=e.finish,e.So<c.So&&d<f&&(this.network.ex(b),b.rev=!0))}for(a=this.network.vertexes.i;a.next();)a.value.layer=-1;this.ob=-1;this.assignLayers();for(a.reset();a.next();)this.ob=Math.max(this.ob,a.value.layer);a=[];for(c=this.network.edges.i;c.next();)b=c.value,b.valid=!1,a.push(b);for(c=0;c<a.length;c++)if(b=a[c],!b.valid&&(null!==b.fromVertex.rd&&null!==b.toVertex.rd||b.fromVertex.layer!==b.toVertex.layer)){l=h=k=f=0;e=b.fromVertex;d=b.toVertex;if(null!==b.link){k=b.link;
if(null===k)continue;var n=e.rd,f=d.rd;if(null===n||null===f)continue;var p=k.T,h=k.Z,q=k.bd,l=k.Hd;b.rev&&(k=p,m=q,p=h,q=l,h=k,l=m);var r=e.O,k=b.toVertex.O,s=b.rev?d.M:e.M,m=v.L();s.G()?(cp(p,q,Ab,m),m.G()||m.assign(r)):m.assign(r);n!==p&&s.G()&&p.isVisible()&&(n=e.M,n.G()&&(m.x+=s.x-n.x,m.y+=s.y-n.y));p=b.rev?e.M:d.M;n=v.L();p.G()?(cp(h,l,Ab,n),n.G()||n.assign(k)):n.assign(k);f!==h&&p.G()&&h.isVisible()&&(f=d.M,f.G()&&(n.x+=p.x-f.x,n.y+=p.y-f.y));90===this.aa||270===this.aa?(f=Math.round((m.x-
r.x)/this.Kd),h=m.x,k=Math.round((n.x-k.x)/this.Kd),l=n.x):(f=Math.round((m.y-r.y)/this.Kd),h=m.y,k=Math.round((n.y-k.y)/this.Kd),l=n.y);v.v(m);v.v(n);b.portFromColOffset=f;b.portFromPos=h;b.portToColOffset=k;b.portToPos=l}else b.portFromColOffset=0,b.portFromPos=0,b.portToColOffset=0,b.portToPos=0;m=e.layer;r=d.layer;a:if(n=b,p=0,s=n.link,null!==s){var t=s.bd,u=s.Hd;if(null!==t&&null!==u){var w=s.T,q=s.Z;if(null!==w&&null!==q){var x=t.xb,z=u.yb;this.Fp||(s.xb.Uc()||(x=s.xb),s.yb.Uc()||(z=s.yb));
var A=s.jc,H=wr(this,!0);if(x.Uc()||x===sb)x=H;var C=wr(this,!1);if(z.Uc()||z===sb)z=C;if(x.Vi()&&x.bp(C)&&z.Vi()&&z.bp(H)){p=0;break a}H=s.getLinkPoint(w,t,x,!0,A,q,u,v.L());x=s.getLinkDirection(w,t,H,x,!0,A,q,u);v.v(H);x===xr(this,n,!0)?p+=1:this.Fp&&null!==w&&1===w.ports.count&&n.rev&&(p+=1);x=s.getLinkPoint(q,u,z,!1,A,w,t,v.L());s=s.getLinkDirection(q,u,x,z,!1,A,w,t);v.v(x);s===xr(this,n,!1)?p+=2:this.Fp&&null!==q&&1===q.ports.count&&n.rev&&(p+=2)}}}n=1===p||3===p?!0:!1;if(p=2===p||3===p?!0:!1)q=
this.network.createVertex(),q.rd=null,q.Bm=1,q.layer=m,q.near=e,this.network.Zk(q),e=this.network.lp(e,q,b.link),e.valid=!1,e.rev=b.rev,e.portFromColOffset=f,e.portToColOffset=0,e.portFromPos=h,e.portToPos=0,e=q;s=1;n&&s--;if(m-r>s&&0<m){b.valid=!1;q=this.network.createVertex();q.rd=null;q.Bm=2;q.layer=m-1;this.network.Zk(q);e=this.network.lp(e,q,b.link);e.valid=!0;e.rev=b.rev;e.portFromColOffset=p?0:f;e.portToColOffset=0;e.portFromPos=p?0:h;e.portToPos=0;e=q;for(m--;m-r>s&&0<m;)q=this.network.createVertex(),
q.rd=null,q.Bm=3,q.layer=m-1,this.network.Zk(q),e=this.network.lp(e,q,b.link),e.valid=!0,e.rev=b.rev,e.portFromColOffset=0,e.portToColOffset=0,e.portFromPos=0,e.portToPos=0,e=q,m--;e=this.network.lp(q,d,b.link);e.valid=!n;n&&(q.near=d);e.rev=b.rev;e.portFromColOffset=0;e.portToColOffset=k;e.portFromPos=0;e.portToPos=l}else b.valid=!0}b=this.Vd=[];for(c=0;c<=this.ob;c++)b[c]=0;for(a=this.network.vertexes.i;a.next();)c=a.value,c.index=-1;this.initializeIndices();this.nv=-1;for(c=this.If=this.rr=0;c<=
this.ob;c++)b[c]>b[this.If]&&(this.nv=b[c]-1,this.If=c),b[c]<b[this.rr]&&(this.rr=c);this.Ar=[];for(c=0;c<b.length;c++)this.Ar[c]=[];for(a.reset();a.next();)b=a.value,c=this.Ar[b.layer],c[b.index]=b;this.Fb=-1;for(a=0;a<=this.ob;a++){b=yr(this,a);c=0;d=this.Vd[a];for(e=0;e<d;e++)f=b[e],c+=this.nodeMinColumnSpace(f,!0),f.column=c,c+=1,c+=this.nodeMinColumnSpace(f,!1);this.Fb=Math.max(this.Fb,c-1);zr(this,a,b)}this.reduceCrossings();this.straightenAndPack();this.updateParts()}this.network=null;this.xf=
!0};gn.prototype.linkMinLength=function(a){var b=a.toVertex,c=0;for(a=a.fromVertex.$b;a.next();)a.value.toVertex===b&&c++;return 1};function Ar(a){var b=a.fromVertex.rd;a=a.toVertex.rd;return null===b&&null===a?8:null===b||null===a?4:1}gn.prototype.nodeMinLayerSpace=function(a,b){return null===a.rd?0:90===this.aa||270===this.aa?b?a.O.y+10:a.M.height-a.O.y+10:b?a.O.x+10:a.M.width-a.O.x+10};
gn.prototype.nodeMinColumnSpace=function(a,b){if(null===a.rd)return 0;var c=b?a.Sz:a.Rz;if(null!==c)return c;c=this.aa;return 90===c||270===c?b?a.Sz=a.O.x/this.Kd+1|0:a.Rz=(a.M.width-a.O.x)/this.Kd+1|0:b?a.Sz=a.O.y/this.Kd+1|0:a.Rz=(a.M.height-a.O.y)/this.Kd+1|0};function Br(a){null===a.dm&&(a.dm=[]);for(var b=0,c=a.network.vertexes.i;c.next();){var d=c.value;a.dm[b]=d.layer;b++;a.dm[b]=d.column;b++;a.dm[b]=d.index;b++}return a.dm}
function Cr(a,b){for(var c=0,d=a.network.vertexes.i;d.next();){var e=d.value;e.layer=b[c];c++;e.column=b[c];c++;e.index=b[c];c++}}
function Dr(a,b,c){var d=yr(a,b),e=a.Vd[b];if(null===a.yr||a.yr.length<e*e)a.yr=[];for(var f=a.yr,h=0;h<e;h++){var k=0,l=d[h],m=l.near,n=0;if(null!==m&&m.layer===l.layer)if(n=m.index,n>h)for(var p=h+1;p<n;p++)l=d[p],l.near===m&&l.Bm===m.Bm||k++;else for(p=h-1;p>n;p--)l=d[p],l.near===m&&l.Bm===m.Bm||k++;var m=0,q,r=q=p=l=0,s,t=0,u=0;s=0;var w;if(0<=c)for(n=d[h].Pe,m=0;m<n.count;m++)if(q=n.n[m],q.valid&&q.fromVertex.layer!==b)for(l=q.fromVertex.index,p=q.portToPos,q=q.portFromPos,r=m+1;r<n.count;r++)s=
n.n[r],s.valid&&s.fromVertex.layer!==b&&(t=s.fromVertex.index,u=s.portToPos,s=s.portFromPos,p<u&&(l>t||l===t&&q>s)&&k++,u<p&&(t>l||t===l&&s>q)&&k++);if(0>=c)for(n=d[h].Ke,m=0;m<n.count;m++)if(q=n.n[m],q.valid&&q.toVertex.layer!==b)for(l=q.toVertex.index,p=q.portToPos,q=q.portFromPos,r=m+1;r<n.count;r++)s=n.n[r],s.valid&&s.toVertex.layer!==b&&(t=s.toVertex.index,u=s.portToPos,s=s.portFromPos,q<s&&(l>t||l===t&&p>u)&&k++,s<q&&(t>l||t===l&&u>p)&&k++);f[h*e+h]=k;for(n=h+1;n<e;n++){var x=0,z=0;if(0<=c)for(k=
d[h].Pe,w=d[n].Pe,m=0;m<k.count;m++)if(q=k.n[m],q.valid&&q.fromVertex.layer!==b)for(l=q.fromVertex.index,q=q.portFromPos,r=0;r<w.count;r++)s=w.n[r],s.valid&&s.fromVertex.layer!==b&&(t=s.fromVertex.index,s=s.portFromPos,(l<t||l===t&&q<s)&&z++,(t<l||t===l&&s<q)&&x++);if(0>=c)for(k=d[h].Ke,w=d[n].Ke,m=0;m<k.count;m++)if(q=k.n[m],q.valid&&q.toVertex.layer!==b)for(l=q.toVertex.index,p=q.portToPos,r=0;r<w.count;r++)s=w.n[r],s.valid&&s.toVertex.layer!==b&&(t=s.toVertex.index,u=s.portToPos,(l<t||l===t&&p<
u)&&z++,(t<l||t===l&&u<p)&&x++);f[h*e+n]=x;f[n*e+h]=z}}zr(a,b,d);return f}gn.prototype.countCrossings=function(){for(var a=0,b=0;b<=this.ob;b++)for(var c=Dr(this,b,1),d=this.Vd[b],e=0;e<d;e++)for(var f=e;f<d;f++)a+=c[e*d+f];return a};
function Er(a){for(var b=0,c=0;c<=a.ob;c++){for(var d=a,e=c,f=yr(d,e),h=d.Vd[e],k=0,l=0;l<h;l++){var m=null,m=f[l].Ke,n,p=0,q=0;if(null!==m)for(var r=0;r<m.count;r++)n=m.n[r],n.valid&&n.toVertex.layer!==e&&(p=n.fromVertex.column+n.portFromColOffset,q=n.toVertex.column+n.portToColOffset,k+=(Math.abs(p-q)+1)*Ar(n))}zr(d,e,f);b+=k}return b}
gn.prototype.normalize=function(){var a=Infinity;this.Fb=-1;for(var b=this.network.vertexes.i;b.next();){var c=b.value,a=Math.min(a,c.column-this.nodeMinColumnSpace(c,!0));this.Fb=Math.max(this.Fb,c.column+this.nodeMinColumnSpace(c,!1))}for(b.reset();b.next();)b.value.column-=a;this.Fb-=a};
function Fr(a,b,c){for(var d=yr(a,b),e=a.Vd[b],f=[],h=0;h<e;h++){var k=d[h],l=null;0>=c&&(l=k.Pe);var m=null;0<=c&&(m=k.Ke);var n=0,p=0,q=k.near;null!==q&&q.layer===k.layer&&(n+=q.column-1,p++);if(null!==l)for(q=0;q<l.count;q++){var k=l.n[q],r=k.fromVertex;k.valid&&!k.rev&&r.layer!==b&&(n+=r.column+k.portFromColOffset,p++)}if(null!==m)for(l=0;l<m.count;l++)k=m.n[l],q=k.toVertex,k.valid&&!k.rev&&q.layer!==b&&(n+=q.column+k.portToColOffset,p++);f[h]=0===p?-1:n/p}zr(a,b,d);return f}
function Gr(a,b,c){for(var d=yr(a,b),e=a.Vd[b],f=[],h=0;h<e;h++){var k=d[h],l=null;0>=c&&(l=k.Pe);var m=null;0<=c&&(m=k.Ke);var n=0,p=[],q=k.near;null!==q&&q.layer===k.layer&&(p[n]=q.column-1,n++);if(null!==l)for(q=0;q<l.count;q++){var k=l.n[q],r=k.fromVertex;k.valid&&!k.rev&&r.layer!==b&&(p[n]=r.column+k.portFromColOffset,n++)}if(null!==m)for(l=0;l<m.count;l++)k=m.n[l],q=k.toVertex,k.valid&&!k.rev&&q.layer!==b&&(p[n]=q.column+k.portToColOffset,n++);0===n?f[h]=-1:(p.sort(function(a,b){return a-b}),
m=n>>1,f[h]=n&1?p[m]:p[m-1]+p[m]>>1)}zr(a,b,d);return f}function Hr(a,b,c,d,e,f){if(b.component===d){b.component=c;var h=0,k=0;if(e)for(var l=b.$b;l.next();){var k=l.value,m=k.toVertex,h=b.layer-m.layer,k=a.linkMinLength(k);h===k&&Hr(a,m,c,d,e,f)}if(f)for(l=b.lc;l.next();)k=l.value,m=k.fromVertex,h=m.layer-b.layer,k=a.linkMinLength(k),h===k&&Hr(a,m,c,d,e,f)}}
function Ir(a,b,c,d,e,f){if(b.component===d){b.component=c;if(e)for(var h=b.$b;h.next();)Ir(a,h.value.toVertex,c,d,e,f);if(f)for(b=b.lc;b.next();)Ir(a,b.value.fromVertex,c,d,e,f)}}function sr(a){for(a=a.vertexes.i;a.next();){var b=a.value;if(b.valid)return b}return null}function tr(a){for(a=a.vertexes.i;a.next();){var b=a.value;if(b.valid){for(var c=!0,d=b.$b;d.next();)if(d.value.toVertex.valid){c=!1;break}if(c)return b}}return null}
function ur(a){for(a=a.vertexes.i;a.next();){var b=a.value;if(b.valid){for(var c=!0,d=b.lc;d.next();)if(d.value.fromVertex.valid){c=!1;break}if(c)return b}}return null}function vr(a,b){b.So=a.zr;a.zr++;for(var c=b.$b;c.next();){var d=c.value,e=d.toVertex;-1===e.So&&(d.forest=!0,vr(a,e))}b.finish=a.zr;a.zr++}
gn.prototype.assignLayers=function(){switch(this.ao){case Jr:Kr(this);break;case Lr:for(var a=0,b=this.network.vertexes.i;b.next();)a=Mr(this,b.value),this.ob=Math.max(a,this.ob);for(b.reset();b.next();)a=b.value,a.layer=this.ob-a.layer;break;default:case mr:Kr(this);for(b=this.network.vertexes.i;b.next();)b.value.valid=!1;for(b.reset();b.next();)a=b.value,0===a.lc.count&&Nr(this,a);a=Infinity;for(b.reset();b.next();)a=Math.min(a,b.value.layer);this.ob=-1;for(b.reset();b.next();){var c=b.value;c.layer-=
a;this.ob=Math.max(this.ob,c.layer)}}};function Kr(a){for(var b=a.network.vertexes.i;b.next();){var c=Or(a,b.value);a.ob=Math.max(c,a.ob)}}function Or(a,b){var c=0;if(-1===b.layer){for(var d=b.$b;d.next();)var e=d.value,f=e.toVertex,e=a.linkMinLength(e),c=Math.max(c,Or(a,f)+e);b.layer=c}else c=b.layer;return c}function Mr(a,b){var c=0;if(-1===b.layer){for(var d=b.lc;d.next();)var e=d.value,f=e.fromVertex,e=a.linkMinLength(e),c=Math.max(c,Mr(a,f)+e);b.layer=c}else c=b.layer;return c}
function Nr(a,b){if(!b.valid){b.valid=!0;for(var c=b.$b;c.next();)Nr(a,c.value.toVertex);for(c=a.network.vertexes.i;c.next();)c.value.component=-1;for(var d=b.Pe.n,e=d.length,f=0;f<e;f++){var h=d[f],k=a.linkMinLength(h);h.fromVertex.layer-h.toVertex.layer>k&&Hr(a,h.fromVertex,0,-1,!0,!1)}for(Hr(a,b,1,-1,!0,!0);0!==b.component;){for(var k=0,d=Infinity,l=0,m=null,n=a.network.vertexes.i;n.next();){var p=n.value;if(1===p.component){for(var q=0,r=!1,s=p.Pe.n,e=s.length,f=0;f<e;f++){var h=s[f],t=h.fromVertex,
q=q+1;1!==t.component&&(k+=1,t=t.layer-p.layer,h=a.linkMinLength(h),d=Math.min(d,t-h))}h=p.Ke.n;e=h.length;for(f=0;f<e;f++)s=h[f].toVertex,q-=1,1!==s.component?k-=1:r=!0;(null===m||q<l)&&!r&&(m=p,l=q)}}if(0<k){for(c.reset();c.next();)e=c.value,1===e.component&&(e.layer+=d);b.component=0}else m.component=0}for(c=a.network.vertexes.i;c.next();)c.value.component=-1;for(Hr(a,b,1,-1,!0,!1);0!==b.component;){f=0;e=Infinity;d=0;k=null;for(l=a.network.vertexes.i;l.next();)if(m=l.value,1===m.component){n=
0;p=!1;h=m.Pe.n;q=h.length;for(r=0;r<q;r++)s=h[r].fromVertex,n+=1,1!==s.component?f+=1:p=!0;h=m.Ke.n;q=h.length;for(r=0;r<q;r++)s=h[r],t=s.toVertex,n-=1,1!==t.component&&(f-=1,t=m.layer-t.layer,s=a.linkMinLength(s),e=Math.min(e,t-s));(null===k||n>d)&&!p&&(k=m,d=n)}if(0>f){for(c.reset();c.next();)f=c.value,1===f.component&&(f.layer-=e);b.component=0}else k.component=0}}}
function xr(a,b,c){return 90===a.aa?c&&!b.rev||!c&&b.rev?270:90:180===a.aa?c&&!b.rev||!c&&b.rev?0:180:270===a.aa?c&&!b.rev||!c&&b.rev?90:270:c&&!b.rev||!c&&b.rev?180:0}
gn.prototype.initializeIndices=function(){switch(this.Rn){default:case Pr:for(var a=this.network.vertexes.i;a.next();){var b=a.value,c=b.layer;b.index=this.Vd[c];this.Vd[c]++}break;case nr:a=this.network.vertexes.i;for(b=this.ob;0<=b;b--)for(a.reset();a.next();)c=a.value,c.layer===b&&-1===c.index&&Qr(this,c);break;case Rr:for(a=this.network.vertexes.i,b=0;b<=this.ob;b++)for(a.reset();a.next();)c=a.value,c.layer===b&&-1===c.index&&Sr(this,c)}};
function Qr(a,b){var c=b.layer;b.index=a.Vd[c];a.Vd[c]++;for(var c=b.Ke.dc(),d=!0;d;)for(var d=!1,e=0;e<c.length-1;e++){var f=c[e],h=c[e+1];f.portFromColOffset>h.portFromColOffset&&(d=!0,c[e]=h,c[e+1]=f)}for(e=0;e<c.length;e++)d=c[e],d.valid&&(d=d.toVertex,-1===d.index&&Qr(a,d))}
function Sr(a,b){var c=b.layer;b.index=a.Vd[c];a.Vd[c]++;for(var c=b.Pe.dc(),d=!0,e=0;d;)for(d=!1,e=0;e<c.length-1;e++){var f=c[e],h=c[e+1];f.portToColOffset>h.portToColOffset&&(d=!0,c[e]=h,c[e+1]=f)}for(e=0;e<c.length;e++)d=c[e],d.valid&&(d=d.fromVertex,-1===d.index&&Sr(a,d))}
gn.prototype.reduceCrossings=function(){for(var a=this.countCrossings(),b=Br(this),c=0,d=0,e=0,c=0;c<this.Xl;c++){for(d=0;d<=this.ob;d++)Tr(this,d,1),Ur(this,d,1);e=this.countCrossings();e<a&&(a=e,b=Br(this));for(d=this.ob;0<=d;d--)Tr(this,d,-1),Ur(this,d,-1);e=this.countCrossings();e<a&&(a=e,b=Br(this))}Cr(this,b);for(c=0;c<this.Xl;c++){for(d=0;d<=this.ob;d++)Tr(this,d,0),Ur(this,d,0);e=this.countCrossings();e<a&&(a=e,b=Br(this));for(d=this.ob;0<=d;d--)Tr(this,d,0),Ur(this,d,0);e=this.countCrossings();
e<a&&(a=e,b=Br(this))}Cr(this,b);var f=!1,h=c=0,k=0,d=0;switch(this.mn){case Vr:break;case Wr:for(k=a+1;(d=this.countCrossings())<k;)for(k=d,c=this.ob;0<=c;c--)for(h=0;h<=c;h++){for(f=!0;f;)for(f=!1,d=c;d>=h;d--)f=Ur(this,d,-1)||f;e=this.countCrossings();e>=a?Cr(this,b):(a=e,b=Br(this));for(f=!0;f;)for(f=!1,d=c;d>=h;d--)f=Ur(this,d,1)||f;e=this.countCrossings();e>=a?Cr(this,b):(a=e,b=Br(this));for(f=!0;f;)for(f=!1,d=h;d<=c;d++)f=Ur(this,d,1)||f;e>=a?Cr(this,b):(a=e,b=Br(this));for(f=!0;f;)for(f=!1,
d=h;d<=c;d++)f=Ur(this,d,-1)||f;e>=a?Cr(this,b):(a=e,b=Br(this));for(f=!0;f;)for(f=!1,d=c;d>=h;d--)f=Ur(this,d,0)||f;e>=a?Cr(this,b):(a=e,b=Br(this));for(f=!0;f;)for(f=!1,d=h;d<=c;d++)f=Ur(this,d,0)||f;e>=a?Cr(this,b):(a=e,b=Br(this))}break;default:case or:for(c=this.ob,h=0,k=a+1;(d=this.countCrossings())<k;){k=d;for(f=!0;f;)for(f=!1,d=c;d>=h;d--)f=Ur(this,d,-1)||f;e=this.countCrossings();e>=a?Cr(this,b):(a=e,b=Br(this));for(f=!0;f;)for(f=!1,d=c;d>=h;d--)f=Ur(this,d,1)||f;e=this.countCrossings();
e>=a?Cr(this,b):(a=e,b=Br(this));for(f=!0;f;)for(f=!1,d=h;d<=c;d++)f=Ur(this,d,1)||f;e>=a?Cr(this,b):(a=e,b=Br(this));for(f=!0;f;)for(f=!1,d=h;d<=c;d++)f=Ur(this,d,-1)||f;e>=a?Cr(this,b):(a=e,b=Br(this));for(f=!0;f;)for(f=!1,d=c;d>=h;d--)f=Ur(this,d,0)||f;e>=a?Cr(this,b):(a=e,b=Br(this));for(f=!0;f;)for(f=!1,d=h;d<=c;d++)f=Ur(this,d,0)||f;e>=a?Cr(this,b):(a=e,b=Br(this))}}Cr(this,b)};
function Tr(a,b,c){var d=0,e=yr(a,b),f=a.Vd[b],h=Gr(a,b,c);c=Fr(a,b,c);for(d=0;d<f;d++)-1===c[d]&&(c[d]=e[d].column),-1===h[d]&&(h[d]=e[d].column);for(var k=!0,l;k;)for(k=!1,d=0;d<f-1;d++)if(h[d+1]<h[d]||h[d+1]===h[d]&&c[d+1]<c[d])k=!0,l=h[d],h[d]=h[d+1],h[d+1]=l,l=c[d],c[d]=c[d+1],c[d+1]=l,l=e[d],e[d]=e[d+1],e[d+1]=l;for(d=h=0;d<f;d++)l=e[d],l.index=d,h+=a.nodeMinColumnSpace(l,!0),l.column=h,h+=1,h+=a.nodeMinColumnSpace(l,!1);zr(a,b,e)}
function Ur(a,b,c){var d=yr(a,b),e=a.Vd[b];c=Dr(a,b,c);var f=0,h;h=[];for(f=0;f<e;f++)h[f]=-1;var k;k=[];for(f=0;f<e;f++)k[f]=-1;for(var l=!1,m=!0;m;)for(m=!1,f=0;f<e-1;f++){var n=c[d[f].index*e+d[f+1].index],p=c[d[f+1].index*e+d[f].index],q=0,r=0,s=d[f].column,t=d[f+1].column,u=a.nodeMinColumnSpace(d[f],!0),w=a.nodeMinColumnSpace(d[f],!1),x=a.nodeMinColumnSpace(d[f+1],!0),z=a.nodeMinColumnSpace(d[f+1],!1),u=s-u+x,w=t-w+z,x=x=0,A=d[f].lc.i;for(A.reset();A.next();)if(z=A.value,z.valid&&z.fromVertex.layer===
b){z=z.fromVertex;for(x=0;d[x]!==z;)x++;x<f&&(q+=2*(f-x),r+=2*(f+1-x));x===f+1&&(q+=1);x>f+1&&(q+=4*(x-f),r+=4*(x-(f+1)))}A=d[f].$b.i;for(A.reset();A.next();)if(z=A.value,z.valid&&z.toVertex.layer===b){z=z.toVertex;for(x=0;d[x]!==z;)x++;x===f+1&&(r+=1)}A=d[f+1].lc.i;for(A.reset();A.next();)if(z=A.value,z.valid&&z.fromVertex.layer===b){z=z.fromVertex;for(x=0;d[x]!==z;)x++;x<f&&(q+=2*(f+1-x),r+=2*(f-x));x===f&&(r+=1);x>f+1&&(q+=4*(x-(f+1)),r+=4*(x-f))}A=d[f+1].$b.i;for(A.reset();A.next();)if(z=A.value,
z.valid&&z.toVertex.layer===b){z=z.toVertex;for(x=0;d[x]!==z;)x++;x===f&&(q+=1)}var x=z=0,A=h[d[f].index],H=k[d[f].index],C=h[d[f+1].index],T=k[d[f+1].index];-1!==A&&(z+=Math.abs(A-s),x+=Math.abs(A-w));-1!==H&&(z+=Math.abs(H-s),x+=Math.abs(H-w));-1!==C&&(z+=Math.abs(C-t),x+=Math.abs(C-u));-1!==T&&(z+=Math.abs(T-t),x+=Math.abs(T-u));if(r<q-.5||r===q&&p<n-.5||r===q&&p===n&&x<z-.5)m=l=!0,d[f].column=w,d[f+1].column=u,n=d[f],d[f]=d[f+1],d[f+1]=n}for(f=0;f<e;f++)d[f].index=f;zr(a,b,d);return l}
gn.prototype.straightenAndPack=function(){var a=0,b=!1,c=0!==(this.Fi&Xr),a=this.Fi===pr;1E3<this.network.edges.count&&!a&&(c=!1);if(c){b=[];for(a=a=0;a<=this.ob;a++)b[a]=0;for(var d=0,e=this.network.vertexes.i;e.next();){var f=e.value,a=f.layer,d=f.column,f=this.nodeMinColumnSpace(f,!1);b[a]=Math.max(b[a],d+f)}for(e.reset();e.next();)f=e.value,a=f.layer,d=f.column,f.column=(8*(this.Fb-b[a])>>1)+8*d;this.Fb*=8}if(0!==(this.Fi&Yr))for(b=!0;b;){b=!1;for(a=this.If+1;a<=this.ob;a++)b=Zr(this,a,1)||b;
for(a=this.If-1;0<=a;a--)b=Zr(this,a,-1)||b;b=Zr(this,this.If,0)||b}if(0!==(this.Fi&$r)){for(a=this.If+1;a<=this.ob;a++)as(this,a,1);for(a=this.If-1;0<=a;a--)as(this,a,-1);as(this,this.If,0)}c&&(bs(this,-1),bs(this,1));if(0!==(this.Fi&Yr))for(b=!0;b;){b=!1;b=Zr(this,this.If,0)||b;for(a=this.If+1;a<=this.ob;a++)b=Zr(this,a,0)||b;for(a=this.If-1;0<=a;a--)b=Zr(this,a,0)||b}};function Zr(a,b,c){for(var d=!1;cs(a,b,c);)d=!0;return d}
function cs(a,b,c){var d=0,e=yr(a,b),f=a.Vd[b],h=Fr(a,b,-1);if(0<c)for(d=0;d<f;d++)h[d]=-1;var k=Fr(a,b,1);if(0>c)for(d=0;d<f;d++)k[d]=-1;for(var l=!1,m=!0;m;)for(m=!1,d=0;d<f;d++){var n=e[d].column,p=a.nodeMinColumnSpace(e[d],!0),q=a.nodeMinColumnSpace(e[d],!1),r=0,r=0>d-1||n-e[d-1].column-1>p+a.nodeMinColumnSpace(e[d-1],!1)?n-1:n,p=0,p=d+1>=f||e[d+1].column-n-1>q+a.nodeMinColumnSpace(e[d+1],!0)?n+1:n,s=q=0,t=0,u=0,w=0,x=0;if(0>=c)for(var z=e[d].lc.i;z.next();){var A=z.value;A.valid&&A.fromVertex.layer!==
b&&(u=Ar(A),w=A.portFromColOffset,x=A.portToColOffset,A=A.fromVertex.column,q+=(Math.abs(n+x-(A+w))+1)*u,s+=(Math.abs(r+x-(A+w))+1)*u,t+=(Math.abs(p+x-(A+w))+1)*u)}if(0<=c)for(z=e[d].$b.i;z.next();)A=z.value,A.valid&&A.toVertex.layer!==b&&(u=Ar(A),w=A.portFromColOffset,x=A.portToColOffset,A=A.toVertex.column,q+=(Math.abs(n+w-(A+x))+1)*u,s+=(Math.abs(r+w-(A+x))+1)*u,t+=(Math.abs(p+w-(A+x))+1)*u);x=w=u=0;z=h[e[d].index];A=k[e[d].index];-1!==z&&(u+=Math.abs(z-n),w+=Math.abs(z-r),x+=Math.abs(z-p));-1!==
A&&(u+=Math.abs(A-n),w+=Math.abs(A-r),x+=Math.abs(A-p));if(s<q||s===q&&w<u)m=l=!0,e[d].column=r;if(t<q||t===q&&x<u)m=l=!0,e[d].column=p}zr(a,b,e);a.normalize();return l}
function as(a,b,c){var d=0,e=yr(a,b),f=a.Vd[b],h=Gr(a,b,c);c=[];for(d=0;d<f;d++)c[d]=h[d];for(h=!0;h;)for(h=!1,d=0;d<f;d++){var k=e[d].column,l=a.nodeMinColumnSpace(e[d],!0),m=a.nodeMinColumnSpace(e[d],!1),n=0,p=0,q=0,q=p=0;-1===c[d]?0===d&&d===f-1?n=k:0===d?(p=e[d+1].column,n=p-k===m+a.nodeMinColumnSpace(e[d+1],!0)?k-1:k):d===f-1?(q=e[d-1].column,n=k-q===l+a.nodeMinColumnSpace(e[d-1],!1)?k+1:k):(q=e[d-1].column,q=q+a.nodeMinColumnSpace(e[d-1],!1)+l+1,p=e[d+1].column,p=p-a.nodeMinColumnSpace(e[d+
1],!0)-m-1,n=(q+p)/2|0):0===d&&d===f-1?n=c[d]:0===d?(p=e[d+1].column,p=p-a.nodeMinColumnSpace(e[d+1],!0)-m-1,n=Math.min(c[d],p)):d===f-1?(q=e[d-1].column,q=q+a.nodeMinColumnSpace(e[d-1],!1)+l+1,n=Math.max(c[d],q)):(q=e[d-1].column,q=q+a.nodeMinColumnSpace(e[d-1],!1)+l+1,p=e[d+1].column,p=p-a.nodeMinColumnSpace(e[d+1],!0)-m-1,q<c[d]&&c[d]<p?n=c[d]:q>=c[d]?n=q:p<=c[d]&&(n=p));n!==k&&(h=!0,e[d].column=n)}zr(a,b,e);a.normalize()}
function ds(a,b){for(var c=!0,d=a.network.vertexes.i;d.next();){var e=d.value,f=a.nodeMinColumnSpace(e,!0),h=a.nodeMinColumnSpace(e,!1);if(e.column-f<=b&&e.column+h>=b){c=!1;break}}e=!1;if(c)for(d.reset();d.next();)c=d.value,c.column>b&&(c.column-=1,e=!0);return e}
function es(a,b){for(var c=b,c=b+1,d=0,e=[],f=[],d=0;d<=a.ob;d++)e[d]=!1,f[d]=!1;for(var h=a.network.vertexes.i;h.next();){var d=h.value,k=d.column-a.nodeMinColumnSpace(d,!0),l=d.column+a.nodeMinColumnSpace(d,!1);k<=b&&l>=b&&(e[d.layer]=!0);k<=c&&l>=c&&(f[d.layer]=!0)}k=!0;c=!1;for(d=0;d<=a.ob;d++)k=k&&!(e[d]&&f[d]);if(k)for(h.reset();h.next();)e=h.value,e.column>b&&(e.column-=1,c=!0);return c}
function bs(a,b){for(var c=0;c<=a.Fb;c++)for(;ds(a,c););a.normalize();for(c=0;c<a.Fb;c++)for(;es(a,c););a.normalize();var c=0,d,e=0,f=0,h=0;if(0<b)for(c=0;c<=a.Fb;c++)for(d=Br(a),e=Er(a),f=e+1;e<f;)f=e,fs(a,c,1),h=Er(a),h>e?Cr(a,d):h<e&&(e=h,d=Br(a));if(0>b)for(c=a.Fb;0<=c;c--)for(d=Br(a),e=Er(a),f=e+1;e<f;)f=e,fs(a,c,-1),h=Er(a),h>e?Cr(a,d):h<e&&(e=h,d=Br(a));a.normalize()}
function fs(a,b,c){a.ng=0;for(var d=a.network.vertexes.i;d.next();)d.value.component=-1;if(0<c)for(d.reset();d.next();){var e=d.value;e.column-a.nodeMinColumnSpace(e,!0)<=b&&(e.component=a.ng)}if(0>c)for(d.reset();d.next();)e=d.value,e.column+a.nodeMinColumnSpace(e,!1)>=b&&(e.component=a.ng);a.ng++;for(d.reset();d.next();)b=d.value,-1===b.component&&(Ir(a,b,a.ng,-1,!0,!0),a.ng++);var f=0;b=[];for(f=0;f<a.ng*a.ng;f++)b[f]=!1;e=[];for(f=0;f<(a.ob+1)*(a.Fb+1);f++)e[f]=-1;for(d.reset();d.next();)for(var f=
d.value,h=f.layer,k=Math.max(0,f.column-a.nodeMinColumnSpace(f,!0)),l=Math.min(a.Fb,f.column+a.nodeMinColumnSpace(f,!1));k<=l;k++)e[h*(a.Fb+1)+k]=f.component;for(f=0;f<=a.ob;f++){if(0<c)for(k=0;k<a.Fb;k++)-1!==e[f*(a.Fb+1)+k]&&-1!==e[f*(a.Fb+1)+k+1]&&e[f*(a.Fb+1)+k]!==e[f*(a.Fb+1)+k+1]&&(b[e[f*(a.Fb+1)+k]*a.ng+e[f*(a.Fb+1)+k+1]]=!0);if(0>c)for(k=a.Fb;0<k;k--)-1!==e[f*(a.Fb+1)+k]&&-1!==e[f*(a.Fb+1)+k-1]&&e[f*(a.Fb+1)+k]!==e[f*(a.Fb+1)+k-1]&&(b[e[f*(a.Fb+1)+k]*a.ng+e[f*(a.Fb+1)+k-1]]=!0)}e=[];for(f=
0;f<a.ng;f++)e[f]=!0;h=new I("number");h.add(0);for(l=0;0!==h.count;)if(l=h.n[h.count-1],h.Vc(h.count-1),e[l])for(e[l]=!1,f=0;f<a.ng;f++)b[l*a.ng+f]&&h.Cd(0,f);if(0<c)for(d.reset();d.next();)a=d.value,e[a.component]&&(a.column-=1);if(0>c)for(d.reset();d.next();)c=d.value,e[c.component]&&(c.column+=1)}
gn.prototype.commitLayout=function(){if(this.Fp)for(var a=wr(this,!0),b=wr(this,!1),c=this.network.edges.i;c.next();){var d=c.value.link;null!==d&&(d.xb=a,d.yb=b)}this.commitNodes();this.bz();this.wt&&this.commitLinks()};function wr(a,b){return 270===a.aa?b?pc:sc:90===a.aa?b?sc:pc:180===a.aa?b?qc:rc:b?rc:qc}
gn.prototype.commitNodes=function(){this.jg=[];this.Gf=[];this.Ff=[];this.Lb=[];for(var a=0;a<=this.ob;a++)this.jg[a]=0,this.Gf[a]=0,this.Ff[a]=0,this.Lb[a]=0;for(a=this.network.vertexes.i;a.next();){var b=a.value,c=b.layer;this.jg[c]=Math.max(this.jg[c],this.nodeMinLayerSpace(b,!0));this.Gf[c]=Math.max(this.Gf[c],this.nodeMinLayerSpace(b,!1))}for(var b=0,d=this.$l,c=0;c<=this.ob;c++){var e=d;0>=this.jg[c]+this.Gf[c]&&(e=0);0<c&&(b+=e/2);90===this.aa||0===this.aa?(b+=this.Gf[c],this.Ff[c]=b,b+=this.jg[c]):
(b+=this.jg[c],this.Ff[c]=b,b+=this.Gf[c]);c<this.ob&&(b+=e/2);this.Lb[c]=b}d=b;b=this.Zd.copy();null!==this.group&&(270===this.direction||90===this.direction?b.y-=10:b.x-=10,270===this.direction||90===this.direction?b.x-=this.nD/2:b.y-=this.nD/2);for(c=0;c<=this.ob;c++)270===this.aa?this.Ff[c]=b.y+this.Ff[c]:90===this.aa?(this.Ff[c]=b.y+d-this.Ff[c],this.Lb[c]=d-this.Lb[c]):180===this.aa?this.Ff[c]=b.x+this.Ff[c]:(this.Ff[c]=b.x+d-this.Ff[c],this.Lb[c]=d-this.Lb[c]);for(a.reset();a.next();){var c=
a.value,d=c.layer,e=c.column|0,f=0,h=0;270===this.aa||90===this.aa?(f=b.x+this.Kd*e,h=this.Ff[d]):(f=this.Ff[d],h=b.y+this.Kd*e);c.na=f;c.ua=h;c.commit()}};
gn.prototype.bz=function(){for(var a=0,b=this.$l,c=0;c<=this.ob;c++)a+=this.jg[c],a+=this.Gf[c];for(var a=a+this.ob*b,b=[],c=this.Kd*this.Fb,d=this.IH;0<=d;d--)270===this.aa?0===d?b.push(new B(0,0,c,Math.abs(this.Lb[0]))):b.push(new B(0,this.Lb[d-1],c,Math.abs(this.Lb[d-1]-this.Lb[d]))):90===this.aa?0===d?b.push(new B(0,this.Lb[0],c,Math.abs(this.Lb[0]-a))):b.push(new B(0,this.Lb[d],c,Math.abs(this.Lb[d-1]-this.Lb[d]))):180===this.aa?0===d?b.push(new B(0,0,Math.abs(this.Lb[0]),c)):b.push(new B(this.Lb[d-
1],0,Math.abs(this.Lb[d-1]-this.Lb[d]),c)):0===d?b.push(new B(this.Lb[0],0,Math.abs(this.Lb[0]-a),c)):b.push(new B(this.Lb[d],0,Math.abs(this.Lb[d-1]-this.Lb[d]),c));this.commitLayers(b,Xc)};gn.prototype.commitLayers=function(){};
gn.prototype.commitLinks=function(){for(var a=this.network.edges.i,b;a.next();)b=a.value.link,null!==b&&(b.Cl(),b.Oo(),b.Pi());for(a.reset();a.next();)b=a.value.link,null!==b&&b.gn();for(a.reset();a.next();){var c=a.value;b=c.link;if(null!==b){b.Cl();var d=b,e=d.T,f=d.Z,h=d.bd,k=d.Hd;if(c.valid){if(b.Je===Hi&&4===b.oa){if(c.rev)var l=e,e=f,f=l,m=h,h=k,k=m;if(c.fromVertex.column===c.toVertex.column){var n=b.getLinkPoint(e,h,b.computeSpot(!0),!0,!1,f,k),p=b.getLinkPoint(f,k,b.computeSpot(!1),!1,!1,
e,h);n.G()||n.set(e.V.bl);p.G()||p.set(f.V.bl);b.Oo();b.Yk(n.x,n.y);b.Yk((2*n.x+p.x)/3,(2*n.y+p.y)/3);b.Yk((n.x+2*p.x)/3,(n.y+2*p.y)/3);b.Yk(p.x,p.y)}else{var q=!1,r=!1;null!==h&&b.computeSpot(!0)===sb&&(q=!0);null!==k&&b.computeSpot(!1)===sb&&(r=!0);if(q||r){var s=b.l(0).x,t=b.l(0).y,u=b.l(1).x,w=b.l(1).y,x=b.l(2).x,z=b.l(2).y,A=b.l(3).x,H=b.l(3).y;if(q){90===this.aa||270===this.aa?(u=s,w=(t+H)/2):(u=(s+A)/2,w=t);b.W(1,u,w);var C=b.getLinkPoint(e,h,b.computeSpot(!0),!0,!1,f,k);C.G()||C.set(e.V.bl);
b.W(0,C.x,C.y)}r&&(90===this.aa||270===this.aa?(x=A,z=(t+H)/2):(x=(s+A)/2,z=H),b.W(2,x,z),C=b.getLinkPoint(f,k,b.computeSpot(!1),!1,!1,e,h),C.G()||C.set(f.V.bl),b.W(3,C.x,C.y))}}}b.Pi()}else if(c.fromVertex.layer===c.toVertex.layer)b.Pi();else{var T=!1,ba=!1,U=0,M=b.gt+1;if(b.jc)ba=!0,U=b.oa,4<U&&b.points.removeRange(2,U-3);else if(b.Je===Hi)T=!0,U=b.oa,4<U&&b.points.removeRange(2,U-3),M=2;else{var U=b.oa,aa=b.computeSpot(!0)===sb,Ia=b.computeSpot(!1)===sb;2<U&&aa&&Ia?b.points.removeRange(1,U-2):
3<U&&aa&&!Ia?b.points.removeRange(1,U-3):3<U&&!aa&&Ia?b.points.removeRange(2,U-2):4<U&&!aa&&!Ia&&b.points.removeRange(2,U-3)}var oa=c.fromVertex,Ga=c.toVertex,pa,Ca;if(c.rev){for(var ua=0;null!==Ga&&oa!==Ga;){Ca=pa=null;for(var fc=Ga.lc.i;fc.next();){var od=fc.value;if(od.link===c.link&&(pa=od.fromVertex,Ca=od.toVertex,null===pa.rd))break}if(pa!==oa)if(ob=b.l(M-1).x,gb=b.l(M-1).y,ka=pa.na,la=pa.ua,ba)180===this.aa||0===this.aa?2===M?(b.w(M++,ob,gb),b.w(M++,ob,la)):(se=null!==Ca?Ca.ua:gb,se!==la&&
(pb=this.Lb[pa.layer-1],b.w(M++,pb,gb),b.w(M++,pb,la))):2===M?(b.w(M++,ob,gb),b.w(M++,ka,gb)):(rd=null!==Ca?Ca.na:ob,rd!==ka&&(pb=this.Lb[pa.layer-1],b.w(M++,ob,pb),b.w(M++,ka,pb)));else if(2===M)if(Ua=Math.max(10,this.jg[Ga.layer]),Ra=Math.max(10,this.Gf[Ga.layer]),T)180===this.aa?ka<=Ga.M.x?(ua=Ga.M.x,b.w(M++,ua-Ua,la),b.w(M++,ua,la),b.w(M++,ua+Ra,la)):(b.w(M++,ka-Ua,la),b.w(M++,ka,la),b.w(M++,ka+Ra,la)):90===this.aa?la>=Ga.M.bottom?(ua=Ga.M.y+Ga.M.height,b.w(M++,ka,ua+Ra),b.w(M++,ka,ua),b.w(M++,
ka,ua-Ua)):(b.w(M++,ka,la+Ra),b.w(M++,ka,la),b.w(M++,ka,la-Ua)):270===this.aa?la<=Ga.M.y?(ua=Ga.M.y,b.w(M++,ka,ua-Ua),b.w(M++,ka,ua),b.w(M++,ka,ua+Ra)):(b.w(M++,ka,la-Ua),b.w(M++,ka,la),b.w(M++,ka,la+Ra)):0===this.aa&&(ka>=Ga.M.right?(ua=Ga.M.x+Ga.M.width,b.w(M++,ua+Ra,la),b.w(M++,ua,la),b.w(M++,ua-Ua,la)):(b.w(M++,ka+Ra,la),b.w(M++,ka,la),b.w(M++,ka-Ua,la)));else{b.w(M++,ob,gb);var pd=0;if(180===this.aa||0===this.aa){if(180===this.aa?ka>=Ga.M.right:ka<=Ga.M.x)pd=(0===this.aa?-Ua:Ra)/2;b.w(M++,ob+
pd,la)}else{if(270===this.aa?la>=Ga.M.bottom:la<=Ga.M.y)pd=(90===this.aa?-Ua:Ra)/2;b.w(M++,ka,gb+pd)}b.w(M++,ka,la)}else Ua=Math.max(10,this.jg[pa.layer]),Ra=Math.max(10,this.Gf[pa.layer]),180===this.aa?(T&&b.w(M++,ka-Ua,la),b.w(M++,ka,la),T&&b.w(M++,ka+Ra,la)):90===this.aa?(T&&b.w(M++,ka,la+Ra),b.w(M++,ka,la),T&&b.w(M++,ka,la-Ua)):270===this.aa?(T&&b.w(M++,ka,la-Ua),b.w(M++,ka,la),T&&b.w(M++,ka,la+Ra)):(T&&b.w(M++,ka+Ra,la),b.w(M++,ka,la),T&&b.w(M++,ka-Ua,la));Ga=pa}if(null===k||b.computeSpot(!1)!==
sb||ba)if(ob=b.l(M-1).x,gb=b.l(M-1).y,ka=b.l(M).x,la=b.l(M).y,ba){var Je=this.Gf[oa.layer],Wb=0;180===this.aa||0===this.aa?(Wb=gb,Wb>=oa.M.y&&Wb<=oa.M.bottom&&(180===this.aa?ka>=oa.M.x:ka<=oa.M.right)&&(ua=oa.na+(180===this.aa?-Je:Je),Wb=Wb<oa.M.y+oa.M.height/2?oa.M.y-this.Kd/2:oa.M.bottom+this.Kd/2,b.w(M++,ua,gb),b.w(M++,ua,Wb)),b.w(M++,ka,Wb)):(Wb=ob,Wb>=oa.M.x&&Wb<=oa.M.right&&(270===this.aa?la>=oa.M.y:la<=oa.M.bottom)&&(ua=oa.ua+(270===this.aa?-Je:Je),Wb=Wb<oa.M.x+oa.M.width/2?oa.M.x-this.Kd/
2:oa.M.right+this.Kd/2,b.w(M++,ob,ua),b.w(M++,Wb,ua)),b.w(M++,Wb,la));b.w(M++,ka,la)}else if(T)Ua=Math.max(10,this.jg[oa.layer]),Ra=Math.max(10,this.Gf[oa.layer]),180===this.aa&&ka>=oa.M.x?(ua=oa.M.x+oa.M.width,b.W(M-2,ua,gb),b.W(M-1,ua+Ra,gb)):90===this.aa&&la<=oa.M.bottom?(ua=oa.M.y,b.W(M-2,ob,ua),b.W(M-1,ob,ua-Ua)):270===this.aa&&la>=oa.M.y?(ua=oa.M.y+oa.M.height,b.W(M-2,ob,ua),b.W(M-1,ob,ua+Ra)):0===this.aa&&ka<=oa.M.right&&(ua=oa.M.x,b.W(M-2,ua,gb),b.W(M-1,ua-Ua,gb));else{Ua=Math.max(10,this.jg[oa.layer]);
Ra=Math.max(10,this.Gf[oa.layer]);pd=0;if(180===this.aa||0===this.aa){if(180===this.aa?ka<=oa.M.x:ka>=oa.M.right)pd=(0===this.aa?Ra:-Ua)/2;b.w(M++,ka+pd,gb)}else{if(270===this.aa?la<=oa.M.y:la>=oa.M.bottom)pd=(90===this.aa?Ra:-Ua)/2;b.w(M++,ob,la+pd)}b.w(M++,ka,la)}}else{for(;null!==oa&&oa!==Ga;){Ca=pa=null;for(var Gg=oa.$b.i;Gg.next();){var qd=Gg.value;if(qd.link===c.link&&(pa=qd.toVertex,Ca=qd.fromVertex,null!==Ca.rd&&(Ca=null),null===pa.rd))break}var ob=0,gb=0,ka=0,la=0,pb=0,Ua=0,Ra=0;if(pa!==
Ga)if(ob=b.l(M-1).x,gb=b.l(M-1).y,ka=pa.na,la=pa.ua,ba)if(180===this.aa||0===this.aa){var se=null!==Ca?Ca.ua:gb;se!==la&&(pb=this.Lb[pa.layer],2===M&&(pb=0===this.aa?Math.max(pb,ob):Math.min(pb,ob)),b.w(M++,pb,gb),b.w(M++,pb,la))}else{var rd=null!==Ca?Ca.na:ob;rd!==ka&&(pb=this.Lb[pa.layer],2===M&&(pb=90===this.aa?Math.max(pb,gb):Math.min(pb,gb)),b.w(M++,ob,pb),b.w(M++,ka,pb))}else Ua=Math.max(10,this.jg[pa.layer]),Ra=Math.max(10,this.Gf[pa.layer]),180===this.aa?(b.w(M++,ka+Ra,la),T&&b.w(M++,ka,la),
b.w(M++,ka-Ua,la)):90===this.aa?(b.w(M++,ka,la-Ua),T&&b.w(M++,ka,la),b.w(M++,ka,la+Ra)):270===this.aa?(b.w(M++,ka,la+Ra),T&&b.w(M++,ka,la),b.w(M++,ka,la-Ua)):(b.w(M++,ka-Ua,la),T&&b.w(M++,ka,la),b.w(M++,ka+Ra,la));oa=pa}ba&&(ob=b.l(M-1).x,gb=b.l(M-1).y,ka=b.l(M).x,la=b.l(M).y,180===this.aa||0===this.aa?gb!==la&&(pb=0===this.aa?Math.min(Math.max((ka+ob)/2,this.Lb[Ga.layer]),ka):Math.max(Math.min((ka+ob)/2,this.Lb[Ga.layer]),ka),b.w(M++,pb,gb),b.w(M++,pb,la)):ob!==ka&&(pb=90===this.aa?Math.min(Math.max((la+
gb)/2,this.Lb[Ga.layer]),la):Math.max(Math.min((la+gb)/2,this.Lb[Ga.layer]),la),b.w(M++,ob,pb),b.w(M++,ka,pb)))}if(null!==d&&T){if(null!==h){if(b.computeSpot(!0)===sb){var ae=b.l(0),Kd=b.l(2);ae.K(Kd)||b.W(1,(ae.x+Kd.x)/2,(ae.y+Kd.y)/2)}C=b.getLinkPoint(e,h,sb,!0,!1,f,k);C.G()||C.set(e.V.bl);b.W(0,C.x,C.y)}null!==k&&(b.computeSpot(!1)===sb&&(ae=b.l(b.oa-1),Kd=b.l(b.oa-3),ae.K(Kd)||b.W(b.oa-2,(ae.x+Kd.x)/2,(ae.y+Kd.y)/2)),C=b.getLinkPoint(f,k,sb,!1,!1,e,h),C.G()||C.set(f.V.bl),b.W(b.oa-1,C.x,C.y))}b.Pi();
c.commit()}}}for(var be=new I(W),Hg=this.network.edges.i;Hg.next();){var $c=Hg.value.link;null!==$c&&$c.jc&&!be.contains($c)&&be.add($c)}if(0<be.count)if(90===this.aa||270===this.aa){for(var gi=0,xb=new I(gs),Xb,Ld,jh=be.i;jh.next();){var Lb=jh.value;if(null!==Lb&&Lb.jc)for(var ib=2;ib<Lb.oa-3;ib++)if(Xb=Lb.l(ib),Ld=Lb.l(ib+1),hs(Xb.y,Ld.y)&&!hs(Xb.x,Ld.x)){var bb=new gs;bb.layer=Math.floor(Xb.y/2);var Ke=Lb.l(0),Md=Lb.l(Lb.oa-1);bb.first=Ke.x*Ke.x+Ke.y;bb.Td=Md.x*Md.x+Md.y;bb.He=Math.min(Xb.x,Ld.x);
bb.$d=Math.max(Xb.x,Ld.x);bb.index=ib;bb.link=Lb;if(ib+2<Lb.oa){var Ig=Lb.l(ib-1),Jg=Lb.l(ib+2),gc=0;Ig.y<Xb.y?gc=Jg.y<Xb.y?3:Xb.x<Ld.x?2:1:Ig.y>Xb.y&&(gc=Jg.y>Xb.y?0:Ld.x<Xb.x?2:1);bb.bi=gc}xb.add(bb)}}if(1<xb.count){xb.sort(this.OE);for(var hc=0;hc<xb.count;){for(var ce=xb.n[hc].layer,ad=hc+1;ad<xb.count&&xb.n[ad].layer===ce;)ad++;if(1<ad-hc)for(var kb=hc;kb<ad;){for(var Nc=xb.n[kb].$d,Ka=hc+1;Ka<ad&&xb.n[Ka].He<Nc;)Nc=Math.max(Nc,xb.n[Ka].$d),Ka++;var lb=Ka-kb;if(1<lb){xb.Ip(this.hx,kb,kb+lb);
for(var tc=1,sd=xb.n[kb].Td,ib=kb;ib<Ka;ib++){var Ib=xb.n[ib];Ib.Td!==sd&&(tc++,sd=Ib.Td)}xb.Ip(this.NE,kb,kb+lb);for(var de=1,sd=xb.n[kb].first,ib=kb;ib<Ka;ib++)Ib=xb.n[ib],Ib.first!==sd&&(de++,sd=Ib.first);var qf=!0,Le=de;tc<de?(qf=!1,Le=tc,sd=xb.n[kb].Td,xb.Ip(this.hx,kb,kb+lb)):sd=xb.n[kb].first;for(var Jf=0,ib=kb;ib<Ka;ib++){Ib=xb.n[ib];(qf?Ib.first:Ib.Td)!==sd&&(Jf++,sd=qf?Ib.first:Ib.Td);Lb=Ib.link;Xb=Lb.l(Ib.index);Ld=Lb.l(Ib.index+1);var Jb=this.mE*(Jf-(Le-1)/2);gi++;Lb.Cl();Lb.W(Ib.index,
Xb.x,Xb.y+Jb);Lb.W(Ib.index+1,Ld.x,Ld.y+Jb);Lb.Pi()}}kb=Ka}hc=ad}}}else{for(var te=0,Mb=new I(gs),ic,Rb,Ec=be.i;Ec.next();){var mb=Ec.value;if(null!==mb&&mb.jc)for(var Cb=2;Cb<mb.oa-3;Cb++)if(ic=mb.l(Cb),Rb=mb.l(Cb+1),hs(ic.x,Rb.x)&&!hs(ic.y,Rb.y)){var Kb=new gs;Kb.layer=Math.floor(ic.x/2);var Nd=mb.l(0),Kg=mb.l(mb.oa-1);Kb.first=Nd.x+Nd.y*Nd.y;Kb.Td=Kg.x+Kg.y*Kg.y;Kb.He=Math.min(ic.y,Rb.y);Kb.$d=Math.max(ic.y,Rb.y);Kb.index=Cb;Kb.link=mb;if(Cb+2<mb.oa){var kh=mb.l(Cb-1),lh=mb.l(Cb+2),ue=0;kh.x<ic.x?
ue=lh.x<ic.x?3:ic.y<Rb.y?2:1:kh.x>ic.x&&(ue=lh.x>ic.x?0:Rb.y<ic.y?2:1);Kb.bi=ue}Mb.add(Kb)}}if(1<Mb.count){Mb.sort(this.OE);for(var bd=0;bd<Mb.count;){for(var rf=Mb.n[bd].layer,jc=bd+1;jc<Mb.count&&Mb.n[jc].layer===rf;)jc++;if(1<jc-bd)for(var yb=bd;yb<jc;){for(var zb=Mb.n[yb].$d,Fc=bd+1;Fc<jc&&Mb.n[Fc].He<zb;)zb=Math.max(zb,Mb.n[Fc].$d),Fc++;var Lg=Fc-yb;if(1<Lg){Mb.Ip(this.hx,yb,yb+Lg);for(var Oc=1,Pc=Mb.n[yb].Td,Cb=yb;Cb<Fc;Cb++){var jb=Mb.n[Cb];jb.Td!==Pc&&(Oc++,Pc=jb.Td)}Mb.Ip(this.NE,yb,yb+Lg);
for(var Qc=1,Pc=Mb.n[yb].first,Cb=yb;Cb<Fc;Cb++)jb=Mb.n[Cb],jb.first!==Pc&&(Qc++,Pc=jb.first);var Od=!0,ee=Qc;Oc<Qc?(Od=!1,ee=Oc,Pc=Mb.n[yb].Td,Mb.Ip(this.hx,yb,yb+Lg)):Pc=Mb.n[yb].first;for(var sf=0,Cb=yb;Cb<Fc;Cb++){jb=Mb.n[Cb];(Od?jb.first:jb.Td)!==Pc&&(sf++,Pc=Od?jb.first:jb.Td);mb=jb.link;ic=mb.l(jb.index);Rb=mb.l(jb.index+1);var hi=this.mE*(sf-(ee-1)/2);te++;mb.Cl();mb.W(jb.index,ic.x+hi,ic.y);mb.W(jb.index+1,Rb.x+hi,Rb.y);mb.Pi()}}yb=Fc}bd=jc}}}};
gn.prototype.OE=function(a,b){return a instanceof gs&&b instanceof gs&&a!==b?a.layer<b.layer?-1:a.layer>b.layer?1:a.He<b.He?-1:a.He>b.He?1:a.$d<b.$d?-1:a.$d>b.$d?1:0:0};gn.prototype.NE=function(a,b){return a instanceof gs&&b instanceof gs&&a!==b?a.first<b.first?-1:a.first>b.first||a.bi<b.bi?1:a.bi>b.bi||a.He<b.He?-1:a.He>b.He?1:a.$d<b.$d?-1:a.$d>b.$d?1:0:0};
gn.prototype.hx=function(a,b){return a instanceof gs&&b instanceof gs&&a!==b?a.Td<b.Td?-1:a.Td>b.Td||a.bi<b.bi?1:a.bi>b.bi||a.He<b.He?-1:a.He>b.He?1:a.$d<b.$d?-1:a.$d>b.$d?1:0:0};function hs(a,b){var c=a-b;return-1<c&&1>c}function yr(a,b){var c,d=a.Vd[b];if(d>=a.Tg.length){c=[];for(var e=0;e<a.Tg.length;e++)c[e]=a.Tg[e];a.Tg=c}void 0===a.Tg[d]||null===a.Tg[d]?c=[]:(c=a.Tg[d],a.Tg[d]=null);d=a.Ar[b];for(e=0;e<d.length;e++){var f=d[e];c[f.index]=f}return c}function zr(a,b,c){a.Tg[a.Vd[b]]=c}
v.defineProperty(gn,{layerSpacing:"layerSpacing"},function(){return this.$l},function(a){this.$l!==a&&(v.j(a,"number",gn,"layerSpacing"),0<=a&&(this.$l=a,this.H()))});v.defineProperty(gn,{nD:"columnSpacing"},function(){return this.Kd},function(a){this.Kd!==a&&(v.j(a,"number",gn,"columnSpacing"),0<a&&(this.Kd=a,this.H()))});
v.defineProperty(gn,{direction:"direction"},function(){return this.aa},function(a){this.aa!==a&&(v.j(a,"number",gn,"direction"),0===a||90===a||180===a||270===a?(this.aa=a,this.H()):v.k("LayeredDigraphLayout.direction must be 0, 90, 180, or 270"))});v.defineProperty(gn,{angle:"angle"},function(){return this.direction},function(a){this.direction=a});
v.defineProperty(gn,{yG:"cycleRemoveOption"},function(){return this.zn},function(a){this.zn!==a&&(v.pb(a,gn,gn,"cycleRemoveOption"),a===rr||a===lr)&&(this.zn=a,this.H())});v.defineProperty(gn,{zH:"layeringOption"},function(){return this.ao},function(a){this.ao!==a&&(v.pb(a,gn,gn,"layeringOption"),a===mr||a===Jr||a===Lr)&&(this.ao=a,this.H())});
v.defineProperty(gn,{jH:"initializeOption"},function(){return this.Rn},function(a){this.Rn!==a&&(v.pb(a,gn,gn,"initializeOption"),a===nr||a===Rr||a===Pr)&&(this.Rn=a,this.H())});v.defineProperty(gn,{XJ:"iterations"},function(){return this.Xl},function(a){this.Xl!==a&&(v.Ve(a,qr,"iterations"),0<=a&&(this.Xl=a,this.H()))});v.defineProperty(gn,{cG:"aggressiveOption"},function(){return this.mn},function(a){this.mn!==a&&(v.pb(a,gn,gn,"aggressiveOption"),a===Vr||a===or||a===Wr)&&(this.mn=a,this.H())});
v.defineProperty(gn,{tK:"packOption"},function(){return this.Fi},function(a){this.Fi!==a&&(v.j(a,"number",gn,"packOption"),0<=a&&8>a&&(this.Fi=a,this.H()))});v.defineProperty(gn,{Fp:"setsPortSpots"},function(){return this.Mh},function(a){this.Mh!==a&&(v.j(a,"boolean",gn,"setsPortSpots"),this.Mh=a,this.H())});v.defineProperty(gn,{mE:"linkSpacing"},function(){return this.hr},function(a){this.hr!==a&&(v.j(a,"number",gn,"linkSpacing"),0<=a&&(this.hr=a,this.H()))});v.u(gn,{IH:"maxLayer"},function(){return this.ob});
v.u(gn,{cK:"maxIndex"},function(){return this.nv});v.u(gn,{bK:"maxColumn"},function(){return this.Fb});v.u(gn,{hK:"minIndexLayer"},function(){return this.rr});v.u(gn,{dK:"maxIndexLayer"},function(){return this.If});var lr;gn.CycleDepthFirst=lr=v.p(gn,"CycleDepthFirst",0);var rr;gn.CycleGreedy=rr=v.p(gn,"CycleGreedy",1);var mr;gn.LayerOptimalLinkLength=mr=v.p(gn,"LayerOptimalLinkLength",0);var Jr;gn.LayerLongestPathSink=Jr=v.p(gn,"LayerLongestPathSink",1);var Lr;
gn.LayerLongestPathSource=Lr=v.p(gn,"LayerLongestPathSource",2);var nr;gn.InitDepthFirstOut=nr=v.p(gn,"InitDepthFirstOut",0);var Rr;gn.InitDepthFirstIn=Rr=v.p(gn,"InitDepthFirstIn",1);var Pr;gn.InitNaive=Pr=v.p(gn,"InitNaive",2);var Vr;gn.AggressiveNone=Vr=v.p(gn,"AggressiveNone",0);var or;gn.AggressiveLess=or=v.p(gn,"AggressiveLess",1);var Wr;gn.AggressiveMore=Wr=v.p(gn,"AggressiveMore",2);gn.PackNone=0;var Xr;gn.PackExpand=Xr=1;var Yr;gn.PackStraighten=Yr=2;var $r;gn.PackMedian=$r=4;var pr;
gn.PackAll=pr=7;function gs(){this.index=this.$d=this.He=this.Td=this.first=this.layer=0;this.link=null;this.bi=0}v.Pd(gs,{layer:!0,first:!0,Td:!0,He:!0,$d:!0,index:!0,link:!0,bi:!0});function qr(){Zf.call(this)}v.Ia(qr,Zf);v.ea("LayeredDigraphNetwork",qr);qr.prototype.createVertex=function(){return new is};qr.prototype.createEdge=function(){return new js};
function is(){nq.call(this);this.index=this.column=this.layer=-1;this.component=NaN;this.near=null;this.valid=!1;this.finish=this.So=NaN;this.Bm=0;this.Rz=this.Sz=null}v.Ia(is,nq);v.ea("LayeredDigraphVertex",is);function js(){oq.call(this);this.forest=this.rev=this.valid=!1;this.portToPos=this.portFromPos=NaN;this.portToColOffset=this.portFromColOffset=0}v.Ia(js,oq);v.ea("LayeredDigraphEdge",js);
function Z(){0<arguments.length&&v.dd(Z);Yf.call(this);this.vd=new J(Object);this.Jr=ks;this.Ef=ls;this.Es=ms;this.lv=ns;this.LA=null;this.vh=!0;this.fd=os;this.cg=(new ia(10,10)).freeze();this.ra=new ps;this.ta=new ps;this.Ky=[]}v.Ia(Z,Yf);v.ea("TreeLayout",Z);Z.prototype.cloneProtected=function(a){Yf.prototype.cloneProtected.call(this,a);a.Jr=this.Jr;a.Es=this.Es;a.lv=this.lv;a.vh=this.vh;a.fd=this.fd;a.cg.assign(this.cg);a.ra.copyInheritedPropertiesFrom(this.ra);a.ta.copyInheritedPropertiesFrom(this.ta)};
Z.prototype.createNetwork=function(){return new qs};Z.prototype.makeNetwork=function(a){function b(a){if(a instanceof S)return!a.vf&&"Comment"!==a.gc;if(a instanceof W){var b=a.T;if(null===b||b.vf||"Comment"===b.gc)return!1;a=a.Z;return null===a||a.vf||"Comment"===a.gc?!1:!0}return!1}var c=this.createNetwork();c.Pb=this;a instanceof E?(c.Rj(a.Bg,!0,b),c.Rj(a.links,!0,b)):a instanceof V?c.Rj(a.Ic,!1,b):c.Rj(a.i,!1,b);return c};
Z.prototype.doLayout=function(a){null===a&&v.k("Layout.doLayout(collection) argument must not be null but a Diagram, a Group, or an Iterable of Parts");null===this.network&&(this.network=this.makeNetwork(a));this.Of!==rs&&(this.Zd=this.initialOrigin(this.Zd));var b=this.g;null===b&&a instanceof E&&(b=a);this.Ef=this.path===ks&&null!==b?b.Sd?ls:ss:this.path===ks?ls:this.path;if(0<this.network.vertexes.count){this.network.tw();for(a=this.network.vertexes.i;a.next();)b=a.value,b.initialized=!1,b.level=
0,b.parent=null,b.children=[];if(0<this.vd.count){a=new J(ps);for(b=this.vd.i;b.next();){var c=b.value;c instanceof S?(c=this.network.Mm(c),null!==c&&a.add(c)):c instanceof ps&&a.add(c)}this.vd=a}0===this.vd.count&&this.findRoots();for(a=this.vd.copy().i;a.next();)b=a.value,b.initialized||(b.initialized=!0,ts(this,b));for(a=this.vd.i;a.next();)b=a.value,b instanceof ps&&us(this,b);for(a=this.vd.i;a.next();)b=a.value,b instanceof ps&&vs(this,b);for(a=this.vd.i;a.next();)b=a.value,b instanceof ps&&
ws(this,b);this.Xy();if(this.Ez===xs){c=[];for(a=this.network.vertexes.i;a.next();){var d=a.value,b=d.parent;null===b&&(b=d);var b=0===b.angle||180===b.angle,e=c[d.level];void 0===e&&(e=0);c[d.level]=Math.max(e,b?d.width:d.height)}for(d=0;d<c.length;d++)void 0===c[d]&&(c[d]=0);this.LA=c;for(a=this.network.vertexes.i;a.next();)d=a.value,b=d.parent,null===b&&(b=d),0===b.angle||180===b.angle?(180===b.angle&&(d.ht+=c[d.level]-d.width),d.width=c[d.level]):(270===b.angle&&(d.it+=c[d.level]-d.height),d.height=
c[d.level])}else if(this.Ez===ys)for(a=this.network.vertexes.i;a.next();){c=a.value;b=0===c.angle||180===c.angle;e=-1;for(d=0;d<c.children.length;d++)var f=c.children[d],e=Math.max(e,b?f.width:f.height);if(0<=e)for(d=0;d<c.children.length;d++)f=c.children[d],b?(180===c.angle&&(f.ht+=e-f.width),f.width=e):(270===c.angle&&(f.it+=e-f.height),f.height=e)}for(a=this.vd.i;a.next();)b=a.value,b instanceof ps&&this.layoutTree(b);this.arrangeTrees();this.updateParts()}this.network=null;this.vd=new J(Object);
this.xf=!0};
Z.prototype.findRoots=function(){for(var a=this.network.vertexes.i;a.next();){var b=a.value;switch(this.Ef){case ls:0===b.lc.count&&this.vd.add(b);break;case ss:0===b.$b.count&&this.vd.add(b);break;default:v.k("Unhandled path value "+this.Ef.toString())}}if(0===this.vd.count){for(var a=999999,b=null,c=this.network.vertexes.i;c.next();){var d=c.value;switch(this.Ef){case ls:d.lc.count<a&&(a=d.lc.count,b=d);break;case ss:d.$b.count<a&&(a=d.$b.count,b=d);break;default:v.k("Unhandled path value "+this.Ef.toString())}}null!==
b&&this.vd.add(b)}};
function ts(a,b){if(null!==b){switch(a.Ef){case ls:if(0<b.$b.count){for(var c=new I(ps),d=b.EG;d.next();){var e=d.value;zs(a,b,e)&&c.add(e)}0<c.count&&(b.children=c.dc())}break;case ss:if(0<b.lc.count){c=new I(ps);for(d=b.BI;d.next();)e=d.value,zs(a,b,e)&&c.add(e);0<c.count&&(b.children=c.dc())}break;default:v.k("Unhandled path value"+a.Ef.toString())}c=b.children;d=c.length;for(e=0;e<d;e++){var f=c[e];f.initialized=!0;f.level=b.level+1;f.parent=b;a.vd.remove(f)}for(e=0;e<d;e++)f=c[e],ts(a,f)}}
function zs(a,b,c){if(c.initialized){var d;if(null===b)d=!1;else{for(d=b.parent;null!==d&&d!==c;)d=d.parent;d=d===c}if(d||c.level>b.level)return!1;a.removeChild(c.parent,c)}return!0}Z.prototype.removeChild=function(a,b){if(null!==a&&null!==b){for(var c=a.children,d=0,e=0;e<c.length;e++)c[e]===b&&d++;if(0<d){for(var d=Array(c.length-d),f=0,e=0;e<c.length;e++)c[e]!==b&&(d[f++]=c[e]);a.children=d}}};
function us(a,b){if(null!==b){a.initializeTreeVertexValues(b);b.alignment===As&&a.sortTreeVertexChildren(b);for(var c=0,d=b.Dm,e=0,f=b.children,h=f.length,k=0;k<h;k++){var l=f[k];us(a,l);c+=l.descendantCount+1;d=Math.max(d,l.maxChildrenCount);e=Math.max(e,l.maxGenerationCount)}b.descendantCount=c;b.maxChildrenCount=d;b.maxGenerationCount=0<d?e+1:0}}
function Bs(a,b){switch(a.Es){default:case ms:return null!==b.parent?b.parent:a.ra;case Cs:return null===b.parent?a.ra:null===b.parent.parent?a.ta:b.parent;case Ds:return null!==b.parent?null!==b.parent.parent?b.parent.parent:a.ta:a.ra;case Es:var c=!0;if(0===b.Dm)c=!1;else for(var d=b.children,e=d.length,f=0;f<e;f++)if(0<d[f].Dm){c=!1;break}return c&&null!==b.parent?a.ta:null!==b.parent?b.parent:a.ra}}
Z.prototype.initializeTreeVertexValues=function(a){var b=Bs(this,a);a.copyInheritedPropertiesFrom(b);if(null!==a.parent&&a.parent.alignment===As){for(var b=a.angle,c=a.parent.children,d=0;d<c.length&&a!==c[d];)d++;0===d%2?d!==c.length-1&&(b=90===b?180:180===b?270:270===b?180:270):b=90===b?0:180===b?90:270===b?0:90;a.angle=b}a.initialized=!0};function vs(a,b){if(null!==b){a.assignTreeVertexValues(b);for(var c=b.children,d=c.length,e=0;e<d;e++)vs(a,c[e])}}Z.prototype.assignTreeVertexValues=function(){};
function ws(a,b){if(null!==b){b.alignment!==As&&a.sortTreeVertexChildren(b);for(var c=b.children,d=c.length,e=0;e<d;e++)ws(a,c[e])}}Z.prototype.sortTreeVertexChildren=function(a){switch(a.sorting){case Fs:break;case Gs:a.children.reverse();break;case Hs:a.children.sort(a.comparer);break;case Is:a.children.sort(a.comparer);a.children.reverse();break;default:v.k("Unhandled sorting value "+a.sorting.toString())}};Z.prototype.Xy=function(){if(this.comments)for(var a=this.network.vertexes.i;a.next();)this.addComments(a.value)};
Z.prototype.addComments=function(a){var b=a.angle,c=a.parent,d=0,e=Js,e=!1;null!==c&&(d=c.angle,e=c.alignment,e=Ks(e));var b=90===b||270===b,d=90===d||270===d,c=0===a.Dm,f=0,h=0,k=0,l=a.commentSpacing;if(null!==a.Jc)for(var m=a.Jc.HD();m.next();){var n=m.value;"Comment"===n.gc&&n.canLayout()&&(null===a.comments&&(a.comments=[]),a.comments.push(n),n.tf(),n=n.Ca,b&&!c||!e&&!d&&c||e&&d&&c?(f=Math.max(f,n.width),h+=n.height+Math.abs(k)):(f+=n.width+Math.abs(k),h=Math.max(h,n.height)),k=l)}null!==a.comments&&
(b&&!c||!e&&!d&&c||e&&d&&c?(f+=Math.abs(a.commentMargin),h=Math.max(0,h-a.height)):(h+=Math.abs(a.commentMargin),f=Math.max(0,f-a.width)),e=v.gk(0,0,a.M.width+f,a.M.height+h),a.mb=e,v.Vb(e))};function Ks(a){return a===Ls||a===As||a===Ms||a===Ns}function Os(a){return a===Ls||a===As}function Ps(a){var b=a.parent;if(null!==b){var c=b.alignment;if(Ks(c)){if(Os(c)){b=b.children;for(c=0;c<b.length&&a!==b[c];)c++;return 0===c%2}if(c===Ms)return!0}}return!1}
Z.prototype.layoutComments=function(a){if(null!==a.comments){var b=a.Jc.Ca,c=a.parent,d=a.angle,e=0,f=Js,f=!1;null!==c&&(e=c.angle,f=c.alignment,f=Ks(f));for(var c=90===d||270===d,d=90===e||270===e,h=0===a.Dm,k=Ps(a),l=0,m=a.comments,n=m.length,p=v.L(),q=0;q<n;q++){var r=m[q],s=r.Ca;if(c&&!h||!f&&!d&&h||f&&d&&h){if(135<e&&!f||d&&k)if(0<=a.commentMargin)for(p.m(a.M.x-a.commentMargin-s.width,a.M.y+l),r.move(p),r=r.wg();r.next();){var t=r.value;t.xb=qc;t.yb=rc}else for(p.m(a.M.x+2*a.O.x-a.commentMargin,
a.M.y+l),r.move(p),r=r.wg();r.next();)t=r.value,t.xb=rc,t.yb=qc;else if(0<=a.commentMargin)for(p.m(a.M.x+2*a.O.x+a.commentMargin,a.M.y+l),r.move(p),r=r.wg();r.next();)t=r.value,t.xb=rc,t.yb=qc;else for(p.m(a.M.x+a.commentMargin-s.width,a.M.y+l),r.move(p),r=r.wg();r.next();)t=r.value,t.xb=qc,t.yb=rc;l=0<=a.commentSpacing?l+(s.height+a.commentSpacing):l+(a.commentSpacing-s.height)}else{if(135<e&&!f||!d&&k)if(0<=a.commentMargin)for(p.m(a.M.x+l,a.M.y-a.commentMargin-s.height),r.move(p),r=r.wg();r.next();)t=
r.value,t.xb=pc,t.yb=sc;else for(p.m(a.M.x+l,a.M.y+2*a.O.y-a.commentMargin),r.move(p),r=r.wg();r.next();)t=r.value,t.xb=sc,t.yb=pc;else if(0<=a.commentMargin)for(p.m(a.M.x+l,a.M.y+2*a.O.y+a.commentMargin),r.move(p),r=r.wg();r.next();)t=r.value,t.xb=sc,t.yb=pc;else for(p.m(a.M.x+l,a.M.y+a.commentMargin-s.height),r.move(p),r=r.wg();r.next();)t=r.value,t.xb=pc,t.yb=sc;l=0<=a.commentSpacing?l+(s.width+a.commentSpacing):l+(a.commentSpacing-s.width)}}v.v(p);b=l-a.commentSpacing-(c?b.height:b.width);if(this.Ef===
ls)for(e=a.$b;e.next();)a=e.value.link,null===a||a.rl||(a.ll=0<b?b:NaN);else for(e=a.lc;e.next();)a=e.value.link,null===a||a.rl||(a.Gl=0<b?b:NaN)}};
Z.prototype.layoutTree=function(a){if(null!==a){for(var b=a.children,c=b.length,d=0;d<c;d++)this.layoutTree(b[d]);switch(a.compaction){case Qs:Rs(this,a);break;case Ss:if(a.alignment===As)Rs(this,a);else if(0===a.Dm){var d=a.parent,b=!1,c=0,e=Js;null!==d&&(c=d.angle,e=d.alignment,b=Ks(e));d=Ps(a);a.ma.m(0,0);a.fb.m(a.width,a.height);null===a.parent||null===a.comments||(180!==c&&270!==c||b)&&!d?a.La.m(0,0):180===c&&!b||(90===c||270===c)&&d?a.La.m(a.width-2*a.O.x,0):a.La.m(0,a.height-2*a.O.y);a.zt=
null;a.Rt=null}else{for(var f=Ts(a),b=90===f||270===f,h=0,k=a.children,l=k.length,m=0;m<l;m++)var n=k[m],h=Math.max(h,b?n.fb.width:n.fb.height);var p=a.alignment,d=p===Us,q=p===Vs,r=Ks(p),s=Math.max(0,a.breadthLimit),c=Ws(a),t=a.nodeSpacing,u=Xs(a),w=a.rowSpacing,x=0;if(d||q||a.Ap||a.Bp&&1===a.maxGenerationCount)x=Math.max(0,a.rowIndent);var d=a.width,e=a.height,z=0,A=0,H=0,C=null,T=null,ba=0,U=0,M=0,aa=0,Ia=0,oa=0,Ga=0,pa=0,n=0;r&&!Os(p)&&135<f&&k.reverse();if(Os(p))if(1<l)for(m=0;m<l;m++)0===m%
2&&m!==l-1?pa=Math.max(pa,b?k[m].fb.width:k[m].fb.height):0!==m%2&&(n=Math.max(n,b?k[m].fb.width:k[m].fb.height));else 1===l&&(pa=b?k[0].fb.width:k[0].fb.height);if(r){switch(p){case Ls:U=135>f?Ys(a,k,pa,z,A):Zs(a,k,pa,z,A);pa=U.x;z=U.width;A=U.height;break;case Ms:for(m=0;m<l;m++){var n=k[m],Ca=n.fb,C=0===oa?0:w;b?(n.ma.m(h-Ca.width,aa+C),z=Math.max(z,Ca.width),A=Math.max(A,aa+C+Ca.height),aa+=C+Ca.height):(n.ma.m(M+C,h-Ca.height),z=Math.max(z,M+C+Ca.width),A=Math.max(A,Ca.height),M+=C+Ca.width);
oa++}break;case Ns:for(m=0;m<l;m++)n=k[m],Ca=n.fb,C=0===oa?0:w,b?(n.ma.m(t/2+a.O.x,aa+C),z=Math.max(z,Ca.width),A=Math.max(A,aa+C+Ca.height),aa+=C+Ca.height):(n.ma.m(M+C,t/2+a.O.y),z=Math.max(z,M+C+Ca.width),A=Math.max(A,Ca.height),M+=C+Ca.width),oa++}C=$s(this,2);T=$s(this,2);b?(C[0].m(0,0),C[1].m(0,A),T[0].m(z,0)):(C[0].m(0,0),C[1].m(z,0),T[0].m(0,A));T[1].m(z,A)}else for(m=0;m<l;m++){n=k[m];Ca=n.fb;if(b){0<s&&0<oa&&M+t+Ca.width>s&&(M<h&&at(a,p,h-M,0,Ga,m-1),Ia++,oa=0,Ga=m,H=A,M=0,aa=135<f?-A-w:
A+w);gt(this,n,0,aa);var ua=0;if(0===oa){if(C=n.zt,T=n.Rt,ba=Ca.width,U=Ca.height,null===C||null===T||f!==Ts(n))C=$s(this,2),T=$s(this,2),C[0].m(0,0),C[1].m(0,U),T[0].m(ba,0),T[1].m(ba,U)}else{var fc=v.jb(),U=ht(this,a,n,C,T,ba,U,fc),ua=U.x,C=fc[0],T=fc[1],ba=U.width,U=U.height;v.sa(fc);M<Ca.width&&0>ua&&(it(a,-ua,0,Ga,m-1),jt(C,-ua,0),jt(T,-ua,0),ua=0)}n.ma.m(ua,aa);z=Math.max(z,ba);A=Math.max(A,H+(0===Ia?0:w)+Ca.height);M=ba}else{0<s&&0<oa&&aa+t+Ca.height>s&&(aa<h&&at(a,p,0,h-aa,Ga,m-1),Ia++,oa=
0,Ga=m,H=z,aa=0,M=135<f?-z-w:z+w);gt(this,n,M,0);ua=0;if(0===oa){if(C=n.zt,T=n.Rt,ba=Ca.width,U=Ca.height,null===C||null===T||f!==Ts(n))C=$s(this,2),T=$s(this,2),C[0].m(0,0),C[1].m(ba,0),T[0].m(0,U),T[1].m(ba,U)}else fc=v.jb(),U=ht(this,a,n,C,T,ba,U,fc),ua=U.x,C=fc[0],T=fc[1],ba=U.width,U=U.height,v.sa(fc),aa<Ca.height&&0>ua&&(it(a,0,-ua,Ga,m-1),jt(C,0,-ua),jt(T,0,-ua),ua=0);n.ma.m(M,ua);A=Math.max(A,U);z=Math.max(z,H+(0===Ia?0:w)+Ca.width);aa=U}oa++}0<Ia&&(b?(A+=Math.max(0,c),M<z&&at(a,p,z-M,0,Ga,
l-1),0<x&&(q||it(a,x,0,0,l-1),z+=x)):(z+=Math.max(0,c),aa<A&&at(a,p,0,A-aa,Ga,l-1),0<x&&(q||it(a,0,x,0,l-1),A+=x)));q=h=0;switch(p){case kt:b?h+=z/2-a.O.x-u/2:q+=A/2-a.O.y-u/2;break;case Js:0<Ia?b?h+=z/2-a.O.x-u/2:q+=A/2-a.O.y-u/2:b?(m=k[0].ma.x+k[0].La.x,pa=k[l-1].ma.x+k[l-1].La.x+2*k[l-1].O.x,h+=m+(pa-m)/2-a.O.x-u/2):(m=k[0].ma.y+k[0].La.y,pa=k[l-1].ma.y+k[l-1].La.y+2*k[l-1].O.y,q+=m+(pa-m)/2-a.O.y-u/2);break;case Us:b?(h-=u,z+=u):(q-=u,A+=u);break;case Vs:b?(h+=z-a.width+u,z+=u):(q+=A-a.height+
u,A+=u);break;case Ls:b?h=1<l?h+(pa+t/2-a.O.x):h+(k[0].O.x-a.O.x+k[0].La.x):q=1<l?q+(pa+t/2-a.O.y):q+(k[0].O.y-a.O.y+k[0].La.y);break;case Ms:b?h+=z+t/2-a.O.x:q+=A+t/2-a.O.y;break;case Ns:break;default:v.k("Unhandled alignment value "+p.toString())}for(m=0;m<l;m++)n=k[m],b?n.ma.m(n.ma.x+n.La.x-h,n.ma.y+(135<f?(r?-A:-n.fb.height)+n.La.y-c:e+c+n.La.y)):n.ma.m(n.ma.x+(135<f?(r?-z:-n.fb.width)+n.La.x-c:d+c+n.La.x),n.ma.y+n.La.y-q);l=k=0;r?b?(z=lt(a,z,h),0>h&&(h=0),135<f&&(q+=A+c),A+=e+c,p===Ns&&(k+=t/
2+a.O.x),l+=e+c):(135<f&&(h+=z+c),z+=d+c,A=mt(a,A,q),0>q&&(q=0),p===Ns&&(l+=t/2+a.O.y),k+=d+c):b?(null===a.comments?d>z&&(p=nt(p,d-z,0),k=p.x,l=p.y,z=d,h=0):z=lt(a,z,h),0>h&&(k-=h,h=0),135<f&&(q+=A+c),A=Math.max(Math.max(A,e),A+e+c),l+=e+c):(135<f&&(h+=z+c),z=Math.max(Math.max(z,d),z+d+c),null===a.comments?e>A&&(p=nt(p,0,e-A),k=p.x,l=p.y,A=e,q=0):A=mt(a,A,q),0>q&&(l-=q,q=0),k+=d+c);if(0<Ia)f=$s(this,4),p=$s(this,4),b?(f[2].m(0,e+c),f[3].m(f[2].x,A),p[2].m(z,f[2].y),p[3].m(p[2].x,f[3].y)):(f[2].m(d+
c,0),f[3].m(z,f[2].y),p[2].m(f[2].x,A),p[3].m(f[3].x,p[2].y));else{f=$s(this,C.length+2);p=$s(this,T.length+2);for(m=0;m<C.length;m++)r=C[m],f[m+2].m(r.x+k,r.y+l);for(m=0;m<T.length;m++)r=T[m],p[m+2].m(r.x+k,r.y+l)}b?(f[0].m(h,0),f[1].m(f[0].x,e),f[2].y<f[1].y&&(f[2].x>f[0].x?f[2].assign(f[1]):f[1].assign(f[2])),f[3].y<f[2].y&&(f[3].x>f[0].x?f[3].assign(f[2]):f[2].assign(f[3])),p[0].m(h+d,0),p[1].m(p[0].x,e),p[2].y<p[1].y&&(p[2].x<p[0].x?p[2].assign(p[1]):p[1].assign(p[2])),p[3].y<p[2].y&&(p[3].x<
p[0].x?p[3].assign(p[2]):p[2].assign(p[3])),f[2].y-=c/2,p[2].y-=c/2):(f[0].m(0,q),f[1].m(d,f[0].y),f[2].x<f[1].x&&(f[2].y>f[0].y?f[2].assign(f[1]):f[1].assign(f[2])),f[3].x<f[2].x&&(f[3].y>f[0].y?f[3].assign(f[2]):f[2].assign(f[3])),p[0].m(0,q+e),p[1].m(d,p[0].y),p[2].x<p[1].x&&(p[2].y<p[0].y?p[2].assign(p[1]):p[1].assign(p[2])),p[3].x<p[2].x&&(p[3].y<p[0].y?p[3].assign(p[2]):p[2].assign(p[3])),f[2].x-=c/2,p[2].x-=c/2);ot(this,C);ot(this,T);a.zt=f;a.Rt=p;a.La.m(h,q);a.fb.m(z,A)}break;default:v.k("Unhandled compaction value "+
a.compaction.toString())}}};
function Rs(a,b){if(0===b.Dm){var c=!1,d=0,e=Js;null!==b.parent&&(d=b.parent.angle,e=b.parent.alignment,c=Ks(e));e=Ps(b);b.ma.m(0,0);b.fb.m(b.width,b.height);null===b.parent||null===b.comments||(180!==d&&270!==d||c)&&!e?b.La.m(0,0):180===d&&!c||(90===d||270===d)&&e?b.La.m(b.width-2*b.O.x,0):b.La.m(0,b.height-2*b.O.y)}else{for(var c=Ts(b),d=90===c||270===c,f=0,e=b.children,h=e.length,k=0;k<h;k++)var l=e[k],f=Math.max(f,d?l.fb.width:l.fb.height);var m=b.alignment,n=m===Us,p=m===Vs,q=Ks(m),r=Math.max(0,
b.breadthLimit),s=Ws(b),t=b.nodeSpacing,u=Xs(b),w=n||p?0:u/2,x=b.rowSpacing,z=0;if(n||p||b.Ap||b.Bp&&1===b.maxGenerationCount)z=Math.max(0,b.rowIndent);var n=b.width,A=b.height,H=0,C=0,T=0,ba=0,U=0,M=0,aa=0,Ia=0,oa=0,Ga=0;q&&!Os(m)&&135<c&&e.reverse();if(Os(m))if(1<h)for(k=0;k<h;k++){var l=e[k],pa=l.fb;0===k%2&&k!==h-1?oa=Math.max(oa,(d?pa.width:pa.height)+pt(l)-t):0!==k%2&&(Ga=Math.max(Ga,(d?pa.width:pa.height)+pt(l)-t))}else 1===h&&(oa=d?e[0].fb.width:e[0].fb.height);if(q)switch(m){case Ls:case As:C=
135>c?Ys(b,e,oa,H,C):Zs(b,e,oa,H,C);oa=C.x;H=C.width;C=C.height;break;case Ms:for(k=0;k<h;k++)l=e[k],pa=l.fb,r=0===aa?0:x,d?(l.ma.m(f-pa.width,U+r),H=Math.max(H,pa.width),C=Math.max(C,U+r+pa.height),U+=r+pa.height):(l.ma.m(ba+r,f-pa.height),H=Math.max(H,ba+r+pa.width),C=Math.max(C,pa.height),ba+=r+pa.width),aa++;break;case Ns:for(f=0;f<h;f++)l=e[f],pa=l.fb,r=0===aa?0:x,d?(l.ma.m(t/2+b.O.x,U+r),H=Math.max(H,pa.width),C=Math.max(C,U+r+pa.height),U+=r+pa.height):(l.ma.m(ba+r,t/2+b.O.y),H=Math.max(H,
ba+r+pa.width),C=Math.max(C,pa.height),ba+=r+pa.width),aa++}else for(k=0;k<h;k++)l=e[k],pa=l.fb,d?(0<r&&0<aa&&ba+t+pa.width>r&&(ba<f&&at(b,m,f-ba,0,Ia,k-1),M++,aa=0,Ia=k,T=C,ba=0,U=135<c?-C-x:C+x),Ga=0===aa?w:t,gt(a,l,0,U),l.ma.m(ba+Ga,U),H=Math.max(H,ba+Ga+pa.width),C=Math.max(C,T+(0===M?0:x)+pa.height),ba+=Ga+pa.width):(0<r&&0<aa&&U+t+pa.height>r&&(U<f&&at(b,m,0,f-U,Ia,k-1),M++,aa=0,Ia=k,T=H,U=0,ba=135<c?-H-x:H+x),Ga=0===aa?w:t,gt(a,l,ba,0),l.ma.m(ba,U+Ga),C=Math.max(C,U+Ga+pa.height),H=Math.max(H,
T+(0===M?0:x)+pa.width),U+=Ga+pa.height),aa++;0<M&&(d?(C+=Math.max(0,s),ba<H&&at(b,m,H-ba,0,Ia,h-1),0<z&&(p||it(b,z,0,0,h-1),H+=z)):(H+=Math.max(0,s),U<C&&at(b,m,0,C-U,Ia,h-1),0<z&&(p||it(b,0,z,0,h-1),C+=z)));z=p=0;switch(m){case kt:d?p+=H/2-b.O.x-u/2:z+=C/2-b.O.y-u/2;break;case Js:0<M?d?p+=H/2-b.O.x-u/2:z+=C/2-b.O.y-u/2:d?(m=e[0].ma.x+e[0].La.x,t=e[h-1].ma.x+e[h-1].La.x+2*e[h-1].O.x,p+=m+(t-m)/2-b.O.x-u/2):(m=e[0].ma.y+e[0].La.y,t=e[h-1].ma.y+e[h-1].La.y+2*e[h-1].O.y,z+=m+(t-m)/2-b.O.y-u/2);break;
case Us:d?(p-=u,H+=u):(z-=u,C+=u);break;case Vs:d?(p+=H-b.width+u,H+=u):(z+=C-b.height+u,C+=u);break;case Ls:case As:d?p=1<h?p+(oa+t/2-b.O.x):p+(e[0].O.x-b.O.x+e[0].La.x):z=1<h?z+(oa+t/2-b.O.y):z+(e[0].O.y-b.O.y+e[0].La.y);break;case Ms:d?p+=H+t/2-b.O.x:z+=C+t/2-b.O.y;break;case Ns:break;default:v.k("Unhandled alignment value "+m.toString())}for(k=0;k<h;k++)l=e[k],d?l.ma.m(l.ma.x+l.La.x-p,l.ma.y+(135<c?(q?-C:-l.fb.height)+l.La.y-s:A+s+l.La.y)):l.ma.m(l.ma.x+(135<c?(q?-H:-l.fb.width)+l.La.x-s:n+s+
l.La.x),l.ma.y+l.La.y-z);d?(H=lt(b,H,p),0>p&&(p=0),135<c&&(z+=C+s),C+=A+s):(135<c&&(p+=H+s),H+=n+s,C=mt(b,C,z),0>z&&(z=0));b.La.m(p,z);b.fb.m(H,C)}}
function Ys(a,b,c,d,e){var f=b.length;if(0===f)return new B(c,0,d,e);if(1===f){var h=b[0];d=h.fb.width;e=h.fb.height;return new B(c,0,d,e)}for(var k=a.nodeSpacing,l=a.rowSpacing,m=90===Ts(a),n=0,p=0,q=0,r=0;r<f;r++)if(!(0!==r%2||1<f&&r===f-1)){var h=b[r],s=h.fb,t=0===n?0:l;if(m){var u=pt(h)-k;h.ma.m(c-(s.width+u),q+t);d=Math.max(d,s.width+u);e=Math.max(e,q+t+s.height);q+=t+s.height}else u=pt(h)-k,h.ma.m(p+t,c-(s.height+u)),e=Math.max(e,s.height+u),d=Math.max(d,p+t+s.width),p+=t+s.width;n++}var n=
0,w=p,x=q;m?(p=c+k,q=0):(p=0,q=c+k);for(r=0;r<f;r++)0!==r%2&&(h=b[r],s=h.fb,t=0===n?0:l,m?(u=pt(h)-k,h.ma.m(p+u,q+t),d=Math.max(d,p+s.width+u),e=Math.max(e,q+t+s.height),q+=t+s.height):(u=pt(h)-k,h.ma.m(p+t,q+u),d=Math.max(d,p+t+s.width),e=Math.max(e,q+s.height+u),p+=t+s.width),n++);1<f&&1===f%2&&(h=b[f-1],s=h.fb,b=qt(h,m?Math.max(Math.abs(x),Math.abs(q)):Math.max(Math.abs(w),Math.abs(p))),m?(h.ma.m(c+k/2-h.O.x-h.La.x,e+b),m=c+k/2-h.O.x-h.La.x,d=Math.max(d,m+s.width),0>m&&(d-=m),e=Math.max(e,Math.max(x,
q)+b+s.height),0>h.ma.x&&(c=rt(a,h.ma.x,!1,c,k))):(h.ma.m(d+b,c+k/2-h.O.y-h.La.y),d=Math.max(d,Math.max(w,p)+b+s.width),m=c+k/2-h.O.y-h.La.y,e=Math.max(e,m+s.height),0>m&&(e-=m),0>h.ma.y&&(c=rt(a,h.ma.y,!0,c,k))));return new B(c,0,d,e)}
function Zs(a,b,c,d,e){var f=b.length;if(0===f)return new B(c,0,d,e);if(1===f){var h=b[0];d=h.fb.width;e=h.fb.height;return new B(c,0,d,e)}for(var k=a.nodeSpacing,l=a.rowSpacing,m=270===Ts(a),n=0,p=0,q=0,r=0;r<f;r++)if(!(0!==r%2||1<f&&r===f-1)){var h=b[r],s=h.fb,t=0===n?0:l;if(m){var u=pt(h)-k,q=q-(t+s.height);h.ma.m(c-(s.width+u),q);d=Math.max(d,s.width+u);e=Math.max(e,Math.abs(q))}else u=pt(h)-k,p-=t+s.width,h.ma.m(p,c-(s.height+u)),e=Math.max(e,s.height+u),d=Math.max(d,Math.abs(p));n++}var n=0,
w=p,x=q;m?(p=c+k,q=0):(p=0,q=c+k);for(r=0;r<f;r++)0!==r%2&&(h=b[r],s=h.fb,t=0===n?0:l,m?(u=pt(h)-k,q-=t+s.height,h.ma.m(p+u,q),d=Math.max(d,p+s.width+u),e=Math.max(e,Math.abs(q))):(u=pt(h)-k,p-=t+s.width,h.ma.m(p,q+u),e=Math.max(e,q+s.height+u),d=Math.max(d,Math.abs(p))),n++);1<f&&1===f%2&&(h=b[f-1],s=h.fb,l=qt(h,m?Math.max(Math.abs(x),Math.abs(q)):Math.max(Math.abs(w),Math.abs(p))),m?(h.ma.m(c+k/2-h.O.x-h.La.x,-e-s.height-l),p=c+k/2-h.O.x-h.La.x,d=Math.max(d,p+s.width),0>p&&(d-=p),e=Math.max(e,Math.abs(Math.min(x,
q))+l+s.height),0>h.ma.x&&(c=rt(a,h.ma.x,!1,c,k))):(h.ma.m(-d-s.width-l,c+k/2-h.O.y-h.La.y),d=Math.max(d,Math.abs(Math.min(w,p))+l+s.width),p=c+k/2-h.O.y-h.La.y,e=Math.max(e,p+s.height),0>p&&(e-=p),0>h.ma.y&&(c=rt(a,h.ma.y,!0,c,k))));for(r=0;r<f;r++)h=b[r],m?h.ma.m(h.ma.x,h.ma.y+e):h.ma.m(h.ma.x+d,h.ma.y);return new B(c,0,d,e)}function pt(a){return null===a.parent?0:a.parent.nodeSpacing}function qt(a){return null===a.parent?0:a.parent.rowSpacing}
function rt(a,b,c,d,e){a=a.children;for(var f=a.length,h=0;h<f;h++)c?a[h].ma.m(a[h].ma.x,a[h].ma.y-b):a[h].ma.m(a[h].ma.x-b,a[h].ma.y);b=a[f-1];return Math.max(d,c?b.La.y+b.O.y-e/2:b.La.x+b.O.x-e/2)}
function lt(a,b,c){switch(a.alignment){case Js:case kt:var d=b;c+a.width>d&&(d=c+a.width);0>c&&(d-=c);return d;case Us:return a.width>b?a.width:b;case Vs:return 2*a.O.x>b?a.width:b+a.width-2*a.O.x;case Ls:case As:return d=Math.min(0,c),c=Math.max(b,c+a.width),Math.max(a.width,c-d);case Ms:return a.width-a.O.x+a.nodeSpacing/2+b;case Ns:return Math.max(a.width,a.O.x+a.nodeSpacing/2+b);default:return b}}
function mt(a,b,c){switch(a.alignment){case Js:case kt:var d=b;c+a.height>d&&(d=c+a.height);0>c&&(d-=c);return d;case Us:return a.height>b?a.height:b;case Vs:return 2*a.O.y>b?a.height:b+a.height-2*a.O.y;case Ls:case As:return d=Math.min(0,c),c=Math.max(b,c+a.height),Math.max(a.height,c-d);case Ms:return a.height-a.O.y+a.nodeSpacing/2+b;case Ns:return Math.max(a.height,a.O.y+a.nodeSpacing/2+b);default:return b}}
function nt(a,b,c){switch(a){case kt:b/=2;c/=2;break;case Js:b/=2;c/=2;break;case Us:c=b=0;break;case Vs:break;default:v.k("Unhandled alignment value "+a.toString())}return new y(b,c)}function at(a,b,c,d,e,f){b=nt(b,c,d);it(a,b.x,b.y,e,f)}function it(a,b,c,d,e){if(0!==b||0!==c)for(a=a.children;d<=e;d++){var f=a[d].ma;f.x+=b;f.y+=c}}
function gt(a,b,c,d){var e=b.parent;switch(a.Ef){case ls:for(a=b.lc;a.next();)b=a.value,b.fromVertex===e&&b.Qr.m(c,d);break;case ss:for(a=b.$b;a.next();)b=a.value,b.toVertex===e&&b.Qr.m(c,d);break;default:v.k("Unhandled path value "+a.Ef.toString())}}function jt(a,b,c){for(var d=0;d<a.length;d++){var e=a[d];e.x+=b;e.y+=c}}
function ht(a,b,c,d,e,f,h,k){var l=Ts(b),m=90===l||270===l,n=b.nodeSpacing;b=d;var p=e;d=f;e=h;var q=c.zt,r=c.Rt;h=c.fb;var s=m?Math.max(e,h.height):Math.max(d,h.width);if(null===q||l!==Ts(c))q=$s(a,2),r=$s(a,2),m?(q[0].m(0,0),q[1].m(0,h.height),r[0].m(h.width,0),r[1].m(r[0].x,q[1].y)):(q[0].m(0,0),q[1].m(h.width,0),r[0].m(0,h.height),r[1].m(q[1].x,r[0].y));if(m){c=d;d=9999999;if(!(null===p||2>p.length||null===q||2>q.length))for(m=l=0;l<p.length&&m<q.length;){e=p[l];var t=q[m];f=t.x;var u=t.y;f+=
c;var w=e;l+1<p.length&&(w=p[l+1]);var x=t,t=x.x,x=x.y;m+1<q.length&&(x=q[m+1],t=x.x,x=x.y,t+=c);var z=d;e.y===u?z=f-e.x:e.y>u&&e.y<x?z=f+(e.y-u)/(x-u)*(t-f)-e.x:u>e.y&&u<w.y&&(z=f-(e.x+(u-e.y)/(w.y-e.y)*(w.x-e.x)));z<d&&(d=z);w.y<=e.y?l++:x<=u?m++:(w.y<=x&&l++,x<=w.y&&m++)}c-=d;c+=n;l=q;m=c;if(null===b||2>b.length||null===l||2>l.length)d=null;else{n=$s(a,b.length+l.length);for(d=f=e=0;f<l.length&&l[f].y<b[0].y;)u=l[f++],n[d++].m(u.x+m,u.y);for(;e<b.length;)u=b[e++],n[d++].m(u.x,u.y);for(e=b[b.length-
1].y;f<l.length&&l[f].y<=e;)f++;for(;f<l.length&&l[f].y>e;)u=l[f++],n[d++].m(u.x+m,u.y);l=$s(a,d);for(e=0;e<d;e++)l[e].assign(n[e]);ot(a,n);d=l}f=r;u=c;if(null===p||2>p.length||null===f||2>f.length)e=null;else{n=$s(a,p.length+f.length);for(m=w=l=0;l<p.length&&p[l].y<f[0].y;)e=p[l++],n[m++].m(e.x,e.y);for(;w<f.length;)e=f[w++],n[m++].m(e.x+u,e.y);for(f=f[f.length-1].y;l<p.length&&p[l].y<=f;)l++;for(;l<p.length&&p[l].y>f;)e=p[l++],n[m++].m(e.x,e.y);e=$s(a,m);for(l=0;l<m;l++)e[l].assign(n[l]);ot(a,n)}f=
Math.max(0,c)+h.width;h=s}else{c=e;d=9999999;if(!(null===p||2>p.length||null===q||2>q.length))for(m=l=0;l<p.length&&m<q.length;)e=p[l],t=q[m],f=t.x,u=t.y,u+=c,w=e,l+1<p.length&&(w=p[l+1]),x=t,t=x.x,x=x.y,m+1<q.length&&(x=q[m+1],t=x.x,x=x.y,x+=c),z=d,e.x===f?z=u-e.y:e.x>f&&e.x<t?z=u+(e.x-f)/(t-f)*(x-u)-e.y:f>e.x&&f<w.x&&(z=u-(e.y+(f-e.x)/(w.x-e.x)*(w.y-e.y))),z<d&&(d=z),w.x<=e.x?l++:t<=f?m++:(w.x<=t&&l++,t<=w.x&&m++);c-=d;c+=n;l=q;m=c;if(null===b||2>b.length||null===l||2>l.length)d=null;else{n=$s(a,
b.length+l.length);for(d=f=e=0;f<l.length&&l[f].x<b[0].x;)u=l[f++],n[d++].m(u.x,u.y+m);for(;e<b.length;)u=b[e++],n[d++].m(u.x,u.y);for(e=b[b.length-1].x;f<l.length&&l[f].x<=e;)f++;for(;f<l.length&&l[f].x>e;)u=l[f++],n[d++].m(u.x,u.y+m);l=$s(a,d);for(e=0;e<d;e++)l[e].assign(n[e]);ot(a,n);d=l}f=r;u=c;if(null===p||2>p.length||null===f||2>f.length)e=null;else{n=$s(a,p.length+f.length);for(m=w=l=0;l<p.length&&p[l].x<f[0].x;)e=p[l++],n[m++].m(e.x,e.y);for(;w<f.length;)e=f[w++],n[m++].m(e.x,e.y+u);for(f=
f[f.length-1].x;l<p.length&&p[l].x<=f;)l++;for(;l<p.length&&p[l].x>f;)e=p[l++],n[m++].m(e.x,e.y);e=$s(a,m);for(l=0;l<m;l++)e[l].assign(n[l]);ot(a,n)}f=s;h=Math.max(0,c)+h.height}ot(a,b);ot(a,q);ot(a,p);ot(a,r);k[0]=d;k[1]=e;return new B(c,0,f,h)}function $s(a,b){var c=a.Ky[b];if(void 0!==c&&(c=c.pop(),void 0!==c))return c;for(var c=[],d=0;d<b;d++)c[d]=new y;return c}function ot(a,b){var c=b.length,d=a.Ky[c];void 0===d&&(d=[],a.Ky[c]=d);d.push(b)}
Z.prototype.arrangeTrees=function(){if(this.fd===rs)for(var a=this.vd.i;a.next();){var b=a.value;if(b instanceof ps){var c=b.Jc;if(null!==c){var d=c.position,c=d.x,d=d.y;isFinite(c)||(c=0);isFinite(d)||(d=0);st(this,b,c,d)}}}else{c=[];for(a=this.vd.i;a.next();)b=a.value,b instanceof ps&&c.push(b);switch(this.sorting){case Fs:break;case Gs:c.reverse();break;case Hs:c.sort(this.comparer);break;case Is:c.sort(this.comparer);c.reverse();break;default:v.k("Unhandled sorting value "+this.sorting.toString())}b=
this.Zd;a=b.x;b=b.y;for(d=0;d<c.length;d++){var e=c[d];st(this,e,a+e.La.x,b+e.La.y);switch(this.fd){case os:b+=e.fb.height+this.cg.height;break;case tt:a+=e.fb.width+this.cg.width;break;default:v.k("Unhandled arrangement value "+this.fd.toString())}}}};function st(a,b,c,d){if(null!==b){b.x=c;b.y=d;b=b.children;for(var e=b.length,f=0;f<e;f++){var h=b[f];st(a,h,c+h.ma.x,d+h.ma.y)}}}Z.prototype.commitLayout=function(){this.kA();this.commitNodes();this.bz();this.wt&&this.commitLinks()};
Z.prototype.commitNodes=function(){for(var a=this.network.vertexes.i;a.next();)a.value.commit();for(a.reset();a.next();)this.layoutComments(a.value)};
Z.prototype.bz=function(){if(this.Ez===xs){for(var a=this.LA,b=[],c=null,d=this.network.vertexes.i;d.next();){var e=d.value;null===c?c=e.mb.copy():c.ci(e.mb);var f=b[e.level],f=void 0===f?Ws(e):Math.max(f,Ws(e));b[e.level]=f}for(d=0;d<b.length;d++)void 0===b[d]&&(b[d]=0);90===this.angle||270===this.angle?(c.Rf(this.nodeSpacing/2,this.layerSpacing),e=new y(-this.nodeSpacing/2,-this.layerSpacing/2)):(c.Rf(this.layerSpacing,this.nodeSpacing/2),e=new y(-this.layerSpacing/2,-this.nodeSpacing/2));var f=
[],c=90===this.angle||270===this.angle?c.width:c.height,h=0;if(180===this.angle||270===this.angle)for(d=0;d<a.length;d++)h+=a[d]+b[d];for(d=0;d<a.length;d++){var k=a[d]+b[d];270===this.angle?(h-=k,f.push(new B(0,h,c,k))):90===this.angle?(f.push(new B(0,h,c,k)),h+=k):180===this.angle?(h-=k,f.push(new B(h,0,k,c))):(f.push(new B(h,0,k,c)),h+=k)}this.commitLayers(f,e)}};Z.prototype.commitLayers=function(){};Z.prototype.commitLinks=function(){for(var a=this.network.edges.i;a.next();)a.value.commit()};
Z.prototype.kA=function(){for(var a=this.vd.i;a.next();){var b=a.value;b instanceof ps&&ut(this,b)}};function ut(a,b){if(null!==b){a.setPortSpots(b);for(var c=b.children,d=c.length,e=0;e<d;e++)ut(a,c[e])}}
Z.prototype.setPortSpots=function(a){var b=a.alignment;if(Ks(b)){var c=this.Ef===ls,d=Ts(a),e;switch(d){case 0:e=rc;break;case 90:e=sc;break;case 180:e=qc;break;default:e=pc}var f=a.children,h=f.length;switch(b){case Ls:case As:for(b=0;b<h;b++){var k=f[b],k=(c?k.lc:k.$b).first();if(null!==k&&(k=k.link,null!==k)){var l=90===d||270===d?qc:pc;if(1===h||b===h-1&&1===h%2)switch(d){case 0:l=qc;break;case 90:l=pc;break;case 180:l=rc;break;default:l=sc}else 0===b%2&&(l=90===d||270===d?rc:sc);c?(a.setsPortSpot&&
(k.xb=e),a.setsChildPortSpot&&(k.yb=l)):(a.setsPortSpot&&(k.xb=l),a.setsChildPortSpot&&(k.yb=e))}}break;case Ms:l=90===d||270===d?rc:sc;for(d=c?a.$b:a.lc;d.next();)k=d.value.link,null!==k&&(c?(a.setsPortSpot&&(k.xb=e),a.setsChildPortSpot&&(k.yb=l)):(a.setsPortSpot&&(k.xb=l),a.setsChildPortSpot&&(k.yb=e)));break;case Ns:for(l=90===d||270===d?qc:pc,d=c?a.$b:a.lc;d.next();)k=d.value.link,null!==k&&(c?(a.setsPortSpot&&(k.xb=e),a.setsChildPortSpot&&(k.yb=l)):(a.setsPortSpot&&(k.xb=l),a.setsChildPortSpot&&
(k.yb=e)))}}else if(c=Ts(a),this.Ef===ls)for(e=a.$b;e.next();){if(d=e.value.link,null!==d){if(a.setsPortSpot)if(a.portSpot.Uc())switch(c){case 0:d.xb=rc;break;case 90:d.xb=sc;break;case 180:d.xb=qc;break;default:d.xb=pc}else d.xb=a.portSpot;if(a.setsChildPortSpot)if(a.childPortSpot.Uc())switch(c){case 0:d.yb=qc;break;case 90:d.yb=pc;break;case 180:d.yb=rc;break;default:d.yb=sc}else d.yb=a.childPortSpot}}else for(e=a.lc;e.next();)if(d=e.value.link,null!==d){if(a.setsPortSpot)if(a.portSpot.Uc())switch(c){case 0:d.yb=
rc;break;case 90:d.yb=sc;break;case 180:d.yb=qc;break;default:d.yb=pc}else d.yb=a.portSpot;if(a.setsChildPortSpot)if(a.childPortSpot.Uc())switch(c){case 0:d.xb=qc;break;case 90:d.xb=pc;break;case 180:d.xb=rc;break;default:d.xb=sc}else d.xb=a.childPortSpot}};function Ts(a){a=a.angle;return 45>=a?0:135>=a?90:225>=a?180:315>=a?270:0}
function Ws(a){var b=Ts(a),b=90===b||270===b,c=a.layerSpacing;if(0<a.layerSpacingParentOverlap)var d=Math.min(1,a.layerSpacingParentOverlap),c=c-(b?a.height*d:a.width*d);c<(b?-a.height:-a.width)&&(c=b?-a.height:-a.width);return c}function Xs(a){var b=Ts(a),b=90===b||270===b,c=a.nodeIndent;if(0<a.nodeIndentPastParent)var d=Math.min(1,a.nodeIndentPastParent),c=c+(b?a.width*d:a.height*d);return c=Math.max(0,c)}
v.defineProperty(Z,{AK:"roots"},function(){return this.vd},function(a){this.vd!==a&&(v.A(a,J,Z,"roots"),this.vd=a,this.H())});v.defineProperty(Z,{path:"path"},function(){return this.Jr},function(a){this.Jr!==a&&(v.pb(a,Z,Z,"path"),this.Jr=a,this.H())});v.defineProperty(Z,{NI:"treeStyle"},function(){return this.Es},function(a){this.fd!==a&&(v.pb(a,Z,Z,"treeStyle"),a===ms||a===Ds||a===Es||a===Cs)&&(this.Es=a,this.H())});
v.defineProperty(Z,{Ez:"layerStyle"},function(){return this.lv},function(a){this.fd!==a&&(v.pb(a,Z,Z,"layerStyle"),a===ns||a===ys||a===xs)&&(this.lv=a,this.H())});v.defineProperty(Z,{comments:"comments"},function(){return this.vh},function(a){this.vh!==a&&(v.j(a,"boolean",Z,"comments"),this.vh=a,this.H())});v.defineProperty(Z,{Of:"arrangement"},function(){return this.fd},function(a){this.fd!==a&&(v.pb(a,Z,Z,"arrangement"),a===os||a===tt||a===rs)&&(this.fd=a,this.H())});
v.defineProperty(Z,{gD:"arrangementSpacing"},function(){return this.cg},function(a){v.A(a,ia,Z,"arrangementSpacing");this.cg.K(a)||(this.cg.assign(a),this.H())});v.defineProperty(Z,{zK:"rootDefaults"},function(){return this.ra},function(a){this.ra!==a&&(v.A(a,ps,Z,"rootDefaults"),this.ra=a,this.H())});v.defineProperty(Z,{eJ:"alternateDefaults"},function(){return this.ta},function(a){this.ta!==a&&(v.A(a,ps,Z,"alternateDefaults"),this.ta=a,this.H())});
v.defineProperty(Z,{sorting:"sorting"},function(){return this.ra.sorting},function(a){this.ra.sorting!==a&&(v.pb(a,Z,Z,"sorting"),a===Fs||a===Gs||a===Hs||Is)&&(this.ra.sorting=a,this.H())});v.defineProperty(Z,{comparer:"comparer"},function(){return this.ra.comparer},function(a){this.ra.comparer!==a&&(v.j(a,"function",Z,"comparer"),this.ra.comparer=a,this.H())});
v.defineProperty(Z,{angle:"angle"},function(){return this.ra.angle},function(a){this.ra.angle!==a&&(v.j(a,"number",Z,"angle"),0===a||90===a||180===a||270===a?(this.ra.angle=a,this.H()):v.k("TreeLayout.angle must be 0, 90, 180, or 270"))});v.defineProperty(Z,{alignment:"alignment"},function(){return this.ra.alignment},function(a){this.ra.alignment!==a&&(v.pb(a,Z,Z,"alignment"),this.ra.alignment=a,this.H())});
v.defineProperty(Z,{nodeIndent:"nodeIndent"},function(){return this.ra.nodeIndent},function(a){this.ra.nodeIndent!==a&&(v.j(a,"number",Z,"nodeIndent"),0<=a&&(this.ra.nodeIndent=a,this.H()))});v.defineProperty(Z,{nodeIndentPastParent:"nodeIndentPastParent"},function(){return this.ra.nodeIndentPastParent},function(a){this.ra.nodeIndentPastParent!==a&&(v.j(a,"number",Z,"nodeIndentPastParent"),0<=a&&1>=a&&(this.ra.nodeIndentPastParent=a,this.H()))});
v.defineProperty(Z,{nodeSpacing:"nodeSpacing"},function(){return this.ra.nodeSpacing},function(a){this.ra.nodeSpacing!==a&&(v.j(a,"number",Z,"nodeSpacing"),this.ra.nodeSpacing=a,this.H())});v.defineProperty(Z,{layerSpacing:"layerSpacing"},function(){return this.ra.layerSpacing},function(a){this.ra.layerSpacing!==a&&(v.j(a,"number",Z,"layerSpacing"),this.ra.layerSpacing=a,this.H())});
v.defineProperty(Z,{layerSpacingParentOverlap:"layerSpacingParentOverlap"},function(){return this.ra.layerSpacingParentOverlap},function(a){this.ra.layerSpacingParentOverlap!==a&&(v.j(a,"number",Z,"layerSpacingParentOverlap"),0<=a&&1>=a&&(this.ra.layerSpacingParentOverlap=a,this.H()))});v.defineProperty(Z,{compaction:"compaction"},function(){return this.ra.compaction},function(a){this.ra.compaction!==a&&(v.pb(a,Z,Z,"compaction"),a===Qs||a===Ss)&&(this.ra.compaction=a,this.H())});
v.defineProperty(Z,{breadthLimit:"breadthLimit"},function(){return this.ra.breadthLimit},function(a){this.ra.breadthLimit!==a&&(v.j(a,"number",Z,"breadthLimit"),0<=a&&(this.ra.breadthLimit=a,this.H()))});v.defineProperty(Z,{rowSpacing:"rowSpacing"},function(){return this.ra.rowSpacing},function(a){this.ra.rowSpacing!==a&&(v.j(a,"number",Z,"rowSpacing"),this.ra.rowSpacing=a,this.H())});
v.defineProperty(Z,{rowIndent:"rowIndent"},function(){return this.ra.rowIndent},function(a){this.ra.rowIndent!==a&&(v.j(a,"number",Z,"rowIndent"),0<=a&&(this.ra.rowIndent=a,this.H()))});v.defineProperty(Z,{commentSpacing:"commentSpacing"},function(){return this.ra.commentSpacing},function(a){this.ra.commentSpacing!==a&&(v.j(a,"number",Z,"commentSpacing"),this.ra.commentSpacing=a,this.H())});
v.defineProperty(Z,{commentMargin:"commentMargin"},function(){return this.ra.commentMargin},function(a){this.ra.commentMargin!==a&&(v.j(a,"number",Z,"commentMargin"),this.ra.commentMargin=a,this.H())});v.defineProperty(Z,{setsPortSpot:"setsPortSpot"},function(){return this.ra.setsPortSpot},function(a){this.ra.setsPortSpot!==a&&(v.j(a,"boolean",Z,"setsPortSpot"),this.ra.setsPortSpot=a,this.H())});
v.defineProperty(Z,{portSpot:"portSpot"},function(){return this.ra.portSpot},function(a){v.A(a,L,Z,"portSpot");this.ra.portSpot.K(a)||(this.ra.portSpot=a,this.H())});v.defineProperty(Z,{setsChildPortSpot:"setsChildPortSpot"},function(){return this.ra.setsChildPortSpot},function(a){this.ra.setsChildPortSpot!==a&&(v.j(a,"boolean",Z,"setsChildPortSpot"),this.ra.setsChildPortSpot=a,this.H())});
v.defineProperty(Z,{childPortSpot:"childPortSpot"},function(){return this.ra.childPortSpot},function(a){v.A(a,L,Z,"childPortSpot");this.ra.childPortSpot.K(a)||(this.ra.childPortSpot=a,this.H())});v.defineProperty(Z,{pJ:"alternateSorting"},function(){return this.ta.sorting},function(a){this.ta.sorting!==a&&(v.pb(a,Z,Z,"alternateSorting"),a===Fs||a===Gs||a===Hs||Is)&&(this.ta.sorting=a,this.H())});
v.defineProperty(Z,{dJ:"alternateComparer"},function(){return this.ta.comparer},function(a){this.ta.comparer!==a&&(v.j(a,"function",Z,"alternateComparer"),this.ta.comparer=a,this.H())});v.defineProperty(Z,{YI:"alternateAngle"},function(){return this.ta.angle},function(a){this.ta.angle!==a&&(v.j(a,"number",Z,"alternateAngle"),0===a||90===a||180===a||270===a)&&(this.ta.angle=a,this.H())});
v.defineProperty(Z,{XI:"alternateAlignment"},function(){return this.ta.alignment},function(a){this.ta.alignment!==a&&(v.pb(a,Z,Z,"alternateAlignment"),this.ta.alignment=a,this.H())});v.defineProperty(Z,{hJ:"alternateNodeIndent"},function(){return this.ta.nodeIndent},function(a){this.ta.nodeIndent!==a&&(v.j(a,"number",Z,"alternateNodeIndent"),0<=a&&(this.ta.nodeIndent=a,this.H()))});
v.defineProperty(Z,{iJ:"alternateNodeIndentPastParent"},function(){return this.ta.nodeIndentPastParent},function(a){this.ta.nodeIndentPastParent!==a&&(v.j(a,"number",Z,"alternateNodeIndentPastParent"),0<=a&&1>=a&&(this.ta.nodeIndentPastParent=a,this.H()))});v.defineProperty(Z,{jJ:"alternateNodeSpacing"},function(){return this.ta.nodeSpacing},function(a){this.ta.nodeSpacing!==a&&(v.j(a,"number",Z,"alternateNodeSpacing"),this.ta.nodeSpacing=a,this.H())});
v.defineProperty(Z,{fJ:"alternateLayerSpacing"},function(){return this.ta.layerSpacing},function(a){this.ta.layerSpacing!==a&&(v.j(a,"number",Z,"alternateLayerSpacing"),this.ta.layerSpacing=a,this.H())});v.defineProperty(Z,{gJ:"alternateLayerSpacingParentOverlap"},function(){return this.ta.layerSpacingParentOverlap},function(a){this.ta.layerSpacingParentOverlap!==a&&(v.j(a,"number",Z,"alternateLayerSpacingParentOverlap"),0<=a&&1>=a&&(this.ta.layerSpacingParentOverlap=a,this.H()))});
v.defineProperty(Z,{cJ:"alternateCompaction"},function(){return this.ta.compaction},function(a){this.ta.compaction!==a&&(v.pb(a,Z,Z,"alternateCompaction"),a===Qs||a===Ss)&&(this.ta.compaction=a,this.H())});v.defineProperty(Z,{ZI:"alternateBreadthLimit"},function(){return this.ta.breadthLimit},function(a){this.ta.breadthLimit!==a&&(v.j(a,"number",Z,"alternateBreadthLimit"),0<=a&&(this.ta.breadthLimit=a,this.H()))});
v.defineProperty(Z,{mJ:"alternateRowSpacing"},function(){return this.ta.rowSpacing},function(a){this.ta.rowSpacing!==a&&(v.j(a,"number",Z,"alternateRowSpacing"),this.ta.rowSpacing=a,this.H())});v.defineProperty(Z,{lJ:"alternateRowIndent"},function(){return this.ta.rowIndent},function(a){this.ta.rowIndent!==a&&(v.j(a,"number",Z,"alternateRowIndent"),0<=a&&(this.ta.rowIndent=a,this.H()))});
v.defineProperty(Z,{bJ:"alternateCommentSpacing"},function(){return this.ta.commentSpacing},function(a){this.ta.commentSpacing!==a&&(v.j(a,"number",Z,"alternateCommentSpacing"),this.ta.commentSpacing=a,this.H())});v.defineProperty(Z,{aJ:"alternateCommentMargin"},function(){return this.ta.commentMargin},function(a){this.ta.commentMargin!==a&&(v.j(a,"number",Z,"alternateCommentMargin"),this.ta.commentMargin=a,this.H())});
v.defineProperty(Z,{oJ:"alternateSetsPortSpot"},function(){return this.ta.setsPortSpot},function(a){this.ta.setsPortSpot!==a&&(v.j(a,"boolean",Z,"alternateSetsPortSpot"),this.ta.setsPortSpot=a,this.H())});v.defineProperty(Z,{kJ:"alternatePortSpot"},function(){return this.ta.portSpot},function(a){v.A(a,L,Z,"alternatePortSpot");this.ta.portSpot.K(a)||(this.ta.portSpot=a,this.H())});
v.defineProperty(Z,{nJ:"alternateSetsChildPortSpot"},function(){return this.ta.setsChildPortSpot},function(a){this.ta.setsChildPortSpot!==a&&(v.j(a,"boolean",Z,"alternateSetsChildPortSpot"),this.ta.setsChildPortSpot=a,this.H())});v.defineProperty(Z,{$I:"alternateChildPortSpot"},function(){return this.ta.childPortSpot},function(a){v.A(a,L,Z,"alternateChildPortSpot");this.ta.childPortSpot.K(a)||(this.ta.childPortSpot=a,this.H())});var ks;Z.PathDefault=ks=v.p(Z,"PathDefault",-1);var ls;
Z.PathDestination=ls=v.p(Z,"PathDestination",0);var ss;Z.PathSource=ss=v.p(Z,"PathSource",1);var Fs;Z.SortingForwards=Fs=v.p(Z,"SortingForwards",10);var Gs;Z.SortingReverse=Gs=v.p(Z,"SortingReverse",11);var Hs;Z.SortingAscending=Hs=v.p(Z,"SortingAscending",12);var Is;Z.SortingDescending=Is=v.p(Z,"SortingDescending",13);var kt;Z.AlignmentCenterSubtrees=kt=v.p(Z,"AlignmentCenterSubtrees",20);var Js;Z.AlignmentCenterChildren=Js=v.p(Z,"AlignmentCenterChildren",21);var Us;
Z.AlignmentStart=Us=v.p(Z,"AlignmentStart",22);var Vs;Z.AlignmentEnd=Vs=v.p(Z,"AlignmentEnd",23);var Ls;Z.AlignmentBus=Ls=v.p(Z,"AlignmentBus",24);var As;Z.AlignmentBusBranching=As=v.p(Z,"AlignmentBusBranching",25);var Ms;Z.AlignmentTopLeftBus=Ms=v.p(Z,"AlignmentTopLeftBus",26);var Ns;Z.AlignmentBottomRightBus=Ns=v.p(Z,"AlignmentBottomRightBus",27);var Qs;Z.CompactionNone=Qs=v.p(Z,"CompactionNone",30);var Ss;Z.CompactionBlock=Ss=v.p(Z,"CompactionBlock",31);var ms;
Z.StyleLayered=ms=v.p(Z,"StyleLayered",40);var Es;Z.StyleLastParents=Es=v.p(Z,"StyleLastParents",41);var Ds;Z.StyleAlternating=Ds=v.p(Z,"StyleAlternating",42);var Cs;Z.StyleRootOnly=Cs=v.p(Z,"StyleRootOnly",43);var os;Z.ArrangementVertical=os=v.p(Z,"ArrangementVertical",50);var tt;Z.ArrangementHorizontal=tt=v.p(Z,"ArrangementHorizontal",51);var rs;Z.ArrangementFixedRoots=rs=v.p(Z,"ArrangementFixedRoots",52);var ns;Z.LayerIndividual=ns=v.p(Z,"LayerIndividual",60);var ys;
Z.LayerSiblings=ys=v.p(Z,"LayerSiblings",61);var xs;Z.LayerUniform=xs=v.p(Z,"LayerUniform",62);function qs(){Zf.call(this)}v.Ia(qs,Zf);v.ea("TreeNetwork",qs);qs.prototype.createVertex=function(){return new ps};qs.prototype.createEdge=function(){return new vt};
function ps(){nq.call(this);this.initialized=!1;this.parent=null;this.children=[];this.maxGenerationCount=this.maxChildrenCount=this.descendantCount=this.level=0;this.comments=null;this.ma=new y(0,0);this.fb=new ia(0,0);this.La=new y(0,0);this.Bp=this.Ap=this.pI=!1;this.Rt=this.zt=null;this.sorting=Fs;this.comparer=tq;this.angle=0;this.alignment=Js;this.nodeIndentPastParent=this.nodeIndent=0;this.nodeSpacing=20;this.layerSpacing=50;this.layerSpacingParentOverlap=0;this.compaction=Ss;this.breadthLimit=
0;this.rowSpacing=25;this.commentSpacing=this.rowIndent=10;this.commentMargin=20;this.setsPortSpot=!0;this.portSpot=kc;this.setsChildPortSpot=!0;this.childPortSpot=kc}v.Ia(ps,nq);v.ea("TreeVertex",ps);
ps.prototype.copyInheritedPropertiesFrom=function(a){null!==a&&(this.sorting=a.sorting,this.comparer=a.comparer,this.angle=a.angle,this.alignment=a.alignment,this.nodeIndent=a.nodeIndent,this.nodeIndentPastParent=a.nodeIndentPastParent,this.nodeSpacing=a.nodeSpacing,this.layerSpacing=a.layerSpacing,this.layerSpacingParentOverlap=a.layerSpacingParentOverlap,this.compaction=a.compaction,this.breadthLimit=a.breadthLimit,this.rowSpacing=a.rowSpacing,this.rowIndent=a.rowIndent,this.commentSpacing=a.commentSpacing,
this.commentMargin=a.commentMargin,this.setsPortSpot=a.setsPortSpot,this.portSpot=a.portSpot,this.setsChildPortSpot=a.setsChildPortSpot,this.childPortSpot=a.childPortSpot)};v.u(ps,{Dm:"childrenCount"},function(){return this.children.length});v.defineProperty(ps,{yK:"relativePosition"},function(){return this.ma},function(a){this.ma.set(a)});v.defineProperty(ps,{KK:"subtreeSize"},function(){return this.fb},function(a){this.fb.set(a)});
v.defineProperty(ps,{JK:"subtreeOffset"},function(){return this.La},function(a){this.La.set(a)});function vt(){oq.call(this);this.Qr=new y(0,0)}v.Ia(vt,oq);v.ea("TreeEdge",vt);
vt.prototype.commit=function(){var a=this.link;if(null!==a&&!a.rl){var b=this.network.Pb,c=null,d=null;switch(b.Ef){case ls:c=this.fromVertex;d=this.toVertex;break;case ss:c=this.toVertex;d=this.fromVertex;break;default:v.k("Unhandled path value "+b.Ef.toString())}if(null!==c&&null!==d)if(b=this.Qr,0!==b.x||0!==b.y||c.pI){var d=c.mb,e=Ts(c),f=Ws(c),h=c.rowSpacing;a.gn();var k=a.Je===Hi,l=a.jc,m=0,n,p;a.Cl();if(l||k){for(m=2;4<a.oa;)a.CE(2);n=a.l(1);p=a.l(2)}else{for(m=1;3<a.oa;)a.CE(1);n=a.l(0);p=
a.l(a.oa-1)}var q=a.l(a.oa-1),r=0;0===e?(c.alignment===Vs?(r=d.bottom+b.y,0===b.y&&n.y>q.y+c.rowIndent&&(r=Math.min(r,Math.max(n.y,r-Xs(c))))):c.alignment===Us?(r=d.top+b.y,0===b.y&&n.y<q.y-c.rowIndent&&(r=Math.max(r,Math.min(n.y,r+Xs(c))))):r=c.Ap||c.Bp&&1===c.maxGenerationCount?d.top-c.La.y+b.y:d.y+d.height/2+b.y,k?(a.w(m,n.x,r),m++,a.w(m,d.right+f,r),m++,a.w(m,d.right+f+(b.x-h)/3,r),m++,a.w(m,d.right+f+2*(b.x-h)/3,r),m++,a.w(m,d.right+f+(b.x-h),r),m++,a.w(m,p.x,r)):(l&&(a.w(m,d.right+f/2,n.y),
m++),a.w(m,d.right+f/2,r),m++,a.w(m,d.right+f+b.x-(l?h/2:h),r),m++,l&&a.w(m,a.l(m-1).x,p.y))):90===e?(c.alignment===Vs?(r=d.right+b.x,0===b.x&&n.x>q.x+c.rowIndent&&(r=Math.min(r,Math.max(n.x,r-Xs(c))))):c.alignment===Us?(r=d.left+b.x,0===b.x&&n.x<q.x-c.rowIndent&&(r=Math.max(r,Math.min(n.x,r+Xs(c))))):r=c.Ap||c.Bp&&1===c.maxGenerationCount?d.left-c.La.x+b.x:d.x+d.width/2+b.x,k?(a.w(m,r,n.y),m++,a.w(m,r,d.bottom+f),m++,a.w(m,r,d.bottom+f+(b.y-h)/3),m++,a.w(m,r,d.bottom+f+2*(b.y-h)/3),m++,a.w(m,r,d.bottom+
f+(b.y-h)),m++,a.w(m,r,p.y)):(l&&(a.w(m,n.x,d.bottom+f/2),m++),a.w(m,r,d.bottom+f/2),m++,a.w(m,r,d.bottom+f+b.y-(l?h/2:h)),m++,l&&a.w(m,p.x,a.l(m-1).y))):180===e?(c.alignment===Vs?(r=d.bottom+b.y,0===b.y&&n.y>q.y+c.rowIndent&&(r=Math.min(r,Math.max(n.y,r-Xs(c))))):c.alignment===Us?(r=d.top+b.y,0===b.y&&n.y<q.y-c.rowIndent&&(r=Math.max(r,Math.min(n.y,r+Xs(c))))):r=c.Ap||c.Bp&&1===c.maxGenerationCount?d.top-c.La.y+b.y:d.y+d.height/2+b.y,k?(a.w(m,n.x,r),m++,a.w(m,d.left-f,r),m++,a.w(m,d.left-f+(b.x+
h)/3,r),m++,a.w(m,d.left-f+2*(b.x+h)/3,r),m++,a.w(m,d.left-f+(b.x+h),r),m++,a.w(m,p.x,r)):(l&&(a.w(m,d.left-f/2,n.y),m++),a.w(m,d.left-f/2,r),m++,a.w(m,d.left-f+b.x+(l?h/2:h),r),m++,l&&a.w(m,a.l(m-1).x,p.y))):270===e?(c.alignment===Vs?(r=d.right+b.x,0===b.x&&n.x>q.x+c.rowIndent&&(r=Math.min(r,Math.max(n.x,r-Xs(c))))):c.alignment===Us?(r=d.left+b.x,0===b.x&&n.x<q.x-c.rowIndent&&(r=Math.max(r,Math.min(n.x,r+Xs(c))))):r=c.Ap||c.Bp&&1===c.maxGenerationCount?d.left-c.La.x+b.x:d.x+d.width/2+b.x,k?(a.w(m,
r,n.y),m++,a.w(m,r,d.top-f),m++,a.w(m,r,d.top-f+(b.y+h)/3),m++,a.w(m,r,d.top-f+2*(b.y+h)/3),m++,a.w(m,r,d.top-f+(b.y+h)),m++,a.w(m,r,p.y)):(l&&(a.w(m,n.x,d.top-f/2),m++),a.w(m,r,d.top-f/2),m++,a.w(m,r,d.top-f+b.y+(l?h/2:h)),m++,l&&a.w(m,p.x,a.l(m-1).y))):v.k("Invalid angle "+e);a.Pi()}else e=c,f=d,a=this.link,c=Ts(e),c!==Ts(f)&&(b=Ws(e),d=e.mb,e=f.mb,0===c&&e.left-d.right<b+1||90===c&&e.top-d.bottom<b+1||180===c&&d.left-e.right<b+1||270===c&&d.top-e.bottom<b+1||(a.gn(),e=a.Je===Hi,f=a.jc,h=Ks(this.fromVertex.alignment),
a.Cl(),0===c?(c=d.right+b/2,e?4===a.oa&&(b=a.l(3).y,a.W(1,c-20,a.l(1).y),a.w(2,c-20,b),a.w(3,c,b),a.w(4,c+20,b),a.W(5,a.l(5).x,b)):f?h?a.W(3,a.l(2).x,a.l(4).y):6===a.oa&&(a.W(2,c,a.l(2).y),a.W(3,c,a.l(3).y)):4===a.oa?a.w(2,c,a.l(2).y):3===a.oa?a.W(1,c,a.l(2).y):2===a.oa&&a.w(1,c,a.l(1).y)):90===c?(b=d.bottom+b/2,e?4===a.oa&&(c=a.l(3).x,a.W(1,a.l(1).x,b-20),a.w(2,c,b-20),a.w(3,c,b),a.w(4,c,b+20),a.W(5,c,a.l(5).y)):f?h?a.W(3,a.l(2).x,a.l(4).y):6===a.oa&&(a.W(2,a.l(2).x,b),a.W(3,a.l(3).x,b)):4===a.oa?
a.w(2,a.l(2).x,b):3===a.oa?a.W(1,a.l(2).x,b):2===a.oa&&a.w(1,a.l(1).x,b)):180===c?(c=d.left-b/2,e?4===a.oa&&(b=a.l(3).y,a.W(1,c+20,a.l(1).y),a.w(2,c+20,b),a.w(3,c,b),a.w(4,c-20,b),a.W(5,a.l(5).x,b)):f?h?a.W(3,a.l(2).x,a.l(4).y):6===a.oa&&(a.W(2,c,a.l(2).y),a.W(3,c,a.l(3).y)):4===a.oa?a.w(2,c,a.l(2).y):3===a.oa?a.W(1,c,a.l(2).y):2===a.oa&&a.w(1,c,a.l(1).y)):270===c&&(b=d.top-b/2,e?4===a.oa&&(c=a.l(3).x,a.W(1,a.l(1).x,b+20),a.w(2,c,b+20),a.w(3,c,b),a.w(4,c,b-20),a.W(5,c,a.l(5).y)):f?h?a.W(3,a.l(2).x,
a.l(4).y):6===a.oa&&(a.W(2,a.l(2).x,b),a.W(3,a.l(3).x,b)):4===a.oa?a.w(2,a.l(2).x,b):3===a.oa?a.W(1,a.l(2).x,b):2===a.oa&&a.w(1,a.l(1).x,b)),a.Pi()))}};v.defineProperty(vt,{xK:"relativePoint"},function(){return this.Qr},function(a){this.Qr.set(a)});function wt(){G.call(this);this.Qe=null}v.Ia(wt,G);wt.prototype.cloneProtected=function(a){G.prototype.cloneProtected.call(this,a);a.element=this.Qe.cloneNode(!0)};wt.prototype.toString=function(){return"HTMLHost("+this.Qe.toString()+")#"+v.md(this)};
wt.prototype.Wj=function(a,b){var c=this.Qe;if(null!==c){var d=this.Xa(Ab);d.x-=this.V.width/2;d.y-=this.V.height/2;d.x-=this.V.x;d.y-=this.V.y;var d=b.jF(d),e=b.hl;null===e||e.contains(c)||e.appendChild(c);e=this.transform;c.style.transform="matrix("+e.m11+","+e.m12+","+e.m21+","+e.m22+","+e.dx+","+e.dy+")";c.style.transformOrigin="0 0";e=d.y;c.style.left=d.x+"px";c.style.top=e+"px"}};
wt.prototype.mp=function(a,b,c,d){var e=this.wa;isFinite(e.width)&&(a=e.width);isFinite(e.height)&&(b=e.height);var e=this.yf,f=this.jh;c=Math.max(c,f.width);d=Math.max(d,f.height);a=Math.min(e.width,a);b=Math.min(e.height,b);a=Math.max(c,a);b=Math.max(d,b);c=this.Qe;null!==c&&(b=c.getBoundingClientRect(),a=b.width,b=b.height);Xa(this.Qc,a,b);Bm(this,0,0,a,b)};wt.prototype.Ni=function(a,b,c,d){Fm(this,a,b,c,d)};v.u(wt,{Ha:"naturalBounds"},function(){return this.Qc});
v.defineProperty(wt,{element:"element"},function(){return this.Qe},function(a){var b=this.Qe;b!==a&&(a instanceof HTMLElement||v.k("HTMLHost.element must be an instance of HTMLElement."),this.Qe=a,a.className="HTMLHost",this.h("element",b,a),this.pa())});ea.version="1.6.14";
window&&(window.module&&"object"===typeof window.module&&"object"===typeof window.module.exports?window.module.exports=ea:window.define&&"function"===typeof window.define&&window.define.amd?(window.go=ea,window.define(ea)):window.go=ea);"undefined"!==typeof module&&"object"===typeof module.exports&&(module.exports=ea); })(window);
Polymer({
            is: 'random-user',
            properties: {
                count: {
                    type: Number,
                    value: 3
                },
                data: {
                    type: Array,
                    notify:true
                },
                options: {
                    type: Object,
                    value: function() {
                        return {"nat":"de", "results":"4","inc":"name,location,picture"}
                    }
                }
            },
            ready: function() {
                this.options.results = this.count;
            },
               
            handleResponse(event) {
                //console.log(event.detail.response.results[0]);
                this.data = event.detail.response.results;
            } 
            
        });
Polymer({
            is: 'schema-fake',
            properties: {
                schema: {type:String},
                data: {
                    type: Array,
                    notify: true
                },
                persons: {
                    type: Array,
                    notify: true
                },
                options: {
                    type: Object,
                     value: function() {
                        return {}
                    }
                    
                }
            },
              handleResponse(event) {
                //console.log(event.detail.response.results[0]);
                var schemadata = event.detail.response;
                 this.data = jsf(schemadata);
                 console.log(this.data.length)
            },
            ready: function() {
                var self =this;
                jsf.extend('faker', function(faker){
                    faker.locale = "de"; // or any other language
                    faker.connect = {
                        statement: function(length) {
                        return self.persons[i].name.last;
                        }
                    };
                    return faker;
                });
                var url = this.resolveUrl(this.schema);
               
            }
        });
/// <reference path="model.ts" />
Polymer({
    is: 'krimi-story',
    properties: {
        actions: Array,
        persons: Array,
        gamedata: {
            type: Object,
            notify: true,
            computed: 'initGame(actions, persons)'
        }
    },
    ready: function () {
        //this.data = personlist;
    },
    gameModified: function (cr) {
        console.log("test" + cr);
    },
    initGame: function (actions, persons) {
        if (this.gamedata == undefined) {
            var gd = {
                actions: actions,
                persons: persons,
                places: [{ pname: "Bahnhof" }, { pname: "Kino" }, { pname: "Badezimmer" }],
                erkundet: [],
                init: function () { return this; },
                getPersonTimeline: function () {
                    var map = new Map();
                    map.set("7:00", persons[0]);
                    return map;
                },
                getRandomAction: function () { return actions[0]; }
            };
            console.log(gd);
            return gd;
        }
        return this.gamedata;
    }
});
Polymer({
            is: 'krimi-graph',
            properties: {
                data: {
                    type: Object
                }
            },
            ready: function() {
                this.init();
            },
            init: function() {
                var $ = go.GraphObject.make; // for conciseness in defining templates

                myDiagram = $(go.Diagram, "graph", // create a Diagram for the DIV HTML element
                    {
                        initialContentAlignment: go.Spot.Center, // center the content
                        "undoManager.isEnabled": true // enable undo & redo
                    });

                // define a simple Node template
                myDiagram.nodeTemplate =
                    $(go.Node, "Auto", // the Shape will go around the TextBlock
                        $(go.Shape, "RoundedRectangle",
                            // Shape.fill is bound to Node.data.color
                            new go.Binding("fill", "color")),
                        $(go.TextBlock, {
                                margin: 3
                            }, // some room around the text
                            // TextBlock.text is bound to Node.data.key
                            new go.Binding("text", "key"))
                    );

                // but use the default Link template, by not setting Diagram.linkTemplate

                // create the model data that will be represented by Nodes and Links
                myDiagram.model = new go.GraphLinksModel(
                    [{
                        key: "Alpha",
                        color: "lightblue"
                    }, {
                        key: "Beta",
                        color: "orange"
                    }, {
                        key: "Gamma",
                        color: "lightgreen"
                    }, {
                        key: "Delta",
                        color: "pink"
                    }], [{
                        from: "Alpha",
                        to: "Beta"
                    }, {
                        from: "Alpha",
                        to: "Gamma"
                    }, {
                        from: "Beta",
                        to: "Beta"
                    }, {
                        from: "Gamma",
                        to: "Delta"
                    }, {
                        from: "Delta",
                        to: "Alpha"
                    }]);
            }
        });